
build/ODriveFirmware.elf:     file format elf32-littlearm


Disassembly of section .text:

08000190 <strcmp>:
 8000190:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000194:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000198:	2a01      	cmp	r2, #1
 800019a:	bf28      	it	cs
 800019c:	429a      	cmpcs	r2, r3
 800019e:	d0f7      	beq.n	8000190 <strcmp>
 80001a0:	1ad0      	subs	r0, r2, r3
 80001a2:	4770      	bx	lr
	...

080001b0 <memchr>:
 80001b0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001b4:	2a10      	cmp	r2, #16
 80001b6:	db2b      	blt.n	8000210 <memchr+0x60>
 80001b8:	f010 0f07 	tst.w	r0, #7
 80001bc:	d008      	beq.n	80001d0 <memchr+0x20>
 80001be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001c2:	3a01      	subs	r2, #1
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d02d      	beq.n	8000224 <memchr+0x74>
 80001c8:	f010 0f07 	tst.w	r0, #7
 80001cc:	b342      	cbz	r2, 8000220 <memchr+0x70>
 80001ce:	d1f6      	bne.n	80001be <memchr+0xe>
 80001d0:	b4f0      	push	{r4, r5, r6, r7}
 80001d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001da:	f022 0407 	bic.w	r4, r2, #7
 80001de:	f07f 0700 	mvns.w	r7, #0
 80001e2:	2300      	movs	r3, #0
 80001e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001e8:	3c08      	subs	r4, #8
 80001ea:	ea85 0501 	eor.w	r5, r5, r1
 80001ee:	ea86 0601 	eor.w	r6, r6, r1
 80001f2:	fa85 f547 	uadd8	r5, r5, r7
 80001f6:	faa3 f587 	sel	r5, r3, r7
 80001fa:	fa86 f647 	uadd8	r6, r6, r7
 80001fe:	faa5 f687 	sel	r6, r5, r7
 8000202:	b98e      	cbnz	r6, 8000228 <memchr+0x78>
 8000204:	d1ee      	bne.n	80001e4 <memchr+0x34>
 8000206:	bcf0      	pop	{r4, r5, r6, r7}
 8000208:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800020c:	f002 0207 	and.w	r2, r2, #7
 8000210:	b132      	cbz	r2, 8000220 <memchr+0x70>
 8000212:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000216:	3a01      	subs	r2, #1
 8000218:	ea83 0301 	eor.w	r3, r3, r1
 800021c:	b113      	cbz	r3, 8000224 <memchr+0x74>
 800021e:	d1f8      	bne.n	8000212 <memchr+0x62>
 8000220:	2000      	movs	r0, #0
 8000222:	4770      	bx	lr
 8000224:	3801      	subs	r0, #1
 8000226:	4770      	bx	lr
 8000228:	2d00      	cmp	r5, #0
 800022a:	bf06      	itte	eq
 800022c:	4635      	moveq	r5, r6
 800022e:	3803      	subeq	r0, #3
 8000230:	3807      	subne	r0, #7
 8000232:	f015 0f01 	tst.w	r5, #1
 8000236:	d107      	bne.n	8000248 <memchr+0x98>
 8000238:	3001      	adds	r0, #1
 800023a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800023e:	bf02      	ittt	eq
 8000240:	3001      	addeq	r0, #1
 8000242:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000246:	3001      	addeq	r0, #1
 8000248:	bcf0      	pop	{r4, r5, r6, r7}
 800024a:	3801      	subs	r0, #1
 800024c:	4770      	bx	lr
 800024e:	bf00      	nop

08000250 <strlen>:
 8000250:	4603      	mov	r3, r0
 8000252:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000256:	2a00      	cmp	r2, #0
 8000258:	d1fb      	bne.n	8000252 <strlen+0x2>
 800025a:	1a18      	subs	r0, r3, r0
 800025c:	3801      	subs	r0, #1
 800025e:	4770      	bx	lr

08000260 <__aeabi_drsub>:
 8000260:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000264:	e002      	b.n	800026c <__adddf3>
 8000266:	bf00      	nop

08000268 <__aeabi_dsub>:
 8000268:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800026c <__adddf3>:
 800026c:	b530      	push	{r4, r5, lr}
 800026e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000272:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000276:	ea94 0f05 	teq	r4, r5
 800027a:	bf08      	it	eq
 800027c:	ea90 0f02 	teqeq	r0, r2
 8000280:	bf1f      	itttt	ne
 8000282:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000286:	ea55 0c02 	orrsne.w	ip, r5, r2
 800028a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800028e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000292:	f000 80e2 	beq.w	800045a <__adddf3+0x1ee>
 8000296:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800029a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800029e:	bfb8      	it	lt
 80002a0:	426d      	neglt	r5, r5
 80002a2:	dd0c      	ble.n	80002be <__adddf3+0x52>
 80002a4:	442c      	add	r4, r5
 80002a6:	ea80 0202 	eor.w	r2, r0, r2
 80002aa:	ea81 0303 	eor.w	r3, r1, r3
 80002ae:	ea82 0000 	eor.w	r0, r2, r0
 80002b2:	ea83 0101 	eor.w	r1, r3, r1
 80002b6:	ea80 0202 	eor.w	r2, r0, r2
 80002ba:	ea81 0303 	eor.w	r3, r1, r3
 80002be:	2d36      	cmp	r5, #54	@ 0x36
 80002c0:	bf88      	it	hi
 80002c2:	bd30      	pophi	{r4, r5, pc}
 80002c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002d4:	d002      	beq.n	80002dc <__adddf3+0x70>
 80002d6:	4240      	negs	r0, r0
 80002d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80002e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002e8:	d002      	beq.n	80002f0 <__adddf3+0x84>
 80002ea:	4252      	negs	r2, r2
 80002ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f0:	ea94 0f05 	teq	r4, r5
 80002f4:	f000 80a7 	beq.w	8000446 <__adddf3+0x1da>
 80002f8:	f1a4 0401 	sub.w	r4, r4, #1
 80002fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000300:	db0d      	blt.n	800031e <__adddf3+0xb2>
 8000302:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000306:	fa22 f205 	lsr.w	r2, r2, r5
 800030a:	1880      	adds	r0, r0, r2
 800030c:	f141 0100 	adc.w	r1, r1, #0
 8000310:	fa03 f20e 	lsl.w	r2, r3, lr
 8000314:	1880      	adds	r0, r0, r2
 8000316:	fa43 f305 	asr.w	r3, r3, r5
 800031a:	4159      	adcs	r1, r3
 800031c:	e00e      	b.n	800033c <__adddf3+0xd0>
 800031e:	f1a5 0520 	sub.w	r5, r5, #32
 8000322:	f10e 0e20 	add.w	lr, lr, #32
 8000326:	2a01      	cmp	r2, #1
 8000328:	fa03 fc0e 	lsl.w	ip, r3, lr
 800032c:	bf28      	it	cs
 800032e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000332:	fa43 f305 	asr.w	r3, r3, r5
 8000336:	18c0      	adds	r0, r0, r3
 8000338:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800033c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000340:	d507      	bpl.n	8000352 <__adddf3+0xe6>
 8000342:	f04f 0e00 	mov.w	lr, #0
 8000346:	f1dc 0c00 	rsbs	ip, ip, #0
 800034a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800034e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000352:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000356:	d31b      	bcc.n	8000390 <__adddf3+0x124>
 8000358:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800035c:	d30c      	bcc.n	8000378 <__adddf3+0x10c>
 800035e:	0849      	lsrs	r1, r1, #1
 8000360:	ea5f 0030 	movs.w	r0, r0, rrx
 8000364:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000368:	f104 0401 	add.w	r4, r4, #1
 800036c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000370:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000374:	f080 809a 	bcs.w	80004ac <__adddf3+0x240>
 8000378:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800037c:	bf08      	it	eq
 800037e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000382:	f150 0000 	adcs.w	r0, r0, #0
 8000386:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800038a:	ea41 0105 	orr.w	r1, r1, r5
 800038e:	bd30      	pop	{r4, r5, pc}
 8000390:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000394:	4140      	adcs	r0, r0
 8000396:	eb41 0101 	adc.w	r1, r1, r1
 800039a:	3c01      	subs	r4, #1
 800039c:	bf28      	it	cs
 800039e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003a2:	d2e9      	bcs.n	8000378 <__adddf3+0x10c>
 80003a4:	f091 0f00 	teq	r1, #0
 80003a8:	bf04      	itt	eq
 80003aa:	4601      	moveq	r1, r0
 80003ac:	2000      	moveq	r0, #0
 80003ae:	fab1 f381 	clz	r3, r1
 80003b2:	bf08      	it	eq
 80003b4:	3320      	addeq	r3, #32
 80003b6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ba:	f1b3 0220 	subs.w	r2, r3, #32
 80003be:	da0c      	bge.n	80003da <__adddf3+0x16e>
 80003c0:	320c      	adds	r2, #12
 80003c2:	dd08      	ble.n	80003d6 <__adddf3+0x16a>
 80003c4:	f102 0c14 	add.w	ip, r2, #20
 80003c8:	f1c2 020c 	rsb	r2, r2, #12
 80003cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80003d0:	fa21 f102 	lsr.w	r1, r1, r2
 80003d4:	e00c      	b.n	80003f0 <__adddf3+0x184>
 80003d6:	f102 0214 	add.w	r2, r2, #20
 80003da:	bfd8      	it	le
 80003dc:	f1c2 0c20 	rsble	ip, r2, #32
 80003e0:	fa01 f102 	lsl.w	r1, r1, r2
 80003e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003e8:	bfdc      	itt	le
 80003ea:	ea41 010c 	orrle.w	r1, r1, ip
 80003ee:	4090      	lslle	r0, r2
 80003f0:	1ae4      	subs	r4, r4, r3
 80003f2:	bfa2      	ittt	ge
 80003f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003f8:	4329      	orrge	r1, r5
 80003fa:	bd30      	popge	{r4, r5, pc}
 80003fc:	ea6f 0404 	mvn.w	r4, r4
 8000400:	3c1f      	subs	r4, #31
 8000402:	da1c      	bge.n	800043e <__adddf3+0x1d2>
 8000404:	340c      	adds	r4, #12
 8000406:	dc0e      	bgt.n	8000426 <__adddf3+0x1ba>
 8000408:	f104 0414 	add.w	r4, r4, #20
 800040c:	f1c4 0220 	rsb	r2, r4, #32
 8000410:	fa20 f004 	lsr.w	r0, r0, r4
 8000414:	fa01 f302 	lsl.w	r3, r1, r2
 8000418:	ea40 0003 	orr.w	r0, r0, r3
 800041c:	fa21 f304 	lsr.w	r3, r1, r4
 8000420:	ea45 0103 	orr.w	r1, r5, r3
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	f1c4 040c 	rsb	r4, r4, #12
 800042a:	f1c4 0220 	rsb	r2, r4, #32
 800042e:	fa20 f002 	lsr.w	r0, r0, r2
 8000432:	fa01 f304 	lsl.w	r3, r1, r4
 8000436:	ea40 0003 	orr.w	r0, r0, r3
 800043a:	4629      	mov	r1, r5
 800043c:	bd30      	pop	{r4, r5, pc}
 800043e:	fa21 f004 	lsr.w	r0, r1, r4
 8000442:	4629      	mov	r1, r5
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f094 0f00 	teq	r4, #0
 800044a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800044e:	bf06      	itte	eq
 8000450:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000454:	3401      	addeq	r4, #1
 8000456:	3d01      	subne	r5, #1
 8000458:	e74e      	b.n	80002f8 <__adddf3+0x8c>
 800045a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800045e:	bf18      	it	ne
 8000460:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000464:	d029      	beq.n	80004ba <__adddf3+0x24e>
 8000466:	ea94 0f05 	teq	r4, r5
 800046a:	bf08      	it	eq
 800046c:	ea90 0f02 	teqeq	r0, r2
 8000470:	d005      	beq.n	800047e <__adddf3+0x212>
 8000472:	ea54 0c00 	orrs.w	ip, r4, r0
 8000476:	bf04      	itt	eq
 8000478:	4619      	moveq	r1, r3
 800047a:	4610      	moveq	r0, r2
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	ea91 0f03 	teq	r1, r3
 8000482:	bf1e      	ittt	ne
 8000484:	2100      	movne	r1, #0
 8000486:	2000      	movne	r0, #0
 8000488:	bd30      	popne	{r4, r5, pc}
 800048a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800048e:	d105      	bne.n	800049c <__adddf3+0x230>
 8000490:	0040      	lsls	r0, r0, #1
 8000492:	4149      	adcs	r1, r1
 8000494:	bf28      	it	cs
 8000496:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800049a:	bd30      	pop	{r4, r5, pc}
 800049c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004a0:	bf3c      	itt	cc
 80004a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004a6:	bd30      	popcc	{r4, r5, pc}
 80004a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004b4:	f04f 0000 	mov.w	r0, #0
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf1a      	itte	ne
 80004c0:	4619      	movne	r1, r3
 80004c2:	4610      	movne	r0, r2
 80004c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004c8:	bf1c      	itt	ne
 80004ca:	460b      	movne	r3, r1
 80004cc:	4602      	movne	r2, r0
 80004ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004d2:	bf06      	itte	eq
 80004d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004d8:	ea91 0f03 	teqeq	r1, r3
 80004dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80004e0:	bd30      	pop	{r4, r5, pc}
 80004e2:	bf00      	nop

080004e4 <__aeabi_ui2d>:
 80004e4:	f090 0f00 	teq	r0, #0
 80004e8:	bf04      	itt	eq
 80004ea:	2100      	moveq	r1, #0
 80004ec:	4770      	bxeq	lr
 80004ee:	b530      	push	{r4, r5, lr}
 80004f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004f8:	f04f 0500 	mov.w	r5, #0
 80004fc:	f04f 0100 	mov.w	r1, #0
 8000500:	e750      	b.n	80003a4 <__adddf3+0x138>
 8000502:	bf00      	nop

08000504 <__aeabi_i2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800051c:	bf48      	it	mi
 800051e:	4240      	negmi	r0, r0
 8000520:	f04f 0100 	mov.w	r1, #0
 8000524:	e73e      	b.n	80003a4 <__adddf3+0x138>
 8000526:	bf00      	nop

08000528 <__aeabi_f2d>:
 8000528:	0042      	lsls	r2, r0, #1
 800052a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800052e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000532:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000536:	bf1f      	itttt	ne
 8000538:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800053c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000540:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000544:	4770      	bxne	lr
 8000546:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800054a:	bf08      	it	eq
 800054c:	4770      	bxeq	lr
 800054e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000552:	bf04      	itt	eq
 8000554:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000558:	4770      	bxeq	lr
 800055a:	b530      	push	{r4, r5, lr}
 800055c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000560:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000564:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000568:	e71c      	b.n	80003a4 <__adddf3+0x138>
 800056a:	bf00      	nop

0800056c <__aeabi_ul2d>:
 800056c:	ea50 0201 	orrs.w	r2, r0, r1
 8000570:	bf08      	it	eq
 8000572:	4770      	bxeq	lr
 8000574:	b530      	push	{r4, r5, lr}
 8000576:	f04f 0500 	mov.w	r5, #0
 800057a:	e00a      	b.n	8000592 <__aeabi_l2d+0x16>

0800057c <__aeabi_l2d>:
 800057c:	ea50 0201 	orrs.w	r2, r0, r1
 8000580:	bf08      	it	eq
 8000582:	4770      	bxeq	lr
 8000584:	b530      	push	{r4, r5, lr}
 8000586:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800058a:	d502      	bpl.n	8000592 <__aeabi_l2d+0x16>
 800058c:	4240      	negs	r0, r0
 800058e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000592:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000596:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800059a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800059e:	f43f aed8 	beq.w	8000352 <__adddf3+0xe6>
 80005a2:	f04f 0203 	mov.w	r2, #3
 80005a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005aa:	bf18      	it	ne
 80005ac:	3203      	addne	r2, #3
 80005ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005b2:	bf18      	it	ne
 80005b4:	3203      	addne	r2, #3
 80005b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ba:	f1c2 0320 	rsb	r3, r2, #32
 80005be:	fa00 fc03 	lsl.w	ip, r0, r3
 80005c2:	fa20 f002 	lsr.w	r0, r0, r2
 80005c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ca:	ea40 000e 	orr.w	r0, r0, lr
 80005ce:	fa21 f102 	lsr.w	r1, r1, r2
 80005d2:	4414      	add	r4, r2
 80005d4:	e6bd      	b.n	8000352 <__adddf3+0xe6>
 80005d6:	bf00      	nop

080005d8 <__aeabi_dmul>:
 80005d8:	b570      	push	{r4, r5, r6, lr}
 80005da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80005e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005e6:	bf1d      	ittte	ne
 80005e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005ec:	ea94 0f0c 	teqne	r4, ip
 80005f0:	ea95 0f0c 	teqne	r5, ip
 80005f4:	f000 f8de 	bleq	80007b4 <__aeabi_dmul+0x1dc>
 80005f8:	442c      	add	r4, r5
 80005fa:	ea81 0603 	eor.w	r6, r1, r3
 80005fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000602:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000606:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800060a:	bf18      	it	ne
 800060c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000610:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000614:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000618:	d038      	beq.n	800068c <__aeabi_dmul+0xb4>
 800061a:	fba0 ce02 	umull	ip, lr, r0, r2
 800061e:	f04f 0500 	mov.w	r5, #0
 8000622:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000626:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800062a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800062e:	f04f 0600 	mov.w	r6, #0
 8000632:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000636:	f09c 0f00 	teq	ip, #0
 800063a:	bf18      	it	ne
 800063c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000640:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000644:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000648:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800064c:	d204      	bcs.n	8000658 <__aeabi_dmul+0x80>
 800064e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000652:	416d      	adcs	r5, r5
 8000654:	eb46 0606 	adc.w	r6, r6, r6
 8000658:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800065c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000660:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000664:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000668:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800066c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000670:	bf88      	it	hi
 8000672:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000676:	d81e      	bhi.n	80006b6 <__aeabi_dmul+0xde>
 8000678:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800067c:	bf08      	it	eq
 800067e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000682:	f150 0000 	adcs.w	r0, r0, #0
 8000686:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800068a:	bd70      	pop	{r4, r5, r6, pc}
 800068c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000690:	ea46 0101 	orr.w	r1, r6, r1
 8000694:	ea40 0002 	orr.w	r0, r0, r2
 8000698:	ea81 0103 	eor.w	r1, r1, r3
 800069c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006a0:	bfc2      	ittt	gt
 80006a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	popgt	{r4, r5, r6, pc}
 80006ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006b0:	f04f 0e00 	mov.w	lr, #0
 80006b4:	3c01      	subs	r4, #1
 80006b6:	f300 80ab 	bgt.w	8000810 <__aeabi_dmul+0x238>
 80006ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006be:	bfde      	ittt	le
 80006c0:	2000      	movle	r0, #0
 80006c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006c6:	bd70      	pople	{r4, r5, r6, pc}
 80006c8:	f1c4 0400 	rsb	r4, r4, #0
 80006cc:	3c20      	subs	r4, #32
 80006ce:	da35      	bge.n	800073c <__aeabi_dmul+0x164>
 80006d0:	340c      	adds	r4, #12
 80006d2:	dc1b      	bgt.n	800070c <__aeabi_dmul+0x134>
 80006d4:	f104 0414 	add.w	r4, r4, #20
 80006d8:	f1c4 0520 	rsb	r5, r4, #32
 80006dc:	fa00 f305 	lsl.w	r3, r0, r5
 80006e0:	fa20 f004 	lsr.w	r0, r0, r4
 80006e4:	fa01 f205 	lsl.w	r2, r1, r5
 80006e8:	ea40 0002 	orr.w	r0, r0, r2
 80006ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80006f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80006f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006f8:	fa21 f604 	lsr.w	r6, r1, r4
 80006fc:	eb42 0106 	adc.w	r1, r2, r6
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 040c 	rsb	r4, r4, #12
 8000710:	f1c4 0520 	rsb	r5, r4, #32
 8000714:	fa00 f304 	lsl.w	r3, r0, r4
 8000718:	fa20 f005 	lsr.w	r0, r0, r5
 800071c:	fa01 f204 	lsl.w	r2, r1, r4
 8000720:	ea40 0002 	orr.w	r0, r0, r2
 8000724:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800072c:	f141 0100 	adc.w	r1, r1, #0
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 0520 	rsb	r5, r4, #32
 8000740:	fa00 f205 	lsl.w	r2, r0, r5
 8000744:	ea4e 0e02 	orr.w	lr, lr, r2
 8000748:	fa20 f304 	lsr.w	r3, r0, r4
 800074c:	fa01 f205 	lsl.w	r2, r1, r5
 8000750:	ea43 0302 	orr.w	r3, r3, r2
 8000754:	fa21 f004 	lsr.w	r0, r1, r4
 8000758:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800075c:	fa21 f204 	lsr.w	r2, r1, r4
 8000760:	ea20 0002 	bic.w	r0, r0, r2
 8000764:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000768:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800076c:	bf08      	it	eq
 800076e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	f094 0f00 	teq	r4, #0
 8000778:	d10f      	bne.n	800079a <__aeabi_dmul+0x1c2>
 800077a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800077e:	0040      	lsls	r0, r0, #1
 8000780:	eb41 0101 	adc.w	r1, r1, r1
 8000784:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000788:	bf08      	it	eq
 800078a:	3c01      	subeq	r4, #1
 800078c:	d0f7      	beq.n	800077e <__aeabi_dmul+0x1a6>
 800078e:	ea41 0106 	orr.w	r1, r1, r6
 8000792:	f095 0f00 	teq	r5, #0
 8000796:	bf18      	it	ne
 8000798:	4770      	bxne	lr
 800079a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800079e:	0052      	lsls	r2, r2, #1
 80007a0:	eb43 0303 	adc.w	r3, r3, r3
 80007a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3d01      	subeq	r5, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1c6>
 80007ae:	ea43 0306 	orr.w	r3, r3, r6
 80007b2:	4770      	bx	lr
 80007b4:	ea94 0f0c 	teq	r4, ip
 80007b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007bc:	bf18      	it	ne
 80007be:	ea95 0f0c 	teqne	r5, ip
 80007c2:	d00c      	beq.n	80007de <__aeabi_dmul+0x206>
 80007c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007c8:	bf18      	it	ne
 80007ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ce:	d1d1      	bne.n	8000774 <__aeabi_dmul+0x19c>
 80007d0:	ea81 0103 	eor.w	r1, r1, r3
 80007d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007d8:	f04f 0000 	mov.w	r0, #0
 80007dc:	bd70      	pop	{r4, r5, r6, pc}
 80007de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e2:	bf06      	itte	eq
 80007e4:	4610      	moveq	r0, r2
 80007e6:	4619      	moveq	r1, r3
 80007e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ec:	d019      	beq.n	8000822 <__aeabi_dmul+0x24a>
 80007ee:	ea94 0f0c 	teq	r4, ip
 80007f2:	d102      	bne.n	80007fa <__aeabi_dmul+0x222>
 80007f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007f8:	d113      	bne.n	8000822 <__aeabi_dmul+0x24a>
 80007fa:	ea95 0f0c 	teq	r5, ip
 80007fe:	d105      	bne.n	800080c <__aeabi_dmul+0x234>
 8000800:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000804:	bf1c      	itt	ne
 8000806:	4610      	movne	r0, r2
 8000808:	4619      	movne	r1, r3
 800080a:	d10a      	bne.n	8000822 <__aeabi_dmul+0x24a>
 800080c:	ea81 0103 	eor.w	r1, r1, r3
 8000810:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000814:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000818:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800081c:	f04f 0000 	mov.w	r0, #0
 8000820:	bd70      	pop	{r4, r5, r6, pc}
 8000822:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000826:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800082a:	bd70      	pop	{r4, r5, r6, pc}

0800082c <__aeabi_ddiv>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000832:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000836:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800083a:	bf1d      	ittte	ne
 800083c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000840:	ea94 0f0c 	teqne	r4, ip
 8000844:	ea95 0f0c 	teqne	r5, ip
 8000848:	f000 f8a7 	bleq	800099a <__aeabi_ddiv+0x16e>
 800084c:	eba4 0405 	sub.w	r4, r4, r5
 8000850:	ea81 0e03 	eor.w	lr, r1, r3
 8000854:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000858:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800085c:	f000 8088 	beq.w	8000970 <__aeabi_ddiv+0x144>
 8000860:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000864:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000868:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800086c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000870:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000874:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000878:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800087c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000880:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000884:	429d      	cmp	r5, r3
 8000886:	bf08      	it	eq
 8000888:	4296      	cmpeq	r6, r2
 800088a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800088e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000892:	d202      	bcs.n	800089a <__aeabi_ddiv+0x6e>
 8000894:	085b      	lsrs	r3, r3, #1
 8000896:	ea4f 0232 	mov.w	r2, r2, rrx
 800089a:	1ab6      	subs	r6, r6, r2
 800089c:	eb65 0503 	sbc.w	r5, r5, r3
 80008a0:	085b      	lsrs	r3, r3, #1
 80008a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008d8:	085b      	lsrs	r3, r3, #1
 80008da:	ea4f 0232 	mov.w	r2, r2, rrx
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000908:	ea55 0e06 	orrs.w	lr, r5, r6
 800090c:	d018      	beq.n	8000940 <__aeabi_ddiv+0x114>
 800090e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000912:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000916:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800091a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800091e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000922:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000926:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800092a:	d1c0      	bne.n	80008ae <__aeabi_ddiv+0x82>
 800092c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000930:	d10b      	bne.n	800094a <__aeabi_ddiv+0x11e>
 8000932:	ea41 0100 	orr.w	r1, r1, r0
 8000936:	f04f 0000 	mov.w	r0, #0
 800093a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800093e:	e7b6      	b.n	80008ae <__aeabi_ddiv+0x82>
 8000940:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000944:	bf04      	itt	eq
 8000946:	4301      	orreq	r1, r0
 8000948:	2000      	moveq	r0, #0
 800094a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800094e:	bf88      	it	hi
 8000950:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000954:	f63f aeaf 	bhi.w	80006b6 <__aeabi_dmul+0xde>
 8000958:	ebb5 0c03 	subs.w	ip, r5, r3
 800095c:	bf04      	itt	eq
 800095e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000962:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000966:	f150 0000 	adcs.w	r0, r0, #0
 800096a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800096e:	bd70      	pop	{r4, r5, r6, pc}
 8000970:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000974:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000978:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800097c:	bfc2      	ittt	gt
 800097e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000982:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000986:	bd70      	popgt	{r4, r5, r6, pc}
 8000988:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800098c:	f04f 0e00 	mov.w	lr, #0
 8000990:	3c01      	subs	r4, #1
 8000992:	e690      	b.n	80006b6 <__aeabi_dmul+0xde>
 8000994:	ea45 0e06 	orr.w	lr, r5, r6
 8000998:	e68d      	b.n	80006b6 <__aeabi_dmul+0xde>
 800099a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800099e:	ea94 0f0c 	teq	r4, ip
 80009a2:	bf08      	it	eq
 80009a4:	ea95 0f0c 	teqeq	r5, ip
 80009a8:	f43f af3b 	beq.w	8000822 <__aeabi_dmul+0x24a>
 80009ac:	ea94 0f0c 	teq	r4, ip
 80009b0:	d10a      	bne.n	80009c8 <__aeabi_ddiv+0x19c>
 80009b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009b6:	f47f af34 	bne.w	8000822 <__aeabi_dmul+0x24a>
 80009ba:	ea95 0f0c 	teq	r5, ip
 80009be:	f47f af25 	bne.w	800080c <__aeabi_dmul+0x234>
 80009c2:	4610      	mov	r0, r2
 80009c4:	4619      	mov	r1, r3
 80009c6:	e72c      	b.n	8000822 <__aeabi_dmul+0x24a>
 80009c8:	ea95 0f0c 	teq	r5, ip
 80009cc:	d106      	bne.n	80009dc <__aeabi_ddiv+0x1b0>
 80009ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009d2:	f43f aefd 	beq.w	80007d0 <__aeabi_dmul+0x1f8>
 80009d6:	4610      	mov	r0, r2
 80009d8:	4619      	mov	r1, r3
 80009da:	e722      	b.n	8000822 <__aeabi_dmul+0x24a>
 80009dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009e0:	bf18      	it	ne
 80009e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009e6:	f47f aec5 	bne.w	8000774 <__aeabi_dmul+0x19c>
 80009ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009ee:	f47f af0d 	bne.w	800080c <__aeabi_dmul+0x234>
 80009f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009f6:	f47f aeeb 	bne.w	80007d0 <__aeabi_dmul+0x1f8>
 80009fa:	e712      	b.n	8000822 <__aeabi_dmul+0x24a>

080009fc <__gedf2>:
 80009fc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a00:	e006      	b.n	8000a10 <__cmpdf2+0x4>
 8000a02:	bf00      	nop

08000a04 <__ledf2>:
 8000a04:	f04f 0c01 	mov.w	ip, #1
 8000a08:	e002      	b.n	8000a10 <__cmpdf2+0x4>
 8000a0a:	bf00      	nop

08000a0c <__cmpdf2>:
 8000a0c:	f04f 0c01 	mov.w	ip, #1
 8000a10:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a26:	d01b      	beq.n	8000a60 <__cmpdf2+0x54>
 8000a28:	b001      	add	sp, #4
 8000a2a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a2e:	bf0c      	ite	eq
 8000a30:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a34:	ea91 0f03 	teqne	r1, r3
 8000a38:	bf02      	ittt	eq
 8000a3a:	ea90 0f02 	teqeq	r0, r2
 8000a3e:	2000      	moveq	r0, #0
 8000a40:	4770      	bxeq	lr
 8000a42:	f110 0f00 	cmn.w	r0, #0
 8000a46:	ea91 0f03 	teq	r1, r3
 8000a4a:	bf58      	it	pl
 8000a4c:	4299      	cmppl	r1, r3
 8000a4e:	bf08      	it	eq
 8000a50:	4290      	cmpeq	r0, r2
 8000a52:	bf2c      	ite	cs
 8000a54:	17d8      	asrcs	r0, r3, #31
 8000a56:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a5a:	f040 0001 	orr.w	r0, r0, #1
 8000a5e:	4770      	bx	lr
 8000a60:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a68:	d102      	bne.n	8000a70 <__cmpdf2+0x64>
 8000a6a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a6e:	d107      	bne.n	8000a80 <__cmpdf2+0x74>
 8000a70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a78:	d1d6      	bne.n	8000a28 <__cmpdf2+0x1c>
 8000a7a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a7e:	d0d3      	beq.n	8000a28 <__cmpdf2+0x1c>
 8000a80:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_cdrcmple>:
 8000a88:	4684      	mov	ip, r0
 8000a8a:	4610      	mov	r0, r2
 8000a8c:	4662      	mov	r2, ip
 8000a8e:	468c      	mov	ip, r1
 8000a90:	4619      	mov	r1, r3
 8000a92:	4663      	mov	r3, ip
 8000a94:	e000      	b.n	8000a98 <__aeabi_cdcmpeq>
 8000a96:	bf00      	nop

08000a98 <__aeabi_cdcmpeq>:
 8000a98:	b501      	push	{r0, lr}
 8000a9a:	f7ff ffb7 	bl	8000a0c <__cmpdf2>
 8000a9e:	2800      	cmp	r0, #0
 8000aa0:	bf48      	it	mi
 8000aa2:	f110 0f00 	cmnmi.w	r0, #0
 8000aa6:	bd01      	pop	{r0, pc}

08000aa8 <__aeabi_dcmpeq>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff fff4 	bl	8000a98 <__aeabi_cdcmpeq>
 8000ab0:	bf0c      	ite	eq
 8000ab2:	2001      	moveq	r0, #1
 8000ab4:	2000      	movne	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_dcmplt>:
 8000abc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac0:	f7ff ffea 	bl	8000a98 <__aeabi_cdcmpeq>
 8000ac4:	bf34      	ite	cc
 8000ac6:	2001      	movcc	r0, #1
 8000ac8:	2000      	movcs	r0, #0
 8000aca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ace:	bf00      	nop

08000ad0 <__aeabi_dcmple>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff ffe0 	bl	8000a98 <__aeabi_cdcmpeq>
 8000ad8:	bf94      	ite	ls
 8000ada:	2001      	movls	r0, #1
 8000adc:	2000      	movhi	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmpge>:
 8000ae4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae8:	f7ff ffce 	bl	8000a88 <__aeabi_cdrcmple>
 8000aec:	bf94      	ite	ls
 8000aee:	2001      	movls	r0, #1
 8000af0:	2000      	movhi	r0, #0
 8000af2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000af6:	bf00      	nop

08000af8 <__aeabi_dcmpgt>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff ffc4 	bl	8000a88 <__aeabi_cdrcmple>
 8000b00:	bf34      	ite	cc
 8000b02:	2001      	movcc	r0, #1
 8000b04:	2000      	movcs	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmpun>:
 8000b0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b14:	d102      	bne.n	8000b1c <__aeabi_dcmpun+0x10>
 8000b16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b1a:	d10a      	bne.n	8000b32 <__aeabi_dcmpun+0x26>
 8000b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b24:	d102      	bne.n	8000b2c <__aeabi_dcmpun+0x20>
 8000b26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b2a:	d102      	bne.n	8000b32 <__aeabi_dcmpun+0x26>
 8000b2c:	f04f 0000 	mov.w	r0, #0
 8000b30:	4770      	bx	lr
 8000b32:	f04f 0001 	mov.w	r0, #1
 8000b36:	4770      	bx	lr

08000b38 <__aeabi_d2iz>:
 8000b38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b40:	d215      	bcs.n	8000b6e <__aeabi_d2iz+0x36>
 8000b42:	d511      	bpl.n	8000b68 <__aeabi_d2iz+0x30>
 8000b44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b4c:	d912      	bls.n	8000b74 <__aeabi_d2iz+0x3c>
 8000b4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b62:	bf18      	it	ne
 8000b64:	4240      	negne	r0, r0
 8000b66:	4770      	bx	lr
 8000b68:	f04f 0000 	mov.w	r0, #0
 8000b6c:	4770      	bx	lr
 8000b6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b72:	d105      	bne.n	8000b80 <__aeabi_d2iz+0x48>
 8000b74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b78:	bf08      	it	eq
 8000b7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_d2uiz>:
 8000b88:	004a      	lsls	r2, r1, #1
 8000b8a:	d211      	bcs.n	8000bb0 <__aeabi_d2uiz+0x28>
 8000b8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b90:	d211      	bcs.n	8000bb6 <__aeabi_d2uiz+0x2e>
 8000b92:	d50d      	bpl.n	8000bb0 <__aeabi_d2uiz+0x28>
 8000b94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b9c:	d40e      	bmi.n	8000bbc <__aeabi_d2uiz+0x34>
 8000b9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ba6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000baa:	fa23 f002 	lsr.w	r0, r3, r2
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bba:	d102      	bne.n	8000bc2 <__aeabi_d2uiz+0x3a>
 8000bbc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bc0:	4770      	bx	lr
 8000bc2:	f04f 0000 	mov.w	r0, #0
 8000bc6:	4770      	bx	lr

08000bc8 <__aeabi_d2f>:
 8000bc8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bcc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bd0:	bf24      	itt	cs
 8000bd2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bd6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bda:	d90d      	bls.n	8000bf8 <__aeabi_d2f+0x30>
 8000bdc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000be0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000be4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000be8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bf0:	bf08      	it	eq
 8000bf2:	f020 0001 	biceq.w	r0, r0, #1
 8000bf6:	4770      	bx	lr
 8000bf8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bfc:	d121      	bne.n	8000c42 <__aeabi_d2f+0x7a>
 8000bfe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c02:	bfbc      	itt	lt
 8000c04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c08:	4770      	bxlt	lr
 8000c0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c12:	f1c2 0218 	rsb	r2, r2, #24
 8000c16:	f1c2 0c20 	rsb	ip, r2, #32
 8000c1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c22:	bf18      	it	ne
 8000c24:	f040 0001 	orrne.w	r0, r0, #1
 8000c28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c34:	ea40 000c 	orr.w	r0, r0, ip
 8000c38:	fa23 f302 	lsr.w	r3, r3, r2
 8000c3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c40:	e7cc      	b.n	8000bdc <__aeabi_d2f+0x14>
 8000c42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c46:	d107      	bne.n	8000c58 <__aeabi_d2f+0x90>
 8000c48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c4c:	bf1e      	ittt	ne
 8000c4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c56:	4770      	bxne	lr
 8000c58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c64:	4770      	bx	lr
 8000c66:	bf00      	nop

08000c68 <__aeabi_ldivmod>:
 8000c68:	b97b      	cbnz	r3, 8000c8a <__aeabi_ldivmod+0x22>
 8000c6a:	b972      	cbnz	r2, 8000c8a <__aeabi_ldivmod+0x22>
 8000c6c:	2900      	cmp	r1, #0
 8000c6e:	bfbe      	ittt	lt
 8000c70:	2000      	movlt	r0, #0
 8000c72:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000c76:	e006      	blt.n	8000c86 <__aeabi_ldivmod+0x1e>
 8000c78:	bf08      	it	eq
 8000c7a:	2800      	cmpeq	r0, #0
 8000c7c:	bf1c      	itt	ne
 8000c7e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000c82:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000c86:	f000 b92d 	b.w	8000ee4 <__aeabi_idiv0>
 8000c8a:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c8e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c92:	2900      	cmp	r1, #0
 8000c94:	db09      	blt.n	8000caa <__aeabi_ldivmod+0x42>
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	db1a      	blt.n	8000cd0 <__aeabi_ldivmod+0x68>
 8000c9a:	f027 fb3f 	bl	802831c <__udivmoddi4>
 8000c9e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000ca2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ca6:	b004      	add	sp, #16
 8000ca8:	4770      	bx	lr
 8000caa:	4240      	negs	r0, r0
 8000cac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	db1b      	blt.n	8000cec <__aeabi_ldivmod+0x84>
 8000cb4:	f027 fb32 	bl	802831c <__udivmoddi4>
 8000cb8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc0:	b004      	add	sp, #16
 8000cc2:	4240      	negs	r0, r0
 8000cc4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc8:	4252      	negs	r2, r2
 8000cca:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cce:	4770      	bx	lr
 8000cd0:	4252      	negs	r2, r2
 8000cd2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cd6:	f027 fb21 	bl	802831c <__udivmoddi4>
 8000cda:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cde:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ce2:	b004      	add	sp, #16
 8000ce4:	4240      	negs	r0, r0
 8000ce6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cea:	4770      	bx	lr
 8000cec:	4252      	negs	r2, r2
 8000cee:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cf2:	f027 fb13 	bl	802831c <__udivmoddi4>
 8000cf6:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cfa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cfe:	b004      	add	sp, #16
 8000d00:	4252      	negs	r2, r2
 8000d02:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d06:	4770      	bx	lr

08000d08 <__aeabi_uldivmod>:
 8000d08:	b953      	cbnz	r3, 8000d20 <__aeabi_uldivmod+0x18>
 8000d0a:	b94a      	cbnz	r2, 8000d20 <__aeabi_uldivmod+0x18>
 8000d0c:	2900      	cmp	r1, #0
 8000d0e:	bf08      	it	eq
 8000d10:	2800      	cmpeq	r0, #0
 8000d12:	bf1c      	itt	ne
 8000d14:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8000d18:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000d1c:	f000 b8e2 	b.w	8000ee4 <__aeabi_idiv0>
 8000d20:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d24:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d28:	f027 faf8 	bl	802831c <__udivmoddi4>
 8000d2c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d30:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d34:	b004      	add	sp, #16
 8000d36:	4770      	bx	lr

08000d38 <__restore_core_regs>:
 8000d38:	f100 0134 	add.w	r1, r0, #52	@ 0x34
 8000d3c:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8000d40:	469c      	mov	ip, r3
 8000d42:	46a6      	mov	lr, r4
 8000d44:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8000d48:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8000d4c:	46e5      	mov	sp, ip
 8000d4e:	bd00      	pop	{pc}

08000d50 <__gnu_Unwind_Restore_VFP>:
 8000d50:	ec90 0b21 	fldmiax	r0, {d0-d15}	@ Deprecated
 8000d54:	4770      	bx	lr
 8000d56:	bf00      	nop

08000d58 <__gnu_Unwind_Save_VFP>:
 8000d58:	ec80 0b21 	fstmiax	r0, {d0-d15}	@ Deprecated
 8000d5c:	4770      	bx	lr
 8000d5e:	bf00      	nop

08000d60 <__gnu_Unwind_Restore_VFP_D>:
 8000d60:	ec90 0b20 	vldmia	r0, {d0-d15}
 8000d64:	4770      	bx	lr
 8000d66:	bf00      	nop

08000d68 <__gnu_Unwind_Save_VFP_D>:
 8000d68:	ec80 0b20 	vstmia	r0, {d0-d15}
 8000d6c:	4770      	bx	lr
 8000d6e:	bf00      	nop

08000d70 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8000d70:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8000d74:	4770      	bx	lr
 8000d76:	bf00      	nop

08000d78 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8000d78:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop

08000d80 <__gnu_Unwind_Restore_WMMXD>:
 8000d80:	ecf0 0102 			@ <UNDEFINED> instruction: 0xecf00102
 8000d84:	ecf0 1102 			@ <UNDEFINED> instruction: 0xecf01102
 8000d88:	ecf0 2102 			@ <UNDEFINED> instruction: 0xecf02102
 8000d8c:	ecf0 3102 			@ <UNDEFINED> instruction: 0xecf03102
 8000d90:	ecf0 4102 			@ <UNDEFINED> instruction: 0xecf04102
 8000d94:	ecf0 5102 			@ <UNDEFINED> instruction: 0xecf05102
 8000d98:	ecf0 6102 			@ <UNDEFINED> instruction: 0xecf06102
 8000d9c:	ecf0 7102 			@ <UNDEFINED> instruction: 0xecf07102
 8000da0:	ecf0 8102 			@ <UNDEFINED> instruction: 0xecf08102
 8000da4:	ecf0 9102 			@ <UNDEFINED> instruction: 0xecf09102
 8000da8:	ecf0 a102 			@ <UNDEFINED> instruction: 0xecf0a102
 8000dac:	ecf0 b102 			@ <UNDEFINED> instruction: 0xecf0b102
 8000db0:	ecf0 c102 			@ <UNDEFINED> instruction: 0xecf0c102
 8000db4:	ecf0 d102 			@ <UNDEFINED> instruction: 0xecf0d102
 8000db8:	ecf0 e102 			@ <UNDEFINED> instruction: 0xecf0e102
 8000dbc:	ecf0 f102 			@ <UNDEFINED> instruction: 0xecf0f102
 8000dc0:	4770      	bx	lr
 8000dc2:	bf00      	nop

08000dc4 <__gnu_Unwind_Save_WMMXD>:
 8000dc4:	ece0 0102 			@ <UNDEFINED> instruction: 0xece00102
 8000dc8:	ece0 1102 			@ <UNDEFINED> instruction: 0xece01102
 8000dcc:	ece0 2102 			@ <UNDEFINED> instruction: 0xece02102
 8000dd0:	ece0 3102 			@ <UNDEFINED> instruction: 0xece03102
 8000dd4:	ece0 4102 			@ <UNDEFINED> instruction: 0xece04102
 8000dd8:	ece0 5102 			@ <UNDEFINED> instruction: 0xece05102
 8000ddc:	ece0 6102 			@ <UNDEFINED> instruction: 0xece06102
 8000de0:	ece0 7102 			@ <UNDEFINED> instruction: 0xece07102
 8000de4:	ece0 8102 			@ <UNDEFINED> instruction: 0xece08102
 8000de8:	ece0 9102 			@ <UNDEFINED> instruction: 0xece09102
 8000dec:	ece0 a102 			@ <UNDEFINED> instruction: 0xece0a102
 8000df0:	ece0 b102 			@ <UNDEFINED> instruction: 0xece0b102
 8000df4:	ece0 c102 			@ <UNDEFINED> instruction: 0xece0c102
 8000df8:	ece0 d102 			@ <UNDEFINED> instruction: 0xece0d102
 8000dfc:	ece0 e102 			@ <UNDEFINED> instruction: 0xece0e102
 8000e00:	ece0 f102 			@ <UNDEFINED> instruction: 0xece0f102
 8000e04:	4770      	bx	lr
 8000e06:	bf00      	nop

08000e08 <__gnu_Unwind_Restore_WMMXC>:
 8000e08:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8000e0c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8000e10:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8000e14:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop

08000e1c <__gnu_Unwind_Save_WMMXC>:
 8000e1c:	fca0 8101 	stc2	1, cr8, [r0], #4
 8000e20:	fca0 9101 	stc2	1, cr9, [r0], #4
 8000e24:	fca0 a101 	stc2	1, cr10, [r0], #4
 8000e28:	fca0 b101 	stc2	1, cr11, [r0], #4
 8000e2c:	4770      	bx	lr
 8000e2e:	bf00      	nop

08000e30 <_Unwind_RaiseException>:
 8000e30:	46ec      	mov	ip, sp
 8000e32:	b500      	push	{lr}
 8000e34:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000e38:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000e3c:	f04f 0300 	mov.w	r3, #0
 8000e40:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e44:	a901      	add	r1, sp, #4
 8000e46:	f027 fd43 	bl	80288d0 <__gnu_Unwind_RaiseException>
 8000e4a:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8000e4e:	b012      	add	sp, #72	@ 0x48
 8000e50:	4770      	bx	lr
 8000e52:	bf00      	nop

08000e54 <_Unwind_Resume>:
 8000e54:	46ec      	mov	ip, sp
 8000e56:	b500      	push	{lr}
 8000e58:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000e5c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000e60:	f04f 0300 	mov.w	r3, #0
 8000e64:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e68:	a901      	add	r1, sp, #4
 8000e6a:	f027 fd6f 	bl	802894c <__gnu_Unwind_Resume>
 8000e6e:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8000e72:	b012      	add	sp, #72	@ 0x48
 8000e74:	4770      	bx	lr
 8000e76:	bf00      	nop

08000e78 <_Unwind_Resume_or_Rethrow>:
 8000e78:	46ec      	mov	ip, sp
 8000e7a:	b500      	push	{lr}
 8000e7c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000e80:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000e84:	f04f 0300 	mov.w	r3, #0
 8000e88:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000e8c:	a901      	add	r1, sp, #4
 8000e8e:	f027 fd7f 	bl	8028990 <__gnu_Unwind_Resume_or_Rethrow>
 8000e92:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8000e96:	b012      	add	sp, #72	@ 0x48
 8000e98:	4770      	bx	lr
 8000e9a:	bf00      	nop

08000e9c <_Unwind_ForcedUnwind>:
 8000e9c:	46ec      	mov	ip, sp
 8000e9e:	b500      	push	{lr}
 8000ea0:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000ea4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000ea8:	f04f 0300 	mov.w	r3, #0
 8000eac:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000eb0:	ab01      	add	r3, sp, #4
 8000eb2:	f027 fd43 	bl	802893c <__gnu_Unwind_ForcedUnwind>
 8000eb6:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8000eba:	b012      	add	sp, #72	@ 0x48
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop

08000ec0 <_Unwind_Backtrace>:
 8000ec0:	46ec      	mov	ip, sp
 8000ec2:	b500      	push	{lr}
 8000ec4:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000ec8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8000ecc:	f04f 0300 	mov.w	r3, #0
 8000ed0:	e92d 000c 	stmdb	sp!, {r2, r3}
 8000ed4:	aa01      	add	r2, sp, #4
 8000ed6:	f027 fdb9 	bl	8028a4c <__gnu_Unwind_Backtrace>
 8000eda:	f8dd e040 	ldr.w	lr, [sp, #64]	@ 0x40
 8000ede:	b012      	add	sp, #72	@ 0x48
 8000ee0:	4770      	bx	lr
 8000ee2:	bf00      	nop

08000ee4 <__aeabi_idiv0>:
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop

08000ee8 <__arm_set_fast_math>:
 8000ee8:	eef1 3a10 	vmrs	r3, fpscr
 8000eec:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000ef0:	eee1 3a10 	vmsr	fpscr, r3
 8000ef4:	4770      	bx	lr
 8000ef6:	bf00      	nop

08000ef8 <deregister_tm_clones>:
 8000ef8:	4803      	ldr	r0, [pc, #12]	@ (8000f08 <deregister_tm_clones+0x10>)
 8000efa:	4b04      	ldr	r3, [pc, #16]	@ (8000f0c <deregister_tm_clones+0x14>)
 8000efc:	4283      	cmp	r3, r0
 8000efe:	d002      	beq.n	8000f06 <deregister_tm_clones+0xe>
 8000f00:	4b03      	ldr	r3, [pc, #12]	@ (8000f10 <deregister_tm_clones+0x18>)
 8000f02:	b103      	cbz	r3, 8000f06 <deregister_tm_clones+0xe>
 8000f04:	4718      	bx	r3
 8000f06:	4770      	bx	lr
 8000f08:	200005f8 	.word	0x200005f8
 8000f0c:	200005f8 	.word	0x200005f8
 8000f10:	00000000 	.word	0x00000000

08000f14 <register_tm_clones>:
 8000f14:	4805      	ldr	r0, [pc, #20]	@ (8000f2c <register_tm_clones+0x18>)
 8000f16:	4b06      	ldr	r3, [pc, #24]	@ (8000f30 <register_tm_clones+0x1c>)
 8000f18:	1a1b      	subs	r3, r3, r0
 8000f1a:	0fd9      	lsrs	r1, r3, #31
 8000f1c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 8000f20:	1049      	asrs	r1, r1, #1
 8000f22:	d002      	beq.n	8000f2a <register_tm_clones+0x16>
 8000f24:	4b03      	ldr	r3, [pc, #12]	@ (8000f34 <register_tm_clones+0x20>)
 8000f26:	b103      	cbz	r3, 8000f2a <register_tm_clones+0x16>
 8000f28:	4718      	bx	r3
 8000f2a:	4770      	bx	lr
 8000f2c:	200005f8 	.word	0x200005f8
 8000f30:	200005f8 	.word	0x200005f8
 8000f34:	00000000 	.word	0x00000000

08000f38 <__do_global_dtors_aux>:
 8000f38:	b510      	push	{r4, lr}
 8000f3a:	4c06      	ldr	r4, [pc, #24]	@ (8000f54 <__do_global_dtors_aux+0x1c>)
 8000f3c:	7823      	ldrb	r3, [r4, #0]
 8000f3e:	b943      	cbnz	r3, 8000f52 <__do_global_dtors_aux+0x1a>
 8000f40:	f7ff ffda 	bl	8000ef8 <deregister_tm_clones>
 8000f44:	4b04      	ldr	r3, [pc, #16]	@ (8000f58 <__do_global_dtors_aux+0x20>)
 8000f46:	b113      	cbz	r3, 8000f4e <__do_global_dtors_aux+0x16>
 8000f48:	4804      	ldr	r0, [pc, #16]	@ (8000f5c <__do_global_dtors_aux+0x24>)
 8000f4a:	f3af 8000 	nop.w
 8000f4e:	2301      	movs	r3, #1
 8000f50:	7023      	strb	r3, [r4, #0]
 8000f52:	bd10      	pop	{r4, pc}
 8000f54:	200005f8 	.word	0x200005f8
 8000f58:	00000000 	.word	0x00000000
 8000f5c:	080294ac 	.word	0x080294ac

08000f60 <frame_dummy>:
 8000f60:	b508      	push	{r3, lr}
 8000f62:	4b05      	ldr	r3, [pc, #20]	@ (8000f78 <frame_dummy+0x18>)
 8000f64:	b11b      	cbz	r3, 8000f6e <frame_dummy+0xe>
 8000f66:	4905      	ldr	r1, [pc, #20]	@ (8000f7c <frame_dummy+0x1c>)
 8000f68:	4805      	ldr	r0, [pc, #20]	@ (8000f80 <frame_dummy+0x20>)
 8000f6a:	f3af 8000 	nop.w
 8000f6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000f72:	f7ff bfcf 	b.w	8000f14 <register_tm_clones>
 8000f76:	bf00      	nop
 8000f78:	00000000 	.word	0x00000000
 8000f7c:	200005fc 	.word	0x200005fc
 8000f80:	080294ac 	.word	0x080294ac

08000f84 <HAL_NVIC_SetPriorityGrouping>:
 8000f84:	4907      	ldr	r1, [pc, #28]	@ (8000fa4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8000f86:	68ca      	ldr	r2, [r1, #12]
 8000f88:	0203      	lsls	r3, r0, #8
 8000f8a:	f64f 00ff 	movw	r0, #63743	@ 0xf8ff
 8000f8e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8000f92:	4002      	ands	r2, r0
 8000f94:	4313      	orrs	r3, r2
 8000f96:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000f9a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000f9e:	60cb      	str	r3, [r1, #12]
 8000fa0:	4770      	bx	lr
 8000fa2:	bf00      	nop
 8000fa4:	e000ed00 	.word	0xe000ed00

08000fa8 <HAL_NVIC_SetPriority>:
 8000fa8:	4b1b      	ldr	r3, [pc, #108]	@ (8001018 <HAL_NVIC_SetPriority+0x70>)
 8000faa:	68db      	ldr	r3, [r3, #12]
 8000fac:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8000fb0:	b500      	push	{lr}
 8000fb2:	f1c3 0e07 	rsb	lr, r3, #7
 8000fb6:	f1be 0f04 	cmp.w	lr, #4
 8000fba:	f103 0c04 	add.w	ip, r3, #4
 8000fbe:	bf28      	it	cs
 8000fc0:	f04f 0e04 	movcs.w	lr, #4
 8000fc4:	f1bc 0f06 	cmp.w	ip, #6
 8000fc8:	d91c      	bls.n	8001004 <HAL_NVIC_SetPriority+0x5c>
 8000fca:	f1a3 0c03 	sub.w	ip, r3, #3
 8000fce:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000fd2:	fa03 f30c 	lsl.w	r3, r3, ip
 8000fd6:	ea22 0203 	bic.w	r2, r2, r3
 8000fda:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000fde:	fa03 f30e 	lsl.w	r3, r3, lr
 8000fe2:	ea21 0303 	bic.w	r3, r1, r3
 8000fe6:	fa03 f30c 	lsl.w	r3, r3, ip
 8000fea:	4313      	orrs	r3, r2
 8000fec:	011b      	lsls	r3, r3, #4
 8000fee:	2800      	cmp	r0, #0
 8000ff0:	b2db      	uxtb	r3, r3
 8000ff2:	db0a      	blt.n	800100a <HAL_NVIC_SetPriority+0x62>
 8000ff4:	f100 4060 	add.w	r0, r0, #3758096384	@ 0xe0000000
 8000ff8:	f500 4061 	add.w	r0, r0, #57600	@ 0xe100
 8000ffc:	f880 3300 	strb.w	r3, [r0, #768]	@ 0x300
 8001000:	f85d fb04 	ldr.w	pc, [sp], #4
 8001004:	2200      	movs	r2, #0
 8001006:	4694      	mov	ip, r2
 8001008:	e7e7      	b.n	8000fda <HAL_NVIC_SetPriority+0x32>
 800100a:	4a04      	ldr	r2, [pc, #16]	@ (800101c <HAL_NVIC_SetPriority+0x74>)
 800100c:	f000 000f 	and.w	r0, r0, #15
 8001010:	4402      	add	r2, r0
 8001012:	7613      	strb	r3, [r2, #24]
 8001014:	f85d fb04 	ldr.w	pc, [sp], #4
 8001018:	e000ed00 	.word	0xe000ed00
 800101c:	e000ecfc 	.word	0xe000ecfc

08001020 <HAL_NVIC_EnableIRQ>:
 8001020:	0941      	lsrs	r1, r0, #5
 8001022:	4a04      	ldr	r2, [pc, #16]	@ (8001034 <HAL_NVIC_EnableIRQ+0x14>)
 8001024:	f000 001f 	and.w	r0, r0, #31
 8001028:	2301      	movs	r3, #1
 800102a:	4083      	lsls	r3, r0
 800102c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8001030:	4770      	bx	lr
 8001032:	bf00      	nop
 8001034:	e000e100 	.word	0xe000e100

08001038 <HAL_NVIC_DisableIRQ>:
 8001038:	0943      	lsrs	r3, r0, #5
 800103a:	4904      	ldr	r1, [pc, #16]	@ (800104c <HAL_NVIC_DisableIRQ+0x14>)
 800103c:	f000 001f 	and.w	r0, r0, #31
 8001040:	2201      	movs	r2, #1
 8001042:	3320      	adds	r3, #32
 8001044:	4082      	lsls	r2, r0
 8001046:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800104a:	4770      	bx	lr
 800104c:	e000e100 	.word	0xe000e100

08001050 <HAL_SYSTICK_Config>:
 8001050:	3801      	subs	r0, #1
 8001052:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8001056:	d301      	bcc.n	800105c <HAL_SYSTICK_Config+0xc>
 8001058:	2001      	movs	r0, #1
 800105a:	4770      	bx	lr
 800105c:	b410      	push	{r4}
 800105e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8001062:	4c07      	ldr	r4, [pc, #28]	@ (8001080 <HAL_SYSTICK_Config+0x30>)
 8001064:	6158      	str	r0, [r3, #20]
 8001066:	f04f 0cf0 	mov.w	ip, #240	@ 0xf0
 800106a:	f884 c023 	strb.w	ip, [r4, #35]	@ 0x23
 800106e:	2200      	movs	r2, #0
 8001070:	2107      	movs	r1, #7
 8001072:	4610      	mov	r0, r2
 8001074:	619a      	str	r2, [r3, #24]
 8001076:	f85d 4b04 	ldr.w	r4, [sp], #4
 800107a:	6119      	str	r1, [r3, #16]
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	e000ed00 	.word	0xe000ed00

08001084 <HAL_SYSTICK_CLKSourceConfig>:
 8001084:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8001088:	2804      	cmp	r0, #4
 800108a:	6913      	ldr	r3, [r2, #16]
 800108c:	bf0c      	ite	eq
 800108e:	f043 0304 	orreq.w	r3, r3, #4
 8001092:	f023 0304 	bicne.w	r3, r3, #4
 8001096:	6113      	str	r3, [r2, #16]
 8001098:	4770      	bx	lr
 800109a:	bf00      	nop

0800109c <USBD_CtlSendData>:
 800109c:	b508      	push	{r3, lr}
 800109e:	4613      	mov	r3, r2
 80010a0:	460a      	mov	r2, r1
 80010a2:	2102      	movs	r1, #2
 80010a4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80010a8:	f8c0 11f4 	str.w	r1, [r0, #500]	@ 0x1f4
 80010ac:	2100      	movs	r1, #0
 80010ae:	f002 fd03 	bl	8003ab8 <USBD_LL_Transmit>
 80010b2:	2000      	movs	r0, #0
 80010b4:	bd08      	pop	{r3, pc}
 80010b6:	bf00      	nop

080010b8 <USBD_CtlContinueSendData>:
 80010b8:	b508      	push	{r3, lr}
 80010ba:	4613      	mov	r3, r2
 80010bc:	460a      	mov	r2, r1
 80010be:	2100      	movs	r1, #0
 80010c0:	f002 fcfa 	bl	8003ab8 <USBD_LL_Transmit>
 80010c4:	2000      	movs	r0, #0
 80010c6:	bd08      	pop	{r3, pc}

080010c8 <USBD_CtlPrepareRx>:
 80010c8:	b508      	push	{r3, lr}
 80010ca:	4613      	mov	r3, r2
 80010cc:	460a      	mov	r2, r1
 80010ce:	2103      	movs	r1, #3
 80010d0:	e9c0 3342 	strd	r3, r3, [r0, #264]	@ 0x108
 80010d4:	f8c0 11f4 	str.w	r1, [r0, #500]	@ 0x1f4
 80010d8:	2100      	movs	r1, #0
 80010da:	f002 fcf9 	bl	8003ad0 <USBD_LL_PrepareReceive>
 80010de:	2000      	movs	r0, #0
 80010e0:	bd08      	pop	{r3, pc}
 80010e2:	bf00      	nop

080010e4 <USBD_CtlContinueRx>:
 80010e4:	b508      	push	{r3, lr}
 80010e6:	4613      	mov	r3, r2
 80010e8:	460a      	mov	r2, r1
 80010ea:	2100      	movs	r1, #0
 80010ec:	f002 fcf0 	bl	8003ad0 <USBD_LL_PrepareReceive>
 80010f0:	2000      	movs	r0, #0
 80010f2:	bd08      	pop	{r3, pc}

080010f4 <USBD_CtlSendStatus>:
 80010f4:	b508      	push	{r3, lr}
 80010f6:	2204      	movs	r2, #4
 80010f8:	2300      	movs	r3, #0
 80010fa:	f8c0 21f4 	str.w	r2, [r0, #500]	@ 0x1f4
 80010fe:	4619      	mov	r1, r3
 8001100:	461a      	mov	r2, r3
 8001102:	f002 fcd9 	bl	8003ab8 <USBD_LL_Transmit>
 8001106:	2000      	movs	r0, #0
 8001108:	bd08      	pop	{r3, pc}
 800110a:	bf00      	nop

0800110c <USBD_CtlReceiveStatus>:
 800110c:	b508      	push	{r3, lr}
 800110e:	2205      	movs	r2, #5
 8001110:	2300      	movs	r3, #0
 8001112:	f8c0 21f4 	str.w	r2, [r0, #500]	@ 0x1f4
 8001116:	4619      	mov	r1, r3
 8001118:	461a      	mov	r2, r3
 800111a:	f002 fcd9 	bl	8003ad0 <USBD_LL_PrepareReceive>
 800111e:	2000      	movs	r0, #0
 8001120:	bd08      	pop	{r3, pc}
 8001122:	bf00      	nop

08001124 <HAL_InitTick>:
 8001124:	b530      	push	{r4, r5, lr}
 8001126:	4601      	mov	r1, r0
 8001128:	b089      	sub	sp, #36	@ 0x24
 800112a:	2200      	movs	r2, #0
 800112c:	202d      	movs	r0, #45	@ 0x2d
 800112e:	f7ff ff3b 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8001132:	202d      	movs	r0, #45	@ 0x2d
 8001134:	f7ff ff74 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8001138:	2400      	movs	r4, #0
 800113a:	4b16      	ldr	r3, [pc, #88]	@ (8001194 <HAL_InitTick+0x70>)
 800113c:	9402      	str	r4, [sp, #8]
 800113e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001140:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001144:	641a      	str	r2, [r3, #64]	@ 0x40
 8001146:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001148:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800114c:	a901      	add	r1, sp, #4
 800114e:	a803      	add	r0, sp, #12
 8001150:	9302      	str	r3, [sp, #8]
 8001152:	9b02      	ldr	r3, [sp, #8]
 8001154:	f005 fc08 	bl	8006968 <HAL_RCC_GetClockConfig>
 8001158:	f005 fbe6 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 800115c:	4a0e      	ldr	r2, [pc, #56]	@ (8001198 <HAL_InitTick+0x74>)
 800115e:	490f      	ldr	r1, [pc, #60]	@ (800119c <HAL_InitTick+0x78>)
 8001160:	0043      	lsls	r3, r0, #1
 8001162:	fba2 2303 	umull	r2, r3, r2, r3
 8001166:	480e      	ldr	r0, [pc, #56]	@ (80011a0 <HAL_InitTick+0x7c>)
 8001168:	0c9b      	lsrs	r3, r3, #18
 800116a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800116e:	3b01      	subs	r3, #1
 8001170:	e9c0 2403 	strd	r2, r4, [r0, #12]
 8001174:	4605      	mov	r5, r0
 8001176:	6043      	str	r3, [r0, #4]
 8001178:	6001      	str	r1, [r0, #0]
 800117a:	6084      	str	r4, [r0, #8]
 800117c:	f008 fb64 	bl	8009848 <HAL_TIM_Base_Init>
 8001180:	b110      	cbz	r0, 8001188 <HAL_InitTick+0x64>
 8001182:	2001      	movs	r0, #1
 8001184:	b009      	add	sp, #36	@ 0x24
 8001186:	bd30      	pop	{r4, r5, pc}
 8001188:	4628      	mov	r0, r5
 800118a:	f008 f8b1 	bl	80092f0 <HAL_TIM_Base_Start_IT>
 800118e:	b009      	add	sp, #36	@ 0x24
 8001190:	bd30      	pop	{r4, r5, pc}
 8001192:	bf00      	nop
 8001194:	40023800 	.word	0x40023800
 8001198:	431bde83 	.word	0x431bde83
 800119c:	40002000 	.word	0x40002000
 80011a0:	20000614 	.word	0x20000614

080011a4 <HAL_CAN_Init>:
 80011a4:	2800      	cmp	r0, #0
 80011a6:	d07b      	beq.n	80012a0 <HAL_CAN_Init+0xfc>
 80011a8:	b538      	push	{r3, r4, r5, lr}
 80011aa:	f890 3020 	ldrb.w	r3, [r0, #32]
 80011ae:	4604      	mov	r4, r0
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d072      	beq.n	800129a <HAL_CAN_Init+0xf6>
 80011b4:	6822      	ldr	r2, [r4, #0]
 80011b6:	6813      	ldr	r3, [r2, #0]
 80011b8:	f023 0302 	bic.w	r3, r3, #2
 80011bc:	6013      	str	r3, [r2, #0]
 80011be:	f004 fe0d 	bl	8005ddc <HAL_GetTick>
 80011c2:	4605      	mov	r5, r0
 80011c4:	e004      	b.n	80011d0 <HAL_CAN_Init+0x2c>
 80011c6:	f004 fe09 	bl	8005ddc <HAL_GetTick>
 80011ca:	1b40      	subs	r0, r0, r5
 80011cc:	280a      	cmp	r0, #10
 80011ce:	d85b      	bhi.n	8001288 <HAL_CAN_Init+0xe4>
 80011d0:	6823      	ldr	r3, [r4, #0]
 80011d2:	685a      	ldr	r2, [r3, #4]
 80011d4:	0791      	lsls	r1, r2, #30
 80011d6:	d4f6      	bmi.n	80011c6 <HAL_CAN_Init+0x22>
 80011d8:	681a      	ldr	r2, [r3, #0]
 80011da:	f042 0201 	orr.w	r2, r2, #1
 80011de:	601a      	str	r2, [r3, #0]
 80011e0:	f004 fdfc 	bl	8005ddc <HAL_GetTick>
 80011e4:	4605      	mov	r5, r0
 80011e6:	e004      	b.n	80011f2 <HAL_CAN_Init+0x4e>
 80011e8:	f004 fdf8 	bl	8005ddc <HAL_GetTick>
 80011ec:	1b40      	subs	r0, r0, r5
 80011ee:	280a      	cmp	r0, #10
 80011f0:	d84a      	bhi.n	8001288 <HAL_CAN_Init+0xe4>
 80011f2:	6823      	ldr	r3, [r4, #0]
 80011f4:	685a      	ldr	r2, [r3, #4]
 80011f6:	07d2      	lsls	r2, r2, #31
 80011f8:	d5f6      	bpl.n	80011e8 <HAL_CAN_Init+0x44>
 80011fa:	7e22      	ldrb	r2, [r4, #24]
 80011fc:	2a01      	cmp	r2, #1
 80011fe:	681a      	ldr	r2, [r3, #0]
 8001200:	bf0c      	ite	eq
 8001202:	f042 0280 	orreq.w	r2, r2, #128	@ 0x80
 8001206:	f022 0280 	bicne.w	r2, r2, #128	@ 0x80
 800120a:	601a      	str	r2, [r3, #0]
 800120c:	7e62      	ldrb	r2, [r4, #25]
 800120e:	2a01      	cmp	r2, #1
 8001210:	681a      	ldr	r2, [r3, #0]
 8001212:	bf0c      	ite	eq
 8001214:	f042 0240 	orreq.w	r2, r2, #64	@ 0x40
 8001218:	f022 0240 	bicne.w	r2, r2, #64	@ 0x40
 800121c:	601a      	str	r2, [r3, #0]
 800121e:	7ea2      	ldrb	r2, [r4, #26]
 8001220:	2a01      	cmp	r2, #1
 8001222:	681a      	ldr	r2, [r3, #0]
 8001224:	bf0c      	ite	eq
 8001226:	f042 0220 	orreq.w	r2, r2, #32
 800122a:	f022 0220 	bicne.w	r2, r2, #32
 800122e:	601a      	str	r2, [r3, #0]
 8001230:	7ee2      	ldrb	r2, [r4, #27]
 8001232:	2a01      	cmp	r2, #1
 8001234:	681a      	ldr	r2, [r3, #0]
 8001236:	bf0c      	ite	eq
 8001238:	f022 0210 	biceq.w	r2, r2, #16
 800123c:	f042 0210 	orrne.w	r2, r2, #16
 8001240:	601a      	str	r2, [r3, #0]
 8001242:	7f22      	ldrb	r2, [r4, #28]
 8001244:	2a01      	cmp	r2, #1
 8001246:	681a      	ldr	r2, [r3, #0]
 8001248:	bf0c      	ite	eq
 800124a:	f042 0208 	orreq.w	r2, r2, #8
 800124e:	f022 0208 	bicne.w	r2, r2, #8
 8001252:	601a      	str	r2, [r3, #0]
 8001254:	7f62      	ldrb	r2, [r4, #29]
 8001256:	2a01      	cmp	r2, #1
 8001258:	681a      	ldr	r2, [r3, #0]
 800125a:	bf0c      	ite	eq
 800125c:	f042 0204 	orreq.w	r2, r2, #4
 8001260:	f022 0204 	bicne.w	r2, r2, #4
 8001264:	601a      	str	r2, [r3, #0]
 8001266:	e9d4 2002 	ldrd	r2, r0, [r4, #8]
 800126a:	6921      	ldr	r1, [r4, #16]
 800126c:	4302      	orrs	r2, r0
 800126e:	430a      	orrs	r2, r1
 8001270:	6960      	ldr	r0, [r4, #20]
 8001272:	6861      	ldr	r1, [r4, #4]
 8001274:	4302      	orrs	r2, r0
 8001276:	3901      	subs	r1, #1
 8001278:	430a      	orrs	r2, r1
 800127a:	2000      	movs	r0, #0
 800127c:	2101      	movs	r1, #1
 800127e:	61da      	str	r2, [r3, #28]
 8001280:	6260      	str	r0, [r4, #36]	@ 0x24
 8001282:	f884 1020 	strb.w	r1, [r4, #32]
 8001286:	bd38      	pop	{r3, r4, r5, pc}
 8001288:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800128a:	2205      	movs	r2, #5
 800128c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001290:	6263      	str	r3, [r4, #36]	@ 0x24
 8001292:	f884 2020 	strb.w	r2, [r4, #32]
 8001296:	2001      	movs	r0, #1
 8001298:	bd38      	pop	{r3, r4, r5, pc}
 800129a:	f005 f869 	bl	8006370 <HAL_CAN_MspInit>
 800129e:	e789      	b.n	80011b4 <HAL_CAN_Init+0x10>
 80012a0:	2001      	movs	r0, #1
 80012a2:	4770      	bx	lr

080012a4 <HAL_CAN_ConfigFilter>:
 80012a4:	f890 2020 	ldrb.w	r2, [r0, #32]
 80012a8:	2a01      	cmp	r2, #1
 80012aa:	d00a      	beq.n	80012c2 <HAL_CAN_ConfigFilter+0x1e>
 80012ac:	f890 2020 	ldrb.w	r2, [r0, #32]
 80012b0:	2a02      	cmp	r2, #2
 80012b2:	4603      	mov	r3, r0
 80012b4:	d005      	beq.n	80012c2 <HAL_CAN_ConfigFilter+0x1e>
 80012b6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 80012b8:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80012bc:	2001      	movs	r0, #1
 80012be:	625a      	str	r2, [r3, #36]	@ 0x24
 80012c0:	4770      	bx	lr
 80012c2:	4b40      	ldr	r3, [pc, #256]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 80012c4:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80012c8:	2001      	movs	r0, #1
 80012ca:	4302      	orrs	r2, r0
 80012cc:	b430      	push	{r4, r5}
 80012ce:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80012d2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80012d6:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
 80012da:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80012de:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 80012e2:	6a4c      	ldr	r4, [r1, #36]	@ 0x24
 80012e4:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80012e8:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80012ec:	694a      	ldr	r2, [r1, #20]
 80012ee:	f8d3 421c 	ldr.w	r4, [r3, #540]	@ 0x21c
 80012f2:	4090      	lsls	r0, r2
 80012f4:	ea24 0400 	bic.w	r4, r4, r0
 80012f8:	f8c3 421c 	str.w	r4, [r3, #540]	@ 0x21c
 80012fc:	69cd      	ldr	r5, [r1, #28]
 80012fe:	43c4      	mvns	r4, r0
 8001300:	2d00      	cmp	r5, #0
 8001302:	d145      	bne.n	8001390 <HAL_CAN_ConfigFilter+0xec>
 8001304:	f8d3 520c 	ldr.w	r5, [r3, #524]	@ 0x20c
 8001308:	4025      	ands	r5, r4
 800130a:	f8c3 520c 	str.w	r5, [r3, #524]	@ 0x20c
 800130e:	00d2      	lsls	r2, r2, #3
 8001310:	68cd      	ldr	r5, [r1, #12]
 8001312:	888b      	ldrh	r3, [r1, #4]
 8001314:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 8001318:	f502 42c8 	add.w	r2, r2, #25600	@ 0x6400
 800131c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 8001320:	f8c2 3240 	str.w	r3, [r2, #576]	@ 0x240
 8001324:	688d      	ldr	r5, [r1, #8]
 8001326:	880b      	ldrh	r3, [r1, #0]
 8001328:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 800132c:	f8c2 3244 	str.w	r3, [r2, #580]	@ 0x244
 8001330:	698b      	ldr	r3, [r1, #24]
 8001332:	4a24      	ldr	r2, [pc, #144]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 8001334:	bb33      	cbnz	r3, 8001384 <HAL_CAN_ConfigFilter+0xe0>
 8001336:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 800133a:	4023      	ands	r3, r4
 800133c:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 8001340:	690b      	ldr	r3, [r1, #16]
 8001342:	b9c3      	cbnz	r3, 8001376 <HAL_CAN_ConfigFilter+0xd2>
 8001344:	4b1f      	ldr	r3, [pc, #124]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 8001346:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800134a:	4014      	ands	r4, r2
 800134c:	f8c3 4214 	str.w	r4, [r3, #532]	@ 0x214
 8001350:	6a0b      	ldr	r3, [r1, #32]
 8001352:	2b01      	cmp	r3, #1
 8001354:	d105      	bne.n	8001362 <HAL_CAN_ConfigFilter+0xbe>
 8001356:	4a1b      	ldr	r2, [pc, #108]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 8001358:	f8d2 321c 	ldr.w	r3, [r2, #540]	@ 0x21c
 800135c:	4303      	orrs	r3, r0
 800135e:	f8c2 321c 	str.w	r3, [r2, #540]	@ 0x21c
 8001362:	4a18      	ldr	r2, [pc, #96]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 8001364:	f8d2 3200 	ldr.w	r3, [r2, #512]	@ 0x200
 8001368:	f023 0301 	bic.w	r3, r3, #1
 800136c:	2000      	movs	r0, #0
 800136e:	bc30      	pop	{r4, r5}
 8001370:	f8c2 3200 	str.w	r3, [r2, #512]	@ 0x200
 8001374:	4770      	bx	lr
 8001376:	4a13      	ldr	r2, [pc, #76]	@ (80013c4 <HAL_CAN_ConfigFilter+0x120>)
 8001378:	f8d2 3214 	ldr.w	r3, [r2, #532]	@ 0x214
 800137c:	4303      	orrs	r3, r0
 800137e:	f8c2 3214 	str.w	r3, [r2, #532]	@ 0x214
 8001382:	e7e5      	b.n	8001350 <HAL_CAN_ConfigFilter+0xac>
 8001384:	f8d2 3204 	ldr.w	r3, [r2, #516]	@ 0x204
 8001388:	4303      	orrs	r3, r0
 800138a:	f8c2 3204 	str.w	r3, [r2, #516]	@ 0x204
 800138e:	e7d7      	b.n	8001340 <HAL_CAN_ConfigFilter+0x9c>
 8001390:	2d01      	cmp	r5, #1
 8001392:	d1cd      	bne.n	8001330 <HAL_CAN_ConfigFilter+0x8c>
 8001394:	f8d3 520c 	ldr.w	r5, [r3, #524]	@ 0x20c
 8001398:	4305      	orrs	r5, r0
 800139a:	f8c3 520c 	str.w	r5, [r3, #524]	@ 0x20c
 800139e:	00d2      	lsls	r2, r2, #3
 80013a0:	680d      	ldr	r5, [r1, #0]
 80013a2:	888b      	ldrh	r3, [r1, #4]
 80013a4:	f102 4280 	add.w	r2, r2, #1073741824	@ 0x40000000
 80013a8:	f502 42c8 	add.w	r2, r2, #25600	@ 0x6400
 80013ac:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 80013b0:	f8c2 3240 	str.w	r3, [r2, #576]	@ 0x240
 80013b4:	688d      	ldr	r5, [r1, #8]
 80013b6:	898b      	ldrh	r3, [r1, #12]
 80013b8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
 80013bc:	f8c2 3244 	str.w	r3, [r2, #580]	@ 0x244
 80013c0:	e7b6      	b.n	8001330 <HAL_CAN_ConfigFilter+0x8c>
 80013c2:	bf00      	nop
 80013c4:	40006400 	.word	0x40006400

080013c8 <HAL_CAN_Start>:
 80013c8:	b538      	push	{r3, r4, r5, lr}
 80013ca:	f890 3020 	ldrb.w	r3, [r0, #32]
 80013ce:	2b01      	cmp	r3, #1
 80013d0:	4604      	mov	r4, r0
 80013d2:	d005      	beq.n	80013e0 <HAL_CAN_Start+0x18>
 80013d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80013d6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80013da:	6243      	str	r3, [r0, #36]	@ 0x24
 80013dc:	2001      	movs	r0, #1
 80013de:	bd38      	pop	{r3, r4, r5, pc}
 80013e0:	6802      	ldr	r2, [r0, #0]
 80013e2:	2302      	movs	r3, #2
 80013e4:	f880 3020 	strb.w	r3, [r0, #32]
 80013e8:	6813      	ldr	r3, [r2, #0]
 80013ea:	f023 0301 	bic.w	r3, r3, #1
 80013ee:	6013      	str	r3, [r2, #0]
 80013f0:	f004 fcf4 	bl	8005ddc <HAL_GetTick>
 80013f4:	4605      	mov	r5, r0
 80013f6:	e004      	b.n	8001402 <HAL_CAN_Start+0x3a>
 80013f8:	f004 fcf0 	bl	8005ddc <HAL_GetTick>
 80013fc:	1b43      	subs	r3, r0, r5
 80013fe:	2b0a      	cmp	r3, #10
 8001400:	d807      	bhi.n	8001412 <HAL_CAN_Start+0x4a>
 8001402:	6823      	ldr	r3, [r4, #0]
 8001404:	685b      	ldr	r3, [r3, #4]
 8001406:	f013 0301 	ands.w	r3, r3, #1
 800140a:	d1f5      	bne.n	80013f8 <HAL_CAN_Start+0x30>
 800140c:	6263      	str	r3, [r4, #36]	@ 0x24
 800140e:	4618      	mov	r0, r3
 8001410:	bd38      	pop	{r3, r4, r5, pc}
 8001412:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001414:	2205      	movs	r2, #5
 8001416:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800141a:	6263      	str	r3, [r4, #36]	@ 0x24
 800141c:	f884 2020 	strb.w	r2, [r4, #32]
 8001420:	e7dc      	b.n	80013dc <HAL_CAN_Start+0x14>
 8001422:	bf00      	nop

08001424 <HAL_CAN_Stop>:
 8001424:	b538      	push	{r3, r4, r5, lr}
 8001426:	f890 3020 	ldrb.w	r3, [r0, #32]
 800142a:	2b02      	cmp	r3, #2
 800142c:	4604      	mov	r4, r0
 800142e:	d005      	beq.n	800143c <HAL_CAN_Stop+0x18>
 8001430:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8001432:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001436:	6243      	str	r3, [r0, #36]	@ 0x24
 8001438:	2001      	movs	r0, #1
 800143a:	bd38      	pop	{r3, r4, r5, pc}
 800143c:	6802      	ldr	r2, [r0, #0]
 800143e:	6813      	ldr	r3, [r2, #0]
 8001440:	f043 0301 	orr.w	r3, r3, #1
 8001444:	6013      	str	r3, [r2, #0]
 8001446:	f004 fcc9 	bl	8005ddc <HAL_GetTick>
 800144a:	4605      	mov	r5, r0
 800144c:	e004      	b.n	8001458 <HAL_CAN_Stop+0x34>
 800144e:	f004 fcc5 	bl	8005ddc <HAL_GetTick>
 8001452:	1b43      	subs	r3, r0, r5
 8001454:	2b0a      	cmp	r3, #10
 8001456:	d80c      	bhi.n	8001472 <HAL_CAN_Stop+0x4e>
 8001458:	6823      	ldr	r3, [r4, #0]
 800145a:	685a      	ldr	r2, [r3, #4]
 800145c:	07d2      	lsls	r2, r2, #31
 800145e:	d5f6      	bpl.n	800144e <HAL_CAN_Stop+0x2a>
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	2101      	movs	r1, #1
 8001464:	f022 0202 	bic.w	r2, r2, #2
 8001468:	601a      	str	r2, [r3, #0]
 800146a:	f884 1020 	strb.w	r1, [r4, #32]
 800146e:	2000      	movs	r0, #0
 8001470:	bd38      	pop	{r3, r4, r5, pc}
 8001472:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8001474:	2205      	movs	r2, #5
 8001476:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800147a:	6263      	str	r3, [r4, #36]	@ 0x24
 800147c:	f884 2020 	strb.w	r2, [r4, #32]
 8001480:	e7da      	b.n	8001438 <HAL_CAN_Stop+0x14>
 8001482:	bf00      	nop

08001484 <HAL_CAN_AddTxMessage>:
 8001484:	b430      	push	{r4, r5}
 8001486:	f890 4020 	ldrb.w	r4, [r0, #32]
 800148a:	2c01      	cmp	r4, #1
 800148c:	d00a      	beq.n	80014a4 <HAL_CAN_AddTxMessage+0x20>
 800148e:	f890 4020 	ldrb.w	r4, [r0, #32]
 8001492:	2c02      	cmp	r4, #2
 8001494:	d006      	beq.n	80014a4 <HAL_CAN_AddTxMessage+0x20>
 8001496:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8001498:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800149c:	6243      	str	r3, [r0, #36]	@ 0x24
 800149e:	2001      	movs	r0, #1
 80014a0:	bc30      	pop	{r4, r5}
 80014a2:	4770      	bx	lr
 80014a4:	6805      	ldr	r5, [r0, #0]
 80014a6:	68ac      	ldr	r4, [r5, #8]
 80014a8:	0164      	lsls	r4, r4, #5
 80014aa:	d405      	bmi.n	80014b8 <HAL_CAN_AddTxMessage+0x34>
 80014ac:	68ac      	ldr	r4, [r5, #8]
 80014ae:	0124      	lsls	r4, r4, #4
 80014b0:	d402      	bmi.n	80014b8 <HAL_CAN_AddTxMessage+0x34>
 80014b2:	68ac      	ldr	r4, [r5, #8]
 80014b4:	00e4      	lsls	r4, r4, #3
 80014b6:	d538      	bpl.n	800152a <HAL_CAN_AddTxMessage+0xa6>
 80014b8:	68a8      	ldr	r0, [r5, #8]
 80014ba:	2401      	movs	r4, #1
 80014bc:	f3c0 6001 	ubfx	r0, r0, #24, #2
 80014c0:	4084      	lsls	r4, r0
 80014c2:	601c      	str	r4, [r3, #0]
 80014c4:	e9d1 4302 	ldrd	r4, r3, [r1, #8]
 80014c8:	b33c      	cbz	r4, 800151a <HAL_CAN_AddTxMessage+0x96>
 80014ca:	431c      	orrs	r4, r3
 80014cc:	684b      	ldr	r3, [r1, #4]
 80014ce:	ea44 04c3 	orr.w	r4, r4, r3, lsl #3
 80014d2:	f100 0318 	add.w	r3, r0, #24
 80014d6:	011b      	lsls	r3, r3, #4
 80014d8:	50ec      	str	r4, [r5, r3]
 80014da:	eb05 1c00 	add.w	ip, r5, r0, lsl #4
 80014de:	690b      	ldr	r3, [r1, #16]
 80014e0:	f8cc 3184 	str.w	r3, [ip, #388]	@ 0x184
 80014e4:	7d0b      	ldrb	r3, [r1, #20]
 80014e6:	2b01      	cmp	r3, #1
 80014e8:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80014ec:	d105      	bne.n	80014fa <HAL_CAN_AddTxMessage+0x76>
 80014ee:	f8dc 3184 	ldr.w	r3, [ip, #388]	@ 0x184
 80014f2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80014f6:	f8cc 3184 	str.w	r3, [ip, #388]	@ 0x184
 80014fa:	182b      	adds	r3, r5, r0
 80014fc:	6851      	ldr	r1, [r2, #4]
 80014fe:	f8c3 118c 	str.w	r1, [r3, #396]	@ 0x18c
 8001502:	6812      	ldr	r2, [r2, #0]
 8001504:	f8c3 2188 	str.w	r2, [r3, #392]	@ 0x188
 8001508:	f8dc 3180 	ldr.w	r3, [ip, #384]	@ 0x180
 800150c:	f043 0301 	orr.w	r3, r3, #1
 8001510:	2000      	movs	r0, #0
 8001512:	bc30      	pop	{r4, r5}
 8001514:	f8cc 3180 	str.w	r3, [ip, #384]	@ 0x180
 8001518:	4770      	bx	lr
 800151a:	680c      	ldr	r4, [r1, #0]
 800151c:	ea43 5344 	orr.w	r3, r3, r4, lsl #21
 8001520:	f100 0418 	add.w	r4, r0, #24
 8001524:	0124      	lsls	r4, r4, #4
 8001526:	512b      	str	r3, [r5, r4]
 8001528:	e7d7      	b.n	80014da <HAL_CAN_AddTxMessage+0x56>
 800152a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800152c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001530:	6243      	str	r3, [r0, #36]	@ 0x24
 8001532:	e7b4      	b.n	800149e <HAL_CAN_AddTxMessage+0x1a>

08001534 <HAL_CAN_GetTxMailboxesFreeLevel>:
 8001534:	f890 3020 	ldrb.w	r3, [r0, #32]
 8001538:	2b01      	cmp	r3, #1
 800153a:	d005      	beq.n	8001548 <HAL_CAN_GetTxMailboxesFreeLevel+0x14>
 800153c:	f890 3020 	ldrb.w	r3, [r0, #32]
 8001540:	2b02      	cmp	r3, #2
 8001542:	d001      	beq.n	8001548 <HAL_CAN_GetTxMailboxesFreeLevel+0x14>
 8001544:	2000      	movs	r0, #0
 8001546:	4770      	bx	lr
 8001548:	6803      	ldr	r3, [r0, #0]
 800154a:	6898      	ldr	r0, [r3, #8]
 800154c:	689a      	ldr	r2, [r3, #8]
 800154e:	689b      	ldr	r3, [r3, #8]
 8001550:	0112      	lsls	r2, r2, #4
 8001552:	f3c0 6080 	ubfx	r0, r0, #26, #1
 8001556:	bf48      	it	mi
 8001558:	3001      	addmi	r0, #1
 800155a:	00db      	lsls	r3, r3, #3
 800155c:	d5f3      	bpl.n	8001546 <HAL_CAN_GetTxMailboxesFreeLevel+0x12>
 800155e:	3001      	adds	r0, #1
 8001560:	4770      	bx	lr
 8001562:	bf00      	nop

08001564 <HAL_CAN_GetRxMessage>:
 8001564:	b570      	push	{r4, r5, r6, lr}
 8001566:	f890 4020 	ldrb.w	r4, [r0, #32]
 800156a:	2c01      	cmp	r4, #1
 800156c:	d009      	beq.n	8001582 <HAL_CAN_GetRxMessage+0x1e>
 800156e:	f890 4020 	ldrb.w	r4, [r0, #32]
 8001572:	2c02      	cmp	r4, #2
 8001574:	d005      	beq.n	8001582 <HAL_CAN_GetRxMessage+0x1e>
 8001576:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8001578:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800157c:	6243      	str	r3, [r0, #36]	@ 0x24
 800157e:	2001      	movs	r0, #1
 8001580:	bd70      	pop	{r4, r5, r6, pc}
 8001582:	6804      	ldr	r4, [r0, #0]
 8001584:	2900      	cmp	r1, #0
 8001586:	d159      	bne.n	800163c <HAL_CAN_GetRxMessage+0xd8>
 8001588:	68e5      	ldr	r5, [r4, #12]
 800158a:	07ae      	lsls	r6, r5, #30
 800158c:	d05b      	beq.n	8001646 <HAL_CAN_GetRxMessage+0xe2>
 800158e:	eb04 1c01 	add.w	ip, r4, r1, lsl #4
 8001592:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 8001596:	f8dc 51b0 	ldr.w	r5, [ip, #432]	@ 0x1b0
 800159a:	f005 0504 	and.w	r5, r5, #4
 800159e:	6095      	str	r5, [r2, #8]
 80015a0:	2d00      	cmp	r5, #0
 80015a2:	d15d      	bne.n	8001660 <HAL_CAN_GetRxMessage+0xfc>
 80015a4:	f8dc 51b0 	ldr.w	r5, [ip, #432]	@ 0x1b0
 80015a8:	0d6d      	lsrs	r5, r5, #21
 80015aa:	6015      	str	r5, [r2, #0]
 80015ac:	f8dc 51b0 	ldr.w	r5, [ip, #432]	@ 0x1b0
 80015b0:	f3c5 0540 	ubfx	r5, r5, #1, #1
 80015b4:	60d5      	str	r5, [r2, #12]
 80015b6:	f8dc 51b4 	ldr.w	r5, [ip, #436]	@ 0x1b4
 80015ba:	f8dc 61b4 	ldr.w	r6, [ip, #436]	@ 0x1b4
 80015be:	f005 050f 	and.w	r5, r5, #15
 80015c2:	6115      	str	r5, [r2, #16]
 80015c4:	4474      	add	r4, lr
 80015c6:	f8dc 51b4 	ldr.w	r5, [ip, #436]	@ 0x1b4
 80015ca:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80015ce:	6196      	str	r6, [r2, #24]
 80015d0:	0c2d      	lsrs	r5, r5, #16
 80015d2:	f8d4 61b8 	ldr.w	r6, [r4, #440]	@ 0x1b8
 80015d6:	6155      	str	r5, [r2, #20]
 80015d8:	701e      	strb	r6, [r3, #0]
 80015da:	6802      	ldr	r2, [r0, #0]
 80015dc:	4472      	add	r2, lr
 80015de:	f8d2 21b8 	ldr.w	r2, [r2, #440]	@ 0x1b8
 80015e2:	0a12      	lsrs	r2, r2, #8
 80015e4:	705a      	strb	r2, [r3, #1]
 80015e6:	6802      	ldr	r2, [r0, #0]
 80015e8:	4472      	add	r2, lr
 80015ea:	f8d2 21b8 	ldr.w	r2, [r2, #440]	@ 0x1b8
 80015ee:	0c12      	lsrs	r2, r2, #16
 80015f0:	709a      	strb	r2, [r3, #2]
 80015f2:	6802      	ldr	r2, [r0, #0]
 80015f4:	4472      	add	r2, lr
 80015f6:	f8d2 21b8 	ldr.w	r2, [r2, #440]	@ 0x1b8
 80015fa:	0e12      	lsrs	r2, r2, #24
 80015fc:	70da      	strb	r2, [r3, #3]
 80015fe:	6802      	ldr	r2, [r0, #0]
 8001600:	4472      	add	r2, lr
 8001602:	f8d2 21bc 	ldr.w	r2, [r2, #444]	@ 0x1bc
 8001606:	711a      	strb	r2, [r3, #4]
 8001608:	6802      	ldr	r2, [r0, #0]
 800160a:	4472      	add	r2, lr
 800160c:	f8d2 21bc 	ldr.w	r2, [r2, #444]	@ 0x1bc
 8001610:	0a12      	lsrs	r2, r2, #8
 8001612:	715a      	strb	r2, [r3, #5]
 8001614:	6802      	ldr	r2, [r0, #0]
 8001616:	4472      	add	r2, lr
 8001618:	f8d2 21bc 	ldr.w	r2, [r2, #444]	@ 0x1bc
 800161c:	0c12      	lsrs	r2, r2, #16
 800161e:	719a      	strb	r2, [r3, #6]
 8001620:	6802      	ldr	r2, [r0, #0]
 8001622:	4472      	add	r2, lr
 8001624:	f8d2 21bc 	ldr.w	r2, [r2, #444]	@ 0x1bc
 8001628:	0e12      	lsrs	r2, r2, #24
 800162a:	71da      	strb	r2, [r3, #7]
 800162c:	b981      	cbnz	r1, 8001650 <HAL_CAN_GetRxMessage+0xec>
 800162e:	6802      	ldr	r2, [r0, #0]
 8001630:	68d3      	ldr	r3, [r2, #12]
 8001632:	f043 0320 	orr.w	r3, r3, #32
 8001636:	60d3      	str	r3, [r2, #12]
 8001638:	2000      	movs	r0, #0
 800163a:	bd70      	pop	{r4, r5, r6, pc}
 800163c:	2901      	cmp	r1, #1
 800163e:	d1a6      	bne.n	800158e <HAL_CAN_GetRxMessage+0x2a>
 8001640:	6925      	ldr	r5, [r4, #16]
 8001642:	07ad      	lsls	r5, r5, #30
 8001644:	d1a3      	bne.n	800158e <HAL_CAN_GetRxMessage+0x2a>
 8001646:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8001648:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800164c:	6243      	str	r3, [r0, #36]	@ 0x24
 800164e:	e796      	b.n	800157e <HAL_CAN_GetRxMessage+0x1a>
 8001650:	2901      	cmp	r1, #1
 8001652:	d1f1      	bne.n	8001638 <HAL_CAN_GetRxMessage+0xd4>
 8001654:	6802      	ldr	r2, [r0, #0]
 8001656:	6913      	ldr	r3, [r2, #16]
 8001658:	f043 0320 	orr.w	r3, r3, #32
 800165c:	6113      	str	r3, [r2, #16]
 800165e:	e7eb      	b.n	8001638 <HAL_CAN_GetRxMessage+0xd4>
 8001660:	f8dc 51b0 	ldr.w	r5, [ip, #432]	@ 0x1b0
 8001664:	08ed      	lsrs	r5, r5, #3
 8001666:	6055      	str	r5, [r2, #4]
 8001668:	e7a0      	b.n	80015ac <HAL_CAN_GetRxMessage+0x48>
 800166a:	bf00      	nop

0800166c <HAL_CAN_GetRxFifoFillLevel>:
 800166c:	f890 3020 	ldrb.w	r3, [r0, #32]
 8001670:	2b01      	cmp	r3, #1
 8001672:	d005      	beq.n	8001680 <HAL_CAN_GetRxFifoFillLevel+0x14>
 8001674:	f890 3020 	ldrb.w	r3, [r0, #32]
 8001678:	2b02      	cmp	r3, #2
 800167a:	d001      	beq.n	8001680 <HAL_CAN_GetRxFifoFillLevel+0x14>
 800167c:	2000      	movs	r0, #0
 800167e:	4770      	bx	lr
 8001680:	6803      	ldr	r3, [r0, #0]
 8001682:	b919      	cbnz	r1, 800168c <HAL_CAN_GetRxFifoFillLevel+0x20>
 8001684:	68d8      	ldr	r0, [r3, #12]
 8001686:	f000 0003 	and.w	r0, r0, #3
 800168a:	4770      	bx	lr
 800168c:	6918      	ldr	r0, [r3, #16]
 800168e:	f000 0003 	and.w	r0, r0, #3
 8001692:	4770      	bx	lr

08001694 <HAL_CAN_ActivateNotification>:
 8001694:	f890 2020 	ldrb.w	r2, [r0, #32]
 8001698:	2a01      	cmp	r2, #1
 800169a:	4603      	mov	r3, r0
 800169c:	d009      	beq.n	80016b2 <HAL_CAN_ActivateNotification+0x1e>
 800169e:	f890 2020 	ldrb.w	r2, [r0, #32]
 80016a2:	2a02      	cmp	r2, #2
 80016a4:	d005      	beq.n	80016b2 <HAL_CAN_ActivateNotification+0x1e>
 80016a6:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 80016a8:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80016ac:	2001      	movs	r0, #1
 80016ae:	625a      	str	r2, [r3, #36]	@ 0x24
 80016b0:	4770      	bx	lr
 80016b2:	681a      	ldr	r2, [r3, #0]
 80016b4:	6953      	ldr	r3, [r2, #20]
 80016b6:	430b      	orrs	r3, r1
 80016b8:	2000      	movs	r0, #0
 80016ba:	6153      	str	r3, [r2, #20]
 80016bc:	4770      	bx	lr
 80016be:	bf00      	nop

080016c0 <HAL_CAN_DeactivateNotification>:
 80016c0:	f890 2020 	ldrb.w	r2, [r0, #32]
 80016c4:	2a01      	cmp	r2, #1
 80016c6:	4603      	mov	r3, r0
 80016c8:	d009      	beq.n	80016de <HAL_CAN_DeactivateNotification+0x1e>
 80016ca:	f890 2020 	ldrb.w	r2, [r0, #32]
 80016ce:	2a02      	cmp	r2, #2
 80016d0:	d005      	beq.n	80016de <HAL_CAN_DeactivateNotification+0x1e>
 80016d2:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 80016d4:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80016d8:	2001      	movs	r0, #1
 80016da:	625a      	str	r2, [r3, #36]	@ 0x24
 80016dc:	4770      	bx	lr
 80016de:	681a      	ldr	r2, [r3, #0]
 80016e0:	6953      	ldr	r3, [r2, #20]
 80016e2:	ea23 0301 	bic.w	r3, r3, r1
 80016e6:	2000      	movs	r0, #0
 80016e8:	6153      	str	r3, [r2, #20]
 80016ea:	4770      	bx	lr

080016ec <HAL_CAN_IRQHandler>:
 80016ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016f0:	6803      	ldr	r3, [r0, #0]
 80016f2:	695c      	ldr	r4, [r3, #20]
 80016f4:	f8d3 8004 	ldr.w	r8, [r3, #4]
 80016f8:	689f      	ldr	r7, [r3, #8]
 80016fa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80016fe:	f8d3 9010 	ldr.w	r9, [r3, #16]
 8001702:	f8d3 a018 	ldr.w	sl, [r3, #24]
 8001706:	f014 0601 	ands.w	r6, r4, #1
 800170a:	4605      	mov	r5, r0
 800170c:	d01f      	beq.n	800174e <HAL_CAN_IRQHandler+0x62>
 800170e:	07f9      	lsls	r1, r7, #31
 8001710:	f100 8082 	bmi.w	8001818 <HAL_CAN_IRQHandler+0x12c>
 8001714:	2600      	movs	r6, #0
 8001716:	05f9      	lsls	r1, r7, #23
 8001718:	d50b      	bpl.n	8001732 <HAL_CAN_IRQHandler+0x46>
 800171a:	682b      	ldr	r3, [r5, #0]
 800171c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001720:	609a      	str	r2, [r3, #8]
 8001722:	05ba      	lsls	r2, r7, #22
 8001724:	f100 80b4 	bmi.w	8001890 <HAL_CAN_IRQHandler+0x1a4>
 8001728:	057b      	lsls	r3, r7, #21
 800172a:	f140 80d2 	bpl.w	80018d2 <HAL_CAN_IRQHandler+0x1e6>
 800172e:	f446 5600 	orr.w	r6, r6, #8192	@ 0x2000
 8001732:	03f9      	lsls	r1, r7, #15
 8001734:	d50b      	bpl.n	800174e <HAL_CAN_IRQHandler+0x62>
 8001736:	682b      	ldr	r3, [r5, #0]
 8001738:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800173c:	609a      	str	r2, [r3, #8]
 800173e:	03ba      	lsls	r2, r7, #14
 8001740:	f100 809f 	bmi.w	8001882 <HAL_CAN_IRQHandler+0x196>
 8001744:	037b      	lsls	r3, r7, #13
 8001746:	f140 80c9 	bpl.w	80018dc <HAL_CAN_IRQHandler+0x1f0>
 800174a:	f446 4600 	orr.w	r6, r6, #32768	@ 0x8000
 800174e:	0721      	lsls	r1, r4, #28
 8001750:	d502      	bpl.n	8001758 <HAL_CAN_IRQHandler+0x6c>
 8001752:	f01b 0f10 	tst.w	fp, #16
 8001756:	d159      	bne.n	800180c <HAL_CAN_IRQHandler+0x120>
 8001758:	0762      	lsls	r2, r4, #29
 800175a:	d502      	bpl.n	8001762 <HAL_CAN_IRQHandler+0x76>
 800175c:	f01b 0f08 	tst.w	fp, #8
 8001760:	d16f      	bne.n	8001842 <HAL_CAN_IRQHandler+0x156>
 8001762:	07a3      	lsls	r3, r4, #30
 8001764:	d503      	bpl.n	800176e <HAL_CAN_IRQHandler+0x82>
 8001766:	682b      	ldr	r3, [r5, #0]
 8001768:	68db      	ldr	r3, [r3, #12]
 800176a:	079f      	lsls	r7, r3, #30
 800176c:	d170      	bne.n	8001850 <HAL_CAN_IRQHandler+0x164>
 800176e:	0660      	lsls	r0, r4, #25
 8001770:	d502      	bpl.n	8001778 <HAL_CAN_IRQHandler+0x8c>
 8001772:	f019 0f10 	tst.w	r9, #16
 8001776:	d15a      	bne.n	800182e <HAL_CAN_IRQHandler+0x142>
 8001778:	06a1      	lsls	r1, r4, #26
 800177a:	d502      	bpl.n	8001782 <HAL_CAN_IRQHandler+0x96>
 800177c:	f019 0f08 	tst.w	r9, #8
 8001780:	d171      	bne.n	8001866 <HAL_CAN_IRQHandler+0x17a>
 8001782:	06e2      	lsls	r2, r4, #27
 8001784:	d503      	bpl.n	800178e <HAL_CAN_IRQHandler+0xa2>
 8001786:	682b      	ldr	r3, [r5, #0]
 8001788:	691b      	ldr	r3, [r3, #16]
 800178a:	079b      	lsls	r3, r3, #30
 800178c:	d155      	bne.n	800183a <HAL_CAN_IRQHandler+0x14e>
 800178e:	03a7      	lsls	r7, r4, #14
 8001790:	d502      	bpl.n	8001798 <HAL_CAN_IRQHandler+0xac>
 8001792:	f018 0f10 	tst.w	r8, #16
 8001796:	d15f      	bne.n	8001858 <HAL_CAN_IRQHandler+0x16c>
 8001798:	03e0      	lsls	r0, r4, #15
 800179a:	d502      	bpl.n	80017a2 <HAL_CAN_IRQHandler+0xb6>
 800179c:	f018 0f08 	tst.w	r8, #8
 80017a0:	d168      	bne.n	8001874 <HAL_CAN_IRQHandler+0x188>
 80017a2:	0421      	lsls	r1, r4, #16
 80017a4:	d52e      	bpl.n	8001804 <HAL_CAN_IRQHandler+0x118>
 80017a6:	f018 0f04 	tst.w	r8, #4
 80017aa:	682b      	ldr	r3, [r5, #0]
 80017ac:	d028      	beq.n	8001800 <HAL_CAN_IRQHandler+0x114>
 80017ae:	05e2      	lsls	r2, r4, #23
 80017b0:	bf44      	itt	mi
 80017b2:	f00a 0201 	andmi.w	r2, sl, #1
 80017b6:	4316      	orrmi	r6, r2
 80017b8:	05a7      	lsls	r7, r4, #22
 80017ba:	d516      	bpl.n	80017ea <HAL_CAN_IRQHandler+0xfe>
 80017bc:	f01a 0f02 	tst.w	sl, #2
 80017c0:	d013      	beq.n	80017ea <HAL_CAN_IRQHandler+0xfe>
 80017c2:	0560      	lsls	r0, r4, #21
 80017c4:	f046 0602 	orr.w	r6, r6, #2
 80017c8:	f404 6200 	and.w	r2, r4, #2048	@ 0x800
 80017cc:	d566      	bpl.n	800189c <HAL_CAN_IRQHandler+0x1b0>
 80017ce:	f01a 0f04 	tst.w	sl, #4
 80017d2:	d161      	bne.n	8001898 <HAL_CAN_IRQHandler+0x1ac>
 80017d4:	b98a      	cbnz	r2, 80017fa <HAL_CAN_IRQHandler+0x10e>
 80017d6:	2204      	movs	r2, #4
 80017d8:	605a      	str	r2, [r3, #4]
 80017da:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80017dc:	4333      	orrs	r3, r6
 80017de:	4628      	mov	r0, r5
 80017e0:	626b      	str	r3, [r5, #36]	@ 0x24
 80017e2:	f020 f871 	bl	80218c8 <HAL_CAN_ErrorCallback>
 80017e6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80017ea:	0561      	lsls	r1, r4, #21
 80017ec:	f404 6200 	and.w	r2, r4, #2048	@ 0x800
 80017f0:	d502      	bpl.n	80017f8 <HAL_CAN_IRQHandler+0x10c>
 80017f2:	f01a 0f04 	tst.w	sl, #4
 80017f6:	d14f      	bne.n	8001898 <HAL_CAN_IRQHandler+0x1ac>
 80017f8:	b112      	cbz	r2, 8001800 <HAL_CAN_IRQHandler+0x114>
 80017fa:	f01a 0a70 	ands.w	sl, sl, #112	@ 0x70
 80017fe:	d152      	bne.n	80018a6 <HAL_CAN_IRQHandler+0x1ba>
 8001800:	2204      	movs	r2, #4
 8001802:	605a      	str	r2, [r3, #4]
 8001804:	2e00      	cmp	r6, #0
 8001806:	d1e8      	bne.n	80017da <HAL_CAN_IRQHandler+0xee>
 8001808:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800180c:	682b      	ldr	r3, [r5, #0]
 800180e:	2210      	movs	r2, #16
 8001810:	f446 7600 	orr.w	r6, r6, #512	@ 0x200
 8001814:	60da      	str	r2, [r3, #12]
 8001816:	e79f      	b.n	8001758 <HAL_CAN_IRQHandler+0x6c>
 8001818:	2201      	movs	r2, #1
 800181a:	609a      	str	r2, [r3, #8]
 800181c:	07ba      	lsls	r2, r7, #30
 800181e:	d434      	bmi.n	800188a <HAL_CAN_IRQHandler+0x19e>
 8001820:	077b      	lsls	r3, r7, #29
 8001822:	d460      	bmi.n	80018e6 <HAL_CAN_IRQHandler+0x1fa>
 8001824:	073e      	lsls	r6, r7, #28
 8001826:	d570      	bpl.n	800190a <HAL_CAN_IRQHandler+0x21e>
 8001828:	f44f 5680 	mov.w	r6, #4096	@ 0x1000
 800182c:	e773      	b.n	8001716 <HAL_CAN_IRQHandler+0x2a>
 800182e:	682b      	ldr	r3, [r5, #0]
 8001830:	2210      	movs	r2, #16
 8001832:	f446 6680 	orr.w	r6, r6, #1024	@ 0x400
 8001836:	611a      	str	r2, [r3, #16]
 8001838:	e79e      	b.n	8001778 <HAL_CAN_IRQHandler+0x8c>
 800183a:	4628      	mov	r0, r5
 800183c:	f020 f83c 	bl	80218b8 <HAL_CAN_RxFifo1MsgPendingCallback>
 8001840:	e7a5      	b.n	800178e <HAL_CAN_IRQHandler+0xa2>
 8001842:	682b      	ldr	r3, [r5, #0]
 8001844:	2208      	movs	r2, #8
 8001846:	60da      	str	r2, [r3, #12]
 8001848:	4628      	mov	r0, r5
 800184a:	f020 f833 	bl	80218b4 <HAL_CAN_RxFifo0FullCallback>
 800184e:	e788      	b.n	8001762 <HAL_CAN_IRQHandler+0x76>
 8001850:	4628      	mov	r0, r5
 8001852:	f020 f823 	bl	802189c <HAL_CAN_RxFifo0MsgPendingCallback>
 8001856:	e78a      	b.n	800176e <HAL_CAN_IRQHandler+0x82>
 8001858:	682b      	ldr	r3, [r5, #0]
 800185a:	2210      	movs	r2, #16
 800185c:	605a      	str	r2, [r3, #4]
 800185e:	4628      	mov	r0, r5
 8001860:	f020 f82e 	bl	80218c0 <HAL_CAN_SleepCallback>
 8001864:	e798      	b.n	8001798 <HAL_CAN_IRQHandler+0xac>
 8001866:	682b      	ldr	r3, [r5, #0]
 8001868:	2208      	movs	r2, #8
 800186a:	611a      	str	r2, [r3, #16]
 800186c:	4628      	mov	r0, r5
 800186e:	f020 f825 	bl	80218bc <HAL_CAN_RxFifo1FullCallback>
 8001872:	e786      	b.n	8001782 <HAL_CAN_IRQHandler+0x96>
 8001874:	682b      	ldr	r3, [r5, #0]
 8001876:	2208      	movs	r2, #8
 8001878:	605a      	str	r2, [r3, #4]
 800187a:	4628      	mov	r0, r5
 800187c:	f020 f822 	bl	80218c4 <HAL_CAN_WakeUpFromRxMsgCallback>
 8001880:	e78f      	b.n	80017a2 <HAL_CAN_IRQHandler+0xb6>
 8001882:	4628      	mov	r0, r5
 8001884:	f020 f802 	bl	802188c <HAL_CAN_TxMailbox2CompleteCallback>
 8001888:	e761      	b.n	800174e <HAL_CAN_IRQHandler+0x62>
 800188a:	f01f fffb 	bl	8021884 <HAL_CAN_TxMailbox0CompleteCallback>
 800188e:	e741      	b.n	8001714 <HAL_CAN_IRQHandler+0x28>
 8001890:	4628      	mov	r0, r5
 8001892:	f01f fff9 	bl	8021888 <HAL_CAN_TxMailbox1CompleteCallback>
 8001896:	e74c      	b.n	8001732 <HAL_CAN_IRQHandler+0x46>
 8001898:	f046 0604 	orr.w	r6, r6, #4
 800189c:	2a00      	cmp	r2, #0
 800189e:	d09a      	beq.n	80017d6 <HAL_CAN_IRQHandler+0xea>
 80018a0:	f01a 0a70 	ands.w	sl, sl, #112	@ 0x70
 80018a4:	d097      	beq.n	80017d6 <HAL_CAN_IRQHandler+0xea>
 80018a6:	f1ba 0f40 	cmp.w	sl, #64	@ 0x40
 80018aa:	d03e      	beq.n	800192a <HAL_CAN_IRQHandler+0x23e>
 80018ac:	d81e      	bhi.n	80018ec <HAL_CAN_IRQHandler+0x200>
 80018ae:	f1ba 0f20 	cmp.w	sl, #32
 80018b2:	d055      	beq.n	8001960 <HAL_CAN_IRQHandler+0x274>
 80018b4:	f1ba 0f30 	cmp.w	sl, #48	@ 0x30
 80018b8:	d049      	beq.n	800194e <HAL_CAN_IRQHandler+0x262>
 80018ba:	f1ba 0f10 	cmp.w	sl, #16
 80018be:	d12f      	bne.n	8001920 <HAL_CAN_IRQHandler+0x234>
 80018c0:	699a      	ldr	r2, [r3, #24]
 80018c2:	2104      	movs	r1, #4
 80018c4:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80018c8:	619a      	str	r2, [r3, #24]
 80018ca:	f046 0608 	orr.w	r6, r6, #8
 80018ce:	6059      	str	r1, [r3, #4]
 80018d0:	e783      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 80018d2:	0538      	lsls	r0, r7, #20
 80018d4:	d520      	bpl.n	8001918 <HAL_CAN_IRQHandler+0x22c>
 80018d6:	f446 4680 	orr.w	r6, r6, #16384	@ 0x4000
 80018da:	e72a      	b.n	8001732 <HAL_CAN_IRQHandler+0x46>
 80018dc:	0338      	lsls	r0, r7, #12
 80018de:	d517      	bpl.n	8001910 <HAL_CAN_IRQHandler+0x224>
 80018e0:	f446 3680 	orr.w	r6, r6, #65536	@ 0x10000
 80018e4:	e733      	b.n	800174e <HAL_CAN_IRQHandler+0x62>
 80018e6:	f44f 6600 	mov.w	r6, #2048	@ 0x800
 80018ea:	e714      	b.n	8001716 <HAL_CAN_IRQHandler+0x2a>
 80018ec:	f1ba 0f50 	cmp.w	sl, #80	@ 0x50
 80018f0:	d024      	beq.n	800193c <HAL_CAN_IRQHandler+0x250>
 80018f2:	f1ba 0f60 	cmp.w	sl, #96	@ 0x60
 80018f6:	d113      	bne.n	8001920 <HAL_CAN_IRQHandler+0x234>
 80018f8:	699a      	ldr	r2, [r3, #24]
 80018fa:	2104      	movs	r1, #4
 80018fc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001900:	619a      	str	r2, [r3, #24]
 8001902:	f446 7680 	orr.w	r6, r6, #256	@ 0x100
 8001906:	6059      	str	r1, [r3, #4]
 8001908:	e767      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 800190a:	f01f ffc1 	bl	8021890 <HAL_CAN_TxMailbox0AbortCallback>
 800190e:	e701      	b.n	8001714 <HAL_CAN_IRQHandler+0x28>
 8001910:	4628      	mov	r0, r5
 8001912:	f01f ffc1 	bl	8021898 <HAL_CAN_TxMailbox2AbortCallback>
 8001916:	e71a      	b.n	800174e <HAL_CAN_IRQHandler+0x62>
 8001918:	4628      	mov	r0, r5
 800191a:	f01f ffbb 	bl	8021894 <HAL_CAN_TxMailbox1AbortCallback>
 800191e:	e708      	b.n	8001732 <HAL_CAN_IRQHandler+0x46>
 8001920:	699a      	ldr	r2, [r3, #24]
 8001922:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001926:	619a      	str	r2, [r3, #24]
 8001928:	e76a      	b.n	8001800 <HAL_CAN_IRQHandler+0x114>
 800192a:	699a      	ldr	r2, [r3, #24]
 800192c:	2104      	movs	r1, #4
 800192e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001932:	619a      	str	r2, [r3, #24]
 8001934:	f046 0640 	orr.w	r6, r6, #64	@ 0x40
 8001938:	6059      	str	r1, [r3, #4]
 800193a:	e74e      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 800193c:	699a      	ldr	r2, [r3, #24]
 800193e:	2104      	movs	r1, #4
 8001940:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001944:	619a      	str	r2, [r3, #24]
 8001946:	f046 0680 	orr.w	r6, r6, #128	@ 0x80
 800194a:	6059      	str	r1, [r3, #4]
 800194c:	e745      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 800194e:	699a      	ldr	r2, [r3, #24]
 8001950:	2104      	movs	r1, #4
 8001952:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001956:	619a      	str	r2, [r3, #24]
 8001958:	f046 0620 	orr.w	r6, r6, #32
 800195c:	6059      	str	r1, [r3, #4]
 800195e:	e73c      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 8001960:	699a      	ldr	r2, [r3, #24]
 8001962:	2104      	movs	r1, #4
 8001964:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8001968:	619a      	str	r2, [r3, #24]
 800196a:	f046 0610 	orr.w	r6, r6, #16
 800196e:	6059      	str	r1, [r3, #4]
 8001970:	e733      	b.n	80017da <HAL_CAN_IRQHandler+0xee>
 8001972:	bf00      	nop

08001974 <HAL_CAN_GetError>:
 8001974:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8001976:	4770      	bx	lr

08001978 <HAL_CAN_ResetError>:
 8001978:	f890 2020 	ldrb.w	r2, [r0, #32]
 800197c:	2a01      	cmp	r2, #1
 800197e:	4603      	mov	r3, r0
 8001980:	d009      	beq.n	8001996 <HAL_CAN_ResetError+0x1e>
 8001982:	f890 2020 	ldrb.w	r2, [r0, #32]
 8001986:	2a02      	cmp	r2, #2
 8001988:	d005      	beq.n	8001996 <HAL_CAN_ResetError+0x1e>
 800198a:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800198c:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 8001990:	2001      	movs	r0, #1
 8001992:	625a      	str	r2, [r3, #36]	@ 0x24
 8001994:	4770      	bx	lr
 8001996:	2000      	movs	r0, #0
 8001998:	6258      	str	r0, [r3, #36]	@ 0x24
 800199a:	4770      	bx	lr

0800199c <USB_CoreInit>:
 800199c:	b084      	sub	sp, #16
 800199e:	f10d 0c04 	add.w	ip, sp, #4
 80019a2:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
 80019a6:	9b06      	ldr	r3, [sp, #24]
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	d130      	bne.n	8001a0e <USB_CoreInit+0x72>
 80019ac:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80019ae:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80019b0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80019b4:	6383      	str	r3, [r0, #56]	@ 0x38
 80019b6:	68c3      	ldr	r3, [r0, #12]
 80019b8:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 80019bc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80019c0:	60c3      	str	r3, [r0, #12]
 80019c2:	68c3      	ldr	r3, [r0, #12]
 80019c4:	2a01      	cmp	r2, #1
 80019c6:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80019ca:	60c3      	str	r3, [r0, #12]
 80019cc:	d039      	beq.n	8001a42 <USB_CoreInit+0xa6>
 80019ce:	4b1f      	ldr	r3, [pc, #124]	@ (8001a4c <USB_CoreInit+0xb0>)
 80019d0:	e001      	b.n	80019d6 <USB_CoreInit+0x3a>
 80019d2:	3b01      	subs	r3, #1
 80019d4:	d00d      	beq.n	80019f2 <USB_CoreInit+0x56>
 80019d6:	6902      	ldr	r2, [r0, #16]
 80019d8:	2a00      	cmp	r2, #0
 80019da:	dafa      	bge.n	80019d2 <USB_CoreInit+0x36>
 80019dc:	6902      	ldr	r2, [r0, #16]
 80019de:	4b1b      	ldr	r3, [pc, #108]	@ (8001a4c <USB_CoreInit+0xb0>)
 80019e0:	f042 0201 	orr.w	r2, r2, #1
 80019e4:	6102      	str	r2, [r0, #16]
 80019e6:	e001      	b.n	80019ec <USB_CoreInit+0x50>
 80019e8:	3b01      	subs	r3, #1
 80019ea:	d002      	beq.n	80019f2 <USB_CoreInit+0x56>
 80019ec:	6902      	ldr	r2, [r0, #16]
 80019ee:	07d1      	lsls	r1, r2, #31
 80019f0:	d4fa      	bmi.n	80019e8 <USB_CoreInit+0x4c>
 80019f2:	9b04      	ldr	r3, [sp, #16]
 80019f4:	2b01      	cmp	r3, #1
 80019f6:	d107      	bne.n	8001a08 <USB_CoreInit+0x6c>
 80019f8:	6883      	ldr	r3, [r0, #8]
 80019fa:	f043 0306 	orr.w	r3, r3, #6
 80019fe:	6083      	str	r3, [r0, #8]
 8001a00:	6883      	ldr	r3, [r0, #8]
 8001a02:	f043 0320 	orr.w	r3, r3, #32
 8001a06:	6083      	str	r3, [r0, #8]
 8001a08:	2000      	movs	r0, #0
 8001a0a:	b004      	add	sp, #16
 8001a0c:	4770      	bx	lr
 8001a0e:	68c2      	ldr	r2, [r0, #12]
 8001a10:	4b0e      	ldr	r3, [pc, #56]	@ (8001a4c <USB_CoreInit+0xb0>)
 8001a12:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001a16:	60c2      	str	r2, [r0, #12]
 8001a18:	e001      	b.n	8001a1e <USB_CoreInit+0x82>
 8001a1a:	3b01      	subs	r3, #1
 8001a1c:	d00d      	beq.n	8001a3a <USB_CoreInit+0x9e>
 8001a1e:	6902      	ldr	r2, [r0, #16]
 8001a20:	2a00      	cmp	r2, #0
 8001a22:	dafa      	bge.n	8001a1a <USB_CoreInit+0x7e>
 8001a24:	6902      	ldr	r2, [r0, #16]
 8001a26:	4b09      	ldr	r3, [pc, #36]	@ (8001a4c <USB_CoreInit+0xb0>)
 8001a28:	f042 0201 	orr.w	r2, r2, #1
 8001a2c:	6102      	str	r2, [r0, #16]
 8001a2e:	e001      	b.n	8001a34 <USB_CoreInit+0x98>
 8001a30:	3b01      	subs	r3, #1
 8001a32:	d002      	beq.n	8001a3a <USB_CoreInit+0x9e>
 8001a34:	6902      	ldr	r2, [r0, #16]
 8001a36:	07d2      	lsls	r2, r2, #31
 8001a38:	d4fa      	bmi.n	8001a30 <USB_CoreInit+0x94>
 8001a3a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001a3e:	6383      	str	r3, [r0, #56]	@ 0x38
 8001a40:	e7d7      	b.n	80019f2 <USB_CoreInit+0x56>
 8001a42:	68c3      	ldr	r3, [r0, #12]
 8001a44:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001a48:	60c3      	str	r3, [r0, #12]
 8001a4a:	e7c0      	b.n	80019ce <USB_CoreInit+0x32>
 8001a4c:	00030d40 	.word	0x00030d40

08001a50 <USB_EnableGlobalInt>:
 8001a50:	4603      	mov	r3, r0
 8001a52:	2000      	movs	r0, #0
 8001a54:	689a      	ldr	r2, [r3, #8]
 8001a56:	f042 0201 	orr.w	r2, r2, #1
 8001a5a:	609a      	str	r2, [r3, #8]
 8001a5c:	4770      	bx	lr
 8001a5e:	bf00      	nop

08001a60 <USB_DisableGlobalInt>:
 8001a60:	4603      	mov	r3, r0
 8001a62:	2000      	movs	r0, #0
 8001a64:	689a      	ldr	r2, [r3, #8]
 8001a66:	f022 0201 	bic.w	r2, r2, #1
 8001a6a:	609a      	str	r2, [r3, #8]
 8001a6c:	4770      	bx	lr
 8001a6e:	bf00      	nop

08001a70 <USB_SetCurrentMode>:
 8001a70:	b508      	push	{r3, lr}
 8001a72:	68c3      	ldr	r3, [r0, #12]
 8001a74:	2901      	cmp	r1, #1
 8001a76:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8001a7a:	60c3      	str	r3, [r0, #12]
 8001a7c:	d009      	beq.n	8001a92 <USB_SetCurrentMode+0x22>
 8001a7e:	b919      	cbnz	r1, 8001a88 <USB_SetCurrentMode+0x18>
 8001a80:	68c3      	ldr	r3, [r0, #12]
 8001a82:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8001a86:	60c3      	str	r3, [r0, #12]
 8001a88:	2032      	movs	r0, #50	@ 0x32
 8001a8a:	f004 f9ad 	bl	8005de8 <HAL_Delay>
 8001a8e:	2000      	movs	r0, #0
 8001a90:	bd08      	pop	{r3, pc}
 8001a92:	68c3      	ldr	r3, [r0, #12]
 8001a94:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001a98:	60c3      	str	r3, [r0, #12]
 8001a9a:	2032      	movs	r0, #50	@ 0x32
 8001a9c:	f004 f9a4 	bl	8005de8 <HAL_Delay>
 8001aa0:	2000      	movs	r0, #0
 8001aa2:	bd08      	pop	{r3, pc}

08001aa4 <USB_DevInit>:
 8001aa4:	b084      	sub	sp, #16
 8001aa6:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 8001aaa:	ac07      	add	r4, sp, #28
 8001aac:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8001ab0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8001ab2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8001ab4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8001ab6:	2c00      	cmp	r4, #0
 8001ab8:	f040 808d 	bne.w	8001bd6 <USB_DevInit+0x132>
 8001abc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001ac0:	6383      	str	r3, [r0, #56]	@ 0x38
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
 8001ac8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8001aca:	f8d0 2800 	ldr.w	r2, [r0, #2048]	@ 0x800
 8001ace:	f8c0 2800 	str.w	r2, [r0, #2048]	@ 0x800
 8001ad2:	2b01      	cmp	r3, #1
 8001ad4:	f500 6c00 	add.w	ip, r0, #2048	@ 0x800
 8001ad8:	f000 8094 	beq.w	8001c04 <USB_DevInit+0x160>
 8001adc:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8001ae0:	f043 0303 	orr.w	r3, r3, #3
 8001ae4:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
 8001ae8:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8001aec:	6103      	str	r3, [r0, #16]
 8001aee:	4b4c      	ldr	r3, [pc, #304]	@ (8001c20 <USB_DevInit+0x17c>)
 8001af0:	e001      	b.n	8001af6 <USB_DevInit+0x52>
 8001af2:	3b01      	subs	r3, #1
 8001af4:	d002      	beq.n	8001afc <USB_DevInit+0x58>
 8001af6:	6902      	ldr	r2, [r0, #16]
 8001af8:	0696      	lsls	r6, r2, #26
 8001afa:	d4fa      	bmi.n	8001af2 <USB_DevInit+0x4e>
 8001afc:	2310      	movs	r3, #16
 8001afe:	6103      	str	r3, [r0, #16]
 8001b00:	4b47      	ldr	r3, [pc, #284]	@ (8001c20 <USB_DevInit+0x17c>)
 8001b02:	e001      	b.n	8001b08 <USB_DevInit+0x64>
 8001b04:	3b01      	subs	r3, #1
 8001b06:	d002      	beq.n	8001b0e <USB_DevInit+0x6a>
 8001b08:	6902      	ldr	r2, [r0, #16]
 8001b0a:	06d2      	lsls	r2, r2, #27
 8001b0c:	d4fa      	bmi.n	8001b04 <USB_DevInit+0x60>
 8001b0e:	2200      	movs	r2, #0
 8001b10:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001b14:	f8cc 2010 	str.w	r2, [ip, #16]
 8001b18:	f8cc 2014 	str.w	r2, [ip, #20]
 8001b1c:	f8cc 3018 	str.w	r3, [ip, #24]
 8001b20:	f8cc 201c 	str.w	r2, [ip, #28]
 8001b24:	b371      	cbz	r1, 8001b84 <USB_DevInit+0xe0>
 8001b26:	f500 6310 	add.w	r3, r0, #2304	@ 0x900
 8001b2a:	4696      	mov	lr, r2
 8001b2c:	f04f 4990 	mov.w	r9, #1207959552	@ 0x48000000
 8001b30:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 8001b34:	681e      	ldr	r6, [r3, #0]
 8001b36:	3201      	adds	r2, #1
 8001b38:	2e00      	cmp	r6, #0
 8001b3a:	bfb4      	ite	lt
 8001b3c:	f8c3 9000 	strlt.w	r9, [r3]
 8001b40:	f8c3 e000 	strge.w	lr, [r3]
 8001b44:	4291      	cmp	r1, r2
 8001b46:	f8c3 e010 	str.w	lr, [r3, #16]
 8001b4a:	f8c3 8008 	str.w	r8, [r3, #8]
 8001b4e:	f103 0320 	add.w	r3, r3, #32
 8001b52:	d1ef      	bne.n	8001b34 <USB_DevInit+0x90>
 8001b54:	2200      	movs	r2, #0
 8001b56:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8001b5a:	4696      	mov	lr, r2
 8001b5c:	f04f 4990 	mov.w	r9, #1207959552	@ 0x48000000
 8001b60:	f04f 08ff 	mov.w	r8, #255	@ 0xff
 8001b64:	681e      	ldr	r6, [r3, #0]
 8001b66:	3201      	adds	r2, #1
 8001b68:	2e00      	cmp	r6, #0
 8001b6a:	bfb4      	ite	lt
 8001b6c:	f8c3 9000 	strlt.w	r9, [r3]
 8001b70:	f8c3 e000 	strge.w	lr, [r3]
 8001b74:	4291      	cmp	r1, r2
 8001b76:	f8c3 e010 	str.w	lr, [r3, #16]
 8001b7a:	f8c3 8008 	str.w	r8, [r3, #8]
 8001b7e:	f103 0320 	add.w	r3, r3, #32
 8001b82:	d1ef      	bne.n	8001b64 <USB_DevInit+0xc0>
 8001b84:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8001b88:	2d01      	cmp	r5, #1
 8001b8a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001b8e:	f8cc 3010 	str.w	r3, [ip, #16]
 8001b92:	d024      	beq.n	8001bde <USB_DevInit+0x13a>
 8001b94:	2200      	movs	r2, #0
 8001b96:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8001b9a:	6182      	str	r2, [r0, #24]
 8001b9c:	6143      	str	r3, [r0, #20]
 8001b9e:	b91d      	cbnz	r5, 8001ba8 <USB_DevInit+0x104>
 8001ba0:	6983      	ldr	r3, [r0, #24]
 8001ba2:	f043 0310 	orr.w	r3, r3, #16
 8001ba6:	6183      	str	r3, [r0, #24]
 8001ba8:	6981      	ldr	r1, [r0, #24]
 8001baa:	4b1e      	ldr	r3, [pc, #120]	@ (8001c24 <USB_DevInit+0x180>)
 8001bac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8001bae:	430b      	orrs	r3, r1
 8001bb0:	6183      	str	r3, [r0, #24]
 8001bb2:	b11a      	cbz	r2, 8001bbc <USB_DevInit+0x118>
 8001bb4:	6983      	ldr	r3, [r0, #24]
 8001bb6:	f043 0308 	orr.w	r3, r3, #8
 8001bba:	6183      	str	r3, [r0, #24]
 8001bbc:	2c01      	cmp	r4, #1
 8001bbe:	d105      	bne.n	8001bcc <USB_DevInit+0x128>
 8001bc0:	6983      	ldr	r3, [r0, #24]
 8001bc2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8001bc6:	f043 0304 	orr.w	r3, r3, #4
 8001bca:	6183      	str	r3, [r0, #24]
 8001bcc:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 8001bd0:	2000      	movs	r0, #0
 8001bd2:	b004      	add	sp, #16
 8001bd4:	4770      	bx	lr
 8001bd6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001bda:	6383      	str	r3, [r0, #56]	@ 0x38
 8001bdc:	e771      	b.n	8001ac2 <USB_DevInit+0x1e>
 8001bde:	4b12      	ldr	r3, [pc, #72]	@ (8001c28 <USB_DevInit+0x184>)
 8001be0:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
 8001be4:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
 8001be8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001bec:	f043 0303 	orr.w	r3, r3, #3
 8001bf0:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8001bfa:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
 8001bfe:	6182      	str	r2, [r0, #24]
 8001c00:	6143      	str	r3, [r0, #20]
 8001c02:	e7d1      	b.n	8001ba8 <USB_DevInit+0x104>
 8001c04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c06:	b923      	cbnz	r3, 8001c12 <USB_DevInit+0x16e>
 8001c08:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8001c0c:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
 8001c10:	e76a      	b.n	8001ae8 <USB_DevInit+0x44>
 8001c12:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8001c16:	f043 0301 	orr.w	r3, r3, #1
 8001c1a:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
 8001c1e:	e763      	b.n	8001ae8 <USB_DevInit+0x44>
 8001c20:	00030d40 	.word	0x00030d40
 8001c24:	803c3800 	.word	0x803c3800
 8001c28:	00800100 	.word	0x00800100

08001c2c <USB_FlushTxFifo>:
 8001c2c:	0189      	lsls	r1, r1, #6
 8001c2e:	f041 0120 	orr.w	r1, r1, #32
 8001c32:	4a06      	ldr	r2, [pc, #24]	@ (8001c4c <USB_FlushTxFifo+0x20>)
 8001c34:	6101      	str	r1, [r0, #16]
 8001c36:	e001      	b.n	8001c3c <USB_FlushTxFifo+0x10>
 8001c38:	3a01      	subs	r2, #1
 8001c3a:	d005      	beq.n	8001c48 <USB_FlushTxFifo+0x1c>
 8001c3c:	6903      	ldr	r3, [r0, #16]
 8001c3e:	f013 0320 	ands.w	r3, r3, #32
 8001c42:	d1f9      	bne.n	8001c38 <USB_FlushTxFifo+0xc>
 8001c44:	4618      	mov	r0, r3
 8001c46:	4770      	bx	lr
 8001c48:	2003      	movs	r0, #3
 8001c4a:	4770      	bx	lr
 8001c4c:	00030d40 	.word	0x00030d40

08001c50 <USB_GetDevSpeed>:
 8001c50:	f500 6200 	add.w	r2, r0, #2048	@ 0x800
 8001c54:	f8d0 0808 	ldr.w	r0, [r0, #2056]	@ 0x808
 8001c58:	f010 0006 	ands.w	r0, r0, #6
 8001c5c:	d014      	beq.n	8001c88 <USB_GetDevSpeed+0x38>
 8001c5e:	6893      	ldr	r3, [r2, #8]
 8001c60:	f003 0306 	and.w	r3, r3, #6
 8001c64:	2b02      	cmp	r3, #2
 8001c66:	d00e      	beq.n	8001c86 <USB_GetDevSpeed+0x36>
 8001c68:	6893      	ldr	r3, [r2, #8]
 8001c6a:	f003 0306 	and.w	r3, r3, #6
 8001c6e:	2b06      	cmp	r3, #6
 8001c70:	d009      	beq.n	8001c86 <USB_GetDevSpeed+0x36>
 8001c72:	6890      	ldr	r0, [r2, #8]
 8001c74:	f000 0006 	and.w	r0, r0, #6
 8001c78:	f1a0 0004 	sub.w	r0, r0, #4
 8001c7c:	fab0 f080 	clz	r0, r0
 8001c80:	0940      	lsrs	r0, r0, #5
 8001c82:	0040      	lsls	r0, r0, #1
 8001c84:	4770      	bx	lr
 8001c86:	2003      	movs	r0, #3
 8001c88:	4770      	bx	lr
 8001c8a:	bf00      	nop

08001c8c <USB_ActivateEndpoint>:
 8001c8c:	b510      	push	{r4, lr}
 8001c8e:	784c      	ldrb	r4, [r1, #1]
 8001c90:	f891 c000 	ldrb.w	ip, [r1]
 8001c94:	2301      	movs	r3, #1
 8001c96:	2c01      	cmp	r4, #1
 8001c98:	f500 6e00 	add.w	lr, r0, #2048	@ 0x800
 8001c9c:	fa03 f30c 	lsl.w	r3, r3, ip
 8001ca0:	ea4f 124c 	mov.w	r2, ip, lsl #5
 8001ca4:	d019      	beq.n	8001cda <USB_ActivateEndpoint+0x4e>
 8001ca6:	f8de 401c 	ldr.w	r4, [lr, #28]
 8001caa:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8001cae:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8001cb2:	f8ce 301c 	str.w	r3, [lr, #28]
 8001cb6:	5883      	ldr	r3, [r0, r2]
 8001cb8:	041b      	lsls	r3, r3, #16
 8001cba:	d40c      	bmi.n	8001cd6 <USB_ActivateEndpoint+0x4a>
 8001cbc:	688b      	ldr	r3, [r1, #8]
 8001cbe:	5884      	ldr	r4, [r0, r2]
 8001cc0:	78c9      	ldrb	r1, [r1, #3]
 8001cc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001cc6:	4323      	orrs	r3, r4
 8001cc8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
 8001ccc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001cd0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001cd4:	5083      	str	r3, [r0, r2]
 8001cd6:	2000      	movs	r0, #0
 8001cd8:	bd10      	pop	{r4, pc}
 8001cda:	f8de 401c 	ldr.w	r4, [lr, #28]
 8001cde:	b29b      	uxth	r3, r3
 8001ce0:	4323      	orrs	r3, r4
 8001ce2:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8001ce6:	f8ce 301c 	str.w	r3, [lr, #28]
 8001cea:	5883      	ldr	r3, [r0, r2]
 8001cec:	041c      	lsls	r4, r3, #16
 8001cee:	d4f2      	bmi.n	8001cd6 <USB_ActivateEndpoint+0x4a>
 8001cf0:	688b      	ldr	r3, [r1, #8]
 8001cf2:	5884      	ldr	r4, [r0, r2]
 8001cf4:	78c9      	ldrb	r1, [r1, #3]
 8001cf6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001cfa:	4323      	orrs	r3, r4
 8001cfc:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
 8001d00:	ea43 538c 	orr.w	r3, r3, ip, lsl #22
 8001d04:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001d08:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001d0c:	5083      	str	r3, [r0, r2]
 8001d0e:	2000      	movs	r0, #0
 8001d10:	bd10      	pop	{r4, pc}
 8001d12:	bf00      	nop

08001d14 <USB_DeactivateEndpoint>:
 8001d14:	b410      	push	{r4}
 8001d16:	784a      	ldrb	r2, [r1, #1]
 8001d18:	f891 c000 	ldrb.w	ip, [r1]
 8001d1c:	2a01      	cmp	r2, #1
 8001d1e:	ea4f 134c 	mov.w	r3, ip, lsl #5
 8001d22:	d027      	beq.n	8001d74 <USB_DeactivateEndpoint+0x60>
 8001d24:	f500 6230 	add.w	r2, r0, #2816	@ 0xb00
 8001d28:	18d1      	adds	r1, r2, r3
 8001d2a:	58d4      	ldr	r4, [r2, r3]
 8001d2c:	f424 4400 	bic.w	r4, r4, #32768	@ 0x8000
 8001d30:	50d4      	str	r4, [r2, r3]
 8001d32:	f04f 6400 	mov.w	r4, #134217728	@ 0x8000000
 8001d36:	50d4      	str	r4, [r2, r3]
 8001d38:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8001d3c:	50d4      	str	r4, [r2, r3]
 8001d3e:	4b24      	ldr	r3, [pc, #144]	@ (8001dd0 <USB_DeactivateEndpoint+0xbc>)
 8001d40:	e001      	b.n	8001d46 <USB_DeactivateEndpoint+0x32>
 8001d42:	3b01      	subs	r3, #1
 8001d44:	d03f      	beq.n	8001dc6 <USB_DeactivateEndpoint+0xb2>
 8001d46:	688a      	ldr	r2, [r1, #8]
 8001d48:	06d2      	lsls	r2, r2, #27
 8001d4a:	d4fa      	bmi.n	8001d42 <USB_DeactivateEndpoint+0x2e>
 8001d4c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8001d50:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001d54:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
 8001d58:	f8d0 381c 	ldr.w	r3, [r0, #2076]	@ 0x81c
 8001d5c:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001d60:	fa02 f20c 	lsl.w	r2, r2, ip
 8001d64:	ea23 0302 	bic.w	r3, r3, r2
 8001d68:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001d72:	4770      	bx	lr
 8001d74:	f500 6210 	add.w	r2, r0, #2304	@ 0x900
 8001d78:	18d1      	adds	r1, r2, r3
 8001d7a:	58d4      	ldr	r4, [r2, r3]
 8001d7c:	f424 4400 	bic.w	r4, r4, #32768	@ 0x8000
 8001d80:	50d4      	str	r4, [r2, r3]
 8001d82:	f04f 6400 	mov.w	r4, #134217728	@ 0x8000000
 8001d86:	50d4      	str	r4, [r2, r3]
 8001d88:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8001d8c:	50d4      	str	r4, [r2, r3]
 8001d8e:	4b10      	ldr	r3, [pc, #64]	@ (8001dd0 <USB_DeactivateEndpoint+0xbc>)
 8001d90:	e001      	b.n	8001d96 <USB_DeactivateEndpoint+0x82>
 8001d92:	3b01      	subs	r3, #1
 8001d94:	d017      	beq.n	8001dc6 <USB_DeactivateEndpoint+0xb2>
 8001d96:	688a      	ldr	r2, [r1, #8]
 8001d98:	0054      	lsls	r4, r2, #1
 8001d9a:	d4fa      	bmi.n	8001d92 <USB_DeactivateEndpoint+0x7e>
 8001d9c:	f44f 6284 	mov.w	r2, #1056	@ 0x420
 8001da0:	4b0b      	ldr	r3, [pc, #44]	@ (8001dd0 <USB_DeactivateEndpoint+0xbc>)
 8001da2:	6102      	str	r2, [r0, #16]
 8001da4:	e001      	b.n	8001daa <USB_DeactivateEndpoint+0x96>
 8001da6:	3b01      	subs	r3, #1
 8001da8:	d002      	beq.n	8001db0 <USB_DeactivateEndpoint+0x9c>
 8001daa:	6902      	ldr	r2, [r0, #16]
 8001dac:	0691      	lsls	r1, r2, #26
 8001dae:	d4fa      	bmi.n	8001da6 <USB_DeactivateEndpoint+0x92>
 8001db0:	2301      	movs	r3, #1
 8001db2:	f8d0 281c 	ldr.w	r2, [r0, #2076]	@ 0x81c
 8001db6:	fa03 f30c 	lsl.w	r3, r3, ip
 8001dba:	b29b      	uxth	r3, r3
 8001dbc:	ea22 0303 	bic.w	r3, r2, r3
 8001dc0:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
 8001dc4:	e7d2      	b.n	8001d6c <USB_DeactivateEndpoint+0x58>
 8001dc6:	2003      	movs	r0, #3
 8001dc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001dcc:	4770      	bx	lr
 8001dce:	bf00      	nop
 8001dd0:	00030d40 	.word	0x00030d40

08001dd4 <USB_EPStartXfer>:
 8001dd4:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
 8001dd8:	b082      	sub	sp, #8
 8001dda:	78cc      	ldrb	r4, [r1, #3]
 8001ddc:	9401      	str	r4, [sp, #4]
 8001dde:	784c      	ldrb	r4, [r1, #1]
 8001de0:	780d      	ldrb	r5, [r1, #0]
 8001de2:	694b      	ldr	r3, [r1, #20]
 8001de4:	2c01      	cmp	r4, #1
 8001de6:	ea4f 1c45 	mov.w	ip, r5, lsl #5
 8001dea:	d04d      	beq.n	8001e88 <USB_EPStartXfer+0xb4>
 8001dec:	f500 6e30 	add.w	lr, r0, #2816	@ 0xb00
 8001df0:	eb0e 040c 	add.w	r4, lr, ip
 8001df4:	688d      	ldr	r5, [r1, #8]
 8001df6:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8001dfa:	f36f 0812 	bfc	r8, #0, #19
 8001dfe:	f8c4 8010 	str.w	r8, [r4, #16]
 8001e02:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8001e06:	f36f 48dc 	bfc	r8, #19, #10
 8001e0a:	f8c4 8010 	str.w	r8, [r4, #16]
 8001e0e:	b38b      	cbz	r3, 8001e74 <USB_EPStartXfer+0xa0>
 8001e10:	f8df 81a0 	ldr.w	r8, [pc, #416]	@ 8001fb4 <USB_EPStartXfer+0x1e0>
 8001e14:	442b      	add	r3, r5
 8001e16:	3b01      	subs	r3, #1
 8001e18:	fbb3 f3f5 	udiv	r3, r3, r5
 8001e1c:	ea08 48c3 	and.w	r8, r8, r3, lsl #19
 8001e20:	b29b      	uxth	r3, r3
 8001e22:	fb03 f505 	mul.w	r5, r3, r5
 8001e26:	6923      	ldr	r3, [r4, #16]
 8001e28:	ea48 0303 	orr.w	r3, r8, r3
 8001e2c:	6123      	str	r3, [r4, #16]
 8001e2e:	6923      	ldr	r3, [r4, #16]
 8001e30:	f3c5 0512 	ubfx	r5, r5, #0, #19
 8001e34:	431d      	orrs	r5, r3
 8001e36:	6125      	str	r5, [r4, #16]
 8001e38:	2a01      	cmp	r2, #1
 8001e3a:	bf04      	itt	eq
 8001e3c:	68cb      	ldreq	r3, [r1, #12]
 8001e3e:	6163      	streq	r3, [r4, #20]
 8001e40:	9b01      	ldr	r3, [sp, #4]
 8001e42:	2b01      	cmp	r3, #1
 8001e44:	d10c      	bne.n	8001e60 <USB_EPStartXfer+0x8c>
 8001e46:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8001e4a:	f413 7f80 	tst.w	r3, #256	@ 0x100
 8001e4e:	f85e 300c 	ldr.w	r3, [lr, ip]
 8001e52:	bf0c      	ite	eq
 8001e54:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
 8001e58:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8001e5c:	f84e 300c 	str.w	r3, [lr, ip]
 8001e60:	f85e 300c 	ldr.w	r3, [lr, ip]
 8001e64:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8001e68:	f84e 300c 	str.w	r3, [lr, ip]
 8001e6c:	2000      	movs	r0, #0
 8001e6e:	b002      	add	sp, #8
 8001e70:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
 8001e74:	6923      	ldr	r3, [r4, #16]
 8001e76:	f3c5 0512 	ubfx	r5, r5, #0, #19
 8001e7a:	431d      	orrs	r5, r3
 8001e7c:	6125      	str	r5, [r4, #16]
 8001e7e:	6923      	ldr	r3, [r4, #16]
 8001e80:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001e84:	6123      	str	r3, [r4, #16]
 8001e86:	e7d7      	b.n	8001e38 <USB_EPStartXfer+0x64>
 8001e88:	f500 6810 	add.w	r8, r0, #2304	@ 0x900
 8001e8c:	eb08 0e0c 	add.w	lr, r8, ip
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d13f      	bne.n	8001f14 <USB_EPStartXfer+0x140>
 8001e94:	f8de 4010 	ldr.w	r4, [lr, #16]
 8001e98:	f36f 44dc 	bfc	r4, #19, #10
 8001e9c:	f8ce 4010 	str.w	r4, [lr, #16]
 8001ea0:	f8de 4010 	ldr.w	r4, [lr, #16]
 8001ea4:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8001ea8:	f8ce 4010 	str.w	r4, [lr, #16]
 8001eac:	f8de 4010 	ldr.w	r4, [lr, #16]
 8001eb0:	2a01      	cmp	r2, #1
 8001eb2:	f36f 0412 	bfc	r4, #0, #19
 8001eb6:	f8ce 4010 	str.w	r4, [lr, #16]
 8001eba:	d102      	bne.n	8001ec2 <USB_EPStartXfer+0xee>
 8001ebc:	690c      	ldr	r4, [r1, #16]
 8001ebe:	f8ce 4014 	str.w	r4, [lr, #20]
 8001ec2:	9c01      	ldr	r4, [sp, #4]
 8001ec4:	2c01      	cmp	r4, #1
 8001ec6:	d155      	bne.n	8001f74 <USB_EPStartXfer+0x1a0>
 8001ec8:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8001ecc:	f414 7f80 	tst.w	r4, #256	@ 0x100
 8001ed0:	f858 400c 	ldr.w	r4, [r8, ip]
 8001ed4:	bf0c      	ite	eq
 8001ed6:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
 8001eda:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8001ede:	f848 400c 	str.w	r4, [r8, ip]
 8001ee2:	f858 400c 	ldr.w	r4, [r8, ip]
 8001ee6:	f044 4404 	orr.w	r4, r4, #2214592512	@ 0x84000000
 8001eea:	f848 400c 	str.w	r4, [r8, ip]
 8001eee:	2a00      	cmp	r2, #0
 8001ef0:	d1bc      	bne.n	8001e6c <USB_EPStartXfer+0x98>
 8001ef2:	b29b      	uxth	r3, r3
 8001ef4:	3303      	adds	r3, #3
 8001ef6:	089a      	lsrs	r2, r3, #2
 8001ef8:	d0b8      	beq.n	8001e6c <USB_EPStartXfer+0x98>
 8001efa:	68cb      	ldr	r3, [r1, #12]
 8001efc:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 8001f00:	eb00 3005 	add.w	r0, r0, r5, lsl #12
 8001f04:	eb03 0182 	add.w	r1, r3, r2, lsl #2
 8001f08:	f853 2b04 	ldr.w	r2, [r3], #4
 8001f0c:	6002      	str	r2, [r0, #0]
 8001f0e:	4299      	cmp	r1, r3
 8001f10:	d1fa      	bne.n	8001f08 <USB_EPStartXfer+0x134>
 8001f12:	e7ab      	b.n	8001e6c <USB_EPStartXfer+0x98>
 8001f14:	f8de 9010 	ldr.w	r9, [lr, #16]
 8001f18:	688e      	ldr	r6, [r1, #8]
 8001f1a:	f36f 0912 	bfc	r9, #0, #19
 8001f1e:	f8ce 9010 	str.w	r9, [lr, #16]
 8001f22:	f8de 9010 	ldr.w	r9, [lr, #16]
 8001f26:	f36f 49dc 	bfc	r9, #19, #10
 8001f2a:	f8ce 9010 	str.w	r9, [lr, #16]
 8001f2e:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8001fb4 <USB_EPStartXfer+0x1e0>
 8001f32:	f8de b010 	ldr.w	fp, [lr, #16]
 8001f36:	eb06 0a03 	add.w	sl, r6, r3
 8001f3a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8001f3e:	fbba faf6 	udiv	sl, sl, r6
 8001f42:	ea09 49ca 	and.w	r9, r9, sl, lsl #19
 8001f46:	ea49 090b 	orr.w	r9, r9, fp
 8001f4a:	f8ce 9010 	str.w	r9, [lr, #16]
 8001f4e:	f8de a010 	ldr.w	sl, [lr, #16]
 8001f52:	9e01      	ldr	r6, [sp, #4]
 8001f54:	f3c3 0912 	ubfx	r9, r3, #0, #19
 8001f58:	ea49 090a 	orr.w	r9, r9, sl
 8001f5c:	2e01      	cmp	r6, #1
 8001f5e:	f8ce 9010 	str.w	r9, [lr, #16]
 8001f62:	d011      	beq.n	8001f88 <USB_EPStartXfer+0x1b4>
 8001f64:	2a01      	cmp	r2, #1
 8001f66:	d021      	beq.n	8001fac <USB_EPStartXfer+0x1d8>
 8001f68:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
 8001f6c:	40ac      	lsls	r4, r5
 8001f6e:	431c      	orrs	r4, r3
 8001f70:	f8c0 4834 	str.w	r4, [r0, #2100]	@ 0x834
 8001f74:	f858 300c 	ldr.w	r3, [r8, ip]
 8001f78:	2000      	movs	r0, #0
 8001f7a:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8001f7e:	f848 300c 	str.w	r3, [r8, ip]
 8001f82:	b002      	add	sp, #8
 8001f84:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
 8001f88:	f8de 4010 	ldr.w	r4, [lr, #16]
 8001f8c:	f024 44c0 	bic.w	r4, r4, #1610612736	@ 0x60000000
 8001f90:	f8ce 4010 	str.w	r4, [lr, #16]
 8001f94:	f8de 4010 	ldr.w	r4, [lr, #16]
 8001f98:	2a01      	cmp	r2, #1
 8001f9a:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
 8001f9e:	f8ce 4010 	str.w	r4, [lr, #16]
 8001fa2:	d191      	bne.n	8001ec8 <USB_EPStartXfer+0xf4>
 8001fa4:	690c      	ldr	r4, [r1, #16]
 8001fa6:	f8ce 4014 	str.w	r4, [lr, #20]
 8001faa:	e78d      	b.n	8001ec8 <USB_EPStartXfer+0xf4>
 8001fac:	690b      	ldr	r3, [r1, #16]
 8001fae:	f8ce 3014 	str.w	r3, [lr, #20]
 8001fb2:	e7df      	b.n	8001f74 <USB_EPStartXfer+0x1a0>
 8001fb4:	1ff80000 	.word	0x1ff80000

08001fb8 <USB_EP0StartXfer>:
 8001fb8:	784b      	ldrb	r3, [r1, #1]
 8001fba:	b570      	push	{r4, r5, r6, lr}
 8001fbc:	780c      	ldrb	r4, [r1, #0]
 8001fbe:	694d      	ldr	r5, [r1, #20]
 8001fc0:	2b01      	cmp	r3, #1
 8001fc2:	ea4f 1c44 	mov.w	ip, r4, lsl #5
 8001fc6:	d026      	beq.n	8002016 <USB_EP0StartXfer+0x5e>
 8001fc8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8001fcc:	eb00 030c 	add.w	r3, r0, ip
 8001fd0:	688c      	ldr	r4, [r1, #8]
 8001fd2:	691e      	ldr	r6, [r3, #16]
 8001fd4:	f36f 0612 	bfc	r6, #0, #19
 8001fd8:	611e      	str	r6, [r3, #16]
 8001fda:	691e      	ldr	r6, [r3, #16]
 8001fdc:	f36f 46dc 	bfc	r6, #19, #10
 8001fe0:	611e      	str	r6, [r3, #16]
 8001fe2:	b9b5      	cbnz	r5, 8002012 <USB_EP0StartXfer+0x5a>
 8001fe4:	691d      	ldr	r5, [r3, #16]
 8001fe6:	f445 2500 	orr.w	r5, r5, #524288	@ 0x80000
 8001fea:	611d      	str	r5, [r3, #16]
 8001fec:	691d      	ldr	r5, [r3, #16]
 8001fee:	2a01      	cmp	r2, #1
 8001ff0:	f3c4 0412 	ubfx	r4, r4, #0, #19
 8001ff4:	bf08      	it	eq
 8001ff6:	68ca      	ldreq	r2, [r1, #12]
 8001ff8:	ea44 0405 	orr.w	r4, r4, r5
 8001ffc:	611c      	str	r4, [r3, #16]
 8001ffe:	bf08      	it	eq
 8002000:	615a      	streq	r2, [r3, #20]
 8002002:	f850 300c 	ldr.w	r3, [r0, ip]
 8002006:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800200a:	f840 300c 	str.w	r3, [r0, ip]
 800200e:	2000      	movs	r0, #0
 8002010:	bd70      	pop	{r4, r5, r6, pc}
 8002012:	614c      	str	r4, [r1, #20]
 8002014:	e7e6      	b.n	8001fe4 <USB_EP0StartXfer+0x2c>
 8002016:	f500 6610 	add.w	r6, r0, #2304	@ 0x900
 800201a:	eb06 030c 	add.w	r3, r6, ip
 800201e:	b39d      	cbz	r5, 8002088 <USB_EP0StartXfer+0xd0>
 8002020:	f8d3 e010 	ldr.w	lr, [r3, #16]
 8002024:	f36f 0e12 	bfc	lr, #0, #19
 8002028:	f8c3 e010 	str.w	lr, [r3, #16]
 800202c:	f8d3 e010 	ldr.w	lr, [r3, #16]
 8002030:	f36f 4edc 	bfc	lr, #19, #10
 8002034:	f8c3 e010 	str.w	lr, [r3, #16]
 8002038:	f8d1 e008 	ldr.w	lr, [r1, #8]
 800203c:	45ae      	cmp	lr, r5
 800203e:	bf3c      	itt	cc
 8002040:	f8c1 e014 	strcc.w	lr, [r1, #20]
 8002044:	4675      	movcc	r5, lr
 8002046:	f8d3 e010 	ldr.w	lr, [r3, #16]
 800204a:	f44e 2e00 	orr.w	lr, lr, #524288	@ 0x80000
 800204e:	f8c3 e010 	str.w	lr, [r3, #16]
 8002052:	f8d3 e010 	ldr.w	lr, [r3, #16]
 8002056:	f3c5 0512 	ubfx	r5, r5, #0, #19
 800205a:	ea45 050e 	orr.w	r5, r5, lr
 800205e:	611d      	str	r5, [r3, #16]
 8002060:	f856 500c 	ldr.w	r5, [r6, ip]
 8002064:	2a01      	cmp	r2, #1
 8002066:	f045 4504 	orr.w	r5, r5, #2214592512	@ 0x84000000
 800206a:	f846 500c 	str.w	r5, [r6, ip]
 800206e:	d01f      	beq.n	80020b0 <USB_EP0StartXfer+0xf8>
 8002070:	694b      	ldr	r3, [r1, #20]
 8002072:	2b00      	cmp	r3, #0
 8002074:	d0cb      	beq.n	800200e <USB_EP0StartXfer+0x56>
 8002076:	f8d0 2834 	ldr.w	r2, [r0, #2100]	@ 0x834
 800207a:	2301      	movs	r3, #1
 800207c:	40a3      	lsls	r3, r4
 800207e:	4313      	orrs	r3, r2
 8002080:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 8002084:	2000      	movs	r0, #0
 8002086:	bd70      	pop	{r4, r5, r6, pc}
 8002088:	691d      	ldr	r5, [r3, #16]
 800208a:	f36f 45dc 	bfc	r5, #19, #10
 800208e:	611d      	str	r5, [r3, #16]
 8002090:	691d      	ldr	r5, [r3, #16]
 8002092:	f445 2500 	orr.w	r5, r5, #524288	@ 0x80000
 8002096:	611d      	str	r5, [r3, #16]
 8002098:	691d      	ldr	r5, [r3, #16]
 800209a:	f36f 0512 	bfc	r5, #0, #19
 800209e:	611d      	str	r5, [r3, #16]
 80020a0:	f856 500c 	ldr.w	r5, [r6, ip]
 80020a4:	2a01      	cmp	r2, #1
 80020a6:	f045 4504 	orr.w	r5, r5, #2214592512	@ 0x84000000
 80020aa:	f846 500c 	str.w	r5, [r6, ip]
 80020ae:	d1df      	bne.n	8002070 <USB_EP0StartXfer+0xb8>
 80020b0:	690a      	ldr	r2, [r1, #16]
 80020b2:	615a      	str	r2, [r3, #20]
 80020b4:	2000      	movs	r0, #0
 80020b6:	bd70      	pop	{r4, r5, r6, pc}

080020b8 <USB_WritePacket>:
 80020b8:	b410      	push	{r4}
 80020ba:	f89d 4004 	ldrb.w	r4, [sp, #4]
 80020be:	b96c      	cbnz	r4, 80020dc <USB_WritePacket+0x24>
 80020c0:	3303      	adds	r3, #3
 80020c2:	089b      	lsrs	r3, r3, #2
 80020c4:	d00a      	beq.n	80020dc <USB_WritePacket+0x24>
 80020c6:	f500 5080 	add.w	r0, r0, #4096	@ 0x1000
 80020ca:	eb00 3202 	add.w	r2, r0, r2, lsl #12
 80020ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80020d2:	f851 0b04 	ldr.w	r0, [r1], #4
 80020d6:	6010      	str	r0, [r2, #0]
 80020d8:	428b      	cmp	r3, r1
 80020da:	d1fa      	bne.n	80020d2 <USB_WritePacket+0x1a>
 80020dc:	2000      	movs	r0, #0
 80020de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020e2:	4770      	bx	lr

080020e4 <USB_ReadPacket>:
 80020e4:	3203      	adds	r2, #3
 80020e6:	b510      	push	{r4, lr}
 80020e8:	0894      	lsrs	r4, r2, #2
 80020ea:	d00d      	beq.n	8002108 <USB_ReadPacket+0x24>
 80020ec:	f500 5c80 	add.w	ip, r0, #4096	@ 0x1000
 80020f0:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
 80020f4:	460b      	mov	r3, r1
 80020f6:	f8dc 2000 	ldr.w	r2, [ip]
 80020fa:	f843 2b04 	str.w	r2, [r3], #4
 80020fe:	4573      	cmp	r3, lr
 8002100:	d1f9      	bne.n	80020f6 <USB_ReadPacket+0x12>
 8002102:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8002106:	bd10      	pop	{r4, pc}
 8002108:	4608      	mov	r0, r1
 800210a:	bd10      	pop	{r4, pc}

0800210c <USB_EPSetStall>:
 800210c:	784a      	ldrb	r2, [r1, #1]
 800210e:	780b      	ldrb	r3, [r1, #0]
 8002110:	2a01      	cmp	r2, #1
 8002112:	ea4f 1343 	mov.w	r3, r3, lsl #5
 8002116:	d00e      	beq.n	8002136 <USB_EPSetStall+0x2a>
 8002118:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 800211c:	58c2      	ldr	r2, [r0, r3]
 800211e:	2a00      	cmp	r2, #0
 8002120:	db03      	blt.n	800212a <USB_EPSetStall+0x1e>
 8002122:	58c2      	ldr	r2, [r0, r3]
 8002124:	f022 4280 	bic.w	r2, r2, #1073741824	@ 0x40000000
 8002128:	50c2      	str	r2, [r0, r3]
 800212a:	58c2      	ldr	r2, [r0, r3]
 800212c:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8002130:	50c2      	str	r2, [r0, r3]
 8002132:	2000      	movs	r0, #0
 8002134:	4770      	bx	lr
 8002136:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 800213a:	58c2      	ldr	r2, [r0, r3]
 800213c:	2a00      	cmp	r2, #0
 800213e:	daf0      	bge.n	8002122 <USB_EPSetStall+0x16>
 8002140:	e7f3      	b.n	800212a <USB_EPSetStall+0x1e>
 8002142:	bf00      	nop

08002144 <USB_EPClearStall>:
 8002144:	78cb      	ldrb	r3, [r1, #3]
 8002146:	780a      	ldrb	r2, [r1, #0]
 8002148:	7849      	ldrb	r1, [r1, #1]
 800214a:	2901      	cmp	r1, #1
 800214c:	bf0c      	ite	eq
 800214e:	f500 6010 	addeq.w	r0, r0, #2304	@ 0x900
 8002152:	f500 6030 	addne.w	r0, r0, #2816	@ 0xb00
 8002156:	0152      	lsls	r2, r2, #5
 8002158:	3b02      	subs	r3, #2
 800215a:	5881      	ldr	r1, [r0, r2]
 800215c:	b2db      	uxtb	r3, r3
 800215e:	f421 1100 	bic.w	r1, r1, #2097152	@ 0x200000
 8002162:	2b01      	cmp	r3, #1
 8002164:	5081      	str	r1, [r0, r2]
 8002166:	d803      	bhi.n	8002170 <USB_EPClearStall+0x2c>
 8002168:	5883      	ldr	r3, [r0, r2]
 800216a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800216e:	5083      	str	r3, [r0, r2]
 8002170:	2000      	movs	r0, #0
 8002172:	4770      	bx	lr

08002174 <USB_SetDevAddress>:
 8002174:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8002178:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800217c:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
 8002180:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8002184:	0109      	lsls	r1, r1, #4
 8002186:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 800218a:	4319      	orrs	r1, r3
 800218c:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
 8002190:	2000      	movs	r0, #0
 8002192:	4770      	bx	lr

08002194 <USB_DevConnect>:
 8002194:	b508      	push	{r3, lr}
 8002196:	4603      	mov	r3, r0
 8002198:	2003      	movs	r0, #3
 800219a:	f8d3 2804 	ldr.w	r2, [r3, #2052]	@ 0x804
 800219e:	f022 0202 	bic.w	r2, r2, #2
 80021a2:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
 80021a6:	f003 fe1f 	bl	8005de8 <HAL_Delay>
 80021aa:	2000      	movs	r0, #0
 80021ac:	bd08      	pop	{r3, pc}
 80021ae:	bf00      	nop

080021b0 <USB_DevDisconnect>:
 80021b0:	b508      	push	{r3, lr}
 80021b2:	4603      	mov	r3, r0
 80021b4:	2003      	movs	r0, #3
 80021b6:	f8d3 2804 	ldr.w	r2, [r3, #2052]	@ 0x804
 80021ba:	f042 0202 	orr.w	r2, r2, #2
 80021be:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
 80021c2:	f003 fe11 	bl	8005de8 <HAL_Delay>
 80021c6:	2000      	movs	r0, #0
 80021c8:	bd08      	pop	{r3, pc}
 80021ca:	bf00      	nop

080021cc <USB_ReadInterrupts>:
 80021cc:	6942      	ldr	r2, [r0, #20]
 80021ce:	6980      	ldr	r0, [r0, #24]
 80021d0:	4010      	ands	r0, r2
 80021d2:	4770      	bx	lr

080021d4 <USB_ReadDevAllOutEpInterrupt>:
 80021d4:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80021d8:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
 80021dc:	4018      	ands	r0, r3
 80021de:	0c00      	lsrs	r0, r0, #16
 80021e0:	4770      	bx	lr
 80021e2:	bf00      	nop

080021e4 <USB_ReadDevAllInEpInterrupt>:
 80021e4:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80021e8:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
 80021ec:	4018      	ands	r0, r3
 80021ee:	b280      	uxth	r0, r0
 80021f0:	4770      	bx	lr
 80021f2:	bf00      	nop

080021f4 <USB_ReadDevOutEPInterrupt>:
 80021f4:	eb00 1341 	add.w	r3, r0, r1, lsl #5
 80021f8:	f8d3 2b08 	ldr.w	r2, [r3, #2824]	@ 0xb08
 80021fc:	f8d0 0814 	ldr.w	r0, [r0, #2068]	@ 0x814
 8002200:	4010      	ands	r0, r2
 8002202:	4770      	bx	lr

08002204 <USB_ReadDevInEPInterrupt>:
 8002204:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
 8002208:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
 800220c:	eb00 1041 	add.w	r0, r0, r1, lsl #5
 8002210:	40cb      	lsrs	r3, r1
 8002212:	01db      	lsls	r3, r3, #7
 8002214:	f8d0 0908 	ldr.w	r0, [r0, #2312]	@ 0x908
 8002218:	b2db      	uxtb	r3, r3
 800221a:	4313      	orrs	r3, r2
 800221c:	4018      	ands	r0, r3
 800221e:	4770      	bx	lr

08002220 <USB_GetMode>:
 8002220:	6940      	ldr	r0, [r0, #20]
 8002222:	f000 0001 	and.w	r0, r0, #1
 8002226:	4770      	bx	lr

08002228 <USB_ActivateSetup>:
 8002228:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 800222c:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
 8002230:	f36f 020a 	bfc	r2, #0, #11
 8002234:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
 8002238:	689a      	ldr	r2, [r3, #8]
 800223a:	f002 0206 	and.w	r2, r2, #6
 800223e:	2a04      	cmp	r2, #4
 8002240:	d105      	bne.n	800224e <USB_ActivateSetup+0x26>
 8002242:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8002246:	f042 0203 	orr.w	r2, r2, #3
 800224a:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
 800224e:	685a      	ldr	r2, [r3, #4]
 8002250:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002254:	2000      	movs	r0, #0
 8002256:	605a      	str	r2, [r3, #4]
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop

0800225c <USB_EP0_OutStart>:
 800225c:	b410      	push	{r4}
 800225e:	2400      	movs	r4, #0
 8002260:	f8c0 4b10 	str.w	r4, [r0, #2832]	@ 0xb10
 8002264:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	@ 0xb10
 8002268:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 800226c:	f8c0 4b10 	str.w	r4, [r0, #2832]	@ 0xb10
 8002270:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	@ 0xb10
 8002274:	f044 0418 	orr.w	r4, r4, #24
 8002278:	f8c0 4b10 	str.w	r4, [r0, #2832]	@ 0xb10
 800227c:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	@ 0xb10
 8002280:	2901      	cmp	r1, #1
 8002282:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8002286:	f8c0 4b10 	str.w	r4, [r0, #2832]	@ 0xb10
 800228a:	d105      	bne.n	8002298 <USB_EP0_OutStart+0x3c>
 800228c:	f04f 2180 	mov.w	r1, #2147516416	@ 0x80008000
 8002290:	f8c0 2b14 	str.w	r2, [r0, #2836]	@ 0xb14
 8002294:	f8c0 1b00 	str.w	r1, [r0, #2816]	@ 0xb00
 8002298:	2000      	movs	r0, #0
 800229a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800229e:	4770      	bx	lr

080022a0 <OC4_PWM_Override>:
 80022a0:	b500      	push	{lr}
 80022a2:	ed9f 7b0b 	vldr	d7, [pc, #44]	@ 80022d0 <OC4_PWM_Override+0x30>
 80022a6:	b089      	sub	sp, #36	@ 0x24
 80022a8:	2170      	movs	r1, #112	@ 0x70
 80022aa:	2201      	movs	r2, #1
 80022ac:	e9cd 1200 	strd	r1, r2, [sp]
 80022b0:	2300      	movs	r3, #0
 80022b2:	220c      	movs	r2, #12
 80022b4:	4669      	mov	r1, sp
 80022b6:	ed8d 7b04 	vstr	d7, [sp, #16]
 80022ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80022be:	9306      	str	r3, [sp, #24]
 80022c0:	f007 fc68 	bl	8009b94 <HAL_TIM_OC_ConfigChannel>
 80022c4:	b009      	add	sp, #36	@ 0x24
 80022c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80022ca:	bf00      	nop
 80022cc:	f3af 8000 	nop.w
	...

080022d8 <MX_TIM3_Init>:
 80022d8:	b510      	push	{r4, lr}
 80022da:	4818      	ldr	r0, [pc, #96]	@ (800233c <MX_TIM3_Init+0x64>)
 80022dc:	4918      	ldr	r1, [pc, #96]	@ (8002340 <MX_TIM3_Init+0x68>)
 80022de:	b08c      	sub	sp, #48	@ 0x30
 80022e0:	6001      	str	r1, [r0, #0]
 80022e2:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80022e6:	60c1      	str	r1, [r0, #12]
 80022e8:	2103      	movs	r1, #3
 80022ea:	2300      	movs	r3, #0
 80022ec:	2401      	movs	r4, #1
 80022ee:	2204      	movs	r2, #4
 80022f0:	9103      	str	r1, [sp, #12]
 80022f2:	a903      	add	r1, sp, #12
 80022f4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80022f8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80022fc:	e9cd 3206 	strd	r3, r2, [sp, #24]
 8002300:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8002304:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
 8002308:	6103      	str	r3, [r0, #16]
 800230a:	f007 fb0d 	bl	8009928 <HAL_TIM_Encoder_Init>
 800230e:	b950      	cbnz	r0, 8002326 <MX_TIM3_Init+0x4e>
 8002310:	2200      	movs	r2, #0
 8002312:	2300      	movs	r3, #0
 8002314:	4809      	ldr	r0, [pc, #36]	@ (800233c <MX_TIM3_Init+0x64>)
 8002316:	4669      	mov	r1, sp
 8002318:	e9cd 2300 	strd	r2, r3, [sp]
 800231c:	f000 fbe0 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 8002320:	b930      	cbnz	r0, 8002330 <MX_TIM3_Init+0x58>
 8002322:	b00c      	add	sp, #48	@ 0x30
 8002324:	bd10      	pop	{r4, pc}
 8002326:	4807      	ldr	r0, [pc, #28]	@ (8002344 <MX_TIM3_Init+0x6c>)
 8002328:	21ea      	movs	r1, #234	@ 0xea
 800232a:	f001 fa69 	bl	8003800 <_Error_Handler>
 800232e:	e7ef      	b.n	8002310 <MX_TIM3_Init+0x38>
 8002330:	4804      	ldr	r0, [pc, #16]	@ (8002344 <MX_TIM3_Init+0x6c>)
 8002332:	21f1      	movs	r1, #241	@ 0xf1
 8002334:	f001 fa64 	bl	8003800 <_Error_Handler>
 8002338:	b00c      	add	sp, #48	@ 0x30
 800233a:	bd10      	pop	{r4, pc}
 800233c:	20000740 	.word	0x20000740
 8002340:	40000400 	.word	0x40000400
 8002344:	08029590 	.word	0x08029590

08002348 <MX_TIM4_Init>:
 8002348:	b510      	push	{r4, lr}
 800234a:	4819      	ldr	r0, [pc, #100]	@ (80023b0 <MX_TIM4_Init+0x68>)
 800234c:	4919      	ldr	r1, [pc, #100]	@ (80023b4 <MX_TIM4_Init+0x6c>)
 800234e:	b08c      	sub	sp, #48	@ 0x30
 8002350:	6001      	str	r1, [r0, #0]
 8002352:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8002356:	60c1      	str	r1, [r0, #12]
 8002358:	2103      	movs	r1, #3
 800235a:	2300      	movs	r3, #0
 800235c:	2401      	movs	r4, #1
 800235e:	2204      	movs	r2, #4
 8002360:	9103      	str	r1, [sp, #12]
 8002362:	a903      	add	r1, sp, #12
 8002364:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002368:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800236c:	e9cd 3206 	strd	r3, r2, [sp, #24]
 8002370:	e9cd 3408 	strd	r3, r4, [sp, #32]
 8002374:	e9cd 320a 	strd	r3, r2, [sp, #40]	@ 0x28
 8002378:	6103      	str	r3, [r0, #16]
 800237a:	f007 fad5 	bl	8009928 <HAL_TIM_Encoder_Init>
 800237e:	b950      	cbnz	r0, 8002396 <MX_TIM4_Init+0x4e>
 8002380:	2200      	movs	r2, #0
 8002382:	2300      	movs	r3, #0
 8002384:	480a      	ldr	r0, [pc, #40]	@ (80023b0 <MX_TIM4_Init+0x68>)
 8002386:	4669      	mov	r1, sp
 8002388:	e9cd 2300 	strd	r2, r3, [sp]
 800238c:	f000 fba8 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 8002390:	b938      	cbnz	r0, 80023a2 <MX_TIM4_Init+0x5a>
 8002392:	b00c      	add	sp, #48	@ 0x30
 8002394:	bd10      	pop	{r4, pc}
 8002396:	4808      	ldr	r0, [pc, #32]	@ (80023b8 <MX_TIM4_Init+0x70>)
 8002398:	f240 110b 	movw	r1, #267	@ 0x10b
 800239c:	f001 fa30 	bl	8003800 <_Error_Handler>
 80023a0:	e7ee      	b.n	8002380 <MX_TIM4_Init+0x38>
 80023a2:	4805      	ldr	r0, [pc, #20]	@ (80023b8 <MX_TIM4_Init+0x70>)
 80023a4:	f44f 7189 	mov.w	r1, #274	@ 0x112
 80023a8:	f001 fa2a 	bl	8003800 <_Error_Handler>
 80023ac:	b00c      	add	sp, #48	@ 0x30
 80023ae:	bd10      	pop	{r4, pc}
 80023b0:	20000704 	.word	0x20000704
 80023b4:	40000800 	.word	0x40000800
 80023b8:	08029590 	.word	0x08029590

080023bc <MX_TIM5_Init>:
 80023bc:	b510      	push	{r4, lr}
 80023be:	4823      	ldr	r0, [pc, #140]	@ (800244c <MX_TIM5_Init+0x90>)
 80023c0:	4923      	ldr	r1, [pc, #140]	@ (8002450 <MX_TIM5_Init+0x94>)
 80023c2:	b086      	sub	sp, #24
 80023c4:	2300      	movs	r3, #0
 80023c6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80023ca:	e9c0 1300 	strd	r1, r3, [r0]
 80023ce:	e9c0 3202 	strd	r3, r2, [r0, #8]
 80023d2:	6103      	str	r3, [r0, #16]
 80023d4:	f007 fa8c 	bl	80098f0 <HAL_TIM_IC_Init>
 80023d8:	b9f8      	cbnz	r0, 800241a <MX_TIM5_Init+0x5e>
 80023da:	2200      	movs	r2, #0
 80023dc:	2300      	movs	r3, #0
 80023de:	481b      	ldr	r0, [pc, #108]	@ (800244c <MX_TIM5_Init+0x90>)
 80023e0:	4669      	mov	r1, sp
 80023e2:	e9cd 2300 	strd	r2, r3, [sp]
 80023e6:	f000 fb7b 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 80023ea:	bb48      	cbnz	r0, 8002440 <MX_TIM5_Init+0x84>
 80023ec:	200a      	movs	r0, #10
 80023ee:	2201      	movs	r2, #1
 80023f0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80023f4:	2100      	movs	r1, #0
 80023f6:	2208      	movs	r2, #8
 80023f8:	230f      	movs	r3, #15
 80023fa:	9104      	str	r1, [sp, #16]
 80023fc:	4813      	ldr	r0, [pc, #76]	@ (800244c <MX_TIM5_Init+0x90>)
 80023fe:	9305      	str	r3, [sp, #20]
 8002400:	eb0d 0102 	add.w	r1, sp, r2
 8002404:	f007 fb14 	bl	8009a30 <HAL_TIM_IC_ConfigChannel>
 8002408:	b9a0      	cbnz	r0, 8002434 <MX_TIM5_Init+0x78>
 800240a:	4810      	ldr	r0, [pc, #64]	@ (800244c <MX_TIM5_Init+0x90>)
 800240c:	220c      	movs	r2, #12
 800240e:	a902      	add	r1, sp, #8
 8002410:	f007 fb0e 	bl	8009a30 <HAL_TIM_IC_ConfigChannel>
 8002414:	b938      	cbnz	r0, 8002426 <MX_TIM5_Init+0x6a>
 8002416:	b006      	add	sp, #24
 8002418:	bd10      	pop	{r4, pc}
 800241a:	480e      	ldr	r0, [pc, #56]	@ (8002454 <MX_TIM5_Init+0x98>)
 800241c:	f240 1123 	movw	r1, #291	@ 0x123
 8002420:	f001 f9ee 	bl	8003800 <_Error_Handler>
 8002424:	e7d9      	b.n	80023da <MX_TIM5_Init+0x1e>
 8002426:	480b      	ldr	r0, [pc, #44]	@ (8002454 <MX_TIM5_Init+0x98>)
 8002428:	f44f 719c 	mov.w	r1, #312	@ 0x138
 800242c:	f001 f9e8 	bl	8003800 <_Error_Handler>
 8002430:	b006      	add	sp, #24
 8002432:	bd10      	pop	{r4, pc}
 8002434:	4807      	ldr	r0, [pc, #28]	@ (8002454 <MX_TIM5_Init+0x98>)
 8002436:	f240 1133 	movw	r1, #307	@ 0x133
 800243a:	f001 f9e1 	bl	8003800 <_Error_Handler>
 800243e:	e7e4      	b.n	800240a <MX_TIM5_Init+0x4e>
 8002440:	4804      	ldr	r0, [pc, #16]	@ (8002454 <MX_TIM5_Init+0x98>)
 8002442:	f44f 7195 	mov.w	r1, #298	@ 0x12a
 8002446:	f001 f9db 	bl	8003800 <_Error_Handler>
 800244a:	e7cf      	b.n	80023ec <MX_TIM5_Init+0x30>
 800244c:	200006c8 	.word	0x200006c8
 8002450:	40000c00 	.word	0x40000c00
 8002454:	08029590 	.word	0x08029590

08002458 <MX_TIM13_Init>:
 8002458:	480a      	ldr	r0, [pc, #40]	@ (8002484 <MX_TIM13_Init+0x2c>)
 800245a:	490b      	ldr	r1, [pc, #44]	@ (8002488 <MX_TIM13_Init+0x30>)
 800245c:	b510      	push	{r4, lr}
 800245e:	2300      	movs	r3, #0
 8002460:	f642 1203 	movw	r2, #10499	@ 0x2903
 8002464:	e9c0 1300 	strd	r1, r3, [r0]
 8002468:	e9c0 3202 	strd	r3, r2, [r0, #8]
 800246c:	6103      	str	r3, [r0, #16]
 800246e:	f007 f9eb 	bl	8009848 <HAL_TIM_Base_Init>
 8002472:	b900      	cbnz	r0, 8002476 <MX_TIM13_Init+0x1e>
 8002474:	bd10      	pop	{r4, pc}
 8002476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800247a:	4804      	ldr	r0, [pc, #16]	@ (800248c <MX_TIM13_Init+0x34>)
 800247c:	f240 1185 	movw	r1, #389	@ 0x185
 8002480:	f001 b9be 	b.w	8003800 <_Error_Handler>
 8002484:	20000650 	.word	0x20000650
 8002488:	40001c00 	.word	0x40001c00
 800248c:	08029590 	.word	0x08029590

08002490 <HAL_TIM_Base_MspInit>:
 8002490:	b500      	push	{lr}
 8002492:	4a1b      	ldr	r2, [pc, #108]	@ (8002500 <HAL_TIM_Base_MspInit+0x70>)
 8002494:	6803      	ldr	r3, [r0, #0]
 8002496:	4293      	cmp	r3, r2
 8002498:	b083      	sub	sp, #12
 800249a:	d005      	beq.n	80024a8 <HAL_TIM_Base_MspInit+0x18>
 800249c:	4a19      	ldr	r2, [pc, #100]	@ (8002504 <HAL_TIM_Base_MspInit+0x74>)
 800249e:	4293      	cmp	r3, r2
 80024a0:	d018      	beq.n	80024d4 <HAL_TIM_Base_MspInit+0x44>
 80024a2:	b003      	add	sp, #12
 80024a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80024a8:	2200      	movs	r2, #0
 80024aa:	4b17      	ldr	r3, [pc, #92]	@ (8002508 <HAL_TIM_Base_MspInit+0x78>)
 80024ac:	9200      	str	r2, [sp, #0]
 80024ae:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80024b0:	f041 0101 	orr.w	r1, r1, #1
 80024b4:	6459      	str	r1, [r3, #68]	@ 0x44
 80024b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80024b8:	f003 0301 	and.w	r3, r3, #1
 80024bc:	9300      	str	r3, [sp, #0]
 80024be:	4611      	mov	r1, r2
 80024c0:	2019      	movs	r0, #25
 80024c2:	9b00      	ldr	r3, [sp, #0]
 80024c4:	f7fe fd70 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80024c8:	2019      	movs	r0, #25
 80024ca:	b003      	add	sp, #12
 80024cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80024d0:	f7fe bda6 	b.w	8001020 <HAL_NVIC_EnableIRQ>
 80024d4:	2200      	movs	r2, #0
 80024d6:	4b0c      	ldr	r3, [pc, #48]	@ (8002508 <HAL_TIM_Base_MspInit+0x78>)
 80024d8:	9201      	str	r2, [sp, #4]
 80024da:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80024dc:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 80024e0:	6419      	str	r1, [r3, #64]	@ 0x40
 80024e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024e4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80024e8:	9301      	str	r3, [sp, #4]
 80024ea:	4611      	mov	r1, r2
 80024ec:	202c      	movs	r0, #44	@ 0x2c
 80024ee:	9b01      	ldr	r3, [sp, #4]
 80024f0:	f7fe fd5a 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80024f4:	202c      	movs	r0, #44	@ 0x2c
 80024f6:	b003      	add	sp, #12
 80024f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80024fc:	f7fe bd90 	b.w	8001020 <HAL_NVIC_EnableIRQ>
 8002500:	40010000 	.word	0x40010000
 8002504:	40001c00 	.word	0x40001c00
 8002508:	40023800 	.word	0x40023800

0800250c <HAL_TIM_PWM_MspInit>:
 800250c:	b510      	push	{r4, lr}
 800250e:	6803      	ldr	r3, [r0, #0]
 8002510:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002514:	b082      	sub	sp, #8
 8002516:	d004      	beq.n	8002522 <HAL_TIM_PWM_MspInit+0x16>
 8002518:	4a19      	ldr	r2, [pc, #100]	@ (8002580 <HAL_TIM_PWM_MspInit+0x74>)
 800251a:	4293      	cmp	r3, r2
 800251c:	d010      	beq.n	8002540 <HAL_TIM_PWM_MspInit+0x34>
 800251e:	b002      	add	sp, #8
 8002520:	bd10      	pop	{r4, pc}
 8002522:	f503 330e 	add.w	r3, r3, #145408	@ 0x23800
 8002526:	2200      	movs	r2, #0
 8002528:	9200      	str	r2, [sp, #0]
 800252a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800252c:	f042 0201 	orr.w	r2, r2, #1
 8002530:	641a      	str	r2, [r3, #64]	@ 0x40
 8002532:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002534:	f003 0301 	and.w	r3, r3, #1
 8002538:	9300      	str	r3, [sp, #0]
 800253a:	9b00      	ldr	r3, [sp, #0]
 800253c:	b002      	add	sp, #8
 800253e:	bd10      	pop	{r4, pc}
 8002540:	2400      	movs	r4, #0
 8002542:	4b10      	ldr	r3, [pc, #64]	@ (8002584 <HAL_TIM_PWM_MspInit+0x78>)
 8002544:	9401      	str	r4, [sp, #4]
 8002546:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002548:	f041 0102 	orr.w	r1, r1, #2
 800254c:	6459      	str	r1, [r3, #68]	@ 0x44
 800254e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002550:	f003 0302 	and.w	r3, r3, #2
 8002554:	4622      	mov	r2, r4
 8002556:	4621      	mov	r1, r4
 8002558:	9301      	str	r3, [sp, #4]
 800255a:	202c      	movs	r0, #44	@ 0x2c
 800255c:	9b01      	ldr	r3, [sp, #4]
 800255e:	f7fe fd23 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002562:	202c      	movs	r0, #44	@ 0x2c
 8002564:	f7fe fd5c 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8002568:	4622      	mov	r2, r4
 800256a:	4621      	mov	r1, r4
 800256c:	202d      	movs	r0, #45	@ 0x2d
 800256e:	f7fe fd1b 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002572:	202d      	movs	r0, #45	@ 0x2d
 8002574:	b002      	add	sp, #8
 8002576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800257a:	f7fe bd51 	b.w	8001020 <HAL_NVIC_EnableIRQ>
 800257e:	bf00      	nop
 8002580:	40010400 	.word	0x40010400
 8002584:	40023800 	.word	0x40023800

08002588 <HAL_TIM_Encoder_MspInit>:
 8002588:	b500      	push	{lr}
 800258a:	4a29      	ldr	r2, [pc, #164]	@ (8002630 <HAL_TIM_Encoder_MspInit+0xa8>)
 800258c:	6803      	ldr	r3, [r0, #0]
 800258e:	4293      	cmp	r3, r2
 8002590:	b089      	sub	sp, #36	@ 0x24
 8002592:	d005      	beq.n	80025a0 <HAL_TIM_Encoder_MspInit+0x18>
 8002594:	4a27      	ldr	r2, [pc, #156]	@ (8002634 <HAL_TIM_Encoder_MspInit+0xac>)
 8002596:	4293      	cmp	r3, r2
 8002598:	d021      	beq.n	80025de <HAL_TIM_Encoder_MspInit+0x56>
 800259a:	b009      	add	sp, #36	@ 0x24
 800259c:	f85d fb04 	ldr.w	pc, [sp], #4
 80025a0:	4b25      	ldr	r3, [pc, #148]	@ (8002638 <HAL_TIM_Encoder_MspInit+0xb0>)
 80025a2:	2200      	movs	r2, #0
 80025a4:	9200      	str	r2, [sp, #0]
 80025a6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80025a8:	f042 0202 	orr.w	r2, r2, #2
 80025ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80025ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025b0:	2202      	movs	r2, #2
 80025b2:	ed9f 7b1b 	vldr	d7, [pc, #108]	@ 8002620 <HAL_TIM_Encoder_MspInit+0x98>
 80025b6:	2000      	movs	r0, #0
 80025b8:	2100      	movs	r1, #0
 80025ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025be:	4013      	ands	r3, r2
 80025c0:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
 80025c4:	9300      	str	r3, [sp, #0]
 80025c6:	f500 3001 	add.w	r0, r0, #132096	@ 0x20400
 80025ca:	a902      	add	r1, sp, #8
 80025cc:	ed8d 7b02 	vstr	d7, [sp, #8]
 80025d0:	9b00      	ldr	r3, [sp, #0]
 80025d2:	9206      	str	r2, [sp, #24]
 80025d4:	f007 fda0 	bl	800a118 <HAL_GPIO_Init>
 80025d8:	b009      	add	sp, #36	@ 0x24
 80025da:	f85d fb04 	ldr.w	pc, [sp], #4
 80025de:	4b16      	ldr	r3, [pc, #88]	@ (8002638 <HAL_TIM_Encoder_MspInit+0xb0>)
 80025e0:	2200      	movs	r2, #0
 80025e2:	9201      	str	r2, [sp, #4]
 80025e4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80025e6:	f042 0204 	orr.w	r2, r2, #4
 80025ea:	641a      	str	r2, [r3, #64]	@ 0x40
 80025ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025ee:	ed9f 7b0e 	vldr	d7, [pc, #56]	@ 8002628 <HAL_TIM_Encoder_MspInit+0xa0>
 80025f2:	2000      	movs	r0, #0
 80025f4:	2100      	movs	r1, #0
 80025f6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80025fa:	f003 0304 	and.w	r3, r3, #4
 80025fe:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
 8002602:	2202      	movs	r2, #2
 8002604:	9301      	str	r3, [sp, #4]
 8002606:	f500 3001 	add.w	r0, r0, #132096	@ 0x20400
 800260a:	a902      	add	r1, sp, #8
 800260c:	ed8d 7b02 	vstr	d7, [sp, #8]
 8002610:	9b01      	ldr	r3, [sp, #4]
 8002612:	9206      	str	r2, [sp, #24]
 8002614:	f007 fd80 	bl	800a118 <HAL_GPIO_Init>
 8002618:	b009      	add	sp, #36	@ 0x24
 800261a:	f85d fb04 	ldr.w	pc, [sp], #4
 800261e:	bf00      	nop
 8002620:	00000030 	.word	0x00000030
 8002624:	00000002 	.word	0x00000002
 8002628:	000000c0 	.word	0x000000c0
 800262c:	00000002 	.word	0x00000002
 8002630:	40000400 	.word	0x40000400
 8002634:	40000800 	.word	0x40000800
 8002638:	40023800 	.word	0x40023800
 800263c:	00000000 	.word	0x00000000

08002640 <HAL_TIM_IC_MspInit>:
 8002640:	4b19      	ldr	r3, [pc, #100]	@ (80026a8 <HAL_TIM_IC_MspInit+0x68>)
 8002642:	6802      	ldr	r2, [r0, #0]
 8002644:	429a      	cmp	r2, r3
 8002646:	d000      	beq.n	800264a <HAL_TIM_IC_MspInit+0xa>
 8002648:	4770      	bx	lr
 800264a:	b510      	push	{r4, lr}
 800264c:	b088      	sub	sp, #32
 800264e:	f503 330b 	add.w	r3, r3, #142336	@ 0x22c00
 8002652:	2400      	movs	r4, #0
 8002654:	9401      	str	r4, [sp, #4]
 8002656:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8002658:	4814      	ldr	r0, [pc, #80]	@ (80026ac <HAL_TIM_IC_MspInit+0x6c>)
 800265a:	ed9f 7b0f 	vldr	d7, [pc, #60]	@ 8002698 <HAL_TIM_IC_MspInit+0x58>
 800265e:	f041 0108 	orr.w	r1, r1, #8
 8002662:	6419      	str	r1, [r3, #64]	@ 0x40
 8002664:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002666:	ed8d 7b02 	vstr	d7, [sp, #8]
 800266a:	ed9f 7b0d 	vldr	d7, [pc, #52]	@ 80026a0 <HAL_TIM_IC_MspInit+0x60>
 800266e:	f003 0308 	and.w	r3, r3, #8
 8002672:	9301      	str	r3, [sp, #4]
 8002674:	a902      	add	r1, sp, #8
 8002676:	2302      	movs	r3, #2
 8002678:	ed8d 7b04 	vstr	d7, [sp, #16]
 800267c:	9306      	str	r3, [sp, #24]
 800267e:	9a01      	ldr	r2, [sp, #4]
 8002680:	f007 fd4a 	bl	800a118 <HAL_GPIO_Init>
 8002684:	4622      	mov	r2, r4
 8002686:	2105      	movs	r1, #5
 8002688:	2032      	movs	r0, #50	@ 0x32
 800268a:	f7fe fc8d 	bl	8000fa8 <HAL_NVIC_SetPriority>
 800268e:	2032      	movs	r0, #50	@ 0x32
 8002690:	f7fe fcc6 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8002694:	b008      	add	sp, #32
 8002696:	bd10      	pop	{r4, pc}
 8002698:	0000000c 	.word	0x0000000c
 800269c:	00000002 	.word	0x00000002
	...
 80026a8:	40000c00 	.word	0x40000c00
 80026ac:	40020000 	.word	0x40020000

080026b0 <HAL_TIM_MspPostInit>:
 80026b0:	b5d0      	push	{r4, r6, r7, lr}
 80026b2:	4a32      	ldr	r2, [pc, #200]	@ (800277c <HAL_TIM_MspPostInit+0xcc>)
 80026b4:	6803      	ldr	r3, [r0, #0]
 80026b6:	4293      	cmp	r3, r2
 80026b8:	b086      	sub	sp, #24
 80026ba:	d007      	beq.n	80026cc <HAL_TIM_MspPostInit+0x1c>
 80026bc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80026c0:	d021      	beq.n	8002706 <HAL_TIM_MspPostInit+0x56>
 80026c2:	4a2f      	ldr	r2, [pc, #188]	@ (8002780 <HAL_TIM_MspPostInit+0xd0>)
 80026c4:	4293      	cmp	r3, r2
 80026c6:	d032      	beq.n	800272e <HAL_TIM_MspPostInit+0x7e>
 80026c8:	b006      	add	sp, #24
 80026ca:	bdd0      	pop	{r4, r6, r7, pc}
 80026cc:	f44f 4260 	mov.w	r2, #57344	@ 0xe000
 80026d0:	2302      	movs	r3, #2
 80026d2:	2600      	movs	r6, #0
 80026d4:	2700      	movs	r7, #0
 80026d6:	2401      	movs	r4, #1
 80026d8:	4669      	mov	r1, sp
 80026da:	482a      	ldr	r0, [pc, #168]	@ (8002784 <HAL_TIM_MspPostInit+0xd4>)
 80026dc:	9404      	str	r4, [sp, #16]
 80026de:	e9cd 2300 	strd	r2, r3, [sp]
 80026e2:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80026e6:	f007 fd17 	bl	800a118 <HAL_GPIO_Init>
 80026ea:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 80026ee:	2302      	movs	r3, #2
 80026f0:	4825      	ldr	r0, [pc, #148]	@ (8002788 <HAL_TIM_MspPostInit+0xd8>)
 80026f2:	9404      	str	r4, [sp, #16]
 80026f4:	4669      	mov	r1, sp
 80026f6:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80026fa:	e9cd 2300 	strd	r2, r3, [sp]
 80026fe:	f007 fd0b 	bl	800a118 <HAL_GPIO_Init>
 8002702:	b006      	add	sp, #24
 8002704:	bdd0      	pop	{r4, r6, r7, pc}
 8002706:	f44f 6040 	mov.w	r0, #3072	@ 0xc00
 800270a:	2102      	movs	r1, #2
 800270c:	e9cd 0100 	strd	r0, r1, [sp]
 8002710:	f100 4080 	add.w	r0, r0, #1073741824	@ 0x40000000
 8002714:	2301      	movs	r3, #1
 8002716:	2600      	movs	r6, #0
 8002718:	2700      	movs	r7, #0
 800271a:	f500 30fc 	add.w	r0, r0, #129024	@ 0x1f800
 800271e:	4669      	mov	r1, sp
 8002720:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002724:	9304      	str	r3, [sp, #16]
 8002726:	f007 fcf7 	bl	800a118 <HAL_GPIO_Init>
 800272a:	b006      	add	sp, #24
 800272c:	bdd0      	pop	{r4, r6, r7, pc}
 800272e:	2600      	movs	r6, #0
 8002730:	2700      	movs	r7, #0
 8002732:	2403      	movs	r4, #3
 8002734:	2280      	movs	r2, #128	@ 0x80
 8002736:	2302      	movs	r3, #2
 8002738:	4669      	mov	r1, sp
 800273a:	4813      	ldr	r0, [pc, #76]	@ (8002788 <HAL_TIM_MspPostInit+0xd8>)
 800273c:	9404      	str	r4, [sp, #16]
 800273e:	e9cd 2300 	strd	r2, r3, [sp]
 8002742:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002746:	f007 fce7 	bl	800a118 <HAL_GPIO_Init>
 800274a:	2203      	movs	r2, #3
 800274c:	2302      	movs	r3, #2
 800274e:	4669      	mov	r1, sp
 8002750:	480c      	ldr	r0, [pc, #48]	@ (8002784 <HAL_TIM_MspPostInit+0xd4>)
 8002752:	9404      	str	r4, [sp, #16]
 8002754:	e9cd 2300 	strd	r2, r3, [sp]
 8002758:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800275c:	f007 fcdc 	bl	800a118 <HAL_GPIO_Init>
 8002760:	f44f 72e0 	mov.w	r2, #448	@ 0x1c0
 8002764:	2302      	movs	r3, #2
 8002766:	4809      	ldr	r0, [pc, #36]	@ (800278c <HAL_TIM_MspPostInit+0xdc>)
 8002768:	9404      	str	r4, [sp, #16]
 800276a:	4669      	mov	r1, sp
 800276c:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002770:	e9cd 2300 	strd	r2, r3, [sp]
 8002774:	f007 fcd0 	bl	800a118 <HAL_GPIO_Init>
 8002778:	b006      	add	sp, #24
 800277a:	bdd0      	pop	{r4, r6, r7, pc}
 800277c:	40010000 	.word	0x40010000
 8002780:	40010400 	.word	0x40010400
 8002784:	40020400 	.word	0x40020400
 8002788:	40020000 	.word	0x40020000
 800278c:	40020800 	.word	0x40020800

08002790 <MX_TIM1_Init>:
 8002790:	b510      	push	{r4, lr}
 8002792:	4855      	ldr	r0, [pc, #340]	@ (80028e8 <MX_TIM1_Init+0x158>)
 8002794:	4c55      	ldr	r4, [pc, #340]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002796:	2300      	movs	r3, #0
 8002798:	2260      	movs	r2, #96	@ 0x60
 800279a:	b096      	sub	sp, #88	@ 0x58
 800279c:	f640 51ac 	movw	r1, #3500	@ 0xdac
 80027a0:	e9c4 0300 	strd	r0, r3, [r4]
 80027a4:	60a2      	str	r2, [r4, #8]
 80027a6:	4620      	mov	r0, r4
 80027a8:	2202      	movs	r2, #2
 80027aa:	e9c4 1303 	strd	r1, r3, [r4, #12]
 80027ae:	6162      	str	r2, [r4, #20]
 80027b0:	f007 f84a 	bl	8009848 <HAL_TIM_Base_Init>
 80027b4:	2800      	cmp	r0, #0
 80027b6:	d15d      	bne.n	8002874 <MX_TIM1_Init+0xe4>
 80027b8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80027bc:	484b      	ldr	r0, [pc, #300]	@ (80028ec <MX_TIM1_Init+0x15c>)
 80027be:	9302      	str	r3, [sp, #8]
 80027c0:	a902      	add	r1, sp, #8
 80027c2:	f006 fe57 	bl	8009474 <HAL_TIM_ConfigClockSource>
 80027c6:	2800      	cmp	r0, #0
 80027c8:	f040 8085 	bne.w	80028d6 <MX_TIM1_Init+0x146>
 80027cc:	4847      	ldr	r0, [pc, #284]	@ (80028ec <MX_TIM1_Init+0x15c>)
 80027ce:	f007 f873 	bl	80098b8 <HAL_TIM_PWM_Init>
 80027d2:	2800      	cmp	r0, #0
 80027d4:	d17a      	bne.n	80028cc <MX_TIM1_Init+0x13c>
 80027d6:	4845      	ldr	r0, [pc, #276]	@ (80028ec <MX_TIM1_Init+0x15c>)
 80027d8:	f007 f852 	bl	8009880 <HAL_TIM_OC_Init>
 80027dc:	2800      	cmp	r0, #0
 80027de:	d170      	bne.n	80028c2 <MX_TIM1_Init+0x132>
 80027e0:	2220      	movs	r2, #32
 80027e2:	2300      	movs	r3, #0
 80027e4:	4841      	ldr	r0, [pc, #260]	@ (80028ec <MX_TIM1_Init+0x15c>)
 80027e6:	4669      	mov	r1, sp
 80027e8:	e9cd 2300 	strd	r2, r3, [sp]
 80027ec:	f000 f978 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 80027f0:	2800      	cmp	r0, #0
 80027f2:	d161      	bne.n	80028b8 <MX_TIM1_Init+0x128>
 80027f4:	2000      	movs	r0, #0
 80027f6:	2100      	movs	r1, #0
 80027f8:	2200      	movs	r2, #0
 80027fa:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 80027fe:	2370      	movs	r3, #112	@ 0x70
 8002800:	483a      	ldr	r0, [pc, #232]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002802:	920c      	str	r2, [sp, #48]	@ 0x30
 8002804:	a906      	add	r1, sp, #24
 8002806:	e9cd 3206 	strd	r3, r2, [sp, #24]
 800280a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 800280e:	f007 f9ed 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 8002812:	2800      	cmp	r0, #0
 8002814:	d14b      	bne.n	80028ae <MX_TIM1_Init+0x11e>
 8002816:	4835      	ldr	r0, [pc, #212]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002818:	2204      	movs	r2, #4
 800281a:	a906      	add	r1, sp, #24
 800281c:	f007 f9e6 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 8002820:	2800      	cmp	r0, #0
 8002822:	d13f      	bne.n	80028a4 <MX_TIM1_Init+0x114>
 8002824:	4831      	ldr	r0, [pc, #196]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002826:	2208      	movs	r2, #8
 8002828:	a906      	add	r1, sp, #24
 800282a:	f007 f9df 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 800282e:	2800      	cmp	r0, #0
 8002830:	d133      	bne.n	800289a <MX_TIM1_Init+0x10a>
 8002832:	2300      	movs	r3, #0
 8002834:	482d      	ldr	r0, [pc, #180]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002836:	9306      	str	r3, [sp, #24]
 8002838:	220c      	movs	r2, #12
 800283a:	a906      	add	r1, sp, #24
 800283c:	f007 f9aa 	bl	8009b94 <HAL_TIM_OC_ConfigChannel>
 8002840:	bb30      	cbnz	r0, 8002890 <MX_TIM1_Init+0x100>
 8002842:	ed9f 7b27 	vldr	d7, [pc, #156]	@ 80028e0 <MX_TIM1_Init+0x150>
 8002846:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 800284a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800284e:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002852:	2300      	movs	r3, #0
 8002854:	2214      	movs	r2, #20
 8002856:	4825      	ldr	r0, [pc, #148]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002858:	9314      	str	r3, [sp, #80]	@ 0x50
 800285a:	a90e      	add	r1, sp, #56	@ 0x38
 800285c:	ed8d 7b12 	vstr	d7, [sp, #72]	@ 0x48
 8002860:	e9cd 3210 	strd	r3, r2, [sp, #64]	@ 0x40
 8002864:	f000 f962 	bl	8002b2c <HAL_TIMEx_ConfigBreakDeadTime>
 8002868:	b948      	cbnz	r0, 800287e <MX_TIM1_Init+0xee>
 800286a:	4820      	ldr	r0, [pc, #128]	@ (80028ec <MX_TIM1_Init+0x15c>)
 800286c:	f7ff ff20 	bl	80026b0 <HAL_TIM_MspPostInit>
 8002870:	b016      	add	sp, #88	@ 0x58
 8002872:	bd10      	pop	{r4, pc}
 8002874:	481e      	ldr	r0, [pc, #120]	@ (80028f0 <MX_TIM1_Init+0x160>)
 8002876:	2165      	movs	r1, #101	@ 0x65
 8002878:	f000 ffc2 	bl	8003800 <_Error_Handler>
 800287c:	e79c      	b.n	80027b8 <MX_TIM1_Init+0x28>
 800287e:	21a4      	movs	r1, #164	@ 0xa4
 8002880:	481b      	ldr	r0, [pc, #108]	@ (80028f0 <MX_TIM1_Init+0x160>)
 8002882:	f000 ffbd 	bl	8003800 <_Error_Handler>
 8002886:	4819      	ldr	r0, [pc, #100]	@ (80028ec <MX_TIM1_Init+0x15c>)
 8002888:	f7ff ff12 	bl	80026b0 <HAL_TIM_MspPostInit>
 800288c:	b016      	add	sp, #88	@ 0x58
 800288e:	bd10      	pop	{r4, pc}
 8002890:	4817      	ldr	r0, [pc, #92]	@ (80028f0 <MX_TIM1_Init+0x160>)
 8002892:	2198      	movs	r1, #152	@ 0x98
 8002894:	f000 ffb4 	bl	8003800 <_Error_Handler>
 8002898:	e7d3      	b.n	8002842 <MX_TIM1_Init+0xb2>
 800289a:	4815      	ldr	r0, [pc, #84]	@ (80028f0 <MX_TIM1_Init+0x160>)
 800289c:	2192      	movs	r1, #146	@ 0x92
 800289e:	f000 ffaf 	bl	8003800 <_Error_Handler>
 80028a2:	e7c6      	b.n	8002832 <MX_TIM1_Init+0xa2>
 80028a4:	4812      	ldr	r0, [pc, #72]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028a6:	218d      	movs	r1, #141	@ 0x8d
 80028a8:	f000 ffaa 	bl	8003800 <_Error_Handler>
 80028ac:	e7ba      	b.n	8002824 <MX_TIM1_Init+0x94>
 80028ae:	4810      	ldr	r0, [pc, #64]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028b0:	2188      	movs	r1, #136	@ 0x88
 80028b2:	f000 ffa5 	bl	8003800 <_Error_Handler>
 80028b6:	e7ae      	b.n	8002816 <MX_TIM1_Init+0x86>
 80028b8:	480d      	ldr	r0, [pc, #52]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028ba:	217c      	movs	r1, #124	@ 0x7c
 80028bc:	f000 ffa0 	bl	8003800 <_Error_Handler>
 80028c0:	e798      	b.n	80027f4 <MX_TIM1_Init+0x64>
 80028c2:	480b      	ldr	r0, [pc, #44]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028c4:	2175      	movs	r1, #117	@ 0x75
 80028c6:	f000 ff9b 	bl	8003800 <_Error_Handler>
 80028ca:	e789      	b.n	80027e0 <MX_TIM1_Init+0x50>
 80028cc:	4808      	ldr	r0, [pc, #32]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028ce:	2170      	movs	r1, #112	@ 0x70
 80028d0:	f000 ff96 	bl	8003800 <_Error_Handler>
 80028d4:	e77f      	b.n	80027d6 <MX_TIM1_Init+0x46>
 80028d6:	4806      	ldr	r0, [pc, #24]	@ (80028f0 <MX_TIM1_Init+0x160>)
 80028d8:	216b      	movs	r1, #107	@ 0x6b
 80028da:	f000 ff91 	bl	8003800 <_Error_Handler>
 80028de:	e775      	b.n	80027cc <MX_TIM1_Init+0x3c>
 80028e0:	00000000 	.word	0x00000000
 80028e4:	00002000 	.word	0x00002000
 80028e8:	40010000 	.word	0x40010000
 80028ec:	200007b8 	.word	0x200007b8
 80028f0:	08029590 	.word	0x08029590

080028f4 <MX_TIM2_Init>:
 80028f4:	b510      	push	{r4, lr}
 80028f6:	4c28      	ldr	r4, [pc, #160]	@ (8002998 <MX_TIM2_Init+0xa4>)
 80028f8:	2300      	movs	r3, #0
 80028fa:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80028fe:	b08a      	sub	sp, #40	@ 0x28
 8002900:	2160      	movs	r1, #96	@ 0x60
 8002902:	e9c4 0300 	strd	r0, r3, [r4]
 8002906:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800290a:	4620      	mov	r0, r4
 800290c:	e9c4 2303 	strd	r2, r3, [r4, #12]
 8002910:	60a1      	str	r1, [r4, #8]
 8002912:	f006 ffd1 	bl	80098b8 <HAL_TIM_PWM_Init>
 8002916:	bb38      	cbnz	r0, 8002968 <MX_TIM2_Init+0x74>
 8002918:	2200      	movs	r2, #0
 800291a:	2300      	movs	r3, #0
 800291c:	481e      	ldr	r0, [pc, #120]	@ (8002998 <MX_TIM2_Init+0xa4>)
 800291e:	4669      	mov	r1, sp
 8002920:	e9cd 2300 	strd	r2, r3, [sp]
 8002924:	f000 f8dc 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 8002928:	bb88      	cbnz	r0, 800298e <MX_TIM2_Init+0x9a>
 800292a:	2202      	movs	r2, #2
 800292c:	2070      	movs	r0, #112	@ 0x70
 800292e:	2100      	movs	r1, #0
 8002930:	9204      	str	r2, [sp, #16]
 8002932:	2208      	movs	r2, #8
 8002934:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002938:	2300      	movs	r3, #0
 800293a:	4817      	ldr	r0, [pc, #92]	@ (8002998 <MX_TIM2_Init+0xa4>)
 800293c:	9306      	str	r3, [sp, #24]
 800293e:	eb0d 0102 	add.w	r1, sp, r2
 8002942:	f007 f953 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 8002946:	b9e8      	cbnz	r0, 8002984 <MX_TIM2_Init+0x90>
 8002948:	f241 0401 	movw	r4, #4097	@ 0x1001
 800294c:	2300      	movs	r3, #0
 800294e:	4812      	ldr	r0, [pc, #72]	@ (8002998 <MX_TIM2_Init+0xa4>)
 8002950:	220c      	movs	r2, #12
 8002952:	a902      	add	r1, sp, #8
 8002954:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002958:	f007 f948 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 800295c:	b948      	cbnz	r0, 8002972 <MX_TIM2_Init+0x7e>
 800295e:	480e      	ldr	r0, [pc, #56]	@ (8002998 <MX_TIM2_Init+0xa4>)
 8002960:	f7ff fea6 	bl	80026b0 <HAL_TIM_MspPostInit>
 8002964:	b00a      	add	sp, #40	@ 0x28
 8002966:	bd10      	pop	{r4, pc}
 8002968:	480c      	ldr	r0, [pc, #48]	@ (800299c <MX_TIM2_Init+0xa8>)
 800296a:	21b7      	movs	r1, #183	@ 0xb7
 800296c:	f000 ff48 	bl	8003800 <_Error_Handler>
 8002970:	e7d2      	b.n	8002918 <MX_TIM2_Init+0x24>
 8002972:	21ce      	movs	r1, #206	@ 0xce
 8002974:	4809      	ldr	r0, [pc, #36]	@ (800299c <MX_TIM2_Init+0xa8>)
 8002976:	f000 ff43 	bl	8003800 <_Error_Handler>
 800297a:	4807      	ldr	r0, [pc, #28]	@ (8002998 <MX_TIM2_Init+0xa4>)
 800297c:	f7ff fe98 	bl	80026b0 <HAL_TIM_MspPostInit>
 8002980:	b00a      	add	sp, #40	@ 0x28
 8002982:	bd10      	pop	{r4, pc}
 8002984:	4805      	ldr	r0, [pc, #20]	@ (800299c <MX_TIM2_Init+0xa8>)
 8002986:	21c7      	movs	r1, #199	@ 0xc7
 8002988:	f000 ff3a 	bl	8003800 <_Error_Handler>
 800298c:	e7dc      	b.n	8002948 <MX_TIM2_Init+0x54>
 800298e:	4803      	ldr	r0, [pc, #12]	@ (800299c <MX_TIM2_Init+0xa8>)
 8002990:	21be      	movs	r1, #190	@ 0xbe
 8002992:	f000 ff35 	bl	8003800 <_Error_Handler>
 8002996:	e7c8      	b.n	800292a <MX_TIM2_Init+0x36>
 8002998:	2000077c 	.word	0x2000077c
 800299c:	08029590 	.word	0x08029590

080029a0 <MX_TIM8_Init>:
 80029a0:	b510      	push	{r4, lr}
 80029a2:	4841      	ldr	r0, [pc, #260]	@ (8002aa8 <MX_TIM8_Init+0x108>)
 80029a4:	4c41      	ldr	r4, [pc, #260]	@ (8002aac <MX_TIM8_Init+0x10c>)
 80029a6:	2300      	movs	r3, #0
 80029a8:	2260      	movs	r2, #96	@ 0x60
 80029aa:	b092      	sub	sp, #72	@ 0x48
 80029ac:	f640 51ac 	movw	r1, #3500	@ 0xdac
 80029b0:	e9c4 0300 	strd	r0, r3, [r4]
 80029b4:	60a2      	str	r2, [r4, #8]
 80029b6:	4620      	mov	r0, r4
 80029b8:	2202      	movs	r2, #2
 80029ba:	e9c4 1303 	strd	r1, r3, [r4, #12]
 80029be:	6162      	str	r2, [r4, #20]
 80029c0:	f006 ff7a 	bl	80098b8 <HAL_TIM_PWM_Init>
 80029c4:	2800      	cmp	r0, #0
 80029c6:	d141      	bne.n	8002a4c <MX_TIM8_Init+0xac>
 80029c8:	2220      	movs	r2, #32
 80029ca:	2300      	movs	r3, #0
 80029cc:	4837      	ldr	r0, [pc, #220]	@ (8002aac <MX_TIM8_Init+0x10c>)
 80029ce:	4669      	mov	r1, sp
 80029d0:	e9cd 2300 	strd	r2, r3, [sp]
 80029d4:	f000 f884 	bl	8002ae0 <HAL_TIMEx_MasterConfigSynchronization>
 80029d8:	2800      	cmp	r0, #0
 80029da:	d159      	bne.n	8002a90 <MX_TIM8_Init+0xf0>
 80029dc:	2000      	movs	r0, #0
 80029de:	2100      	movs	r1, #0
 80029e0:	2200      	movs	r2, #0
 80029e2:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80029e6:	2370      	movs	r3, #112	@ 0x70
 80029e8:	4830      	ldr	r0, [pc, #192]	@ (8002aac <MX_TIM8_Init+0x10c>)
 80029ea:	9208      	str	r2, [sp, #32]
 80029ec:	a902      	add	r1, sp, #8
 80029ee:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80029f2:	e9cd 2204 	strd	r2, r2, [sp, #16]
 80029f6:	f007 f8f9 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 80029fa:	2800      	cmp	r0, #0
 80029fc:	d142      	bne.n	8002a84 <MX_TIM8_Init+0xe4>
 80029fe:	482b      	ldr	r0, [pc, #172]	@ (8002aac <MX_TIM8_Init+0x10c>)
 8002a00:	2204      	movs	r2, #4
 8002a02:	a902      	add	r1, sp, #8
 8002a04:	f007 f8f2 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 8002a08:	2800      	cmp	r0, #0
 8002a0a:	d135      	bne.n	8002a78 <MX_TIM8_Init+0xd8>
 8002a0c:	2208      	movs	r2, #8
 8002a0e:	4827      	ldr	r0, [pc, #156]	@ (8002aac <MX_TIM8_Init+0x10c>)
 8002a10:	eb0d 0102 	add.w	r1, sp, r2
 8002a14:	f007 f8ea 	bl	8009bec <HAL_TIM_PWM_ConfigChannel>
 8002a18:	bb40      	cbnz	r0, 8002a6c <MX_TIM8_Init+0xcc>
 8002a1a:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8002aa0 <MX_TIM8_Init+0x100>
 8002a1e:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8002a22:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002a26:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	2214      	movs	r2, #20
 8002a2e:	481f      	ldr	r0, [pc, #124]	@ (8002aac <MX_TIM8_Init+0x10c>)
 8002a30:	9310      	str	r3, [sp, #64]	@ 0x40
 8002a32:	a90a      	add	r1, sp, #40	@ 0x28
 8002a34:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002a38:	e9cd 320c 	strd	r3, r2, [sp, #48]	@ 0x30
 8002a3c:	f000 f876 	bl	8002b2c <HAL_TIMEx_ConfigBreakDeadTime>
 8002a40:	b950      	cbnz	r0, 8002a58 <MX_TIM8_Init+0xb8>
 8002a42:	481a      	ldr	r0, [pc, #104]	@ (8002aac <MX_TIM8_Init+0x10c>)
 8002a44:	f7ff fe34 	bl	80026b0 <HAL_TIM_MspPostInit>
 8002a48:	b012      	add	sp, #72	@ 0x48
 8002a4a:	bd10      	pop	{r4, pc}
 8002a4c:	4818      	ldr	r0, [pc, #96]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a4e:	f240 114b 	movw	r1, #331	@ 0x14b
 8002a52:	f000 fed5 	bl	8003800 <_Error_Handler>
 8002a56:	e7b7      	b.n	80029c8 <MX_TIM8_Init+0x28>
 8002a58:	f44f 71ba 	mov.w	r1, #372	@ 0x174
 8002a5c:	4814      	ldr	r0, [pc, #80]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a5e:	f000 fecf 	bl	8003800 <_Error_Handler>
 8002a62:	4812      	ldr	r0, [pc, #72]	@ (8002aac <MX_TIM8_Init+0x10c>)
 8002a64:	f7ff fe24 	bl	80026b0 <HAL_TIM_MspPostInit>
 8002a68:	b012      	add	sp, #72	@ 0x48
 8002a6a:	bd10      	pop	{r4, pc}
 8002a6c:	4810      	ldr	r0, [pc, #64]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a6e:	f44f 71b4 	mov.w	r1, #360	@ 0x168
 8002a72:	f000 fec5 	bl	8003800 <_Error_Handler>
 8002a76:	e7d0      	b.n	8002a1a <MX_TIM8_Init+0x7a>
 8002a78:	480d      	ldr	r0, [pc, #52]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a7a:	f240 1163 	movw	r1, #355	@ 0x163
 8002a7e:	f000 febf 	bl	8003800 <_Error_Handler>
 8002a82:	e7c3      	b.n	8002a0c <MX_TIM8_Init+0x6c>
 8002a84:	480a      	ldr	r0, [pc, #40]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a86:	f44f 71af 	mov.w	r1, #350	@ 0x15e
 8002a8a:	f000 feb9 	bl	8003800 <_Error_Handler>
 8002a8e:	e7b6      	b.n	80029fe <MX_TIM8_Init+0x5e>
 8002a90:	4807      	ldr	r0, [pc, #28]	@ (8002ab0 <MX_TIM8_Init+0x110>)
 8002a92:	f44f 71a9 	mov.w	r1, #338	@ 0x152
 8002a96:	f000 feb3 	bl	8003800 <_Error_Handler>
 8002a9a:	e79f      	b.n	80029dc <MX_TIM8_Init+0x3c>
 8002a9c:	f3af 8000 	nop.w
 8002aa0:	00000000 	.word	0x00000000
 8002aa4:	00002000 	.word	0x00002000
 8002aa8:	40010400 	.word	0x40010400
 8002aac:	2000068c 	.word	0x2000068c
 8002ab0:	08029590 	.word	0x08029590

08002ab4 <HAL_TIMEx_PWMN_Start>:
 8002ab4:	6803      	ldr	r3, [r0, #0]
 8002ab6:	2204      	movs	r2, #4
 8002ab8:	6a18      	ldr	r0, [r3, #32]
 8002aba:	fa02 f101 	lsl.w	r1, r2, r1
 8002abe:	ea20 0001 	bic.w	r0, r0, r1
 8002ac2:	6218      	str	r0, [r3, #32]
 8002ac4:	6a1a      	ldr	r2, [r3, #32]
 8002ac6:	4311      	orrs	r1, r2
 8002ac8:	6219      	str	r1, [r3, #32]
 8002aca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002acc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002ad0:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ad2:	681a      	ldr	r2, [r3, #0]
 8002ad4:	f042 0201 	orr.w	r2, r2, #1
 8002ad8:	2000      	movs	r0, #0
 8002ada:	601a      	str	r2, [r3, #0]
 8002adc:	4770      	bx	lr
 8002ade:	bf00      	nop

08002ae0 <HAL_TIMEx_MasterConfigSynchronization>:
 8002ae0:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8002ae4:	2b01      	cmp	r3, #1
 8002ae6:	d01f      	beq.n	8002b28 <HAL_TIMEx_MasterConfigSynchronization+0x48>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	6803      	ldr	r3, [r0, #0]
 8002aec:	2002      	movs	r0, #2
 8002aee:	b530      	push	{r4, r5, lr}
 8002af0:	f882 0039 	strb.w	r0, [r2, #57]	@ 0x39
 8002af4:	6858      	ldr	r0, [r3, #4]
 8002af6:	680d      	ldr	r5, [r1, #0]
 8002af8:	684c      	ldr	r4, [r1, #4]
 8002afa:	f020 0070 	bic.w	r0, r0, #112	@ 0x70
 8002afe:	6058      	str	r0, [r3, #4]
 8002b00:	6858      	ldr	r0, [r3, #4]
 8002b02:	4328      	orrs	r0, r5
 8002b04:	6058      	str	r0, [r3, #4]
 8002b06:	6899      	ldr	r1, [r3, #8]
 8002b08:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002b0c:	6099      	str	r1, [r3, #8]
 8002b0e:	6899      	ldr	r1, [r3, #8]
 8002b10:	f04f 0c00 	mov.w	ip, #0
 8002b14:	4321      	orrs	r1, r4
 8002b16:	f04f 0e01 	mov.w	lr, #1
 8002b1a:	6099      	str	r1, [r3, #8]
 8002b1c:	f882 e039 	strb.w	lr, [r2, #57]	@ 0x39
 8002b20:	f882 c038 	strb.w	ip, [r2, #56]	@ 0x38
 8002b24:	4660      	mov	r0, ip
 8002b26:	bd30      	pop	{r4, r5, pc}
 8002b28:	2002      	movs	r0, #2
 8002b2a:	4770      	bx	lr

08002b2c <HAL_TIMEx_ConfigBreakDeadTime>:
 8002b2c:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8002b30:	2b01      	cmp	r3, #1
 8002b32:	d023      	beq.n	8002b7c <HAL_TIMEx_ConfigBreakDeadTime+0x50>
 8002b34:	b410      	push	{r4}
 8002b36:	e9d1 4302 	ldrd	r4, r3, [r1, #8]
 8002b3a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002b3e:	4602      	mov	r2, r0
 8002b40:	4323      	orrs	r3, r4
 8002b42:	6848      	ldr	r0, [r1, #4]
 8002b44:	680c      	ldr	r4, [r1, #0]
 8002b46:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8002b4a:	4303      	orrs	r3, r0
 8002b4c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8002b50:	6908      	ldr	r0, [r1, #16]
 8002b52:	4323      	orrs	r3, r4
 8002b54:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002b58:	4303      	orrs	r3, r0
 8002b5a:	6948      	ldr	r0, [r1, #20]
 8002b5c:	698c      	ldr	r4, [r1, #24]
 8002b5e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8002b62:	4303      	orrs	r3, r0
 8002b64:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8002b68:	6810      	ldr	r0, [r2, #0]
 8002b6a:	2100      	movs	r1, #0
 8002b6c:	4323      	orrs	r3, r4
 8002b6e:	6443      	str	r3, [r0, #68]	@ 0x44
 8002b70:	f882 1038 	strb.w	r1, [r2, #56]	@ 0x38
 8002b74:	4608      	mov	r0, r1
 8002b76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002b7a:	4770      	bx	lr
 8002b7c:	2002      	movs	r0, #2
 8002b7e:	4770      	bx	lr

08002b80 <HAL_TIMEx_CommutationCallback>:
 8002b80:	4770      	bx	lr
 8002b82:	bf00      	nop

08002b84 <HAL_TIMEx_BreakCallback>:
 8002b84:	4770      	bx	lr
 8002b86:	bf00      	nop

08002b88 <HAL_PCDEx_SetTxFiFo>:
 8002b88:	b410      	push	{r4}
 8002b8a:	6804      	ldr	r4, [r0, #0]
 8002b8c:	0412      	lsls	r2, r2, #16
 8002b8e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8002b90:	b929      	cbnz	r1, 8002b9e <HAL_PCDEx_SetTxFiFo+0x16>
 8002b92:	431a      	orrs	r2, r3
 8002b94:	62a2      	str	r2, [r4, #40]	@ 0x28
 8002b96:	2000      	movs	r0, #0
 8002b98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002b9c:	4770      	bx	lr
 8002b9e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8002ba0:	3901      	subs	r1, #1
 8002ba2:	eb03 4c10 	add.w	ip, r3, r0, lsr #16
 8002ba6:	d009      	beq.n	8002bbc <HAL_PCDEx_SetTxFiFo+0x34>
 8002ba8:	2300      	movs	r3, #0
 8002baa:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 8002bae:	3301      	adds	r3, #1
 8002bb0:	f8d0 0104 	ldr.w	r0, [r0, #260]	@ 0x104
 8002bb4:	4299      	cmp	r1, r3
 8002bb6:	eb0c 4c10 	add.w	ip, ip, r0, lsr #16
 8002bba:	d1f6      	bne.n	8002baa <HAL_PCDEx_SetTxFiFo+0x22>
 8002bbc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8002bc0:	ea42 020c 	orr.w	r2, r2, ip
 8002bc4:	f8c4 2104 	str.w	r2, [r4, #260]	@ 0x104
 8002bc8:	2000      	movs	r0, #0
 8002bca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002bce:	4770      	bx	lr

08002bd0 <HAL_PCDEx_SetRxFiFo>:
 8002bd0:	6803      	ldr	r3, [r0, #0]
 8002bd2:	2000      	movs	r0, #0
 8002bd4:	6259      	str	r1, [r3, #36]	@ 0x24
 8002bd6:	4770      	bx	lr

08002bd8 <MX_DMA_Init>:
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	b082      	sub	sp, #8
 8002bdc:	2400      	movs	r4, #0
 8002bde:	4b1c      	ldr	r3, [pc, #112]	@ (8002c50 <MX_DMA_Init+0x78>)
 8002be0:	9400      	str	r4, [sp, #0]
 8002be2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002be4:	f441 1100 	orr.w	r1, r1, #2097152	@ 0x200000
 8002be8:	6319      	str	r1, [r3, #48]	@ 0x30
 8002bea:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8002bec:	f400 1000 	and.w	r0, r0, #2097152	@ 0x200000
 8002bf0:	9000      	str	r0, [sp, #0]
 8002bf2:	9800      	ldr	r0, [sp, #0]
 8002bf4:	9401      	str	r4, [sp, #4]
 8002bf6:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8002bf8:	f440 0080 	orr.w	r0, r0, #4194304	@ 0x400000
 8002bfc:	6318      	str	r0, [r3, #48]	@ 0x30
 8002bfe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c00:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002c04:	4622      	mov	r2, r4
 8002c06:	2105      	movs	r1, #5
 8002c08:	9301      	str	r3, [sp, #4]
 8002c0a:	200b      	movs	r0, #11
 8002c0c:	9b01      	ldr	r3, [sp, #4]
 8002c0e:	f7fe f9cb 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002c12:	200b      	movs	r0, #11
 8002c14:	f7fe fa04 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8002c18:	4622      	mov	r2, r4
 8002c1a:	2105      	movs	r1, #5
 8002c1c:	200d      	movs	r0, #13
 8002c1e:	f7fe f9c3 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002c22:	200d      	movs	r0, #13
 8002c24:	f7fe f9fc 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8002c28:	4622      	mov	r2, r4
 8002c2a:	2105      	movs	r1, #5
 8002c2c:	200f      	movs	r0, #15
 8002c2e:	f7fe f9bb 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002c32:	200f      	movs	r0, #15
 8002c34:	f7fe f9f4 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8002c38:	4622      	mov	r2, r4
 8002c3a:	2105      	movs	r1, #5
 8002c3c:	2010      	movs	r0, #16
 8002c3e:	f7fe f9b3 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8002c42:	2010      	movs	r0, #16
 8002c44:	b002      	add	sp, #8
 8002c46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c4a:	f7fe b9e9 	b.w	8001020 <HAL_NVIC_EnableIRQ>
 8002c4e:	bf00      	nop
 8002c50:	40023800 	.word	0x40023800

08002c54 <SPI_WaitFlagStateUntilTimeout>:
 8002c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c58:	6806      	ldr	r6, [r0, #0]
 8002c5a:	461f      	mov	r7, r3
 8002c5c:	68b3      	ldr	r3, [r6, #8]
 8002c5e:	ea31 0303 	bics.w	r3, r1, r3
 8002c62:	bf0c      	ite	eq
 8002c64:	2301      	moveq	r3, #1
 8002c66:	2300      	movne	r3, #0
 8002c68:	429a      	cmp	r2, r3
 8002c6a:	d00d      	beq.n	8002c88 <SPI_WaitFlagStateUntilTimeout+0x34>
 8002c6c:	1c7b      	adds	r3, r7, #1
 8002c6e:	460c      	mov	r4, r1
 8002c70:	4615      	mov	r5, r2
 8002c72:	bf18      	it	ne
 8002c74:	4680      	movne	r8, r0
 8002c76:	d10a      	bne.n	8002c8e <SPI_WaitFlagStateUntilTimeout+0x3a>
 8002c78:	68b3      	ldr	r3, [r6, #8]
 8002c7a:	ea34 0303 	bics.w	r3, r4, r3
 8002c7e:	bf0c      	ite	eq
 8002c80:	2301      	moveq	r3, #1
 8002c82:	2300      	movne	r3, #0
 8002c84:	42ab      	cmp	r3, r5
 8002c86:	d1f7      	bne.n	8002c78 <SPI_WaitFlagStateUntilTimeout+0x24>
 8002c88:	2000      	movs	r0, #0
 8002c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c8e:	b187      	cbz	r7, 8002cb2 <SPI_WaitFlagStateUntilTimeout+0x5e>
 8002c90:	f003 f8a4 	bl	8005ddc <HAL_GetTick>
 8002c94:	9b06      	ldr	r3, [sp, #24]
 8002c96:	f8d8 6000 	ldr.w	r6, [r8]
 8002c9a:	1ac0      	subs	r0, r0, r3
 8002c9c:	42b8      	cmp	r0, r7
 8002c9e:	d208      	bcs.n	8002cb2 <SPI_WaitFlagStateUntilTimeout+0x5e>
 8002ca0:	68b3      	ldr	r3, [r6, #8]
 8002ca2:	ea34 0303 	bics.w	r3, r4, r3
 8002ca6:	bf0c      	ite	eq
 8002ca8:	2301      	moveq	r3, #1
 8002caa:	2300      	movne	r3, #0
 8002cac:	429d      	cmp	r5, r3
 8002cae:	d1ee      	bne.n	8002c8e <SPI_WaitFlagStateUntilTimeout+0x3a>
 8002cb0:	e7ea      	b.n	8002c88 <SPI_WaitFlagStateUntilTimeout+0x34>
 8002cb2:	6873      	ldr	r3, [r6, #4]
 8002cb4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002cb8:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8002cbc:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8002cc0:	6073      	str	r3, [r6, #4]
 8002cc2:	d016      	beq.n	8002cf2 <SPI_WaitFlagStateUntilTimeout+0x9e>
 8002cc4:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
 8002cc8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002ccc:	d007      	beq.n	8002cde <SPI_WaitFlagStateUntilTimeout+0x8a>
 8002cce:	2201      	movs	r2, #1
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	f888 2051 	strb.w	r2, [r8, #81]	@ 0x51
 8002cd6:	f888 3050 	strb.w	r3, [r8, #80]	@ 0x50
 8002cda:	2003      	movs	r0, #3
 8002cdc:	e7d5      	b.n	8002c8a <SPI_WaitFlagStateUntilTimeout+0x36>
 8002cde:	6833      	ldr	r3, [r6, #0]
 8002ce0:	f64d 72ff 	movw	r2, #57343	@ 0xdfff
 8002ce4:	4013      	ands	r3, r2
 8002ce6:	6033      	str	r3, [r6, #0]
 8002ce8:	6833      	ldr	r3, [r6, #0]
 8002cea:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8002cee:	6033      	str	r3, [r6, #0]
 8002cf0:	e7ed      	b.n	8002cce <SPI_WaitFlagStateUntilTimeout+0x7a>
 8002cf2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002cf6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8002cfa:	d002      	beq.n	8002d02 <SPI_WaitFlagStateUntilTimeout+0xae>
 8002cfc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002d00:	d1e0      	bne.n	8002cc4 <SPI_WaitFlagStateUntilTimeout+0x70>
 8002d02:	6833      	ldr	r3, [r6, #0]
 8002d04:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002d08:	6033      	str	r3, [r6, #0]
 8002d0a:	e7db      	b.n	8002cc4 <SPI_WaitFlagStateUntilTimeout+0x70>

08002d0c <HAL_SPI_Init>:
 8002d0c:	2800      	cmp	r0, #0
 8002d0e:	d03b      	beq.n	8002d88 <HAL_SPI_Init+0x7c>
 8002d10:	b538      	push	{r3, r4, r5, lr}
 8002d12:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8002d16:	2200      	movs	r2, #0
 8002d18:	4604      	mov	r4, r0
 8002d1a:	6282      	str	r2, [r0, #40]	@ 0x28
 8002d1c:	f003 01ff 	and.w	r1, r3, #255	@ 0xff
 8002d20:	b363      	cbz	r3, 8002d7c <HAL_SPI_Init+0x70>
 8002d22:	4610      	mov	r0, r2
 8002d24:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8002d28:	68e2      	ldr	r2, [r4, #12]
 8002d2a:	6825      	ldr	r5, [r4, #0]
 8002d2c:	430b      	orrs	r3, r1
 8002d2e:	4313      	orrs	r3, r2
 8002d30:	e9d4 1204 	ldrd	r1, r2, [r4, #16]
 8002d34:	430b      	orrs	r3, r1
 8002d36:	4313      	orrs	r3, r2
 8002d38:	69e2      	ldr	r2, [r4, #28]
 8002d3a:	2102      	movs	r1, #2
 8002d3c:	f884 1051 	strb.w	r1, [r4, #81]	@ 0x51
 8002d40:	4313      	orrs	r3, r2
 8002d42:	6a22      	ldr	r2, [r4, #32]
 8002d44:	6829      	ldr	r1, [r5, #0]
 8002d46:	4313      	orrs	r3, r2
 8002d48:	69a2      	ldr	r2, [r4, #24]
 8002d4a:	f021 0140 	bic.w	r1, r1, #64	@ 0x40
 8002d4e:	6029      	str	r1, [r5, #0]
 8002d50:	f402 7c00 	and.w	ip, r2, #512	@ 0x200
 8002d54:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8002d56:	0c12      	lsrs	r2, r2, #16
 8002d58:	ea43 030c 	orr.w	r3, r3, ip
 8002d5c:	f002 0204 	and.w	r2, r2, #4
 8002d60:	4303      	orrs	r3, r0
 8002d62:	430a      	orrs	r2, r1
 8002d64:	602b      	str	r3, [r5, #0]
 8002d66:	606a      	str	r2, [r5, #4]
 8002d68:	69eb      	ldr	r3, [r5, #28]
 8002d6a:	2000      	movs	r0, #0
 8002d6c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8002d70:	2201      	movs	r2, #1
 8002d72:	61eb      	str	r3, [r5, #28]
 8002d74:	6560      	str	r0, [r4, #84]	@ 0x54
 8002d76:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
 8002d7a:	bd38      	pop	{r3, r4, r5, pc}
 8002d7c:	f880 1050 	strb.w	r1, [r0, #80]	@ 0x50
 8002d80:	f000 fee2 	bl	8003b48 <HAL_SPI_MspInit>
 8002d84:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8002d86:	e7cd      	b.n	8002d24 <HAL_SPI_Init+0x18>
 8002d88:	2001      	movs	r0, #1
 8002d8a:	4770      	bx	lr

08002d8c <HAL_SPI_DeInit>:
 8002d8c:	b198      	cbz	r0, 8002db6 <HAL_SPI_DeInit+0x2a>
 8002d8e:	6802      	ldr	r2, [r0, #0]
 8002d90:	2302      	movs	r3, #2
 8002d92:	b510      	push	{r4, lr}
 8002d94:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 8002d98:	6813      	ldr	r3, [r2, #0]
 8002d9a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002d9e:	4604      	mov	r4, r0
 8002da0:	6013      	str	r3, [r2, #0]
 8002da2:	f000 ff59 	bl	8003c58 <HAL_SPI_MspDeInit>
 8002da6:	2300      	movs	r3, #0
 8002da8:	6563      	str	r3, [r4, #84]	@ 0x54
 8002daa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 8002dae:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 8002db2:	4618      	mov	r0, r3
 8002db4:	bd10      	pop	{r4, pc}
 8002db6:	2001      	movs	r0, #1
 8002db8:	4770      	bx	lr
 8002dba:	bf00      	nop

08002dbc <HAL_SPI_Transmit>:
 8002dbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002dc0:	4604      	mov	r4, r0
 8002dc2:	f890 0050 	ldrb.w	r0, [r0, #80]	@ 0x50
 8002dc6:	2801      	cmp	r0, #1
 8002dc8:	b085      	sub	sp, #20
 8002dca:	d063      	beq.n	8002e94 <HAL_SPI_Transmit+0xd8>
 8002dcc:	461d      	mov	r5, r3
 8002dce:	2301      	movs	r3, #1
 8002dd0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 8002dd4:	460e      	mov	r6, r1
 8002dd6:	4691      	mov	r9, r2
 8002dd8:	f003 f800 	bl	8005ddc <HAL_GetTick>
 8002ddc:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8002de0:	2b01      	cmp	r3, #1
 8002de2:	4607      	mov	r7, r0
 8002de4:	fa5f f883 	uxtb.w	r8, r3
 8002de8:	d00b      	beq.n	8002e02 <HAL_SPI_Transmit+0x46>
 8002dea:	f04f 0802 	mov.w	r8, #2
 8002dee:	2201      	movs	r2, #1
 8002df0:	2300      	movs	r3, #0
 8002df2:	4640      	mov	r0, r8
 8002df4:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
 8002df8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 8002dfc:	b005      	add	sp, #20
 8002dfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002e02:	2e00      	cmp	r6, #0
 8002e04:	d0f3      	beq.n	8002dee <HAL_SPI_Transmit+0x32>
 8002e06:	f1b9 0f00 	cmp.w	r9, #0
 8002e0a:	d0f0      	beq.n	8002dee <HAL_SPI_Transmit+0x32>
 8002e0c:	68a2      	ldr	r2, [r4, #8]
 8002e0e:	6326      	str	r6, [r4, #48]	@ 0x30
 8002e10:	2300      	movs	r3, #0
 8002e12:	2103      	movs	r1, #3
 8002e14:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8002e18:	f884 1051 	strb.w	r1, [r4, #81]	@ 0x51
 8002e1c:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
 8002e20:	6563      	str	r3, [r4, #84]	@ 0x54
 8002e22:	63a3      	str	r3, [r4, #56]	@ 0x38
 8002e24:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 8002e26:	f8a4 9036 	strh.w	r9, [r4, #54]	@ 0x36
 8002e2a:	f8a4 9034 	strh.w	r9, [r4, #52]	@ 0x34
 8002e2e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8002e30:	6823      	ldr	r3, [r4, #0]
 8002e32:	d05a      	beq.n	8002eea <HAL_SPI_Transmit+0x12e>
 8002e34:	681a      	ldr	r2, [r3, #0]
 8002e36:	0652      	lsls	r2, r2, #25
 8002e38:	d403      	bmi.n	8002e42 <HAL_SPI_Transmit+0x86>
 8002e3a:	681a      	ldr	r2, [r3, #0]
 8002e3c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002e40:	601a      	str	r2, [r3, #0]
 8002e42:	68e1      	ldr	r1, [r4, #12]
 8002e44:	6862      	ldr	r2, [r4, #4]
 8002e46:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8002e4a:	d029      	beq.n	8002ea0 <HAL_SPI_Transmit+0xe4>
 8002e4c:	2a00      	cmp	r2, #0
 8002e4e:	d051      	beq.n	8002ef4 <HAL_SPI_Transmit+0x138>
 8002e50:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002e52:	b292      	uxth	r2, r2
 8002e54:	2a01      	cmp	r2, #1
 8002e56:	d04d      	beq.n	8002ef4 <HAL_SPI_Transmit+0x138>
 8002e58:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8002e5a:	b29b      	uxth	r3, r3
 8002e5c:	b95b      	cbnz	r3, 8002e76 <HAL_SPI_Transmit+0xba>
 8002e5e:	e051      	b.n	8002f04 <HAL_SPI_Transmit+0x148>
 8002e60:	f816 2b01 	ldrb.w	r2, [r6], #1
 8002e64:	731a      	strb	r2, [r3, #12]
 8002e66:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8002e68:	3b01      	subs	r3, #1
 8002e6a:	b29b      	uxth	r3, r3
 8002e6c:	86e3      	strh	r3, [r4, #54]	@ 0x36
 8002e6e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002e70:	b292      	uxth	r2, r2
 8002e72:	2a00      	cmp	r2, #0
 8002e74:	d046      	beq.n	8002f04 <HAL_SPI_Transmit+0x148>
 8002e76:	6823      	ldr	r3, [r4, #0]
 8002e78:	689a      	ldr	r2, [r3, #8]
 8002e7a:	0792      	lsls	r2, r2, #30
 8002e7c:	d4f0      	bmi.n	8002e60 <HAL_SPI_Transmit+0xa4>
 8002e7e:	b135      	cbz	r5, 8002e8e <HAL_SPI_Transmit+0xd2>
 8002e80:	1c6b      	adds	r3, r5, #1
 8002e82:	d0f4      	beq.n	8002e6e <HAL_SPI_Transmit+0xb2>
 8002e84:	f002 ffaa 	bl	8005ddc <HAL_GetTick>
 8002e88:	1bc0      	subs	r0, r0, r7
 8002e8a:	42a8      	cmp	r0, r5
 8002e8c:	d3ef      	bcc.n	8002e6e <HAL_SPI_Transmit+0xb2>
 8002e8e:	f04f 0803 	mov.w	r8, #3
 8002e92:	e7ac      	b.n	8002dee <HAL_SPI_Transmit+0x32>
 8002e94:	f04f 0802 	mov.w	r8, #2
 8002e98:	4640      	mov	r0, r8
 8002e9a:	b005      	add	sp, #20
 8002e9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002ea0:	2a00      	cmp	r2, #0
 8002ea2:	d150      	bne.n	8002f46 <HAL_SPI_Transmit+0x18a>
 8002ea4:	f836 2b02 	ldrh.w	r2, [r6], #2
 8002ea8:	60da      	str	r2, [r3, #12]
 8002eaa:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002eac:	3a01      	subs	r2, #1
 8002eae:	b292      	uxth	r2, r2
 8002eb0:	86e2      	strh	r2, [r4, #54]	@ 0x36
 8002eb2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002eb4:	b292      	uxth	r2, r2
 8002eb6:	b95a      	cbnz	r2, 8002ed0 <HAL_SPI_Transmit+0x114>
 8002eb8:	e024      	b.n	8002f04 <HAL_SPI_Transmit+0x148>
 8002eba:	f836 2b02 	ldrh.w	r2, [r6], #2
 8002ebe:	60da      	str	r2, [r3, #12]
 8002ec0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8002ec2:	3b01      	subs	r3, #1
 8002ec4:	b29b      	uxth	r3, r3
 8002ec6:	86e3      	strh	r3, [r4, #54]	@ 0x36
 8002ec8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8002eca:	b29b      	uxth	r3, r3
 8002ecc:	b1d3      	cbz	r3, 8002f04 <HAL_SPI_Transmit+0x148>
 8002ece:	6823      	ldr	r3, [r4, #0]
 8002ed0:	689a      	ldr	r2, [r3, #8]
 8002ed2:	0790      	lsls	r0, r2, #30
 8002ed4:	d4f1      	bmi.n	8002eba <HAL_SPI_Transmit+0xfe>
 8002ed6:	2d00      	cmp	r5, #0
 8002ed8:	d0d9      	beq.n	8002e8e <HAL_SPI_Transmit+0xd2>
 8002eda:	1c69      	adds	r1, r5, #1
 8002edc:	d0f4      	beq.n	8002ec8 <HAL_SPI_Transmit+0x10c>
 8002ede:	f002 ff7d 	bl	8005ddc <HAL_GetTick>
 8002ee2:	1bc0      	subs	r0, r0, r7
 8002ee4:	42a8      	cmp	r0, r5
 8002ee6:	d3ef      	bcc.n	8002ec8 <HAL_SPI_Transmit+0x10c>
 8002ee8:	e7d1      	b.n	8002e8e <HAL_SPI_Transmit+0xd2>
 8002eea:	681a      	ldr	r2, [r3, #0]
 8002eec:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002ef0:	601a      	str	r2, [r3, #0]
 8002ef2:	e79f      	b.n	8002e34 <HAL_SPI_Transmit+0x78>
 8002ef4:	f816 2b01 	ldrb.w	r2, [r6], #1
 8002ef8:	731a      	strb	r2, [r3, #12]
 8002efa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8002efc:	3b01      	subs	r3, #1
 8002efe:	b29b      	uxth	r3, r3
 8002f00:	86e3      	strh	r3, [r4, #54]	@ 0x36
 8002f02:	e7a9      	b.n	8002e58 <HAL_SPI_Transmit+0x9c>
 8002f04:	9700      	str	r7, [sp, #0]
 8002f06:	462b      	mov	r3, r5
 8002f08:	2201      	movs	r2, #1
 8002f0a:	2102      	movs	r1, #2
 8002f0c:	4620      	mov	r0, r4
 8002f0e:	f7ff fea1 	bl	8002c54 <SPI_WaitFlagStateUntilTimeout>
 8002f12:	2800      	cmp	r0, #0
 8002f14:	d1bb      	bne.n	8002e8e <HAL_SPI_Transmit+0xd2>
 8002f16:	4602      	mov	r2, r0
 8002f18:	9700      	str	r7, [sp, #0]
 8002f1a:	462b      	mov	r3, r5
 8002f1c:	2180      	movs	r1, #128	@ 0x80
 8002f1e:	4620      	mov	r0, r4
 8002f20:	f7ff fe98 	bl	8002c54 <SPI_WaitFlagStateUntilTimeout>
 8002f24:	b9a0      	cbnz	r0, 8002f50 <HAL_SPI_Transmit+0x194>
 8002f26:	68a3      	ldr	r3, [r4, #8]
 8002f28:	b933      	cbnz	r3, 8002f38 <HAL_SPI_Transmit+0x17c>
 8002f2a:	6822      	ldr	r2, [r4, #0]
 8002f2c:	9303      	str	r3, [sp, #12]
 8002f2e:	68d3      	ldr	r3, [r2, #12]
 8002f30:	9303      	str	r3, [sp, #12]
 8002f32:	6893      	ldr	r3, [r2, #8]
 8002f34:	9303      	str	r3, [sp, #12]
 8002f36:	9b03      	ldr	r3, [sp, #12]
 8002f38:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8002f3a:	f1b3 0800 	subs.w	r8, r3, #0
 8002f3e:	bf18      	it	ne
 8002f40:	f04f 0801 	movne.w	r8, #1
 8002f44:	e753      	b.n	8002dee <HAL_SPI_Transmit+0x32>
 8002f46:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002f48:	b292      	uxth	r2, r2
 8002f4a:	2a01      	cmp	r2, #1
 8002f4c:	d1b1      	bne.n	8002eb2 <HAL_SPI_Transmit+0xf6>
 8002f4e:	e7a9      	b.n	8002ea4 <HAL_SPI_Transmit+0xe8>
 8002f50:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8002f52:	2220      	movs	r2, #32
 8002f54:	4313      	orrs	r3, r2
 8002f56:	6563      	str	r3, [r4, #84]	@ 0x54
 8002f58:	6562      	str	r2, [r4, #84]	@ 0x54
 8002f5a:	e748      	b.n	8002dee <HAL_SPI_Transmit+0x32>

08002f5c <HAL_SPI_TransmitReceive>:
 8002f5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002f60:	4616      	mov	r6, r2
 8002f62:	f890 2050 	ldrb.w	r2, [r0, #80]	@ 0x50
 8002f66:	b085      	sub	sp, #20
 8002f68:	2a01      	cmp	r2, #1
 8002f6a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8002f6c:	f000 8098 	beq.w	80030a0 <HAL_SPI_TransmitReceive+0x144>
 8002f70:	4604      	mov	r4, r0
 8002f72:	4699      	mov	r9, r3
 8002f74:	2301      	movs	r3, #1
 8002f76:	f880 3050 	strb.w	r3, [r0, #80]	@ 0x50
 8002f7a:	460d      	mov	r5, r1
 8002f7c:	f002 ff2e 	bl	8005ddc <HAL_GetTick>
 8002f80:	f894 2051 	ldrb.w	r2, [r4, #81]	@ 0x51
 8002f84:	6861      	ldr	r1, [r4, #4]
 8002f86:	2a01      	cmp	r2, #1
 8002f88:	4680      	mov	r8, r0
 8002f8a:	b2d3      	uxtb	r3, r2
 8002f8c:	d011      	beq.n	8002fb2 <HAL_SPI_TransmitReceive+0x56>
 8002f8e:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8002f92:	d009      	beq.n	8002fa8 <HAL_SPI_TransmitReceive+0x4c>
 8002f94:	2002      	movs	r0, #2
 8002f96:	2201      	movs	r2, #1
 8002f98:	2300      	movs	r3, #0
 8002f9a:	f884 2051 	strb.w	r2, [r4, #81]	@ 0x51
 8002f9e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 8002fa2:	b005      	add	sp, #20
 8002fa4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002fa8:	68a2      	ldr	r2, [r4, #8]
 8002faa:	2a00      	cmp	r2, #0
 8002fac:	d1f2      	bne.n	8002f94 <HAL_SPI_TransmitReceive+0x38>
 8002fae:	2b04      	cmp	r3, #4
 8002fb0:	d1f0      	bne.n	8002f94 <HAL_SPI_TransmitReceive+0x38>
 8002fb2:	2d00      	cmp	r5, #0
 8002fb4:	d07d      	beq.n	80030b2 <HAL_SPI_TransmitReceive+0x156>
 8002fb6:	2e00      	cmp	r6, #0
 8002fb8:	d07b      	beq.n	80030b2 <HAL_SPI_TransmitReceive+0x156>
 8002fba:	f1b9 0f00 	cmp.w	r9, #0
 8002fbe:	d078      	beq.n	80030b2 <HAL_SPI_TransmitReceive+0x156>
 8002fc0:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8002fc4:	63a6      	str	r6, [r4, #56]	@ 0x38
 8002fc6:	2b01      	cmp	r3, #1
 8002fc8:	bf04      	itt	eq
 8002fca:	2305      	moveq	r3, #5
 8002fcc:	f884 3051 	strbeq.w	r3, [r4, #81]	@ 0x51
 8002fd0:	2300      	movs	r3, #0
 8002fd2:	6563      	str	r3, [r4, #84]	@ 0x54
 8002fd4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
 8002fd8:	6823      	ldr	r3, [r4, #0]
 8002fda:	f8a4 903e 	strh.w	r9, [r4, #62]	@ 0x3e
 8002fde:	f8a4 9036 	strh.w	r9, [r4, #54]	@ 0x36
 8002fe2:	681a      	ldr	r2, [r3, #0]
 8002fe4:	f8a4 903c 	strh.w	r9, [r4, #60]	@ 0x3c
 8002fe8:	0650      	lsls	r0, r2, #25
 8002fea:	6325      	str	r5, [r4, #48]	@ 0x30
 8002fec:	f8a4 9034 	strh.w	r9, [r4, #52]	@ 0x34
 8002ff0:	d403      	bmi.n	8002ffa <HAL_SPI_TransmitReceive+0x9e>
 8002ff2:	681a      	ldr	r2, [r3, #0]
 8002ff4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002ff8:	601a      	str	r2, [r3, #0]
 8002ffa:	68e2      	ldr	r2, [r4, #12]
 8002ffc:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
 8003000:	d059      	beq.n	80030b6 <HAL_SPI_TransmitReceive+0x15a>
 8003002:	2900      	cmp	r1, #0
 8003004:	f000 808b 	beq.w	800311e <HAL_SPI_TransmitReceive+0x1c2>
 8003008:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800300a:	b292      	uxth	r2, r2
 800300c:	2a01      	cmp	r2, #1
 800300e:	f000 8086 	beq.w	800311e <HAL_SPI_TransmitReceive+0x1c2>
 8003012:	f04f 0901 	mov.w	r9, #1
 8003016:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8003018:	b29b      	uxth	r3, r3
 800301a:	b91b      	cbnz	r3, 8003024 <HAL_SPI_TransmitReceive+0xc8>
 800301c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800301e:	b29b      	uxth	r3, r3
 8003020:	2b00      	cmp	r3, #0
 8003022:	d05c      	beq.n	80030de <HAL_SPI_TransmitReceive+0x182>
 8003024:	f1b9 0f00 	cmp.w	r9, #0
 8003028:	d11b      	bne.n	8003062 <HAL_SPI_TransmitReceive+0x106>
 800302a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800302c:	b29b      	uxth	r3, r3
 800302e:	2b00      	cmp	r3, #0
 8003030:	d02c      	beq.n	800308c <HAL_SPI_TransmitReceive+0x130>
 8003032:	6820      	ldr	r0, [r4, #0]
 8003034:	6882      	ldr	r2, [r0, #8]
 8003036:	f012 0201 	ands.w	r2, r2, #1
 800303a:	4631      	mov	r1, r6
 800303c:	d026      	beq.n	800308c <HAL_SPI_TransmitReceive+0x130>
 800303e:	68c3      	ldr	r3, [r0, #12]
 8003040:	f801 3b01 	strb.w	r3, [r1], #1
 8003044:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8003046:	3b01      	subs	r3, #1
 8003048:	b29b      	uxth	r3, r3
 800304a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800304c:	1c7b      	adds	r3, r7, #1
 800304e:	d171      	bne.n	8003134 <HAL_SPI_TransmitReceive+0x1d8>
 8003050:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8003052:	b29b      	uxth	r3, r3
 8003054:	2b00      	cmp	r3, #0
 8003056:	d170      	bne.n	800313a <HAL_SPI_TransmitReceive+0x1de>
 8003058:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800305a:	b29b      	uxth	r3, r3
 800305c:	2b00      	cmp	r3, #0
 800305e:	d03e      	beq.n	80030de <HAL_SPI_TransmitReceive+0x182>
 8003060:	460e      	mov	r6, r1
 8003062:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8003064:	b29b      	uxth	r3, r3
 8003066:	2b00      	cmp	r3, #0
 8003068:	d061      	beq.n	800312e <HAL_SPI_TransmitReceive+0x1d2>
 800306a:	6823      	ldr	r3, [r4, #0]
 800306c:	689a      	ldr	r2, [r3, #8]
 800306e:	0791      	lsls	r1, r2, #30
 8003070:	d55d      	bpl.n	800312e <HAL_SPI_TransmitReceive+0x1d2>
 8003072:	f815 2b01 	ldrb.w	r2, [r5], #1
 8003076:	731a      	strb	r2, [r3, #12]
 8003078:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800307a:	3b01      	subs	r3, #1
 800307c:	b29b      	uxth	r3, r3
 800307e:	86e3      	strh	r3, [r4, #54]	@ 0x36
 8003080:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8003082:	b29b      	uxth	r3, r3
 8003084:	f04f 0900 	mov.w	r9, #0
 8003088:	2b00      	cmp	r3, #0
 800308a:	d1d2      	bne.n	8003032 <HAL_SPI_TransmitReceive+0xd6>
 800308c:	1c7a      	adds	r2, r7, #1
 800308e:	d0c2      	beq.n	8003016 <HAL_SPI_TransmitReceive+0xba>
 8003090:	f002 fea4 	bl	8005ddc <HAL_GetTick>
 8003094:	eba0 0008 	sub.w	r0, r0, r8
 8003098:	42b8      	cmp	r0, r7
 800309a:	d3bc      	bcc.n	8003016 <HAL_SPI_TransmitReceive+0xba>
 800309c:	2003      	movs	r0, #3
 800309e:	e77a      	b.n	8002f96 <HAL_SPI_TransmitReceive+0x3a>
 80030a0:	2002      	movs	r0, #2
 80030a2:	b005      	add	sp, #20
 80030a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80030a8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80030aa:	2220      	movs	r2, #32
 80030ac:	4313      	orrs	r3, r2
 80030ae:	6563      	str	r3, [r4, #84]	@ 0x54
 80030b0:	6562      	str	r2, [r4, #84]	@ 0x54
 80030b2:	2001      	movs	r0, #1
 80030b4:	e76f      	b.n	8002f96 <HAL_SPI_TransmitReceive+0x3a>
 80030b6:	2900      	cmp	r1, #0
 80030b8:	f040 808f 	bne.w	80031da <HAL_SPI_TransmitReceive+0x27e>
 80030bc:	f835 2b02 	ldrh.w	r2, [r5], #2
 80030c0:	60da      	str	r2, [r3, #12]
 80030c2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80030c4:	3b01      	subs	r3, #1
 80030c6:	b29b      	uxth	r3, r3
 80030c8:	86e3      	strh	r3, [r4, #54]	@ 0x36
 80030ca:	f04f 0901 	mov.w	r9, #1
 80030ce:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80030d0:	b29b      	uxth	r3, r3
 80030d2:	2b00      	cmp	r3, #0
 80030d4:	d13e      	bne.n	8003154 <HAL_SPI_TransmitReceive+0x1f8>
 80030d6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80030d8:	b29b      	uxth	r3, r3
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d13a      	bne.n	8003154 <HAL_SPI_TransmitReceive+0x1f8>
 80030de:	f8cd 8000 	str.w	r8, [sp]
 80030e2:	463b      	mov	r3, r7
 80030e4:	2201      	movs	r2, #1
 80030e6:	2102      	movs	r1, #2
 80030e8:	4620      	mov	r0, r4
 80030ea:	f7ff fdb3 	bl	8002c54 <SPI_WaitFlagStateUntilTimeout>
 80030ee:	2800      	cmp	r0, #0
 80030f0:	d1d4      	bne.n	800309c <HAL_SPI_TransmitReceive+0x140>
 80030f2:	4602      	mov	r2, r0
 80030f4:	f8cd 8000 	str.w	r8, [sp]
 80030f8:	463b      	mov	r3, r7
 80030fa:	2180      	movs	r1, #128	@ 0x80
 80030fc:	4620      	mov	r0, r4
 80030fe:	f7ff fda9 	bl	8002c54 <SPI_WaitFlagStateUntilTimeout>
 8003102:	2800      	cmp	r0, #0
 8003104:	d1d0      	bne.n	80030a8 <HAL_SPI_TransmitReceive+0x14c>
 8003106:	68a3      	ldr	r3, [r4, #8]
 8003108:	2b00      	cmp	r3, #0
 800310a:	f47f af44 	bne.w	8002f96 <HAL_SPI_TransmitReceive+0x3a>
 800310e:	6823      	ldr	r3, [r4, #0]
 8003110:	9003      	str	r0, [sp, #12]
 8003112:	68da      	ldr	r2, [r3, #12]
 8003114:	9203      	str	r2, [sp, #12]
 8003116:	689b      	ldr	r3, [r3, #8]
 8003118:	9303      	str	r3, [sp, #12]
 800311a:	9b03      	ldr	r3, [sp, #12]
 800311c:	e73b      	b.n	8002f96 <HAL_SPI_TransmitReceive+0x3a>
 800311e:	f815 2b01 	ldrb.w	r2, [r5], #1
 8003122:	731a      	strb	r2, [r3, #12]
 8003124:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8003126:	3b01      	subs	r3, #1
 8003128:	b29b      	uxth	r3, r3
 800312a:	86e3      	strh	r3, [r4, #54]	@ 0x36
 800312c:	e771      	b.n	8003012 <HAL_SPI_TransmitReceive+0xb6>
 800312e:	f04f 0901 	mov.w	r9, #1
 8003132:	e77a      	b.n	800302a <HAL_SPI_TransmitReceive+0xce>
 8003134:	4691      	mov	r9, r2
 8003136:	460e      	mov	r6, r1
 8003138:	e7aa      	b.n	8003090 <HAL_SPI_TransmitReceive+0x134>
 800313a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800313c:	b29b      	uxth	r3, r3
 800313e:	b93b      	cbnz	r3, 8003150 <HAL_SPI_TransmitReceive+0x1f4>
 8003140:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8003142:	b29b      	uxth	r3, r3
 8003144:	460e      	mov	r6, r1
 8003146:	4691      	mov	r9, r2
 8003148:	2b00      	cmp	r3, #0
 800314a:	f47f af72 	bne.w	8003032 <HAL_SPI_TransmitReceive+0xd6>
 800314e:	e762      	b.n	8003016 <HAL_SPI_TransmitReceive+0xba>
 8003150:	460e      	mov	r6, r1
 8003152:	e78a      	b.n	800306a <HAL_SPI_TransmitReceive+0x10e>
 8003154:	f1b9 0f00 	cmp.w	r9, #0
 8003158:	d121      	bne.n	800319e <HAL_SPI_TransmitReceive+0x242>
 800315a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800315c:	b29b      	uxth	r3, r3
 800315e:	2b00      	cmp	r3, #0
 8003160:	d031      	beq.n	80031c6 <HAL_SPI_TransmitReceive+0x26a>
 8003162:	6823      	ldr	r3, [r4, #0]
 8003164:	6899      	ldr	r1, [r3, #8]
 8003166:	f011 0101 	ands.w	r1, r1, #1
 800316a:	d02c      	beq.n	80031c6 <HAL_SPI_TransmitReceive+0x26a>
 800316c:	68da      	ldr	r2, [r3, #12]
 800316e:	f826 2b02 	strh.w	r2, [r6], #2
 8003172:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8003174:	3a01      	subs	r2, #1
 8003176:	b292      	uxth	r2, r2
 8003178:	1c78      	adds	r0, r7, #1
 800317a:	87e2      	strh	r2, [r4, #62]	@ 0x3e
 800317c:	d136      	bne.n	80031ec <HAL_SPI_TransmitReceive+0x290>
 800317e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003180:	b292      	uxth	r2, r2
 8003182:	b142      	cbz	r2, 8003196 <HAL_SPI_TransmitReceive+0x23a>
 8003184:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003186:	b292      	uxth	r2, r2
 8003188:	b96a      	cbnz	r2, 80031a6 <HAL_SPI_TransmitReceive+0x24a>
 800318a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 800318c:	b292      	uxth	r2, r2
 800318e:	4689      	mov	r9, r1
 8003190:	2a00      	cmp	r2, #0
 8003192:	d1e7      	bne.n	8003164 <HAL_SPI_TransmitReceive+0x208>
 8003194:	e79b      	b.n	80030ce <HAL_SPI_TransmitReceive+0x172>
 8003196:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8003198:	b29b      	uxth	r3, r3
 800319a:	2b00      	cmp	r3, #0
 800319c:	d09f      	beq.n	80030de <HAL_SPI_TransmitReceive+0x182>
 800319e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80031a0:	b29b      	uxth	r3, r3
 80031a2:	b303      	cbz	r3, 80031e6 <HAL_SPI_TransmitReceive+0x28a>
 80031a4:	6823      	ldr	r3, [r4, #0]
 80031a6:	689a      	ldr	r2, [r3, #8]
 80031a8:	0792      	lsls	r2, r2, #30
 80031aa:	d51c      	bpl.n	80031e6 <HAL_SPI_TransmitReceive+0x28a>
 80031ac:	f835 2b02 	ldrh.w	r2, [r5], #2
 80031b0:	60da      	str	r2, [r3, #12]
 80031b2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80031b4:	3b01      	subs	r3, #1
 80031b6:	b29b      	uxth	r3, r3
 80031b8:	86e3      	strh	r3, [r4, #54]	@ 0x36
 80031ba:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80031bc:	b29b      	uxth	r3, r3
 80031be:	f04f 0900 	mov.w	r9, #0
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d1cd      	bne.n	8003162 <HAL_SPI_TransmitReceive+0x206>
 80031c6:	1c7b      	adds	r3, r7, #1
 80031c8:	d081      	beq.n	80030ce <HAL_SPI_TransmitReceive+0x172>
 80031ca:	f002 fe07 	bl	8005ddc <HAL_GetTick>
 80031ce:	eba0 0008 	sub.w	r0, r0, r8
 80031d2:	42b8      	cmp	r0, r7
 80031d4:	f4ff af7b 	bcc.w	80030ce <HAL_SPI_TransmitReceive+0x172>
 80031d8:	e760      	b.n	800309c <HAL_SPI_TransmitReceive+0x140>
 80031da:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80031dc:	b292      	uxth	r2, r2
 80031de:	2a01      	cmp	r2, #1
 80031e0:	f47f af73 	bne.w	80030ca <HAL_SPI_TransmitReceive+0x16e>
 80031e4:	e76a      	b.n	80030bc <HAL_SPI_TransmitReceive+0x160>
 80031e6:	f04f 0901 	mov.w	r9, #1
 80031ea:	e7b6      	b.n	800315a <HAL_SPI_TransmitReceive+0x1fe>
 80031ec:	4689      	mov	r9, r1
 80031ee:	e7ec      	b.n	80031ca <HAL_SPI_TransmitReceive+0x26e>

080031f0 <HAL_SPI_TransmitReceive_DMA>:
 80031f0:	b538      	push	{r3, r4, r5, lr}
 80031f2:	4604      	mov	r4, r0
 80031f4:	f890 0050 	ldrb.w	r0, [r0, #80]	@ 0x50
 80031f8:	2801      	cmp	r0, #1
 80031fa:	d067      	beq.n	80032cc <HAL_SPI_TransmitReceive_DMA+0xdc>
 80031fc:	2001      	movs	r0, #1
 80031fe:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
 8003202:	f894 0051 	ldrb.w	r0, [r4, #81]	@ 0x51
 8003206:	2801      	cmp	r0, #1
 8003208:	fa5f fc80 	uxtb.w	ip, r0
 800320c:	d00e      	beq.n	800322c <HAL_SPI_TransmitReceive_DMA+0x3c>
 800320e:	6860      	ldr	r0, [r4, #4]
 8003210:	f5b0 7f82 	cmp.w	r0, #260	@ 0x104
 8003214:	d004      	beq.n	8003220 <HAL_SPI_TransmitReceive_DMA+0x30>
 8003216:	2002      	movs	r0, #2
 8003218:	2300      	movs	r3, #0
 800321a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
 800321e:	bd38      	pop	{r3, r4, r5, pc}
 8003220:	68a0      	ldr	r0, [r4, #8]
 8003222:	2800      	cmp	r0, #0
 8003224:	d1f7      	bne.n	8003216 <HAL_SPI_TransmitReceive_DMA+0x26>
 8003226:	f1bc 0f04 	cmp.w	ip, #4
 800322a:	d1f4      	bne.n	8003216 <HAL_SPI_TransmitReceive_DMA+0x26>
 800322c:	2900      	cmp	r1, #0
 800322e:	d04b      	beq.n	80032c8 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8003230:	2a00      	cmp	r2, #0
 8003232:	d049      	beq.n	80032c8 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8003234:	2b00      	cmp	r3, #0
 8003236:	d047      	beq.n	80032c8 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8003238:	f894 0051 	ldrb.w	r0, [r4, #81]	@ 0x51
 800323c:	6321      	str	r1, [r4, #48]	@ 0x30
 800323e:	2801      	cmp	r0, #1
 8003240:	bf04      	itt	eq
 8003242:	2005      	moveq	r0, #5
 8003244:	f884 0051 	strbeq.w	r0, [r4, #81]	@ 0x51
 8003248:	2000      	movs	r0, #0
 800324a:	6560      	str	r0, [r4, #84]	@ 0x54
 800324c:	86e3      	strh	r3, [r4, #54]	@ 0x36
 800324e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8003250:	f894 1051 	ldrb.w	r1, [r4, #81]	@ 0x51
 8003254:	86a3      	strh	r3, [r4, #52]	@ 0x34
 8003256:	2904      	cmp	r1, #4
 8003258:	e9c4 0010 	strd	r0, r0, [r4, #64]	@ 0x40
 800325c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800325e:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 8003260:	bf19      	ittee	ne
 8003262:	491b      	ldrne	r1, [pc, #108]	@ (80032d0 <HAL_SPI_TransmitReceive_DMA+0xe0>)
 8003264:	4b1b      	ldrne	r3, [pc, #108]	@ (80032d4 <HAL_SPI_TransmitReceive_DMA+0xe4>)
 8003266:	4b1c      	ldreq	r3, [pc, #112]	@ (80032d8 <HAL_SPI_TransmitReceive_DMA+0xe8>)
 8003268:	491c      	ldreq	r1, [pc, #112]	@ (80032dc <HAL_SPI_TransmitReceive_DMA+0xec>)
 800326a:	63a2      	str	r2, [r4, #56]	@ 0x38
 800326c:	4d1c      	ldr	r5, [pc, #112]	@ (80032e0 <HAL_SPI_TransmitReceive_DMA+0xf0>)
 800326e:	6403      	str	r3, [r0, #64]	@ 0x40
 8003270:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8003272:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8003274:	6821      	ldr	r1, [r4, #0]
 8003276:	64c5      	str	r5, [r0, #76]	@ 0x4c
 8003278:	2500      	movs	r5, #0
 800327a:	b29b      	uxth	r3, r3
 800327c:	310c      	adds	r1, #12
 800327e:	6505      	str	r5, [r0, #80]	@ 0x50
 8003280:	f001 f97a 	bl	8004578 <HAL_DMA_Start_IT>
 8003284:	6822      	ldr	r2, [r4, #0]
 8003286:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8003288:	6853      	ldr	r3, [r2, #4]
 800328a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800328c:	f043 0301 	orr.w	r3, r3, #1
 8003290:	6053      	str	r3, [r2, #4]
 8003292:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8003294:	320c      	adds	r2, #12
 8003296:	b29b      	uxth	r3, r3
 8003298:	e9c0 550f 	strd	r5, r5, [r0, #60]	@ 0x3c
 800329c:	e9c0 5513 	strd	r5, r5, [r0, #76]	@ 0x4c
 80032a0:	f001 f96a 	bl	8004578 <HAL_DMA_Start_IT>
 80032a4:	6823      	ldr	r3, [r4, #0]
 80032a6:	681a      	ldr	r2, [r3, #0]
 80032a8:	0652      	lsls	r2, r2, #25
 80032aa:	d403      	bmi.n	80032b4 <HAL_SPI_TransmitReceive_DMA+0xc4>
 80032ac:	681a      	ldr	r2, [r3, #0]
 80032ae:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80032b2:	601a      	str	r2, [r3, #0]
 80032b4:	685a      	ldr	r2, [r3, #4]
 80032b6:	f042 0220 	orr.w	r2, r2, #32
 80032ba:	605a      	str	r2, [r3, #4]
 80032bc:	685a      	ldr	r2, [r3, #4]
 80032be:	f042 0202 	orr.w	r2, r2, #2
 80032c2:	2000      	movs	r0, #0
 80032c4:	605a      	str	r2, [r3, #4]
 80032c6:	e7a7      	b.n	8003218 <HAL_SPI_TransmitReceive_DMA+0x28>
 80032c8:	2001      	movs	r0, #1
 80032ca:	e7a5      	b.n	8003218 <HAL_SPI_TransmitReceive_DMA+0x28>
 80032cc:	2002      	movs	r0, #2
 80032ce:	bd38      	pop	{r3, r4, r5, pc}
 80032d0:	08003381 	.word	0x08003381
 80032d4:	080032fd 	.word	0x080032fd
 80032d8:	080032ed 	.word	0x080032ed
 80032dc:	08003331 	.word	0x08003331
 80032e0:	0800330d 	.word	0x0800330d

080032e4 <HAL_SPI_RxCpltCallback>:
 80032e4:	4770      	bx	lr
 80032e6:	bf00      	nop

080032e8 <HAL_SPI_RxHalfCpltCallback>:
 80032e8:	4770      	bx	lr
 80032ea:	bf00      	nop

080032ec <SPI_DMAHalfReceiveCplt>:
 80032ec:	b508      	push	{r3, lr}
 80032ee:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80032f0:	f7ff fffa 	bl	80032e8 <HAL_SPI_RxHalfCpltCallback>
 80032f4:	bd08      	pop	{r3, pc}
 80032f6:	bf00      	nop

080032f8 <HAL_SPI_TxRxHalfCpltCallback>:
 80032f8:	4770      	bx	lr
 80032fa:	bf00      	nop

080032fc <SPI_DMAHalfTransmitReceiveCplt>:
 80032fc:	b508      	push	{r3, lr}
 80032fe:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8003300:	f7ff fffa 	bl	80032f8 <HAL_SPI_TxRxHalfCpltCallback>
 8003304:	bd08      	pop	{r3, pc}
 8003306:	bf00      	nop

08003308 <HAL_SPI_ErrorCallback>:
 8003308:	4770      	bx	lr
 800330a:	bf00      	nop

0800330c <SPI_DMAError>:
 800330c:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800330e:	6802      	ldr	r2, [r0, #0]
 8003310:	b508      	push	{r3, lr}
 8003312:	6853      	ldr	r3, [r2, #4]
 8003314:	f023 0303 	bic.w	r3, r3, #3
 8003318:	6053      	str	r3, [r2, #4]
 800331a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800331c:	2101      	movs	r1, #1
 800331e:	f043 0310 	orr.w	r3, r3, #16
 8003322:	6543      	str	r3, [r0, #84]	@ 0x54
 8003324:	f880 1051 	strb.w	r1, [r0, #81]	@ 0x51
 8003328:	f7ff ffee 	bl	8003308 <HAL_SPI_ErrorCallback>
 800332c:	bd08      	pop	{r3, pc}
 800332e:	bf00      	nop

08003330 <SPI_DMAReceiveCplt>:
 8003330:	b508      	push	{r3, lr}
 8003332:	6803      	ldr	r3, [r0, #0]
 8003334:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	05db      	lsls	r3, r3, #23
 800333a:	d40f      	bmi.n	800335c <SPI_DMAReceiveCplt+0x2c>
 800333c:	e9d0 2100 	ldrd	r2, r1, [r0]
 8003340:	6853      	ldr	r3, [r2, #4]
 8003342:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
 8003346:	f023 0303 	bic.w	r3, r3, #3
 800334a:	6053      	str	r3, [r2, #4]
 800334c:	d009      	beq.n	8003362 <SPI_DMAReceiveCplt+0x32>
 800334e:	2301      	movs	r3, #1
 8003350:	2200      	movs	r2, #0
 8003352:	87c2      	strh	r2, [r0, #62]	@ 0x3e
 8003354:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
 8003358:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 800335a:	b973      	cbnz	r3, 800337a <SPI_DMAReceiveCplt+0x4a>
 800335c:	f7ff ffc2 	bl	80032e4 <HAL_SPI_RxCpltCallback>
 8003360:	bd08      	pop	{r3, pc}
 8003362:	6883      	ldr	r3, [r0, #8]
 8003364:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003368:	d002      	beq.n	8003370 <SPI_DMAReceiveCplt+0x40>
 800336a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800336e:	d1ee      	bne.n	800334e <SPI_DMAReceiveCplt+0x1e>
 8003370:	6813      	ldr	r3, [r2, #0]
 8003372:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003376:	6013      	str	r3, [r2, #0]
 8003378:	e7e9      	b.n	800334e <SPI_DMAReceiveCplt+0x1e>
 800337a:	f7ff ffc5 	bl	8003308 <HAL_SPI_ErrorCallback>
 800337e:	bd08      	pop	{r3, pc}

08003380 <SPI_DMATransmitReceiveCplt>:
 8003380:	b530      	push	{r4, r5, lr}
 8003382:	4605      	mov	r5, r0
 8003384:	b083      	sub	sp, #12
 8003386:	6b84      	ldr	r4, [r0, #56]	@ 0x38
 8003388:	f002 fd28 	bl	8005ddc <HAL_GetTick>
 800338c:	682b      	ldr	r3, [r5, #0]
 800338e:	681a      	ldr	r2, [r3, #0]
 8003390:	f412 7280 	ands.w	r2, r2, #256	@ 0x100
 8003394:	d113      	bne.n	80033be <SPI_DMATransmitReceiveCplt+0x3e>
 8003396:	9000      	str	r0, [sp, #0]
 8003398:	2364      	movs	r3, #100	@ 0x64
 800339a:	2180      	movs	r1, #128	@ 0x80
 800339c:	4620      	mov	r0, r4
 800339e:	f7ff fc59 	bl	8002c54 <SPI_WaitFlagStateUntilTimeout>
 80033a2:	b988      	cbnz	r0, 80033c8 <SPI_DMATransmitReceiveCplt+0x48>
 80033a4:	6821      	ldr	r1, [r4, #0]
 80033a6:	684b      	ldr	r3, [r1, #4]
 80033a8:	2200      	movs	r2, #0
 80033aa:	f023 0303 	bic.w	r3, r3, #3
 80033ae:	2001      	movs	r0, #1
 80033b0:	604b      	str	r3, [r1, #4]
 80033b2:	86e2      	strh	r2, [r4, #54]	@ 0x36
 80033b4:	87e2      	strh	r2, [r4, #62]	@ 0x3e
 80033b6:	f884 0051 	strb.w	r0, [r4, #81]	@ 0x51
 80033ba:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80033bc:	b96b      	cbnz	r3, 80033da <SPI_DMATransmitReceiveCplt+0x5a>
 80033be:	4620      	mov	r0, r4
 80033c0:	f009 fada 	bl	800c978 <HAL_SPI_TxRxCpltCallback>
 80033c4:	b003      	add	sp, #12
 80033c6:	bd30      	pop	{r4, r5, pc}
 80033c8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80033ca:	f043 0320 	orr.w	r3, r3, #32
 80033ce:	6563      	str	r3, [r4, #84]	@ 0x54
 80033d0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80033d2:	f043 0320 	orr.w	r3, r3, #32
 80033d6:	6563      	str	r3, [r4, #84]	@ 0x54
 80033d8:	e7e4      	b.n	80033a4 <SPI_DMATransmitReceiveCplt+0x24>
 80033da:	4620      	mov	r0, r4
 80033dc:	f7ff ff94 	bl	8003308 <HAL_SPI_ErrorCallback>
 80033e0:	b003      	add	sp, #12
 80033e2:	bd30      	pop	{r4, r5, pc}

080033e4 <HAL_SPI_IRQHandler>:
 80033e4:	6802      	ldr	r2, [r0, #0]
 80033e6:	b510      	push	{r4, lr}
 80033e8:	6851      	ldr	r1, [r2, #4]
 80033ea:	6893      	ldr	r3, [r2, #8]
 80033ec:	f003 0c41 	and.w	ip, r3, #65	@ 0x41
 80033f0:	f1bc 0f01 	cmp.w	ip, #1
 80033f4:	b084      	sub	sp, #16
 80033f6:	4604      	mov	r4, r0
 80033f8:	d05a      	beq.n	80034b0 <HAL_SPI_IRQHandler+0xcc>
 80033fa:	0798      	lsls	r0, r3, #30
 80033fc:	d501      	bpl.n	8003402 <HAL_SPI_IRQHandler+0x1e>
 80033fe:	0608      	lsls	r0, r1, #24
 8003400:	d45e      	bmi.n	80034c0 <HAL_SPI_IRQHandler+0xdc>
 8003402:	f413 7fb0 	tst.w	r3, #352	@ 0x160
 8003406:	d051      	beq.n	80034ac <HAL_SPI_IRQHandler+0xc8>
 8003408:	0688      	lsls	r0, r1, #26
 800340a:	d54f      	bpl.n	80034ac <HAL_SPI_IRQHandler+0xc8>
 800340c:	0658      	lsls	r0, r3, #25
 800340e:	d50e      	bpl.n	800342e <HAL_SPI_IRQHandler+0x4a>
 8003410:	f894 0051 	ldrb.w	r0, [r4, #81]	@ 0x51
 8003414:	2803      	cmp	r0, #3
 8003416:	d042      	beq.n	800349e <HAL_SPI_IRQHandler+0xba>
 8003418:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800341a:	f040 0004 	orr.w	r0, r0, #4
 800341e:	6560      	str	r0, [r4, #84]	@ 0x54
 8003420:	2000      	movs	r0, #0
 8003422:	9000      	str	r0, [sp, #0]
 8003424:	68d0      	ldr	r0, [r2, #12]
 8003426:	9000      	str	r0, [sp, #0]
 8003428:	6890      	ldr	r0, [r2, #8]
 800342a:	9000      	str	r0, [sp, #0]
 800342c:	9800      	ldr	r0, [sp, #0]
 800342e:	0698      	lsls	r0, r3, #26
 8003430:	d50c      	bpl.n	800344c <HAL_SPI_IRQHandler+0x68>
 8003432:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8003434:	f040 0001 	orr.w	r0, r0, #1
 8003438:	6560      	str	r0, [r4, #84]	@ 0x54
 800343a:	2000      	movs	r0, #0
 800343c:	9002      	str	r0, [sp, #8]
 800343e:	6890      	ldr	r0, [r2, #8]
 8003440:	9002      	str	r0, [sp, #8]
 8003442:	6810      	ldr	r0, [r2, #0]
 8003444:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8003448:	6010      	str	r0, [r2, #0]
 800344a:	9802      	ldr	r0, [sp, #8]
 800344c:	05d8      	lsls	r0, r3, #23
 800344e:	d508      	bpl.n	8003462 <HAL_SPI_IRQHandler+0x7e>
 8003450:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8003452:	2000      	movs	r0, #0
 8003454:	f043 0308 	orr.w	r3, r3, #8
 8003458:	6563      	str	r3, [r4, #84]	@ 0x54
 800345a:	9003      	str	r0, [sp, #12]
 800345c:	6893      	ldr	r3, [r2, #8]
 800345e:	9303      	str	r3, [sp, #12]
 8003460:	9b03      	ldr	r3, [sp, #12]
 8003462:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8003464:	b313      	cbz	r3, 80034ac <HAL_SPI_IRQHandler+0xc8>
 8003466:	6853      	ldr	r3, [r2, #4]
 8003468:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 800346c:	6053      	str	r3, [r2, #4]
 800346e:	2001      	movs	r0, #1
 8003470:	078b      	lsls	r3, r1, #30
 8003472:	f884 0051 	strb.w	r0, [r4, #81]	@ 0x51
 8003476:	d029      	beq.n	80034cc <HAL_SPI_IRQHandler+0xe8>
 8003478:	6853      	ldr	r3, [r2, #4]
 800347a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800347c:	f023 0303 	bic.w	r3, r3, #3
 8003480:	6053      	str	r3, [r2, #4]
 8003482:	b118      	cbz	r0, 800348c <HAL_SPI_IRQHandler+0xa8>
 8003484:	4b13      	ldr	r3, [pc, #76]	@ (80034d4 <HAL_SPI_IRQHandler+0xf0>)
 8003486:	6503      	str	r3, [r0, #80]	@ 0x50
 8003488:	f001 f8fe 	bl	8004688 <HAL_DMA_Abort_IT>
 800348c:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 800348e:	b168      	cbz	r0, 80034ac <HAL_SPI_IRQHandler+0xc8>
 8003490:	4b10      	ldr	r3, [pc, #64]	@ (80034d4 <HAL_SPI_IRQHandler+0xf0>)
 8003492:	6503      	str	r3, [r0, #80]	@ 0x50
 8003494:	b004      	add	sp, #16
 8003496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800349a:	f001 b8f5 	b.w	8004688 <HAL_DMA_Abort_IT>
 800349e:	2300      	movs	r3, #0
 80034a0:	9301      	str	r3, [sp, #4]
 80034a2:	68d3      	ldr	r3, [r2, #12]
 80034a4:	9301      	str	r3, [sp, #4]
 80034a6:	6893      	ldr	r3, [r2, #8]
 80034a8:	9301      	str	r3, [sp, #4]
 80034aa:	9b01      	ldr	r3, [sp, #4]
 80034ac:	b004      	add	sp, #16
 80034ae:	bd10      	pop	{r4, pc}
 80034b0:	f011 0f40 	tst.w	r1, #64	@ 0x40
 80034b4:	d0a1      	beq.n	80033fa <HAL_SPI_IRQHandler+0x16>
 80034b6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80034b8:	b004      	add	sp, #16
 80034ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034be:	4718      	bx	r3
 80034c0:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80034c2:	4620      	mov	r0, r4
 80034c4:	b004      	add	sp, #16
 80034c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034ca:	4718      	bx	r3
 80034cc:	4620      	mov	r0, r4
 80034ce:	f7ff ff1b 	bl	8003308 <HAL_SPI_ErrorCallback>
 80034d2:	e7eb      	b.n	80034ac <HAL_SPI_IRQHandler+0xc8>
 80034d4:	080034d9 	.word	0x080034d9

080034d8 <SPI_DMAAbortOnError>:
 80034d8:	b508      	push	{r3, lr}
 80034da:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80034dc:	2300      	movs	r3, #0
 80034de:	87c3      	strh	r3, [r0, #62]	@ 0x3e
 80034e0:	86c3      	strh	r3, [r0, #54]	@ 0x36
 80034e2:	f7ff ff11 	bl	8003308 <HAL_SPI_ErrorCallback>
 80034e6:	bd08      	pop	{r3, pc}

080034e8 <usb_deferred_interrupt_thread>:
 80034e8:	b510      	push	{r4, lr}
 80034ea:	4c07      	ldr	r4, [pc, #28]	@ (8003508 <usb_deferred_interrupt_thread+0x20>)
 80034ec:	6820      	ldr	r0, [r4, #0]
 80034ee:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80034f2:	f004 fb05 	bl	8007b00 <osSemaphoreWait>
 80034f6:	2800      	cmp	r0, #0
 80034f8:	d1f8      	bne.n	80034ec <usb_deferred_interrupt_thread+0x4>
 80034fa:	4804      	ldr	r0, [pc, #16]	@ (800350c <usb_deferred_interrupt_thread+0x24>)
 80034fc:	f001 fb94 	bl	8004c28 <HAL_PCD_IRQHandler>
 8003500:	2043      	movs	r0, #67	@ 0x43
 8003502:	f7fd fd8d 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8003506:	e7f1      	b.n	80034ec <usb_deferred_interrupt_thread+0x4>
 8003508:	2000080c 	.word	0x2000080c
 800350c:	20000810 	.word	0x20000810

08003510 <StartDefaultTask>:
 8003510:	b508      	push	{r3, lr}
 8003512:	f002 fee9 	bl	80062e8 <MX_USB_DEVICE_Init>
 8003516:	f00d febd 	bl	8011294 <odrive_main>
 800351a:	4b03      	ldr	r3, [pc, #12]	@ (8003528 <StartDefaultTask+0x18>)
 800351c:	6818      	ldr	r0, [r3, #0]
 800351e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003522:	f005 b89b 	b.w	800865c <vTaskDelete>
 8003526:	bf00      	nop
 8003528:	200007f4 	.word	0x200007f4

0800352c <MX_FREERTOS_Init>:
 800352c:	b530      	push	{r4, r5, lr}
 800352e:	b08b      	sub	sp, #44	@ 0x2c
 8003530:	2400      	movs	r4, #0
 8003532:	2101      	movs	r1, #1
 8003534:	4668      	mov	r0, sp
 8003536:	9400      	str	r4, [sp, #0]
 8003538:	f004 facc 	bl	8007ad4 <osSemaphoreCreate>
 800353c:	4b27      	ldr	r3, [pc, #156]	@ (80035dc <MX_FREERTOS_Init+0xb0>)
 800353e:	4d28      	ldr	r5, [pc, #160]	@ (80035e0 <MX_FREERTOS_Init+0xb4>)
 8003540:	6018      	str	r0, [r3, #0]
 8003542:	4621      	mov	r1, r4
 8003544:	f004 fadc 	bl	8007b00 <osSemaphoreWait>
 8003548:	2101      	movs	r1, #1
 800354a:	a801      	add	r0, sp, #4
 800354c:	9401      	str	r4, [sp, #4]
 800354e:	f004 fac1 	bl	8007ad4 <osSemaphoreCreate>
 8003552:	4b24      	ldr	r3, [pc, #144]	@ (80035e4 <MX_FREERTOS_Init+0xb8>)
 8003554:	9402      	str	r4, [sp, #8]
 8003556:	4602      	mov	r2, r0
 8003558:	2101      	movs	r1, #1
 800355a:	a802      	add	r0, sp, #8
 800355c:	601a      	str	r2, [r3, #0]
 800355e:	f004 fab9 	bl	8007ad4 <osSemaphoreCreate>
 8003562:	4b21      	ldr	r3, [pc, #132]	@ (80035e8 <MX_FREERTOS_Init+0xbc>)
 8003564:	4621      	mov	r1, r4
 8003566:	6018      	str	r0, [r3, #0]
 8003568:	f004 faca 	bl	8007b00 <osSemaphoreWait>
 800356c:	2101      	movs	r1, #1
 800356e:	a803      	add	r0, sp, #12
 8003570:	9403      	str	r4, [sp, #12]
 8003572:	f004 faaf 	bl	8007ad4 <osSemaphoreCreate>
 8003576:	4b1d      	ldr	r3, [pc, #116]	@ (80035ec <MX_FREERTOS_Init+0xc0>)
 8003578:	9404      	str	r4, [sp, #16]
 800357a:	4602      	mov	r2, r0
 800357c:	2101      	movs	r1, #1
 800357e:	a804      	add	r0, sp, #16
 8003580:	601a      	str	r2, [r3, #0]
 8003582:	f004 faa7 	bl	8007ad4 <osSemaphoreCreate>
 8003586:	4b1a      	ldr	r3, [pc, #104]	@ (80035f0 <MX_FREERTOS_Init+0xc4>)
 8003588:	4621      	mov	r1, r4
 800358a:	6018      	str	r0, [r3, #0]
 800358c:	f004 fab8 	bl	8007b00 <osSemaphoreWait>
 8003590:	46ae      	mov	lr, r5
 8003592:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8003596:	f10d 0c14 	add.w	ip, sp, #20
 800359a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800359e:	f8de 3000 	ldr.w	r3, [lr]
 80035a2:	f8cc 3000 	str.w	r3, [ip]
 80035a6:	4621      	mov	r1, r4
 80035a8:	a805      	add	r0, sp, #20
 80035aa:	f004 fa21 	bl	80079f0 <osThreadCreate>
 80035ae:	4b11      	ldr	r3, [pc, #68]	@ (80035f4 <MX_FREERTOS_Init+0xc8>)
 80035b0:	6018      	str	r0, [r3, #0]
 80035b2:	f00e fadd 	bl	8011b70 <load_configuration>
 80035b6:	f00d fc3d 	bl	8010e34 <construct_objects>
 80035ba:	f105 0c14 	add.w	ip, r5, #20
 80035be:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80035c2:	ad05      	add	r5, sp, #20
 80035c4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80035c6:	f8dc 3000 	ldr.w	r3, [ip]
 80035ca:	602b      	str	r3, [r5, #0]
 80035cc:	4621      	mov	r1, r4
 80035ce:	a805      	add	r0, sp, #20
 80035d0:	f004 fa0e 	bl	80079f0 <osThreadCreate>
 80035d4:	4b08      	ldr	r3, [pc, #32]	@ (80035f8 <MX_FREERTOS_Init+0xcc>)
 80035d6:	6018      	str	r0, [r3, #0]
 80035d8:	b00b      	add	sp, #44	@ 0x2c
 80035da:	bd30      	pop	{r4, r5, pc}
 80035dc:	2000080c 	.word	0x2000080c
 80035e0:	080294c8 	.word	0x080294c8
 80035e4:	20000808 	.word	0x20000808
 80035e8:	20000804 	.word	0x20000804
 80035ec:	20000800 	.word	0x20000800
 80035f0:	200007fc 	.word	0x200007fc
 80035f4:	200007f8 	.word	0x200007f8
 80035f8:	200007f4 	.word	0x200007f4

080035fc <early_start_checks>:
 80035fc:	b510      	push	{r4, lr}
 80035fe:	4c14      	ldr	r4, [pc, #80]	@ (8003650 <early_start_checks+0x54>)
 8003600:	4a14      	ldr	r2, [pc, #80]	@ (8003654 <early_start_checks+0x58>)
 8003602:	6823      	ldr	r3, [r4, #0]
 8003604:	4293      	cmp	r3, r2
 8003606:	d005      	beq.n	8003614 <early_start_checks+0x18>
 8003608:	4a13      	ldr	r2, [pc, #76]	@ (8003658 <early_start_checks+0x5c>)
 800360a:	4293      	cmp	r3, r2
 800360c:	d006      	beq.n	800361c <early_start_checks+0x20>
 800360e:	2b2a      	cmp	r3, #42	@ 0x2a
 8003610:	d10e      	bne.n	8003630 <early_start_checks+0x34>
 8003612:	bd10      	pop	{r4, pc}
 8003614:	4b11      	ldr	r3, [pc, #68]	@ (800365c <early_start_checks+0x60>)
 8003616:	bf00      	nop
 8003618:	3b01      	subs	r3, #1
 800361a:	d1fc      	bne.n	8003616 <early_start_checks+0x1a>
 800361c:	4b10      	ldr	r3, [pc, #64]	@ (8003660 <early_start_checks+0x64>)
 800361e:	6023      	str	r3, [r4, #0]
 8003620:	4b10      	ldr	r3, [pc, #64]	@ (8003664 <early_start_checks+0x68>)
 8003622:	f383 8808 	msr	MSP, r3
 8003626:	4b10      	ldr	r3, [pc, #64]	@ (8003668 <early_start_checks+0x6c>)
 8003628:	685b      	ldr	r3, [r3, #4]
 800362a:	4798      	blx	r3
 800362c:	6823      	ldr	r3, [r4, #0]
 800362e:	e7ee      	b.n	800360e <early_start_checks+0x12>
 8003630:	232a      	movs	r3, #42	@ 0x2a
 8003632:	6023      	str	r3, [r4, #0]
 8003634:	f3bf 8f4f 	dsb	sy
 8003638:	490c      	ldr	r1, [pc, #48]	@ (800366c <early_start_checks+0x70>)
 800363a:	4b0d      	ldr	r3, [pc, #52]	@ (8003670 <early_start_checks+0x74>)
 800363c:	68ca      	ldr	r2, [r1, #12]
 800363e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8003642:	4313      	orrs	r3, r2
 8003644:	60cb      	str	r3, [r1, #12]
 8003646:	f3bf 8f4f 	dsb	sy
 800364a:	bf00      	nop
 800364c:	e7fd      	b.n	800364a <early_start_checks+0x4e>
 800364e:	bf00      	nop
 8003650:	2000d6cc 	.word	0x2000d6cc
 8003654:	deadfe75 	.word	0xdeadfe75
 8003658:	deadbeef 	.word	0xdeadbeef
 800365c:	0061a800 	.word	0x0061a800
 8003660:	cafefeed 	.word	0xcafefeed
 8003664:	20020000 	.word	0x20020000
 8003668:	1fff0000 	.word	0x1fff0000
 800366c:	e000ed00 	.word	0xe000ed00
 8003670:	05fa0004 	.word	0x05fa0004
 8003674:	00000000 	.word	0x00000000

08003678 <SystemClock_Config>:
 8003678:	b570      	push	{r4, r5, r6, lr}
 800367a:	b094      	sub	sp, #80	@ 0x50
 800367c:	4a2a      	ldr	r2, [pc, #168]	@ (8003728 <SystemClock_Config+0xb0>)
 800367e:	4b2b      	ldr	r3, [pc, #172]	@ (800372c <SystemClock_Config+0xb4>)
 8003680:	2000      	movs	r0, #0
 8003682:	9001      	str	r0, [sp, #4]
 8003684:	6c11      	ldr	r1, [r2, #64]	@ 0x40
 8003686:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800368a:	6411      	str	r1, [r2, #64]	@ 0x40
 800368c:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800368e:	f002 5280 	and.w	r2, r2, #268435456	@ 0x10000000
 8003692:	9201      	str	r2, [sp, #4]
 8003694:	9a01      	ldr	r2, [sp, #4]
 8003696:	9002      	str	r0, [sp, #8]
 8003698:	681a      	ldr	r2, [r3, #0]
 800369a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800369e:	601a      	str	r2, [r3, #0]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	ed9f 7b1f 	vldr	d7, [pc, #124]	@ 8003720 <SystemClock_Config+0xa8>
 80036a6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80036aa:	9302      	str	r3, [sp, #8]
 80036ac:	2301      	movs	r3, #1
 80036ae:	2402      	movs	r4, #2
 80036b0:	9a02      	ldr	r2, [sp, #8]
 80036b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80036b4:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 80036b8:	2504      	movs	r5, #4
 80036ba:	22a8      	movs	r2, #168	@ 0xa8
 80036bc:	2307      	movs	r3, #7
 80036be:	a808      	add	r0, sp, #32
 80036c0:	ed8d 7b08 	vstr	d7, [sp, #32]
 80036c4:	e9cd 410e 	strd	r4, r1, [sp, #56]	@ 0x38
 80036c8:	e9cd 5210 	strd	r5, r2, [sp, #64]	@ 0x40
 80036cc:	e9cd 4312 	strd	r4, r3, [sp, #72]	@ 0x48
 80036d0:	f002 fe9e 	bl	8006410 <HAL_RCC_OscConfig>
 80036d4:	b100      	cbz	r0, 80036d8 <SystemClock_Config+0x60>
 80036d6:	e7fe      	b.n	80036d6 <SystemClock_Config+0x5e>
 80036d8:	f44f 52a0 	mov.w	r2, #5120	@ 0x1400
 80036dc:	9005      	str	r0, [sp, #20]
 80036de:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80036e2:	260f      	movs	r6, #15
 80036e4:	2105      	movs	r1, #5
 80036e6:	a803      	add	r0, sp, #12
 80036e8:	e9cd 6403 	strd	r6, r4, [sp, #12]
 80036ec:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80036f0:	f003 f87a 	bl	80067e8 <HAL_RCC_ClockConfig>
 80036f4:	4604      	mov	r4, r0
 80036f6:	b100      	cbz	r0, 80036fa <SystemClock_Config+0x82>
 80036f8:	e7fe      	b.n	80036f8 <SystemClock_Config+0x80>
 80036fa:	f003 f90f 	bl	800691c <HAL_RCC_GetHCLKFreq>
 80036fe:	4b0c      	ldr	r3, [pc, #48]	@ (8003730 <SystemClock_Config+0xb8>)
 8003700:	fba3 3000 	umull	r3, r0, r3, r0
 8003704:	0980      	lsrs	r0, r0, #6
 8003706:	f7fd fca3 	bl	8001050 <HAL_SYSTICK_Config>
 800370a:	4628      	mov	r0, r5
 800370c:	f7fd fcba 	bl	8001084 <HAL_SYSTICK_CLKSourceConfig>
 8003710:	4622      	mov	r2, r4
 8003712:	4631      	mov	r1, r6
 8003714:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003718:	f7fd fc46 	bl	8000fa8 <HAL_NVIC_SetPriority>
 800371c:	b014      	add	sp, #80	@ 0x50
 800371e:	bd70      	pop	{r4, r5, r6, pc}
 8003720:	00000009 	.word	0x00000009
 8003724:	00010000 	.word	0x00010000
 8003728:	40023800 	.word	0x40023800
 800372c:	40007000 	.word	0x40007000
 8003730:	10624dd3 	.word	0x10624dd3

08003734 <main>:
 8003734:	4a27      	ldr	r2, [pc, #156]	@ (80037d4 <main+0xa0>)
 8003736:	4928      	ldr	r1, [pc, #160]	@ (80037d8 <main+0xa4>)
 8003738:	f8d2 3a10 	ldr.w	r3, [r2, #2576]	@ 0xa10
 800373c:	f8d2 0a18 	ldr.w	r0, [r2, #2584]	@ 0xa18
 8003740:	f8b2 2a16 	ldrh.w	r2, [r2, #2582]	@ 0xa16
 8003744:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80037e8 <main+0xb4>
 8003748:	b510      	push	{r4, lr}
 800374a:	4403      	add	r3, r0
 800374c:	4c23      	ldr	r4, [pc, #140]	@ (80037dc <main+0xa8>)
 800374e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8003752:	0c1b      	lsrs	r3, r3, #16
 8003754:	e9c1 2300 	strd	r2, r3, [r1]
 8003758:	f104 0e0c 	add.w	lr, r4, #12
 800375c:	4621      	mov	r1, r4
 800375e:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8003762:	011b      	lsls	r3, r3, #4
 8003764:	f81c 0000 	ldrb.w	r0, [ip, r0]
 8003768:	f801 0b01 	strb.w	r0, [r1], #1
 800376c:	4571      	cmp	r1, lr
 800376e:	ea43 7312 	orr.w	r3, r3, r2, lsr #28
 8003772:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8003776:	d1f2      	bne.n	800375e <main+0x2a>
 8003778:	2300      	movs	r3, #0
 800377a:	7323      	strb	r3, [r4, #12]
 800377c:	f002 fb08 	bl	8005d90 <HAL_Init>
 8003780:	f7ff ff7a 	bl	8003678 <SystemClock_Config>
 8003784:	f004 fcca 	bl	800811c <MX_GPIO_Init>
 8003788:	f7ff fa26 	bl	8002bd8 <MX_DMA_Init>
 800378c:	f001 fea6 	bl	80054dc <MX_ADC1_Init>
 8003790:	f001 fef8 	bl	8005584 <MX_ADC2_Init>
 8003794:	f7fe fffc 	bl	8002790 <MX_TIM1_Init>
 8003798:	f7ff f902 	bl	80029a0 <MX_TIM8_Init>
 800379c:	f7fe fd9c 	bl	80022d8 <MX_TIM3_Init>
 80037a0:	f7fe fdd2 	bl	8002348 <MX_TIM4_Init>
 80037a4:	f000 f9a6 	bl	8003af4 <MX_SPI3_Init>
 80037a8:	f001 ff40 	bl	800562c <MX_ADC3_Init>
 80037ac:	f7ff f8a2 	bl	80028f4 <MX_TIM2_Init>
 80037b0:	f000 fc06 	bl	8003fc0 <MX_UART4_Init>
 80037b4:	f7fe fe02 	bl	80023bc <MX_TIM5_Init>
 80037b8:	f7fe fe4e 	bl	8002458 <MX_TIM13_Init>
 80037bc:	4808      	ldr	r0, [pc, #32]	@ (80037e0 <main+0xac>)
 80037be:	f7fe fd6f 	bl	80022a0 <OC4_PWM_Override>
 80037c2:	4808      	ldr	r0, [pc, #32]	@ (80037e4 <main+0xb0>)
 80037c4:	f7fe fd6c 	bl	80022a0 <OC4_PWM_Override>
 80037c8:	f7ff feb0 	bl	800352c <MX_FREERTOS_Init>
 80037cc:	f004 f902 	bl	80079d4 <osKernelStart>
 80037d0:	e7fe      	b.n	80037d0 <main+0x9c>
 80037d2:	bf00      	nop
 80037d4:	1fff7000 	.word	0x1fff7000
 80037d8:	2000ce70 	.word	0x2000ce70
 80037dc:	2000ce5c 	.word	0x2000ce5c
 80037e0:	200007b8 	.word	0x200007b8
 80037e4:	2000068c 	.word	0x2000068c
 80037e8:	080295c0 	.word	0x080295c0

080037ec <HAL_TIM_PeriodElapsedCallback>:
 80037ec:	4b03      	ldr	r3, [pc, #12]	@ (80037fc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80037ee:	6802      	ldr	r2, [r0, #0]
 80037f0:	429a      	cmp	r2, r3
 80037f2:	d000      	beq.n	80037f6 <HAL_TIM_PeriodElapsedCallback+0xa>
 80037f4:	4770      	bx	lr
 80037f6:	f002 bae5 	b.w	8005dc4 <HAL_IncTick>
 80037fa:	bf00      	nop
 80037fc:	40002000 	.word	0x40002000

08003800 <_Error_Handler>:
 8003800:	e7fe      	b.n	8003800 <_Error_Handler>
 8003802:	bf00      	nop
 8003804:	0000      	movs	r0, r0
	...

08003808 <HAL_PCD_MspInit>:
 8003808:	6803      	ldr	r3, [r0, #0]
 800380a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800380e:	d000      	beq.n	8003812 <HAL_PCD_MspInit+0xa>
 8003810:	4770      	bx	lr
 8003812:	b500      	push	{lr}
 8003814:	ed9f 7b14 	vldr	d7, [pc, #80]	@ 8003868 <HAL_PCD_MspInit+0x60>
 8003818:	b089      	sub	sp, #36	@ 0x24
 800381a:	f44f 50c0 	mov.w	r0, #6144	@ 0x1800
 800381e:	2102      	movs	r1, #2
 8003820:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003824:	230a      	movs	r3, #10
 8003826:	a902      	add	r1, sp, #8
 8003828:	4811      	ldr	r0, [pc, #68]	@ (8003870 <HAL_PCD_MspInit+0x68>)
 800382a:	9306      	str	r3, [sp, #24]
 800382c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8003830:	f006 fc72 	bl	800a118 <HAL_GPIO_Init>
 8003834:	4b0f      	ldr	r3, [pc, #60]	@ (8003874 <HAL_PCD_MspInit+0x6c>)
 8003836:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003838:	2200      	movs	r2, #0
 800383a:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 800383e:	6359      	str	r1, [r3, #52]	@ 0x34
 8003840:	9201      	str	r2, [sp, #4]
 8003842:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8003844:	f440 4080 	orr.w	r0, r0, #16384	@ 0x4000
 8003848:	6458      	str	r0, [r3, #68]	@ 0x44
 800384a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800384c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003850:	2105      	movs	r1, #5
 8003852:	9301      	str	r3, [sp, #4]
 8003854:	2043      	movs	r0, #67	@ 0x43
 8003856:	9b01      	ldr	r3, [sp, #4]
 8003858:	f7fd fba6 	bl	8000fa8 <HAL_NVIC_SetPriority>
 800385c:	2043      	movs	r0, #67	@ 0x43
 800385e:	f7fd fbdf 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8003862:	b009      	add	sp, #36	@ 0x24
 8003864:	f85d fb04 	ldr.w	pc, [sp], #4
 8003868:	00000000 	.word	0x00000000
 800386c:	00000003 	.word	0x00000003
 8003870:	40020000 	.word	0x40020000
 8003874:	40023800 	.word	0x40023800

08003878 <HAL_PCD_SetupStageCallback>:
 8003878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800387a:	f8d0 53ec 	ldr.w	r5, [r0, #1004]	@ 0x3ec
 800387e:	f500 766f 	add.w	r6, r0, #956	@ 0x3bc
 8003882:	f505 7702 	add.w	r7, r5, #520	@ 0x208
 8003886:	4604      	mov	r4, r0
 8003888:	4631      	mov	r1, r6
 800388a:	4638      	mov	r0, r7
 800388c:	f002 f9ac 	bl	8005be8 <USBD_ParseSetupRequest>
 8003890:	f895 3208 	ldrb.w	r3, [r5, #520]	@ 0x208
 8003894:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8003898:	2b40      	cmp	r3, #64	@ 0x40
 800389a:	d103      	bne.n	80038a4 <HAL_PCD_SetupStageCallback+0x2c>
 800389c:	f895 3209 	ldrb.w	r3, [r5, #521]	@ 0x209
 80038a0:	2b50      	cmp	r3, #80	@ 0x50
 80038a2:	d006      	beq.n	80038b2 <HAL_PCD_SetupStageCallback+0x3a>
 80038a4:	f8d4 03ec 	ldr.w	r0, [r4, #1004]	@ 0x3ec
 80038a8:	4631      	mov	r1, r6
 80038aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80038ae:	f000 bc87 	b.w	80041c0 <USBD_LL_SetupStage>
 80038b2:	f8d5 3214 	ldr.w	r3, [r5, #532]	@ 0x214
 80038b6:	f8b5 220e 	ldrh.w	r2, [r5, #526]	@ 0x20e
 80038ba:	689b      	ldr	r3, [r3, #8]
 80038bc:	2101      	movs	r1, #1
 80038be:	e9c5 127d 	strd	r1, r2, [r5, #500]	@ 0x1f4
 80038c2:	4628      	mov	r0, r5
 80038c4:	4639      	mov	r1, r7
 80038c6:	4798      	blx	r3
 80038c8:	f8b5 320e 	ldrh.w	r3, [r5, #526]	@ 0x20e
 80038cc:	b903      	cbnz	r3, 80038d0 <HAL_PCD_SetupStageCallback+0x58>
 80038ce:	b100      	cbz	r0, 80038d2 <HAL_PCD_SetupStageCallback+0x5a>
 80038d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80038d2:	4628      	mov	r0, r5
 80038d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80038d8:	f7fd bc0c 	b.w	80010f4 <USBD_CtlSendStatus>

080038dc <HAL_PCD_DataOutStageCallback>:
 80038dc:	ebc1 03c1 	rsb	r3, r1, r1, lsl #3
 80038e0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80038e4:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 80038e8:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80038ec:	f000 bc98 	b.w	8004220 <USBD_LL_DataOutStage>

080038f0 <HAL_PCD_DataInStageCallback>:
 80038f0:	ebc1 03c1 	rsb	r3, r1, r1, lsl #3
 80038f4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80038f8:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 80038fc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80038fe:	f000 bcc3 	b.w	8004288 <USBD_LL_DataInStage>
 8003902:	bf00      	nop

08003904 <HAL_PCD_SOFCallback>:
 8003904:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003908:	f000 bd4a 	b.w	80043a0 <USBD_LL_SOF>

0800390c <HAL_PCD_ResetCallback>:
 800390c:	b510      	push	{r4, lr}
 800390e:	68c1      	ldr	r1, [r0, #12]
 8003910:	4604      	mov	r4, r0
 8003912:	3900      	subs	r1, #0
 8003914:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003918:	bf18      	it	ne
 800391a:	2101      	movne	r1, #1
 800391c:	f000 fd2a 	bl	8004374 <USBD_LL_SetSpeed>
 8003920:	f8d4 03ec 	ldr.w	r0, [r4, #1004]	@ 0x3ec
 8003924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003928:	f000 bd04 	b.w	8004334 <USBD_LL_Reset>

0800392c <HAL_PCD_SuspendCallback>:
 800392c:	b510      	push	{r4, lr}
 800392e:	4604      	mov	r4, r0
 8003930:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003934:	f000 fd22 	bl	800437c <USBD_LL_Suspend>
 8003938:	6822      	ldr	r2, [r4, #0]
 800393a:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 800393e:	f043 0301 	orr.w	r3, r3, #1
 8003942:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
 8003946:	6a23      	ldr	r3, [r4, #32]
 8003948:	b123      	cbz	r3, 8003954 <HAL_PCD_SuspendCallback+0x28>
 800394a:	4a03      	ldr	r2, [pc, #12]	@ (8003958 <HAL_PCD_SuspendCallback+0x2c>)
 800394c:	6913      	ldr	r3, [r2, #16]
 800394e:	f043 0306 	orr.w	r3, r3, #6
 8003952:	6113      	str	r3, [r2, #16]
 8003954:	bd10      	pop	{r4, pc}
 8003956:	bf00      	nop
 8003958:	e000ed00 	.word	0xe000ed00

0800395c <HAL_PCD_ResumeCallback>:
 800395c:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003960:	f000 bd16 	b.w	8004390 <USBD_LL_Resume>

08003964 <HAL_PCD_ISOOUTIncompleteCallback>:
 8003964:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003968:	f000 bd2a 	b.w	80043c0 <USBD_LL_IsoOUTIncomplete>

0800396c <HAL_PCD_ISOINIncompleteCallback>:
 800396c:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003970:	f000 bd24 	b.w	80043bc <USBD_LL_IsoINIncomplete>

08003974 <HAL_PCD_ConnectCallback>:
 8003974:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003978:	f000 bd24 	b.w	80043c4 <USBD_LL_DevConnected>

0800397c <HAL_PCD_DisconnectCallback>:
 800397c:	f8d0 03ec 	ldr.w	r0, [r0, #1004]	@ 0x3ec
 8003980:	f000 bd22 	b.w	80043c8 <USBD_LL_DevDisconnected>

08003984 <USBD_LL_Init>:
 8003984:	7802      	ldrb	r2, [r0, #0]
 8003986:	b10a      	cbz	r2, 800398c <USBD_LL_Init+0x8>
 8003988:	2000      	movs	r0, #0
 800398a:	4770      	bx	lr
 800398c:	4b19      	ldr	r3, [pc, #100]	@ (80039f4 <USBD_LL_Init+0x70>)
 800398e:	b510      	push	{r4, lr}
 8003990:	f8c3 03ec 	str.w	r0, [r3, #1004]	@ 0x3ec
 8003994:	f04f 44a0 	mov.w	r4, #1342177280	@ 0x50000000
 8003998:	f8c0 3220 	str.w	r3, [r0, #544]	@ 0x220
 800399c:	2006      	movs	r0, #6
 800399e:	2102      	movs	r1, #2
 80039a0:	e9c3 4000 	strd	r4, r0, [r3]
 80039a4:	4618      	mov	r0, r3
 80039a6:	e9c3 1203 	strd	r1, r2, [r3, #12]
 80039aa:	e9c3 2105 	strd	r2, r1, [r3, #20]
 80039ae:	e9c3 2207 	strd	r2, r2, [r3, #28]
 80039b2:	e9c3 220b 	strd	r2, r2, [r3, #44]	@ 0x2c
 80039b6:	625a      	str	r2, [r3, #36]	@ 0x24
 80039b8:	f001 f8b4 	bl	8004b24 <HAL_PCD_Init>
 80039bc:	b9a0      	cbnz	r0, 80039e8 <USBD_LL_Init+0x64>
 80039be:	2180      	movs	r1, #128	@ 0x80
 80039c0:	480c      	ldr	r0, [pc, #48]	@ (80039f4 <USBD_LL_Init+0x70>)
 80039c2:	f7ff f905 	bl	8002bd0 <HAL_PCDEx_SetRxFiFo>
 80039c6:	2240      	movs	r2, #64	@ 0x40
 80039c8:	2100      	movs	r1, #0
 80039ca:	480a      	ldr	r0, [pc, #40]	@ (80039f4 <USBD_LL_Init+0x70>)
 80039cc:	f7ff f8dc 	bl	8002b88 <HAL_PCDEx_SetTxFiFo>
 80039d0:	2240      	movs	r2, #64	@ 0x40
 80039d2:	2101      	movs	r1, #1
 80039d4:	4807      	ldr	r0, [pc, #28]	@ (80039f4 <USBD_LL_Init+0x70>)
 80039d6:	f7ff f8d7 	bl	8002b88 <HAL_PCDEx_SetTxFiFo>
 80039da:	2240      	movs	r2, #64	@ 0x40
 80039dc:	2103      	movs	r1, #3
 80039de:	4805      	ldr	r0, [pc, #20]	@ (80039f4 <USBD_LL_Init+0x70>)
 80039e0:	f7ff f8d2 	bl	8002b88 <HAL_PCDEx_SetTxFiFo>
 80039e4:	2000      	movs	r0, #0
 80039e6:	bd10      	pop	{r4, pc}
 80039e8:	4803      	ldr	r0, [pc, #12]	@ (80039f8 <USBD_LL_Init+0x74>)
 80039ea:	f44f 71ac 	mov.w	r1, #344	@ 0x158
 80039ee:	f7ff ff07 	bl	8003800 <_Error_Handler>
 80039f2:	e7e4      	b.n	80039be <USBD_LL_Init+0x3a>
 80039f4:	20000810 	.word	0x20000810
 80039f8:	080295d4 	.word	0x080295d4

080039fc <USBD_LL_Start>:
 80039fc:	b508      	push	{r3, lr}
 80039fe:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003a02:	f001 f8fb 	bl	8004bfc <HAL_PCD_Start>
 8003a06:	b118      	cbz	r0, 8003a10 <USBD_LL_Start+0x14>
 8003a08:	2802      	cmp	r0, #2
 8003a0a:	bf0c      	ite	eq
 8003a0c:	2001      	moveq	r0, #1
 8003a0e:	2002      	movne	r0, #2
 8003a10:	bd08      	pop	{r3, pc}
 8003a12:	bf00      	nop

08003a14 <USBD_LL_OpenEP>:
 8003a14:	4694      	mov	ip, r2
 8003a16:	b508      	push	{r3, lr}
 8003a18:	461a      	mov	r2, r3
 8003a1a:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003a1e:	4663      	mov	r3, ip
 8003a20:	f001 fc34 	bl	800528c <HAL_PCD_EP_Open>
 8003a24:	b118      	cbz	r0, 8003a2e <USBD_LL_OpenEP+0x1a>
 8003a26:	2802      	cmp	r0, #2
 8003a28:	bf0c      	ite	eq
 8003a2a:	2001      	moveq	r0, #1
 8003a2c:	2002      	movne	r0, #2
 8003a2e:	bd08      	pop	{r3, pc}

08003a30 <USBD_LL_CloseEP>:
 8003a30:	b508      	push	{r3, lr}
 8003a32:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003a36:	f001 fc6b 	bl	8005310 <HAL_PCD_EP_Close>
 8003a3a:	b118      	cbz	r0, 8003a44 <USBD_LL_CloseEP+0x14>
 8003a3c:	2802      	cmp	r0, #2
 8003a3e:	bf0c      	ite	eq
 8003a40:	2001      	moveq	r0, #1
 8003a42:	2002      	movne	r0, #2
 8003a44:	bd08      	pop	{r3, pc}
 8003a46:	bf00      	nop

08003a48 <USBD_LL_StallEP>:
 8003a48:	b508      	push	{r3, lr}
 8003a4a:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003a4e:	f001 fced 	bl	800542c <HAL_PCD_EP_SetStall>
 8003a52:	b118      	cbz	r0, 8003a5c <USBD_LL_StallEP+0x14>
 8003a54:	2802      	cmp	r0, #2
 8003a56:	bf0c      	ite	eq
 8003a58:	2001      	moveq	r0, #1
 8003a5a:	2002      	movne	r0, #2
 8003a5c:	bd08      	pop	{r3, pc}
 8003a5e:	bf00      	nop

08003a60 <USBD_LL_ClearStallEP>:
 8003a60:	b508      	push	{r3, lr}
 8003a62:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003a66:	f001 fd11 	bl	800548c <HAL_PCD_EP_ClrStall>
 8003a6a:	b118      	cbz	r0, 8003a74 <USBD_LL_ClearStallEP+0x14>
 8003a6c:	2802      	cmp	r0, #2
 8003a6e:	bf0c      	ite	eq
 8003a70:	2001      	moveq	r0, #1
 8003a72:	2002      	movne	r0, #2
 8003a74:	bd08      	pop	{r3, pc}
 8003a76:	bf00      	nop

08003a78 <USBD_LL_IsStallEP>:
 8003a78:	060a      	lsls	r2, r1, #24
 8003a7a:	f8d0 3220 	ldr.w	r3, [r0, #544]	@ 0x220
 8003a7e:	d406      	bmi.n	8003a8e <USBD_LL_IsStallEP+0x16>
 8003a80:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8003a84:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8003a88:	f893 01fa 	ldrb.w	r0, [r3, #506]	@ 0x1fa
 8003a8c:	4770      	bx	lr
 8003a8e:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 8003a92:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8003a96:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8003a9a:	f893 003a 	ldrb.w	r0, [r3, #58]	@ 0x3a
 8003a9e:	4770      	bx	lr

08003aa0 <USBD_LL_SetUSBAddress>:
 8003aa0:	b508      	push	{r3, lr}
 8003aa2:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003aa6:	f001 fbdd 	bl	8005264 <HAL_PCD_SetAddress>
 8003aaa:	b118      	cbz	r0, 8003ab4 <USBD_LL_SetUSBAddress+0x14>
 8003aac:	2802      	cmp	r0, #2
 8003aae:	bf0c      	ite	eq
 8003ab0:	2001      	moveq	r0, #1
 8003ab2:	2002      	movne	r0, #2
 8003ab4:	bd08      	pop	{r3, pc}
 8003ab6:	bf00      	nop

08003ab8 <USBD_LL_Transmit>:
 8003ab8:	b508      	push	{r3, lr}
 8003aba:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003abe:	f001 fc8b 	bl	80053d8 <HAL_PCD_EP_Transmit>
 8003ac2:	b118      	cbz	r0, 8003acc <USBD_LL_Transmit+0x14>
 8003ac4:	2802      	cmp	r0, #2
 8003ac6:	bf0c      	ite	eq
 8003ac8:	2001      	moveq	r0, #1
 8003aca:	2002      	movne	r0, #2
 8003acc:	bd08      	pop	{r3, pc}
 8003ace:	bf00      	nop

08003ad0 <USBD_LL_PrepareReceive>:
 8003ad0:	b508      	push	{r3, lr}
 8003ad2:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003ad6:	f001 fc4d 	bl	8005374 <HAL_PCD_EP_Receive>
 8003ada:	b118      	cbz	r0, 8003ae4 <USBD_LL_PrepareReceive+0x14>
 8003adc:	2802      	cmp	r0, #2
 8003ade:	bf0c      	ite	eq
 8003ae0:	2001      	moveq	r0, #1
 8003ae2:	2002      	movne	r0, #2
 8003ae4:	bd08      	pop	{r3, pc}
 8003ae6:	bf00      	nop

08003ae8 <USBD_LL_GetRxDataSize>:
 8003ae8:	b508      	push	{r3, lr}
 8003aea:	f8d0 0220 	ldr.w	r0, [r0, #544]	@ 0x220
 8003aee:	f001 fc69 	bl	80053c4 <HAL_PCD_EP_GetRxCount>
 8003af2:	bd08      	pop	{r3, pc}

08003af4 <MX_SPI3_Init>:
 8003af4:	b510      	push	{r4, lr}
 8003af6:	4811      	ldr	r0, [pc, #68]	@ (8003b3c <MX_SPI3_Init+0x48>)
 8003af8:	4c11      	ldr	r4, [pc, #68]	@ (8003b40 <MX_SPI3_Init+0x4c>)
 8003afa:	2300      	movs	r3, #0
 8003afc:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003b00:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8003b04:	e9c4 0200 	strd	r0, r2, [r4]
 8003b08:	e9c4 3102 	strd	r3, r1, [r4, #8]
 8003b0c:	2201      	movs	r2, #1
 8003b0e:	f44f 7000 	mov.w	r0, #512	@ 0x200
 8003b12:	2118      	movs	r1, #24
 8003b14:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8003b18:	e9c4 0106 	strd	r0, r1, [r4, #24]
 8003b1c:	220a      	movs	r2, #10
 8003b1e:	4620      	mov	r0, r4
 8003b20:	e9c4 3308 	strd	r3, r3, [r4, #32]
 8003b24:	e9c4 320a 	strd	r3, r2, [r4, #40]	@ 0x28
 8003b28:	f7ff f8f0 	bl	8002d0c <HAL_SPI_Init>
 8003b2c:	b900      	cbnz	r0, 8003b30 <MX_SPI3_Init+0x3c>
 8003b2e:	bd10      	pop	{r4, pc}
 8003b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b34:	4803      	ldr	r0, [pc, #12]	@ (8003b44 <MX_SPI3_Init+0x50>)
 8003b36:	2152      	movs	r1, #82	@ 0x52
 8003b38:	f7ff be62 	b.w	8003800 <_Error_Handler>
 8003b3c:	40003c00 	.word	0x40003c00
 8003b40:	20000cc0 	.word	0x20000cc0
 8003b44:	080295f0 	.word	0x080295f0

08003b48 <HAL_SPI_MspInit>:
 8003b48:	4b3c      	ldr	r3, [pc, #240]	@ (8003c3c <HAL_SPI_MspInit+0xf4>)
 8003b4a:	6802      	ldr	r2, [r0, #0]
 8003b4c:	429a      	cmp	r2, r3
 8003b4e:	d000      	beq.n	8003b52 <HAL_SPI_MspInit+0xa>
 8003b50:	4770      	bx	lr
 8003b52:	b570      	push	{r4, r5, r6, lr}
 8003b54:	b086      	sub	sp, #24
 8003b56:	f503 33fe 	add.w	r3, r3, #130048	@ 0x1fc00
 8003b5a:	2500      	movs	r5, #0
 8003b5c:	9500      	str	r5, [sp, #0]
 8003b5e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003b60:	4e37      	ldr	r6, [pc, #220]	@ (8003c40 <HAL_SPI_MspInit+0xf8>)
 8003b62:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003b66:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b6a:	f44f 51e0 	mov.w	r1, #7168	@ 0x1c00
 8003b6e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003b72:	9300      	str	r3, [sp, #0]
 8003b74:	9101      	str	r1, [sp, #4]
 8003b76:	2301      	movs	r3, #1
 8003b78:	2102      	movs	r1, #2
 8003b7a:	e9cd 1302 	strd	r1, r3, [sp, #8]
 8003b7e:	2203      	movs	r2, #3
 8003b80:	2306      	movs	r3, #6
 8003b82:	4604      	mov	r4, r0
 8003b84:	a901      	add	r1, sp, #4
 8003b86:	9800      	ldr	r0, [sp, #0]
 8003b88:	482e      	ldr	r0, [pc, #184]	@ (8003c44 <HAL_SPI_MspInit+0xfc>)
 8003b8a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003b8e:	f006 fac3 	bl	800a118 <HAL_GPIO_Init>
 8003b92:	4a2d      	ldr	r2, [pc, #180]	@ (8003c48 <HAL_SPI_MspInit+0x100>)
 8003b94:	68e3      	ldr	r3, [r4, #12]
 8003b96:	60f5      	str	r5, [r6, #12]
 8003b98:	e9c6 2500 	strd	r2, r5, [r6]
 8003b9c:	2140      	movs	r1, #64	@ 0x40
 8003b9e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003ba2:	60b1      	str	r1, [r6, #8]
 8003ba4:	6132      	str	r2, [r6, #16]
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	d134      	bne.n	8003c14 <HAL_SPI_MspInit+0xcc>
 8003baa:	4619      	mov	r1, r3
 8003bac:	2200      	movs	r2, #0
 8003bae:	e9c6 3105 	strd	r3, r1, [r6, #20]
 8003bb2:	4823      	ldr	r0, [pc, #140]	@ (8003c40 <HAL_SPI_MspInit+0xf8>)
 8003bb4:	6272      	str	r2, [r6, #36]	@ 0x24
 8003bb6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003bba:	e9c6 2307 	strd	r2, r3, [r6, #28]
 8003bbe:	f000 fc0f 	bl	80043e0 <HAL_DMA_Init>
 8003bc2:	2800      	cmp	r0, #0
 8003bc4:	d135      	bne.n	8003c32 <HAL_SPI_MspInit+0xea>
 8003bc6:	4d21      	ldr	r5, [pc, #132]	@ (8003c4c <HAL_SPI_MspInit+0x104>)
 8003bc8:	68e3      	ldr	r3, [r4, #12]
 8003bca:	4921      	ldr	r1, [pc, #132]	@ (8003c50 <HAL_SPI_MspInit+0x108>)
 8003bcc:	64a6      	str	r6, [r4, #72]	@ 0x48
 8003bce:	2200      	movs	r2, #0
 8003bd0:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8003bd4:	e9c5 1200 	strd	r1, r2, [r5]
 8003bd8:	e9c5 2202 	strd	r2, r2, [r5, #8]
 8003bdc:	63b4      	str	r4, [r6, #56]	@ 0x38
 8003bde:	6128      	str	r0, [r5, #16]
 8003be0:	b9eb      	cbnz	r3, 8003c1e <HAL_SPI_MspInit+0xd6>
 8003be2:	4619      	mov	r1, r3
 8003be4:	2200      	movs	r2, #0
 8003be6:	e9c5 3105 	strd	r3, r1, [r5, #20]
 8003bea:	4818      	ldr	r0, [pc, #96]	@ (8003c4c <HAL_SPI_MspInit+0x104>)
 8003bec:	626a      	str	r2, [r5, #36]	@ 0x24
 8003bee:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003bf2:	e9c5 2307 	strd	r2, r3, [r5, #28]
 8003bf6:	f000 fbf3 	bl	80043e0 <HAL_DMA_Init>
 8003bfa:	b9a8      	cbnz	r0, 8003c28 <HAL_SPI_MspInit+0xe0>
 8003bfc:	2200      	movs	r2, #0
 8003bfe:	2105      	movs	r1, #5
 8003c00:	64e5      	str	r5, [r4, #76]	@ 0x4c
 8003c02:	2033      	movs	r0, #51	@ 0x33
 8003c04:	63ac      	str	r4, [r5, #56]	@ 0x38
 8003c06:	f7fd f9cf 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8003c0a:	2033      	movs	r0, #51	@ 0x33
 8003c0c:	f7fd fa08 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8003c10:	b006      	add	sp, #24
 8003c12:	bd70      	pop	{r4, r5, r6, pc}
 8003c14:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003c18:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8003c1c:	e7c6      	b.n	8003bac <HAL_SPI_MspInit+0x64>
 8003c1e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003c22:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8003c26:	e7dd      	b.n	8003be4 <HAL_SPI_MspInit+0x9c>
 8003c28:	480a      	ldr	r0, [pc, #40]	@ (8003c54 <HAL_SPI_MspInit+0x10c>)
 8003c2a:	219b      	movs	r1, #155	@ 0x9b
 8003c2c:	f7ff fde8 	bl	8003800 <_Error_Handler>
 8003c30:	e7e4      	b.n	8003bfc <HAL_SPI_MspInit+0xb4>
 8003c32:	4808      	ldr	r0, [pc, #32]	@ (8003c54 <HAL_SPI_MspInit+0x10c>)
 8003c34:	2184      	movs	r1, #132	@ 0x84
 8003c36:	f7ff fde3 	bl	8003800 <_Error_Handler>
 8003c3a:	e7c4      	b.n	8003bc6 <HAL_SPI_MspInit+0x7e>
 8003c3c:	40003c00 	.word	0x40003c00
 8003c40:	20000c60 	.word	0x20000c60
 8003c44:	40020800 	.word	0x40020800
 8003c48:	40026088 	.word	0x40026088
 8003c4c:	20000c00 	.word	0x20000c00
 8003c50:	40026010 	.word	0x40026010
 8003c54:	080295f0 	.word	0x080295f0

08003c58 <HAL_SPI_MspDeInit>:
 8003c58:	4b0d      	ldr	r3, [pc, #52]	@ (8003c90 <HAL_SPI_MspDeInit+0x38>)
 8003c5a:	6802      	ldr	r2, [r0, #0]
 8003c5c:	429a      	cmp	r2, r3
 8003c5e:	d000      	beq.n	8003c62 <HAL_SPI_MspDeInit+0xa>
 8003c60:	4770      	bx	lr
 8003c62:	4a0c      	ldr	r2, [pc, #48]	@ (8003c94 <HAL_SPI_MspDeInit+0x3c>)
 8003c64:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8003c66:	b510      	push	{r4, lr}
 8003c68:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8003c6c:	4604      	mov	r4, r0
 8003c6e:	f44f 51e0 	mov.w	r1, #7168	@ 0x1c00
 8003c72:	6413      	str	r3, [r2, #64]	@ 0x40
 8003c74:	4808      	ldr	r0, [pc, #32]	@ (8003c98 <HAL_SPI_MspDeInit+0x40>)
 8003c76:	f006 fb71 	bl	800a35c <HAL_GPIO_DeInit>
 8003c7a:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 8003c7c:	f000 fc44 	bl	8004508 <HAL_DMA_DeInit>
 8003c80:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8003c82:	f000 fc41 	bl	8004508 <HAL_DMA_DeInit>
 8003c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003c8a:	2033      	movs	r0, #51	@ 0x33
 8003c8c:	f7fd b9d4 	b.w	8001038 <HAL_NVIC_DisableIRQ>
 8003c90:	40003c00 	.word	0x40003c00
 8003c94:	40023800 	.word	0x40023800
 8003c98:	40020800 	.word	0x40020800

08003c9c <prvTaskExitError>:
 8003c9c:	4b0a      	ldr	r3, [pc, #40]	@ (8003cc8 <prvTaskExitError+0x2c>)
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	3301      	adds	r3, #1
 8003ca2:	d008      	beq.n	8003cb6 <prvTaskExitError+0x1a>
 8003ca4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003ca8:	f383 8811 	msr	BASEPRI, r3
 8003cac:	f3bf 8f6f 	isb	sy
 8003cb0:	f3bf 8f4f 	dsb	sy
 8003cb4:	e7fe      	b.n	8003cb4 <prvTaskExitError+0x18>
 8003cb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003cba:	f383 8811 	msr	BASEPRI, r3
 8003cbe:	f3bf 8f6f 	isb	sy
 8003cc2:	f3bf 8f4f 	dsb	sy
 8003cc6:	e7fe      	b.n	8003cc6 <prvTaskExitError+0x2a>
 8003cc8:	20000000 	.word	0x20000000

08003ccc <prvPortStartFirstTask>:
 8003ccc:	4806      	ldr	r0, [pc, #24]	@ (8003ce8 <prvPortStartFirstTask+0x1c>)
 8003cce:	6800      	ldr	r0, [r0, #0]
 8003cd0:	6800      	ldr	r0, [r0, #0]
 8003cd2:	f380 8808 	msr	MSP, r0
 8003cd6:	b662      	cpsie	i
 8003cd8:	b661      	cpsie	f
 8003cda:	f3bf 8f4f 	dsb	sy
 8003cde:	f3bf 8f6f 	isb	sy
 8003ce2:	df00      	svc	0
 8003ce4:	bf00      	nop
 8003ce6:	0000      	.short	0x0000
 8003ce8:	e000ed08 	.word	0xe000ed08

08003cec <vPortEnableVFP>:
 8003cec:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8003cfc <vPortEnableVFP+0x10>
 8003cf0:	6801      	ldr	r1, [r0, #0]
 8003cf2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8003cf6:	6001      	str	r1, [r0, #0]
 8003cf8:	4770      	bx	lr
 8003cfa:	0000      	.short	0x0000
 8003cfc:	e000ed88 	.word	0xe000ed88

08003d00 <pxPortInitialiseStack>:
 8003d00:	b410      	push	{r4}
 8003d02:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003d06:	4c07      	ldr	r4, [pc, #28]	@ (8003d24 <pxPortInitialiseStack+0x24>)
 8003d08:	f840 3c04 	str.w	r3, [r0, #-4]
 8003d0c:	f021 0101 	bic.w	r1, r1, #1
 8003d10:	f06f 0302 	mvn.w	r3, #2
 8003d14:	e940 4103 	strd	r4, r1, [r0, #-12]
 8003d18:	e940 3209 	strd	r3, r2, [r0, #-36]	@ 0x24
 8003d1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d20:	3844      	subs	r0, #68	@ 0x44
 8003d22:	4770      	bx	lr
 8003d24:	08003c9d 	.word	0x08003c9d
	...

08003d30 <SVC_Handler>:
 8003d30:	4b07      	ldr	r3, [pc, #28]	@ (8003d50 <pxCurrentTCBConst2>)
 8003d32:	6819      	ldr	r1, [r3, #0]
 8003d34:	6808      	ldr	r0, [r1, #0]
 8003d36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d3a:	f380 8809 	msr	PSP, r0
 8003d3e:	f3bf 8f6f 	isb	sy
 8003d42:	f04f 0000 	mov.w	r0, #0
 8003d46:	f380 8811 	msr	BASEPRI, r0
 8003d4a:	4770      	bx	lr
 8003d4c:	f3af 8000 	nop.w

08003d50 <pxCurrentTCBConst2>:
 8003d50:	200016b4 	.word	0x200016b4

08003d54 <vPortEnterCritical>:
 8003d54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003d58:	f383 8811 	msr	BASEPRI, r3
 8003d5c:	f3bf 8f6f 	isb	sy
 8003d60:	f3bf 8f4f 	dsb	sy
 8003d64:	4a0b      	ldr	r2, [pc, #44]	@ (8003d94 <vPortEnterCritical+0x40>)
 8003d66:	6813      	ldr	r3, [r2, #0]
 8003d68:	3301      	adds	r3, #1
 8003d6a:	2b01      	cmp	r3, #1
 8003d6c:	6013      	str	r3, [r2, #0]
 8003d6e:	d000      	beq.n	8003d72 <vPortEnterCritical+0x1e>
 8003d70:	4770      	bx	lr
 8003d72:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8003d76:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8003d7a:	b2db      	uxtb	r3, r3
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d0f7      	beq.n	8003d70 <vPortEnterCritical+0x1c>
 8003d80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003d84:	f383 8811 	msr	BASEPRI, r3
 8003d88:	f3bf 8f6f 	isb	sy
 8003d8c:	f3bf 8f4f 	dsb	sy
 8003d90:	e7fe      	b.n	8003d90 <vPortEnterCritical+0x3c>
 8003d92:	bf00      	nop
 8003d94:	20000000 	.word	0x20000000

08003d98 <vPortExitCritical>:
 8003d98:	4a08      	ldr	r2, [pc, #32]	@ (8003dbc <vPortExitCritical+0x24>)
 8003d9a:	6813      	ldr	r3, [r2, #0]
 8003d9c:	b943      	cbnz	r3, 8003db0 <vPortExitCritical+0x18>
 8003d9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003da2:	f383 8811 	msr	BASEPRI, r3
 8003da6:	f3bf 8f6f 	isb	sy
 8003daa:	f3bf 8f4f 	dsb	sy
 8003dae:	e7fe      	b.n	8003dae <vPortExitCritical+0x16>
 8003db0:	3b01      	subs	r3, #1
 8003db2:	6013      	str	r3, [r2, #0]
 8003db4:	b90b      	cbnz	r3, 8003dba <vPortExitCritical+0x22>
 8003db6:	f383 8811 	msr	BASEPRI, r3
 8003dba:	4770      	bx	lr
 8003dbc:	20000000 	.word	0x20000000

08003dc0 <PendSV_Handler>:
 8003dc0:	f3ef 8009 	mrs	r0, PSP
 8003dc4:	f3bf 8f6f 	isb	sy
 8003dc8:	4b15      	ldr	r3, [pc, #84]	@ (8003e20 <pxCurrentTCBConst>)
 8003dca:	681a      	ldr	r2, [r3, #0]
 8003dcc:	f01e 0f10 	tst.w	lr, #16
 8003dd0:	bf08      	it	eq
 8003dd2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8003dd6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003dda:	6010      	str	r0, [r2, #0]
 8003ddc:	f84d 3d04 	str.w	r3, [sp, #-4]!
 8003de0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8003de4:	f380 8811 	msr	BASEPRI, r0
 8003de8:	f3bf 8f4f 	dsb	sy
 8003dec:	f3bf 8f6f 	isb	sy
 8003df0:	f004 fedc 	bl	8008bac <vTaskSwitchContext>
 8003df4:	f04f 0000 	mov.w	r0, #0
 8003df8:	f380 8811 	msr	BASEPRI, r0
 8003dfc:	bc08      	pop	{r3}
 8003dfe:	6819      	ldr	r1, [r3, #0]
 8003e00:	6808      	ldr	r0, [r1, #0]
 8003e02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e06:	f01e 0f10 	tst.w	lr, #16
 8003e0a:	bf08      	it	eq
 8003e0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8003e10:	f380 8809 	msr	PSP, r0
 8003e14:	f3bf 8f6f 	isb	sy
 8003e18:	4770      	bx	lr
 8003e1a:	bf00      	nop
 8003e1c:	f3af 8000 	nop.w

08003e20 <pxCurrentTCBConst>:
 8003e20:	200016b4 	.word	0x200016b4

08003e24 <xPortSysTickHandler>:
 8003e24:	b508      	push	{r3, lr}
 8003e26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003e2a:	f383 8811 	msr	BASEPRI, r3
 8003e2e:	f3bf 8f6f 	isb	sy
 8003e32:	f3bf 8f4f 	dsb	sy
 8003e36:	f004 fce5 	bl	8008804 <xTaskIncrementTick>
 8003e3a:	b128      	cbz	r0, 8003e48 <xPortSysTickHandler+0x24>
 8003e3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8003e40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8003e44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8003e48:	2300      	movs	r3, #0
 8003e4a:	f383 8811 	msr	BASEPRI, r3
 8003e4e:	bd08      	pop	{r3, pc}

08003e50 <vPortSetupTimerInterrupt>:
 8003e50:	4b06      	ldr	r3, [pc, #24]	@ (8003e6c <vPortSetupTimerInterrupt+0x1c>)
 8003e52:	4907      	ldr	r1, [pc, #28]	@ (8003e70 <vPortSetupTimerInterrupt+0x20>)
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	fba1 1303 	umull	r1, r3, r1, r3
 8003e5a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8003e5e:	099b      	lsrs	r3, r3, #6
 8003e60:	3b01      	subs	r3, #1
 8003e62:	2107      	movs	r1, #7
 8003e64:	6153      	str	r3, [r2, #20]
 8003e66:	6111      	str	r1, [r2, #16]
 8003e68:	4770      	bx	lr
 8003e6a:	bf00      	nop
 8003e6c:	200001f4 	.word	0x200001f4
 8003e70:	10624dd3 	.word	0x10624dd3

08003e74 <xPortStartScheduler>:
 8003e74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8003e78:	4a34      	ldr	r2, [pc, #208]	@ (8003f4c <xPortStartScheduler+0xd8>)
 8003e7a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8003e7e:	4291      	cmp	r1, r2
 8003e80:	d05b      	beq.n	8003f3a <xPortStartScheduler+0xc6>
 8003e82:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8003e86:	4b32      	ldr	r3, [pc, #200]	@ (8003f50 <xPortStartScheduler+0xdc>)
 8003e88:	429a      	cmp	r2, r3
 8003e8a:	d04d      	beq.n	8003f28 <xPortStartScheduler+0xb4>
 8003e8c:	b530      	push	{r4, r5, lr}
 8003e8e:	4b31      	ldr	r3, [pc, #196]	@ (8003f54 <xPortStartScheduler+0xe0>)
 8003e90:	4c31      	ldr	r4, [pc, #196]	@ (8003f58 <xPortStartScheduler+0xe4>)
 8003e92:	781a      	ldrb	r2, [r3, #0]
 8003e94:	4831      	ldr	r0, [pc, #196]	@ (8003f5c <xPortStartScheduler+0xe8>)
 8003e96:	b083      	sub	sp, #12
 8003e98:	21ff      	movs	r1, #255	@ 0xff
 8003e9a:	b2d2      	uxtb	r2, r2
 8003e9c:	9201      	str	r2, [sp, #4]
 8003e9e:	7019      	strb	r1, [r3, #0]
 8003ea0:	781b      	ldrb	r3, [r3, #0]
 8003ea2:	b2db      	uxtb	r3, r3
 8003ea4:	f88d 3003 	strb.w	r3, [sp, #3]
 8003ea8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003eac:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8003eb0:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003eb4:	2107      	movs	r1, #7
 8003eb6:	0612      	lsls	r2, r2, #24
 8003eb8:	7023      	strb	r3, [r4, #0]
 8003eba:	6001      	str	r1, [r0, #0]
 8003ebc:	d50d      	bpl.n	8003eda <xPortStartScheduler+0x66>
 8003ebe:	2206      	movs	r2, #6
 8003ec0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003ec4:	005b      	lsls	r3, r3, #1
 8003ec6:	b2db      	uxtb	r3, r3
 8003ec8:	f88d 3003 	strb.w	r3, [sp, #3]
 8003ecc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8003ed0:	061b      	lsls	r3, r3, #24
 8003ed2:	4611      	mov	r1, r2
 8003ed4:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8003ed8:	d4f2      	bmi.n	8003ec0 <xPortStartScheduler+0x4c>
 8003eda:	9a01      	ldr	r2, [sp, #4]
 8003edc:	4d1d      	ldr	r5, [pc, #116]	@ (8003f54 <xPortStartScheduler+0xe0>)
 8003ede:	020b      	lsls	r3, r1, #8
 8003ee0:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
 8003ee4:	b2d2      	uxtb	r2, r2
 8003ee6:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8003eea:	6003      	str	r3, [r0, #0]
 8003eec:	702a      	strb	r2, [r5, #0]
 8003eee:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8003ef2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003ef6:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 8003efa:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8003efe:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8003f02:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
 8003f06:	f7ff ffa3 	bl	8003e50 <vPortSetupTimerInterrupt>
 8003f0a:	4b15      	ldr	r3, [pc, #84]	@ (8003f60 <xPortStartScheduler+0xec>)
 8003f0c:	2200      	movs	r2, #0
 8003f0e:	601a      	str	r2, [r3, #0]
 8003f10:	f7ff feec 	bl	8003cec <vPortEnableVFP>
 8003f14:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8003f18:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8003f1c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
 8003f20:	f7ff fed4 	bl	8003ccc <prvPortStartFirstTask>
 8003f24:	f7ff feba 	bl	8003c9c <prvTaskExitError>
 8003f28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f2c:	f383 8811 	msr	BASEPRI, r3
 8003f30:	f3bf 8f6f 	isb	sy
 8003f34:	f3bf 8f4f 	dsb	sy
 8003f38:	e7fe      	b.n	8003f38 <xPortStartScheduler+0xc4>
 8003f3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f3e:	f383 8811 	msr	BASEPRI, r3
 8003f42:	f3bf 8f6f 	isb	sy
 8003f46:	f3bf 8f4f 	dsb	sy
 8003f4a:	e7fe      	b.n	8003f4a <xPortStartScheduler+0xd6>
 8003f4c:	410fc271 	.word	0x410fc271
 8003f50:	410fc270 	.word	0x410fc270
 8003f54:	e000e400 	.word	0xe000e400
 8003f58:	20000d1c 	.word	0x20000d1c
 8003f5c:	20000d18 	.word	0x20000d18
 8003f60:	20000000 	.word	0x20000000

08003f64 <vPortValidateInterruptPriority>:
 8003f64:	f3ef 8305 	mrs	r3, IPSR
 8003f68:	2b0f      	cmp	r3, #15
 8003f6a:	d90e      	bls.n	8003f8a <vPortValidateInterruptPriority+0x26>
 8003f6c:	4911      	ldr	r1, [pc, #68]	@ (8003fb4 <vPortValidateInterruptPriority+0x50>)
 8003f6e:	4a12      	ldr	r2, [pc, #72]	@ (8003fb8 <vPortValidateInterruptPriority+0x54>)
 8003f70:	5c5b      	ldrb	r3, [r3, r1]
 8003f72:	7812      	ldrb	r2, [r2, #0]
 8003f74:	429a      	cmp	r2, r3
 8003f76:	d908      	bls.n	8003f8a <vPortValidateInterruptPriority+0x26>
 8003f78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f7c:	f383 8811 	msr	BASEPRI, r3
 8003f80:	f3bf 8f6f 	isb	sy
 8003f84:	f3bf 8f4f 	dsb	sy
 8003f88:	e7fe      	b.n	8003f88 <vPortValidateInterruptPriority+0x24>
 8003f8a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8003f8e:	4a0b      	ldr	r2, [pc, #44]	@ (8003fbc <vPortValidateInterruptPriority+0x58>)
 8003f90:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8003f94:	6812      	ldr	r2, [r2, #0]
 8003f96:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8003f9a:	4293      	cmp	r3, r2
 8003f9c:	d908      	bls.n	8003fb0 <vPortValidateInterruptPriority+0x4c>
 8003f9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003fa2:	f383 8811 	msr	BASEPRI, r3
 8003fa6:	f3bf 8f6f 	isb	sy
 8003faa:	f3bf 8f4f 	dsb	sy
 8003fae:	e7fe      	b.n	8003fae <vPortValidateInterruptPriority+0x4a>
 8003fb0:	4770      	bx	lr
 8003fb2:	bf00      	nop
 8003fb4:	e000e3f0 	.word	0xe000e3f0
 8003fb8:	20000d1c 	.word	0x20000d1c
 8003fbc:	20000d18 	.word	0x20000d18

08003fc0 <MX_UART4_Init>:
 8003fc0:	b510      	push	{r4, lr}
 8003fc2:	480c      	ldr	r0, [pc, #48]	@ (8003ff4 <MX_UART4_Init+0x34>)
 8003fc4:	4c0c      	ldr	r4, [pc, #48]	@ (8003ff8 <MX_UART4_Init+0x38>)
 8003fc6:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8003fca:	2300      	movs	r3, #0
 8003fcc:	e9c4 0100 	strd	r0, r1, [r4]
 8003fd0:	220c      	movs	r2, #12
 8003fd2:	4620      	mov	r0, r4
 8003fd4:	e9c4 3302 	strd	r3, r3, [r4, #8]
 8003fd8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8003fdc:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8003fe0:	f002 fe44 	bl	8006c6c <HAL_UART_Init>
 8003fe4:	b900      	cbnz	r0, 8003fe8 <MX_UART4_Init+0x28>
 8003fe6:	bd10      	pop	{r4, pc}
 8003fe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fec:	4803      	ldr	r0, [pc, #12]	@ (8003ffc <MX_UART4_Init+0x3c>)
 8003fee:	214e      	movs	r1, #78	@ 0x4e
 8003ff0:	f7ff bc06 	b.w	8003800 <_Error_Handler>
 8003ff4:	40004c00 	.word	0x40004c00
 8003ff8:	20000de0 	.word	0x20000de0
 8003ffc:	08029604 	.word	0x08029604

08004000 <HAL_UART_MspInit>:
 8004000:	4b3a      	ldr	r3, [pc, #232]	@ (80040ec <HAL_UART_MspInit+0xec>)
 8004002:	6802      	ldr	r2, [r0, #0]
 8004004:	429a      	cmp	r2, r3
 8004006:	d000      	beq.n	800400a <HAL_UART_MspInit+0xa>
 8004008:	4770      	bx	lr
 800400a:	b570      	push	{r4, r5, r6, lr}
 800400c:	b088      	sub	sp, #32
 800400e:	2500      	movs	r5, #0
 8004010:	f503 33f6 	add.w	r3, r3, #125952	@ 0x1ec00
 8004014:	9501      	str	r5, [sp, #4]
 8004016:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004018:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 800401c:	641a      	str	r2, [r3, #64]	@ 0x40
 800401e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004020:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004024:	2608      	movs	r6, #8
 8004026:	9301      	str	r3, [sp, #4]
 8004028:	2201      	movs	r2, #1
 800402a:	2302      	movs	r3, #2
 800402c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004030:	eb0d 0106 	add.w	r1, sp, r6
 8004034:	2202      	movs	r2, #2
 8004036:	2303      	movs	r3, #3
 8004038:	4604      	mov	r4, r0
 800403a:	482d      	ldr	r0, [pc, #180]	@ (80040f0 <HAL_UART_MspInit+0xf0>)
 800403c:	9606      	str	r6, [sp, #24]
 800403e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004042:	9b01      	ldr	r3, [sp, #4]
 8004044:	f006 f868 	bl	800a118 <HAL_GPIO_Init>
 8004048:	2202      	movs	r2, #2
 800404a:	2302      	movs	r3, #2
 800404c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004050:	4827      	ldr	r0, [pc, #156]	@ (80040f0 <HAL_UART_MspInit+0xf0>)
 8004052:	9606      	str	r6, [sp, #24]
 8004054:	2200      	movs	r2, #0
 8004056:	2303      	movs	r3, #3
 8004058:	eb0d 0106 	add.w	r1, sp, r6
 800405c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004060:	4e24      	ldr	r6, [pc, #144]	@ (80040f4 <HAL_UART_MspInit+0xf4>)
 8004062:	f006 f859 	bl	800a118 <HAL_GPIO_Init>
 8004066:	4a24      	ldr	r2, [pc, #144]	@ (80040f8 <HAL_UART_MspInit+0xf8>)
 8004068:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800406c:	e9c6 2300 	strd	r2, r3, [r6]
 8004070:	4630      	mov	r0, r6
 8004072:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004076:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800407a:	e9c6 5502 	strd	r5, r5, [r6, #8]
 800407e:	e9c6 2504 	strd	r2, r5, [r6, #16]
 8004082:	e9c6 5306 	strd	r5, r3, [r6, #24]
 8004086:	e9c6 5508 	strd	r5, r5, [r6, #32]
 800408a:	f000 f9a9 	bl	80043e0 <HAL_DMA_Init>
 800408e:	bb18      	cbnz	r0, 80040d8 <HAL_UART_MspInit+0xd8>
 8004090:	4d1a      	ldr	r5, [pc, #104]	@ (80040fc <HAL_UART_MspInit+0xfc>)
 8004092:	4a1b      	ldr	r2, [pc, #108]	@ (8004100 <HAL_UART_MspInit+0x100>)
 8004094:	602a      	str	r2, [r5, #0]
 8004096:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800409a:	2300      	movs	r3, #0
 800409c:	6366      	str	r6, [r4, #52]	@ 0x34
 800409e:	606a      	str	r2, [r5, #4]
 80040a0:	2140      	movs	r1, #64	@ 0x40
 80040a2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80040a6:	4628      	mov	r0, r5
 80040a8:	e9c5 1302 	strd	r1, r3, [r5, #8]
 80040ac:	e9c5 3305 	strd	r3, r3, [r5, #20]
 80040b0:	e9c5 3307 	strd	r3, r3, [r5, #28]
 80040b4:	63b4      	str	r4, [r6, #56]	@ 0x38
 80040b6:	612a      	str	r2, [r5, #16]
 80040b8:	626b      	str	r3, [r5, #36]	@ 0x24
 80040ba:	f000 f991 	bl	80043e0 <HAL_DMA_Init>
 80040be:	b980      	cbnz	r0, 80040e2 <HAL_UART_MspInit+0xe2>
 80040c0:	6325      	str	r5, [r4, #48]	@ 0x30
 80040c2:	2200      	movs	r2, #0
 80040c4:	2105      	movs	r1, #5
 80040c6:	2034      	movs	r0, #52	@ 0x34
 80040c8:	63ac      	str	r4, [r5, #56]	@ 0x38
 80040ca:	f7fc ff6d 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80040ce:	2034      	movs	r0, #52	@ 0x34
 80040d0:	f7fc ffa6 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80040d4:	b008      	add	sp, #32
 80040d6:	bd70      	pop	{r4, r5, r6, pc}
 80040d8:	480a      	ldr	r0, [pc, #40]	@ (8004104 <HAL_UART_MspInit+0x104>)
 80040da:	217f      	movs	r1, #127	@ 0x7f
 80040dc:	f7ff fb90 	bl	8003800 <_Error_Handler>
 80040e0:	e7d6      	b.n	8004090 <HAL_UART_MspInit+0x90>
 80040e2:	4808      	ldr	r0, [pc, #32]	@ (8004104 <HAL_UART_MspInit+0x104>)
 80040e4:	2191      	movs	r1, #145	@ 0x91
 80040e6:	f7ff fb8b 	bl	8003800 <_Error_Handler>
 80040ea:	e7e9      	b.n	80040c0 <HAL_UART_MspInit+0xc0>
 80040ec:	40004c00 	.word	0x40004c00
 80040f0:	40020000 	.word	0x40020000
 80040f4:	20000d80 	.word	0x20000d80
 80040f8:	40026040 	.word	0x40026040
 80040fc:	20000d20 	.word	0x20000d20
 8004100:	40026070 	.word	0x40026070
 8004104:	08029604 	.word	0x08029604

08004108 <HAL_UART_MspDeInit>:
 8004108:	4b0d      	ldr	r3, [pc, #52]	@ (8004140 <HAL_UART_MspDeInit+0x38>)
 800410a:	6802      	ldr	r2, [r0, #0]
 800410c:	429a      	cmp	r2, r3
 800410e:	d000      	beq.n	8004112 <HAL_UART_MspDeInit+0xa>
 8004110:	4770      	bx	lr
 8004112:	4a0c      	ldr	r2, [pc, #48]	@ (8004144 <HAL_UART_MspDeInit+0x3c>)
 8004114:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8004116:	b510      	push	{r4, lr}
 8004118:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 800411c:	4604      	mov	r4, r0
 800411e:	2103      	movs	r1, #3
 8004120:	6413      	str	r3, [r2, #64]	@ 0x40
 8004122:	4809      	ldr	r0, [pc, #36]	@ (8004148 <HAL_UART_MspDeInit+0x40>)
 8004124:	f006 f91a 	bl	800a35c <HAL_GPIO_DeInit>
 8004128:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800412a:	f000 f9ed 	bl	8004508 <HAL_DMA_DeInit>
 800412e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8004130:	f000 f9ea 	bl	8004508 <HAL_DMA_DeInit>
 8004134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004138:	2034      	movs	r0, #52	@ 0x34
 800413a:	f7fc bf7d 	b.w	8001038 <HAL_NVIC_DisableIRQ>
 800413e:	bf00      	nop
 8004140:	40004c00 	.word	0x40004c00
 8004144:	40023800 	.word	0x40023800
 8004148:	40020000 	.word	0x40020000

0800414c <USBD_Init>:
 800414c:	b188      	cbz	r0, 8004172 <USBD_Init+0x26>
 800414e:	b508      	push	{r3, lr}
 8004150:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8004154:	b113      	cbz	r3, 800415c <USBD_Init+0x10>
 8004156:	2300      	movs	r3, #0
 8004158:	f8c0 3214 	str.w	r3, [r0, #532]	@ 0x214
 800415c:	b109      	cbz	r1, 8004162 <USBD_Init+0x16>
 800415e:	f8c0 1210 	str.w	r1, [r0, #528]	@ 0x210
 8004162:	2301      	movs	r3, #1
 8004164:	f880 31fc 	strb.w	r3, [r0, #508]	@ 0x1fc
 8004168:	7002      	strb	r2, [r0, #0]
 800416a:	f7ff fc0b 	bl	8003984 <USBD_LL_Init>
 800416e:	2000      	movs	r0, #0
 8004170:	bd08      	pop	{r3, pc}
 8004172:	2002      	movs	r0, #2
 8004174:	4770      	bx	lr
 8004176:	bf00      	nop

08004178 <USBD_RegisterClass>:
 8004178:	b119      	cbz	r1, 8004182 <USBD_RegisterClass+0xa>
 800417a:	f8c0 1214 	str.w	r1, [r0, #532]	@ 0x214
 800417e:	2000      	movs	r0, #0
 8004180:	4770      	bx	lr
 8004182:	2002      	movs	r0, #2
 8004184:	4770      	bx	lr
 8004186:	bf00      	nop

08004188 <USBD_Start>:
 8004188:	b508      	push	{r3, lr}
 800418a:	f7ff fc37 	bl	80039fc <USBD_LL_Start>
 800418e:	2000      	movs	r0, #0
 8004190:	bd08      	pop	{r3, pc}
 8004192:	bf00      	nop

08004194 <USBD_SetClassConfig>:
 8004194:	b508      	push	{r3, lr}
 8004196:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 800419a:	b133      	cbz	r3, 80041aa <USBD_SetClassConfig+0x16>
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	4798      	blx	r3
 80041a0:	3800      	subs	r0, #0
 80041a2:	bf18      	it	ne
 80041a4:	2001      	movne	r0, #1
 80041a6:	0040      	lsls	r0, r0, #1
 80041a8:	bd08      	pop	{r3, pc}
 80041aa:	2002      	movs	r0, #2
 80041ac:	bd08      	pop	{r3, pc}
 80041ae:	bf00      	nop

080041b0 <USBD_ClrClassConfig>:
 80041b0:	b508      	push	{r3, lr}
 80041b2:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80041b6:	685b      	ldr	r3, [r3, #4]
 80041b8:	4798      	blx	r3
 80041ba:	2000      	movs	r0, #0
 80041bc:	bd08      	pop	{r3, pc}
 80041be:	bf00      	nop

080041c0 <USBD_LL_SetupStage>:
 80041c0:	b538      	push	{r3, r4, r5, lr}
 80041c2:	4604      	mov	r4, r0
 80041c4:	f500 7502 	add.w	r5, r0, #520	@ 0x208
 80041c8:	4628      	mov	r0, r5
 80041ca:	f001 fd0d 	bl	8005be8 <USBD_ParseSetupRequest>
 80041ce:	f894 1208 	ldrb.w	r1, [r4, #520]	@ 0x208
 80041d2:	f8b4 220e 	ldrh.w	r2, [r4, #526]	@ 0x20e
 80041d6:	f8c4 21f8 	str.w	r2, [r4, #504]	@ 0x1f8
 80041da:	2301      	movs	r3, #1
 80041dc:	f8c4 31f4 	str.w	r3, [r4, #500]	@ 0x1f4
 80041e0:	f001 031f 	and.w	r3, r1, #31
 80041e4:	2b01      	cmp	r3, #1
 80041e6:	d00e      	beq.n	8004206 <USBD_LL_SetupStage+0x46>
 80041e8:	2b02      	cmp	r3, #2
 80041ea:	d006      	beq.n	80041fa <USBD_LL_SetupStage+0x3a>
 80041ec:	b98b      	cbnz	r3, 8004212 <USBD_LL_SetupStage+0x52>
 80041ee:	4629      	mov	r1, r5
 80041f0:	4620      	mov	r0, r4
 80041f2:	f001 fb1b 	bl	800582c <USBD_StdDevReq>
 80041f6:	2000      	movs	r0, #0
 80041f8:	bd38      	pop	{r3, r4, r5, pc}
 80041fa:	4629      	mov	r1, r5
 80041fc:	4620      	mov	r0, r4
 80041fe:	f001 fc81 	bl	8005b04 <USBD_StdEPReq>
 8004202:	2000      	movs	r0, #0
 8004204:	bd38      	pop	{r3, r4, r5, pc}
 8004206:	4629      	mov	r1, r5
 8004208:	4620      	mov	r0, r4
 800420a:	f001 fc5d 	bl	8005ac8 <USBD_StdItfReq>
 800420e:	2000      	movs	r0, #0
 8004210:	bd38      	pop	{r3, r4, r5, pc}
 8004212:	f001 0180 	and.w	r1, r1, #128	@ 0x80
 8004216:	4620      	mov	r0, r4
 8004218:	f7ff fc16 	bl	8003a48 <USBD_LL_StallEP>
 800421c:	2000      	movs	r0, #0
 800421e:	bd38      	pop	{r3, r4, r5, pc}

08004220 <USBD_LL_DataOutStage>:
 8004220:	b510      	push	{r4, lr}
 8004222:	4604      	mov	r4, r0
 8004224:	b931      	cbnz	r1, 8004234 <USBD_LL_DataOutStage+0x14>
 8004226:	4613      	mov	r3, r2
 8004228:	f8d0 21f4 	ldr.w	r2, [r0, #500]	@ 0x1f4
 800422c:	2a03      	cmp	r2, #3
 800422e:	d00d      	beq.n	800424c <USBD_LL_DataOutStage+0x2c>
 8004230:	2000      	movs	r0, #0
 8004232:	bd10      	pop	{r4, pc}
 8004234:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8004238:	699b      	ldr	r3, [r3, #24]
 800423a:	2b00      	cmp	r3, #0
 800423c:	d0f8      	beq.n	8004230 <USBD_LL_DataOutStage+0x10>
 800423e:	f890 21fc 	ldrb.w	r2, [r0, #508]	@ 0x1fc
 8004242:	2a03      	cmp	r2, #3
 8004244:	d1f4      	bne.n	8004230 <USBD_LL_DataOutStage+0x10>
 8004246:	4798      	blx	r3
 8004248:	2000      	movs	r0, #0
 800424a:	bd10      	pop	{r4, pc}
 800424c:	e9d0 1243 	ldrd	r1, r2, [r0, #268]	@ 0x10c
 8004250:	4291      	cmp	r1, r2
 8004252:	d80d      	bhi.n	8004270 <USBD_LL_DataOutStage+0x50>
 8004254:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8004258:	691b      	ldr	r3, [r3, #16]
 800425a:	b123      	cbz	r3, 8004266 <USBD_LL_DataOutStage+0x46>
 800425c:	f890 21fc 	ldrb.w	r2, [r0, #508]	@ 0x1fc
 8004260:	2a03      	cmp	r2, #3
 8004262:	d100      	bne.n	8004266 <USBD_LL_DataOutStage+0x46>
 8004264:	4798      	blx	r3
 8004266:	4620      	mov	r0, r4
 8004268:	f7fc ff44 	bl	80010f4 <USBD_CtlSendStatus>
 800426c:	2000      	movs	r0, #0
 800426e:	bd10      	pop	{r4, pc}
 8004270:	1a89      	subs	r1, r1, r2
 8004272:	428a      	cmp	r2, r1
 8004274:	bf28      	it	cs
 8004276:	460a      	movcs	r2, r1
 8004278:	f8c0 110c 	str.w	r1, [r0, #268]	@ 0x10c
 800427c:	b292      	uxth	r2, r2
 800427e:	4619      	mov	r1, r3
 8004280:	f7fc ff30 	bl	80010e4 <USBD_CtlContinueRx>
 8004284:	e7d4      	b.n	8004230 <USBD_LL_DataOutStage+0x10>
 8004286:	bf00      	nop

08004288 <USBD_LL_DataInStage>:
 8004288:	b570      	push	{r4, r5, r6, lr}
 800428a:	4604      	mov	r4, r0
 800428c:	b951      	cbnz	r1, 80042a4 <USBD_LL_DataInStage+0x1c>
 800428e:	4613      	mov	r3, r2
 8004290:	f8d0 21f4 	ldr.w	r2, [r0, #500]	@ 0x1f4
 8004294:	2a02      	cmp	r2, #2
 8004296:	d016      	beq.n	80042c6 <USBD_LL_DataInStage+0x3e>
 8004298:	f894 3200 	ldrb.w	r3, [r4, #512]	@ 0x200
 800429c:	2b01      	cmp	r3, #1
 800429e:	d00d      	beq.n	80042bc <USBD_LL_DataInStage+0x34>
 80042a0:	2000      	movs	r0, #0
 80042a2:	bd70      	pop	{r4, r5, r6, pc}
 80042a4:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80042a8:	695b      	ldr	r3, [r3, #20]
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d0f8      	beq.n	80042a0 <USBD_LL_DataInStage+0x18>
 80042ae:	f890 21fc 	ldrb.w	r2, [r0, #508]	@ 0x1fc
 80042b2:	2a03      	cmp	r2, #3
 80042b4:	d1f4      	bne.n	80042a0 <USBD_LL_DataInStage+0x18>
 80042b6:	4798      	blx	r3
 80042b8:	2000      	movs	r0, #0
 80042ba:	bd70      	pop	{r4, r5, r6, pc}
 80042bc:	2300      	movs	r3, #0
 80042be:	f884 3200 	strb.w	r3, [r4, #512]	@ 0x200
 80042c2:	2000      	movs	r0, #0
 80042c4:	bd70      	pop	{r4, r5, r6, pc}
 80042c6:	e9d0 2607 	ldrd	r2, r6, [r0, #28]
 80042ca:	42b2      	cmp	r2, r6
 80042cc:	d821      	bhi.n	8004312 <USBD_LL_DataInStage+0x8a>
 80042ce:	6983      	ldr	r3, [r0, #24]
 80042d0:	fbb3 f5f6 	udiv	r5, r3, r6
 80042d4:	fb06 3515 	mls	r5, r6, r5, r3
 80042d8:	b95d      	cbnz	r5, 80042f2 <USBD_LL_DataInStage+0x6a>
 80042da:	429e      	cmp	r6, r3
 80042dc:	d809      	bhi.n	80042f2 <USBD_LL_DataInStage+0x6a>
 80042de:	f8d0 21f8 	ldr.w	r2, [r0, #504]	@ 0x1f8
 80042e2:	4293      	cmp	r3, r2
 80042e4:	d205      	bcs.n	80042f2 <USBD_LL_DataInStage+0x6a>
 80042e6:	462a      	mov	r2, r5
 80042e8:	f7fc fee6 	bl	80010b8 <USBD_CtlContinueSendData>
 80042ec:	f8c4 51f8 	str.w	r5, [r4, #504]	@ 0x1f8
 80042f0:	e016      	b.n	8004320 <USBD_LL_DataInStage+0x98>
 80042f2:	f8d4 3214 	ldr.w	r3, [r4, #532]	@ 0x214
 80042f6:	68db      	ldr	r3, [r3, #12]
 80042f8:	b11b      	cbz	r3, 8004302 <USBD_LL_DataInStage+0x7a>
 80042fa:	f894 21fc 	ldrb.w	r2, [r4, #508]	@ 0x1fc
 80042fe:	2a03      	cmp	r2, #3
 8004300:	d015      	beq.n	800432e <USBD_LL_DataInStage+0xa6>
 8004302:	4620      	mov	r0, r4
 8004304:	f7fc ff02 	bl	800110c <USBD_CtlReceiveStatus>
 8004308:	f894 3200 	ldrb.w	r3, [r4, #512]	@ 0x200
 800430c:	2b01      	cmp	r3, #1
 800430e:	d1c7      	bne.n	80042a0 <USBD_LL_DataInStage+0x18>
 8004310:	e7d4      	b.n	80042bc <USBD_LL_DataInStage+0x34>
 8004312:	1b92      	subs	r2, r2, r6
 8004314:	460d      	mov	r5, r1
 8004316:	61c2      	str	r2, [r0, #28]
 8004318:	4619      	mov	r1, r3
 800431a:	b292      	uxth	r2, r2
 800431c:	f7fc fecc 	bl	80010b8 <USBD_CtlContinueSendData>
 8004320:	462b      	mov	r3, r5
 8004322:	462a      	mov	r2, r5
 8004324:	4629      	mov	r1, r5
 8004326:	4620      	mov	r0, r4
 8004328:	f7ff fbd2 	bl	8003ad0 <USBD_LL_PrepareReceive>
 800432c:	e7b4      	b.n	8004298 <USBD_LL_DataInStage+0x10>
 800432e:	4620      	mov	r0, r4
 8004330:	4798      	blx	r3
 8004332:	e7e6      	b.n	8004302 <USBD_LL_DataInStage+0x7a>

08004334 <USBD_LL_Reset>:
 8004334:	b538      	push	{r3, r4, r5, lr}
 8004336:	2200      	movs	r2, #0
 8004338:	4604      	mov	r4, r0
 800433a:	4611      	mov	r1, r2
 800433c:	2540      	movs	r5, #64	@ 0x40
 800433e:	2340      	movs	r3, #64	@ 0x40
 8004340:	f7ff fb68 	bl	8003a14 <USBD_LL_OpenEP>
 8004344:	462b      	mov	r3, r5
 8004346:	2200      	movs	r2, #0
 8004348:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
 800434c:	2180      	movs	r1, #128	@ 0x80
 800434e:	4620      	mov	r0, r4
 8004350:	f7ff fb60 	bl	8003a14 <USBD_LL_OpenEP>
 8004354:	f8d4 3218 	ldr.w	r3, [r4, #536]	@ 0x218
 8004358:	6225      	str	r5, [r4, #32]
 800435a:	2201      	movs	r2, #1
 800435c:	f884 21fc 	strb.w	r2, [r4, #508]	@ 0x1fc
 8004360:	b12b      	cbz	r3, 800436e <USBD_LL_Reset+0x3a>
 8004362:	f8d4 3214 	ldr.w	r3, [r4, #532]	@ 0x214
 8004366:	7921      	ldrb	r1, [r4, #4]
 8004368:	685b      	ldr	r3, [r3, #4]
 800436a:	4620      	mov	r0, r4
 800436c:	4798      	blx	r3
 800436e:	2000      	movs	r0, #0
 8004370:	bd38      	pop	{r3, r4, r5, pc}
 8004372:	bf00      	nop

08004374 <USBD_LL_SetSpeed>:
 8004374:	7401      	strb	r1, [r0, #16]
 8004376:	2000      	movs	r0, #0
 8004378:	4770      	bx	lr
 800437a:	bf00      	nop

0800437c <USBD_LL_Suspend>:
 800437c:	f890 21fc 	ldrb.w	r2, [r0, #508]	@ 0x1fc
 8004380:	f880 21fd 	strb.w	r2, [r0, #509]	@ 0x1fd
 8004384:	2304      	movs	r3, #4
 8004386:	f880 31fc 	strb.w	r3, [r0, #508]	@ 0x1fc
 800438a:	2000      	movs	r0, #0
 800438c:	4770      	bx	lr
 800438e:	bf00      	nop

08004390 <USBD_LL_Resume>:
 8004390:	4603      	mov	r3, r0
 8004392:	2000      	movs	r0, #0
 8004394:	f893 21fd 	ldrb.w	r2, [r3, #509]	@ 0x1fd
 8004398:	f883 21fc 	strb.w	r2, [r3, #508]	@ 0x1fc
 800439c:	4770      	bx	lr
 800439e:	bf00      	nop

080043a0 <USBD_LL_SOF>:
 80043a0:	f890 21fc 	ldrb.w	r2, [r0, #508]	@ 0x1fc
 80043a4:	2a03      	cmp	r2, #3
 80043a6:	d001      	beq.n	80043ac <USBD_LL_SOF+0xc>
 80043a8:	2000      	movs	r0, #0
 80043aa:	4770      	bx	lr
 80043ac:	b508      	push	{r3, lr}
 80043ae:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80043b2:	69db      	ldr	r3, [r3, #28]
 80043b4:	b103      	cbz	r3, 80043b8 <USBD_LL_SOF+0x18>
 80043b6:	4798      	blx	r3
 80043b8:	2000      	movs	r0, #0
 80043ba:	bd08      	pop	{r3, pc}

080043bc <USBD_LL_IsoINIncomplete>:
 80043bc:	2000      	movs	r0, #0
 80043be:	4770      	bx	lr

080043c0 <USBD_LL_IsoOUTIncomplete>:
 80043c0:	2000      	movs	r0, #0
 80043c2:	4770      	bx	lr

080043c4 <USBD_LL_DevConnected>:
 80043c4:	2000      	movs	r0, #0
 80043c6:	4770      	bx	lr

080043c8 <USBD_LL_DevDisconnected>:
 80043c8:	b508      	push	{r3, lr}
 80043ca:	f8d0 2214 	ldr.w	r2, [r0, #532]	@ 0x214
 80043ce:	2101      	movs	r1, #1
 80043d0:	f880 11fc 	strb.w	r1, [r0, #508]	@ 0x1fc
 80043d4:	6852      	ldr	r2, [r2, #4]
 80043d6:	7901      	ldrb	r1, [r0, #4]
 80043d8:	4790      	blx	r2
 80043da:	2000      	movs	r0, #0
 80043dc:	bd08      	pop	{r3, pc}
 80043de:	bf00      	nop

080043e0 <HAL_DMA_Init>:
 80043e0:	b538      	push	{r3, r4, r5, lr}
 80043e2:	4604      	mov	r4, r0
 80043e4:	f001 fcfa 	bl	8005ddc <HAL_GetTick>
 80043e8:	2c00      	cmp	r4, #0
 80043ea:	d06b      	beq.n	80044c4 <HAL_DMA_Init+0xe4>
 80043ec:	6823      	ldr	r3, [r4, #0]
 80043ee:	2202      	movs	r2, #2
 80043f0:	2100      	movs	r1, #0
 80043f2:	f884 1034 	strb.w	r1, [r4, #52]	@ 0x34
 80043f6:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
 80043fa:	681a      	ldr	r2, [r3, #0]
 80043fc:	f022 0201 	bic.w	r2, r2, #1
 8004400:	4605      	mov	r5, r0
 8004402:	601a      	str	r2, [r3, #0]
 8004404:	e005      	b.n	8004412 <HAL_DMA_Init+0x32>
 8004406:	f001 fce9 	bl	8005ddc <HAL_GetTick>
 800440a:	1b43      	subs	r3, r0, r5
 800440c:	2b05      	cmp	r3, #5
 800440e:	d837      	bhi.n	8004480 <HAL_DMA_Init+0xa0>
 8004410:	6823      	ldr	r3, [r4, #0]
 8004412:	681a      	ldr	r2, [r3, #0]
 8004414:	07d1      	lsls	r1, r2, #31
 8004416:	d4f6      	bmi.n	8004406 <HAL_DMA_Init+0x26>
 8004418:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800441c:	68e1      	ldr	r1, [r4, #12]
 800441e:	4302      	orrs	r2, r0
 8004420:	430a      	orrs	r2, r1
 8004422:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
 8004426:	69a0      	ldr	r0, [r4, #24]
 8004428:	432a      	orrs	r2, r5
 800442a:	430a      	orrs	r2, r1
 800442c:	69e1      	ldr	r1, [r4, #28]
 800442e:	681d      	ldr	r5, [r3, #0]
 8004430:	4302      	orrs	r2, r0
 8004432:	430a      	orrs	r2, r1
 8004434:	4931      	ldr	r1, [pc, #196]	@ (80044fc <HAL_DMA_Init+0x11c>)
 8004436:	4029      	ands	r1, r5
 8004438:	6a25      	ldr	r5, [r4, #32]
 800443a:	432a      	orrs	r2, r5
 800443c:	430a      	orrs	r2, r1
 800443e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8004440:	2904      	cmp	r1, #4
 8004442:	d024      	beq.n	800448e <HAL_DMA_Init+0xae>
 8004444:	601a      	str	r2, [r3, #0]
 8004446:	695a      	ldr	r2, [r3, #20]
 8004448:	f022 0207 	bic.w	r2, r2, #7
 800444c:	4311      	orrs	r1, r2
 800444e:	b2d8      	uxtb	r0, r3
 8004450:	4a2b      	ldr	r2, [pc, #172]	@ (8004500 <HAL_DMA_Init+0x120>)
 8004452:	6159      	str	r1, [r3, #20]
 8004454:	3810      	subs	r0, #16
 8004456:	fba2 5200 	umull	r5, r2, r2, r0
 800445a:	0912      	lsrs	r2, r2, #4
 800445c:	4929      	ldr	r1, [pc, #164]	@ (8004504 <HAL_DMA_Init+0x124>)
 800445e:	f36f 0309 	bfc	r3, #0, #10
 8004462:	5c89      	ldrb	r1, [r1, r2]
 8004464:	65e1      	str	r1, [r4, #92]	@ 0x5c
 8004466:	285f      	cmp	r0, #95	@ 0x5f
 8004468:	bf88      	it	hi
 800446a:	3304      	addhi	r3, #4
 800446c:	223f      	movs	r2, #63	@ 0x3f
 800446e:	408a      	lsls	r2, r1
 8004470:	65a3      	str	r3, [r4, #88]	@ 0x58
 8004472:	2000      	movs	r0, #0
 8004474:	609a      	str	r2, [r3, #8]
 8004476:	2301      	movs	r3, #1
 8004478:	6560      	str	r0, [r4, #84]	@ 0x54
 800447a:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 800447e:	bd38      	pop	{r3, r4, r5, pc}
 8004480:	2303      	movs	r3, #3
 8004482:	2220      	movs	r2, #32
 8004484:	6562      	str	r2, [r4, #84]	@ 0x54
 8004486:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 800448a:	4618      	mov	r0, r3
 800448c:	bd38      	pop	{r3, r4, r5, pc}
 800448e:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	@ 0x2c
 8004492:	4329      	orrs	r1, r5
 8004494:	4311      	orrs	r1, r2
 8004496:	6019      	str	r1, [r3, #0]
 8004498:	6959      	ldr	r1, [r3, #20]
 800449a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800449c:	f021 0107 	bic.w	r1, r1, #7
 80044a0:	4311      	orrs	r1, r2
 80044a2:	f041 0104 	orr.w	r1, r1, #4
 80044a6:	2d00      	cmp	r5, #0
 80044a8:	d0d1      	beq.n	800444e <HAL_DMA_Init+0x6e>
 80044aa:	b968      	cbnz	r0, 80044c8 <HAL_DMA_Init+0xe8>
 80044ac:	2a01      	cmp	r2, #1
 80044ae:	d021      	beq.n	80044f4 <HAL_DMA_Init+0x114>
 80044b0:	f032 0202 	bics.w	r2, r2, #2
 80044b4:	d1cb      	bne.n	800444e <HAL_DMA_Init+0x6e>
 80044b6:	01ea      	lsls	r2, r5, #7
 80044b8:	d5c9      	bpl.n	800444e <HAL_DMA_Init+0x6e>
 80044ba:	2240      	movs	r2, #64	@ 0x40
 80044bc:	2301      	movs	r3, #1
 80044be:	6562      	str	r2, [r4, #84]	@ 0x54
 80044c0:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 80044c4:	2001      	movs	r0, #1
 80044c6:	bd38      	pop	{r3, r4, r5, pc}
 80044c8:	f5b0 5f00 	cmp.w	r0, #8192	@ 0x2000
 80044cc:	d004      	beq.n	80044d8 <HAL_DMA_Init+0xf8>
 80044ce:	2a02      	cmp	r2, #2
 80044d0:	d9f3      	bls.n	80044ba <HAL_DMA_Init+0xda>
 80044d2:	2a03      	cmp	r2, #3
 80044d4:	d0ef      	beq.n	80044b6 <HAL_DMA_Init+0xd6>
 80044d6:	e7ba      	b.n	800444e <HAL_DMA_Init+0x6e>
 80044d8:	2a03      	cmp	r2, #3
 80044da:	d8b8      	bhi.n	800444e <HAL_DMA_Init+0x6e>
 80044dc:	a001      	add	r0, pc, #4	@ (adr r0, 80044e4 <HAL_DMA_Init+0x104>)
 80044de:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 80044e2:	bf00      	nop
 80044e4:	080044bb 	.word	0x080044bb
 80044e8:	080044b7 	.word	0x080044b7
 80044ec:	080044bb 	.word	0x080044bb
 80044f0:	080044f5 	.word	0x080044f5
 80044f4:	f1b5 7fc0 	cmp.w	r5, #25165824	@ 0x1800000
 80044f8:	d1a9      	bne.n	800444e <HAL_DMA_Init+0x6e>
 80044fa:	e7de      	b.n	80044ba <HAL_DMA_Init+0xda>
 80044fc:	f010803f 	.word	0xf010803f
 8004500:	aaaaaaab 	.word	0xaaaaaaab
 8004504:	0802abd4 	.word	0x0802abd4

08004508 <HAL_DMA_DeInit>:
 8004508:	2800      	cmp	r0, #0
 800450a:	d02f      	beq.n	800456c <HAL_DMA_DeInit+0x64>
 800450c:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8004510:	2b02      	cmp	r3, #2
 8004512:	4602      	mov	r2, r0
 8004514:	b2d8      	uxtb	r0, r3
 8004516:	d028      	beq.n	800456a <HAL_DMA_DeInit+0x62>
 8004518:	6813      	ldr	r3, [r2, #0]
 800451a:	4915      	ldr	r1, [pc, #84]	@ (8004570 <HAL_DMA_DeInit+0x68>)
 800451c:	b2d8      	uxtb	r0, r3
 800451e:	3810      	subs	r0, #16
 8004520:	b430      	push	{r4, r5}
 8004522:	fba1 4100 	umull	r4, r1, r1, r0
 8004526:	0909      	lsrs	r1, r1, #4
 8004528:	681c      	ldr	r4, [r3, #0]
 800452a:	4d12      	ldr	r5, [pc, #72]	@ (8004574 <HAL_DMA_DeInit+0x6c>)
 800452c:	f024 0401 	bic.w	r4, r4, #1
 8004530:	5c6d      	ldrb	r5, [r5, r1]
 8004532:	601c      	str	r4, [r3, #0]
 8004534:	2100      	movs	r1, #0
 8004536:	6019      	str	r1, [r3, #0]
 8004538:	6059      	str	r1, [r3, #4]
 800453a:	6099      	str	r1, [r3, #8]
 800453c:	60d9      	str	r1, [r3, #12]
 800453e:	6119      	str	r1, [r3, #16]
 8004540:	2121      	movs	r1, #33	@ 0x21
 8004542:	6159      	str	r1, [r3, #20]
 8004544:	285f      	cmp	r0, #95	@ 0x5f
 8004546:	f36f 0309 	bfc	r3, #0, #10
 800454a:	bf88      	it	hi
 800454c:	3304      	addhi	r3, #4
 800454e:	203f      	movs	r0, #63	@ 0x3f
 8004550:	2100      	movs	r1, #0
 8004552:	40a8      	lsls	r0, r5
 8004554:	65d5      	str	r5, [r2, #92]	@ 0x5c
 8004556:	6593      	str	r3, [r2, #88]	@ 0x58
 8004558:	6098      	str	r0, [r3, #8]
 800455a:	6551      	str	r1, [r2, #84]	@ 0x54
 800455c:	f882 1034 	strb.w	r1, [r2, #52]	@ 0x34
 8004560:	f882 1035 	strb.w	r1, [r2, #53]	@ 0x35
 8004564:	4608      	mov	r0, r1
 8004566:	bc30      	pop	{r4, r5}
 8004568:	4770      	bx	lr
 800456a:	4770      	bx	lr
 800456c:	2001      	movs	r0, #1
 800456e:	4770      	bx	lr
 8004570:	aaaaaaab 	.word	0xaaaaaaab
 8004574:	0802abd4 	.word	0x0802abd4

08004578 <HAL_DMA_Start_IT>:
 8004578:	b470      	push	{r4, r5, r6}
 800457a:	f890 4034 	ldrb.w	r4, [r0, #52]	@ 0x34
 800457e:	6d85      	ldr	r5, [r0, #88]	@ 0x58
 8004580:	2c01      	cmp	r4, #1
 8004582:	d00a      	beq.n	800459a <HAL_DMA_Start_IT+0x22>
 8004584:	f890 4035 	ldrb.w	r4, [r0, #53]	@ 0x35
 8004588:	f04f 0c01 	mov.w	ip, #1
 800458c:	4564      	cmp	r4, ip
 800458e:	f880 c034 	strb.w	ip, [r0, #52]	@ 0x34
 8004592:	d005      	beq.n	80045a0 <HAL_DMA_Start_IT+0x28>
 8004594:	2300      	movs	r3, #0
 8004596:	f880 3034 	strb.w	r3, [r0, #52]	@ 0x34
 800459a:	2002      	movs	r0, #2
 800459c:	bc70      	pop	{r4, r5, r6}
 800459e:	4770      	bx	lr
 80045a0:	2602      	movs	r6, #2
 80045a2:	f880 6035 	strb.w	r6, [r0, #53]	@ 0x35
 80045a6:	6804      	ldr	r4, [r0, #0]
 80045a8:	2600      	movs	r6, #0
 80045aa:	6546      	str	r6, [r0, #84]	@ 0x54
 80045ac:	6826      	ldr	r6, [r4, #0]
 80045ae:	f426 2680 	bic.w	r6, r6, #262144	@ 0x40000
 80045b2:	6026      	str	r6, [r4, #0]
 80045b4:	6063      	str	r3, [r4, #4]
 80045b6:	6883      	ldr	r3, [r0, #8]
 80045b8:	2b40      	cmp	r3, #64	@ 0x40
 80045ba:	bf0e      	itee	eq
 80045bc:	60a2      	streq	r2, [r4, #8]
 80045be:	60a1      	strne	r1, [r4, #8]
 80045c0:	60e2      	strne	r2, [r4, #12]
 80045c2:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
 80045c4:	bf08      	it	eq
 80045c6:	60e1      	streq	r1, [r4, #12]
 80045c8:	233f      	movs	r3, #63	@ 0x3f
 80045ca:	4093      	lsls	r3, r2
 80045cc:	60ab      	str	r3, [r5, #8]
 80045ce:	6823      	ldr	r3, [r4, #0]
 80045d0:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80045d2:	f043 0316 	orr.w	r3, r3, #22
 80045d6:	6023      	str	r3, [r4, #0]
 80045d8:	6963      	ldr	r3, [r4, #20]
 80045da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80045de:	6163      	str	r3, [r4, #20]
 80045e0:	b11a      	cbz	r2, 80045ea <HAL_DMA_Start_IT+0x72>
 80045e2:	6823      	ldr	r3, [r4, #0]
 80045e4:	f043 0308 	orr.w	r3, r3, #8
 80045e8:	6023      	str	r3, [r4, #0]
 80045ea:	6823      	ldr	r3, [r4, #0]
 80045ec:	f043 0301 	orr.w	r3, r3, #1
 80045f0:	2000      	movs	r0, #0
 80045f2:	6023      	str	r3, [r4, #0]
 80045f4:	bc70      	pop	{r4, r5, r6}
 80045f6:	4770      	bx	lr

080045f8 <HAL_DMA_Abort>:
 80045f8:	b570      	push	{r4, r5, r6, lr}
 80045fa:	4604      	mov	r4, r0
 80045fc:	6d86      	ldr	r6, [r0, #88]	@ 0x58
 80045fe:	f001 fbed 	bl	8005ddc <HAL_GetTick>
 8004602:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 8004606:	2b02      	cmp	r3, #2
 8004608:	d006      	beq.n	8004618 <HAL_DMA_Abort+0x20>
 800460a:	2300      	movs	r3, #0
 800460c:	2280      	movs	r2, #128	@ 0x80
 800460e:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 8004612:	6562      	str	r2, [r4, #84]	@ 0x54
 8004614:	2001      	movs	r0, #1
 8004616:	bd70      	pop	{r4, r5, r6, pc}
 8004618:	6823      	ldr	r3, [r4, #0]
 800461a:	681a      	ldr	r2, [r3, #0]
 800461c:	f022 0216 	bic.w	r2, r2, #22
 8004620:	601a      	str	r2, [r3, #0]
 8004622:	695a      	ldr	r2, [r3, #20]
 8004624:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004628:	615a      	str	r2, [r3, #20]
 800462a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800462c:	4605      	mov	r5, r0
 800462e:	b332      	cbz	r2, 800467e <HAL_DMA_Abort+0x86>
 8004630:	681a      	ldr	r2, [r3, #0]
 8004632:	f022 0208 	bic.w	r2, r2, #8
 8004636:	601a      	str	r2, [r3, #0]
 8004638:	681a      	ldr	r2, [r3, #0]
 800463a:	f022 0201 	bic.w	r2, r2, #1
 800463e:	601a      	str	r2, [r3, #0]
 8004640:	e005      	b.n	800464e <HAL_DMA_Abort+0x56>
 8004642:	f001 fbcb 	bl	8005ddc <HAL_GetTick>
 8004646:	1b43      	subs	r3, r0, r5
 8004648:	2b05      	cmp	r3, #5
 800464a:	d80f      	bhi.n	800466c <HAL_DMA_Abort+0x74>
 800464c:	6823      	ldr	r3, [r4, #0]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	f013 0301 	ands.w	r3, r3, #1
 8004654:	d1f5      	bne.n	8004642 <HAL_DMA_Abort+0x4a>
 8004656:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8004658:	223f      	movs	r2, #63	@ 0x3f
 800465a:	408a      	lsls	r2, r1
 800465c:	2101      	movs	r1, #1
 800465e:	60b2      	str	r2, [r6, #8]
 8004660:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 8004664:	f884 1035 	strb.w	r1, [r4, #53]	@ 0x35
 8004668:	4618      	mov	r0, r3
 800466a:	bd70      	pop	{r4, r5, r6, pc}
 800466c:	2003      	movs	r0, #3
 800466e:	2220      	movs	r2, #32
 8004670:	2300      	movs	r3, #0
 8004672:	6562      	str	r2, [r4, #84]	@ 0x54
 8004674:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 8004678:	f884 0035 	strb.w	r0, [r4, #53]	@ 0x35
 800467c:	bd70      	pop	{r4, r5, r6, pc}
 800467e:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8004680:	2a00      	cmp	r2, #0
 8004682:	d1d5      	bne.n	8004630 <HAL_DMA_Abort+0x38>
 8004684:	e7d8      	b.n	8004638 <HAL_DMA_Abort+0x40>
 8004686:	bf00      	nop

08004688 <HAL_DMA_Abort_IT>:
 8004688:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800468c:	2b02      	cmp	r3, #2
 800468e:	d003      	beq.n	8004698 <HAL_DMA_Abort_IT+0x10>
 8004690:	2380      	movs	r3, #128	@ 0x80
 8004692:	6543      	str	r3, [r0, #84]	@ 0x54
 8004694:	2001      	movs	r0, #1
 8004696:	4770      	bx	lr
 8004698:	6802      	ldr	r2, [r0, #0]
 800469a:	2305      	movs	r3, #5
 800469c:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 80046a0:	6813      	ldr	r3, [r2, #0]
 80046a2:	f023 0301 	bic.w	r3, r3, #1
 80046a6:	2000      	movs	r0, #0
 80046a8:	6013      	str	r3, [r2, #0]
 80046aa:	4770      	bx	lr

080046ac <HAL_DMA_IRQHandler>:
 80046ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80046ae:	b083      	sub	sp, #12
 80046b0:	4a67      	ldr	r2, [pc, #412]	@ (8004850 <HAL_DMA_IRQHandler+0x1a4>)
 80046b2:	6d87      	ldr	r7, [r0, #88]	@ 0x58
 80046b4:	6816      	ldr	r6, [r2, #0]
 80046b6:	2300      	movs	r3, #0
 80046b8:	9301      	str	r3, [sp, #4]
 80046ba:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80046bc:	683d      	ldr	r5, [r7, #0]
 80046be:	2208      	movs	r2, #8
 80046c0:	409a      	lsls	r2, r3
 80046c2:	422a      	tst	r2, r5
 80046c4:	4604      	mov	r4, r0
 80046c6:	d003      	beq.n	80046d0 <HAL_DMA_IRQHandler+0x24>
 80046c8:	6801      	ldr	r1, [r0, #0]
 80046ca:	6808      	ldr	r0, [r1, #0]
 80046cc:	0740      	lsls	r0, r0, #29
 80046ce:	d478      	bmi.n	80047c2 <HAL_DMA_IRQHandler+0x116>
 80046d0:	2201      	movs	r2, #1
 80046d2:	409a      	lsls	r2, r3
 80046d4:	422a      	tst	r2, r5
 80046d6:	d003      	beq.n	80046e0 <HAL_DMA_IRQHandler+0x34>
 80046d8:	6821      	ldr	r1, [r4, #0]
 80046da:	6949      	ldr	r1, [r1, #20]
 80046dc:	0608      	lsls	r0, r1, #24
 80046de:	d46a      	bmi.n	80047b6 <HAL_DMA_IRQHandler+0x10a>
 80046e0:	2204      	movs	r2, #4
 80046e2:	409a      	lsls	r2, r3
 80046e4:	422a      	tst	r2, r5
 80046e6:	d003      	beq.n	80046f0 <HAL_DMA_IRQHandler+0x44>
 80046e8:	6821      	ldr	r1, [r4, #0]
 80046ea:	6809      	ldr	r1, [r1, #0]
 80046ec:	0789      	lsls	r1, r1, #30
 80046ee:	d45c      	bmi.n	80047aa <HAL_DMA_IRQHandler+0xfe>
 80046f0:	2210      	movs	r2, #16
 80046f2:	409a      	lsls	r2, r3
 80046f4:	422a      	tst	r2, r5
 80046f6:	d003      	beq.n	8004700 <HAL_DMA_IRQHandler+0x54>
 80046f8:	6821      	ldr	r1, [r4, #0]
 80046fa:	6808      	ldr	r0, [r1, #0]
 80046fc:	0700      	lsls	r0, r0, #28
 80046fe:	d441      	bmi.n	8004784 <HAL_DMA_IRQHandler+0xd8>
 8004700:	2220      	movs	r2, #32
 8004702:	409a      	lsls	r2, r3
 8004704:	422a      	tst	r2, r5
 8004706:	d014      	beq.n	8004732 <HAL_DMA_IRQHandler+0x86>
 8004708:	6821      	ldr	r1, [r4, #0]
 800470a:	6808      	ldr	r0, [r1, #0]
 800470c:	06c0      	lsls	r0, r0, #27
 800470e:	d510      	bpl.n	8004732 <HAL_DMA_IRQHandler+0x86>
 8004710:	60ba      	str	r2, [r7, #8]
 8004712:	f894 2035 	ldrb.w	r2, [r4, #53]	@ 0x35
 8004716:	2a05      	cmp	r2, #5
 8004718:	d063      	beq.n	80047e2 <HAL_DMA_IRQHandler+0x136>
 800471a:	680b      	ldr	r3, [r1, #0]
 800471c:	f413 2f80 	tst.w	r3, #262144	@ 0x40000
 8004720:	680b      	ldr	r3, [r1, #0]
 8004722:	d07e      	beq.n	8004822 <HAL_DMA_IRQHandler+0x176>
 8004724:	0319      	lsls	r1, r3, #12
 8004726:	f140 8089 	bpl.w	800483c <HAL_DMA_IRQHandler+0x190>
 800472a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800472c:	b10b      	cbz	r3, 8004732 <HAL_DMA_IRQHandler+0x86>
 800472e:	4620      	mov	r0, r4
 8004730:	4798      	blx	r3
 8004732:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8004734:	b323      	cbz	r3, 8004780 <HAL_DMA_IRQHandler+0xd4>
 8004736:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8004738:	07da      	lsls	r2, r3, #31
 800473a:	d51a      	bpl.n	8004772 <HAL_DMA_IRQHandler+0xc6>
 800473c:	6822      	ldr	r2, [r4, #0]
 800473e:	4945      	ldr	r1, [pc, #276]	@ (8004854 <HAL_DMA_IRQHandler+0x1a8>)
 8004740:	2305      	movs	r3, #5
 8004742:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 8004746:	6813      	ldr	r3, [r2, #0]
 8004748:	fba1 1606 	umull	r1, r6, r1, r6
 800474c:	f023 0301 	bic.w	r3, r3, #1
 8004750:	0ab6      	lsrs	r6, r6, #10
 8004752:	6013      	str	r3, [r2, #0]
 8004754:	e002      	b.n	800475c <HAL_DMA_IRQHandler+0xb0>
 8004756:	6813      	ldr	r3, [r2, #0]
 8004758:	07db      	lsls	r3, r3, #31
 800475a:	d504      	bpl.n	8004766 <HAL_DMA_IRQHandler+0xba>
 800475c:	9b01      	ldr	r3, [sp, #4]
 800475e:	3301      	adds	r3, #1
 8004760:	42b3      	cmp	r3, r6
 8004762:	9301      	str	r3, [sp, #4]
 8004764:	d9f7      	bls.n	8004756 <HAL_DMA_IRQHandler+0xaa>
 8004766:	2200      	movs	r2, #0
 8004768:	2301      	movs	r3, #1
 800476a:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
 800476e:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 8004772:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8004774:	b123      	cbz	r3, 8004780 <HAL_DMA_IRQHandler+0xd4>
 8004776:	4620      	mov	r0, r4
 8004778:	b003      	add	sp, #12
 800477a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800477e:	4718      	bx	r3
 8004780:	b003      	add	sp, #12
 8004782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004784:	60ba      	str	r2, [r7, #8]
 8004786:	680a      	ldr	r2, [r1, #0]
 8004788:	f412 2f80 	tst.w	r2, #262144	@ 0x40000
 800478c:	680a      	ldr	r2, [r1, #0]
 800478e:	d122      	bne.n	80047d6 <HAL_DMA_IRQHandler+0x12a>
 8004790:	05d2      	lsls	r2, r2, #23
 8004792:	d403      	bmi.n	800479c <HAL_DMA_IRQHandler+0xf0>
 8004794:	680a      	ldr	r2, [r1, #0]
 8004796:	f022 0208 	bic.w	r2, r2, #8
 800479a:	600a      	str	r2, [r1, #0]
 800479c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800479e:	2a00      	cmp	r2, #0
 80047a0:	d0ae      	beq.n	8004700 <HAL_DMA_IRQHandler+0x54>
 80047a2:	4620      	mov	r0, r4
 80047a4:	4790      	blx	r2
 80047a6:	6de3      	ldr	r3, [r4, #92]	@ 0x5c
 80047a8:	e7aa      	b.n	8004700 <HAL_DMA_IRQHandler+0x54>
 80047aa:	60ba      	str	r2, [r7, #8]
 80047ac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80047ae:	f042 0204 	orr.w	r2, r2, #4
 80047b2:	6562      	str	r2, [r4, #84]	@ 0x54
 80047b4:	e79c      	b.n	80046f0 <HAL_DMA_IRQHandler+0x44>
 80047b6:	60ba      	str	r2, [r7, #8]
 80047b8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80047ba:	f042 0202 	orr.w	r2, r2, #2
 80047be:	6562      	str	r2, [r4, #84]	@ 0x54
 80047c0:	e78e      	b.n	80046e0 <HAL_DMA_IRQHandler+0x34>
 80047c2:	6808      	ldr	r0, [r1, #0]
 80047c4:	f020 0004 	bic.w	r0, r0, #4
 80047c8:	6008      	str	r0, [r1, #0]
 80047ca:	60ba      	str	r2, [r7, #8]
 80047cc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80047ce:	f042 0201 	orr.w	r2, r2, #1
 80047d2:	6562      	str	r2, [r4, #84]	@ 0x54
 80047d4:	e77c      	b.n	80046d0 <HAL_DMA_IRQHandler+0x24>
 80047d6:	0311      	lsls	r1, r2, #12
 80047d8:	d5e0      	bpl.n	800479c <HAL_DMA_IRQHandler+0xf0>
 80047da:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 80047dc:	2a00      	cmp	r2, #0
 80047de:	d1e0      	bne.n	80047a2 <HAL_DMA_IRQHandler+0xf6>
 80047e0:	e78e      	b.n	8004700 <HAL_DMA_IRQHandler+0x54>
 80047e2:	680a      	ldr	r2, [r1, #0]
 80047e4:	f022 0216 	bic.w	r2, r2, #22
 80047e8:	600a      	str	r2, [r1, #0]
 80047ea:	694a      	ldr	r2, [r1, #20]
 80047ec:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80047f0:	614a      	str	r2, [r1, #20]
 80047f2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80047f4:	b33a      	cbz	r2, 8004846 <HAL_DMA_IRQHandler+0x19a>
 80047f6:	680a      	ldr	r2, [r1, #0]
 80047f8:	f022 0208 	bic.w	r2, r2, #8
 80047fc:	600a      	str	r2, [r1, #0]
 80047fe:	223f      	movs	r2, #63	@ 0x3f
 8004800:	fa02 f303 	lsl.w	r3, r2, r3
 8004804:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8004806:	60bb      	str	r3, [r7, #8]
 8004808:	2200      	movs	r2, #0
 800480a:	2301      	movs	r3, #1
 800480c:	f884 2034 	strb.w	r2, [r4, #52]	@ 0x34
 8004810:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
 8004814:	2900      	cmp	r1, #0
 8004816:	d0b3      	beq.n	8004780 <HAL_DMA_IRQHandler+0xd4>
 8004818:	4620      	mov	r0, r4
 800481a:	b003      	add	sp, #12
 800481c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004820:	4708      	bx	r1
 8004822:	f413 7380 	ands.w	r3, r3, #256	@ 0x100
 8004826:	d180      	bne.n	800472a <HAL_DMA_IRQHandler+0x7e>
 8004828:	680a      	ldr	r2, [r1, #0]
 800482a:	f022 0210 	bic.w	r2, r2, #16
 800482e:	600a      	str	r2, [r1, #0]
 8004830:	2201      	movs	r2, #1
 8004832:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
 8004836:	f884 2035 	strb.w	r2, [r4, #53]	@ 0x35
 800483a:	e776      	b.n	800472a <HAL_DMA_IRQHandler+0x7e>
 800483c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800483e:	2b00      	cmp	r3, #0
 8004840:	f47f af75 	bne.w	800472e <HAL_DMA_IRQHandler+0x82>
 8004844:	e775      	b.n	8004732 <HAL_DMA_IRQHandler+0x86>
 8004846:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
 8004848:	2a00      	cmp	r2, #0
 800484a:	d1d4      	bne.n	80047f6 <HAL_DMA_IRQHandler+0x14a>
 800484c:	e7d7      	b.n	80047fe <HAL_DMA_IRQHandler+0x152>
 800484e:	bf00      	nop
 8004850:	200001f4 	.word	0x200001f4
 8004854:	1b4e81b5 	.word	0x1b4e81b5

08004858 <prvInsertBlockIntoFreeList>:
 8004858:	b410      	push	{r4}
 800485a:	4b15      	ldr	r3, [pc, #84]	@ (80048b0 <prvInsertBlockIntoFreeList+0x58>)
 800485c:	461a      	mov	r2, r3
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	4283      	cmp	r3, r0
 8004862:	d3fb      	bcc.n	800485c <prvInsertBlockIntoFreeList+0x4>
 8004864:	6854      	ldr	r4, [r2, #4]
 8004866:	6841      	ldr	r1, [r0, #4]
 8004868:	eb02 0c04 	add.w	ip, r2, r4
 800486c:	4560      	cmp	r0, ip
 800486e:	d013      	beq.n	8004898 <prvInsertBlockIntoFreeList+0x40>
 8004870:	1844      	adds	r4, r0, r1
 8004872:	42a3      	cmp	r3, r4
 8004874:	d006      	beq.n	8004884 <prvInsertBlockIntoFreeList+0x2c>
 8004876:	6003      	str	r3, [r0, #0]
 8004878:	4282      	cmp	r2, r0
 800487a:	bf18      	it	ne
 800487c:	6010      	strne	r0, [r2, #0]
 800487e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004882:	4770      	bx	lr
 8004884:	4c0b      	ldr	r4, [pc, #44]	@ (80048b4 <prvInsertBlockIntoFreeList+0x5c>)
 8004886:	6824      	ldr	r4, [r4, #0]
 8004888:	42a3      	cmp	r3, r4
 800488a:	d0f4      	beq.n	8004876 <prvInsertBlockIntoFreeList+0x1e>
 800488c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004890:	4421      	add	r1, r4
 8004892:	6003      	str	r3, [r0, #0]
 8004894:	6041      	str	r1, [r0, #4]
 8004896:	e7ef      	b.n	8004878 <prvInsertBlockIntoFreeList+0x20>
 8004898:	4421      	add	r1, r4
 800489a:	1850      	adds	r0, r2, r1
 800489c:	4283      	cmp	r3, r0
 800489e:	6051      	str	r1, [r2, #4]
 80048a0:	d1ed      	bne.n	800487e <prvInsertBlockIntoFreeList+0x26>
 80048a2:	4804      	ldr	r0, [pc, #16]	@ (80048b4 <prvInsertBlockIntoFreeList+0x5c>)
 80048a4:	6800      	ldr	r0, [r0, #0]
 80048a6:	4283      	cmp	r3, r0
 80048a8:	d0e9      	beq.n	800487e <prvInsertBlockIntoFreeList+0x26>
 80048aa:	4610      	mov	r0, r2
 80048ac:	e7ee      	b.n	800488c <prvInsertBlockIntoFreeList+0x34>
 80048ae:	bf00      	nop
 80048b0:	20000e30 	.word	0x20000e30
 80048b4:	20000e2c 	.word	0x20000e2c

080048b8 <pvPortMalloc>:
 80048b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048bc:	4e3e      	ldr	r6, [pc, #248]	@ (80049b8 <pvPortMalloc+0x100>)
 80048be:	4604      	mov	r4, r0
 80048c0:	f003 ff8a 	bl	80087d8 <vTaskSuspendAll>
 80048c4:	6833      	ldr	r3, [r6, #0]
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d058      	beq.n	800497c <pvPortMalloc+0xc4>
 80048ca:	4b3c      	ldr	r3, [pc, #240]	@ (80049bc <pvPortMalloc+0x104>)
 80048cc:	681d      	ldr	r5, [r3, #0]
 80048ce:	422c      	tst	r4, r5
 80048d0:	d12e      	bne.n	8004930 <pvPortMalloc+0x78>
 80048d2:	b36c      	cbz	r4, 8004930 <pvPortMalloc+0x78>
 80048d4:	f104 0108 	add.w	r1, r4, #8
 80048d8:	0760      	lsls	r0, r4, #29
 80048da:	bf1c      	itt	ne
 80048dc:	f021 0107 	bicne.w	r1, r1, #7
 80048e0:	3108      	addne	r1, #8
 80048e2:	b329      	cbz	r1, 8004930 <pvPortMalloc+0x78>
 80048e4:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 80049d0 <pvPortMalloc+0x118>
 80048e8:	f8d8 7000 	ldr.w	r7, [r8]
 80048ec:	428f      	cmp	r7, r1
 80048ee:	d31f      	bcc.n	8004930 <pvPortMalloc+0x78>
 80048f0:	4833      	ldr	r0, [pc, #204]	@ (80049c0 <pvPortMalloc+0x108>)
 80048f2:	6804      	ldr	r4, [r0, #0]
 80048f4:	e003      	b.n	80048fe <pvPortMalloc+0x46>
 80048f6:	6823      	ldr	r3, [r4, #0]
 80048f8:	b123      	cbz	r3, 8004904 <pvPortMalloc+0x4c>
 80048fa:	4620      	mov	r0, r4
 80048fc:	461c      	mov	r4, r3
 80048fe:	6862      	ldr	r2, [r4, #4]
 8004900:	428a      	cmp	r2, r1
 8004902:	d3f8      	bcc.n	80048f6 <pvPortMalloc+0x3e>
 8004904:	6833      	ldr	r3, [r6, #0]
 8004906:	42a3      	cmp	r3, r4
 8004908:	d012      	beq.n	8004930 <pvPortMalloc+0x78>
 800490a:	1a53      	subs	r3, r2, r1
 800490c:	6826      	ldr	r6, [r4, #0]
 800490e:	f8d0 9000 	ldr.w	r9, [r0]
 8004912:	6006      	str	r6, [r0, #0]
 8004914:	2b10      	cmp	r3, #16
 8004916:	d916      	bls.n	8004946 <pvPortMalloc+0x8e>
 8004918:	1860      	adds	r0, r4, r1
 800491a:	0742      	lsls	r2, r0, #29
 800491c:	d00e      	beq.n	800493c <pvPortMalloc+0x84>
 800491e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004922:	f383 8811 	msr	BASEPRI, r3
 8004926:	f3bf 8f6f 	isb	sy
 800492a:	f3bf 8f4f 	dsb	sy
 800492e:	e7fe      	b.n	800492e <pvPortMalloc+0x76>
 8004930:	f004 f8a8 	bl	8008a84 <xTaskResumeAll>
 8004934:	2600      	movs	r6, #0
 8004936:	4630      	mov	r0, r6
 8004938:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800493c:	6043      	str	r3, [r0, #4]
 800493e:	6061      	str	r1, [r4, #4]
 8004940:	f7ff ff8a 	bl	8004858 <prvInsertBlockIntoFreeList>
 8004944:	6862      	ldr	r2, [r4, #4]
 8004946:	4b1f      	ldr	r3, [pc, #124]	@ (80049c4 <pvPortMalloc+0x10c>)
 8004948:	6819      	ldr	r1, [r3, #0]
 800494a:	1abf      	subs	r7, r7, r2
 800494c:	428f      	cmp	r7, r1
 800494e:	bf38      	it	cc
 8004950:	601f      	strcc	r7, [r3, #0]
 8004952:	432a      	orrs	r2, r5
 8004954:	2300      	movs	r3, #0
 8004956:	e9c4 3200 	strd	r3, r2, [r4]
 800495a:	f109 0608 	add.w	r6, r9, #8
 800495e:	f8c8 7000 	str.w	r7, [r8]
 8004962:	f004 f88f 	bl	8008a84 <xTaskResumeAll>
 8004966:	0773      	lsls	r3, r6, #29
 8004968:	d0e5      	beq.n	8004936 <pvPortMalloc+0x7e>
 800496a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800496e:	f383 8811 	msr	BASEPRI, r3
 8004972:	f3bf 8f6f 	isb	sy
 8004976:	f3bf 8f4f 	dsb	sy
 800497a:	e7fe      	b.n	800497a <pvPortMalloc+0xc2>
 800497c:	4b12      	ldr	r3, [pc, #72]	@ (80049c8 <pvPortMalloc+0x110>)
 800497e:	4a13      	ldr	r2, [pc, #76]	@ (80049cc <pvPortMalloc+0x114>)
 8004980:	4910      	ldr	r1, [pc, #64]	@ (80049c4 <pvPortMalloc+0x10c>)
 8004982:	4f0e      	ldr	r7, [pc, #56]	@ (80049bc <pvPortMalloc+0x104>)
 8004984:	075d      	lsls	r5, r3, #29
 8004986:	bf18      	it	ne
 8004988:	3307      	addne	r3, #7
 800498a:	4d0d      	ldr	r5, [pc, #52]	@ (80049c0 <pvPortMalloc+0x108>)
 800498c:	f022 0207 	bic.w	r2, r2, #7
 8004990:	bf18      	it	ne
 8004992:	f023 0307 	bicne.w	r3, r3, #7
 8004996:	602b      	str	r3, [r5, #0]
 8004998:	4618      	mov	r0, r3
 800499a:	1ad3      	subs	r3, r2, r3
 800499c:	600b      	str	r3, [r1, #0]
 800499e:	490c      	ldr	r1, [pc, #48]	@ (80049d0 <pvPortMalloc+0x118>)
 80049a0:	6032      	str	r2, [r6, #0]
 80049a2:	600b      	str	r3, [r1, #0]
 80049a4:	2100      	movs	r1, #0
 80049a6:	6069      	str	r1, [r5, #4]
 80049a8:	f04f 4500 	mov.w	r5, #2147483648	@ 0x80000000
 80049ac:	e9c2 1100 	strd	r1, r1, [r2]
 80049b0:	603d      	str	r5, [r7, #0]
 80049b2:	e9c0 2300 	strd	r2, r3, [r0]
 80049b6:	e78a      	b.n	80048ce <pvPortMalloc+0x16>
 80049b8:	20000e2c 	.word	0x20000e2c
 80049bc:	20000e20 	.word	0x20000e20
 80049c0:	20000e30 	.word	0x20000e30
 80049c4:	20000e24 	.word	0x20000e24
 80049c8:	10000000 	.word	0x10000000
 80049cc:	1000fff8 	.word	0x1000fff8
 80049d0:	20000e28 	.word	0x20000e28

080049d4 <vPortFree>:
 80049d4:	b1d0      	cbz	r0, 8004a0c <vPortFree+0x38>
 80049d6:	4a1a      	ldr	r2, [pc, #104]	@ (8004a40 <vPortFree+0x6c>)
 80049d8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80049dc:	6812      	ldr	r2, [r2, #0]
 80049de:	4213      	tst	r3, r2
 80049e0:	d00b      	beq.n	80049fa <vPortFree+0x26>
 80049e2:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80049e6:	b191      	cbz	r1, 8004a0e <vPortFree+0x3a>
 80049e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049ec:	f383 8811 	msr	BASEPRI, r3
 80049f0:	f3bf 8f6f 	isb	sy
 80049f4:	f3bf 8f4f 	dsb	sy
 80049f8:	e7fe      	b.n	80049f8 <vPortFree+0x24>
 80049fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049fe:	f383 8811 	msr	BASEPRI, r3
 8004a02:	f3bf 8f6f 	isb	sy
 8004a06:	f3bf 8f4f 	dsb	sy
 8004a0a:	e7fe      	b.n	8004a0a <vPortFree+0x36>
 8004a0c:	4770      	bx	lr
 8004a0e:	b500      	push	{lr}
 8004a10:	ea23 0302 	bic.w	r3, r3, r2
 8004a14:	b083      	sub	sp, #12
 8004a16:	f840 3c04 	str.w	r3, [r0, #-4]
 8004a1a:	9001      	str	r0, [sp, #4]
 8004a1c:	f003 fedc 	bl	80087d8 <vTaskSuspendAll>
 8004a20:	4a08      	ldr	r2, [pc, #32]	@ (8004a44 <vPortFree+0x70>)
 8004a22:	9801      	ldr	r0, [sp, #4]
 8004a24:	6811      	ldr	r1, [r2, #0]
 8004a26:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8004a2a:	3808      	subs	r0, #8
 8004a2c:	440b      	add	r3, r1
 8004a2e:	6013      	str	r3, [r2, #0]
 8004a30:	f7ff ff12 	bl	8004858 <prvInsertBlockIntoFreeList>
 8004a34:	b003      	add	sp, #12
 8004a36:	f85d eb04 	ldr.w	lr, [sp], #4
 8004a3a:	f004 b823 	b.w	8008a84 <xTaskResumeAll>
 8004a3e:	bf00      	nop
 8004a40:	20000e20 	.word	0x20000e20
 8004a44:	20000e28 	.word	0x20000e28

08004a48 <xPortGetMinimumEverFreeHeapSize>:
 8004a48:	4b01      	ldr	r3, [pc, #4]	@ (8004a50 <xPortGetMinimumEverFreeHeapSize+0x8>)
 8004a4a:	6818      	ldr	r0, [r3, #0]
 8004a4c:	4770      	bx	lr
 8004a4e:	bf00      	nop
 8004a50:	20000e24 	.word	0x20000e24

08004a54 <CDC_DeInit_FS>:
 8004a54:	2000      	movs	r0, #0
 8004a56:	4770      	bx	lr

08004a58 <CDC_Receive_FS>:
 8004a58:	b508      	push	{r3, lr}
 8004a5a:	6809      	ldr	r1, [r1, #0]
 8004a5c:	f01c fd36 	bl	80214cc <usb_rx_process_packet>
 8004a60:	2000      	movs	r0, #0
 8004a62:	bd08      	pop	{r3, pc}

08004a64 <CDC_Init_FS>:
 8004a64:	b508      	push	{r3, lr}
 8004a66:	490c      	ldr	r1, [pc, #48]	@ (8004a98 <CDC_Init_FS+0x34>)
 8004a68:	480c      	ldr	r0, [pc, #48]	@ (8004a9c <CDC_Init_FS+0x38>)
 8004a6a:	2301      	movs	r3, #1
 8004a6c:	2200      	movs	r2, #0
 8004a6e:	f003 f9e1 	bl	8007e34 <USBD_CDC_SetTxBuffer>
 8004a72:	490b      	ldr	r1, [pc, #44]	@ (8004aa0 <CDC_Init_FS+0x3c>)
 8004a74:	4809      	ldr	r0, [pc, #36]	@ (8004a9c <CDC_Init_FS+0x38>)
 8004a76:	2201      	movs	r2, #1
 8004a78:	f003 f9f0 	bl	8007e5c <USBD_CDC_SetRxBuffer>
 8004a7c:	2303      	movs	r3, #3
 8004a7e:	4909      	ldr	r1, [pc, #36]	@ (8004aa4 <CDC_Init_FS+0x40>)
 8004a80:	4806      	ldr	r0, [pc, #24]	@ (8004a9c <CDC_Init_FS+0x38>)
 8004a82:	2200      	movs	r2, #0
 8004a84:	f003 f9d6 	bl	8007e34 <USBD_CDC_SetTxBuffer>
 8004a88:	4907      	ldr	r1, [pc, #28]	@ (8004aa8 <CDC_Init_FS+0x44>)
 8004a8a:	4804      	ldr	r0, [pc, #16]	@ (8004a9c <CDC_Init_FS+0x38>)
 8004a8c:	2203      	movs	r2, #3
 8004a8e:	f003 f9e5 	bl	8007e5c <USBD_CDC_SetRxBuffer>
 8004a92:	2000      	movs	r0, #0
 8004a94:	bd08      	pop	{r3, pc}
 8004a96:	bf00      	nop
 8004a98:	20000e78 	.word	0x20000e78
 8004a9c:	20001278 	.word	0x20001278
 8004aa0:	20000ef8 	.word	0x20000ef8
 8004aa4:	20000e38 	.word	0x20000e38
 8004aa8:	20000eb8 	.word	0x20000eb8

08004aac <CDC_Control_FS>:
 8004aac:	2821      	cmp	r0, #33	@ 0x21
 8004aae:	d106      	bne.n	8004abe <CDC_Control_FS+0x12>
 8004ab0:	f44f 30e1 	mov.w	r0, #115200	@ 0x1c200
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	2308      	movs	r3, #8
 8004ab8:	6008      	str	r0, [r1, #0]
 8004aba:	808a      	strh	r2, [r1, #4]
 8004abc:	718b      	strb	r3, [r1, #6]
 8004abe:	2000      	movs	r0, #0
 8004ac0:	4770      	bx	lr
 8004ac2:	bf00      	nop

08004ac4 <CDC_Transmit_FS>:
 8004ac4:	2940      	cmp	r1, #64	@ 0x40
 8004ac6:	d823      	bhi.n	8004b10 <CDC_Transmit_FS+0x4c>
 8004ac8:	4b13      	ldr	r3, [pc, #76]	@ (8004b18 <CDC_Transmit_FS+0x54>)
 8004aca:	2a01      	cmp	r2, #1
 8004acc:	b570      	push	{r4, r5, r6, lr}
 8004ace:	f8d3 3218 	ldr.w	r3, [r3, #536]	@ 0x218
 8004ad2:	460d      	mov	r5, r1
 8004ad4:	4614      	mov	r4, r2
 8004ad6:	d018      	beq.n	8004b0a <CDC_Transmit_FS+0x46>
 8004ad8:	2a03      	cmp	r2, #3
 8004ada:	d11b      	bne.n	8004b14 <CDC_Transmit_FS+0x50>
 8004adc:	4e0f      	ldr	r6, [pc, #60]	@ (8004b1c <CDC_Transmit_FS+0x58>)
 8004ade:	335c      	adds	r3, #92	@ 0x5c
 8004ae0:	7a1b      	ldrb	r3, [r3, #8]
 8004ae2:	b983      	cbnz	r3, 8004b06 <CDC_Transmit_FS+0x42>
 8004ae4:	462a      	mov	r2, r5
 8004ae6:	4601      	mov	r1, r0
 8004ae8:	4630      	mov	r0, r6
 8004aea:	f01f fece 	bl	802488a <memcpy>
 8004aee:	4631      	mov	r1, r6
 8004af0:	4623      	mov	r3, r4
 8004af2:	462a      	mov	r2, r5
 8004af4:	4808      	ldr	r0, [pc, #32]	@ (8004b18 <CDC_Transmit_FS+0x54>)
 8004af6:	f003 f99d 	bl	8007e34 <USBD_CDC_SetTxBuffer>
 8004afa:	4621      	mov	r1, r4
 8004afc:	4806      	ldr	r0, [pc, #24]	@ (8004b18 <CDC_Transmit_FS+0x54>)
 8004afe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004b02:	f003 b9bb 	b.w	8007e7c <USBD_CDC_TransmitPacket>
 8004b06:	2001      	movs	r0, #1
 8004b08:	bd70      	pop	{r4, r5, r6, pc}
 8004b0a:	4e05      	ldr	r6, [pc, #20]	@ (8004b20 <CDC_Transmit_FS+0x5c>)
 8004b0c:	3344      	adds	r3, #68	@ 0x44
 8004b0e:	e7e7      	b.n	8004ae0 <CDC_Transmit_FS+0x1c>
 8004b10:	2002      	movs	r0, #2
 8004b12:	4770      	bx	lr
 8004b14:	2002      	movs	r0, #2
 8004b16:	bd70      	pop	{r4, r5, r6, pc}
 8004b18:	20001278 	.word	0x20001278
 8004b1c:	20000e38 	.word	0x20000e38
 8004b20:	20000e78 	.word	0x20000e78

08004b24 <HAL_PCD_Init>:
 8004b24:	2800      	cmp	r0, #0
 8004b26:	d067      	beq.n	8004bf8 <HAL_PCD_Init+0xd4>
 8004b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b2a:	2303      	movs	r3, #3
 8004b2c:	4605      	mov	r5, r0
 8004b2e:	b08b      	sub	sp, #44	@ 0x2c
 8004b30:	462c      	mov	r4, r5
 8004b32:	f880 33b9 	strb.w	r3, [r0, #953]	@ 0x3b9
 8004b36:	f7fe fe67 	bl	8003808 <HAL_PCD_MspInit>
 8004b3a:	6828      	ldr	r0, [r5, #0]
 8004b3c:	f7fc ff90 	bl	8001a60 <USB_DisableGlobalInt>
 8004b40:	f854 eb10 	ldr.w	lr, [r4], #16
 8004b44:	46a4      	mov	ip, r4
 8004b46:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8004b4a:	466f      	mov	r7, sp
 8004b4c:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8004b4e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8004b52:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8004b54:	e89c 0003 	ldmia.w	ip, {r0, r1}
 8004b58:	e887 0003 	stmia.w	r7, {r0, r1}
 8004b5c:	1d2e      	adds	r6, r5, #4
 8004b5e:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
 8004b62:	4670      	mov	r0, lr
 8004b64:	f7fc ff1a 	bl	800199c <USB_CoreInit>
 8004b68:	2100      	movs	r1, #0
 8004b6a:	6828      	ldr	r0, [r5, #0]
 8004b6c:	f7fc ff80 	bl	8001a70 <USB_SetCurrentMode>
 8004b70:	2100      	movs	r1, #0
 8004b72:	462b      	mov	r3, r5
 8004b74:	462a      	mov	r2, r5
 8004b76:	2701      	movs	r7, #1
 8004b78:	4608      	mov	r0, r1
 8004b7a:	f882 1038 	strb.w	r1, [r2, #56]	@ 0x38
 8004b7e:	87d1      	strh	r1, [r2, #62]	@ 0x3e
 8004b80:	3101      	adds	r1, #1
 8004b82:	290f      	cmp	r1, #15
 8004b84:	e9c2 0010 	strd	r0, r0, [r2, #64]	@ 0x40
 8004b88:	f882 7039 	strb.w	r7, [r2, #57]	@ 0x39
 8004b8c:	f882 003b 	strb.w	r0, [r2, #59]	@ 0x3b
 8004b90:	64d0      	str	r0, [r2, #76]	@ 0x4c
 8004b92:	f102 021c 	add.w	r2, r2, #28
 8004b96:	d1f0      	bne.n	8004b7a <HAL_PCD_Init+0x56>
 8004b98:	2200      	movs	r2, #0
 8004b9a:	682f      	ldr	r7, [r5, #0]
 8004b9c:	4611      	mov	r1, r2
 8004b9e:	f883 21f8 	strb.w	r2, [r3, #504]	@ 0x1f8
 8004ba2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8004ba4:	eb07 0082 	add.w	r0, r7, r2, lsl #2
 8004ba8:	3201      	adds	r2, #1
 8004baa:	2a0f      	cmp	r2, #15
 8004bac:	e9c3 1180 	strd	r1, r1, [r3, #512]	@ 0x200
 8004bb0:	f883 11f9 	strb.w	r1, [r3, #505]	@ 0x1f9
 8004bb4:	f883 11fb 	strb.w	r1, [r3, #507]	@ 0x1fb
 8004bb8:	f8c3 120c 	str.w	r1, [r3, #524]	@ 0x20c
 8004bbc:	f8c0 1104 	str.w	r1, [r0, #260]	@ 0x104
 8004bc0:	f103 031c 	add.w	r3, r3, #28
 8004bc4:	d1eb      	bne.n	8004b9e <HAL_PCD_Init+0x7a>
 8004bc6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004bc8:	46ec      	mov	ip, sp
 8004bca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8004bce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004bd0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8004bd4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004bd8:	e88c 0003 	stmia.w	ip, {r0, r1}
 8004bdc:	4638      	mov	r0, r7
 8004bde:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
 8004be2:	f7fc ff5f 	bl	8001aa4 <USB_DevInit>
 8004be6:	2301      	movs	r3, #1
 8004be8:	6828      	ldr	r0, [r5, #0]
 8004bea:	f885 33b9 	strb.w	r3, [r5, #953]	@ 0x3b9
 8004bee:	f7fd fadf 	bl	80021b0 <USB_DevDisconnect>
 8004bf2:	2000      	movs	r0, #0
 8004bf4:	b00b      	add	sp, #44	@ 0x2c
 8004bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004bf8:	2001      	movs	r0, #1
 8004bfa:	4770      	bx	lr

08004bfc <HAL_PCD_Start>:
 8004bfc:	f890 33b8 	ldrb.w	r3, [r0, #952]	@ 0x3b8
 8004c00:	2b01      	cmp	r3, #1
 8004c02:	d00f      	beq.n	8004c24 <HAL_PCD_Start+0x28>
 8004c04:	b510      	push	{r4, lr}
 8004c06:	4604      	mov	r4, r0
 8004c08:	2301      	movs	r3, #1
 8004c0a:	6800      	ldr	r0, [r0, #0]
 8004c0c:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 8004c10:	f7fd fac0 	bl	8002194 <USB_DevConnect>
 8004c14:	6820      	ldr	r0, [r4, #0]
 8004c16:	f7fc ff1b 	bl	8001a50 <USB_EnableGlobalInt>
 8004c1a:	2300      	movs	r3, #0
 8004c1c:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 8004c20:	4618      	mov	r0, r3
 8004c22:	bd10      	pop	{r4, pc}
 8004c24:	2002      	movs	r0, #2
 8004c26:	4770      	bx	lr

08004c28 <HAL_PCD_IRQHandler>:
 8004c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c2c:	f8d0 9000 	ldr.w	r9, [r0]
 8004c30:	b089      	sub	sp, #36	@ 0x24
 8004c32:	4604      	mov	r4, r0
 8004c34:	4648      	mov	r0, r9
 8004c36:	f7fd faf3 	bl	8002220 <USB_GetMode>
 8004c3a:	b110      	cbz	r0, 8004c42 <HAL_PCD_IRQHandler+0x1a>
 8004c3c:	b009      	add	sp, #36	@ 0x24
 8004c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c42:	4605      	mov	r5, r0
 8004c44:	6820      	ldr	r0, [r4, #0]
 8004c46:	f7fd fac1 	bl	80021cc <USB_ReadInterrupts>
 8004c4a:	2800      	cmp	r0, #0
 8004c4c:	d0f6      	beq.n	8004c3c <HAL_PCD_IRQHandler+0x14>
 8004c4e:	6820      	ldr	r0, [r4, #0]
 8004c50:	f7fd fabc 	bl	80021cc <USB_ReadInterrupts>
 8004c54:	0786      	lsls	r6, r0, #30
 8004c56:	6823      	ldr	r3, [r4, #0]
 8004c58:	d503      	bpl.n	8004c62 <HAL_PCD_IRQHandler+0x3a>
 8004c5a:	695a      	ldr	r2, [r3, #20]
 8004c5c:	f002 0202 	and.w	r2, r2, #2
 8004c60:	615a      	str	r2, [r3, #20]
 8004c62:	4618      	mov	r0, r3
 8004c64:	f7fd fab2 	bl	80021cc <USB_ReadInterrupts>
 8004c68:	0300      	lsls	r0, r0, #12
 8004c6a:	f100 812f 	bmi.w	8004ecc <HAL_PCD_IRQHandler+0x2a4>
 8004c6e:	f04f 0800 	mov.w	r8, #0
 8004c72:	6820      	ldr	r0, [r4, #0]
 8004c74:	f7fd faaa 	bl	80021cc <USB_ReadInterrupts>
 8004c78:	0340      	lsls	r0, r0, #13
 8004c7a:	f8d4 e000 	ldr.w	lr, [r4]
 8004c7e:	f100 80bf 	bmi.w	8004e00 <HAL_PCD_IRQHandler+0x1d8>
 8004c82:	4670      	mov	r0, lr
 8004c84:	f7fd faa2 	bl	80021cc <USB_ReadInterrupts>
 8004c88:	2800      	cmp	r0, #0
 8004c8a:	f2c0 8223 	blt.w	80050d4 <HAL_PCD_IRQHandler+0x4ac>
 8004c8e:	6820      	ldr	r0, [r4, #0]
 8004c90:	f7fd fa9c 	bl	80021cc <USB_ReadInterrupts>
 8004c94:	0503      	lsls	r3, r0, #20
 8004c96:	d44d      	bmi.n	8004d34 <HAL_PCD_IRQHandler+0x10c>
 8004c98:	6820      	ldr	r0, [r4, #0]
 8004c9a:	f7fd fa97 	bl	80021cc <USB_ReadInterrupts>
 8004c9e:	4603      	mov	r3, r0
 8004ca0:	04de      	lsls	r6, r3, #19
 8004ca2:	6820      	ldr	r0, [r4, #0]
 8004ca4:	d46f      	bmi.n	8004d86 <HAL_PCD_IRQHandler+0x15e>
 8004ca6:	f7fd fa91 	bl	80021cc <USB_ReadInterrupts>
 8004caa:	4603      	mov	r3, r0
 8004cac:	0499      	lsls	r1, r3, #18
 8004cae:	6820      	ldr	r0, [r4, #0]
 8004cb0:	d44b      	bmi.n	8004d4a <HAL_PCD_IRQHandler+0x122>
 8004cb2:	f7fd fa8b 	bl	80021cc <USB_ReadInterrupts>
 8004cb6:	06c2      	lsls	r2, r0, #27
 8004cb8:	6823      	ldr	r3, [r4, #0]
 8004cba:	d515      	bpl.n	8004ce8 <HAL_PCD_IRQHandler+0xc0>
 8004cbc:	699a      	ldr	r2, [r3, #24]
 8004cbe:	f022 0210 	bic.w	r2, r2, #16
 8004cc2:	619a      	str	r2, [r3, #24]
 8004cc4:	f8d9 5020 	ldr.w	r5, [r9, #32]
 8004cc8:	f405 12f0 	and.w	r2, r5, #1966080	@ 0x1e0000
 8004ccc:	f5b2 2f80 	cmp.w	r2, #262144	@ 0x40000
 8004cd0:	f005 060f 	and.w	r6, r5, #15
 8004cd4:	f000 820d 	beq.w	80050f2 <HAL_PCD_IRQHandler+0x4ca>
 8004cd8:	f5b2 2f40 	cmp.w	r2, #786432	@ 0xc0000
 8004cdc:	f000 8186 	beq.w	8004fec <HAL_PCD_IRQHandler+0x3c4>
 8004ce0:	699a      	ldr	r2, [r3, #24]
 8004ce2:	f042 0210 	orr.w	r2, r2, #16
 8004ce6:	619a      	str	r2, [r3, #24]
 8004ce8:	4618      	mov	r0, r3
 8004cea:	f7fd fa6f 	bl	80021cc <USB_ReadInterrupts>
 8004cee:	0707      	lsls	r7, r0, #28
 8004cf0:	f100 8156 	bmi.w	8004fa0 <HAL_PCD_IRQHandler+0x378>
 8004cf4:	6820      	ldr	r0, [r4, #0]
 8004cf6:	f7fd fa69 	bl	80021cc <USB_ReadInterrupts>
 8004cfa:	02c6      	lsls	r6, r0, #11
 8004cfc:	f100 8145 	bmi.w	8004f8a <HAL_PCD_IRQHandler+0x362>
 8004d00:	6820      	ldr	r0, [r4, #0]
 8004d02:	f7fd fa63 	bl	80021cc <USB_ReadInterrupts>
 8004d06:	0285      	lsls	r5, r0, #10
 8004d08:	f100 8134 	bmi.w	8004f74 <HAL_PCD_IRQHandler+0x34c>
 8004d0c:	6820      	ldr	r0, [r4, #0]
 8004d0e:	f7fd fa5d 	bl	80021cc <USB_ReadInterrupts>
 8004d12:	0040      	lsls	r0, r0, #1
 8004d14:	f100 8125 	bmi.w	8004f62 <HAL_PCD_IRQHandler+0x33a>
 8004d18:	6820      	ldr	r0, [r4, #0]
 8004d1a:	f7fd fa57 	bl	80021cc <USB_ReadInterrupts>
 8004d1e:	0741      	lsls	r1, r0, #29
 8004d20:	d58c      	bpl.n	8004c3c <HAL_PCD_IRQHandler+0x14>
 8004d22:	6823      	ldr	r3, [r4, #0]
 8004d24:	685d      	ldr	r5, [r3, #4]
 8004d26:	076a      	lsls	r2, r5, #29
 8004d28:	f100 8204 	bmi.w	8005134 <HAL_PCD_IRQHandler+0x50c>
 8004d2c:	685a      	ldr	r2, [r3, #4]
 8004d2e:	432a      	orrs	r2, r5
 8004d30:	605a      	str	r2, [r3, #4]
 8004d32:	e783      	b.n	8004c3c <HAL_PCD_IRQHandler+0x14>
 8004d34:	f8d9 3808 	ldr.w	r3, [r9, #2056]	@ 0x808
 8004d38:	07df      	lsls	r7, r3, #31
 8004d3a:	f100 81f7 	bmi.w	800512c <HAL_PCD_IRQHandler+0x504>
 8004d3e:	6820      	ldr	r0, [r4, #0]
 8004d40:	6943      	ldr	r3, [r0, #20]
 8004d42:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004d46:	6143      	str	r3, [r0, #20]
 8004d48:	e7a7      	b.n	8004c9a <HAL_PCD_IRQHandler+0x72>
 8004d4a:	f7fd fa6d 	bl	8002228 <USB_ActivateSetup>
 8004d4e:	6820      	ldr	r0, [r4, #0]
 8004d50:	68c3      	ldr	r3, [r0, #12]
 8004d52:	f423 5370 	bic.w	r3, r3, #15360	@ 0x3c00
 8004d56:	60c3      	str	r3, [r0, #12]
 8004d58:	f7fc ff7a 	bl	8001c50 <USB_GetDevSpeed>
 8004d5c:	2800      	cmp	r0, #0
 8004d5e:	f040 8133 	bne.w	8004fc8 <HAL_PCD_IRQHandler+0x3a0>
 8004d62:	6822      	ldr	r2, [r4, #0]
 8004d64:	60e0      	str	r0, [r4, #12]
 8004d66:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004d6a:	6163      	str	r3, [r4, #20]
 8004d6c:	68d3      	ldr	r3, [r2, #12]
 8004d6e:	f443 5310 	orr.w	r3, r3, #9216	@ 0x2400
 8004d72:	60d3      	str	r3, [r2, #12]
 8004d74:	4620      	mov	r0, r4
 8004d76:	f7fe fdc9 	bl	800390c <HAL_PCD_ResetCallback>
 8004d7a:	6820      	ldr	r0, [r4, #0]
 8004d7c:	6943      	ldr	r3, [r0, #20]
 8004d7e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004d82:	6143      	str	r3, [r0, #20]
 8004d84:	e795      	b.n	8004cb2 <HAL_PCD_IRQHandler+0x8a>
 8004d86:	f8d9 3804 	ldr.w	r3, [r9, #2052]	@ 0x804
 8004d8a:	f023 0301 	bic.w	r3, r3, #1
 8004d8e:	2110      	movs	r1, #16
 8004d90:	f8c9 3804 	str.w	r3, [r9, #2052]	@ 0x804
 8004d94:	f7fc ff4a 	bl	8001c2c <USB_FlushTxFifo>
 8004d98:	6861      	ldr	r1, [r4, #4]
 8004d9a:	f509 6600 	add.w	r6, r9, #2048	@ 0x800
 8004d9e:	b151      	cbz	r1, 8004db6 <HAL_PCD_IRQHandler+0x18e>
 8004da0:	f509 6310 	add.w	r3, r9, #2304	@ 0x900
 8004da4:	22ff      	movs	r2, #255	@ 0xff
 8004da6:	3501      	adds	r5, #1
 8004da8:	428d      	cmp	r5, r1
 8004daa:	609a      	str	r2, [r3, #8]
 8004dac:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 8004db0:	f103 0320 	add.w	r3, r3, #32
 8004db4:	d1f7      	bne.n	8004da6 <HAL_PCD_IRQHandler+0x17e>
 8004db6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8004dba:	61b3      	str	r3, [r6, #24]
 8004dbc:	69f3      	ldr	r3, [r6, #28]
 8004dbe:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8004dc2:	61f3      	str	r3, [r6, #28]
 8004dc4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	f040 80f3 	bne.w	8004fb2 <HAL_PCD_IRQHandler+0x38a>
 8004dcc:	6973      	ldr	r3, [r6, #20]
 8004dce:	f043 030b 	orr.w	r3, r3, #11
 8004dd2:	6173      	str	r3, [r6, #20]
 8004dd4:	6933      	ldr	r3, [r6, #16]
 8004dd6:	f043 030b 	orr.w	r3, r3, #11
 8004dda:	6133      	str	r3, [r6, #16]
 8004ddc:	f8d9 3800 	ldr.w	r3, [r9, #2048]	@ 0x800
 8004de0:	7c21      	ldrb	r1, [r4, #16]
 8004de2:	6820      	ldr	r0, [r4, #0]
 8004de4:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8004de8:	f8c9 3800 	str.w	r3, [r9, #2048]	@ 0x800
 8004dec:	f504 726f 	add.w	r2, r4, #956	@ 0x3bc
 8004df0:	f7fd fa34 	bl	800225c <USB_EP0_OutStart>
 8004df4:	6820      	ldr	r0, [r4, #0]
 8004df6:	6943      	ldr	r3, [r0, #20]
 8004df8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004dfc:	6143      	str	r3, [r0, #20]
 8004dfe:	e752      	b.n	8004ca6 <HAL_PCD_IRQHandler+0x7e>
 8004e00:	4670      	mov	r0, lr
 8004e02:	f7fd f9ef 	bl	80021e4 <USB_ReadDevAllInEpInterrupt>
 8004e06:	f8d4 e000 	ldr.w	lr, [r4]
 8004e0a:	4680      	mov	r8, r0
 8004e0c:	2800      	cmp	r0, #0
 8004e0e:	f43f af38 	beq.w	8004c82 <HAL_PCD_IRQHandler+0x5a>
 8004e12:	2300      	movs	r3, #0
 8004e14:	f509 6b10 	add.w	fp, r9, #2304	@ 0x900
 8004e18:	46c8      	mov	r8, r9
 8004e1a:	4626      	mov	r6, r4
 8004e1c:	4682      	mov	sl, r0
 8004e1e:	9003      	str	r0, [sp, #12]
 8004e20:	9504      	str	r5, [sp, #16]
 8004e22:	4699      	mov	r9, r3
 8004e24:	f01a 0f01 	tst.w	sl, #1
 8004e28:	d10a      	bne.n	8004e40 <HAL_PCD_IRQHandler+0x218>
 8004e2a:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
 8004e2e:	f01a 0f01 	tst.w	sl, #1
 8004e32:	f109 0901 	add.w	r9, r9, #1
 8004e36:	f106 061c 	add.w	r6, r6, #28
 8004e3a:	f10b 0b20 	add.w	fp, fp, #32
 8004e3e:	d0f4      	beq.n	8004e2a <HAL_PCD_IRQHandler+0x202>
 8004e40:	fa5f f589 	uxtb.w	r5, r9
 8004e44:	4629      	mov	r1, r5
 8004e46:	4670      	mov	r0, lr
 8004e48:	f7fd f9dc 	bl	8002204 <USB_ReadDevInEPInterrupt>
 8004e4c:	07c1      	lsls	r1, r0, #31
 8004e4e:	4607      	mov	r7, r0
 8004e50:	d519      	bpl.n	8004e86 <HAL_PCD_IRQHandler+0x25e>
 8004e52:	f8d8 2834 	ldr.w	r2, [r8, #2100]	@ 0x834
 8004e56:	2101      	movs	r1, #1
 8004e58:	fa01 f009 	lsl.w	r0, r1, r9
 8004e5c:	ea22 0200 	bic.w	r2, r2, r0
 8004e60:	f8c8 2834 	str.w	r2, [r8, #2100]	@ 0x834
 8004e64:	6922      	ldr	r2, [r4, #16]
 8004e66:	f8cb 1008 	str.w	r1, [fp, #8]
 8004e6a:	428a      	cmp	r2, r1
 8004e6c:	d103      	bne.n	8004e76 <HAL_PCD_IRQHandler+0x24e>
 8004e6e:	e9d6 1210 	ldrd	r1, r2, [r6, #64]	@ 0x40
 8004e72:	440a      	add	r2, r1
 8004e74:	6472      	str	r2, [r6, #68]	@ 0x44
 8004e76:	4629      	mov	r1, r5
 8004e78:	4620      	mov	r0, r4
 8004e7a:	f7fe fd39 	bl	80038f0 <HAL_PCD_DataInStageCallback>
 8004e7e:	6921      	ldr	r1, [r4, #16]
 8004e80:	2901      	cmp	r1, #1
 8004e82:	f000 816b 	beq.w	800515c <HAL_PCD_IRQHandler+0x534>
 8004e86:	073a      	lsls	r2, r7, #28
 8004e88:	bf44      	itt	mi
 8004e8a:	2208      	movmi	r2, #8
 8004e8c:	f8cb 2008 	strmi.w	r2, [fp, #8]
 8004e90:	06fb      	lsls	r3, r7, #27
 8004e92:	bf44      	itt	mi
 8004e94:	2310      	movmi	r3, #16
 8004e96:	f8cb 3008 	strmi.w	r3, [fp, #8]
 8004e9a:	0678      	lsls	r0, r7, #25
 8004e9c:	bf44      	itt	mi
 8004e9e:	2340      	movmi	r3, #64	@ 0x40
 8004ea0:	f8cb 3008 	strmi.w	r3, [fp, #8]
 8004ea4:	07b9      	lsls	r1, r7, #30
 8004ea6:	bf44      	itt	mi
 8004ea8:	2302      	movmi	r3, #2
 8004eaa:	f8cb 3008 	strmi.w	r3, [fp, #8]
 8004eae:	063a      	lsls	r2, r7, #24
 8004eb0:	f8d4 e000 	ldr.w	lr, [r4]
 8004eb4:	f100 80c2 	bmi.w	800503c <HAL_PCD_IRQHandler+0x414>
 8004eb8:	ea5f 0a5a 	movs.w	sl, sl, lsr #1
 8004ebc:	f000 80a9 	beq.w	8005012 <HAL_PCD_IRQHandler+0x3ea>
 8004ec0:	f109 0901 	add.w	r9, r9, #1
 8004ec4:	361c      	adds	r6, #28
 8004ec6:	f10b 0b20 	add.w	fp, fp, #32
 8004eca:	e7ab      	b.n	8004e24 <HAL_PCD_IRQHandler+0x1fc>
 8004ecc:	6820      	ldr	r0, [r4, #0]
 8004ece:	f7fd f981 	bl	80021d4 <USB_ReadDevAllOutEpInterrupt>
 8004ed2:	4682      	mov	sl, r0
 8004ed4:	2800      	cmp	r0, #0
 8004ed6:	f43f aeca 	beq.w	8004c6e <HAL_PCD_IRQHandler+0x46>
 8004eda:	9504      	str	r5, [sp, #16]
 8004edc:	f509 6730 	add.w	r7, r9, #2816	@ 0xb00
 8004ee0:	46a3      	mov	fp, r4
 8004ee2:	f04f 0800 	mov.w	r8, #0
 8004ee6:	4606      	mov	r6, r0
 8004ee8:	4625      	mov	r5, r4
 8004eea:	07f1      	lsls	r1, r6, #31
 8004eec:	d408      	bmi.n	8004f00 <HAL_PCD_IRQHandler+0x2d8>
 8004eee:	0876      	lsrs	r6, r6, #1
 8004ef0:	07f1      	lsls	r1, r6, #31
 8004ef2:	f108 0801 	add.w	r8, r8, #1
 8004ef6:	f107 0720 	add.w	r7, r7, #32
 8004efa:	f10b 0b1c 	add.w	fp, fp, #28
 8004efe:	d5f6      	bpl.n	8004eee <HAL_PCD_IRQHandler+0x2c6>
 8004f00:	fa5f f188 	uxtb.w	r1, r8
 8004f04:	6828      	ldr	r0, [r5, #0]
 8004f06:	9103      	str	r1, [sp, #12]
 8004f08:	f7fd f974 	bl	80021f4 <USB_ReadDevOutEPInterrupt>
 8004f0c:	07c2      	lsls	r2, r0, #31
 8004f0e:	4604      	mov	r4, r0
 8004f10:	d519      	bpl.n	8004f46 <HAL_PCD_IRQHandler+0x31e>
 8004f12:	692a      	ldr	r2, [r5, #16]
 8004f14:	9903      	ldr	r1, [sp, #12]
 8004f16:	2301      	movs	r3, #1
 8004f18:	429a      	cmp	r2, r3
 8004f1a:	60bb      	str	r3, [r7, #8]
 8004f1c:	d10c      	bne.n	8004f38 <HAL_PCD_IRQHandler+0x310>
 8004f1e:	693a      	ldr	r2, [r7, #16]
 8004f20:	f8db 0200 	ldr.w	r0, [fp, #512]	@ 0x200
 8004f24:	f3c2 0212 	ubfx	r2, r2, #0, #19
 8004f28:	1a82      	subs	r2, r0, r2
 8004f2a:	f8cb 2210 	str.w	r2, [fp, #528]	@ 0x210
 8004f2e:	f8db 2204 	ldr.w	r2, [fp, #516]	@ 0x204
 8004f32:	4402      	add	r2, r0
 8004f34:	f8cb 2204 	str.w	r2, [fp, #516]	@ 0x204
 8004f38:	4628      	mov	r0, r5
 8004f3a:	f7fe fccf 	bl	80038dc <HAL_PCD_DataOutStageCallback>
 8004f3e:	6929      	ldr	r1, [r5, #16]
 8004f40:	2901      	cmp	r1, #1
 8004f42:	f000 80fc 	beq.w	800513e <HAL_PCD_IRQHandler+0x516>
 8004f46:	0723      	lsls	r3, r4, #28
 8004f48:	d472      	bmi.n	8005030 <HAL_PCD_IRQHandler+0x408>
 8004f4a:	06e4      	lsls	r4, r4, #27
 8004f4c:	bf44      	itt	mi
 8004f4e:	2310      	movmi	r3, #16
 8004f50:	60bb      	strmi	r3, [r7, #8]
 8004f52:	0876      	lsrs	r6, r6, #1
 8004f54:	d065      	beq.n	8005022 <HAL_PCD_IRQHandler+0x3fa>
 8004f56:	f108 0801 	add.w	r8, r8, #1
 8004f5a:	3720      	adds	r7, #32
 8004f5c:	f10b 0b1c 	add.w	fp, fp, #28
 8004f60:	e7c3      	b.n	8004eea <HAL_PCD_IRQHandler+0x2c2>
 8004f62:	4620      	mov	r0, r4
 8004f64:	f7fe fd06 	bl	8003974 <HAL_PCD_ConnectCallback>
 8004f68:	6820      	ldr	r0, [r4, #0]
 8004f6a:	6943      	ldr	r3, [r0, #20]
 8004f6c:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8004f70:	6143      	str	r3, [r0, #20]
 8004f72:	e6d2      	b.n	8004d1a <HAL_PCD_IRQHandler+0xf2>
 8004f74:	4620      	mov	r0, r4
 8004f76:	fa5f f188 	uxtb.w	r1, r8
 8004f7a:	f7fe fcf3 	bl	8003964 <HAL_PCD_ISOOUTIncompleteCallback>
 8004f7e:	6820      	ldr	r0, [r4, #0]
 8004f80:	6943      	ldr	r3, [r0, #20]
 8004f82:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004f86:	6143      	str	r3, [r0, #20]
 8004f88:	e6c1      	b.n	8004d0e <HAL_PCD_IRQHandler+0xe6>
 8004f8a:	4620      	mov	r0, r4
 8004f8c:	fa5f f188 	uxtb.w	r1, r8
 8004f90:	f7fe fcec 	bl	800396c <HAL_PCD_ISOINIncompleteCallback>
 8004f94:	6820      	ldr	r0, [r4, #0]
 8004f96:	6943      	ldr	r3, [r0, #20]
 8004f98:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004f9c:	6143      	str	r3, [r0, #20]
 8004f9e:	e6b0      	b.n	8004d02 <HAL_PCD_IRQHandler+0xda>
 8004fa0:	4620      	mov	r0, r4
 8004fa2:	f7fe fcaf 	bl	8003904 <HAL_PCD_SOFCallback>
 8004fa6:	6820      	ldr	r0, [r4, #0]
 8004fa8:	6943      	ldr	r3, [r0, #20]
 8004faa:	f003 0308 	and.w	r3, r3, #8
 8004fae:	6143      	str	r3, [r0, #20]
 8004fb0:	e6a1      	b.n	8004cf6 <HAL_PCD_IRQHandler+0xce>
 8004fb2:	f8d6 3084 	ldr.w	r3, [r6, #132]	@ 0x84
 8004fb6:	f043 030b 	orr.w	r3, r3, #11
 8004fba:	f8c6 3084 	str.w	r3, [r6, #132]	@ 0x84
 8004fbe:	6c73      	ldr	r3, [r6, #68]	@ 0x44
 8004fc0:	f043 030b 	orr.w	r3, r3, #11
 8004fc4:	6473      	str	r3, [r6, #68]	@ 0x44
 8004fc6:	e709      	b.n	8004ddc <HAL_PCD_IRQHandler+0x1b4>
 8004fc8:	2203      	movs	r2, #3
 8004fca:	2340      	movs	r3, #64	@ 0x40
 8004fcc:	60e2      	str	r2, [r4, #12]
 8004fce:	6163      	str	r3, [r4, #20]
 8004fd0:	f001 fca4 	bl	800691c <HAL_RCC_GetHCLKFreq>
 8004fd4:	4b94      	ldr	r3, [pc, #592]	@ (8005228 <HAL_PCD_IRQHandler+0x600>)
 8004fd6:	4a95      	ldr	r2, [pc, #596]	@ (800522c <HAL_PCD_IRQHandler+0x604>)
 8004fd8:	6821      	ldr	r1, [r4, #0]
 8004fda:	4403      	add	r3, r0
 8004fdc:	4293      	cmp	r3, r2
 8004fde:	f200 80cb 	bhi.w	8005178 <HAL_PCD_IRQHandler+0x550>
 8004fe2:	68cb      	ldr	r3, [r1, #12]
 8004fe4:	f443 5370 	orr.w	r3, r3, #15360	@ 0x3c00
 8004fe8:	60cb      	str	r3, [r1, #12]
 8004fea:	e6c3      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 8004fec:	2208      	movs	r2, #8
 8004fee:	f504 716f 	add.w	r1, r4, #956	@ 0x3bc
 8004ff2:	4648      	mov	r0, r9
 8004ff4:	ebc6 06c6 	rsb	r6, r6, r6, lsl #3
 8004ff8:	f7fd f874 	bl	80020e4 <USB_ReadPacket>
 8004ffc:	eb04 0186 	add.w	r1, r4, r6, lsl #2
 8005000:	f3c5 120a 	ubfx	r2, r5, #4, #11
 8005004:	f8d1 3210 	ldr.w	r3, [r1, #528]	@ 0x210
 8005008:	441a      	add	r2, r3
 800500a:	6823      	ldr	r3, [r4, #0]
 800500c:	f8c1 2210 	str.w	r2, [r1, #528]	@ 0x210
 8005010:	e666      	b.n	8004ce0 <HAL_PCD_IRQHandler+0xb8>
 8005012:	46c1      	mov	r9, r8
 8005014:	e9dd 8503 	ldrd	r8, r5, [sp, #12]
 8005018:	fab8 f388 	clz	r3, r8
 800501c:	f1c3 0820 	rsb	r8, r3, #32
 8005020:	e62f      	b.n	8004c82 <HAL_PCD_IRQHandler+0x5a>
 8005022:	faba fa8a 	clz	sl, sl
 8005026:	462c      	mov	r4, r5
 8005028:	f1ca 0820 	rsb	r8, sl, #32
 800502c:	9d04      	ldr	r5, [sp, #16]
 800502e:	e620      	b.n	8004c72 <HAL_PCD_IRQHandler+0x4a>
 8005030:	4628      	mov	r0, r5
 8005032:	f7fe fc21 	bl	8003878 <HAL_PCD_SetupStageCallback>
 8005036:	2208      	movs	r2, #8
 8005038:	60ba      	str	r2, [r7, #8]
 800503a:	e786      	b.n	8004f4a <HAL_PCD_IRQHandler+0x322>
 800503c:	f50e 6210 	add.w	r2, lr, #2304	@ 0x900
 8005040:	eb02 1349 	add.w	r3, r2, r9, lsl #5
 8005044:	e9d6 1213 	ldrd	r1, r2, [r6, #76]	@ 0x4c
 8005048:	6998      	ldr	r0, [r3, #24]
 800504a:	f8cd e01c 	str.w	lr, [sp, #28]
 800504e:	b280      	uxth	r0, r0
 8005050:	9005      	str	r0, [sp, #20]
 8005052:	6c30      	ldr	r0, [r6, #64]	@ 0x40
 8005054:	1a8f      	subs	r7, r1, r2
 8005056:	4287      	cmp	r7, r0
 8005058:	bf28      	it	cs
 800505a:	4607      	movcs	r7, r0
 800505c:	9805      	ldr	r0, [sp, #20]
 800505e:	f107 0c03 	add.w	ip, r7, #3
 8005062:	ebb0 0f9c 	cmp.w	r0, ip, lsr #2
 8005066:	d927      	bls.n	80050b8 <HAL_PCD_IRQHandler+0x490>
 8005068:	e9cd ba05 	strd	fp, sl, [sp, #20]
 800506c:	46f2      	mov	sl, lr
 800506e:	469b      	mov	fp, r3
 8005070:	e01a      	b.n	80050a8 <HAL_PCD_IRQHandler+0x480>
 8005072:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 8005074:	4299      	cmp	r1, r3
 8005076:	bf28      	it	cs
 8005078:	4619      	movcs	r1, r3
 800507a:	7c23      	ldrb	r3, [r4, #16]
 800507c:	9300      	str	r3, [sp, #0]
 800507e:	460f      	mov	r7, r1
 8005080:	b2bb      	uxth	r3, r7
 8005082:	6c71      	ldr	r1, [r6, #68]	@ 0x44
 8005084:	462a      	mov	r2, r5
 8005086:	4650      	mov	r0, sl
 8005088:	f7fd f816 	bl	80020b8 <USB_WritePacket>
 800508c:	6d32      	ldr	r2, [r6, #80]	@ 0x50
 800508e:	6c73      	ldr	r3, [r6, #68]	@ 0x44
 8005090:	443a      	add	r2, r7
 8005092:	443b      	add	r3, r7
 8005094:	6532      	str	r2, [r6, #80]	@ 0x50
 8005096:	6473      	str	r3, [r6, #68]	@ 0x44
 8005098:	f8db 3018 	ldr.w	r3, [fp, #24]
 800509c:	1cf9      	adds	r1, r7, #3
 800509e:	b29b      	uxth	r3, r3
 80050a0:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80050a4:	d904      	bls.n	80050b0 <HAL_PCD_IRQHandler+0x488>
 80050a6:	6cf1      	ldr	r1, [r6, #76]	@ 0x4c
 80050a8:	428a      	cmp	r2, r1
 80050aa:	eba1 0102 	sub.w	r1, r1, r2
 80050ae:	d3e0      	bcc.n	8005072 <HAL_PCD_IRQHandler+0x44a>
 80050b0:	e9dd ba05 	ldrd	fp, sl, [sp, #20]
 80050b4:	f8d4 e000 	ldr.w	lr, [r4]
 80050b8:	2f00      	cmp	r7, #0
 80050ba:	f47f aefd 	bne.w	8004eb8 <HAL_PCD_IRQHandler+0x290>
 80050be:	9b07      	ldr	r3, [sp, #28]
 80050c0:	2001      	movs	r0, #1
 80050c2:	f8d3 1834 	ldr.w	r1, [r3, #2100]	@ 0x834
 80050c6:	fa00 f009 	lsl.w	r0, r0, r9
 80050ca:	ea21 0100 	bic.w	r1, r1, r0
 80050ce:	f8c3 1834 	str.w	r1, [r3, #2100]	@ 0x834
 80050d2:	e6f1      	b.n	8004eb8 <HAL_PCD_IRQHandler+0x290>
 80050d4:	f8d9 3804 	ldr.w	r3, [r9, #2052]	@ 0x804
 80050d8:	f023 0301 	bic.w	r3, r3, #1
 80050dc:	f8c9 3804 	str.w	r3, [r9, #2052]	@ 0x804
 80050e0:	4620      	mov	r0, r4
 80050e2:	f7fe fc3b 	bl	800395c <HAL_PCD_ResumeCallback>
 80050e6:	6820      	ldr	r0, [r4, #0]
 80050e8:	6943      	ldr	r3, [r0, #20]
 80050ea:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80050ee:	6143      	str	r3, [r0, #20]
 80050f0:	e5ce      	b.n	8004c90 <HAL_PCD_IRQHandler+0x68>
 80050f2:	f647 72f0 	movw	r2, #32752	@ 0x7ff0
 80050f6:	4215      	tst	r5, r2
 80050f8:	f43f adf2 	beq.w	8004ce0 <HAL_PCD_IRQHandler+0xb8>
 80050fc:	ebc6 06c6 	rsb	r6, r6, r6, lsl #3
 8005100:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8005104:	f3c5 120a 	ubfx	r2, r5, #4, #11
 8005108:	f8d6 1204 	ldr.w	r1, [r6, #516]	@ 0x204
 800510c:	4648      	mov	r0, r9
 800510e:	4615      	mov	r5, r2
 8005110:	f7fc ffe8 	bl	80020e4 <USB_ReadPacket>
 8005114:	f8d6 3204 	ldr.w	r3, [r6, #516]	@ 0x204
 8005118:	442b      	add	r3, r5
 800511a:	f8c6 3204 	str.w	r3, [r6, #516]	@ 0x204
 800511e:	f8d6 3210 	ldr.w	r3, [r6, #528]	@ 0x210
 8005122:	441d      	add	r5, r3
 8005124:	6823      	ldr	r3, [r4, #0]
 8005126:	f8c6 5210 	str.w	r5, [r6, #528]	@ 0x210
 800512a:	e5d9      	b.n	8004ce0 <HAL_PCD_IRQHandler+0xb8>
 800512c:	4620      	mov	r0, r4
 800512e:	f7fe fbfd 	bl	800392c <HAL_PCD_SuspendCallback>
 8005132:	e604      	b.n	8004d3e <HAL_PCD_IRQHandler+0x116>
 8005134:	4620      	mov	r0, r4
 8005136:	f7fe fc21 	bl	800397c <HAL_PCD_DisconnectCallback>
 800513a:	6823      	ldr	r3, [r4, #0]
 800513c:	e5f6      	b.n	8004d2c <HAL_PCD_IRQHandler+0x104>
 800513e:	f1b8 0f00 	cmp.w	r8, #0
 8005142:	f47f af00 	bne.w	8004f46 <HAL_PCD_IRQHandler+0x31e>
 8005146:	f8d5 220c 	ldr.w	r2, [r5, #524]	@ 0x20c
 800514a:	2a00      	cmp	r2, #0
 800514c:	f47f aefb 	bne.w	8004f46 <HAL_PCD_IRQHandler+0x31e>
 8005150:	6828      	ldr	r0, [r5, #0]
 8005152:	f505 726f 	add.w	r2, r5, #956	@ 0x3bc
 8005156:	f7fd f881 	bl	800225c <USB_EP0_OutStart>
 800515a:	e6f4      	b.n	8004f46 <HAL_PCD_IRQHandler+0x31e>
 800515c:	f1b9 0f00 	cmp.w	r9, #0
 8005160:	f47f ae91 	bne.w	8004e86 <HAL_PCD_IRQHandler+0x25e>
 8005164:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
 8005166:	2a00      	cmp	r2, #0
 8005168:	f47f ae8d 	bne.w	8004e86 <HAL_PCD_IRQHandler+0x25e>
 800516c:	6820      	ldr	r0, [r4, #0]
 800516e:	f504 726f 	add.w	r2, r4, #956	@ 0x3bc
 8005172:	f7fd f873 	bl	800225c <USB_EP0_OutStart>
 8005176:	e686      	b.n	8004e86 <HAL_PCD_IRQHandler+0x25e>
 8005178:	4b2d      	ldr	r3, [pc, #180]	@ (8005230 <HAL_PCD_IRQHandler+0x608>)
 800517a:	4a2e      	ldr	r2, [pc, #184]	@ (8005234 <HAL_PCD_IRQHandler+0x60c>)
 800517c:	4403      	add	r3, r0
 800517e:	4293      	cmp	r3, r2
 8005180:	d804      	bhi.n	800518c <HAL_PCD_IRQHandler+0x564>
 8005182:	68cb      	ldr	r3, [r1, #12]
 8005184:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8005188:	60cb      	str	r3, [r1, #12]
 800518a:	e5f3      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 800518c:	4a2a      	ldr	r2, [pc, #168]	@ (8005238 <HAL_PCD_IRQHandler+0x610>)
 800518e:	f5a0 0374 	sub.w	r3, r0, #15990784	@ 0xf40000
 8005192:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8005196:	4293      	cmp	r3, r2
 8005198:	d804      	bhi.n	80051a4 <HAL_PCD_IRQHandler+0x57c>
 800519a:	68cb      	ldr	r3, [r1, #12]
 800519c:	f443 5350 	orr.w	r3, r3, #13312	@ 0x3400
 80051a0:	60cb      	str	r3, [r1, #12]
 80051a2:	e5e7      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 80051a4:	4a25      	ldr	r2, [pc, #148]	@ (800523c <HAL_PCD_IRQHandler+0x614>)
 80051a6:	f1a0 7383 	sub.w	r3, r0, #17170432	@ 0x1060000
 80051aa:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 80051ae:	4293      	cmp	r3, r2
 80051b0:	d204      	bcs.n	80051bc <HAL_PCD_IRQHandler+0x594>
 80051b2:	68cb      	ldr	r3, [r1, #12]
 80051b4:	f443 5340 	orr.w	r3, r3, #12288	@ 0x3000
 80051b8:	60cb      	str	r3, [r1, #12]
 80051ba:	e5db      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 80051bc:	4b20      	ldr	r3, [pc, #128]	@ (8005240 <HAL_PCD_IRQHandler+0x618>)
 80051be:	4a21      	ldr	r2, [pc, #132]	@ (8005244 <HAL_PCD_IRQHandler+0x61c>)
 80051c0:	4403      	add	r3, r0
 80051c2:	4293      	cmp	r3, r2
 80051c4:	d804      	bhi.n	80051d0 <HAL_PCD_IRQHandler+0x5a8>
 80051c6:	68cb      	ldr	r3, [r1, #12]
 80051c8:	f443 5330 	orr.w	r3, r3, #11264	@ 0x2c00
 80051cc:	60cb      	str	r3, [r1, #12]
 80051ce:	e5d1      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 80051d0:	4b1d      	ldr	r3, [pc, #116]	@ (8005248 <HAL_PCD_IRQHandler+0x620>)
 80051d2:	4a1e      	ldr	r2, [pc, #120]	@ (800524c <HAL_PCD_IRQHandler+0x624>)
 80051d4:	4403      	add	r3, r0
 80051d6:	4293      	cmp	r3, r2
 80051d8:	d204      	bcs.n	80051e4 <HAL_PCD_IRQHandler+0x5bc>
 80051da:	68cb      	ldr	r3, [r1, #12]
 80051dc:	f443 5320 	orr.w	r3, r3, #10240	@ 0x2800
 80051e0:	60cb      	str	r3, [r1, #12]
 80051e2:	e5c7      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 80051e4:	4b1a      	ldr	r3, [pc, #104]	@ (8005250 <HAL_PCD_IRQHandler+0x628>)
 80051e6:	4a1b      	ldr	r2, [pc, #108]	@ (8005254 <HAL_PCD_IRQHandler+0x62c>)
 80051e8:	4403      	add	r3, r0
 80051ea:	4293      	cmp	r3, r2
 80051ec:	d204      	bcs.n	80051f8 <HAL_PCD_IRQHandler+0x5d0>
 80051ee:	68cb      	ldr	r3, [r1, #12]
 80051f0:	f443 5310 	orr.w	r3, r3, #9216	@ 0x2400
 80051f4:	60cb      	str	r3, [r1, #12]
 80051f6:	e5bd      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 80051f8:	4a17      	ldr	r2, [pc, #92]	@ (8005258 <HAL_PCD_IRQHandler+0x630>)
 80051fa:	f1a0 73b7 	sub.w	r3, r0, #23986176	@ 0x16e0000
 80051fe:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8005202:	4293      	cmp	r3, r2
 8005204:	d204      	bcs.n	8005210 <HAL_PCD_IRQHandler+0x5e8>
 8005206:	68cb      	ldr	r3, [r1, #12]
 8005208:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800520c:	60cb      	str	r3, [r1, #12]
 800520e:	e5b1      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 8005210:	4b12      	ldr	r3, [pc, #72]	@ (800525c <HAL_PCD_IRQHandler+0x634>)
 8005212:	4a13      	ldr	r2, [pc, #76]	@ (8005260 <HAL_PCD_IRQHandler+0x638>)
 8005214:	4403      	add	r3, r0
 8005216:	4293      	cmp	r3, r2
 8005218:	68cb      	ldr	r3, [r1, #12]
 800521a:	bf34      	ite	cc
 800521c:	f443 53e0 	orrcc.w	r3, r3, #7168	@ 0x1c00
 8005220:	f443 53c0 	orrcs.w	r3, r3, #6144	@ 0x1800
 8005224:	60cb      	str	r3, [r1, #12]
 8005226:	e5a5      	b.n	8004d74 <HAL_PCD_IRQHandler+0x14c>
 8005228:	ff275340 	.word	0xff275340
 800522c:	000c34ff 	.word	0x000c34ff
 8005230:	ff1b1e40 	.word	0xff1b1e40
 8005234:	000f423f 	.word	0x000f423f
 8005238:	00124f7f 	.word	0x00124f7f
 800523c:	0013d620 	.word	0x0013d620
 8005240:	fee5b660 	.word	0xfee5b660
 8005244:	0016e35f 	.word	0x0016e35f
 8005248:	feced300 	.word	0xfeced300
 800524c:	001b7740 	.word	0x001b7740
 8005250:	feb35bc0 	.word	0xfeb35bc0
 8005254:	002191c0 	.word	0x002191c0
 8005258:	00387520 	.word	0x00387520
 800525c:	fe5954e0 	.word	0xfe5954e0
 8005260:	00419ce0 	.word	0x00419ce0

08005264 <HAL_PCD_SetAddress>:
 8005264:	f890 33b8 	ldrb.w	r3, [r0, #952]	@ 0x3b8
 8005268:	2b01      	cmp	r3, #1
 800526a:	d00c      	beq.n	8005286 <HAL_PCD_SetAddress+0x22>
 800526c:	b510      	push	{r4, lr}
 800526e:	4604      	mov	r4, r0
 8005270:	2301      	movs	r3, #1
 8005272:	6800      	ldr	r0, [r0, #0]
 8005274:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 8005278:	f7fc ff7c 	bl	8002174 <USB_SetDevAddress>
 800527c:	2300      	movs	r3, #0
 800527e:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 8005282:	4618      	mov	r0, r3
 8005284:	bd10      	pop	{r4, pc}
 8005286:	2002      	movs	r0, #2
 8005288:	4770      	bx	lr
 800528a:	bf00      	nop

0800528c <HAL_PCD_EP_Open>:
 800528c:	b510      	push	{r4, lr}
 800528e:	4604      	mov	r4, r0
 8005290:	0608      	lsls	r0, r1, #24
 8005292:	d424      	bmi.n	80052de <HAL_PCD_EP_Open+0x52>
 8005294:	ebc1 0cc1 	rsb	ip, r1, r1, lsl #3
 8005298:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800529c:	eb04 000c 	add.w	r0, r4, ip
 80052a0:	f880 11f8 	strb.w	r1, [r0, #504]	@ 0x1f8
 80052a4:	f8c0 2200 	str.w	r2, [r0, #512]	@ 0x200
 80052a8:	f50c 71fc 	add.w	r1, ip, #504	@ 0x1f8
 80052ac:	2200      	movs	r2, #0
 80052ae:	4421      	add	r1, r4
 80052b0:	f880 31fb 	strb.w	r3, [r0, #507]	@ 0x1fb
 80052b4:	f880 21f9 	strb.w	r2, [r0, #505]	@ 0x1f9
 80052b8:	2b02      	cmp	r3, #2
 80052ba:	bf04      	itt	eq
 80052bc:	2300      	moveq	r3, #0
 80052be:	710b      	strbeq	r3, [r1, #4]
 80052c0:	f894 33b8 	ldrb.w	r3, [r4, #952]	@ 0x3b8
 80052c4:	2b01      	cmp	r3, #1
 80052c6:	d021      	beq.n	800530c <HAL_PCD_EP_Open+0x80>
 80052c8:	2301      	movs	r3, #1
 80052ca:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 80052ce:	6820      	ldr	r0, [r4, #0]
 80052d0:	f7fc fcdc 	bl	8001c8c <USB_ActivateEndpoint>
 80052d4:	2300      	movs	r3, #0
 80052d6:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 80052da:	4618      	mov	r0, r3
 80052dc:	bd10      	pop	{r4, pc}
 80052de:	f001 0e7f 	and.w	lr, r1, #127	@ 0x7f
 80052e2:	ebce 0cce 	rsb	ip, lr, lr, lsl #3
 80052e6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80052ea:	eb04 000c 	add.w	r0, r4, ip
 80052ee:	f10c 0c38 	add.w	ip, ip, #56	@ 0x38
 80052f2:	6402      	str	r2, [r0, #64]	@ 0x40
 80052f4:	2201      	movs	r2, #1
 80052f6:	eb04 010c 	add.w	r1, r4, ip
 80052fa:	f880 e038 	strb.w	lr, [r0, #56]	@ 0x38
 80052fe:	f880 303b 	strb.w	r3, [r0, #59]	@ 0x3b
 8005302:	f8a0 e03e 	strh.w	lr, [r0, #62]	@ 0x3e
 8005306:	f880 2039 	strb.w	r2, [r0, #57]	@ 0x39
 800530a:	e7d5      	b.n	80052b8 <HAL_PCD_EP_Open+0x2c>
 800530c:	2002      	movs	r0, #2
 800530e:	bd10      	pop	{r4, pc}

08005310 <HAL_PCD_EP_Close>:
 8005310:	460b      	mov	r3, r1
 8005312:	f001 027f 	and.w	r2, r1, #127	@ 0x7f
 8005316:	0609      	lsls	r1, r1, #24
 8005318:	b510      	push	{r4, lr}
 800531a:	4604      	mov	r4, r0
 800531c:	d419      	bmi.n	8005352 <HAL_PCD_EP_Close+0x42>
 800531e:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 8005322:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005326:	09db      	lsrs	r3, r3, #7
 8005328:	f881 21f8 	strb.w	r2, [r1, #504]	@ 0x1f8
 800532c:	f881 31f9 	strb.w	r3, [r1, #505]	@ 0x1f9
 8005330:	f894 33b8 	ldrb.w	r3, [r4, #952]	@ 0x3b8
 8005334:	2b01      	cmp	r3, #1
 8005336:	f501 71fc 	add.w	r1, r1, #504	@ 0x1f8
 800533a:	d019      	beq.n	8005370 <HAL_PCD_EP_Close+0x60>
 800533c:	2301      	movs	r3, #1
 800533e:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 8005342:	6820      	ldr	r0, [r4, #0]
 8005344:	f7fc fce6 	bl	8001d14 <USB_DeactivateEndpoint>
 8005348:	2300      	movs	r3, #0
 800534a:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 800534e:	4618      	mov	r0, r3
 8005350:	bd10      	pop	{r4, pc}
 8005352:	ebc2 01c2 	rsb	r1, r2, r2, lsl #3
 8005356:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800535a:	09db      	lsrs	r3, r3, #7
 800535c:	f881 2038 	strb.w	r2, [r1, #56]	@ 0x38
 8005360:	f881 3039 	strb.w	r3, [r1, #57]	@ 0x39
 8005364:	f894 33b8 	ldrb.w	r3, [r4, #952]	@ 0x3b8
 8005368:	2b01      	cmp	r3, #1
 800536a:	f101 0138 	add.w	r1, r1, #56	@ 0x38
 800536e:	d1e5      	bne.n	800533c <HAL_PCD_EP_Close+0x2c>
 8005370:	2002      	movs	r0, #2
 8005372:	bd10      	pop	{r4, pc}

08005374 <HAL_PCD_EP_Receive>:
 8005374:	b510      	push	{r4, lr}
 8005376:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
 800537a:	ebc4 0cc4 	rsb	ip, r4, r4, lsl #3
 800537e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005382:	eb00 0e0c 	add.w	lr, r0, ip
 8005386:	f50c 7cfc 	add.w	ip, ip, #504	@ 0x1f8
 800538a:	f8ce 320c 	str.w	r3, [lr, #524]	@ 0x20c
 800538e:	2300      	movs	r3, #0
 8005390:	f88e 41f8 	strb.w	r4, [lr, #504]	@ 0x1f8
 8005394:	f88e 31f9 	strb.w	r3, [lr, #505]	@ 0x1f9
 8005398:	f8ce 3210 	str.w	r3, [lr, #528]	@ 0x210
 800539c:	6903      	ldr	r3, [r0, #16]
 800539e:	f8ce 2204 	str.w	r2, [lr, #516]	@ 0x204
 80053a2:	2b01      	cmp	r3, #1
 80053a4:	eb00 010c 	add.w	r1, r0, ip
 80053a8:	bf08      	it	eq
 80053aa:	f8ce 2208 	streq.w	r2, [lr, #520]	@ 0x208
 80053ae:	6800      	ldr	r0, [r0, #0]
 80053b0:	b2da      	uxtb	r2, r3
 80053b2:	b91c      	cbnz	r4, 80053bc <HAL_PCD_EP_Receive+0x48>
 80053b4:	f7fc fe00 	bl	8001fb8 <USB_EP0StartXfer>
 80053b8:	2000      	movs	r0, #0
 80053ba:	bd10      	pop	{r4, pc}
 80053bc:	f7fc fd0a 	bl	8001dd4 <USB_EPStartXfer>
 80053c0:	2000      	movs	r0, #0
 80053c2:	bd10      	pop	{r4, pc}

080053c4 <HAL_PCD_EP_GetRxCount>:
 80053c4:	f001 010f 	and.w	r1, r1, #15
 80053c8:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 80053cc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80053d0:	f8b0 0210 	ldrh.w	r0, [r0, #528]	@ 0x210
 80053d4:	4770      	bx	lr
 80053d6:	bf00      	nop

080053d8 <HAL_PCD_EP_Transmit>:
 80053d8:	b510      	push	{r4, lr}
 80053da:	f001 047f 	and.w	r4, r1, #127	@ 0x7f
 80053de:	ebc4 0cc4 	rsb	ip, r4, r4, lsl #3
 80053e2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80053e6:	eb00 0e0c 	add.w	lr, r0, ip
 80053ea:	f10c 0c38 	add.w	ip, ip, #56	@ 0x38
 80053ee:	f8ce 304c 	str.w	r3, [lr, #76]	@ 0x4c
 80053f2:	2300      	movs	r3, #0
 80053f4:	f8ce 3050 	str.w	r3, [lr, #80]	@ 0x50
 80053f8:	2301      	movs	r3, #1
 80053fa:	f88e 4038 	strb.w	r4, [lr, #56]	@ 0x38
 80053fe:	f88e 3039 	strb.w	r3, [lr, #57]	@ 0x39
 8005402:	6903      	ldr	r3, [r0, #16]
 8005404:	f8ce 2044 	str.w	r2, [lr, #68]	@ 0x44
 8005408:	2b01      	cmp	r3, #1
 800540a:	eb00 010c 	add.w	r1, r0, ip
 800540e:	bf08      	it	eq
 8005410:	f8ce 2048 	streq.w	r2, [lr, #72]	@ 0x48
 8005414:	6800      	ldr	r0, [r0, #0]
 8005416:	b2da      	uxtb	r2, r3
 8005418:	b91c      	cbnz	r4, 8005422 <HAL_PCD_EP_Transmit+0x4a>
 800541a:	f7fc fdcd 	bl	8001fb8 <USB_EP0StartXfer>
 800541e:	2000      	movs	r0, #0
 8005420:	bd10      	pop	{r4, pc}
 8005422:	f7fc fcd7 	bl	8001dd4 <USB_EPStartXfer>
 8005426:	2000      	movs	r0, #0
 8005428:	bd10      	pop	{r4, pc}
 800542a:	bf00      	nop

0800542c <HAL_PCD_EP_SetStall>:
 800542c:	060a      	lsls	r2, r1, #24
 800542e:	b538      	push	{r3, r4, r5, lr}
 8005430:	460b      	mov	r3, r1
 8005432:	4604      	mov	r4, r0
 8005434:	f001 057f 	and.w	r5, r1, #127	@ 0x7f
 8005438:	d418      	bmi.n	800546c <HAL_PCD_EP_SetStall+0x40>
 800543a:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800543e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005442:	f501 71fc 	add.w	r1, r1, #504	@ 0x1f8
 8005446:	2201      	movs	r2, #1
 8005448:	09db      	lsrs	r3, r3, #7
 800544a:	708a      	strb	r2, [r1, #2]
 800544c:	700d      	strb	r5, [r1, #0]
 800544e:	704b      	strb	r3, [r1, #1]
 8005450:	f894 33b8 	ldrb.w	r3, [r4, #952]	@ 0x3b8
 8005454:	4293      	cmp	r3, r2
 8005456:	d016      	beq.n	8005486 <HAL_PCD_EP_SetStall+0x5a>
 8005458:	6820      	ldr	r0, [r4, #0]
 800545a:	f884 23b8 	strb.w	r2, [r4, #952]	@ 0x3b8
 800545e:	f7fc fe55 	bl	800210c <USB_EPSetStall>
 8005462:	b14d      	cbz	r5, 8005478 <HAL_PCD_EP_SetStall+0x4c>
 8005464:	2000      	movs	r0, #0
 8005466:	f884 03b8 	strb.w	r0, [r4, #952]	@ 0x3b8
 800546a:	bd38      	pop	{r3, r4, r5, pc}
 800546c:	ebc5 01c5 	rsb	r1, r5, r5, lsl #3
 8005470:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005474:	3138      	adds	r1, #56	@ 0x38
 8005476:	e7e6      	b.n	8005446 <HAL_PCD_EP_SetStall+0x1a>
 8005478:	7c21      	ldrb	r1, [r4, #16]
 800547a:	6820      	ldr	r0, [r4, #0]
 800547c:	f504 726f 	add.w	r2, r4, #956	@ 0x3bc
 8005480:	f7fc feec 	bl	800225c <USB_EP0_OutStart>
 8005484:	e7ee      	b.n	8005464 <HAL_PCD_EP_SetStall+0x38>
 8005486:	2002      	movs	r0, #2
 8005488:	bd38      	pop	{r3, r4, r5, pc}
 800548a:	bf00      	nop

0800548c <HAL_PCD_EP_ClrStall>:
 800548c:	b538      	push	{r3, r4, r5, lr}
 800548e:	f001 027f 	and.w	r2, r1, #127	@ 0x7f
 8005492:	460b      	mov	r3, r1
 8005494:	0609      	lsls	r1, r1, #24
 8005496:	4604      	mov	r4, r0
 8005498:	d418      	bmi.n	80054cc <HAL_PCD_EP_ClrStall+0x40>
 800549a:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 800549e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80054a2:	f501 71fc 	add.w	r1, r1, #504	@ 0x1f8
 80054a6:	09db      	lsrs	r3, r3, #7
 80054a8:	2500      	movs	r5, #0
 80054aa:	708d      	strb	r5, [r1, #2]
 80054ac:	700a      	strb	r2, [r1, #0]
 80054ae:	704b      	strb	r3, [r1, #1]
 80054b0:	f894 33b8 	ldrb.w	r3, [r4, #952]	@ 0x3b8
 80054b4:	2b01      	cmp	r3, #1
 80054b6:	d00f      	beq.n	80054d8 <HAL_PCD_EP_ClrStall+0x4c>
 80054b8:	2301      	movs	r3, #1
 80054ba:	6820      	ldr	r0, [r4, #0]
 80054bc:	f884 33b8 	strb.w	r3, [r4, #952]	@ 0x3b8
 80054c0:	f7fc fe40 	bl	8002144 <USB_EPClearStall>
 80054c4:	f884 53b8 	strb.w	r5, [r4, #952]	@ 0x3b8
 80054c8:	4628      	mov	r0, r5
 80054ca:	bd38      	pop	{r3, r4, r5, pc}
 80054cc:	ebc2 01c2 	rsb	r1, r2, r2, lsl #3
 80054d0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80054d4:	3138      	adds	r1, #56	@ 0x38
 80054d6:	e7e6      	b.n	80054a6 <HAL_PCD_EP_ClrStall+0x1a>
 80054d8:	2002      	movs	r0, #2
 80054da:	bd38      	pop	{r3, r4, r5, pc}

080054dc <MX_ADC1_Init>:
 80054dc:	b530      	push	{r4, r5, lr}
 80054de:	4825      	ldr	r0, [pc, #148]	@ (8005574 <MX_ADC1_Init+0x98>)
 80054e0:	4c25      	ldr	r4, [pc, #148]	@ (8005578 <MX_ADC1_Init+0x9c>)
 80054e2:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 80054e6:	b08f      	sub	sp, #60	@ 0x3c
 80054e8:	e9c4 0100 	strd	r0, r1, [r4]
 80054ec:	4823      	ldr	r0, [pc, #140]	@ (800557c <MX_ADC1_Init+0xa0>)
 80054ee:	2100      	movs	r1, #0
 80054f0:	2300      	movs	r3, #0
 80054f2:	2201      	movs	r2, #1
 80054f4:	e9c4 010a 	strd	r0, r1, [r4, #40]	@ 0x28
 80054f8:	4620      	mov	r0, r4
 80054fa:	60a3      	str	r3, [r4, #8]
 80054fc:	6123      	str	r3, [r4, #16]
 80054fe:	61a3      	str	r3, [r4, #24]
 8005500:	6223      	str	r3, [r4, #32]
 8005502:	60e3      	str	r3, [r4, #12]
 8005504:	61e2      	str	r2, [r4, #28]
 8005506:	6323      	str	r3, [r4, #48]	@ 0x30
 8005508:	6162      	str	r2, [r4, #20]
 800550a:	f004 fbe7 	bl	8009cdc <HAL_ADC_Init>
 800550e:	bb08      	cbnz	r0, 8005554 <MX_ADC1_Init+0x78>
 8005510:	2406      	movs	r4, #6
 8005512:	2501      	movs	r5, #1
 8005514:	2300      	movs	r3, #0
 8005516:	4818      	ldr	r0, [pc, #96]	@ (8005578 <MX_ADC1_Init+0x9c>)
 8005518:	9302      	str	r3, [sp, #8]
 800551a:	4669      	mov	r1, sp
 800551c:	e9cd 4500 	strd	r4, r5, [sp]
 8005520:	f004 fd52 	bl	8009fc8 <HAL_ADC_ConfigChannel>
 8005524:	bb08      	cbnz	r0, 800556a <MX_ADC1_Init+0x8e>
 8005526:	2201      	movs	r2, #1
 8005528:	2106      	movs	r1, #6
 800552a:	2300      	movs	r3, #0
 800552c:	e9cd 1205 	strd	r1, r2, [sp, #20]
 8005530:	f44f 1580 	mov.w	r5, #1048576	@ 0x100000
 8005534:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 8005538:	480f      	ldr	r0, [pc, #60]	@ (8005578 <MX_ADC1_Init+0x9c>)
 800553a:	9209      	str	r2, [sp, #36]	@ 0x24
 800553c:	a905      	add	r1, sp, #20
 800553e:	e9cd 450c 	strd	r4, r5, [sp, #48]	@ 0x30
 8005542:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 8005546:	9307      	str	r3, [sp, #28]
 8005548:	9308      	str	r3, [sp, #32]
 800554a:	f002 fcf3 	bl	8007f34 <HAL_ADCEx_InjectedConfigChannel>
 800554e:	b930      	cbnz	r0, 800555e <MX_ADC1_Init+0x82>
 8005550:	b00f      	add	sp, #60	@ 0x3c
 8005552:	bd30      	pop	{r4, r5, pc}
 8005554:	480a      	ldr	r0, [pc, #40]	@ (8005580 <MX_ADC1_Init+0xa4>)
 8005556:	215e      	movs	r1, #94	@ 0x5e
 8005558:	f7fe f952 	bl	8003800 <_Error_Handler>
 800555c:	e7d8      	b.n	8005510 <MX_ADC1_Init+0x34>
 800555e:	4808      	ldr	r0, [pc, #32]	@ (8005580 <MX_ADC1_Init+0xa4>)
 8005560:	2178      	movs	r1, #120	@ 0x78
 8005562:	f7fe f94d 	bl	8003800 <_Error_Handler>
 8005566:	b00f      	add	sp, #60	@ 0x3c
 8005568:	bd30      	pop	{r4, r5, pc}
 800556a:	4805      	ldr	r0, [pc, #20]	@ (8005580 <MX_ADC1_Init+0xa4>)
 800556c:	2168      	movs	r1, #104	@ 0x68
 800556e:	f7fe f947 	bl	8003800 <_Error_Handler>
 8005572:	e7d8      	b.n	8005526 <MX_ADC1_Init+0x4a>
 8005574:	40012000 	.word	0x40012000
 8005578:	20001028 	.word	0x20001028
 800557c:	0f000001 	.word	0x0f000001
 8005580:	0802961c 	.word	0x0802961c

08005584 <MX_ADC2_Init>:
 8005584:	b530      	push	{r4, r5, lr}
 8005586:	4826      	ldr	r0, [pc, #152]	@ (8005620 <MX_ADC2_Init+0x9c>)
 8005588:	4c26      	ldr	r4, [pc, #152]	@ (8005624 <MX_ADC2_Init+0xa0>)
 800558a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 800558e:	b08f      	sub	sp, #60	@ 0x3c
 8005590:	e9c4 0100 	strd	r0, r1, [r4]
 8005594:	f04f 6060 	mov.w	r0, #234881024	@ 0xe000000
 8005598:	f04f 5180 	mov.w	r1, #268435456	@ 0x10000000
 800559c:	2300      	movs	r3, #0
 800559e:	2201      	movs	r2, #1
 80055a0:	e9c4 010a 	strd	r0, r1, [r4, #40]	@ 0x28
 80055a4:	4620      	mov	r0, r4
 80055a6:	60a3      	str	r3, [r4, #8]
 80055a8:	6123      	str	r3, [r4, #16]
 80055aa:	61a3      	str	r3, [r4, #24]
 80055ac:	6223      	str	r3, [r4, #32]
 80055ae:	60e3      	str	r3, [r4, #12]
 80055b0:	61e2      	str	r2, [r4, #28]
 80055b2:	6323      	str	r3, [r4, #48]	@ 0x30
 80055b4:	6162      	str	r2, [r4, #20]
 80055b6:	f004 fb91 	bl	8009cdc <HAL_ADC_Init>
 80055ba:	bb08      	cbnz	r0, 8005600 <MX_ADC2_Init+0x7c>
 80055bc:	240d      	movs	r4, #13
 80055be:	2501      	movs	r5, #1
 80055c0:	2300      	movs	r3, #0
 80055c2:	4818      	ldr	r0, [pc, #96]	@ (8005624 <MX_ADC2_Init+0xa0>)
 80055c4:	9302      	str	r3, [sp, #8]
 80055c6:	4669      	mov	r1, sp
 80055c8:	e9cd 4500 	strd	r4, r5, [sp]
 80055cc:	f004 fcfc 	bl	8009fc8 <HAL_ADC_ConfigChannel>
 80055d0:	bb08      	cbnz	r0, 8005616 <MX_ADC2_Init+0x92>
 80055d2:	2201      	movs	r2, #1
 80055d4:	210a      	movs	r1, #10
 80055d6:	2300      	movs	r3, #0
 80055d8:	e9cd 1205 	strd	r1, r2, [sp, #20]
 80055dc:	f44f 1580 	mov.w	r5, #1048576	@ 0x100000
 80055e0:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 80055e4:	480f      	ldr	r0, [pc, #60]	@ (8005624 <MX_ADC2_Init+0xa0>)
 80055e6:	9209      	str	r2, [sp, #36]	@ 0x24
 80055e8:	a905      	add	r1, sp, #20
 80055ea:	e9cd 450c 	strd	r4, r5, [sp, #48]	@ 0x30
 80055ee:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 80055f2:	9307      	str	r3, [sp, #28]
 80055f4:	9308      	str	r3, [sp, #32]
 80055f6:	f002 fc9d 	bl	8007f34 <HAL_ADCEx_InjectedConfigChannel>
 80055fa:	b930      	cbnz	r0, 800560a <MX_ADC2_Init+0x86>
 80055fc:	b00f      	add	sp, #60	@ 0x3c
 80055fe:	bd30      	pop	{r4, r5, pc}
 8005600:	4809      	ldr	r0, [pc, #36]	@ (8005628 <MX_ADC2_Init+0xa4>)
 8005602:	2192      	movs	r1, #146	@ 0x92
 8005604:	f7fe f8fc 	bl	8003800 <_Error_Handler>
 8005608:	e7d8      	b.n	80055bc <MX_ADC2_Init+0x38>
 800560a:	4807      	ldr	r0, [pc, #28]	@ (8005628 <MX_ADC2_Init+0xa4>)
 800560c:	21ac      	movs	r1, #172	@ 0xac
 800560e:	f7fe f8f7 	bl	8003800 <_Error_Handler>
 8005612:	b00f      	add	sp, #60	@ 0x3c
 8005614:	bd30      	pop	{r4, r5, pc}
 8005616:	4804      	ldr	r0, [pc, #16]	@ (8005628 <MX_ADC2_Init+0xa4>)
 8005618:	219c      	movs	r1, #156	@ 0x9c
 800561a:	f7fe f8f1 	bl	8003800 <_Error_Handler>
 800561e:	e7d8      	b.n	80055d2 <MX_ADC2_Init+0x4e>
 8005620:	40012100 	.word	0x40012100
 8005624:	20000fe0 	.word	0x20000fe0
 8005628:	0802961c 	.word	0x0802961c

0800562c <MX_ADC3_Init>:
 800562c:	b530      	push	{r4, r5, lr}
 800562e:	4826      	ldr	r0, [pc, #152]	@ (80056c8 <MX_ADC3_Init+0x9c>)
 8005630:	4c26      	ldr	r4, [pc, #152]	@ (80056cc <MX_ADC3_Init+0xa0>)
 8005632:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8005636:	b08f      	sub	sp, #60	@ 0x3c
 8005638:	e9c4 0100 	strd	r0, r1, [r4]
 800563c:	f04f 6060 	mov.w	r0, #234881024	@ 0xe000000
 8005640:	f04f 5180 	mov.w	r1, #268435456	@ 0x10000000
 8005644:	2300      	movs	r3, #0
 8005646:	2201      	movs	r2, #1
 8005648:	e9c4 010a 	strd	r0, r1, [r4, #40]	@ 0x28
 800564c:	4620      	mov	r0, r4
 800564e:	60a3      	str	r3, [r4, #8]
 8005650:	6123      	str	r3, [r4, #16]
 8005652:	61a3      	str	r3, [r4, #24]
 8005654:	6223      	str	r3, [r4, #32]
 8005656:	60e3      	str	r3, [r4, #12]
 8005658:	61e2      	str	r2, [r4, #28]
 800565a:	6323      	str	r3, [r4, #48]	@ 0x30
 800565c:	6162      	str	r2, [r4, #20]
 800565e:	f004 fb3d 	bl	8009cdc <HAL_ADC_Init>
 8005662:	bb08      	cbnz	r0, 80056a8 <MX_ADC3_Init+0x7c>
 8005664:	240c      	movs	r4, #12
 8005666:	2501      	movs	r5, #1
 8005668:	2300      	movs	r3, #0
 800566a:	4818      	ldr	r0, [pc, #96]	@ (80056cc <MX_ADC3_Init+0xa0>)
 800566c:	9302      	str	r3, [sp, #8]
 800566e:	4669      	mov	r1, sp
 8005670:	e9cd 4500 	strd	r4, r5, [sp]
 8005674:	f004 fca8 	bl	8009fc8 <HAL_ADC_ConfigChannel>
 8005678:	bb08      	cbnz	r0, 80056be <MX_ADC3_Init+0x92>
 800567a:	2201      	movs	r2, #1
 800567c:	210b      	movs	r1, #11
 800567e:	2300      	movs	r3, #0
 8005680:	e9cd 1205 	strd	r1, r2, [sp, #20]
 8005684:	f44f 1580 	mov.w	r5, #1048576	@ 0x100000
 8005688:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 800568c:	480f      	ldr	r0, [pc, #60]	@ (80056cc <MX_ADC3_Init+0xa0>)
 800568e:	9209      	str	r2, [sp, #36]	@ 0x24
 8005690:	a905      	add	r1, sp, #20
 8005692:	e9cd 450c 	strd	r4, r5, [sp, #48]	@ 0x30
 8005696:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 800569a:	9307      	str	r3, [sp, #28]
 800569c:	9308      	str	r3, [sp, #32]
 800569e:	f002 fc49 	bl	8007f34 <HAL_ADCEx_InjectedConfigChannel>
 80056a2:	b930      	cbnz	r0, 80056b2 <MX_ADC3_Init+0x86>
 80056a4:	b00f      	add	sp, #60	@ 0x3c
 80056a6:	bd30      	pop	{r4, r5, pc}
 80056a8:	4809      	ldr	r0, [pc, #36]	@ (80056d0 <MX_ADC3_Init+0xa4>)
 80056aa:	21c6      	movs	r1, #198	@ 0xc6
 80056ac:	f7fe f8a8 	bl	8003800 <_Error_Handler>
 80056b0:	e7d8      	b.n	8005664 <MX_ADC3_Init+0x38>
 80056b2:	4807      	ldr	r0, [pc, #28]	@ (80056d0 <MX_ADC3_Init+0xa4>)
 80056b4:	21e0      	movs	r1, #224	@ 0xe0
 80056b6:	f7fe f8a3 	bl	8003800 <_Error_Handler>
 80056ba:	b00f      	add	sp, #60	@ 0x3c
 80056bc:	bd30      	pop	{r4, r5, pc}
 80056be:	4804      	ldr	r0, [pc, #16]	@ (80056d0 <MX_ADC3_Init+0xa4>)
 80056c0:	21d0      	movs	r1, #208	@ 0xd0
 80056c2:	f7fe f89d 	bl	8003800 <_Error_Handler>
 80056c6:	e7d8      	b.n	800567a <MX_ADC3_Init+0x4e>
 80056c8:	40012200 	.word	0x40012200
 80056cc:	20000f98 	.word	0x20000f98
 80056d0:	0802961c 	.word	0x0802961c
 80056d4:	00000000 	.word	0x00000000

080056d8 <HAL_ADC_MspInit>:
 80056d8:	b570      	push	{r4, r5, r6, lr}
 80056da:	4a4b      	ldr	r2, [pc, #300]	@ (8005808 <HAL_ADC_MspInit+0x130>)
 80056dc:	6803      	ldr	r3, [r0, #0]
 80056de:	4293      	cmp	r3, r2
 80056e0:	b08a      	sub	sp, #40	@ 0x28
 80056e2:	d007      	beq.n	80056f4 <HAL_ADC_MspInit+0x1c>
 80056e4:	4a49      	ldr	r2, [pc, #292]	@ (800580c <HAL_ADC_MspInit+0x134>)
 80056e6:	4293      	cmp	r3, r2
 80056e8:	d048      	beq.n	800577c <HAL_ADC_MspInit+0xa4>
 80056ea:	4a49      	ldr	r2, [pc, #292]	@ (8005810 <HAL_ADC_MspInit+0x138>)
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d06d      	beq.n	80057cc <HAL_ADC_MspInit+0xf4>
 80056f0:	b00a      	add	sp, #40	@ 0x28
 80056f2:	bd70      	pop	{r4, r5, r6, pc}
 80056f4:	2600      	movs	r6, #0
 80056f6:	4b47      	ldr	r3, [pc, #284]	@ (8005814 <HAL_ADC_MspInit+0x13c>)
 80056f8:	9601      	str	r6, [sp, #4]
 80056fa:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80056fc:	4d46      	ldr	r5, [pc, #280]	@ (8005818 <HAL_ADC_MspInit+0x140>)
 80056fe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005702:	645a      	str	r2, [r3, #68]	@ 0x44
 8005704:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005706:	9606      	str	r6, [sp, #24]
 8005708:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800570c:	9301      	str	r3, [sp, #4]
 800570e:	222f      	movs	r2, #47	@ 0x2f
 8005710:	2303      	movs	r3, #3
 8005712:	a904      	add	r1, sp, #16
 8005714:	4604      	mov	r4, r0
 8005716:	4841      	ldr	r0, [pc, #260]	@ (800581c <HAL_ADC_MspInit+0x144>)
 8005718:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800571c:	9b01      	ldr	r3, [sp, #4]
 800571e:	f004 fcfb 	bl	800a118 <HAL_GPIO_Init>
 8005722:	2270      	movs	r2, #112	@ 0x70
 8005724:	2303      	movs	r3, #3
 8005726:	483e      	ldr	r0, [pc, #248]	@ (8005820 <HAL_ADC_MspInit+0x148>)
 8005728:	9606      	str	r6, [sp, #24]
 800572a:	a904      	add	r1, sp, #16
 800572c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005730:	f004 fcf2 	bl	800a118 <HAL_GPIO_Init>
 8005734:	4a3b      	ldr	r2, [pc, #236]	@ (8005824 <HAL_ADC_MspInit+0x14c>)
 8005736:	626e      	str	r6, [r5, #36]	@ 0x24
 8005738:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800573c:	e9c5 2600 	strd	r2, r6, [r5]
 8005740:	612b      	str	r3, [r5, #16]
 8005742:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8005746:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800574a:	e9c5 2305 	strd	r2, r3, [r5, #20]
 800574e:	4628      	mov	r0, r5
 8005750:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005754:	e9c5 6602 	strd	r6, r6, [r5, #8]
 8005758:	e9c5 3607 	strd	r3, r6, [r5, #28]
 800575c:	f7fe fe40 	bl	80043e0 <HAL_DMA_Init>
 8005760:	2800      	cmp	r0, #0
 8005762:	d146      	bne.n	80057f2 <HAL_ADC_MspInit+0x11a>
 8005764:	63a5      	str	r5, [r4, #56]	@ 0x38
 8005766:	2200      	movs	r2, #0
 8005768:	2105      	movs	r1, #5
 800576a:	2012      	movs	r0, #18
 800576c:	63ac      	str	r4, [r5, #56]	@ 0x38
 800576e:	f7fb fc1b 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005772:	2012      	movs	r0, #18
 8005774:	f7fb fc54 	bl	8001020 <HAL_NVIC_EnableIRQ>
 8005778:	b00a      	add	sp, #40	@ 0x28
 800577a:	bd70      	pop	{r4, r5, r6, pc}
 800577c:	4b25      	ldr	r3, [pc, #148]	@ (8005814 <HAL_ADC_MspInit+0x13c>)
 800577e:	4827      	ldr	r0, [pc, #156]	@ (800581c <HAL_ADC_MspInit+0x144>)
 8005780:	2400      	movs	r4, #0
 8005782:	9402      	str	r4, [sp, #8]
 8005784:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005786:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800578a:	645a      	str	r2, [r3, #68]	@ 0x44
 800578c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800578e:	9406      	str	r4, [sp, #24]
 8005790:	ed9f 7b1b 	vldr	d7, [pc, #108]	@ 8005800 <HAL_ADC_MspInit+0x128>
 8005794:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005798:	9302      	str	r3, [sp, #8]
 800579a:	a904      	add	r1, sp, #16
 800579c:	9b02      	ldr	r3, [sp, #8]
 800579e:	ed8d 7b04 	vstr	d7, [sp, #16]
 80057a2:	f004 fcb9 	bl	800a118 <HAL_GPIO_Init>
 80057a6:	2270      	movs	r2, #112	@ 0x70
 80057a8:	2303      	movs	r3, #3
 80057aa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80057ae:	481c      	ldr	r0, [pc, #112]	@ (8005820 <HAL_ADC_MspInit+0x148>)
 80057b0:	a904      	add	r1, sp, #16
 80057b2:	9406      	str	r4, [sp, #24]
 80057b4:	f004 fcb0 	bl	800a118 <HAL_GPIO_Init>
 80057b8:	4622      	mov	r2, r4
 80057ba:	2105      	movs	r1, #5
 80057bc:	2012      	movs	r0, #18
 80057be:	f7fb fbf3 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80057c2:	2012      	movs	r0, #18
 80057c4:	f7fb fc2c 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80057c8:	b00a      	add	sp, #40	@ 0x28
 80057ca:	bd70      	pop	{r4, r5, r6, pc}
 80057cc:	4b11      	ldr	r3, [pc, #68]	@ (8005814 <HAL_ADC_MspInit+0x13c>)
 80057ce:	2400      	movs	r4, #0
 80057d0:	9403      	str	r4, [sp, #12]
 80057d2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80057d4:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80057d8:	645a      	str	r2, [r3, #68]	@ 0x44
 80057da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80057dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80057e0:	200f      	movs	r0, #15
 80057e2:	2103      	movs	r1, #3
 80057e4:	9303      	str	r3, [sp, #12]
 80057e6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80057ea:	9b03      	ldr	r3, [sp, #12]
 80057ec:	480b      	ldr	r0, [pc, #44]	@ (800581c <HAL_ADC_MspInit+0x144>)
 80057ee:	a904      	add	r1, sp, #16
 80057f0:	e7df      	b.n	80057b2 <HAL_ADC_MspInit+0xda>
 80057f2:	480d      	ldr	r0, [pc, #52]	@ (8005828 <HAL_ADC_MspInit+0x150>)
 80057f4:	f44f 718a 	mov.w	r1, #276	@ 0x114
 80057f8:	f7fe f802 	bl	8003800 <_Error_Handler>
 80057fc:	e7b2      	b.n	8005764 <HAL_ADC_MspInit+0x8c>
 80057fe:	bf00      	nop
 8005800:	0000002f 	.word	0x0000002f
 8005804:	00000003 	.word	0x00000003
 8005808:	40012000 	.word	0x40012000
 800580c:	40012100 	.word	0x40012100
 8005810:	40012200 	.word	0x40012200
 8005814:	40023800 	.word	0x40023800
 8005818:	20000f38 	.word	0x20000f38
 800581c:	40020800 	.word	0x40020800
 8005820:	40020000 	.word	0x40020000
 8005824:	40026410 	.word	0x40026410
 8005828:	0802961c 	.word	0x0802961c

0800582c <USBD_StdDevReq>:
 800582c:	b530      	push	{r4, r5, lr}
 800582e:	784b      	ldrb	r3, [r1, #1]
 8005830:	b083      	sub	sp, #12
 8005832:	460d      	mov	r5, r1
 8005834:	4604      	mov	r4, r0
 8005836:	2b09      	cmp	r3, #9
 8005838:	d80b      	bhi.n	8005852 <USBD_StdDevReq+0x26>
 800583a:	e8df f003 	tbb	[pc, r3]
 800583e:	4836      	.short	0x4836
 8005840:	050a570a 	.word	0x050a570a
 8005844:	15790a63 	.word	0x15790a63
 8005848:	888b      	ldrh	r3, [r1, #4]
 800584a:	b913      	cbnz	r3, 8005852 <USBD_StdDevReq+0x26>
 800584c:	88cb      	ldrh	r3, [r1, #6]
 800584e:	2b00      	cmp	r3, #0
 8005850:	d07b      	beq.n	800594a <USBD_StdDevReq+0x11e>
 8005852:	2180      	movs	r1, #128	@ 0x80
 8005854:	4620      	mov	r0, r4
 8005856:	f7fe f8f7 	bl	8003a48 <USBD_LL_StallEP>
 800585a:	2100      	movs	r1, #0
 800585c:	4620      	mov	r0, r4
 800585e:	f7fe f8f3 	bl	8003a48 <USBD_LL_StallEP>
 8005862:	2000      	movs	r0, #0
 8005864:	b003      	add	sp, #12
 8005866:	bd30      	pop	{r4, r5, pc}
 8005868:	7889      	ldrb	r1, [r1, #2]
 800586a:	4d96      	ldr	r5, [pc, #600]	@ (8005ac4 <USBD_StdDevReq+0x298>)
 800586c:	2901      	cmp	r1, #1
 800586e:	7029      	strb	r1, [r5, #0]
 8005870:	d8ef      	bhi.n	8005852 <USBD_StdDevReq+0x26>
 8005872:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 8005876:	2b02      	cmp	r3, #2
 8005878:	d07e      	beq.n	8005978 <USBD_StdDevReq+0x14c>
 800587a:	2b03      	cmp	r3, #3
 800587c:	d1e9      	bne.n	8005852 <USBD_StdDevReq+0x26>
 800587e:	2900      	cmp	r1, #0
 8005880:	f000 810e 	beq.w	8005aa0 <USBD_StdDevReq+0x274>
 8005884:	6841      	ldr	r1, [r0, #4]
 8005886:	2901      	cmp	r1, #1
 8005888:	d009      	beq.n	800589e <USBD_StdDevReq+0x72>
 800588a:	b2c9      	uxtb	r1, r1
 800588c:	f7fe fc90 	bl	80041b0 <USBD_ClrClassConfig>
 8005890:	7829      	ldrb	r1, [r5, #0]
 8005892:	6061      	str	r1, [r4, #4]
 8005894:	4620      	mov	r0, r4
 8005896:	f7fe fc7d 	bl	8004194 <USBD_SetClassConfig>
 800589a:	2802      	cmp	r0, #2
 800589c:	d0d9      	beq.n	8005852 <USBD_StdDevReq+0x26>
 800589e:	4620      	mov	r0, r4
 80058a0:	f7fb fc28 	bl	80010f4 <USBD_CtlSendStatus>
 80058a4:	2000      	movs	r0, #0
 80058a6:	b003      	add	sp, #12
 80058a8:	bd30      	pop	{r4, r5, pc}
 80058aa:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 80058ae:	3b02      	subs	r3, #2
 80058b0:	2b01      	cmp	r3, #1
 80058b2:	d8ce      	bhi.n	8005852 <USBD_StdDevReq+0x26>
 80058b4:	f8d0 3204 	ldr.w	r3, [r0, #516]	@ 0x204
 80058b8:	4601      	mov	r1, r0
 80058ba:	2b00      	cmp	r3, #0
 80058bc:	bf0c      	ite	eq
 80058be:	2301      	moveq	r3, #1
 80058c0:	2303      	movne	r3, #3
 80058c2:	f841 3f0c 	str.w	r3, [r1, #12]!
 80058c6:	2202      	movs	r2, #2
 80058c8:	f7fb fbe8 	bl	800109c <USBD_CtlSendData>
 80058cc:	e7c9      	b.n	8005862 <USBD_StdDevReq+0x36>
 80058ce:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 80058d2:	3b02      	subs	r3, #2
 80058d4:	2b01      	cmp	r3, #1
 80058d6:	d8bc      	bhi.n	8005852 <USBD_StdDevReq+0x26>
 80058d8:	884b      	ldrh	r3, [r1, #2]
 80058da:	2b01      	cmp	r3, #1
 80058dc:	d1c1      	bne.n	8005862 <USBD_StdDevReq+0x36>
 80058de:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80058e2:	2200      	movs	r2, #0
 80058e4:	689b      	ldr	r3, [r3, #8]
 80058e6:	f8c0 2204 	str.w	r2, [r0, #516]	@ 0x204
 80058ea:	e007      	b.n	80058fc <USBD_StdDevReq+0xd0>
 80058ec:	884b      	ldrh	r3, [r1, #2]
 80058ee:	2b01      	cmp	r3, #1
 80058f0:	d1b7      	bne.n	8005862 <USBD_StdDevReq+0x36>
 80058f2:	f8d0 2214 	ldr.w	r2, [r0, #532]	@ 0x214
 80058f6:	f8c0 3204 	str.w	r3, [r0, #516]	@ 0x204
 80058fa:	6893      	ldr	r3, [r2, #8]
 80058fc:	4629      	mov	r1, r5
 80058fe:	4620      	mov	r0, r4
 8005900:	4798      	blx	r3
 8005902:	e7cc      	b.n	800589e <USBD_StdDevReq+0x72>
 8005904:	8849      	ldrh	r1, [r1, #2]
 8005906:	0a0b      	lsrs	r3, r1, #8
 8005908:	3b01      	subs	r3, #1
 800590a:	2b06      	cmp	r3, #6
 800590c:	d8a1      	bhi.n	8005852 <USBD_StdDevReq+0x26>
 800590e:	a201      	add	r2, pc, #4	@ (adr r2, 8005914 <USBD_StdDevReq+0xe8>)
 8005910:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005914:	08005a1b 	.word	0x08005a1b
 8005918:	08005a03 	.word	0x08005a03
 800591c:	080059f3 	.word	0x080059f3
 8005920:	08005853 	.word	0x08005853
 8005924:	08005853 	.word	0x08005853
 8005928:	080059dd 	.word	0x080059dd
 800592c:	0800599f 	.word	0x0800599f
 8005930:	88ca      	ldrh	r2, [r1, #6]
 8005932:	2a01      	cmp	r2, #1
 8005934:	d18d      	bne.n	8005852 <USBD_StdDevReq+0x26>
 8005936:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 800593a:	2b02      	cmp	r3, #2
 800593c:	d028      	beq.n	8005990 <USBD_StdDevReq+0x164>
 800593e:	2b03      	cmp	r3, #3
 8005940:	d187      	bne.n	8005852 <USBD_StdDevReq+0x26>
 8005942:	1d01      	adds	r1, r0, #4
 8005944:	f7fb fbaa 	bl	800109c <USBD_CtlSendData>
 8005948:	e78b      	b.n	8005862 <USBD_StdDevReq+0x36>
 800594a:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 800594e:	2b03      	cmp	r3, #3
 8005950:	f43f af7f 	beq.w	8005852 <USBD_StdDevReq+0x26>
 8005954:	884d      	ldrh	r5, [r1, #2]
 8005956:	f005 057f 	and.w	r5, r5, #127	@ 0x7f
 800595a:	f880 51fe 	strb.w	r5, [r0, #510]	@ 0x1fe
 800595e:	4629      	mov	r1, r5
 8005960:	f7fe f89e 	bl	8003aa0 <USBD_LL_SetUSBAddress>
 8005964:	4620      	mov	r0, r4
 8005966:	f7fb fbc5 	bl	80010f4 <USBD_CtlSendStatus>
 800596a:	2d00      	cmp	r5, #0
 800596c:	f000 808d 	beq.w	8005a8a <USBD_StdDevReq+0x25e>
 8005970:	2302      	movs	r3, #2
 8005972:	f884 31fc 	strb.w	r3, [r4, #508]	@ 0x1fc
 8005976:	e774      	b.n	8005862 <USBD_StdDevReq+0x36>
 8005978:	2900      	cmp	r1, #0
 800597a:	d090      	beq.n	800589e <USBD_StdDevReq+0x72>
 800597c:	2101      	movs	r1, #1
 800597e:	2303      	movs	r3, #3
 8005980:	6041      	str	r1, [r0, #4]
 8005982:	f880 31fc 	strb.w	r3, [r0, #508]	@ 0x1fc
 8005986:	f7fe fc05 	bl	8004194 <USBD_SetClassConfig>
 800598a:	2802      	cmp	r0, #2
 800598c:	d187      	bne.n	800589e <USBD_StdDevReq+0x72>
 800598e:	e760      	b.n	8005852 <USBD_StdDevReq+0x26>
 8005990:	4601      	mov	r1, r0
 8005992:	2300      	movs	r3, #0
 8005994:	f841 3f08 	str.w	r3, [r1, #8]!
 8005998:	f7fb fb80 	bl	800109c <USBD_CtlSendData>
 800599c:	e761      	b.n	8005862 <USBD_StdDevReq+0x36>
 800599e:	7c03      	ldrb	r3, [r0, #16]
 80059a0:	2b00      	cmp	r3, #0
 80059a2:	f47f af56 	bne.w	8005852 <USBD_StdDevReq+0x26>
 80059a6:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80059aa:	f10d 0006 	add.w	r0, sp, #6
 80059ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80059b0:	4798      	blx	r3
 80059b2:	2307      	movs	r3, #7
 80059b4:	7043      	strb	r3, [r0, #1]
 80059b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	f43f af51 	beq.w	8005862 <USBD_StdDevReq+0x36>
 80059c0:	88ea      	ldrh	r2, [r5, #6]
 80059c2:	2a00      	cmp	r2, #0
 80059c4:	f43f af4d 	beq.w	8005862 <USBD_StdDevReq+0x36>
 80059c8:	429a      	cmp	r2, r3
 80059ca:	bf28      	it	cs
 80059cc:	461a      	movcs	r2, r3
 80059ce:	4601      	mov	r1, r0
 80059d0:	4620      	mov	r0, r4
 80059d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80059d6:	f7fb fb61 	bl	800109c <USBD_CtlSendData>
 80059da:	e742      	b.n	8005862 <USBD_StdDevReq+0x36>
 80059dc:	7c03      	ldrb	r3, [r0, #16]
 80059de:	2b00      	cmp	r3, #0
 80059e0:	f47f af37 	bne.w	8005852 <USBD_StdDevReq+0x26>
 80059e4:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 80059e8:	f10d 0006 	add.w	r0, sp, #6
 80059ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80059ee:	4798      	blx	r3
 80059f0:	e7e1      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 80059f2:	b2c9      	uxtb	r1, r1
 80059f4:	2905      	cmp	r1, #5
 80059f6:	d85d      	bhi.n	8005ab4 <USBD_StdDevReq+0x288>
 80059f8:	e8df f001 	tbb	[pc, r1]
 80059fc:	37171f27 	.word	0x37171f27
 8005a00:	3f2f      	.short	0x3f2f
 8005a02:	7c02      	ldrb	r2, [r0, #16]
 8005a04:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8005a08:	2a00      	cmp	r2, #0
 8005a0a:	d142      	bne.n	8005a92 <USBD_StdDevReq+0x266>
 8005a0c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005a0e:	f10d 0006 	add.w	r0, sp, #6
 8005a12:	4798      	blx	r3
 8005a14:	2302      	movs	r3, #2
 8005a16:	7043      	strb	r3, [r0, #1]
 8005a18:	e7cd      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a1a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a1e:	7c00      	ldrb	r0, [r0, #16]
 8005a20:	681b      	ldr	r3, [r3, #0]
 8005a22:	f10d 0106 	add.w	r1, sp, #6
 8005a26:	4798      	blx	r3
 8005a28:	e7c5      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a2a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a2e:	7c00      	ldrb	r0, [r0, #16]
 8005a30:	68db      	ldr	r3, [r3, #12]
 8005a32:	f10d 0106 	add.w	r1, sp, #6
 8005a36:	4798      	blx	r3
 8005a38:	e7bd      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a3a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a3e:	7c00      	ldrb	r0, [r0, #16]
 8005a40:	689b      	ldr	r3, [r3, #8]
 8005a42:	f10d 0106 	add.w	r1, sp, #6
 8005a46:	4798      	blx	r3
 8005a48:	e7b5      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a4a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a4e:	7c00      	ldrb	r0, [r0, #16]
 8005a50:	685b      	ldr	r3, [r3, #4]
 8005a52:	f10d 0106 	add.w	r1, sp, #6
 8005a56:	4798      	blx	r3
 8005a58:	e7ad      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a5a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a5e:	7c00      	ldrb	r0, [r0, #16]
 8005a60:	695b      	ldr	r3, [r3, #20]
 8005a62:	f10d 0106 	add.w	r1, sp, #6
 8005a66:	4798      	blx	r3
 8005a68:	e7a5      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a6a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a6e:	7c00      	ldrb	r0, [r0, #16]
 8005a70:	691b      	ldr	r3, [r3, #16]
 8005a72:	f10d 0106 	add.w	r1, sp, #6
 8005a76:	4798      	blx	r3
 8005a78:	e79d      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a7a:	f8d0 3210 	ldr.w	r3, [r0, #528]	@ 0x210
 8005a7e:	7c00      	ldrb	r0, [r0, #16]
 8005a80:	699b      	ldr	r3, [r3, #24]
 8005a82:	f10d 0106 	add.w	r1, sp, #6
 8005a86:	4798      	blx	r3
 8005a88:	e795      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005a8a:	2301      	movs	r3, #1
 8005a8c:	f884 31fc 	strb.w	r3, [r4, #508]	@ 0x1fc
 8005a90:	e6e7      	b.n	8005862 <USBD_StdDevReq+0x36>
 8005a92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a94:	f10d 0006 	add.w	r0, sp, #6
 8005a98:	4798      	blx	r3
 8005a9a:	2302      	movs	r3, #2
 8005a9c:	7043      	strb	r3, [r0, #1]
 8005a9e:	e78a      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005aa0:	2302      	movs	r3, #2
 8005aa2:	f880 31fc 	strb.w	r3, [r0, #508]	@ 0x1fc
 8005aa6:	6041      	str	r1, [r0, #4]
 8005aa8:	f7fe fb82 	bl	80041b0 <USBD_ClrClassConfig>
 8005aac:	4620      	mov	r0, r4
 8005aae:	f7fb fb21 	bl	80010f4 <USBD_CtlSendStatus>
 8005ab2:	e6d6      	b.n	8005862 <USBD_StdDevReq+0x36>
 8005ab4:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8005ab8:	f10d 0206 	add.w	r2, sp, #6
 8005abc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005abe:	4798      	blx	r3
 8005ac0:	e779      	b.n	80059b6 <USBD_StdDevReq+0x18a>
 8005ac2:	bf00      	nop
 8005ac4:	20001070 	.word	0x20001070

08005ac8 <USBD_StdItfReq>:
 8005ac8:	b538      	push	{r3, r4, r5, lr}
 8005aca:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 8005ace:	2b03      	cmp	r3, #3
 8005ad0:	4604      	mov	r4, r0
 8005ad2:	d10d      	bne.n	8005af0 <USBD_StdItfReq+0x28>
 8005ad4:	790b      	ldrb	r3, [r1, #4]
 8005ad6:	2b01      	cmp	r3, #1
 8005ad8:	460d      	mov	r5, r1
 8005ada:	d809      	bhi.n	8005af0 <USBD_StdItfReq+0x28>
 8005adc:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8005ae0:	689b      	ldr	r3, [r3, #8]
 8005ae2:	4798      	blx	r3
 8005ae4:	88eb      	ldrh	r3, [r5, #6]
 8005ae6:	b95b      	cbnz	r3, 8005b00 <USBD_StdItfReq+0x38>
 8005ae8:	4620      	mov	r0, r4
 8005aea:	f7fb fb03 	bl	80010f4 <USBD_CtlSendStatus>
 8005aee:	e007      	b.n	8005b00 <USBD_StdItfReq+0x38>
 8005af0:	2180      	movs	r1, #128	@ 0x80
 8005af2:	4620      	mov	r0, r4
 8005af4:	f7fd ffa8 	bl	8003a48 <USBD_LL_StallEP>
 8005af8:	2100      	movs	r1, #0
 8005afa:	4620      	mov	r0, r4
 8005afc:	f7fd ffa4 	bl	8003a48 <USBD_LL_StallEP>
 8005b00:	2000      	movs	r0, #0
 8005b02:	bd38      	pop	{r3, r4, r5, pc}

08005b04 <USBD_StdEPReq>:
 8005b04:	b538      	push	{r3, r4, r5, lr}
 8005b06:	780b      	ldrb	r3, [r1, #0]
 8005b08:	888a      	ldrh	r2, [r1, #4]
 8005b0a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8005b0e:	2b20      	cmp	r3, #32
 8005b10:	4605      	mov	r5, r0
 8005b12:	d023      	beq.n	8005b5c <USBD_StdEPReq+0x58>
 8005b14:	784b      	ldrb	r3, [r1, #1]
 8005b16:	2b01      	cmp	r3, #1
 8005b18:	460c      	mov	r4, r1
 8005b1a:	fa5f fc82 	uxtb.w	ip, r2
 8005b1e:	d03b      	beq.n	8005b98 <USBD_StdEPReq+0x94>
 8005b20:	2b03      	cmp	r3, #3
 8005b22:	d021      	beq.n	8005b68 <USBD_StdEPReq+0x64>
 8005b24:	b9c3      	cbnz	r3, 8005b58 <USBD_StdEPReq+0x54>
 8005b26:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 8005b2a:	2b02      	cmp	r3, #2
 8005b2c:	d04e      	beq.n	8005bcc <USBD_StdEPReq+0xc8>
 8005b2e:	2b03      	cmp	r3, #3
 8005b30:	d142      	bne.n	8005bb8 <USBD_StdEPReq+0xb4>
 8005b32:	0613      	lsls	r3, r2, #24
 8005b34:	d451      	bmi.n	8005bda <USBD_StdEPReq+0xd6>
 8005b36:	eb00 140c 	add.w	r4, r0, ip, lsl #4
 8005b3a:	f504 7482 	add.w	r4, r4, #260	@ 0x104
 8005b3e:	4661      	mov	r1, ip
 8005b40:	4628      	mov	r0, r5
 8005b42:	f7fd ff99 	bl	8003a78 <USBD_LL_IsStallEP>
 8005b46:	3800      	subs	r0, #0
 8005b48:	bf18      	it	ne
 8005b4a:	2001      	movne	r0, #1
 8005b4c:	6020      	str	r0, [r4, #0]
 8005b4e:	2202      	movs	r2, #2
 8005b50:	4621      	mov	r1, r4
 8005b52:	4628      	mov	r0, r5
 8005b54:	f7fb faa2 	bl	800109c <USBD_CtlSendData>
 8005b58:	2000      	movs	r0, #0
 8005b5a:	bd38      	pop	{r3, r4, r5, pc}
 8005b5c:	f8d0 3214 	ldr.w	r3, [r0, #532]	@ 0x214
 8005b60:	689b      	ldr	r3, [r3, #8]
 8005b62:	4798      	blx	r3
 8005b64:	2000      	movs	r0, #0
 8005b66:	bd38      	pop	{r3, r4, r5, pc}
 8005b68:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 8005b6c:	2b02      	cmp	r3, #2
 8005b6e:	d02d      	beq.n	8005bcc <USBD_StdEPReq+0xc8>
 8005b70:	2b03      	cmp	r3, #3
 8005b72:	d121      	bne.n	8005bb8 <USBD_StdEPReq+0xb4>
 8005b74:	884b      	ldrh	r3, [r1, #2]
 8005b76:	b92b      	cbnz	r3, 8005b84 <USBD_StdEPReq+0x80>
 8005b78:	f01c 0f7f 	tst.w	ip, #127	@ 0x7f
 8005b7c:	d002      	beq.n	8005b84 <USBD_StdEPReq+0x80>
 8005b7e:	4661      	mov	r1, ip
 8005b80:	f7fd ff62 	bl	8003a48 <USBD_LL_StallEP>
 8005b84:	f8d5 3214 	ldr.w	r3, [r5, #532]	@ 0x214
 8005b88:	4621      	mov	r1, r4
 8005b8a:	689b      	ldr	r3, [r3, #8]
 8005b8c:	4628      	mov	r0, r5
 8005b8e:	4798      	blx	r3
 8005b90:	4628      	mov	r0, r5
 8005b92:	f7fb faaf 	bl	80010f4 <USBD_CtlSendStatus>
 8005b96:	e7df      	b.n	8005b58 <USBD_StdEPReq+0x54>
 8005b98:	f890 31fc 	ldrb.w	r3, [r0, #508]	@ 0x1fc
 8005b9c:	2b02      	cmp	r3, #2
 8005b9e:	d015      	beq.n	8005bcc <USBD_StdEPReq+0xc8>
 8005ba0:	2b03      	cmp	r3, #3
 8005ba2:	d109      	bne.n	8005bb8 <USBD_StdEPReq+0xb4>
 8005ba4:	884b      	ldrh	r3, [r1, #2]
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d1d6      	bne.n	8005b58 <USBD_StdEPReq+0x54>
 8005baa:	f01c 0f7f 	tst.w	ip, #127	@ 0x7f
 8005bae:	d0ef      	beq.n	8005b90 <USBD_StdEPReq+0x8c>
 8005bb0:	4661      	mov	r1, ip
 8005bb2:	f7fd ff55 	bl	8003a60 <USBD_LL_ClearStallEP>
 8005bb6:	e7e5      	b.n	8005b84 <USBD_StdEPReq+0x80>
 8005bb8:	2180      	movs	r1, #128	@ 0x80
 8005bba:	4628      	mov	r0, r5
 8005bbc:	f7fd ff44 	bl	8003a48 <USBD_LL_StallEP>
 8005bc0:	2100      	movs	r1, #0
 8005bc2:	4628      	mov	r0, r5
 8005bc4:	f7fd ff40 	bl	8003a48 <USBD_LL_StallEP>
 8005bc8:	2000      	movs	r0, #0
 8005bca:	bd38      	pop	{r3, r4, r5, pc}
 8005bcc:	f01c 0f7f 	tst.w	ip, #127	@ 0x7f
 8005bd0:	d0c2      	beq.n	8005b58 <USBD_StdEPReq+0x54>
 8005bd2:	4661      	mov	r1, ip
 8005bd4:	f7fd ff38 	bl	8003a48 <USBD_LL_StallEP>
 8005bd8:	e7be      	b.n	8005b58 <USBD_StdEPReq+0x54>
 8005bda:	f00c 047f 	and.w	r4, ip, #127	@ 0x7f
 8005bde:	eb00 1404 	add.w	r4, r0, r4, lsl #4
 8005be2:	3414      	adds	r4, #20
 8005be4:	e7ab      	b.n	8005b3e <USBD_StdEPReq+0x3a>
 8005be6:	bf00      	nop

08005be8 <USBD_ParseSetupRequest>:
 8005be8:	780b      	ldrb	r3, [r1, #0]
 8005bea:	7003      	strb	r3, [r0, #0]
 8005bec:	784b      	ldrb	r3, [r1, #1]
 8005bee:	7043      	strb	r3, [r0, #1]
 8005bf0:	884b      	ldrh	r3, [r1, #2]
 8005bf2:	8043      	strh	r3, [r0, #2]
 8005bf4:	888b      	ldrh	r3, [r1, #4]
 8005bf6:	8083      	strh	r3, [r0, #4]
 8005bf8:	88cb      	ldrh	r3, [r1, #6]
 8005bfa:	80c3      	strh	r3, [r0, #6]
 8005bfc:	4770      	bx	lr
 8005bfe:	bf00      	nop

08005c00 <USBD_CtlError>:
 8005c00:	b510      	push	{r4, lr}
 8005c02:	2180      	movs	r1, #128	@ 0x80
 8005c04:	4604      	mov	r4, r0
 8005c06:	f7fd ff1f 	bl	8003a48 <USBD_LL_StallEP>
 8005c0a:	4620      	mov	r0, r4
 8005c0c:	2100      	movs	r1, #0
 8005c0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005c12:	f7fd bf19 	b.w	8003a48 <USBD_LL_StallEP>
 8005c16:	bf00      	nop

08005c18 <USBD_GetString>:
 8005c18:	b308      	cbz	r0, 8005c5e <USBD_GetString+0x46>
 8005c1a:	b570      	push	{r4, r5, r6, lr}
 8005c1c:	7803      	ldrb	r3, [r0, #0]
 8005c1e:	460e      	mov	r6, r1
 8005c20:	4614      	mov	r4, r2
 8005c22:	4605      	mov	r5, r0
 8005c24:	b1e3      	cbz	r3, 8005c60 <USBD_GetString+0x48>
 8005c26:	3001      	adds	r0, #1
 8005c28:	f7fa fb12 	bl	8000250 <strlen>
 8005c2c:	1c43      	adds	r3, r0, #1
 8005c2e:	b2db      	uxtb	r3, r3
 8005c30:	3301      	adds	r3, #1
 8005c32:	005b      	lsls	r3, r3, #1
 8005c34:	b2da      	uxtb	r2, r3
 8005c36:	8023      	strh	r3, [r4, #0]
 8005c38:	2303      	movs	r3, #3
 8005c3a:	7032      	strb	r2, [r6, #0]
 8005c3c:	7073      	strb	r3, [r6, #1]
 8005c3e:	782c      	ldrb	r4, [r5, #0]
 8005c40:	b164      	cbz	r4, 8005c5c <USBD_GetString+0x44>
 8005c42:	4628      	mov	r0, r5
 8005c44:	2302      	movs	r3, #2
 8005c46:	2100      	movs	r1, #0
 8005c48:	1c5a      	adds	r2, r3, #1
 8005c4a:	b2d2      	uxtb	r2, r2
 8005c4c:	54f4      	strb	r4, [r6, r3]
 8005c4e:	54b1      	strb	r1, [r6, r2]
 8005c50:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8005c54:	3302      	adds	r3, #2
 8005c56:	b2db      	uxtb	r3, r3
 8005c58:	2c00      	cmp	r4, #0
 8005c5a:	d1f5      	bne.n	8005c48 <USBD_GetString+0x30>
 8005c5c:	bd70      	pop	{r4, r5, r6, pc}
 8005c5e:	4770      	bx	lr
 8005c60:	2202      	movs	r2, #2
 8005c62:	4613      	mov	r3, r2
 8005c64:	e7e7      	b.n	8005c36 <USBD_GetString+0x1e>
 8005c66:	bf00      	nop

08005c68 <vListInitialise>:
 8005c68:	f100 0308 	add.w	r3, r0, #8
 8005c6c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8005c70:	2200      	movs	r2, #0
 8005c72:	e9c0 3101 	strd	r3, r1, [r0, #4]
 8005c76:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005c7a:	6002      	str	r2, [r0, #0]
 8005c7c:	4770      	bx	lr
 8005c7e:	bf00      	nop

08005c80 <vListInitialiseItem>:
 8005c80:	2300      	movs	r3, #0
 8005c82:	6103      	str	r3, [r0, #16]
 8005c84:	4770      	bx	lr
 8005c86:	bf00      	nop

08005c88 <vListInsertEnd>:
 8005c88:	e9d0 3200 	ldrd	r3, r2, [r0]
 8005c8c:	b410      	push	{r4}
 8005c8e:	6894      	ldr	r4, [r2, #8]
 8005c90:	3301      	adds	r3, #1
 8005c92:	e9c1 2401 	strd	r2, r4, [r1, #4]
 8005c96:	6061      	str	r1, [r4, #4]
 8005c98:	6091      	str	r1, [r2, #8]
 8005c9a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c9e:	6108      	str	r0, [r1, #16]
 8005ca0:	6003      	str	r3, [r0, #0]
 8005ca2:	4770      	bx	lr

08005ca4 <vListInsert>:
 8005ca4:	b430      	push	{r4, r5}
 8005ca6:	680d      	ldr	r5, [r1, #0]
 8005ca8:	1c6b      	adds	r3, r5, #1
 8005caa:	d010      	beq.n	8005cce <vListInsert+0x2a>
 8005cac:	f100 0308 	add.w	r3, r0, #8
 8005cb0:	461c      	mov	r4, r3
 8005cb2:	685b      	ldr	r3, [r3, #4]
 8005cb4:	681a      	ldr	r2, [r3, #0]
 8005cb6:	42aa      	cmp	r2, r5
 8005cb8:	d9fa      	bls.n	8005cb0 <vListInsert+0xc>
 8005cba:	6802      	ldr	r2, [r0, #0]
 8005cbc:	604b      	str	r3, [r1, #4]
 8005cbe:	3201      	adds	r2, #1
 8005cc0:	6099      	str	r1, [r3, #8]
 8005cc2:	608c      	str	r4, [r1, #8]
 8005cc4:	6061      	str	r1, [r4, #4]
 8005cc6:	6108      	str	r0, [r1, #16]
 8005cc8:	bc30      	pop	{r4, r5}
 8005cca:	6002      	str	r2, [r0, #0]
 8005ccc:	4770      	bx	lr
 8005cce:	6904      	ldr	r4, [r0, #16]
 8005cd0:	6863      	ldr	r3, [r4, #4]
 8005cd2:	e7f2      	b.n	8005cba <vListInsert+0x16>

08005cd4 <uxListRemove>:
 8005cd4:	4603      	mov	r3, r0
 8005cd6:	6902      	ldr	r2, [r0, #16]
 8005cd8:	6899      	ldr	r1, [r3, #8]
 8005cda:	6840      	ldr	r0, [r0, #4]
 8005cdc:	b410      	push	{r4}
 8005cde:	6854      	ldr	r4, [r2, #4]
 8005ce0:	6081      	str	r1, [r0, #8]
 8005ce2:	6048      	str	r0, [r1, #4]
 8005ce4:	6810      	ldr	r0, [r2, #0]
 8005ce6:	429c      	cmp	r4, r3
 8005ce8:	bf08      	it	eq
 8005cea:	6051      	streq	r1, [r2, #4]
 8005cec:	3801      	subs	r0, #1
 8005cee:	2100      	movs	r1, #0
 8005cf0:	6119      	str	r1, [r3, #16]
 8005cf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005cf6:	6010      	str	r0, [r2, #0]
 8005cf8:	4770      	bx	lr
 8005cfa:	bf00      	nop

08005cfc <HAL_MspInit>:
 8005cfc:	b510      	push	{r4, lr}
 8005cfe:	b082      	sub	sp, #8
 8005d00:	2400      	movs	r4, #0
 8005d02:	4b22      	ldr	r3, [pc, #136]	@ (8005d8c <HAL_MspInit+0x90>)
 8005d04:	9400      	str	r4, [sp, #0]
 8005d06:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005d08:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005d0c:	645a      	str	r2, [r3, #68]	@ 0x44
 8005d0e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005d10:	f402 4280 	and.w	r2, r2, #16384	@ 0x4000
 8005d14:	9200      	str	r2, [sp, #0]
 8005d16:	9a00      	ldr	r2, [sp, #0]
 8005d18:	9401      	str	r4, [sp, #4]
 8005d1a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005d1c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005d20:	641a      	str	r2, [r3, #64]	@ 0x40
 8005d22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d24:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d28:	9301      	str	r3, [sp, #4]
 8005d2a:	2003      	movs	r0, #3
 8005d2c:	9b01      	ldr	r3, [sp, #4]
 8005d2e:	f7fb f929 	bl	8000f84 <HAL_NVIC_SetPriorityGrouping>
 8005d32:	4622      	mov	r2, r4
 8005d34:	4621      	mov	r1, r4
 8005d36:	f06f 000b 	mvn.w	r0, #11
 8005d3a:	f7fb f935 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d3e:	4622      	mov	r2, r4
 8005d40:	4621      	mov	r1, r4
 8005d42:	f06f 000a 	mvn.w	r0, #10
 8005d46:	f7fb f92f 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d4a:	4622      	mov	r2, r4
 8005d4c:	4621      	mov	r1, r4
 8005d4e:	f06f 0009 	mvn.w	r0, #9
 8005d52:	f7fb f929 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d56:	4622      	mov	r2, r4
 8005d58:	4621      	mov	r1, r4
 8005d5a:	f06f 0004 	mvn.w	r0, #4
 8005d5e:	f7fb f923 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d62:	4622      	mov	r2, r4
 8005d64:	4621      	mov	r1, r4
 8005d66:	f06f 0003 	mvn.w	r0, #3
 8005d6a:	f7fb f91d 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d6e:	4622      	mov	r2, r4
 8005d70:	210f      	movs	r1, #15
 8005d72:	f06f 0001 	mvn.w	r0, #1
 8005d76:	f7fb f917 	bl	8000fa8 <HAL_NVIC_SetPriority>
 8005d7a:	4622      	mov	r2, r4
 8005d7c:	210f      	movs	r1, #15
 8005d7e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005d82:	b002      	add	sp, #8
 8005d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d88:	f7fb b90e 	b.w	8000fa8 <HAL_NVIC_SetPriority>
 8005d8c:	40023800 	.word	0x40023800

08005d90 <HAL_Init>:
 8005d90:	b508      	push	{r3, lr}
 8005d92:	4b0b      	ldr	r3, [pc, #44]	@ (8005dc0 <HAL_Init+0x30>)
 8005d94:	681a      	ldr	r2, [r3, #0]
 8005d96:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005d9a:	601a      	str	r2, [r3, #0]
 8005d9c:	681a      	ldr	r2, [r3, #0]
 8005d9e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005da2:	601a      	str	r2, [r3, #0]
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8005daa:	601a      	str	r2, [r3, #0]
 8005dac:	2003      	movs	r0, #3
 8005dae:	f7fb f8e9 	bl	8000f84 <HAL_NVIC_SetPriorityGrouping>
 8005db2:	2000      	movs	r0, #0
 8005db4:	f7fb f9b6 	bl	8001124 <HAL_InitTick>
 8005db8:	f7ff ffa0 	bl	8005cfc <HAL_MspInit>
 8005dbc:	2000      	movs	r0, #0
 8005dbe:	bd08      	pop	{r3, pc}
 8005dc0:	40023c00 	.word	0x40023c00

08005dc4 <HAL_IncTick>:
 8005dc4:	4a03      	ldr	r2, [pc, #12]	@ (8005dd4 <HAL_IncTick+0x10>)
 8005dc6:	4b04      	ldr	r3, [pc, #16]	@ (8005dd8 <HAL_IncTick+0x14>)
 8005dc8:	6811      	ldr	r1, [r2, #0]
 8005dca:	781b      	ldrb	r3, [r3, #0]
 8005dcc:	440b      	add	r3, r1
 8005dce:	6013      	str	r3, [r2, #0]
 8005dd0:	4770      	bx	lr
 8005dd2:	bf00      	nop
 8005dd4:	20001074 	.word	0x20001074
 8005dd8:	20000014 	.word	0x20000014

08005ddc <HAL_GetTick>:
 8005ddc:	4b01      	ldr	r3, [pc, #4]	@ (8005de4 <HAL_GetTick+0x8>)
 8005dde:	6818      	ldr	r0, [r3, #0]
 8005de0:	4770      	bx	lr
 8005de2:	bf00      	nop
 8005de4:	20001074 	.word	0x20001074

08005de8 <HAL_Delay>:
 8005de8:	b538      	push	{r3, r4, r5, lr}
 8005dea:	4604      	mov	r4, r0
 8005dec:	f7ff fff6 	bl	8005ddc <HAL_GetTick>
 8005df0:	1c63      	adds	r3, r4, #1
 8005df2:	4605      	mov	r5, r0
 8005df4:	d002      	beq.n	8005dfc <HAL_Delay+0x14>
 8005df6:	4b04      	ldr	r3, [pc, #16]	@ (8005e08 <HAL_Delay+0x20>)
 8005df8:	781b      	ldrb	r3, [r3, #0]
 8005dfa:	441c      	add	r4, r3
 8005dfc:	f7ff ffee 	bl	8005ddc <HAL_GetTick>
 8005e00:	1b40      	subs	r0, r0, r5
 8005e02:	42a0      	cmp	r0, r4
 8005e04:	d3fa      	bcc.n	8005dfc <HAL_Delay+0x14>
 8005e06:	bd38      	pop	{r3, r4, r5, pc}
 8005e08:	20000014 	.word	0x20000014

08005e0c <USBD_FS_DeviceDescriptor>:
 8005e0c:	2312      	movs	r3, #18
 8005e0e:	4801      	ldr	r0, [pc, #4]	@ (8005e14 <USBD_FS_DeviceDescriptor+0x8>)
 8005e10:	800b      	strh	r3, [r1, #0]
 8005e12:	4770      	bx	lr
 8005e14:	2000001c 	.word	0x2000001c

08005e18 <USBD_FS_LangIDStrDescriptor>:
 8005e18:	2304      	movs	r3, #4
 8005e1a:	4801      	ldr	r0, [pc, #4]	@ (8005e20 <USBD_FS_LangIDStrDescriptor+0x8>)
 8005e1c:	800b      	strh	r3, [r1, #0]
 8005e1e:	4770      	bx	lr
 8005e20:	20000018 	.word	0x20000018

08005e24 <USBD_FS_ManufacturerStrDescriptor>:
 8005e24:	b508      	push	{r3, lr}
 8005e26:	460a      	mov	r2, r1
 8005e28:	4802      	ldr	r0, [pc, #8]	@ (8005e34 <USBD_FS_ManufacturerStrDescriptor+0x10>)
 8005e2a:	4903      	ldr	r1, [pc, #12]	@ (8005e38 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 8005e2c:	f7ff fef4 	bl	8005c18 <USBD_GetString>
 8005e30:	4801      	ldr	r0, [pc, #4]	@ (8005e38 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 8005e32:	bd08      	pop	{r3, pc}
 8005e34:	08029630 	.word	0x08029630
 8005e38:	20001078 	.word	0x20001078

08005e3c <USBD_FS_SerialStrDescriptor>:
 8005e3c:	b508      	push	{r3, lr}
 8005e3e:	460a      	mov	r2, r1
 8005e40:	4802      	ldr	r0, [pc, #8]	@ (8005e4c <USBD_FS_SerialStrDescriptor+0x10>)
 8005e42:	4903      	ldr	r1, [pc, #12]	@ (8005e50 <USBD_FS_SerialStrDescriptor+0x14>)
 8005e44:	f7ff fee8 	bl	8005c18 <USBD_GetString>
 8005e48:	4801      	ldr	r0, [pc, #4]	@ (8005e50 <USBD_FS_SerialStrDescriptor+0x14>)
 8005e4a:	bd08      	pop	{r3, pc}
 8005e4c:	2000ce5c 	.word	0x2000ce5c
 8005e50:	20001078 	.word	0x20001078

08005e54 <USBD_FS_ProductStrDescriptor>:
 8005e54:	b508      	push	{r3, lr}
 8005e56:	460a      	mov	r2, r1
 8005e58:	4802      	ldr	r0, [pc, #8]	@ (8005e64 <USBD_FS_ProductStrDescriptor+0x10>)
 8005e5a:	4903      	ldr	r1, [pc, #12]	@ (8005e68 <USBD_FS_ProductStrDescriptor+0x14>)
 8005e5c:	f7ff fedc 	bl	8005c18 <USBD_GetString>
 8005e60:	4801      	ldr	r0, [pc, #4]	@ (8005e68 <USBD_FS_ProductStrDescriptor+0x14>)
 8005e62:	bd08      	pop	{r3, pc}
 8005e64:	08029640 	.word	0x08029640
 8005e68:	20001078 	.word	0x20001078

08005e6c <USBD_FS_ConfigStrDescriptor>:
 8005e6c:	b508      	push	{r3, lr}
 8005e6e:	460a      	mov	r2, r1
 8005e70:	4802      	ldr	r0, [pc, #8]	@ (8005e7c <USBD_FS_ConfigStrDescriptor+0x10>)
 8005e72:	4903      	ldr	r1, [pc, #12]	@ (8005e80 <USBD_FS_ConfigStrDescriptor+0x14>)
 8005e74:	f7ff fed0 	bl	8005c18 <USBD_GetString>
 8005e78:	4801      	ldr	r0, [pc, #4]	@ (8005e80 <USBD_FS_ConfigStrDescriptor+0x14>)
 8005e7a:	bd08      	pop	{r3, pc}
 8005e7c:	0802965c 	.word	0x0802965c
 8005e80:	20001078 	.word	0x20001078

08005e84 <USBD_FS_InterfaceStrDescriptor>:
 8005e84:	b508      	push	{r3, lr}
 8005e86:	460a      	mov	r2, r1
 8005e88:	4802      	ldr	r0, [pc, #8]	@ (8005e94 <USBD_FS_InterfaceStrDescriptor+0x10>)
 8005e8a:	4903      	ldr	r1, [pc, #12]	@ (8005e98 <USBD_FS_InterfaceStrDescriptor+0x14>)
 8005e8c:	f7ff fec4 	bl	8005c18 <USBD_GetString>
 8005e90:	4801      	ldr	r0, [pc, #4]	@ (8005e98 <USBD_FS_InterfaceStrDescriptor+0x14>)
 8005e92:	bd08      	pop	{r3, pc}
 8005e94:	08029668 	.word	0x08029668
 8005e98:	20001078 	.word	0x20001078

08005e9c <USBD_UsrStrDescriptor>:
 8005e9c:	2000      	movs	r0, #0
 8005e9e:	29ee      	cmp	r1, #238	@ 0xee
 8005ea0:	b508      	push	{r3, lr}
 8005ea2:	8010      	strh	r0, [r2, #0]
 8005ea4:	d002      	beq.n	8005eac <USBD_UsrStrDescriptor+0x10>
 8005ea6:	2906      	cmp	r1, #6
 8005ea8:	d005      	beq.n	8005eb6 <USBD_UsrStrDescriptor+0x1a>
 8005eaa:	bd08      	pop	{r3, pc}
 8005eac:	4613      	mov	r3, r2
 8005eae:	2212      	movs	r2, #18
 8005eb0:	4804      	ldr	r0, [pc, #16]	@ (8005ec4 <USBD_UsrStrDescriptor+0x28>)
 8005eb2:	801a      	strh	r2, [r3, #0]
 8005eb4:	bd08      	pop	{r3, pc}
 8005eb6:	4904      	ldr	r1, [pc, #16]	@ (8005ec8 <USBD_UsrStrDescriptor+0x2c>)
 8005eb8:	4804      	ldr	r0, [pc, #16]	@ (8005ecc <USBD_UsrStrDescriptor+0x30>)
 8005eba:	f7ff fead 	bl	8005c18 <USBD_GetString>
 8005ebe:	4802      	ldr	r0, [pc, #8]	@ (8005ec8 <USBD_UsrStrDescriptor+0x2c>)
 8005ec0:	bd08      	pop	{r3, pc}
 8005ec2:	bf00      	nop
 8005ec4:	2000004c 	.word	0x2000004c
 8005ec8:	20001078 	.word	0x20001078
 8005ecc:	08029678 	.word	0x08029678

08005ed0 <FLASH_Erase_Sector>:
 8005ed0:	4b0d      	ldr	r3, [pc, #52]	@ (8005f08 <FLASH_Erase_Sector+0x38>)
 8005ed2:	691a      	ldr	r2, [r3, #16]
 8005ed4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005ed8:	611a      	str	r2, [r3, #16]
 8005eda:	691a      	ldr	r2, [r3, #16]
 8005edc:	2902      	cmp	r1, #2
 8005ede:	bf94      	ite	ls
 8005ee0:	0209      	lslls	r1, r1, #8
 8005ee2:	f44f 7140 	movhi.w	r1, #768	@ 0x300
 8005ee6:	430a      	orrs	r2, r1
 8005ee8:	611a      	str	r2, [r3, #16]
 8005eea:	691a      	ldr	r2, [r3, #16]
 8005eec:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 8005ef0:	611a      	str	r2, [r3, #16]
 8005ef2:	691a      	ldr	r2, [r3, #16]
 8005ef4:	ea42 00c0 	orr.w	r0, r2, r0, lsl #3
 8005ef8:	f040 0002 	orr.w	r0, r0, #2
 8005efc:	6118      	str	r0, [r3, #16]
 8005efe:	691a      	ldr	r2, [r3, #16]
 8005f00:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8005f04:	611a      	str	r2, [r3, #16]
 8005f06:	4770      	bx	lr
 8005f08:	40023c00 	.word	0x40023c00

08005f0c <FLASH_FlushCaches>:
 8005f0c:	4b14      	ldr	r3, [pc, #80]	@ (8005f60 <FLASH_FlushCaches+0x54>)
 8005f0e:	681a      	ldr	r2, [r3, #0]
 8005f10:	0591      	lsls	r1, r2, #22
 8005f12:	d50f      	bpl.n	8005f34 <FLASH_FlushCaches+0x28>
 8005f14:	681a      	ldr	r2, [r3, #0]
 8005f16:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005f1a:	601a      	str	r2, [r3, #0]
 8005f1c:	681a      	ldr	r2, [r3, #0]
 8005f1e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005f22:	601a      	str	r2, [r3, #0]
 8005f24:	681a      	ldr	r2, [r3, #0]
 8005f26:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005f2a:	601a      	str	r2, [r3, #0]
 8005f2c:	681a      	ldr	r2, [r3, #0]
 8005f2e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005f32:	601a      	str	r2, [r3, #0]
 8005f34:	4b0a      	ldr	r3, [pc, #40]	@ (8005f60 <FLASH_FlushCaches+0x54>)
 8005f36:	681a      	ldr	r2, [r3, #0]
 8005f38:	0552      	lsls	r2, r2, #21
 8005f3a:	d50f      	bpl.n	8005f5c <FLASH_FlushCaches+0x50>
 8005f3c:	681a      	ldr	r2, [r3, #0]
 8005f3e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005f42:	601a      	str	r2, [r3, #0]
 8005f44:	681a      	ldr	r2, [r3, #0]
 8005f46:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005f4a:	601a      	str	r2, [r3, #0]
 8005f4c:	681a      	ldr	r2, [r3, #0]
 8005f4e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8005f52:	601a      	str	r2, [r3, #0]
 8005f54:	681a      	ldr	r2, [r3, #0]
 8005f56:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005f5a:	601a      	str	r2, [r3, #0]
 8005f5c:	4770      	bx	lr
 8005f5e:	bf00      	nop
 8005f60:	40023c00 	.word	0x40023c00

08005f64 <HAL_FLASHEx_Erase>:
 8005f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f68:	4f2d      	ldr	r7, [pc, #180]	@ (8006020 <HAL_FLASHEx_Erase+0xbc>)
 8005f6a:	7e3b      	ldrb	r3, [r7, #24]
 8005f6c:	2b01      	cmp	r3, #1
 8005f6e:	d038      	beq.n	8005fe2 <HAL_FLASHEx_Erase+0x7e>
 8005f70:	2301      	movs	r3, #1
 8005f72:	4604      	mov	r4, r0
 8005f74:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005f78:	4688      	mov	r8, r1
 8005f7a:	763b      	strb	r3, [r7, #24]
 8005f7c:	f001 f94a 	bl	8007214 <FLASH_WaitForLastOperation>
 8005f80:	4606      	mov	r6, r0
 8005f82:	bb48      	cbnz	r0, 8005fd8 <HAL_FLASHEx_Erase+0x74>
 8005f84:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8005f88:	f8c8 3000 	str.w	r3, [r8]
 8005f8c:	6823      	ldr	r3, [r4, #0]
 8005f8e:	2b01      	cmp	r3, #1
 8005f90:	d02b      	beq.n	8005fea <HAL_FLASHEx_Erase+0x86>
 8005f92:	e9d4 5302 	ldrd	r5, r3, [r4, #8]
 8005f96:	442b      	add	r3, r5
 8005f98:	429d      	cmp	r5, r3
 8005f9a:	d21b      	bcs.n	8005fd4 <HAL_FLASHEx_Erase+0x70>
 8005f9c:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8006024 <HAL_FLASHEx_Erase+0xc0>
 8005fa0:	e005      	b.n	8005fae <HAL_FLASHEx_Erase+0x4a>
 8005fa2:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 8005fa6:	3501      	adds	r5, #1
 8005fa8:	4413      	add	r3, r2
 8005faa:	42ab      	cmp	r3, r5
 8005fac:	d912      	bls.n	8005fd4 <HAL_FLASHEx_Erase+0x70>
 8005fae:	7c21      	ldrb	r1, [r4, #16]
 8005fb0:	4628      	mov	r0, r5
 8005fb2:	f7ff ff8d 	bl	8005ed0 <FLASH_Erase_Sector>
 8005fb6:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8005fba:	f001 f92b 	bl	8007214 <FLASH_WaitForLastOperation>
 8005fbe:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005fc2:	f023 03fa 	bic.w	r3, r3, #250	@ 0xfa
 8005fc6:	f8c9 3010 	str.w	r3, [r9, #16]
 8005fca:	2800      	cmp	r0, #0
 8005fcc:	d0e9      	beq.n	8005fa2 <HAL_FLASHEx_Erase+0x3e>
 8005fce:	f8c8 5000 	str.w	r5, [r8]
 8005fd2:	4606      	mov	r6, r0
 8005fd4:	f7ff ff9a 	bl	8005f0c <FLASH_FlushCaches>
 8005fd8:	2300      	movs	r3, #0
 8005fda:	763b      	strb	r3, [r7, #24]
 8005fdc:	4630      	mov	r0, r6
 8005fde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005fe2:	2602      	movs	r6, #2
 8005fe4:	4630      	mov	r0, r6
 8005fe6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005fea:	4d0e      	ldr	r5, [pc, #56]	@ (8006024 <HAL_FLASHEx_Erase+0xc0>)
 8005fec:	6923      	ldr	r3, [r4, #16]
 8005fee:	692a      	ldr	r2, [r5, #16]
 8005ff0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8005ff4:	612a      	str	r2, [r5, #16]
 8005ff6:	692a      	ldr	r2, [r5, #16]
 8005ff8:	f042 0204 	orr.w	r2, r2, #4
 8005ffc:	612a      	str	r2, [r5, #16]
 8005ffe:	692a      	ldr	r2, [r5, #16]
 8006000:	021b      	lsls	r3, r3, #8
 8006002:	b29b      	uxth	r3, r3
 8006004:	4313      	orrs	r3, r2
 8006006:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800600a:	612b      	str	r3, [r5, #16]
 800600c:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8006010:	f001 f900 	bl	8007214 <FLASH_WaitForLastOperation>
 8006014:	692b      	ldr	r3, [r5, #16]
 8006016:	f023 0304 	bic.w	r3, r3, #4
 800601a:	4606      	mov	r6, r0
 800601c:	612b      	str	r3, [r5, #16]
 800601e:	e7d9      	b.n	8005fd4 <HAL_FLASHEx_Erase+0x70>
 8006020:	200014c4 	.word	0x200014c4
 8006024:	40023c00 	.word	0x40023c00

08006028 <NMI_Handler>:
 8006028:	4770      	bx	lr
 800602a:	bf00      	nop

0800602c <get_regs>:
 800602c:	b430      	push	{r4, r5}
 800602e:	e9d0 4200 	ldrd	r4, r2, [r0]
 8006032:	b08a      	sub	sp, #40	@ 0x28
 8006034:	6881      	ldr	r1, [r0, #8]
 8006036:	9402      	str	r4, [sp, #8]
 8006038:	9203      	str	r2, [sp, #12]
 800603a:	e9d0 2503 	ldrd	r2, r5, [r0, #12]
 800603e:	9104      	str	r1, [sp, #16]
 8006040:	e9d0 4105 	ldrd	r4, r1, [r0, #20]
 8006044:	9205      	str	r2, [sp, #20]
 8006046:	2301      	movs	r3, #1
 8006048:	69c2      	ldr	r2, [r0, #28]
 800604a:	9506      	str	r5, [sp, #24]
 800604c:	9407      	str	r4, [sp, #28]
 800604e:	9108      	str	r1, [sp, #32]
 8006050:	9209      	str	r2, [sp, #36]	@ 0x24
 8006052:	f88d 3007 	strb.w	r3, [sp, #7]
 8006056:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800605a:	2b00      	cmp	r3, #0
 800605c:	d1fb      	bne.n	8006056 <get_regs+0x2a>
 800605e:	b00a      	add	sp, #40	@ 0x28
 8006060:	bc30      	pop	{r4, r5}
 8006062:	4770      	bx	lr

08006064 <HardFault_Handler>:
 8006064:	f01e 0f04 	tst.w	lr, #4
 8006068:	bf0c      	ite	eq
 800606a:	f3ef 8008 	mrseq	r0, MSP
 800606e:	f3ef 8009 	mrsne	r0, PSP
 8006072:	f7ff bfdb 	b.w	800602c <get_regs>
 8006076:	bf00      	nop

08006078 <MemManage_Handler>:
 8006078:	e7fe      	b.n	8006078 <MemManage_Handler>
 800607a:	bf00      	nop

0800607c <BusFault_Handler>:
 800607c:	e7fe      	b.n	800607c <BusFault_Handler>
 800607e:	bf00      	nop

08006080 <UsageFault_Handler>:
 8006080:	e7fe      	b.n	8006080 <UsageFault_Handler>
 8006082:	bf00      	nop

08006084 <DebugMon_Handler>:
 8006084:	4770      	bx	lr
 8006086:	bf00      	nop

08006088 <SysTick_Handler>:
 8006088:	f001 bd8c 	b.w	8007ba4 <osSystickHandler>

0800608c <DMA1_Stream0_IRQHandler>:
 800608c:	4801      	ldr	r0, [pc, #4]	@ (8006094 <DMA1_Stream0_IRQHandler+0x8>)
 800608e:	f7fe bb0d 	b.w	80046ac <HAL_DMA_IRQHandler>
 8006092:	bf00      	nop
 8006094:	20000c00 	.word	0x20000c00

08006098 <DMA1_Stream2_IRQHandler>:
 8006098:	4801      	ldr	r0, [pc, #4]	@ (80060a0 <DMA1_Stream2_IRQHandler+0x8>)
 800609a:	f7fe bb07 	b.w	80046ac <HAL_DMA_IRQHandler>
 800609e:	bf00      	nop
 80060a0:	20000d80 	.word	0x20000d80

080060a4 <DMA1_Stream4_IRQHandler>:
 80060a4:	4801      	ldr	r0, [pc, #4]	@ (80060ac <DMA1_Stream4_IRQHandler+0x8>)
 80060a6:	f7fe bb01 	b.w	80046ac <HAL_DMA_IRQHandler>
 80060aa:	bf00      	nop
 80060ac:	20000d20 	.word	0x20000d20

080060b0 <DMA1_Stream5_IRQHandler>:
 80060b0:	4801      	ldr	r0, [pc, #4]	@ (80060b8 <DMA1_Stream5_IRQHandler+0x8>)
 80060b2:	f7fe bafb 	b.w	80046ac <HAL_DMA_IRQHandler>
 80060b6:	bf00      	nop
 80060b8:	20000c60 	.word	0x20000c60

080060bc <CAN1_TX_IRQHandler>:
 80060bc:	4801      	ldr	r0, [pc, #4]	@ (80060c4 <CAN1_TX_IRQHandler+0x8>)
 80060be:	f7fb bb15 	b.w	80016ec <HAL_CAN_IRQHandler>
 80060c2:	bf00      	nop
 80060c4:	2000149c 	.word	0x2000149c

080060c8 <CAN1_RX0_IRQHandler>:
 80060c8:	4801      	ldr	r0, [pc, #4]	@ (80060d0 <CAN1_RX0_IRQHandler+0x8>)
 80060ca:	f7fb bb0f 	b.w	80016ec <HAL_CAN_IRQHandler>
 80060ce:	bf00      	nop
 80060d0:	2000149c 	.word	0x2000149c

080060d4 <CAN1_RX1_IRQHandler>:
 80060d4:	4801      	ldr	r0, [pc, #4]	@ (80060dc <CAN1_RX1_IRQHandler+0x8>)
 80060d6:	f7fb bb09 	b.w	80016ec <HAL_CAN_IRQHandler>
 80060da:	bf00      	nop
 80060dc:	2000149c 	.word	0x2000149c

080060e0 <CAN1_SCE_IRQHandler>:
 80060e0:	4801      	ldr	r0, [pc, #4]	@ (80060e8 <CAN1_SCE_IRQHandler+0x8>)
 80060e2:	f7fb bb03 	b.w	80016ec <HAL_CAN_IRQHandler>
 80060e6:	bf00      	nop
 80060e8:	2000149c 	.word	0x2000149c

080060ec <TIM8_TRG_COM_TIM14_IRQHandler>:
 80060ec:	b508      	push	{r3, lr}
 80060ee:	4804      	ldr	r0, [pc, #16]	@ (8006100 <TIM8_TRG_COM_TIM14_IRQHandler+0x14>)
 80060f0:	f003 fa8a 	bl	8009608 <HAL_TIM_IRQHandler>
 80060f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80060f8:	4802      	ldr	r0, [pc, #8]	@ (8006104 <TIM8_TRG_COM_TIM14_IRQHandler+0x18>)
 80060fa:	f003 ba85 	b.w	8009608 <HAL_TIM_IRQHandler>
 80060fe:	bf00      	nop
 8006100:	2000068c 	.word	0x2000068c
 8006104:	20000614 	.word	0x20000614

08006108 <SPI3_IRQHandler>:
 8006108:	4801      	ldr	r0, [pc, #4]	@ (8006110 <SPI3_IRQHandler+0x8>)
 800610a:	f7fd b96b 	b.w	80033e4 <HAL_SPI_IRQHandler>
 800610e:	bf00      	nop
 8006110:	20000cc0 	.word	0x20000cc0

08006114 <UART4_IRQHandler>:
 8006114:	4801      	ldr	r0, [pc, #4]	@ (800611c <UART4_IRQHandler+0x8>)
 8006116:	f000 bf49 	b.w	8006fac <HAL_UART_IRQHandler>
 800611a:	bf00      	nop
 800611c:	20000de0 	.word	0x20000de0

08006120 <OTG_FS_IRQHandler>:
 8006120:	b508      	push	{r3, lr}
 8006122:	2043      	movs	r0, #67	@ 0x43
 8006124:	f7fa ff88 	bl	8001038 <HAL_NVIC_DisableIRQ>
 8006128:	4b02      	ldr	r3, [pc, #8]	@ (8006134 <OTG_FS_IRQHandler+0x14>)
 800612a:	6818      	ldr	r0, [r3, #0]
 800612c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006130:	f001 bd12 	b.w	8007b58 <osSemaphoreRelease>
 8006134:	2000080c 	.word	0x2000080c

08006138 <ADC_IRQ_Dispatch>:
 8006138:	b538      	push	{r3, r4, r5, lr}
 800613a:	6803      	ldr	r3, [r0, #0]
 800613c:	681a      	ldr	r2, [r3, #0]
 800613e:	0752      	lsls	r2, r2, #29
 8006140:	460d      	mov	r5, r1
 8006142:	4604      	mov	r4, r0
 8006144:	6859      	ldr	r1, [r3, #4]
 8006146:	d501      	bpl.n	800614c <ADC_IRQ_Dispatch+0x14>
 8006148:	0609      	lsls	r1, r1, #24
 800614a:	d40d      	bmi.n	8006168 <ADC_IRQ_Dispatch+0x30>
 800614c:	681a      	ldr	r2, [r3, #0]
 800614e:	685b      	ldr	r3, [r3, #4]
 8006150:	0792      	lsls	r2, r2, #30
 8006152:	d508      	bpl.n	8006166 <ADC_IRQ_Dispatch+0x2e>
 8006154:	069b      	lsls	r3, r3, #26
 8006156:	d506      	bpl.n	8006166 <ADC_IRQ_Dispatch+0x2e>
 8006158:	2100      	movs	r1, #0
 800615a:	4620      	mov	r0, r4
 800615c:	47a8      	blx	r5
 800615e:	6823      	ldr	r3, [r4, #0]
 8006160:	f06f 0212 	mvn.w	r2, #18
 8006164:	601a      	str	r2, [r3, #0]
 8006166:	bd38      	pop	{r3, r4, r5, pc}
 8006168:	2101      	movs	r1, #1
 800616a:	47a8      	blx	r5
 800616c:	6823      	ldr	r3, [r4, #0]
 800616e:	f06f 020c 	mvn.w	r2, #12
 8006172:	601a      	str	r2, [r3, #0]
 8006174:	e7ea      	b.n	800614c <ADC_IRQ_Dispatch+0x14>
 8006176:	bf00      	nop

08006178 <ADC_IRQHandler>:
 8006178:	b508      	push	{r3, lr}
 800617a:	4907      	ldr	r1, [pc, #28]	@ (8006198 <ADC_IRQHandler+0x20>)
 800617c:	4807      	ldr	r0, [pc, #28]	@ (800619c <ADC_IRQHandler+0x24>)
 800617e:	f7ff ffdb 	bl	8006138 <ADC_IRQ_Dispatch>
 8006182:	4807      	ldr	r0, [pc, #28]	@ (80061a0 <ADC_IRQHandler+0x28>)
 8006184:	4907      	ldr	r1, [pc, #28]	@ (80061a4 <ADC_IRQHandler+0x2c>)
 8006186:	f7ff ffd7 	bl	8006138 <ADC_IRQ_Dispatch>
 800618a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800618e:	4905      	ldr	r1, [pc, #20]	@ (80061a4 <ADC_IRQHandler+0x2c>)
 8006190:	4805      	ldr	r0, [pc, #20]	@ (80061a8 <ADC_IRQHandler+0x30>)
 8006192:	f7ff bfd1 	b.w	8006138 <ADC_IRQ_Dispatch>
 8006196:	bf00      	nop
 8006198:	0800c35d 	.word	0x0800c35d
 800619c:	20001028 	.word	0x20001028
 80061a0:	20000fe0 	.word	0x20000fe0
 80061a4:	0800c5b1 	.word	0x0800c5b1
 80061a8:	20000f98 	.word	0x20000f98

080061ac <decode_tim_capture>:
 80061ac:	6803      	ldr	r3, [r0, #0]
 80061ae:	691a      	ldr	r2, [r3, #16]
 80061b0:	b570      	push	{r4, r5, r6, lr}
 80061b2:	0796      	lsls	r6, r2, #30
 80061b4:	4604      	mov	r4, r0
 80061b6:	460d      	mov	r5, r1
 80061b8:	d506      	bpl.n	80061c8 <decode_tim_capture+0x1c>
 80061ba:	f06f 0202 	mvn.w	r2, #2
 80061be:	611a      	str	r2, [r3, #16]
 80061c0:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80061c2:	2001      	movs	r0, #1
 80061c4:	47a8      	blx	r5
 80061c6:	6823      	ldr	r3, [r4, #0]
 80061c8:	691a      	ldr	r2, [r3, #16]
 80061ca:	0750      	lsls	r0, r2, #29
 80061cc:	d506      	bpl.n	80061dc <decode_tim_capture+0x30>
 80061ce:	f06f 0204 	mvn.w	r2, #4
 80061d2:	611a      	str	r2, [r3, #16]
 80061d4:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80061d6:	2002      	movs	r0, #2
 80061d8:	47a8      	blx	r5
 80061da:	6823      	ldr	r3, [r4, #0]
 80061dc:	691a      	ldr	r2, [r3, #16]
 80061de:	0711      	lsls	r1, r2, #28
 80061e0:	d506      	bpl.n	80061f0 <decode_tim_capture+0x44>
 80061e2:	f06f 0208 	mvn.w	r2, #8
 80061e6:	611a      	str	r2, [r3, #16]
 80061e8:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 80061ea:	2003      	movs	r0, #3
 80061ec:	47a8      	blx	r5
 80061ee:	6823      	ldr	r3, [r4, #0]
 80061f0:	691a      	ldr	r2, [r3, #16]
 80061f2:	06d2      	lsls	r2, r2, #27
 80061f4:	d508      	bpl.n	8006208 <decode_tim_capture+0x5c>
 80061f6:	f06f 0210 	mvn.w	r2, #16
 80061fa:	611a      	str	r2, [r3, #16]
 80061fc:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80061fe:	2004      	movs	r0, #4
 8006200:	462b      	mov	r3, r5
 8006202:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006206:	4718      	bx	r3
 8006208:	bd70      	pop	{r4, r5, r6, pc}
 800620a:	bf00      	nop

0800620c <TIM5_IRQHandler>:
 800620c:	b508      	push	{r3, lr}
 800620e:	4804      	ldr	r0, [pc, #16]	@ (8006220 <TIM5_IRQHandler+0x14>)
 8006210:	4904      	ldr	r1, [pc, #16]	@ (8006224 <TIM5_IRQHandler+0x18>)
 8006212:	f7ff ffcb 	bl	80061ac <decode_tim_capture>
 8006216:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800621a:	4801      	ldr	r0, [pc, #4]	@ (8006220 <TIM5_IRQHandler+0x14>)
 800621c:	f003 b9f4 	b.w	8009608 <HAL_TIM_IRQHandler>
 8006220:	200006c8 	.word	0x200006c8
 8006224:	0800c875 	.word	0x0800c875

08006228 <TIM1_UP_TIM10_IRQHandler>:
 8006228:	4803      	ldr	r0, [pc, #12]	@ (8006238 <TIM1_UP_TIM10_IRQHandler+0x10>)
 800622a:	6803      	ldr	r3, [r0, #0]
 800622c:	f06f 0201 	mvn.w	r2, #1
 8006230:	611a      	str	r2, [r3, #16]
 8006232:	f006 b8a7 	b.w	800c384 <tim_update_cb>
 8006236:	bf00      	nop
 8006238:	200007b8 	.word	0x200007b8

0800623c <TIM8_UP_TIM13_IRQHandler>:
 800623c:	4803      	ldr	r0, [pc, #12]	@ (800624c <TIM8_UP_TIM13_IRQHandler+0x10>)
 800623e:	6803      	ldr	r3, [r0, #0]
 8006240:	f06f 0201 	mvn.w	r2, #1
 8006244:	611a      	str	r2, [r3, #16]
 8006246:	f006 b89d 	b.w	800c384 <tim_update_cb>
 800624a:	bf00      	nop
 800624c:	2000068c 	.word	0x2000068c

08006250 <I2C1_EV_IRQHandler>:
 8006250:	4801      	ldr	r0, [pc, #4]	@ (8006258 <I2C1_EV_IRQHandler+0x8>)
 8006252:	f004 bbcd 	b.w	800a9f0 <HAL_I2C_EV_IRQHandler>
 8006256:	bf00      	nop
 8006258:	20001778 	.word	0x20001778

0800625c <I2C1_ER_IRQHandler>:
 800625c:	4801      	ldr	r0, [pc, #4]	@ (8006264 <I2C1_ER_IRQHandler+0x8>)
 800625e:	f004 bb03 	b.w	800a868 <HAL_I2C_ER_IRQHandler>
 8006262:	bf00      	nop
 8006264:	20001778 	.word	0x20001778

08006268 <EXTI0_IRQHandler>:
 8006268:	2001      	movs	r0, #1
 800626a:	f004 b933 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 800626e:	bf00      	nop

08006270 <EXTI2_IRQHandler>:
 8006270:	2004      	movs	r0, #4
 8006272:	f004 b92f 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 8006276:	bf00      	nop

08006278 <EXTI3_IRQHandler>:
 8006278:	2008      	movs	r0, #8
 800627a:	f004 b92b 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 800627e:	bf00      	nop

08006280 <EXTI4_IRQHandler>:
 8006280:	2010      	movs	r0, #16
 8006282:	f004 b927 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 8006286:	bf00      	nop

08006288 <EXTI9_5_IRQHandler>:
 8006288:	b508      	push	{r3, lr}
 800628a:	2020      	movs	r0, #32
 800628c:	f004 f922 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 8006290:	2040      	movs	r0, #64	@ 0x40
 8006292:	f004 f91f 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 8006296:	2080      	movs	r0, #128	@ 0x80
 8006298:	f004 f91c 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 800629c:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80062a0:	f004 f918 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80062a8:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80062ac:	f004 b912 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>

080062b0 <EXTI15_10_IRQHandler>:
 80062b0:	b508      	push	{r3, lr}
 80062b2:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 80062b6:	f004 f90d 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062ba:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80062be:	f004 f909 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062c2:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 80062c6:	f004 f905 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062ca:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80062ce:	f004 f901 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062d2:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 80062d6:	f004 f8fd 	bl	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80062de:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 80062e2:	f004 b8f7 	b.w	800a4d4 <HAL_GPIO_EXTI_IRQHandler>
 80062e6:	bf00      	nop

080062e8 <MX_USB_DEVICE_Init>:
 80062e8:	b508      	push	{r3, lr}
 80062ea:	2200      	movs	r2, #0
 80062ec:	4908      	ldr	r1, [pc, #32]	@ (8006310 <MX_USB_DEVICE_Init+0x28>)
 80062ee:	4809      	ldr	r0, [pc, #36]	@ (8006314 <MX_USB_DEVICE_Init+0x2c>)
 80062f0:	f7fd ff2c 	bl	800414c <USBD_Init>
 80062f4:	4908      	ldr	r1, [pc, #32]	@ (8006318 <MX_USB_DEVICE_Init+0x30>)
 80062f6:	4807      	ldr	r0, [pc, #28]	@ (8006314 <MX_USB_DEVICE_Init+0x2c>)
 80062f8:	f7fd ff3e 	bl	8004178 <USBD_RegisterClass>
 80062fc:	4907      	ldr	r1, [pc, #28]	@ (800631c <MX_USB_DEVICE_Init+0x34>)
 80062fe:	4805      	ldr	r0, [pc, #20]	@ (8006314 <MX_USB_DEVICE_Init+0x2c>)
 8006300:	f001 fd90 	bl	8007e24 <USBD_CDC_RegisterInterface>
 8006304:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006308:	4802      	ldr	r0, [pc, #8]	@ (8006314 <MX_USB_DEVICE_Init+0x2c>)
 800630a:	f7fd bf3d 	b.w	8004188 <USBD_Start>
 800630e:	bf00      	nop
 8006310:	20000030 	.word	0x20000030
 8006314:	20001278 	.word	0x20001278
 8006318:	200001ac 	.word	0x200001ac
 800631c:	20000004 	.word	0x20000004

08006320 <MX_CAN1_Init>:
 8006320:	b510      	push	{r4, lr}
 8006322:	4c0f      	ldr	r4, [pc, #60]	@ (8006360 <MX_CAN1_Init+0x40>)
 8006324:	490f      	ldr	r1, [pc, #60]	@ (8006364 <MX_CAN1_Init+0x44>)
 8006326:	6021      	str	r1, [r4, #0]
 8006328:	2300      	movs	r3, #0
 800632a:	2008      	movs	r0, #8
 800632c:	f04f 7140 	mov.w	r1, #50331648	@ 0x3000000
 8006330:	e9c4 0301 	strd	r0, r3, [r4, #4]
 8006334:	60e1      	str	r1, [r4, #12]
 8006336:	f44f 2070 	mov.w	r0, #983040	@ 0xf0000
 800633a:	f44f 1140 	mov.w	r1, #3145728	@ 0x300000
 800633e:	e9c4 0104 	strd	r0, r1, [r4, #16]
 8006342:	4a09      	ldr	r2, [pc, #36]	@ (8006368 <MX_CAN1_Init+0x48>)
 8006344:	61a2      	str	r2, [r4, #24]
 8006346:	4620      	mov	r0, r4
 8006348:	83a3      	strh	r3, [r4, #28]
 800634a:	f7fa ff2b 	bl	80011a4 <HAL_CAN_Init>
 800634e:	b900      	cbnz	r0, 8006352 <MX_CAN1_Init+0x32>
 8006350:	bd10      	pop	{r4, pc}
 8006352:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006356:	4805      	ldr	r0, [pc, #20]	@ (800636c <MX_CAN1_Init+0x4c>)
 8006358:	214f      	movs	r1, #79	@ 0x4f
 800635a:	f7fd ba51 	b.w	8003800 <_Error_Handler>
 800635e:	bf00      	nop
 8006360:	2000149c 	.word	0x2000149c
 8006364:	40006400 	.word	0x40006400
 8006368:	01010100 	.word	0x01010100
 800636c:	08029694 	.word	0x08029694

08006370 <HAL_CAN_MspInit>:
 8006370:	4b25      	ldr	r3, [pc, #148]	@ (8006408 <HAL_CAN_MspInit+0x98>)
 8006372:	6802      	ldr	r2, [r0, #0]
 8006374:	429a      	cmp	r2, r3
 8006376:	d000      	beq.n	800637a <HAL_CAN_MspInit+0xa>
 8006378:	4770      	bx	lr
 800637a:	b510      	push	{r4, lr}
 800637c:	b088      	sub	sp, #32
 800637e:	2400      	movs	r4, #0
 8006380:	f503 33ea 	add.w	r3, r3, #119808	@ 0x1d400
 8006384:	9401      	str	r4, [sp, #4]
 8006386:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006388:	f042 7200 	orr.w	r2, r2, #33554432	@ 0x2000000
 800638c:	641a      	str	r2, [r3, #64]	@ 0x40
 800638e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006390:	ed9f 7b1b 	vldr	d7, [pc, #108]	@ 8006400 <HAL_CAN_MspInit+0x90>
 8006394:	f44f 7040 	mov.w	r0, #768	@ 0x300
 8006398:	2102      	movs	r1, #2
 800639a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800639e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80063a2:	9301      	str	r3, [sp, #4]
 80063a4:	a902      	add	r1, sp, #8
 80063a6:	2309      	movs	r3, #9
 80063a8:	4818      	ldr	r0, [pc, #96]	@ (800640c <HAL_CAN_MspInit+0x9c>)
 80063aa:	9306      	str	r3, [sp, #24]
 80063ac:	ed8d 7b04 	vstr	d7, [sp, #16]
 80063b0:	9a01      	ldr	r2, [sp, #4]
 80063b2:	f003 feb1 	bl	800a118 <HAL_GPIO_Init>
 80063b6:	4622      	mov	r2, r4
 80063b8:	2106      	movs	r1, #6
 80063ba:	2013      	movs	r0, #19
 80063bc:	f7fa fdf4 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80063c0:	2013      	movs	r0, #19
 80063c2:	f7fa fe2d 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80063c6:	4622      	mov	r2, r4
 80063c8:	2106      	movs	r1, #6
 80063ca:	2014      	movs	r0, #20
 80063cc:	f7fa fdec 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80063d0:	2014      	movs	r0, #20
 80063d2:	f7fa fe25 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80063d6:	4622      	mov	r2, r4
 80063d8:	2106      	movs	r1, #6
 80063da:	2015      	movs	r0, #21
 80063dc:	f7fa fde4 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80063e0:	2015      	movs	r0, #21
 80063e2:	f7fa fe1d 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80063e6:	4622      	mov	r2, r4
 80063e8:	2106      	movs	r1, #6
 80063ea:	2016      	movs	r0, #22
 80063ec:	f7fa fddc 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80063f0:	2016      	movs	r0, #22
 80063f2:	f7fa fe15 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80063f6:	b008      	add	sp, #32
 80063f8:	bd10      	pop	{r4, pc}
 80063fa:	bf00      	nop
 80063fc:	f3af 8000 	nop.w
 8006400:	00000000 	.word	0x00000000
 8006404:	00000003 	.word	0x00000003
 8006408:	40006400 	.word	0x40006400
 800640c:	40020400 	.word	0x40020400

08006410 <HAL_RCC_OscConfig>:
 8006410:	2800      	cmp	r0, #0
 8006412:	f000 8168 	beq.w	80066e6 <HAL_RCC_OscConfig+0x2d6>
 8006416:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800641a:	6803      	ldr	r3, [r0, #0]
 800641c:	07dd      	lsls	r5, r3, #31
 800641e:	b082      	sub	sp, #8
 8006420:	4604      	mov	r4, r0
 8006422:	d52f      	bpl.n	8006484 <HAL_RCC_OscConfig+0x74>
 8006424:	499e      	ldr	r1, [pc, #632]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006426:	688a      	ldr	r2, [r1, #8]
 8006428:	f002 020c 	and.w	r2, r2, #12
 800642c:	2a04      	cmp	r2, #4
 800642e:	f000 80ed 	beq.w	800660c <HAL_RCC_OscConfig+0x1fc>
 8006432:	688a      	ldr	r2, [r1, #8]
 8006434:	f002 020c 	and.w	r2, r2, #12
 8006438:	2a08      	cmp	r2, #8
 800643a:	f000 80e3 	beq.w	8006604 <HAL_RCC_OscConfig+0x1f4>
 800643e:	6863      	ldr	r3, [r4, #4]
 8006440:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006444:	f000 80ec 	beq.w	8006620 <HAL_RCC_OscConfig+0x210>
 8006448:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800644c:	f000 814d 	beq.w	80066ea <HAL_RCC_OscConfig+0x2da>
 8006450:	4d93      	ldr	r5, [pc, #588]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006452:	682a      	ldr	r2, [r5, #0]
 8006454:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8006458:	602a      	str	r2, [r5, #0]
 800645a:	682a      	ldr	r2, [r5, #0]
 800645c:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006460:	602a      	str	r2, [r5, #0]
 8006462:	2b00      	cmp	r3, #0
 8006464:	f040 80e1 	bne.w	800662a <HAL_RCC_OscConfig+0x21a>
 8006468:	f7ff fcb8 	bl	8005ddc <HAL_GetTick>
 800646c:	4606      	mov	r6, r0
 800646e:	e005      	b.n	800647c <HAL_RCC_OscConfig+0x6c>
 8006470:	f7ff fcb4 	bl	8005ddc <HAL_GetTick>
 8006474:	1b80      	subs	r0, r0, r6
 8006476:	2864      	cmp	r0, #100	@ 0x64
 8006478:	f200 8101 	bhi.w	800667e <HAL_RCC_OscConfig+0x26e>
 800647c:	682b      	ldr	r3, [r5, #0]
 800647e:	039b      	lsls	r3, r3, #14
 8006480:	d4f6      	bmi.n	8006470 <HAL_RCC_OscConfig+0x60>
 8006482:	6823      	ldr	r3, [r4, #0]
 8006484:	079f      	lsls	r7, r3, #30
 8006486:	d528      	bpl.n	80064da <HAL_RCC_OscConfig+0xca>
 8006488:	4a85      	ldr	r2, [pc, #532]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 800648a:	6891      	ldr	r1, [r2, #8]
 800648c:	f011 0f0c 	tst.w	r1, #12
 8006490:	f000 809a 	beq.w	80065c8 <HAL_RCC_OscConfig+0x1b8>
 8006494:	6891      	ldr	r1, [r2, #8]
 8006496:	f001 010c 	and.w	r1, r1, #12
 800649a:	2908      	cmp	r1, #8
 800649c:	f000 8090 	beq.w	80065c0 <HAL_RCC_OscConfig+0x1b0>
 80064a0:	68e3      	ldr	r3, [r4, #12]
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	f000 810e 	beq.w	80066c4 <HAL_RCC_OscConfig+0x2b4>
 80064a8:	4b7e      	ldr	r3, [pc, #504]	@ (80066a4 <HAL_RCC_OscConfig+0x294>)
 80064aa:	4e7d      	ldr	r6, [pc, #500]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 80064ac:	2201      	movs	r2, #1
 80064ae:	601a      	str	r2, [r3, #0]
 80064b0:	f7ff fc94 	bl	8005ddc <HAL_GetTick>
 80064b4:	4605      	mov	r5, r0
 80064b6:	e005      	b.n	80064c4 <HAL_RCC_OscConfig+0xb4>
 80064b8:	f7ff fc90 	bl	8005ddc <HAL_GetTick>
 80064bc:	1b40      	subs	r0, r0, r5
 80064be:	2802      	cmp	r0, #2
 80064c0:	f200 80dd 	bhi.w	800667e <HAL_RCC_OscConfig+0x26e>
 80064c4:	6833      	ldr	r3, [r6, #0]
 80064c6:	0798      	lsls	r0, r3, #30
 80064c8:	d5f6      	bpl.n	80064b8 <HAL_RCC_OscConfig+0xa8>
 80064ca:	6833      	ldr	r3, [r6, #0]
 80064cc:	6922      	ldr	r2, [r4, #16]
 80064ce:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80064d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80064d6:	6033      	str	r3, [r6, #0]
 80064d8:	6823      	ldr	r3, [r4, #0]
 80064da:	071a      	lsls	r2, r3, #28
 80064dc:	d45b      	bmi.n	8006596 <HAL_RCC_OscConfig+0x186>
 80064de:	0758      	lsls	r0, r3, #29
 80064e0:	d53a      	bpl.n	8006558 <HAL_RCC_OscConfig+0x148>
 80064e2:	4a6f      	ldr	r2, [pc, #444]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 80064e4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80064e6:	f013 5380 	ands.w	r3, r3, #268435456	@ 0x10000000
 80064ea:	f040 8089 	bne.w	8006600 <HAL_RCC_OscConfig+0x1f0>
 80064ee:	9301      	str	r3, [sp, #4]
 80064f0:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80064f2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80064f6:	6413      	str	r3, [r2, #64]	@ 0x40
 80064f8:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80064fa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80064fe:	9301      	str	r3, [sp, #4]
 8006500:	9b01      	ldr	r3, [sp, #4]
 8006502:	2501      	movs	r5, #1
 8006504:	4e68      	ldr	r6, [pc, #416]	@ (80066a8 <HAL_RCC_OscConfig+0x298>)
 8006506:	6833      	ldr	r3, [r6, #0]
 8006508:	05d9      	lsls	r1, r3, #23
 800650a:	f140 80a8 	bpl.w	800665e <HAL_RCC_OscConfig+0x24e>
 800650e:	68a3      	ldr	r3, [r4, #8]
 8006510:	2b01      	cmp	r3, #1
 8006512:	f000 80b8 	beq.w	8006686 <HAL_RCC_OscConfig+0x276>
 8006516:	2b05      	cmp	r3, #5
 8006518:	f000 8123 	beq.w	8006762 <HAL_RCC_OscConfig+0x352>
 800651c:	4e60      	ldr	r6, [pc, #384]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 800651e:	6f32      	ldr	r2, [r6, #112]	@ 0x70
 8006520:	f022 0201 	bic.w	r2, r2, #1
 8006524:	6732      	str	r2, [r6, #112]	@ 0x70
 8006526:	6f32      	ldr	r2, [r6, #112]	@ 0x70
 8006528:	f022 0204 	bic.w	r2, r2, #4
 800652c:	6732      	str	r2, [r6, #112]	@ 0x70
 800652e:	2b00      	cmp	r3, #0
 8006530:	f040 80ae 	bne.w	8006690 <HAL_RCC_OscConfig+0x280>
 8006534:	f7ff fc52 	bl	8005ddc <HAL_GetTick>
 8006538:	f241 3888 	movw	r8, #5000	@ 0x1388
 800653c:	4607      	mov	r7, r0
 800653e:	e005      	b.n	800654c <HAL_RCC_OscConfig+0x13c>
 8006540:	f7ff fc4c 	bl	8005ddc <HAL_GetTick>
 8006544:	1bc0      	subs	r0, r0, r7
 8006546:	4540      	cmp	r0, r8
 8006548:	f200 8099 	bhi.w	800667e <HAL_RCC_OscConfig+0x26e>
 800654c:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800654e:	0798      	lsls	r0, r3, #30
 8006550:	d4f6      	bmi.n	8006540 <HAL_RCC_OscConfig+0x130>
 8006552:	2d00      	cmp	r5, #0
 8006554:	f040 80d3 	bne.w	80066fe <HAL_RCC_OscConfig+0x2ee>
 8006558:	69a3      	ldr	r3, [r4, #24]
 800655a:	b1c3      	cbz	r3, 800658e <HAL_RCC_OscConfig+0x17e>
 800655c:	4d50      	ldr	r5, [pc, #320]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 800655e:	68aa      	ldr	r2, [r5, #8]
 8006560:	f002 020c 	and.w	r2, r2, #12
 8006564:	2a08      	cmp	r2, #8
 8006566:	d036      	beq.n	80065d6 <HAL_RCC_OscConfig+0x1c6>
 8006568:	2b02      	cmp	r3, #2
 800656a:	4b4e      	ldr	r3, [pc, #312]	@ (80066a4 <HAL_RCC_OscConfig+0x294>)
 800656c:	f04f 0200 	mov.w	r2, #0
 8006570:	661a      	str	r2, [r3, #96]	@ 0x60
 8006572:	f000 80ca 	beq.w	800670a <HAL_RCC_OscConfig+0x2fa>
 8006576:	f7ff fc31 	bl	8005ddc <HAL_GetTick>
 800657a:	4604      	mov	r4, r0
 800657c:	e004      	b.n	8006588 <HAL_RCC_OscConfig+0x178>
 800657e:	f7ff fc2d 	bl	8005ddc <HAL_GetTick>
 8006582:	1b00      	subs	r0, r0, r4
 8006584:	2802      	cmp	r0, #2
 8006586:	d87a      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 8006588:	682b      	ldr	r3, [r5, #0]
 800658a:	019b      	lsls	r3, r3, #6
 800658c:	d4f7      	bmi.n	800657e <HAL_RCC_OscConfig+0x16e>
 800658e:	2000      	movs	r0, #0
 8006590:	b002      	add	sp, #8
 8006592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006596:	6963      	ldr	r3, [r4, #20]
 8006598:	b30b      	cbz	r3, 80065de <HAL_RCC_OscConfig+0x1ce>
 800659a:	4b42      	ldr	r3, [pc, #264]	@ (80066a4 <HAL_RCC_OscConfig+0x294>)
 800659c:	4e40      	ldr	r6, [pc, #256]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 800659e:	2201      	movs	r2, #1
 80065a0:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
 80065a4:	f7ff fc1a 	bl	8005ddc <HAL_GetTick>
 80065a8:	4605      	mov	r5, r0
 80065aa:	e004      	b.n	80065b6 <HAL_RCC_OscConfig+0x1a6>
 80065ac:	f7ff fc16 	bl	8005ddc <HAL_GetTick>
 80065b0:	1b40      	subs	r0, r0, r5
 80065b2:	2802      	cmp	r0, #2
 80065b4:	d863      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 80065b6:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80065b8:	079b      	lsls	r3, r3, #30
 80065ba:	d5f7      	bpl.n	80065ac <HAL_RCC_OscConfig+0x19c>
 80065bc:	6823      	ldr	r3, [r4, #0]
 80065be:	e78e      	b.n	80064de <HAL_RCC_OscConfig+0xce>
 80065c0:	6852      	ldr	r2, [r2, #4]
 80065c2:	0256      	lsls	r6, r2, #9
 80065c4:	f53f af6c 	bmi.w	80064a0 <HAL_RCC_OscConfig+0x90>
 80065c8:	4a35      	ldr	r2, [pc, #212]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 80065ca:	6812      	ldr	r2, [r2, #0]
 80065cc:	0795      	lsls	r5, r2, #30
 80065ce:	d53a      	bpl.n	8006646 <HAL_RCC_OscConfig+0x236>
 80065d0:	68e2      	ldr	r2, [r4, #12]
 80065d2:	2a01      	cmp	r2, #1
 80065d4:	d037      	beq.n	8006646 <HAL_RCC_OscConfig+0x236>
 80065d6:	2001      	movs	r0, #1
 80065d8:	b002      	add	sp, #8
 80065da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80065de:	4a31      	ldr	r2, [pc, #196]	@ (80066a4 <HAL_RCC_OscConfig+0x294>)
 80065e0:	4e2f      	ldr	r6, [pc, #188]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 80065e2:	f8c2 3e80 	str.w	r3, [r2, #3712]	@ 0xe80
 80065e6:	f7ff fbf9 	bl	8005ddc <HAL_GetTick>
 80065ea:	4605      	mov	r5, r0
 80065ec:	e004      	b.n	80065f8 <HAL_RCC_OscConfig+0x1e8>
 80065ee:	f7ff fbf5 	bl	8005ddc <HAL_GetTick>
 80065f2:	1b40      	subs	r0, r0, r5
 80065f4:	2802      	cmp	r0, #2
 80065f6:	d842      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 80065f8:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80065fa:	079f      	lsls	r7, r3, #30
 80065fc:	d4f7      	bmi.n	80065ee <HAL_RCC_OscConfig+0x1de>
 80065fe:	e7dd      	b.n	80065bc <HAL_RCC_OscConfig+0x1ac>
 8006600:	2500      	movs	r5, #0
 8006602:	e77f      	b.n	8006504 <HAL_RCC_OscConfig+0xf4>
 8006604:	684a      	ldr	r2, [r1, #4]
 8006606:	0250      	lsls	r0, r2, #9
 8006608:	f57f af19 	bpl.w	800643e <HAL_RCC_OscConfig+0x2e>
 800660c:	4a24      	ldr	r2, [pc, #144]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 800660e:	6812      	ldr	r2, [r2, #0]
 8006610:	0391      	lsls	r1, r2, #14
 8006612:	f57f af37 	bpl.w	8006484 <HAL_RCC_OscConfig+0x74>
 8006616:	6862      	ldr	r2, [r4, #4]
 8006618:	2a00      	cmp	r2, #0
 800661a:	f47f af33 	bne.w	8006484 <HAL_RCC_OscConfig+0x74>
 800661e:	e7da      	b.n	80065d6 <HAL_RCC_OscConfig+0x1c6>
 8006620:	4a1f      	ldr	r2, [pc, #124]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006622:	6813      	ldr	r3, [r2, #0]
 8006624:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006628:	6013      	str	r3, [r2, #0]
 800662a:	f7ff fbd7 	bl	8005ddc <HAL_GetTick>
 800662e:	4e1c      	ldr	r6, [pc, #112]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006630:	4605      	mov	r5, r0
 8006632:	e004      	b.n	800663e <HAL_RCC_OscConfig+0x22e>
 8006634:	f7ff fbd2 	bl	8005ddc <HAL_GetTick>
 8006638:	1b40      	subs	r0, r0, r5
 800663a:	2864      	cmp	r0, #100	@ 0x64
 800663c:	d81f      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 800663e:	6833      	ldr	r3, [r6, #0]
 8006640:	039a      	lsls	r2, r3, #14
 8006642:	d5f7      	bpl.n	8006634 <HAL_RCC_OscConfig+0x224>
 8006644:	e71d      	b.n	8006482 <HAL_RCC_OscConfig+0x72>
 8006646:	4916      	ldr	r1, [pc, #88]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006648:	6920      	ldr	r0, [r4, #16]
 800664a:	680a      	ldr	r2, [r1, #0]
 800664c:	f022 02f8 	bic.w	r2, r2, #248	@ 0xf8
 8006650:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8006654:	600a      	str	r2, [r1, #0]
 8006656:	071a      	lsls	r2, r3, #28
 8006658:	f57f af41 	bpl.w	80064de <HAL_RCC_OscConfig+0xce>
 800665c:	e79b      	b.n	8006596 <HAL_RCC_OscConfig+0x186>
 800665e:	6833      	ldr	r3, [r6, #0]
 8006660:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006664:	6033      	str	r3, [r6, #0]
 8006666:	f7ff fbb9 	bl	8005ddc <HAL_GetTick>
 800666a:	4607      	mov	r7, r0
 800666c:	6833      	ldr	r3, [r6, #0]
 800666e:	05da      	lsls	r2, r3, #23
 8006670:	f53f af4d 	bmi.w	800650e <HAL_RCC_OscConfig+0xfe>
 8006674:	f7ff fbb2 	bl	8005ddc <HAL_GetTick>
 8006678:	1bc0      	subs	r0, r0, r7
 800667a:	2802      	cmp	r0, #2
 800667c:	d9f6      	bls.n	800666c <HAL_RCC_OscConfig+0x25c>
 800667e:	2003      	movs	r0, #3
 8006680:	b002      	add	sp, #8
 8006682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006686:	4a06      	ldr	r2, [pc, #24]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006688:	6f13      	ldr	r3, [r2, #112]	@ 0x70
 800668a:	f043 0301 	orr.w	r3, r3, #1
 800668e:	6713      	str	r3, [r2, #112]	@ 0x70
 8006690:	f7ff fba4 	bl	8005ddc <HAL_GetTick>
 8006694:	4f02      	ldr	r7, [pc, #8]	@ (80066a0 <HAL_RCC_OscConfig+0x290>)
 8006696:	4606      	mov	r6, r0
 8006698:	f241 3888 	movw	r8, #5000	@ 0x1388
 800669c:	e00b      	b.n	80066b6 <HAL_RCC_OscConfig+0x2a6>
 800669e:	bf00      	nop
 80066a0:	40023800 	.word	0x40023800
 80066a4:	42470000 	.word	0x42470000
 80066a8:	40007000 	.word	0x40007000
 80066ac:	f7ff fb96 	bl	8005ddc <HAL_GetTick>
 80066b0:	1b80      	subs	r0, r0, r6
 80066b2:	4540      	cmp	r0, r8
 80066b4:	d8e3      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 80066b6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80066b8:	079b      	lsls	r3, r3, #30
 80066ba:	d5f7      	bpl.n	80066ac <HAL_RCC_OscConfig+0x29c>
 80066bc:	2d00      	cmp	r5, #0
 80066be:	f43f af4b 	beq.w	8006558 <HAL_RCC_OscConfig+0x148>
 80066c2:	e01c      	b.n	80066fe <HAL_RCC_OscConfig+0x2ee>
 80066c4:	4a2c      	ldr	r2, [pc, #176]	@ (8006778 <HAL_RCC_OscConfig+0x368>)
 80066c6:	4e2d      	ldr	r6, [pc, #180]	@ (800677c <HAL_RCC_OscConfig+0x36c>)
 80066c8:	6013      	str	r3, [r2, #0]
 80066ca:	f7ff fb87 	bl	8005ddc <HAL_GetTick>
 80066ce:	4605      	mov	r5, r0
 80066d0:	e004      	b.n	80066dc <HAL_RCC_OscConfig+0x2cc>
 80066d2:	f7ff fb83 	bl	8005ddc <HAL_GetTick>
 80066d6:	1b40      	subs	r0, r0, r5
 80066d8:	2802      	cmp	r0, #2
 80066da:	d8d0      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 80066dc:	6833      	ldr	r3, [r6, #0]
 80066de:	0799      	lsls	r1, r3, #30
 80066e0:	d4f7      	bmi.n	80066d2 <HAL_RCC_OscConfig+0x2c2>
 80066e2:	6823      	ldr	r3, [r4, #0]
 80066e4:	e6f9      	b.n	80064da <HAL_RCC_OscConfig+0xca>
 80066e6:	2001      	movs	r0, #1
 80066e8:	4770      	bx	lr
 80066ea:	4b24      	ldr	r3, [pc, #144]	@ (800677c <HAL_RCC_OscConfig+0x36c>)
 80066ec:	681a      	ldr	r2, [r3, #0]
 80066ee:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 80066f2:	601a      	str	r2, [r3, #0]
 80066f4:	681a      	ldr	r2, [r3, #0]
 80066f6:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 80066fa:	601a      	str	r2, [r3, #0]
 80066fc:	e795      	b.n	800662a <HAL_RCC_OscConfig+0x21a>
 80066fe:	4a1f      	ldr	r2, [pc, #124]	@ (800677c <HAL_RCC_OscConfig+0x36c>)
 8006700:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8006702:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006706:	6413      	str	r3, [r2, #64]	@ 0x40
 8006708:	e726      	b.n	8006558 <HAL_RCC_OscConfig+0x148>
 800670a:	f7ff fb67 	bl	8005ddc <HAL_GetTick>
 800670e:	4606      	mov	r6, r0
 8006710:	e004      	b.n	800671c <HAL_RCC_OscConfig+0x30c>
 8006712:	f7ff fb63 	bl	8005ddc <HAL_GetTick>
 8006716:	1b80      	subs	r0, r0, r6
 8006718:	2802      	cmp	r0, #2
 800671a:	d8b0      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 800671c:	682b      	ldr	r3, [r5, #0]
 800671e:	0199      	lsls	r1, r3, #6
 8006720:	d4f7      	bmi.n	8006712 <HAL_RCC_OscConfig+0x302>
 8006722:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8006726:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006728:	430b      	orrs	r3, r1
 800672a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800672e:	e9d4 200a 	ldrd	r2, r0, [r4, #40]	@ 0x28
 8006732:	0852      	lsrs	r2, r2, #1
 8006734:	4910      	ldr	r1, [pc, #64]	@ (8006778 <HAL_RCC_OscConfig+0x368>)
 8006736:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800673a:	3a01      	subs	r2, #1
 800673c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006740:	2201      	movs	r2, #1
 8006742:	606b      	str	r3, [r5, #4]
 8006744:	660a      	str	r2, [r1, #96]	@ 0x60
 8006746:	f7ff fb49 	bl	8005ddc <HAL_GetTick>
 800674a:	4d0c      	ldr	r5, [pc, #48]	@ (800677c <HAL_RCC_OscConfig+0x36c>)
 800674c:	4604      	mov	r4, r0
 800674e:	e004      	b.n	800675a <HAL_RCC_OscConfig+0x34a>
 8006750:	f7ff fb44 	bl	8005ddc <HAL_GetTick>
 8006754:	1b00      	subs	r0, r0, r4
 8006756:	2802      	cmp	r0, #2
 8006758:	d891      	bhi.n	800667e <HAL_RCC_OscConfig+0x26e>
 800675a:	682b      	ldr	r3, [r5, #0]
 800675c:	019a      	lsls	r2, r3, #6
 800675e:	d5f7      	bpl.n	8006750 <HAL_RCC_OscConfig+0x340>
 8006760:	e715      	b.n	800658e <HAL_RCC_OscConfig+0x17e>
 8006762:	4b06      	ldr	r3, [pc, #24]	@ (800677c <HAL_RCC_OscConfig+0x36c>)
 8006764:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8006766:	f042 0204 	orr.w	r2, r2, #4
 800676a:	671a      	str	r2, [r3, #112]	@ 0x70
 800676c:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 800676e:	f042 0201 	orr.w	r2, r2, #1
 8006772:	671a      	str	r2, [r3, #112]	@ 0x70
 8006774:	e78c      	b.n	8006690 <HAL_RCC_OscConfig+0x280>
 8006776:	bf00      	nop
 8006778:	42470000 	.word	0x42470000
 800677c:	40023800 	.word	0x40023800

08006780 <HAL_RCC_GetSysClockFreq>:
 8006780:	4916      	ldr	r1, [pc, #88]	@ (80067dc <HAL_RCC_GetSysClockFreq+0x5c>)
 8006782:	b508      	push	{r3, lr}
 8006784:	688b      	ldr	r3, [r1, #8]
 8006786:	f003 030c 	and.w	r3, r3, #12
 800678a:	2b04      	cmp	r3, #4
 800678c:	d01b      	beq.n	80067c6 <HAL_RCC_GetSysClockFreq+0x46>
 800678e:	2b08      	cmp	r3, #8
 8006790:	d001      	beq.n	8006796 <HAL_RCC_GetSysClockFreq+0x16>
 8006792:	4813      	ldr	r0, [pc, #76]	@ (80067e0 <HAL_RCC_GetSysClockFreq+0x60>)
 8006794:	bd08      	pop	{r3, pc}
 8006796:	684a      	ldr	r2, [r1, #4]
 8006798:	684b      	ldr	r3, [r1, #4]
 800679a:	6849      	ldr	r1, [r1, #4]
 800679c:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
 80067a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80067a4:	d111      	bne.n	80067ca <HAL_RCC_GetSysClockFreq+0x4a>
 80067a6:	480e      	ldr	r0, [pc, #56]	@ (80067e0 <HAL_RCC_GetSysClockFreq+0x60>)
 80067a8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80067ac:	fba1 0100 	umull	r0, r1, r1, r0
 80067b0:	f7fa faaa 	bl	8000d08 <__aeabi_uldivmod>
 80067b4:	4b09      	ldr	r3, [pc, #36]	@ (80067dc <HAL_RCC_GetSysClockFreq+0x5c>)
 80067b6:	685b      	ldr	r3, [r3, #4]
 80067b8:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80067bc:	3301      	adds	r3, #1
 80067be:	005b      	lsls	r3, r3, #1
 80067c0:	fbb0 f0f3 	udiv	r0, r0, r3
 80067c4:	bd08      	pop	{r3, pc}
 80067c6:	4807      	ldr	r0, [pc, #28]	@ (80067e4 <HAL_RCC_GetSysClockFreq+0x64>)
 80067c8:	bd08      	pop	{r3, pc}
 80067ca:	4806      	ldr	r0, [pc, #24]	@ (80067e4 <HAL_RCC_GetSysClockFreq+0x64>)
 80067cc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80067d0:	2300      	movs	r3, #0
 80067d2:	fba1 0100 	umull	r0, r1, r1, r0
 80067d6:	f7fa fa97 	bl	8000d08 <__aeabi_uldivmod>
 80067da:	e7eb      	b.n	80067b4 <HAL_RCC_GetSysClockFreq+0x34>
 80067dc:	40023800 	.word	0x40023800
 80067e0:	00f42400 	.word	0x00f42400
 80067e4:	007a1200 	.word	0x007a1200

080067e8 <HAL_RCC_ClockConfig>:
 80067e8:	2800      	cmp	r0, #0
 80067ea:	f000 8086 	beq.w	80068fa <HAL_RCC_ClockConfig+0x112>
 80067ee:	4a47      	ldr	r2, [pc, #284]	@ (800690c <HAL_RCC_ClockConfig+0x124>)
 80067f0:	6813      	ldr	r3, [r2, #0]
 80067f2:	f003 030f 	and.w	r3, r3, #15
 80067f6:	428b      	cmp	r3, r1
 80067f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067fc:	460d      	mov	r5, r1
 80067fe:	4604      	mov	r4, r0
 8006800:	d209      	bcs.n	8006816 <HAL_RCC_ClockConfig+0x2e>
 8006802:	b2cb      	uxtb	r3, r1
 8006804:	7013      	strb	r3, [r2, #0]
 8006806:	6813      	ldr	r3, [r2, #0]
 8006808:	f003 030f 	and.w	r3, r3, #15
 800680c:	428b      	cmp	r3, r1
 800680e:	d002      	beq.n	8006816 <HAL_RCC_ClockConfig+0x2e>
 8006810:	2001      	movs	r0, #1
 8006812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006816:	6823      	ldr	r3, [r4, #0]
 8006818:	0798      	lsls	r0, r3, #30
 800681a:	d514      	bpl.n	8006846 <HAL_RCC_ClockConfig+0x5e>
 800681c:	0759      	lsls	r1, r3, #29
 800681e:	d504      	bpl.n	800682a <HAL_RCC_ClockConfig+0x42>
 8006820:	493b      	ldr	r1, [pc, #236]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 8006822:	688a      	ldr	r2, [r1, #8]
 8006824:	f442 52e0 	orr.w	r2, r2, #7168	@ 0x1c00
 8006828:	608a      	str	r2, [r1, #8]
 800682a:	071a      	lsls	r2, r3, #28
 800682c:	d504      	bpl.n	8006838 <HAL_RCC_ClockConfig+0x50>
 800682e:	4938      	ldr	r1, [pc, #224]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 8006830:	688a      	ldr	r2, [r1, #8]
 8006832:	f442 4260 	orr.w	r2, r2, #57344	@ 0xe000
 8006836:	608a      	str	r2, [r1, #8]
 8006838:	4935      	ldr	r1, [pc, #212]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 800683a:	68a0      	ldr	r0, [r4, #8]
 800683c:	688a      	ldr	r2, [r1, #8]
 800683e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006842:	4302      	orrs	r2, r0
 8006844:	608a      	str	r2, [r1, #8]
 8006846:	07df      	lsls	r7, r3, #31
 8006848:	d521      	bpl.n	800688e <HAL_RCC_ClockConfig+0xa6>
 800684a:	6862      	ldr	r2, [r4, #4]
 800684c:	2a01      	cmp	r2, #1
 800684e:	d056      	beq.n	80068fe <HAL_RCC_ClockConfig+0x116>
 8006850:	1e93      	subs	r3, r2, #2
 8006852:	2b01      	cmp	r3, #1
 8006854:	4b2e      	ldr	r3, [pc, #184]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	d94c      	bls.n	80068f4 <HAL_RCC_ClockConfig+0x10c>
 800685a:	0799      	lsls	r1, r3, #30
 800685c:	d5d8      	bpl.n	8006810 <HAL_RCC_ClockConfig+0x28>
 800685e:	4e2c      	ldr	r6, [pc, #176]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 8006860:	68b3      	ldr	r3, [r6, #8]
 8006862:	f023 0303 	bic.w	r3, r3, #3
 8006866:	4313      	orrs	r3, r2
 8006868:	60b3      	str	r3, [r6, #8]
 800686a:	f7ff fab7 	bl	8005ddc <HAL_GetTick>
 800686e:	f241 3888 	movw	r8, #5000	@ 0x1388
 8006872:	4607      	mov	r7, r0
 8006874:	e004      	b.n	8006880 <HAL_RCC_ClockConfig+0x98>
 8006876:	f7ff fab1 	bl	8005ddc <HAL_GetTick>
 800687a:	1bc0      	subs	r0, r0, r7
 800687c:	4540      	cmp	r0, r8
 800687e:	d843      	bhi.n	8006908 <HAL_RCC_ClockConfig+0x120>
 8006880:	68b3      	ldr	r3, [r6, #8]
 8006882:	6862      	ldr	r2, [r4, #4]
 8006884:	f003 030c 	and.w	r3, r3, #12
 8006888:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800688c:	d1f3      	bne.n	8006876 <HAL_RCC_ClockConfig+0x8e>
 800688e:	4a1f      	ldr	r2, [pc, #124]	@ (800690c <HAL_RCC_ClockConfig+0x124>)
 8006890:	6813      	ldr	r3, [r2, #0]
 8006892:	f003 030f 	and.w	r3, r3, #15
 8006896:	42ab      	cmp	r3, r5
 8006898:	d906      	bls.n	80068a8 <HAL_RCC_ClockConfig+0xc0>
 800689a:	b2eb      	uxtb	r3, r5
 800689c:	7013      	strb	r3, [r2, #0]
 800689e:	6813      	ldr	r3, [r2, #0]
 80068a0:	f003 030f 	and.w	r3, r3, #15
 80068a4:	42ab      	cmp	r3, r5
 80068a6:	d1b3      	bne.n	8006810 <HAL_RCC_ClockConfig+0x28>
 80068a8:	6823      	ldr	r3, [r4, #0]
 80068aa:	075a      	lsls	r2, r3, #29
 80068ac:	d506      	bpl.n	80068bc <HAL_RCC_ClockConfig+0xd4>
 80068ae:	4918      	ldr	r1, [pc, #96]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 80068b0:	68e0      	ldr	r0, [r4, #12]
 80068b2:	688a      	ldr	r2, [r1, #8]
 80068b4:	f422 52e0 	bic.w	r2, r2, #7168	@ 0x1c00
 80068b8:	4302      	orrs	r2, r0
 80068ba:	608a      	str	r2, [r1, #8]
 80068bc:	071b      	lsls	r3, r3, #28
 80068be:	d507      	bpl.n	80068d0 <HAL_RCC_ClockConfig+0xe8>
 80068c0:	4a13      	ldr	r2, [pc, #76]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 80068c2:	6921      	ldr	r1, [r4, #16]
 80068c4:	6893      	ldr	r3, [r2, #8]
 80068c6:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80068ca:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80068ce:	6093      	str	r3, [r2, #8]
 80068d0:	f7ff ff56 	bl	8006780 <HAL_RCC_GetSysClockFreq>
 80068d4:	4a0e      	ldr	r2, [pc, #56]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 80068d6:	4c0f      	ldr	r4, [pc, #60]	@ (8006914 <HAL_RCC_ClockConfig+0x12c>)
 80068d8:	6892      	ldr	r2, [r2, #8]
 80068da:	490f      	ldr	r1, [pc, #60]	@ (8006918 <HAL_RCC_ClockConfig+0x130>)
 80068dc:	f3c2 1203 	ubfx	r2, r2, #4, #4
 80068e0:	4603      	mov	r3, r0
 80068e2:	5ca2      	ldrb	r2, [r4, r2]
 80068e4:	2000      	movs	r0, #0
 80068e6:	40d3      	lsrs	r3, r2
 80068e8:	600b      	str	r3, [r1, #0]
 80068ea:	f7fa fc1b 	bl	8001124 <HAL_InitTick>
 80068ee:	2000      	movs	r0, #0
 80068f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80068f4:	0198      	lsls	r0, r3, #6
 80068f6:	d4b2      	bmi.n	800685e <HAL_RCC_ClockConfig+0x76>
 80068f8:	e78a      	b.n	8006810 <HAL_RCC_ClockConfig+0x28>
 80068fa:	2001      	movs	r0, #1
 80068fc:	4770      	bx	lr
 80068fe:	4b04      	ldr	r3, [pc, #16]	@ (8006910 <HAL_RCC_ClockConfig+0x128>)
 8006900:	681b      	ldr	r3, [r3, #0]
 8006902:	039e      	lsls	r6, r3, #14
 8006904:	d4ab      	bmi.n	800685e <HAL_RCC_ClockConfig+0x76>
 8006906:	e783      	b.n	8006810 <HAL_RCC_ClockConfig+0x28>
 8006908:	2003      	movs	r0, #3
 800690a:	e782      	b.n	8006812 <HAL_RCC_ClockConfig+0x2a>
 800690c:	40023c00 	.word	0x40023c00
 8006910:	40023800 	.word	0x40023800
 8006914:	0802abe4 	.word	0x0802abe4
 8006918:	200001f4 	.word	0x200001f4

0800691c <HAL_RCC_GetHCLKFreq>:
 800691c:	4b01      	ldr	r3, [pc, #4]	@ (8006924 <HAL_RCC_GetHCLKFreq+0x8>)
 800691e:	6818      	ldr	r0, [r3, #0]
 8006920:	4770      	bx	lr
 8006922:	bf00      	nop
 8006924:	200001f4 	.word	0x200001f4

08006928 <HAL_RCC_GetPCLK1Freq>:
 8006928:	4b04      	ldr	r3, [pc, #16]	@ (800693c <HAL_RCC_GetPCLK1Freq+0x14>)
 800692a:	4905      	ldr	r1, [pc, #20]	@ (8006940 <HAL_RCC_GetPCLK1Freq+0x18>)
 800692c:	689b      	ldr	r3, [r3, #8]
 800692e:	4a05      	ldr	r2, [pc, #20]	@ (8006944 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006930:	6808      	ldr	r0, [r1, #0]
 8006932:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006936:	5cd3      	ldrb	r3, [r2, r3]
 8006938:	40d8      	lsrs	r0, r3
 800693a:	4770      	bx	lr
 800693c:	40023800 	.word	0x40023800
 8006940:	200001f4 	.word	0x200001f4
 8006944:	0802abdc 	.word	0x0802abdc

08006948 <HAL_RCC_GetPCLK2Freq>:
 8006948:	4b04      	ldr	r3, [pc, #16]	@ (800695c <HAL_RCC_GetPCLK2Freq+0x14>)
 800694a:	4905      	ldr	r1, [pc, #20]	@ (8006960 <HAL_RCC_GetPCLK2Freq+0x18>)
 800694c:	689b      	ldr	r3, [r3, #8]
 800694e:	4a05      	ldr	r2, [pc, #20]	@ (8006964 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006950:	6808      	ldr	r0, [r1, #0]
 8006952:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006956:	5cd3      	ldrb	r3, [r2, r3]
 8006958:	40d8      	lsrs	r0, r3
 800695a:	4770      	bx	lr
 800695c:	40023800 	.word	0x40023800
 8006960:	200001f4 	.word	0x200001f4
 8006964:	0802abdc 	.word	0x0802abdc

08006968 <HAL_RCC_GetClockConfig>:
 8006968:	4b0e      	ldr	r3, [pc, #56]	@ (80069a4 <HAL_RCC_GetClockConfig+0x3c>)
 800696a:	220f      	movs	r2, #15
 800696c:	b410      	push	{r4}
 800696e:	6002      	str	r2, [r0, #0]
 8006970:	689a      	ldr	r2, [r3, #8]
 8006972:	4c0d      	ldr	r4, [pc, #52]	@ (80069a8 <HAL_RCC_GetClockConfig+0x40>)
 8006974:	f002 0203 	and.w	r2, r2, #3
 8006978:	6042      	str	r2, [r0, #4]
 800697a:	689a      	ldr	r2, [r3, #8]
 800697c:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006980:	6082      	str	r2, [r0, #8]
 8006982:	689a      	ldr	r2, [r3, #8]
 8006984:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006988:	60c2      	str	r2, [r0, #12]
 800698a:	689b      	ldr	r3, [r3, #8]
 800698c:	08db      	lsrs	r3, r3, #3
 800698e:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006992:	6103      	str	r3, [r0, #16]
 8006994:	6823      	ldr	r3, [r4, #0]
 8006996:	f85d 4b04 	ldr.w	r4, [sp], #4
 800699a:	f003 030f 	and.w	r3, r3, #15
 800699e:	600b      	str	r3, [r1, #0]
 80069a0:	4770      	bx	lr
 80069a2:	bf00      	nop
 80069a4:	40023800 	.word	0x40023800
 80069a8:	40023c00 	.word	0x40023c00

080069ac <UART_SetConfig>:
 80069ac:	6802      	ldr	r2, [r0, #0]
 80069ae:	6911      	ldr	r1, [r2, #16]
 80069b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80069b4:	4604      	mov	r4, r0
 80069b6:	68c0      	ldr	r0, [r0, #12]
 80069b8:	68a3      	ldr	r3, [r4, #8]
 80069ba:	6925      	ldr	r5, [r4, #16]
 80069bc:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
 80069c0:	4301      	orrs	r1, r0
 80069c2:	6111      	str	r1, [r2, #16]
 80069c4:	68d1      	ldr	r1, [r2, #12]
 80069c6:	69e0      	ldr	r0, [r4, #28]
 80069c8:	432b      	orrs	r3, r5
 80069ca:	6965      	ldr	r5, [r4, #20]
 80069cc:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 80069d0:	432b      	orrs	r3, r5
 80069d2:	f021 010c 	bic.w	r1, r1, #12
 80069d6:	4303      	orrs	r3, r0
 80069d8:	430b      	orrs	r3, r1
 80069da:	60d3      	str	r3, [r2, #12]
 80069dc:	6953      	ldr	r3, [r2, #20]
 80069de:	69a1      	ldr	r1, [r4, #24]
 80069e0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80069e4:	430b      	orrs	r3, r1
 80069e6:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 80069ea:	6153      	str	r3, [r2, #20]
 80069ec:	4b9d      	ldr	r3, [pc, #628]	@ (8006c64 <UART_SetConfig+0x2b8>)
 80069ee:	f000 809c 	beq.w	8006b2a <UART_SetConfig+0x17e>
 80069f2:	429a      	cmp	r2, r3
 80069f4:	d05a      	beq.n	8006aac <UART_SetConfig+0x100>
 80069f6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80069fa:	429a      	cmp	r2, r3
 80069fc:	d056      	beq.n	8006aac <UART_SetConfig+0x100>
 80069fe:	f7ff ff93 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006a02:	6863      	ldr	r3, [r4, #4]
 8006a04:	f8df 8260 	ldr.w	r8, [pc, #608]	@ 8006c68 <UART_SetConfig+0x2bc>
 8006a08:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a0c:	009b      	lsls	r3, r3, #2
 8006a0e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a12:	fbb0 f7f3 	udiv	r7, r0, r3
 8006a16:	f7ff ff87 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006a1a:	fba8 3707 	umull	r3, r7, r8, r7
 8006a1e:	6863      	ldr	r3, [r4, #4]
 8006a20:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a24:	009b      	lsls	r3, r3, #2
 8006a26:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8006a2a:	fbb6 f6f3 	udiv	r6, r6, r3
 8006a2e:	f7ff ff7b 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006a32:	6863      	ldr	r3, [r4, #4]
 8006a34:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a38:	009b      	lsls	r3, r3, #2
 8006a3a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a3e:	fbb0 f0f3 	udiv	r0, r0, r3
 8006a42:	fba8 3000 	umull	r3, r0, r8, r0
 8006a46:	0940      	lsrs	r0, r0, #5
 8006a48:	f04f 0964 	mov.w	r9, #100	@ 0x64
 8006a4c:	fb09 6610 	mls	r6, r9, r0, r6
 8006a50:	0136      	lsls	r6, r6, #4
 8006a52:	f7ff ff69 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006a56:	3632      	adds	r6, #50	@ 0x32
 8006a58:	fba8 3606 	umull	r3, r6, r8, r6
 8006a5c:	6862      	ldr	r2, [r4, #4]
 8006a5e:	097f      	lsrs	r7, r7, #5
 8006a60:	0976      	lsrs	r6, r6, #5
 8006a62:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 8006a66:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006a6a:	0092      	lsls	r2, r2, #2
 8006a6c:	013f      	lsls	r7, r7, #4
 8006a6e:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 8006a72:	fbb3 f5f2 	udiv	r5, r3, r2
 8006a76:	f7ff ff57 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006a7a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8006a7e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a82:	009b      	lsls	r3, r3, #2
 8006a84:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006a88:	fbb0 f0f3 	udiv	r0, r0, r3
 8006a8c:	fba8 3000 	umull	r3, r0, r8, r0
 8006a90:	0940      	lsrs	r0, r0, #5
 8006a92:	fb09 5310 	mls	r3, r9, r0, r5
 8006a96:	011b      	lsls	r3, r3, #4
 8006a98:	3332      	adds	r3, #50	@ 0x32
 8006a9a:	fba8 8303 	umull	r8, r3, r8, r3
 8006a9e:	f3c3 1343 	ubfx	r3, r3, #5, #4
 8006aa2:	4333      	orrs	r3, r6
 8006aa4:	443b      	add	r3, r7
 8006aa6:	6093      	str	r3, [r2, #8]
 8006aa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006aac:	f7ff ff4c 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006ab0:	6863      	ldr	r3, [r4, #4]
 8006ab2:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8006c68 <UART_SetConfig+0x2bc>
 8006ab6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006aba:	009b      	lsls	r3, r3, #2
 8006abc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006ac0:	fbb0 f7f3 	udiv	r7, r0, r3
 8006ac4:	f7ff ff40 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006ac8:	fba8 3707 	umull	r3, r7, r8, r7
 8006acc:	6863      	ldr	r3, [r4, #4]
 8006ace:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006ad2:	009b      	lsls	r3, r3, #2
 8006ad4:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8006ad8:	fbb6 f6f3 	udiv	r6, r6, r3
 8006adc:	f7ff ff34 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006ae0:	6863      	ldr	r3, [r4, #4]
 8006ae2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006ae6:	009b      	lsls	r3, r3, #2
 8006ae8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006aec:	fbb0 f0f3 	udiv	r0, r0, r3
 8006af0:	fba8 3000 	umull	r3, r0, r8, r0
 8006af4:	0940      	lsrs	r0, r0, #5
 8006af6:	f04f 0964 	mov.w	r9, #100	@ 0x64
 8006afa:	fb09 6610 	mls	r6, r9, r0, r6
 8006afe:	0136      	lsls	r6, r6, #4
 8006b00:	f7ff ff22 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006b04:	3632      	adds	r6, #50	@ 0x32
 8006b06:	fba8 3606 	umull	r3, r6, r8, r6
 8006b0a:	6863      	ldr	r3, [r4, #4]
 8006b0c:	097f      	lsrs	r7, r7, #5
 8006b0e:	0976      	lsrs	r6, r6, #5
 8006b10:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b14:	009b      	lsls	r3, r3, #2
 8006b16:	013f      	lsls	r7, r7, #4
 8006b18:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 8006b1c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b20:	fbb0 f5f3 	udiv	r5, r0, r3
 8006b24:	f7ff ff10 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006b28:	e7a7      	b.n	8006a7a <UART_SetConfig+0xce>
 8006b2a:	429a      	cmp	r2, r3
 8006b2c:	d05a      	beq.n	8006be4 <UART_SetConfig+0x238>
 8006b2e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006b32:	429a      	cmp	r2, r3
 8006b34:	d056      	beq.n	8006be4 <UART_SetConfig+0x238>
 8006b36:	f7ff fef7 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006b3a:	6863      	ldr	r3, [r4, #4]
 8006b3c:	f8df 8128 	ldr.w	r8, [pc, #296]	@ 8006c68 <UART_SetConfig+0x2bc>
 8006b40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b44:	005b      	lsls	r3, r3, #1
 8006b46:	eb00 0780 	add.w	r7, r0, r0, lsl #2
 8006b4a:	fbb7 f7f3 	udiv	r7, r7, r3
 8006b4e:	f7ff feeb 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006b52:	fba8 3707 	umull	r3, r7, r8, r7
 8006b56:	6863      	ldr	r3, [r4, #4]
 8006b58:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b5c:	005b      	lsls	r3, r3, #1
 8006b5e:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8006b62:	fbb6 f6f3 	udiv	r6, r6, r3
 8006b66:	f7ff fedf 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006b6a:	6863      	ldr	r3, [r4, #4]
 8006b6c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b70:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006b74:	005b      	lsls	r3, r3, #1
 8006b76:	fbb0 f3f3 	udiv	r3, r0, r3
 8006b7a:	fba8 2303 	umull	r2, r3, r8, r3
 8006b7e:	095b      	lsrs	r3, r3, #5
 8006b80:	f04f 0964 	mov.w	r9, #100	@ 0x64
 8006b84:	fb09 6613 	mls	r6, r9, r3, r6
 8006b88:	00f6      	lsls	r6, r6, #3
 8006b8a:	f7ff fecd 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006b8e:	3632      	adds	r6, #50	@ 0x32
 8006b90:	fba8 3606 	umull	r3, r6, r8, r6
 8006b94:	6862      	ldr	r2, [r4, #4]
 8006b96:	097f      	lsrs	r7, r7, #5
 8006b98:	0936      	lsrs	r6, r6, #4
 8006b9a:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 8006b9e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8006ba2:	0052      	lsls	r2, r2, #1
 8006ba4:	013f      	lsls	r7, r7, #4
 8006ba6:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 8006baa:	fbb3 f5f2 	udiv	r5, r3, r2
 8006bae:	f7ff febb 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 8006bb2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8006bb6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006bba:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006bbe:	005b      	lsls	r3, r3, #1
 8006bc0:	fbb0 f3f3 	udiv	r3, r0, r3
 8006bc4:	fba8 1303 	umull	r1, r3, r8, r3
 8006bc8:	095b      	lsrs	r3, r3, #5
 8006bca:	fb09 5313 	mls	r3, r9, r3, r5
 8006bce:	00db      	lsls	r3, r3, #3
 8006bd0:	3332      	adds	r3, #50	@ 0x32
 8006bd2:	fba8 8303 	umull	r8, r3, r8, r3
 8006bd6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8006bda:	443b      	add	r3, r7
 8006bdc:	4433      	add	r3, r6
 8006bde:	6093      	str	r3, [r2, #8]
 8006be0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006be4:	f7ff feb0 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006be8:	6863      	ldr	r3, [r4, #4]
 8006bea:	f8df 807c 	ldr.w	r8, [pc, #124]	@ 8006c68 <UART_SetConfig+0x2bc>
 8006bee:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006bf2:	005b      	lsls	r3, r3, #1
 8006bf4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006bf8:	fbb0 f7f3 	udiv	r7, r0, r3
 8006bfc:	f7ff fea4 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006c00:	fba8 3707 	umull	r3, r7, r8, r7
 8006c04:	6863      	ldr	r3, [r4, #4]
 8006c06:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006c0a:	005b      	lsls	r3, r3, #1
 8006c0c:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8006c10:	fbb6 f6f3 	udiv	r6, r6, r3
 8006c14:	f7ff fe98 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006c18:	6863      	ldr	r3, [r4, #4]
 8006c1a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006c1e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006c22:	005b      	lsls	r3, r3, #1
 8006c24:	fbb0 f3f3 	udiv	r3, r0, r3
 8006c28:	fba8 2303 	umull	r2, r3, r8, r3
 8006c2c:	095b      	lsrs	r3, r3, #5
 8006c2e:	f04f 0964 	mov.w	r9, #100	@ 0x64
 8006c32:	fb09 6613 	mls	r6, r9, r3, r6
 8006c36:	00f6      	lsls	r6, r6, #3
 8006c38:	f7ff fe86 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006c3c:	3632      	adds	r6, #50	@ 0x32
 8006c3e:	fba8 3606 	umull	r3, r6, r8, r6
 8006c42:	6863      	ldr	r3, [r4, #4]
 8006c44:	097f      	lsrs	r7, r7, #5
 8006c46:	0936      	lsrs	r6, r6, #4
 8006c48:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006c4c:	005b      	lsls	r3, r3, #1
 8006c4e:	013f      	lsls	r7, r7, #4
 8006c50:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 8006c54:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8006c58:	fbb0 f5f3 	udiv	r5, r0, r3
 8006c5c:	f7ff fe74 	bl	8006948 <HAL_RCC_GetPCLK2Freq>
 8006c60:	e7a7      	b.n	8006bb2 <UART_SetConfig+0x206>
 8006c62:	bf00      	nop
 8006c64:	40011000 	.word	0x40011000
 8006c68:	51eb851f 	.word	0x51eb851f

08006c6c <HAL_UART_Init>:
 8006c6c:	b360      	cbz	r0, 8006cc8 <HAL_UART_Init+0x5c>
 8006c6e:	b538      	push	{r3, r4, r5, lr}
 8006c70:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8006c74:	4604      	mov	r4, r0
 8006c76:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006c7a:	b303      	cbz	r3, 8006cbe <HAL_UART_Init+0x52>
 8006c7c:	6822      	ldr	r2, [r4, #0]
 8006c7e:	2324      	movs	r3, #36	@ 0x24
 8006c80:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8006c84:	68d3      	ldr	r3, [r2, #12]
 8006c86:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	60d3      	str	r3, [r2, #12]
 8006c8e:	f7ff fe8d 	bl	80069ac <UART_SetConfig>
 8006c92:	6823      	ldr	r3, [r4, #0]
 8006c94:	691a      	ldr	r2, [r3, #16]
 8006c96:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006c9a:	611a      	str	r2, [r3, #16]
 8006c9c:	695a      	ldr	r2, [r3, #20]
 8006c9e:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006ca2:	615a      	str	r2, [r3, #20]
 8006ca4:	68da      	ldr	r2, [r3, #12]
 8006ca6:	2500      	movs	r5, #0
 8006ca8:	2120      	movs	r1, #32
 8006caa:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006cae:	60da      	str	r2, [r3, #12]
 8006cb0:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006cb2:	f884 1039 	strb.w	r1, [r4, #57]	@ 0x39
 8006cb6:	f884 103a 	strb.w	r1, [r4, #58]	@ 0x3a
 8006cba:	4628      	mov	r0, r5
 8006cbc:	bd38      	pop	{r3, r4, r5, pc}
 8006cbe:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 8006cc2:	f7fd f99d 	bl	8004000 <HAL_UART_MspInit>
 8006cc6:	e7d9      	b.n	8006c7c <HAL_UART_Init+0x10>
 8006cc8:	2001      	movs	r0, #1
 8006cca:	4770      	bx	lr

08006ccc <HAL_UART_DeInit>:
 8006ccc:	b180      	cbz	r0, 8006cf0 <HAL_UART_DeInit+0x24>
 8006cce:	b510      	push	{r4, lr}
 8006cd0:	2324      	movs	r3, #36	@ 0x24
 8006cd2:	4604      	mov	r4, r0
 8006cd4:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 8006cd8:	f7fd fa16 	bl	8004108 <HAL_UART_MspDeInit>
 8006cdc:	2300      	movs	r3, #0
 8006cde:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8006ce0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 8006ce4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8006ce8:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
 8006cec:	4618      	mov	r0, r3
 8006cee:	bd10      	pop	{r4, pc}
 8006cf0:	2001      	movs	r0, #1
 8006cf2:	4770      	bx	lr

08006cf4 <HAL_UART_Transmit_DMA>:
 8006cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006cf6:	4604      	mov	r4, r0
 8006cf8:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
 8006cfc:	2820      	cmp	r0, #32
 8006cfe:	d12d      	bne.n	8006d5c <HAL_UART_Transmit_DMA+0x68>
 8006d00:	b351      	cbz	r1, 8006d58 <HAL_UART_Transmit_DMA+0x64>
 8006d02:	b34a      	cbz	r2, 8006d58 <HAL_UART_Transmit_DMA+0x64>
 8006d04:	f894 0038 	ldrb.w	r0, [r4, #56]	@ 0x38
 8006d08:	2801      	cmp	r0, #1
 8006d0a:	d027      	beq.n	8006d5c <HAL_UART_Transmit_DMA+0x68>
 8006d0c:	2001      	movs	r0, #1
 8006d0e:	84e2      	strh	r2, [r4, #38]	@ 0x26
 8006d10:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8006d14:	84a2      	strh	r2, [r4, #36]	@ 0x24
 8006d16:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8006d18:	f8df c04c 	ldr.w	ip, [pc, #76]	@ 8006d68 <HAL_UART_Transmit_DMA+0x74>
 8006d1c:	4f10      	ldr	r7, [pc, #64]	@ (8006d60 <HAL_UART_Transmit_DMA+0x6c>)
 8006d1e:	4e11      	ldr	r6, [pc, #68]	@ (8006d64 <HAL_UART_Transmit_DMA+0x70>)
 8006d20:	6221      	str	r1, [r4, #32]
 8006d22:	4613      	mov	r3, r2
 8006d24:	6822      	ldr	r2, [r4, #0]
 8006d26:	2500      	movs	r5, #0
 8006d28:	f04f 0e21 	mov.w	lr, #33	@ 0x21
 8006d2c:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006d2e:	3204      	adds	r2, #4
 8006d30:	f884 e039 	strb.w	lr, [r4, #57]	@ 0x39
 8006d34:	e9c0 c70f 	strd	ip, r7, [r0, #60]	@ 0x3c
 8006d38:	e9c0 6513 	strd	r6, r5, [r0, #76]	@ 0x4c
 8006d3c:	f7fd fc1c 	bl	8004578 <HAL_DMA_Start_IT>
 8006d40:	6823      	ldr	r3, [r4, #0]
 8006d42:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006d46:	601a      	str	r2, [r3, #0]
 8006d48:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 8006d4c:	695a      	ldr	r2, [r3, #20]
 8006d4e:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8006d52:	4628      	mov	r0, r5
 8006d54:	615a      	str	r2, [r3, #20]
 8006d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006d58:	2001      	movs	r0, #1
 8006d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006d5c:	2002      	movs	r0, #2
 8006d5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006d60:	08006e71 	.word	0x08006e71
 8006d64:	08006f45 	.word	0x08006f45
 8006d68:	08006e41 	.word	0x08006e41

08006d6c <HAL_UART_Receive_DMA>:
 8006d6c:	f890 303a 	ldrb.w	r3, [r0, #58]	@ 0x3a
 8006d70:	2b20      	cmp	r3, #32
 8006d72:	d13c      	bne.n	8006dee <HAL_UART_Receive_DMA+0x82>
 8006d74:	2900      	cmp	r1, #0
 8006d76:	d038      	beq.n	8006dea <HAL_UART_Receive_DMA+0x7e>
 8006d78:	2a00      	cmp	r2, #0
 8006d7a:	d036      	beq.n	8006dea <HAL_UART_Receive_DMA+0x7e>
 8006d7c:	b570      	push	{r4, r5, r6, lr}
 8006d7e:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8006d82:	2b01      	cmp	r3, #1
 8006d84:	b082      	sub	sp, #8
 8006d86:	4604      	mov	r4, r0
 8006d88:	d033      	beq.n	8006df2 <HAL_UART_Receive_DMA+0x86>
 8006d8a:	2301      	movs	r3, #1
 8006d8c:	2500      	movs	r5, #0
 8006d8e:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
 8006d92:	2322      	movs	r3, #34	@ 0x22
 8006d94:	63c5      	str	r5, [r0, #60]	@ 0x3c
 8006d96:	6281      	str	r1, [r0, #40]	@ 0x28
 8006d98:	f880 303a 	strb.w	r3, [r0, #58]	@ 0x3a
 8006d9c:	8582      	strh	r2, [r0, #44]	@ 0x2c
 8006d9e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8006da0:	4e15      	ldr	r6, [pc, #84]	@ (8006df8 <HAL_UART_Receive_DMA+0x8c>)
 8006da2:	6505      	str	r5, [r0, #80]	@ 0x50
 8006da4:	4613      	mov	r3, r2
 8006da6:	460a      	mov	r2, r1
 8006da8:	6821      	ldr	r1, [r4, #0]
 8006daa:	63c6      	str	r6, [r0, #60]	@ 0x3c
 8006dac:	4e13      	ldr	r6, [pc, #76]	@ (8006dfc <HAL_UART_Receive_DMA+0x90>)
 8006dae:	6406      	str	r6, [r0, #64]	@ 0x40
 8006db0:	4e13      	ldr	r6, [pc, #76]	@ (8006e00 <HAL_UART_Receive_DMA+0x94>)
 8006db2:	64c6      	str	r6, [r0, #76]	@ 0x4c
 8006db4:	3104      	adds	r1, #4
 8006db6:	f7fd fbdf 	bl	8004578 <HAL_DMA_Start_IT>
 8006dba:	6823      	ldr	r3, [r4, #0]
 8006dbc:	9501      	str	r5, [sp, #4]
 8006dbe:	681a      	ldr	r2, [r3, #0]
 8006dc0:	9201      	str	r2, [sp, #4]
 8006dc2:	685a      	ldr	r2, [r3, #4]
 8006dc4:	9201      	str	r2, [sp, #4]
 8006dc6:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 8006dca:	9a01      	ldr	r2, [sp, #4]
 8006dcc:	68da      	ldr	r2, [r3, #12]
 8006dce:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006dd2:	60da      	str	r2, [r3, #12]
 8006dd4:	695a      	ldr	r2, [r3, #20]
 8006dd6:	f042 0201 	orr.w	r2, r2, #1
 8006dda:	615a      	str	r2, [r3, #20]
 8006ddc:	695a      	ldr	r2, [r3, #20]
 8006dde:	4628      	mov	r0, r5
 8006de0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006de4:	615a      	str	r2, [r3, #20]
 8006de6:	b002      	add	sp, #8
 8006de8:	bd70      	pop	{r4, r5, r6, pc}
 8006dea:	2001      	movs	r0, #1
 8006dec:	4770      	bx	lr
 8006dee:	2002      	movs	r0, #2
 8006df0:	4770      	bx	lr
 8006df2:	2002      	movs	r0, #2
 8006df4:	b002      	add	sp, #8
 8006df6:	bd70      	pop	{r4, r5, r6, pc}
 8006df8:	08006e81 	.word	0x08006e81
 8006dfc:	08006f35 	.word	0x08006f35
 8006e00:	08006f45 	.word	0x08006f45

08006e04 <HAL_UART_AbortReceive>:
 8006e04:	6803      	ldr	r3, [r0, #0]
 8006e06:	68da      	ldr	r2, [r3, #12]
 8006e08:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 8006e0c:	b510      	push	{r4, lr}
 8006e0e:	60da      	str	r2, [r3, #12]
 8006e10:	695a      	ldr	r2, [r3, #20]
 8006e12:	f022 0201 	bic.w	r2, r2, #1
 8006e16:	615a      	str	r2, [r3, #20]
 8006e18:	695a      	ldr	r2, [r3, #20]
 8006e1a:	0652      	lsls	r2, r2, #25
 8006e1c:	4604      	mov	r4, r0
 8006e1e:	d509      	bpl.n	8006e34 <HAL_UART_AbortReceive+0x30>
 8006e20:	695a      	ldr	r2, [r3, #20]
 8006e22:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8006e24:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006e28:	615a      	str	r2, [r3, #20]
 8006e2a:	b118      	cbz	r0, 8006e34 <HAL_UART_AbortReceive+0x30>
 8006e2c:	2300      	movs	r3, #0
 8006e2e:	6503      	str	r3, [r0, #80]	@ 0x50
 8006e30:	f7fd fbe2 	bl	80045f8 <HAL_DMA_Abort>
 8006e34:	2000      	movs	r0, #0
 8006e36:	2320      	movs	r3, #32
 8006e38:	85e0      	strh	r0, [r4, #46]	@ 0x2e
 8006e3a:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
 8006e3e:	bd10      	pop	{r4, pc}

08006e40 <UART_DMATransmitCplt>:
 8006e40:	b508      	push	{r3, lr}
 8006e42:	6803      	ldr	r3, [r0, #0]
 8006e44:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	f413 7380 	ands.w	r3, r3, #256	@ 0x100
 8006e4c:	d10a      	bne.n	8006e64 <UART_DMATransmitCplt+0x24>
 8006e4e:	6802      	ldr	r2, [r0, #0]
 8006e50:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8006e52:	6953      	ldr	r3, [r2, #20]
 8006e54:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006e58:	6153      	str	r3, [r2, #20]
 8006e5a:	68d3      	ldr	r3, [r2, #12]
 8006e5c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006e60:	60d3      	str	r3, [r2, #12]
 8006e62:	bd08      	pop	{r3, pc}
 8006e64:	f01a fa5a 	bl	802131c <HAL_UART_TxCpltCallback>
 8006e68:	bd08      	pop	{r3, pc}
 8006e6a:	bf00      	nop

08006e6c <HAL_UART_TxHalfCpltCallback>:
 8006e6c:	4770      	bx	lr
 8006e6e:	bf00      	nop

08006e70 <UART_DMATxHalfCplt>:
 8006e70:	b508      	push	{r3, lr}
 8006e72:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8006e74:	f7ff fffa 	bl	8006e6c <HAL_UART_TxHalfCpltCallback>
 8006e78:	bd08      	pop	{r3, pc}
 8006e7a:	bf00      	nop

08006e7c <HAL_UART_RxCpltCallback>:
 8006e7c:	4770      	bx	lr
 8006e7e:	bf00      	nop

08006e80 <UART_DMAReceiveCplt>:
 8006e80:	b508      	push	{r3, lr}
 8006e82:	6803      	ldr	r3, [r0, #0]
 8006e84:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	f413 7380 	ands.w	r3, r3, #256	@ 0x100
 8006e8c:	d110      	bne.n	8006eb0 <UART_DMAReceiveCplt+0x30>
 8006e8e:	6802      	ldr	r2, [r0, #0]
 8006e90:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8006e92:	68d3      	ldr	r3, [r2, #12]
 8006e94:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006e98:	60d3      	str	r3, [r2, #12]
 8006e9a:	6953      	ldr	r3, [r2, #20]
 8006e9c:	f023 0301 	bic.w	r3, r3, #1
 8006ea0:	6153      	str	r3, [r2, #20]
 8006ea2:	6953      	ldr	r3, [r2, #20]
 8006ea4:	2120      	movs	r1, #32
 8006ea6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006eaa:	6153      	str	r3, [r2, #20]
 8006eac:	f880 103a 	strb.w	r1, [r0, #58]	@ 0x3a
 8006eb0:	f7ff ffe4 	bl	8006e7c <HAL_UART_RxCpltCallback>
 8006eb4:	bd08      	pop	{r3, pc}
 8006eb6:	bf00      	nop

08006eb8 <UART_Receive_IT.isra.0>:
 8006eb8:	f890 303a 	ldrb.w	r3, [r0, #58]	@ 0x3a
 8006ebc:	2b22      	cmp	r3, #34	@ 0x22
 8006ebe:	d129      	bne.n	8006f14 <UART_Receive_IT.isra.0+0x5c>
 8006ec0:	6881      	ldr	r1, [r0, #8]
 8006ec2:	6902      	ldr	r2, [r0, #16]
 8006ec4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006ec6:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
 8006eca:	b510      	push	{r4, lr}
 8006ecc:	6804      	ldr	r4, [r0, #0]
 8006ece:	d00a      	beq.n	8006ee6 <UART_Receive_IT.isra.0+0x2e>
 8006ed0:	1c59      	adds	r1, r3, #1
 8006ed2:	bb02      	cbnz	r2, 8006f16 <UART_Receive_IT.isra.0+0x5e>
 8006ed4:	6862      	ldr	r2, [r4, #4]
 8006ed6:	6281      	str	r1, [r0, #40]	@ 0x28
 8006ed8:	701a      	strb	r2, [r3, #0]
 8006eda:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 8006edc:	3b01      	subs	r3, #1
 8006ede:	b29b      	uxth	r3, r3
 8006ee0:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8006ee2:	b143      	cbz	r3, 8006ef6 <UART_Receive_IT.isra.0+0x3e>
 8006ee4:	bd10      	pop	{r4, pc}
 8006ee6:	b9e2      	cbnz	r2, 8006f22 <UART_Receive_IT.isra.0+0x6a>
 8006ee8:	6862      	ldr	r2, [r4, #4]
 8006eea:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006eee:	f823 2b02 	strh.w	r2, [r3], #2
 8006ef2:	6283      	str	r3, [r0, #40]	@ 0x28
 8006ef4:	e7f1      	b.n	8006eda <UART_Receive_IT.isra.0+0x22>
 8006ef6:	6803      	ldr	r3, [r0, #0]
 8006ef8:	68da      	ldr	r2, [r3, #12]
 8006efa:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 8006efe:	60da      	str	r2, [r3, #12]
 8006f00:	695a      	ldr	r2, [r3, #20]
 8006f02:	2120      	movs	r1, #32
 8006f04:	f022 0201 	bic.w	r2, r2, #1
 8006f08:	615a      	str	r2, [r3, #20]
 8006f0a:	f880 103a 	strb.w	r1, [r0, #58]	@ 0x3a
 8006f0e:	f7ff ffb5 	bl	8006e7c <HAL_UART_RxCpltCallback>
 8006f12:	bd10      	pop	{r4, pc}
 8006f14:	4770      	bx	lr
 8006f16:	6862      	ldr	r2, [r4, #4]
 8006f18:	6281      	str	r1, [r0, #40]	@ 0x28
 8006f1a:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8006f1e:	701a      	strb	r2, [r3, #0]
 8006f20:	e7db      	b.n	8006eda <UART_Receive_IT.isra.0+0x22>
 8006f22:	6862      	ldr	r2, [r4, #4]
 8006f24:	b2d2      	uxtb	r2, r2
 8006f26:	f823 2b01 	strh.w	r2, [r3], #1
 8006f2a:	6283      	str	r3, [r0, #40]	@ 0x28
 8006f2c:	e7d5      	b.n	8006eda <UART_Receive_IT.isra.0+0x22>
 8006f2e:	bf00      	nop

08006f30 <HAL_UART_RxHalfCpltCallback>:
 8006f30:	4770      	bx	lr
 8006f32:	bf00      	nop

08006f34 <UART_DMARxHalfCplt>:
 8006f34:	b508      	push	{r3, lr}
 8006f36:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8006f38:	f7ff fffa 	bl	8006f30 <HAL_UART_RxHalfCpltCallback>
 8006f3c:	bd08      	pop	{r3, pc}
 8006f3e:	bf00      	nop

08006f40 <HAL_UART_ErrorCallback>:
 8006f40:	4770      	bx	lr
 8006f42:	bf00      	nop

08006f44 <UART_DMAError>:
 8006f44:	b508      	push	{r3, lr}
 8006f46:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8006f48:	6803      	ldr	r3, [r0, #0]
 8006f4a:	6959      	ldr	r1, [r3, #20]
 8006f4c:	f890 2039 	ldrb.w	r2, [r0, #57]	@ 0x39
 8006f50:	2a21      	cmp	r2, #33	@ 0x21
 8006f52:	d00b      	beq.n	8006f6c <UART_DMAError+0x28>
 8006f54:	6959      	ldr	r1, [r3, #20]
 8006f56:	f890 203a 	ldrb.w	r2, [r0, #58]	@ 0x3a
 8006f5a:	2a22      	cmp	r2, #34	@ 0x22
 8006f5c:	d016      	beq.n	8006f8c <UART_DMAError+0x48>
 8006f5e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8006f60:	f043 0310 	orr.w	r3, r3, #16
 8006f64:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8006f66:	f7ff ffeb 	bl	8006f40 <HAL_UART_ErrorCallback>
 8006f6a:	bd08      	pop	{r3, pc}
 8006f6c:	0609      	lsls	r1, r1, #24
 8006f6e:	d5f1      	bpl.n	8006f54 <UART_DMAError+0x10>
 8006f70:	2200      	movs	r2, #0
 8006f72:	84c2      	strh	r2, [r0, #38]	@ 0x26
 8006f74:	68da      	ldr	r2, [r3, #12]
 8006f76:	2120      	movs	r1, #32
 8006f78:	f022 02c0 	bic.w	r2, r2, #192	@ 0xc0
 8006f7c:	60da      	str	r2, [r3, #12]
 8006f7e:	f880 1039 	strb.w	r1, [r0, #57]	@ 0x39
 8006f82:	6959      	ldr	r1, [r3, #20]
 8006f84:	f890 203a 	ldrb.w	r2, [r0, #58]	@ 0x3a
 8006f88:	2a22      	cmp	r2, #34	@ 0x22
 8006f8a:	d1e8      	bne.n	8006f5e <UART_DMAError+0x1a>
 8006f8c:	064a      	lsls	r2, r1, #25
 8006f8e:	d5e6      	bpl.n	8006f5e <UART_DMAError+0x1a>
 8006f90:	2200      	movs	r2, #0
 8006f92:	85c2      	strh	r2, [r0, #46]	@ 0x2e
 8006f94:	68da      	ldr	r2, [r3, #12]
 8006f96:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 8006f9a:	60da      	str	r2, [r3, #12]
 8006f9c:	695a      	ldr	r2, [r3, #20]
 8006f9e:	2120      	movs	r1, #32
 8006fa0:	f022 0201 	bic.w	r2, r2, #1
 8006fa4:	615a      	str	r2, [r3, #20]
 8006fa6:	f880 103a 	strb.w	r1, [r0, #58]	@ 0x3a
 8006faa:	e7d8      	b.n	8006f5e <UART_DMAError+0x1a>

08006fac <HAL_UART_IRQHandler>:
 8006fac:	6803      	ldr	r3, [r0, #0]
 8006fae:	681a      	ldr	r2, [r3, #0]
 8006fb0:	b570      	push	{r4, r5, r6, lr}
 8006fb2:	0716      	lsls	r6, r2, #28
 8006fb4:	68dd      	ldr	r5, [r3, #12]
 8006fb6:	6959      	ldr	r1, [r3, #20]
 8006fb8:	4604      	mov	r4, r0
 8006fba:	d10c      	bne.n	8006fd6 <HAL_UART_IRQHandler+0x2a>
 8006fbc:	0691      	lsls	r1, r2, #26
 8006fbe:	d501      	bpl.n	8006fc4 <HAL_UART_IRQHandler+0x18>
 8006fc0:	06ae      	lsls	r6, r5, #26
 8006fc2:	d46c      	bmi.n	800709e <HAL_UART_IRQHandler+0xf2>
 8006fc4:	0610      	lsls	r0, r2, #24
 8006fc6:	d501      	bpl.n	8006fcc <HAL_UART_IRQHandler+0x20>
 8006fc8:	0629      	lsls	r1, r5, #24
 8006fca:	d441      	bmi.n	8007050 <HAL_UART_IRQHandler+0xa4>
 8006fcc:	0656      	lsls	r6, r2, #25
 8006fce:	d501      	bpl.n	8006fd4 <HAL_UART_IRQHandler+0x28>
 8006fd0:	0668      	lsls	r0, r5, #25
 8006fd2:	d459      	bmi.n	8007088 <HAL_UART_IRQHandler+0xdc>
 8006fd4:	bd70      	pop	{r4, r5, r6, pc}
 8006fd6:	f011 0101 	ands.w	r1, r1, #1
 8006fda:	d124      	bne.n	8007026 <HAL_UART_IRQHandler+0x7a>
 8006fdc:	f415 7f90 	tst.w	r5, #288	@ 0x120
 8006fe0:	d0f0      	beq.n	8006fc4 <HAL_UART_IRQHandler+0x18>
 8006fe2:	07d0      	lsls	r0, r2, #31
 8006fe4:	d509      	bpl.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 8006fe6:	05ee      	lsls	r6, r5, #23
 8006fe8:	f140 8095 	bpl.w	8007116 <HAL_UART_IRQHandler+0x16a>
 8006fec:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8006fee:	0756      	lsls	r6, r2, #29
 8006ff0:	f040 0001 	orr.w	r0, r0, #1
 8006ff4:	63e0      	str	r0, [r4, #60]	@ 0x3c
 8006ff6:	d55f      	bpl.n	80070b8 <HAL_UART_IRQHandler+0x10c>
 8006ff8:	b9c9      	cbnz	r1, 800702e <HAL_UART_IRQHandler+0x82>
 8006ffa:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8006ffc:	2900      	cmp	r1, #0
 8006ffe:	d0e9      	beq.n	8006fd4 <HAL_UART_IRQHandler+0x28>
 8007000:	0692      	lsls	r2, r2, #26
 8007002:	d502      	bpl.n	800700a <HAL_UART_IRQHandler+0x5e>
 8007004:	06ae      	lsls	r6, r5, #26
 8007006:	f100 808a 	bmi.w	800711e <HAL_UART_IRQHandler+0x172>
 800700a:	695a      	ldr	r2, [r3, #20]
 800700c:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 800700e:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8007012:	f001 0108 	and.w	r1, r1, #8
 8007016:	ea52 0501 	orrs.w	r5, r2, r1
 800701a:	d154      	bne.n	80070c6 <HAL_UART_IRQHandler+0x11a>
 800701c:	4620      	mov	r0, r4
 800701e:	f7ff ff8f 	bl	8006f40 <HAL_UART_ErrorCallback>
 8007022:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8007024:	bd70      	pop	{r4, r5, r6, pc}
 8007026:	07d0      	lsls	r0, r2, #31
 8007028:	d442      	bmi.n	80070b0 <HAL_UART_IRQHandler+0x104>
 800702a:	0751      	lsls	r1, r2, #29
 800702c:	d53b      	bpl.n	80070a6 <HAL_UART_IRQHandler+0xfa>
 800702e:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8007030:	0796      	lsls	r6, r2, #30
 8007032:	f041 0102 	orr.w	r1, r1, #2
 8007036:	63e1      	str	r1, [r4, #60]	@ 0x3c
 8007038:	d537      	bpl.n	80070aa <HAL_UART_IRQHandler+0xfe>
 800703a:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 800703c:	0710      	lsls	r0, r2, #28
 800703e:	f041 0104 	orr.w	r1, r1, #4
 8007042:	63e1      	str	r1, [r4, #60]	@ 0x3c
 8007044:	d5d9      	bpl.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 8007046:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
 8007048:	f041 0108 	orr.w	r1, r1, #8
 800704c:	63e1      	str	r1, [r4, #60]	@ 0x3c
 800704e:	e7d4      	b.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 8007050:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8007054:	2a21      	cmp	r2, #33	@ 0x21
 8007056:	d1bd      	bne.n	8006fd4 <HAL_UART_IRQHandler+0x28>
 8007058:	68a1      	ldr	r1, [r4, #8]
 800705a:	6a22      	ldr	r2, [r4, #32]
 800705c:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
 8007060:	d062      	beq.n	8007128 <HAL_UART_IRQHandler+0x17c>
 8007062:	1c51      	adds	r1, r2, #1
 8007064:	6221      	str	r1, [r4, #32]
 8007066:	7812      	ldrb	r2, [r2, #0]
 8007068:	605a      	str	r2, [r3, #4]
 800706a:	8ce2      	ldrh	r2, [r4, #38]	@ 0x26
 800706c:	3a01      	subs	r2, #1
 800706e:	b292      	uxth	r2, r2
 8007070:	84e2      	strh	r2, [r4, #38]	@ 0x26
 8007072:	2a00      	cmp	r2, #0
 8007074:	d1ae      	bne.n	8006fd4 <HAL_UART_IRQHandler+0x28>
 8007076:	68da      	ldr	r2, [r3, #12]
 8007078:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800707c:	60da      	str	r2, [r3, #12]
 800707e:	68da      	ldr	r2, [r3, #12]
 8007080:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007084:	60da      	str	r2, [r3, #12]
 8007086:	bd70      	pop	{r4, r5, r6, pc}
 8007088:	68da      	ldr	r2, [r3, #12]
 800708a:	2120      	movs	r1, #32
 800708c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007090:	60da      	str	r2, [r3, #12]
 8007092:	4620      	mov	r0, r4
 8007094:	f884 1039 	strb.w	r1, [r4, #57]	@ 0x39
 8007098:	f01a f940 	bl	802131c <HAL_UART_TxCpltCallback>
 800709c:	bd70      	pop	{r4, r5, r6, pc}
 800709e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80070a2:	f7ff bf09 	b.w	8006eb8 <UART_Receive_IT.isra.0>
 80070a6:	0791      	lsls	r1, r2, #30
 80070a8:	d4c7      	bmi.n	800703a <HAL_UART_IRQHandler+0x8e>
 80070aa:	0711      	lsls	r1, r2, #28
 80070ac:	d5a5      	bpl.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 80070ae:	e7ca      	b.n	8007046 <HAL_UART_IRQHandler+0x9a>
 80070b0:	05ee      	lsls	r6, r5, #23
 80070b2:	d49b      	bmi.n	8006fec <HAL_UART_IRQHandler+0x40>
 80070b4:	0750      	lsls	r0, r2, #29
 80070b6:	d4ba      	bmi.n	800702e <HAL_UART_IRQHandler+0x82>
 80070b8:	0796      	lsls	r6, r2, #30
 80070ba:	d428      	bmi.n	800710e <HAL_UART_IRQHandler+0x162>
 80070bc:	0710      	lsls	r0, r2, #28
 80070be:	d59c      	bpl.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 80070c0:	2900      	cmp	r1, #0
 80070c2:	d09a      	beq.n	8006ffa <HAL_UART_IRQHandler+0x4e>
 80070c4:	e7bf      	b.n	8007046 <HAL_UART_IRQHandler+0x9a>
 80070c6:	68da      	ldr	r2, [r3, #12]
 80070c8:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 80070cc:	60da      	str	r2, [r3, #12]
 80070ce:	695a      	ldr	r2, [r3, #20]
 80070d0:	2120      	movs	r1, #32
 80070d2:	f022 0201 	bic.w	r2, r2, #1
 80070d6:	615a      	str	r2, [r3, #20]
 80070d8:	f884 103a 	strb.w	r1, [r4, #58]	@ 0x3a
 80070dc:	695a      	ldr	r2, [r3, #20]
 80070de:	0655      	lsls	r5, r2, #25
 80070e0:	d511      	bpl.n	8007106 <HAL_UART_IRQHandler+0x15a>
 80070e2:	695a      	ldr	r2, [r3, #20]
 80070e4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80070e6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80070ea:	615a      	str	r2, [r3, #20]
 80070ec:	b158      	cbz	r0, 8007106 <HAL_UART_IRQHandler+0x15a>
 80070ee:	4b14      	ldr	r3, [pc, #80]	@ (8007140 <HAL_UART_IRQHandler+0x194>)
 80070f0:	6503      	str	r3, [r0, #80]	@ 0x50
 80070f2:	f7fd fac9 	bl	8004688 <HAL_DMA_Abort_IT>
 80070f6:	2800      	cmp	r0, #0
 80070f8:	f43f af6c 	beq.w	8006fd4 <HAL_UART_IRQHandler+0x28>
 80070fc:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80070fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007102:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8007104:	4718      	bx	r3
 8007106:	4620      	mov	r0, r4
 8007108:	f7ff ff1a 	bl	8006f40 <HAL_UART_ErrorCallback>
 800710c:	bd70      	pop	{r4, r5, r6, pc}
 800710e:	2900      	cmp	r1, #0
 8007110:	f43f af73 	beq.w	8006ffa <HAL_UART_IRQHandler+0x4e>
 8007114:	e791      	b.n	800703a <HAL_UART_IRQHandler+0x8e>
 8007116:	0750      	lsls	r0, r2, #29
 8007118:	f53f af6f 	bmi.w	8006ffa <HAL_UART_IRQHandler+0x4e>
 800711c:	e7cc      	b.n	80070b8 <HAL_UART_IRQHandler+0x10c>
 800711e:	4620      	mov	r0, r4
 8007120:	f7ff feca 	bl	8006eb8 <UART_Receive_IT.isra.0>
 8007124:	6823      	ldr	r3, [r4, #0]
 8007126:	e770      	b.n	800700a <HAL_UART_IRQHandler+0x5e>
 8007128:	8811      	ldrh	r1, [r2, #0]
 800712a:	6920      	ldr	r0, [r4, #16]
 800712c:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8007130:	6059      	str	r1, [r3, #4]
 8007132:	b910      	cbnz	r0, 800713a <HAL_UART_IRQHandler+0x18e>
 8007134:	3202      	adds	r2, #2
 8007136:	6222      	str	r2, [r4, #32]
 8007138:	e797      	b.n	800706a <HAL_UART_IRQHandler+0xbe>
 800713a:	3201      	adds	r2, #1
 800713c:	6222      	str	r2, [r4, #32]
 800713e:	e794      	b.n	800706a <HAL_UART_IRQHandler+0xbe>
 8007140:	08007145 	.word	0x08007145

08007144 <UART_DMAAbortOnError>:
 8007144:	b508      	push	{r3, lr}
 8007146:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8007148:	2300      	movs	r3, #0
 800714a:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800714c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800714e:	f7ff fef7 	bl	8006f40 <HAL_UART_ErrorCallback>
 8007152:	bd08      	pop	{r3, pc}

08007154 <FLASH_SetErrorCode>:
 8007154:	4b1b      	ldr	r3, [pc, #108]	@ (80071c4 <FLASH_SetErrorCode+0x70>)
 8007156:	68da      	ldr	r2, [r3, #12]
 8007158:	06d1      	lsls	r1, r2, #27
 800715a:	d505      	bpl.n	8007168 <FLASH_SetErrorCode+0x14>
 800715c:	491a      	ldr	r1, [pc, #104]	@ (80071c8 <FLASH_SetErrorCode+0x74>)
 800715e:	69ca      	ldr	r2, [r1, #28]
 8007160:	2010      	movs	r0, #16
 8007162:	4302      	orrs	r2, r0
 8007164:	61ca      	str	r2, [r1, #28]
 8007166:	60d8      	str	r0, [r3, #12]
 8007168:	4b16      	ldr	r3, [pc, #88]	@ (80071c4 <FLASH_SetErrorCode+0x70>)
 800716a:	68da      	ldr	r2, [r3, #12]
 800716c:	0692      	lsls	r2, r2, #26
 800716e:	d506      	bpl.n	800717e <FLASH_SetErrorCode+0x2a>
 8007170:	4915      	ldr	r1, [pc, #84]	@ (80071c8 <FLASH_SetErrorCode+0x74>)
 8007172:	69ca      	ldr	r2, [r1, #28]
 8007174:	2020      	movs	r0, #32
 8007176:	f042 0208 	orr.w	r2, r2, #8
 800717a:	61ca      	str	r2, [r1, #28]
 800717c:	60d8      	str	r0, [r3, #12]
 800717e:	4b11      	ldr	r3, [pc, #68]	@ (80071c4 <FLASH_SetErrorCode+0x70>)
 8007180:	68da      	ldr	r2, [r3, #12]
 8007182:	0650      	lsls	r0, r2, #25
 8007184:	d506      	bpl.n	8007194 <FLASH_SetErrorCode+0x40>
 8007186:	4910      	ldr	r1, [pc, #64]	@ (80071c8 <FLASH_SetErrorCode+0x74>)
 8007188:	69ca      	ldr	r2, [r1, #28]
 800718a:	2040      	movs	r0, #64	@ 0x40
 800718c:	f042 0204 	orr.w	r2, r2, #4
 8007190:	61ca      	str	r2, [r1, #28]
 8007192:	60d8      	str	r0, [r3, #12]
 8007194:	4b0b      	ldr	r3, [pc, #44]	@ (80071c4 <FLASH_SetErrorCode+0x70>)
 8007196:	68da      	ldr	r2, [r3, #12]
 8007198:	0611      	lsls	r1, r2, #24
 800719a:	d506      	bpl.n	80071aa <FLASH_SetErrorCode+0x56>
 800719c:	490a      	ldr	r1, [pc, #40]	@ (80071c8 <FLASH_SetErrorCode+0x74>)
 800719e:	69ca      	ldr	r2, [r1, #28]
 80071a0:	2080      	movs	r0, #128	@ 0x80
 80071a2:	f042 0202 	orr.w	r2, r2, #2
 80071a6:	61ca      	str	r2, [r1, #28]
 80071a8:	60d8      	str	r0, [r3, #12]
 80071aa:	4b06      	ldr	r3, [pc, #24]	@ (80071c4 <FLASH_SetErrorCode+0x70>)
 80071ac:	68da      	ldr	r2, [r3, #12]
 80071ae:	0792      	lsls	r2, r2, #30
 80071b0:	d506      	bpl.n	80071c0 <FLASH_SetErrorCode+0x6c>
 80071b2:	4905      	ldr	r1, [pc, #20]	@ (80071c8 <FLASH_SetErrorCode+0x74>)
 80071b4:	69ca      	ldr	r2, [r1, #28]
 80071b6:	2002      	movs	r0, #2
 80071b8:	f042 0220 	orr.w	r2, r2, #32
 80071bc:	61ca      	str	r2, [r1, #28]
 80071be:	60d8      	str	r0, [r3, #12]
 80071c0:	4770      	bx	lr
 80071c2:	bf00      	nop
 80071c4:	40023c00 	.word	0x40023c00
 80071c8:	200014c4 	.word	0x200014c4

080071cc <HAL_FLASH_Unlock>:
 80071cc:	4b06      	ldr	r3, [pc, #24]	@ (80071e8 <HAL_FLASH_Unlock+0x1c>)
 80071ce:	691a      	ldr	r2, [r3, #16]
 80071d0:	2a00      	cmp	r2, #0
 80071d2:	db01      	blt.n	80071d8 <HAL_FLASH_Unlock+0xc>
 80071d4:	2000      	movs	r0, #0
 80071d6:	4770      	bx	lr
 80071d8:	4904      	ldr	r1, [pc, #16]	@ (80071ec <HAL_FLASH_Unlock+0x20>)
 80071da:	4a05      	ldr	r2, [pc, #20]	@ (80071f0 <HAL_FLASH_Unlock+0x24>)
 80071dc:	6059      	str	r1, [r3, #4]
 80071de:	605a      	str	r2, [r3, #4]
 80071e0:	6918      	ldr	r0, [r3, #16]
 80071e2:	0fc0      	lsrs	r0, r0, #31
 80071e4:	4770      	bx	lr
 80071e6:	bf00      	nop
 80071e8:	40023c00 	.word	0x40023c00
 80071ec:	45670123 	.word	0x45670123
 80071f0:	cdef89ab 	.word	0xcdef89ab

080071f4 <HAL_FLASH_Lock>:
 80071f4:	4a03      	ldr	r2, [pc, #12]	@ (8007204 <HAL_FLASH_Lock+0x10>)
 80071f6:	6913      	ldr	r3, [r2, #16]
 80071f8:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80071fc:	2000      	movs	r0, #0
 80071fe:	6113      	str	r3, [r2, #16]
 8007200:	4770      	bx	lr
 8007202:	bf00      	nop
 8007204:	40023c00 	.word	0x40023c00

08007208 <HAL_FLASH_GetError>:
 8007208:	4b01      	ldr	r3, [pc, #4]	@ (8007210 <HAL_FLASH_GetError+0x8>)
 800720a:	69d8      	ldr	r0, [r3, #28]
 800720c:	4770      	bx	lr
 800720e:	bf00      	nop
 8007210:	200014c4 	.word	0x200014c4

08007214 <FLASH_WaitForLastOperation>:
 8007214:	b570      	push	{r4, r5, r6, lr}
 8007216:	4b17      	ldr	r3, [pc, #92]	@ (8007274 <FLASH_WaitForLastOperation+0x60>)
 8007218:	4c17      	ldr	r4, [pc, #92]	@ (8007278 <FLASH_WaitForLastOperation+0x64>)
 800721a:	2200      	movs	r2, #0
 800721c:	61da      	str	r2, [r3, #28]
 800721e:	4605      	mov	r5, r0
 8007220:	f7fe fddc 	bl	8005ddc <HAL_GetTick>
 8007224:	68e3      	ldr	r3, [r4, #12]
 8007226:	03de      	lsls	r6, r3, #15
 8007228:	d50b      	bpl.n	8007242 <FLASH_WaitForLastOperation+0x2e>
 800722a:	1c69      	adds	r1, r5, #1
 800722c:	d015      	beq.n	800725a <FLASH_WaitForLastOperation+0x46>
 800722e:	4606      	mov	r6, r0
 8007230:	b1f5      	cbz	r5, 8007270 <FLASH_WaitForLastOperation+0x5c>
 8007232:	f7fe fdd3 	bl	8005ddc <HAL_GetTick>
 8007236:	1b80      	subs	r0, r0, r6
 8007238:	42a8      	cmp	r0, r5
 800723a:	d819      	bhi.n	8007270 <FLASH_WaitForLastOperation+0x5c>
 800723c:	68e3      	ldr	r3, [r4, #12]
 800723e:	03d8      	lsls	r0, r3, #15
 8007240:	d4f7      	bmi.n	8007232 <FLASH_WaitForLastOperation+0x1e>
 8007242:	4b0d      	ldr	r3, [pc, #52]	@ (8007278 <FLASH_WaitForLastOperation+0x64>)
 8007244:	68da      	ldr	r2, [r3, #12]
 8007246:	07d2      	lsls	r2, r2, #31
 8007248:	bf44      	itt	mi
 800724a:	2201      	movmi	r2, #1
 800724c:	60da      	strmi	r2, [r3, #12]
 800724e:	4b0a      	ldr	r3, [pc, #40]	@ (8007278 <FLASH_WaitForLastOperation+0x64>)
 8007250:	68d8      	ldr	r0, [r3, #12]
 8007252:	f010 00f2 	ands.w	r0, r0, #242	@ 0xf2
 8007256:	d107      	bne.n	8007268 <FLASH_WaitForLastOperation+0x54>
 8007258:	bd70      	pop	{r4, r5, r6, pc}
 800725a:	68e3      	ldr	r3, [r4, #12]
 800725c:	03dd      	lsls	r5, r3, #15
 800725e:	d5f0      	bpl.n	8007242 <FLASH_WaitForLastOperation+0x2e>
 8007260:	68e3      	ldr	r3, [r4, #12]
 8007262:	03dd      	lsls	r5, r3, #15
 8007264:	d4f9      	bmi.n	800725a <FLASH_WaitForLastOperation+0x46>
 8007266:	e7ec      	b.n	8007242 <FLASH_WaitForLastOperation+0x2e>
 8007268:	f7ff ff74 	bl	8007154 <FLASH_SetErrorCode>
 800726c:	2001      	movs	r0, #1
 800726e:	bd70      	pop	{r4, r5, r6, pc}
 8007270:	2003      	movs	r0, #3
 8007272:	bd70      	pop	{r4, r5, r6, pc}
 8007274:	200014c4 	.word	0x200014c4
 8007278:	40023c00 	.word	0x40023c00

0800727c <HAL_FLASH_Program>:
 800727c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007280:	4d2f      	ldr	r5, [pc, #188]	@ (8007340 <HAL_FLASH_Program+0xc4>)
 8007282:	f895 c018 	ldrb.w	ip, [r5, #24]
 8007286:	f1bc 0f01 	cmp.w	ip, #1
 800728a:	d030      	beq.n	80072ee <HAL_FLASH_Program+0x72>
 800728c:	4680      	mov	r8, r0
 800728e:	461c      	mov	r4, r3
 8007290:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8007294:	2301      	movs	r3, #1
 8007296:	460e      	mov	r6, r1
 8007298:	4617      	mov	r7, r2
 800729a:	762b      	strb	r3, [r5, #24]
 800729c:	f7ff ffba 	bl	8007214 <FLASH_WaitForLastOperation>
 80072a0:	b118      	cbz	r0, 80072aa <HAL_FLASH_Program+0x2e>
 80072a2:	2300      	movs	r3, #0
 80072a4:	762b      	strb	r3, [r5, #24]
 80072a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072aa:	4b26      	ldr	r3, [pc, #152]	@ (8007344 <HAL_FLASH_Program+0xc8>)
 80072ac:	f1b8 0f00 	cmp.w	r8, #0
 80072b0:	d020      	beq.n	80072f4 <HAL_FLASH_Program+0x78>
 80072b2:	f1b8 0f01 	cmp.w	r8, #1
 80072b6:	d033      	beq.n	8007320 <HAL_FLASH_Program+0xa4>
 80072b8:	691a      	ldr	r2, [r3, #16]
 80072ba:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80072be:	611a      	str	r2, [r3, #16]
 80072c0:	f1b8 0f02 	cmp.w	r8, #2
 80072c4:	691a      	ldr	r2, [r3, #16]
 80072c6:	d022      	beq.n	800730e <HAL_FLASH_Program+0x92>
 80072c8:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 80072cc:	611a      	str	r2, [r3, #16]
 80072ce:	691a      	ldr	r2, [r3, #16]
 80072d0:	f042 0201 	orr.w	r2, r2, #1
 80072d4:	611a      	str	r2, [r3, #16]
 80072d6:	6037      	str	r7, [r6, #0]
 80072d8:	6074      	str	r4, [r6, #4]
 80072da:	f24c 3050 	movw	r0, #50000	@ 0xc350
 80072de:	f7ff ff99 	bl	8007214 <FLASH_WaitForLastOperation>
 80072e2:	4a18      	ldr	r2, [pc, #96]	@ (8007344 <HAL_FLASH_Program+0xc8>)
 80072e4:	6913      	ldr	r3, [r2, #16]
 80072e6:	f023 0301 	bic.w	r3, r3, #1
 80072ea:	6113      	str	r3, [r2, #16]
 80072ec:	e7d9      	b.n	80072a2 <HAL_FLASH_Program+0x26>
 80072ee:	2002      	movs	r0, #2
 80072f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072f4:	6919      	ldr	r1, [r3, #16]
 80072f6:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
 80072fa:	6119      	str	r1, [r3, #16]
 80072fc:	6919      	ldr	r1, [r3, #16]
 80072fe:	6119      	str	r1, [r3, #16]
 8007300:	6919      	ldr	r1, [r3, #16]
 8007302:	b2fa      	uxtb	r2, r7
 8007304:	f041 0101 	orr.w	r1, r1, #1
 8007308:	6119      	str	r1, [r3, #16]
 800730a:	7032      	strb	r2, [r6, #0]
 800730c:	e7e5      	b.n	80072da <HAL_FLASH_Program+0x5e>
 800730e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8007312:	611a      	str	r2, [r3, #16]
 8007314:	691a      	ldr	r2, [r3, #16]
 8007316:	f042 0201 	orr.w	r2, r2, #1
 800731a:	611a      	str	r2, [r3, #16]
 800731c:	6037      	str	r7, [r6, #0]
 800731e:	e7dc      	b.n	80072da <HAL_FLASH_Program+0x5e>
 8007320:	6919      	ldr	r1, [r3, #16]
 8007322:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
 8007326:	6119      	str	r1, [r3, #16]
 8007328:	6919      	ldr	r1, [r3, #16]
 800732a:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 800732e:	6119      	str	r1, [r3, #16]
 8007330:	6919      	ldr	r1, [r3, #16]
 8007332:	b2ba      	uxth	r2, r7
 8007334:	f041 0101 	orr.w	r1, r1, #1
 8007338:	6119      	str	r1, [r3, #16]
 800733a:	8032      	strh	r2, [r6, #0]
 800733c:	e7cd      	b.n	80072da <HAL_FLASH_Program+0x5e>
 800733e:	bf00      	nop
 8007340:	200014c4 	.word	0x200014c4
 8007344:	40023c00 	.word	0x40023c00

08007348 <prvCopyDataToQueue>:
 8007348:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800734a:	b570      	push	{r4, r5, r6, lr}
 800734c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 800734e:	4604      	mov	r4, r0
 8007350:	b92b      	cbnz	r3, 800735e <prvCopyDataToQueue+0x16>
 8007352:	6806      	ldr	r6, [r0, #0]
 8007354:	3501      	adds	r5, #1
 8007356:	b346      	cbz	r6, 80073aa <prvCopyDataToQueue+0x62>
 8007358:	4618      	mov	r0, r3
 800735a:	63a5      	str	r5, [r4, #56]	@ 0x38
 800735c:	bd70      	pop	{r4, r5, r6, pc}
 800735e:	4616      	mov	r6, r2
 8007360:	b982      	cbnz	r2, 8007384 <prvCopyDataToQueue+0x3c>
 8007362:	461a      	mov	r2, r3
 8007364:	6880      	ldr	r0, [r0, #8]
 8007366:	f01d fa90 	bl	802488a <memcpy>
 800736a:	68a3      	ldr	r3, [r4, #8]
 800736c:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800736e:	6862      	ldr	r2, [r4, #4]
 8007370:	440b      	add	r3, r1
 8007372:	4293      	cmp	r3, r2
 8007374:	60a3      	str	r3, [r4, #8]
 8007376:	bf24      	itt	cs
 8007378:	6823      	ldrcs	r3, [r4, #0]
 800737a:	60a3      	strcs	r3, [r4, #8]
 800737c:	3501      	adds	r5, #1
 800737e:	2000      	movs	r0, #0
 8007380:	63a5      	str	r5, [r4, #56]	@ 0x38
 8007382:	bd70      	pop	{r4, r5, r6, pc}
 8007384:	461a      	mov	r2, r3
 8007386:	68c0      	ldr	r0, [r0, #12]
 8007388:	f01d fa7f 	bl	802488a <memcpy>
 800738c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800738e:	68e3      	ldr	r3, [r4, #12]
 8007390:	4251      	negs	r1, r2
 8007392:	1a9b      	subs	r3, r3, r2
 8007394:	6822      	ldr	r2, [r4, #0]
 8007396:	60e3      	str	r3, [r4, #12]
 8007398:	4293      	cmp	r3, r2
 800739a:	d202      	bcs.n	80073a2 <prvCopyDataToQueue+0x5a>
 800739c:	6863      	ldr	r3, [r4, #4]
 800739e:	440b      	add	r3, r1
 80073a0:	60e3      	str	r3, [r4, #12]
 80073a2:	2e02      	cmp	r6, #2
 80073a4:	d006      	beq.n	80073b4 <prvCopyDataToQueue+0x6c>
 80073a6:	3501      	adds	r5, #1
 80073a8:	e7e9      	b.n	800737e <prvCopyDataToQueue+0x36>
 80073aa:	6840      	ldr	r0, [r0, #4]
 80073ac:	f001 fd76 	bl	8008e9c <xTaskPriorityDisinherit>
 80073b0:	6066      	str	r6, [r4, #4]
 80073b2:	e7d2      	b.n	800735a <prvCopyDataToQueue+0x12>
 80073b4:	2d01      	cmp	r5, #1
 80073b6:	bf38      	it	cc
 80073b8:	2501      	movcc	r5, #1
 80073ba:	2000      	movs	r0, #0
 80073bc:	e7cd      	b.n	800735a <prvCopyDataToQueue+0x12>
 80073be:	bf00      	nop

080073c0 <prvUnlockQueue>:
 80073c0:	b570      	push	{r4, r5, r6, lr}
 80073c2:	4605      	mov	r5, r0
 80073c4:	f7fc fcc6 	bl	8003d54 <vPortEnterCritical>
 80073c8:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
 80073cc:	b25c      	sxtb	r4, r3
 80073ce:	2c00      	cmp	r4, #0
 80073d0:	dd14      	ble.n	80073fc <prvUnlockQueue+0x3c>
 80073d2:	f105 0624 	add.w	r6, r5, #36	@ 0x24
 80073d6:	e003      	b.n	80073e0 <prvUnlockQueue+0x20>
 80073d8:	1e63      	subs	r3, r4, #1
 80073da:	b2da      	uxtb	r2, r3
 80073dc:	b25c      	sxtb	r4, r3
 80073de:	b16a      	cbz	r2, 80073fc <prvUnlockQueue+0x3c>
 80073e0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 80073e2:	4630      	mov	r0, r6
 80073e4:	b153      	cbz	r3, 80073fc <prvUnlockQueue+0x3c>
 80073e6:	f001 fc41 	bl	8008c6c <xTaskRemoveFromEventList>
 80073ea:	2800      	cmp	r0, #0
 80073ec:	d0f4      	beq.n	80073d8 <prvUnlockQueue+0x18>
 80073ee:	f001 fcd9 	bl	8008da4 <vTaskMissedYield>
 80073f2:	1e63      	subs	r3, r4, #1
 80073f4:	b2da      	uxtb	r2, r3
 80073f6:	b25c      	sxtb	r4, r3
 80073f8:	2a00      	cmp	r2, #0
 80073fa:	d1f1      	bne.n	80073e0 <prvUnlockQueue+0x20>
 80073fc:	23ff      	movs	r3, #255	@ 0xff
 80073fe:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
 8007402:	f7fc fcc9 	bl	8003d98 <vPortExitCritical>
 8007406:	f7fc fca5 	bl	8003d54 <vPortEnterCritical>
 800740a:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
 800740e:	b25c      	sxtb	r4, r3
 8007410:	2c00      	cmp	r4, #0
 8007412:	dd14      	ble.n	800743e <prvUnlockQueue+0x7e>
 8007414:	f105 0610 	add.w	r6, r5, #16
 8007418:	e003      	b.n	8007422 <prvUnlockQueue+0x62>
 800741a:	1e63      	subs	r3, r4, #1
 800741c:	b2da      	uxtb	r2, r3
 800741e:	b25c      	sxtb	r4, r3
 8007420:	b16a      	cbz	r2, 800743e <prvUnlockQueue+0x7e>
 8007422:	692b      	ldr	r3, [r5, #16]
 8007424:	4630      	mov	r0, r6
 8007426:	b153      	cbz	r3, 800743e <prvUnlockQueue+0x7e>
 8007428:	f001 fc20 	bl	8008c6c <xTaskRemoveFromEventList>
 800742c:	2800      	cmp	r0, #0
 800742e:	d0f4      	beq.n	800741a <prvUnlockQueue+0x5a>
 8007430:	f001 fcb8 	bl	8008da4 <vTaskMissedYield>
 8007434:	1e63      	subs	r3, r4, #1
 8007436:	b2da      	uxtb	r2, r3
 8007438:	b25c      	sxtb	r4, r3
 800743a:	2a00      	cmp	r2, #0
 800743c:	d1f1      	bne.n	8007422 <prvUnlockQueue+0x62>
 800743e:	23ff      	movs	r3, #255	@ 0xff
 8007440:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
 8007444:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007448:	f7fc bca6 	b.w	8003d98 <vPortExitCritical>

0800744c <xQueueGenericReset>:
 800744c:	b538      	push	{r3, r4, r5, lr}
 800744e:	b1e0      	cbz	r0, 800748a <xQueueGenericReset+0x3e>
 8007450:	4604      	mov	r4, r0
 8007452:	460d      	mov	r5, r1
 8007454:	f7fc fc7e 	bl	8003d54 <vPortEnterCritical>
 8007458:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	@ 0x3c
 800745c:	6821      	ldr	r1, [r4, #0]
 800745e:	fb03 f202 	mul.w	r2, r3, r2
 8007462:	1ad3      	subs	r3, r2, r3
 8007464:	440a      	add	r2, r1
 8007466:	6062      	str	r2, [r4, #4]
 8007468:	2200      	movs	r2, #0
 800746a:	63a2      	str	r2, [r4, #56]	@ 0x38
 800746c:	440b      	add	r3, r1
 800746e:	22ff      	movs	r2, #255	@ 0xff
 8007470:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
 8007474:	e9c4 1302 	strd	r1, r3, [r4, #8]
 8007478:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
 800747c:	b975      	cbnz	r5, 800749c <xQueueGenericReset+0x50>
 800747e:	6923      	ldr	r3, [r4, #16]
 8007480:	b9c3      	cbnz	r3, 80074b4 <xQueueGenericReset+0x68>
 8007482:	f7fc fc89 	bl	8003d98 <vPortExitCritical>
 8007486:	2001      	movs	r0, #1
 8007488:	bd38      	pop	{r3, r4, r5, pc}
 800748a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800748e:	f383 8811 	msr	BASEPRI, r3
 8007492:	f3bf 8f6f 	isb	sy
 8007496:	f3bf 8f4f 	dsb	sy
 800749a:	e7fe      	b.n	800749a <xQueueGenericReset+0x4e>
 800749c:	f104 0010 	add.w	r0, r4, #16
 80074a0:	f7fe fbe2 	bl	8005c68 <vListInitialise>
 80074a4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80074a8:	f7fe fbde 	bl	8005c68 <vListInitialise>
 80074ac:	f7fc fc74 	bl	8003d98 <vPortExitCritical>
 80074b0:	2001      	movs	r0, #1
 80074b2:	bd38      	pop	{r3, r4, r5, pc}
 80074b4:	f104 0010 	add.w	r0, r4, #16
 80074b8:	f001 fbd8 	bl	8008c6c <xTaskRemoveFromEventList>
 80074bc:	2800      	cmp	r0, #0
 80074be:	d0e0      	beq.n	8007482 <xQueueGenericReset+0x36>
 80074c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80074c4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80074c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80074cc:	f3bf 8f4f 	dsb	sy
 80074d0:	f3bf 8f6f 	isb	sy
 80074d4:	e7d5      	b.n	8007482 <xQueueGenericReset+0x36>
 80074d6:	bf00      	nop

080074d8 <xQueueGenericCreate>:
 80074d8:	b940      	cbnz	r0, 80074ec <xQueueGenericCreate+0x14>
 80074da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80074de:	f383 8811 	msr	BASEPRI, r3
 80074e2:	f3bf 8f6f 	isb	sy
 80074e6:	f3bf 8f4f 	dsb	sy
 80074ea:	e7fe      	b.n	80074ea <xQueueGenericCreate+0x12>
 80074ec:	b570      	push	{r4, r5, r6, lr}
 80074ee:	460e      	mov	r6, r1
 80074f0:	4604      	mov	r4, r0
 80074f2:	b969      	cbnz	r1, 8007510 <xQueueGenericCreate+0x38>
 80074f4:	2048      	movs	r0, #72	@ 0x48
 80074f6:	f7fd f9df 	bl	80048b8 <pvPortMalloc>
 80074fa:	4605      	mov	r5, r0
 80074fc:	b198      	cbz	r0, 8007526 <xQueueGenericCreate+0x4e>
 80074fe:	6000      	str	r0, [r0, #0]
 8007500:	e9c5 460f 	strd	r4, r6, [r5, #60]	@ 0x3c
 8007504:	2101      	movs	r1, #1
 8007506:	4628      	mov	r0, r5
 8007508:	f7ff ffa0 	bl	800744c <xQueueGenericReset>
 800750c:	4628      	mov	r0, r5
 800750e:	bd70      	pop	{r4, r5, r6, pc}
 8007510:	fb01 f000 	mul.w	r0, r1, r0
 8007514:	3048      	adds	r0, #72	@ 0x48
 8007516:	f7fd f9cf 	bl	80048b8 <pvPortMalloc>
 800751a:	4605      	mov	r5, r0
 800751c:	b118      	cbz	r0, 8007526 <xQueueGenericCreate+0x4e>
 800751e:	f100 0348 	add.w	r3, r0, #72	@ 0x48
 8007522:	6003      	str	r3, [r0, #0]
 8007524:	e7ec      	b.n	8007500 <xQueueGenericCreate+0x28>
 8007526:	2500      	movs	r5, #0
 8007528:	4628      	mov	r0, r5
 800752a:	bd70      	pop	{r4, r5, r6, pc}

0800752c <xQueueGenericSend>:
 800752c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800752e:	b085      	sub	sp, #20
 8007530:	9201      	str	r2, [sp, #4]
 8007532:	2800      	cmp	r0, #0
 8007534:	d07e      	beq.n	8007634 <xQueueGenericSend+0x108>
 8007536:	460e      	mov	r6, r1
 8007538:	461d      	mov	r5, r3
 800753a:	4604      	mov	r4, r0
 800753c:	2900      	cmp	r1, #0
 800753e:	d069      	beq.n	8007614 <xQueueGenericSend+0xe8>
 8007540:	2d02      	cmp	r5, #2
 8007542:	d10b      	bne.n	800755c <xQueueGenericSend+0x30>
 8007544:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007546:	2b01      	cmp	r3, #1
 8007548:	d008      	beq.n	800755c <xQueueGenericSend+0x30>
 800754a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800754e:	f383 8811 	msr	BASEPRI, r3
 8007552:	f3bf 8f6f 	isb	sy
 8007556:	f3bf 8f4f 	dsb	sy
 800755a:	e7fe      	b.n	800755a <xQueueGenericSend+0x2e>
 800755c:	f001 fc44 	bl	8008de8 <xTaskGetSchedulerState>
 8007560:	2800      	cmp	r0, #0
 8007562:	d070      	beq.n	8007646 <xQueueGenericSend+0x11a>
 8007564:	f7fc fbf6 	bl	8003d54 <vPortEnterCritical>
 8007568:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800756a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800756c:	429a      	cmp	r2, r3
 800756e:	d376      	bcc.n	800765e <xQueueGenericSend+0x132>
 8007570:	2d02      	cmp	r5, #2
 8007572:	d074      	beq.n	800765e <xQueueGenericSend+0x132>
 8007574:	2200      	movs	r2, #0
 8007576:	4617      	mov	r7, r2
 8007578:	e00e      	b.n	8007598 <xQueueGenericSend+0x6c>
 800757a:	f7fc fc0d 	bl	8003d98 <vPortExitCritical>
 800757e:	4620      	mov	r0, r4
 8007580:	f7ff ff1e 	bl	80073c0 <prvUnlockQueue>
 8007584:	f001 fa7e 	bl	8008a84 <xTaskResumeAll>
 8007588:	f7fc fbe4 	bl	8003d54 <vPortEnterCritical>
 800758c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800758e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007590:	4299      	cmp	r1, r3
 8007592:	f04f 0201 	mov.w	r2, #1
 8007596:	d362      	bcc.n	800765e <xQueueGenericSend+0x132>
 8007598:	9801      	ldr	r0, [sp, #4]
 800759a:	2800      	cmp	r0, #0
 800759c:	d076      	beq.n	800768c <xQueueGenericSend+0x160>
 800759e:	2a00      	cmp	r2, #0
 80075a0:	d044      	beq.n	800762c <xQueueGenericSend+0x100>
 80075a2:	f7fc fbf9 	bl	8003d98 <vPortExitCritical>
 80075a6:	f001 f917 	bl	80087d8 <vTaskSuspendAll>
 80075aa:	f7fc fbd3 	bl	8003d54 <vPortEnterCritical>
 80075ae:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80075b2:	2bff      	cmp	r3, #255	@ 0xff
 80075b4:	bf08      	it	eq
 80075b6:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80075ba:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
 80075be:	2aff      	cmp	r2, #255	@ 0xff
 80075c0:	bf08      	it	eq
 80075c2:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80075c6:	f7fc fbe7 	bl	8003d98 <vPortExitCritical>
 80075ca:	a901      	add	r1, sp, #4
 80075cc:	a802      	add	r0, sp, #8
 80075ce:	f001 fba7 	bl	8008d20 <xTaskCheckForTimeOut>
 80075d2:	2800      	cmp	r0, #0
 80075d4:	d15e      	bne.n	8007694 <xQueueGenericSend+0x168>
 80075d6:	f7fc fbbd 	bl	8003d54 <vPortEnterCritical>
 80075da:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80075dc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80075de:	429a      	cmp	r2, r3
 80075e0:	d1cb      	bne.n	800757a <xQueueGenericSend+0x4e>
 80075e2:	f7fc fbd9 	bl	8003d98 <vPortExitCritical>
 80075e6:	9901      	ldr	r1, [sp, #4]
 80075e8:	f104 0010 	add.w	r0, r4, #16
 80075ec:	f001 fb24 	bl	8008c38 <vTaskPlaceOnEventList>
 80075f0:	4620      	mov	r0, r4
 80075f2:	f7ff fee5 	bl	80073c0 <prvUnlockQueue>
 80075f6:	f001 fa45 	bl	8008a84 <xTaskResumeAll>
 80075fa:	2800      	cmp	r0, #0
 80075fc:	d1c4      	bne.n	8007588 <xQueueGenericSend+0x5c>
 80075fe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007602:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007606:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800760a:	f3bf 8f4f 	dsb	sy
 800760e:	f3bf 8f6f 	isb	sy
 8007612:	e7b9      	b.n	8007588 <xQueueGenericSend+0x5c>
 8007614:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007616:	2b00      	cmp	r3, #0
 8007618:	d092      	beq.n	8007540 <xQueueGenericSend+0x14>
 800761a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800761e:	f383 8811 	msr	BASEPRI, r3
 8007622:	f3bf 8f6f 	isb	sy
 8007626:	f3bf 8f4f 	dsb	sy
 800762a:	e7fe      	b.n	800762a <xQueueGenericSend+0xfe>
 800762c:	a802      	add	r0, sp, #8
 800762e:	f001 fb61 	bl	8008cf4 <vTaskSetTimeOutState>
 8007632:	e7b6      	b.n	80075a2 <xQueueGenericSend+0x76>
 8007634:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007638:	f383 8811 	msr	BASEPRI, r3
 800763c:	f3bf 8f6f 	isb	sy
 8007640:	f3bf 8f4f 	dsb	sy
 8007644:	e7fe      	b.n	8007644 <xQueueGenericSend+0x118>
 8007646:	9b01      	ldr	r3, [sp, #4]
 8007648:	2b00      	cmp	r3, #0
 800764a:	d08b      	beq.n	8007564 <xQueueGenericSend+0x38>
 800764c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007650:	f383 8811 	msr	BASEPRI, r3
 8007654:	f3bf 8f6f 	isb	sy
 8007658:	f3bf 8f4f 	dsb	sy
 800765c:	e7fe      	b.n	800765c <xQueueGenericSend+0x130>
 800765e:	462a      	mov	r2, r5
 8007660:	4631      	mov	r1, r6
 8007662:	4620      	mov	r0, r4
 8007664:	f7ff fe70 	bl	8007348 <prvCopyDataToQueue>
 8007668:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800766a:	b9cb      	cbnz	r3, 80076a0 <xQueueGenericSend+0x174>
 800766c:	b148      	cbz	r0, 8007682 <xQueueGenericSend+0x156>
 800766e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007672:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007676:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800767a:	f3bf 8f4f 	dsb	sy
 800767e:	f3bf 8f6f 	isb	sy
 8007682:	f7fc fb89 	bl	8003d98 <vPortExitCritical>
 8007686:	2001      	movs	r0, #1
 8007688:	b005      	add	sp, #20
 800768a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800768c:	f7fc fb84 	bl	8003d98 <vPortExitCritical>
 8007690:	2000      	movs	r0, #0
 8007692:	e7f9      	b.n	8007688 <xQueueGenericSend+0x15c>
 8007694:	4620      	mov	r0, r4
 8007696:	f7ff fe93 	bl	80073c0 <prvUnlockQueue>
 800769a:	f001 f9f3 	bl	8008a84 <xTaskResumeAll>
 800769e:	e7f7      	b.n	8007690 <xQueueGenericSend+0x164>
 80076a0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80076a4:	f001 fae2 	bl	8008c6c <xTaskRemoveFromEventList>
 80076a8:	2800      	cmp	r0, #0
 80076aa:	d0ea      	beq.n	8007682 <xQueueGenericSend+0x156>
 80076ac:	e7df      	b.n	800766e <xQueueGenericSend+0x142>
 80076ae:	bf00      	nop

080076b0 <xQueueGiveFromISR>:
 80076b0:	b370      	cbz	r0, 8007710 <xQueueGiveFromISR+0x60>
 80076b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80076b4:	b570      	push	{r4, r5, r6, lr}
 80076b6:	4604      	mov	r4, r0
 80076b8:	b143      	cbz	r3, 80076cc <xQueueGiveFromISR+0x1c>
 80076ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076be:	f383 8811 	msr	BASEPRI, r3
 80076c2:	f3bf 8f6f 	isb	sy
 80076c6:	f3bf 8f4f 	dsb	sy
 80076ca:	e7fe      	b.n	80076ca <xQueueGiveFromISR+0x1a>
 80076cc:	6803      	ldr	r3, [r0, #0]
 80076ce:	460d      	mov	r5, r1
 80076d0:	b33b      	cbz	r3, 8007722 <xQueueGiveFromISR+0x72>
 80076d2:	f7fc fc47 	bl	8003f64 <vPortValidateInterruptPriority>
 80076d6:	f3ef 8611 	mrs	r6, BASEPRI
 80076da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80076de:	f383 8811 	msr	BASEPRI, r3
 80076e2:	f3bf 8f6f 	isb	sy
 80076e6:	f3bf 8f4f 	dsb	sy
 80076ea:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80076ec:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 80076ee:	429a      	cmp	r2, r3
 80076f0:	d923      	bls.n	800773a <xQueueGiveFromISR+0x8a>
 80076f2:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
 80076f6:	3301      	adds	r3, #1
 80076f8:	2aff      	cmp	r2, #255	@ 0xff
 80076fa:	63a3      	str	r3, [r4, #56]	@ 0x38
 80076fc:	b253      	sxtb	r3, r2
 80076fe:	d020      	beq.n	8007742 <xQueueGiveFromISR+0x92>
 8007700:	3301      	adds	r3, #1
 8007702:	b25b      	sxtb	r3, r3
 8007704:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007708:	2001      	movs	r0, #1
 800770a:	f386 8811 	msr	BASEPRI, r6
 800770e:	bd70      	pop	{r4, r5, r6, pc}
 8007710:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007714:	f383 8811 	msr	BASEPRI, r3
 8007718:	f3bf 8f6f 	isb	sy
 800771c:	f3bf 8f4f 	dsb	sy
 8007720:	e7fe      	b.n	8007720 <xQueueGiveFromISR+0x70>
 8007722:	6843      	ldr	r3, [r0, #4]
 8007724:	2b00      	cmp	r3, #0
 8007726:	d0d4      	beq.n	80076d2 <xQueueGiveFromISR+0x22>
 8007728:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800772c:	f383 8811 	msr	BASEPRI, r3
 8007730:	f3bf 8f6f 	isb	sy
 8007734:	f3bf 8f4f 	dsb	sy
 8007738:	e7fe      	b.n	8007738 <xQueueGiveFromISR+0x88>
 800773a:	2000      	movs	r0, #0
 800773c:	f386 8811 	msr	BASEPRI, r6
 8007740:	bd70      	pop	{r4, r5, r6, pc}
 8007742:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007744:	2b00      	cmp	r3, #0
 8007746:	d0df      	beq.n	8007708 <xQueueGiveFromISR+0x58>
 8007748:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800774c:	f001 fa8e 	bl	8008c6c <xTaskRemoveFromEventList>
 8007750:	2800      	cmp	r0, #0
 8007752:	d0d9      	beq.n	8007708 <xQueueGiveFromISR+0x58>
 8007754:	2d00      	cmp	r5, #0
 8007756:	d0d7      	beq.n	8007708 <xQueueGiveFromISR+0x58>
 8007758:	2301      	movs	r3, #1
 800775a:	602b      	str	r3, [r5, #0]
 800775c:	e7d4      	b.n	8007708 <xQueueGiveFromISR+0x58>
 800775e:	bf00      	nop

08007760 <xQueueGenericReceive>:
 8007760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007764:	b084      	sub	sp, #16
 8007766:	9201      	str	r2, [sp, #4]
 8007768:	2800      	cmp	r0, #0
 800776a:	f000 8089 	beq.w	8007880 <xQueueGenericReceive+0x120>
 800776e:	460e      	mov	r6, r1
 8007770:	461f      	mov	r7, r3
 8007772:	4604      	mov	r4, r0
 8007774:	2900      	cmp	r1, #0
 8007776:	d043      	beq.n	8007800 <xQueueGenericReceive+0xa0>
 8007778:	f001 fb36 	bl	8008de8 <xTaskGetSchedulerState>
 800777c:	2800      	cmp	r0, #0
 800777e:	d04b      	beq.n	8007818 <xQueueGenericReceive+0xb8>
 8007780:	f7fc fae8 	bl	8003d54 <vPortEnterCritical>
 8007784:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 8007786:	2d00      	cmp	r5, #0
 8007788:	f040 808b 	bne.w	80078a2 <xQueueGenericReceive+0x142>
 800778c:	9b01      	ldr	r3, [sp, #4]
 800778e:	b38b      	cbz	r3, 80077f4 <xQueueGenericReceive+0x94>
 8007790:	a802      	add	r0, sp, #8
 8007792:	f001 faaf 	bl	8008cf4 <vTaskSetTimeOutState>
 8007796:	46a8      	mov	r8, r5
 8007798:	f7fc fafe 	bl	8003d98 <vPortExitCritical>
 800779c:	f001 f81c 	bl	80087d8 <vTaskSuspendAll>
 80077a0:	f7fc fad8 	bl	8003d54 <vPortEnterCritical>
 80077a4:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 80077a8:	2aff      	cmp	r2, #255	@ 0xff
 80077aa:	bf08      	it	eq
 80077ac:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80077b0:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
 80077b4:	2aff      	cmp	r2, #255	@ 0xff
 80077b6:	bf08      	it	eq
 80077b8:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80077bc:	f7fc faec 	bl	8003d98 <vPortExitCritical>
 80077c0:	a901      	add	r1, sp, #4
 80077c2:	a802      	add	r0, sp, #8
 80077c4:	f001 faac 	bl	8008d20 <xTaskCheckForTimeOut>
 80077c8:	2800      	cmp	r0, #0
 80077ca:	d131      	bne.n	8007830 <xQueueGenericReceive+0xd0>
 80077cc:	f7fc fac2 	bl	8003d54 <vPortEnterCritical>
 80077d0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80077d2:	2b00      	cmp	r3, #0
 80077d4:	d039      	beq.n	800784a <xQueueGenericReceive+0xea>
 80077d6:	f7fc fadf 	bl	8003d98 <vPortExitCritical>
 80077da:	4620      	mov	r0, r4
 80077dc:	f7ff fdf0 	bl	80073c0 <prvUnlockQueue>
 80077e0:	f001 f950 	bl	8008a84 <xTaskResumeAll>
 80077e4:	f7fc fab6 	bl	8003d54 <vPortEnterCritical>
 80077e8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 80077ea:	2d00      	cmp	r5, #0
 80077ec:	d159      	bne.n	80078a2 <xQueueGenericReceive+0x142>
 80077ee:	9b01      	ldr	r3, [sp, #4]
 80077f0:	2b00      	cmp	r3, #0
 80077f2:	d1d1      	bne.n	8007798 <xQueueGenericReceive+0x38>
 80077f4:	f7fc fad0 	bl	8003d98 <vPortExitCritical>
 80077f8:	2000      	movs	r0, #0
 80077fa:	b004      	add	sp, #16
 80077fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007800:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007802:	2b00      	cmp	r3, #0
 8007804:	d0b8      	beq.n	8007778 <xQueueGenericReceive+0x18>
 8007806:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800780a:	f383 8811 	msr	BASEPRI, r3
 800780e:	f3bf 8f6f 	isb	sy
 8007812:	f3bf 8f4f 	dsb	sy
 8007816:	e7fe      	b.n	8007816 <xQueueGenericReceive+0xb6>
 8007818:	9b01      	ldr	r3, [sp, #4]
 800781a:	2b00      	cmp	r3, #0
 800781c:	d0b0      	beq.n	8007780 <xQueueGenericReceive+0x20>
 800781e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007822:	f383 8811 	msr	BASEPRI, r3
 8007826:	f3bf 8f6f 	isb	sy
 800782a:	f3bf 8f4f 	dsb	sy
 800782e:	e7fe      	b.n	800782e <xQueueGenericReceive+0xce>
 8007830:	4620      	mov	r0, r4
 8007832:	f7ff fdc5 	bl	80073c0 <prvUnlockQueue>
 8007836:	f001 f925 	bl	8008a84 <xTaskResumeAll>
 800783a:	f7fc fa8b 	bl	8003d54 <vPortEnterCritical>
 800783e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007840:	2b00      	cmp	r3, #0
 8007842:	d0d7      	beq.n	80077f4 <xQueueGenericReceive+0x94>
 8007844:	f7fc faa8 	bl	8003d98 <vPortExitCritical>
 8007848:	e7cc      	b.n	80077e4 <xQueueGenericReceive+0x84>
 800784a:	f7fc faa5 	bl	8003d98 <vPortExitCritical>
 800784e:	6823      	ldr	r3, [r4, #0]
 8007850:	b1fb      	cbz	r3, 8007892 <xQueueGenericReceive+0x132>
 8007852:	9901      	ldr	r1, [sp, #4]
 8007854:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007858:	f001 f9ee 	bl	8008c38 <vTaskPlaceOnEventList>
 800785c:	4620      	mov	r0, r4
 800785e:	f7ff fdaf 	bl	80073c0 <prvUnlockQueue>
 8007862:	f001 f90f 	bl	8008a84 <xTaskResumeAll>
 8007866:	2800      	cmp	r0, #0
 8007868:	d1bc      	bne.n	80077e4 <xQueueGenericReceive+0x84>
 800786a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800786e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007872:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007876:	f3bf 8f4f 	dsb	sy
 800787a:	f3bf 8f6f 	isb	sy
 800787e:	e7b1      	b.n	80077e4 <xQueueGenericReceive+0x84>
 8007880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007884:	f383 8811 	msr	BASEPRI, r3
 8007888:	f3bf 8f6f 	isb	sy
 800788c:	f3bf 8f4f 	dsb	sy
 8007890:	e7fe      	b.n	8007890 <xQueueGenericReceive+0x130>
 8007892:	f7fc fa5f 	bl	8003d54 <vPortEnterCritical>
 8007896:	6860      	ldr	r0, [r4, #4]
 8007898:	f001 fab6 	bl	8008e08 <vTaskPriorityInherit>
 800789c:	f7fc fa7c 	bl	8003d98 <vPortExitCritical>
 80078a0:	e7d7      	b.n	8007852 <xQueueGenericReceive+0xf2>
 80078a2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80078a4:	f8d4 800c 	ldr.w	r8, [r4, #12]
 80078a8:	b152      	cbz	r2, 80078c0 <xQueueGenericReceive+0x160>
 80078aa:	6863      	ldr	r3, [r4, #4]
 80078ac:	eb08 0102 	add.w	r1, r8, r2
 80078b0:	4299      	cmp	r1, r3
 80078b2:	60e1      	str	r1, [r4, #12]
 80078b4:	bf24      	itt	cs
 80078b6:	6821      	ldrcs	r1, [r4, #0]
 80078b8:	60e1      	strcs	r1, [r4, #12]
 80078ba:	4630      	mov	r0, r6
 80078bc:	f01c ffe5 	bl	802488a <memcpy>
 80078c0:	b94f      	cbnz	r7, 80078d6 <xQueueGenericReceive+0x176>
 80078c2:	6823      	ldr	r3, [r4, #0]
 80078c4:	3d01      	subs	r5, #1
 80078c6:	63a5      	str	r5, [r4, #56]	@ 0x38
 80078c8:	b313      	cbz	r3, 8007910 <xQueueGenericReceive+0x1b0>
 80078ca:	6923      	ldr	r3, [r4, #16]
 80078cc:	b9cb      	cbnz	r3, 8007902 <xQueueGenericReceive+0x1a2>
 80078ce:	f7fc fa63 	bl	8003d98 <vPortExitCritical>
 80078d2:	2001      	movs	r0, #1
 80078d4:	e791      	b.n	80077fa <xQueueGenericReceive+0x9a>
 80078d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80078d8:	f8c4 800c 	str.w	r8, [r4, #12]
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d0f6      	beq.n	80078ce <xQueueGenericReceive+0x16e>
 80078e0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80078e4:	f001 f9c2 	bl	8008c6c <xTaskRemoveFromEventList>
 80078e8:	2800      	cmp	r0, #0
 80078ea:	d0f0      	beq.n	80078ce <xQueueGenericReceive+0x16e>
 80078ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80078f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80078f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80078f8:	f3bf 8f4f 	dsb	sy
 80078fc:	f3bf 8f6f 	isb	sy
 8007900:	e7e5      	b.n	80078ce <xQueueGenericReceive+0x16e>
 8007902:	f104 0010 	add.w	r0, r4, #16
 8007906:	f001 f9b1 	bl	8008c6c <xTaskRemoveFromEventList>
 800790a:	2800      	cmp	r0, #0
 800790c:	d0df      	beq.n	80078ce <xQueueGenericReceive+0x16e>
 800790e:	e7ed      	b.n	80078ec <xQueueGenericReceive+0x18c>
 8007910:	f001 fb22 	bl	8008f58 <pvTaskIncrementMutexHeldCount>
 8007914:	6060      	str	r0, [r4, #4]
 8007916:	e7d8      	b.n	80078ca <xQueueGenericReceive+0x16a>

08007918 <xQueueReceiveFromISR>:
 8007918:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800791c:	b310      	cbz	r0, 8007964 <xQueueReceiveFromISR+0x4c>
 800791e:	460e      	mov	r6, r1
 8007920:	4617      	mov	r7, r2
 8007922:	4604      	mov	r4, r0
 8007924:	b191      	cbz	r1, 800794c <xQueueReceiveFromISR+0x34>
 8007926:	f7fc fb1d 	bl	8003f64 <vPortValidateInterruptPriority>
 800792a:	f3ef 8911 	mrs	r9, BASEPRI
 800792e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007932:	f383 8811 	msr	BASEPRI, r3
 8007936:	f3bf 8f6f 	isb	sy
 800793a:	f3bf 8f4f 	dsb	sy
 800793e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
 8007940:	b9cd      	cbnz	r5, 8007976 <xQueueReceiveFromISR+0x5e>
 8007942:	4628      	mov	r0, r5
 8007944:	f389 8811 	msr	BASEPRI, r9
 8007948:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800794c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800794e:	2b00      	cmp	r3, #0
 8007950:	d0e9      	beq.n	8007926 <xQueueReceiveFromISR+0xe>
 8007952:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007956:	f383 8811 	msr	BASEPRI, r3
 800795a:	f3bf 8f6f 	isb	sy
 800795e:	f3bf 8f4f 	dsb	sy
 8007962:	e7fe      	b.n	8007962 <xQueueReceiveFromISR+0x4a>
 8007964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007968:	f383 8811 	msr	BASEPRI, r3
 800796c:	f3bf 8f6f 	isb	sy
 8007970:	f3bf 8f4f 	dsb	sy
 8007974:	e7fe      	b.n	8007974 <xQueueReceiveFromISR+0x5c>
 8007976:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
 800797a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800797c:	fa4f f888 	sxtb.w	r8, r8
 8007980:	b152      	cbz	r2, 8007998 <xQueueReceiveFromISR+0x80>
 8007982:	68e1      	ldr	r1, [r4, #12]
 8007984:	6863      	ldr	r3, [r4, #4]
 8007986:	4411      	add	r1, r2
 8007988:	4299      	cmp	r1, r3
 800798a:	60e1      	str	r1, [r4, #12]
 800798c:	bf24      	itt	cs
 800798e:	6821      	ldrcs	r1, [r4, #0]
 8007990:	60e1      	strcs	r1, [r4, #12]
 8007992:	4630      	mov	r0, r6
 8007994:	f01c ff79 	bl	802488a <memcpy>
 8007998:	3d01      	subs	r5, #1
 800799a:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
 800799e:	63a5      	str	r5, [r4, #56]	@ 0x38
 80079a0:	d009      	beq.n	80079b6 <xQueueReceiveFromISR+0x9e>
 80079a2:	f108 0301 	add.w	r3, r8, #1
 80079a6:	b25b      	sxtb	r3, r3
 80079a8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80079ac:	2001      	movs	r0, #1
 80079ae:	f389 8811 	msr	BASEPRI, r9
 80079b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80079b6:	6923      	ldr	r3, [r4, #16]
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	d0f7      	beq.n	80079ac <xQueueReceiveFromISR+0x94>
 80079bc:	f104 0010 	add.w	r0, r4, #16
 80079c0:	f001 f954 	bl	8008c6c <xTaskRemoveFromEventList>
 80079c4:	2800      	cmp	r0, #0
 80079c6:	d0f1      	beq.n	80079ac <xQueueReceiveFromISR+0x94>
 80079c8:	2f00      	cmp	r7, #0
 80079ca:	d0ef      	beq.n	80079ac <xQueueReceiveFromISR+0x94>
 80079cc:	2301      	movs	r3, #1
 80079ce:	603b      	str	r3, [r7, #0]
 80079d0:	e7ec      	b.n	80079ac <xQueueReceiveFromISR+0x94>
 80079d2:	bf00      	nop

080079d4 <osKernelStart>:
 80079d4:	b508      	push	{r3, lr}
 80079d6:	f000 fec5 	bl	8008764 <vTaskStartScheduler>
 80079da:	2000      	movs	r0, #0
 80079dc:	bd08      	pop	{r3, pc}
 80079de:	bf00      	nop

080079e0 <osKernelSysTick>:
 80079e0:	f3ef 8305 	mrs	r3, IPSR
 80079e4:	b10b      	cbz	r3, 80079ea <osKernelSysTick+0xa>
 80079e6:	f000 bf05 	b.w	80087f4 <xTaskGetTickCountFromISR>
 80079ea:	f000 befd 	b.w	80087e8 <xTaskGetTickCount>
 80079ee:	bf00      	nop

080079f0 <osThreadCreate>:
 80079f0:	b510      	push	{r4, lr}
 80079f2:	4684      	mov	ip, r0
 80079f4:	460b      	mov	r3, r1
 80079f6:	f8bc 2010 	ldrh.w	r2, [ip, #16]
 80079fa:	f8dc 1000 	ldr.w	r1, [ip]
 80079fe:	f9bc c008 	ldrsh.w	ip, [ip, #8]
 8007a02:	6840      	ldr	r0, [r0, #4]
 8007a04:	b084      	sub	sp, #16
 8007a06:	f1bc 0f84 	cmp.w	ip, #132	@ 0x84
 8007a0a:	bf14      	ite	ne
 8007a0c:	f10c 0403 	addne.w	r4, ip, #3
 8007a10:	2400      	moveq	r4, #0
 8007a12:	9400      	str	r4, [sp, #0]
 8007a14:	ac03      	add	r4, sp, #12
 8007a16:	9401      	str	r4, [sp, #4]
 8007a18:	f000 fd3e 	bl	8008498 <xTaskCreate>
 8007a1c:	2801      	cmp	r0, #1
 8007a1e:	bf0c      	ite	eq
 8007a20:	9803      	ldreq	r0, [sp, #12]
 8007a22:	2000      	movne	r0, #0
 8007a24:	b004      	add	sp, #16
 8007a26:	bd10      	pop	{r4, pc}

08007a28 <osDelay>:
 8007a28:	b508      	push	{r3, lr}
 8007a2a:	2801      	cmp	r0, #1
 8007a2c:	bf38      	it	cc
 8007a2e:	2001      	movcc	r0, #1
 8007a30:	f001 f88c 	bl	8008b4c <vTaskDelay>
 8007a34:	2000      	movs	r0, #0
 8007a36:	bd08      	pop	{r3, pc}

08007a38 <osSignalSet>:
 8007a38:	b500      	push	{lr}
 8007a3a:	2300      	movs	r3, #0
 8007a3c:	b085      	sub	sp, #20
 8007a3e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8007a42:	f3ef 8305 	mrs	r3, IPSR
 8007a46:	b1bb      	cbz	r3, 8007a78 <osSignalSet+0x40>
 8007a48:	ab02      	add	r3, sp, #8
 8007a4a:	9300      	str	r3, [sp, #0]
 8007a4c:	2201      	movs	r2, #1
 8007a4e:	ab03      	add	r3, sp, #12
 8007a50:	f001 fb40 	bl	80090d4 <xTaskGenericNotifyFromISR>
 8007a54:	2801      	cmp	r0, #1
 8007a56:	d115      	bne.n	8007a84 <osSignalSet+0x4c>
 8007a58:	9b02      	ldr	r3, [sp, #8]
 8007a5a:	b14b      	cbz	r3, 8007a70 <osSignalSet+0x38>
 8007a5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007a64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007a68:	f3bf 8f4f 	dsb	sy
 8007a6c:	f3bf 8f6f 	isb	sy
 8007a70:	9803      	ldr	r0, [sp, #12]
 8007a72:	b005      	add	sp, #20
 8007a74:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a78:	ab03      	add	r3, sp, #12
 8007a7a:	2201      	movs	r2, #1
 8007a7c:	f001 fabe 	bl	8008ffc <xTaskGenericNotify>
 8007a80:	2801      	cmp	r0, #1
 8007a82:	d0f5      	beq.n	8007a70 <osSignalSet+0x38>
 8007a84:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
 8007a88:	e7f3      	b.n	8007a72 <osSignalSet+0x3a>
 8007a8a:	bf00      	nop

08007a8c <osSignalWait>:
 8007a8c:	b530      	push	{r4, r5, lr}
 8007a8e:	b085      	sub	sp, #20
 8007a90:	2300      	movs	r3, #0
 8007a92:	4604      	mov	r4, r0
 8007a94:	9302      	str	r3, [sp, #8]
 8007a96:	f3ef 8005 	mrs	r0, IPSR
 8007a9a:	b148      	cbz	r0, 8007ab0 <osSignalWait+0x24>
 8007a9c:	2382      	movs	r3, #130	@ 0x82
 8007a9e:	9301      	str	r3, [sp, #4]
 8007aa0:	ab04      	add	r3, sp, #16
 8007aa2:	e913 0007 	ldmdb	r3, {r0, r1, r2}
 8007aa6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8007aaa:	4620      	mov	r0, r4
 8007aac:	b005      	add	sp, #20
 8007aae:	bd30      	pop	{r4, r5, pc}
 8007ab0:	4613      	mov	r3, r2
 8007ab2:	4615      	mov	r5, r2
 8007ab4:	aa02      	add	r2, sp, #8
 8007ab6:	f001 fa5b 	bl	8008f70 <xTaskNotifyWait>
 8007aba:	2801      	cmp	r0, #1
 8007abc:	d004      	beq.n	8007ac8 <osSignalWait+0x3c>
 8007abe:	1e2b      	subs	r3, r5, #0
 8007ac0:	bf18      	it	ne
 8007ac2:	2301      	movne	r3, #1
 8007ac4:	019b      	lsls	r3, r3, #6
 8007ac6:	e7ea      	b.n	8007a9e <osSignalWait+0x12>
 8007ac8:	9b02      	ldr	r3, [sp, #8]
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	bfb4      	ite	lt
 8007ace:	2386      	movlt	r3, #134	@ 0x86
 8007ad0:	2308      	movge	r3, #8
 8007ad2:	e7e4      	b.n	8007a9e <osSignalWait+0x12>

08007ad4 <osSemaphoreCreate>:
 8007ad4:	2901      	cmp	r1, #1
 8007ad6:	b510      	push	{r4, lr}
 8007ad8:	d002      	beq.n	8007ae0 <osSemaphoreCreate+0xc>
 8007ada:	2400      	movs	r4, #0
 8007adc:	4620      	mov	r0, r4
 8007ade:	bd10      	pop	{r4, pc}
 8007ae0:	4608      	mov	r0, r1
 8007ae2:	2203      	movs	r2, #3
 8007ae4:	2100      	movs	r1, #0
 8007ae6:	f7ff fcf7 	bl	80074d8 <xQueueGenericCreate>
 8007aea:	4604      	mov	r4, r0
 8007aec:	2800      	cmp	r0, #0
 8007aee:	d0f5      	beq.n	8007adc <osSemaphoreCreate+0x8>
 8007af0:	2300      	movs	r3, #0
 8007af2:	461a      	mov	r2, r3
 8007af4:	4619      	mov	r1, r3
 8007af6:	f7ff fd19 	bl	800752c <xQueueGenericSend>
 8007afa:	4620      	mov	r0, r4
 8007afc:	bd10      	pop	{r4, pc}
 8007afe:	bf00      	nop

08007b00 <osSemaphoreWait>:
 8007b00:	b510      	push	{r4, lr}
 8007b02:	b082      	sub	sp, #8
 8007b04:	2400      	movs	r4, #0
 8007b06:	9401      	str	r4, [sp, #4]
 8007b08:	b310      	cbz	r0, 8007b50 <osSemaphoreWait+0x50>
 8007b0a:	f3ef 8305 	mrs	r3, IPSR
 8007b0e:	b943      	cbnz	r3, 8007b22 <osSemaphoreWait+0x22>
 8007b10:	460a      	mov	r2, r1
 8007b12:	4619      	mov	r1, r3
 8007b14:	f7ff fe24 	bl	8007760 <xQueueGenericReceive>
 8007b18:	2801      	cmp	r0, #1
 8007b1a:	d116      	bne.n	8007b4a <osSemaphoreWait+0x4a>
 8007b1c:	2000      	movs	r0, #0
 8007b1e:	b002      	add	sp, #8
 8007b20:	bd10      	pop	{r4, pc}
 8007b22:	aa01      	add	r2, sp, #4
 8007b24:	4621      	mov	r1, r4
 8007b26:	f7ff fef7 	bl	8007918 <xQueueReceiveFromISR>
 8007b2a:	2801      	cmp	r0, #1
 8007b2c:	d10d      	bne.n	8007b4a <osSemaphoreWait+0x4a>
 8007b2e:	9b01      	ldr	r3, [sp, #4]
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	d0f3      	beq.n	8007b1c <osSemaphoreWait+0x1c>
 8007b34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b38:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007b40:	f3bf 8f4f 	dsb	sy
 8007b44:	f3bf 8f6f 	isb	sy
 8007b48:	e7e8      	b.n	8007b1c <osSemaphoreWait+0x1c>
 8007b4a:	20ff      	movs	r0, #255	@ 0xff
 8007b4c:	b002      	add	sp, #8
 8007b4e:	bd10      	pop	{r4, pc}
 8007b50:	2080      	movs	r0, #128	@ 0x80
 8007b52:	b002      	add	sp, #8
 8007b54:	bd10      	pop	{r4, pc}
 8007b56:	bf00      	nop

08007b58 <osSemaphoreRelease>:
 8007b58:	b500      	push	{lr}
 8007b5a:	b083      	sub	sp, #12
 8007b5c:	2300      	movs	r3, #0
 8007b5e:	9301      	str	r3, [sp, #4]
 8007b60:	f3ef 8305 	mrs	r3, IPSR
 8007b64:	b1a3      	cbz	r3, 8007b90 <osSemaphoreRelease+0x38>
 8007b66:	a901      	add	r1, sp, #4
 8007b68:	f7ff fda2 	bl	80076b0 <xQueueGiveFromISR>
 8007b6c:	2801      	cmp	r0, #1
 8007b6e:	d115      	bne.n	8007b9c <osSemaphoreRelease+0x44>
 8007b70:	9b01      	ldr	r3, [sp, #4]
 8007b72:	b14b      	cbz	r3, 8007b88 <osSemaphoreRelease+0x30>
 8007b74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b78:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007b80:	f3bf 8f4f 	dsb	sy
 8007b84:	f3bf 8f6f 	isb	sy
 8007b88:	2000      	movs	r0, #0
 8007b8a:	b003      	add	sp, #12
 8007b8c:	f85d fb04 	ldr.w	pc, [sp], #4
 8007b90:	461a      	mov	r2, r3
 8007b92:	4619      	mov	r1, r3
 8007b94:	f7ff fcca 	bl	800752c <xQueueGenericSend>
 8007b98:	2801      	cmp	r0, #1
 8007b9a:	d0f5      	beq.n	8007b88 <osSemaphoreRelease+0x30>
 8007b9c:	20ff      	movs	r0, #255	@ 0xff
 8007b9e:	b003      	add	sp, #12
 8007ba0:	f85d fb04 	ldr.w	pc, [sp], #4

08007ba4 <osSystickHandler>:
 8007ba4:	b508      	push	{r3, lr}
 8007ba6:	f001 f91f 	bl	8008de8 <xTaskGetSchedulerState>
 8007baa:	2801      	cmp	r0, #1
 8007bac:	d100      	bne.n	8007bb0 <osSystickHandler+0xc>
 8007bae:	bd08      	pop	{r3, pc}
 8007bb0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007bb4:	f7fc b936 	b.w	8003e24 <xPortSysTickHandler>

08007bb8 <USBD_CDC_EP0_RxReady>:
 8007bb8:	f8d0 321c 	ldr.w	r3, [r0, #540]	@ 0x21c
 8007bbc:	b183      	cbz	r3, 8007be0 <USBD_CDC_EP0_RxReady+0x28>
 8007bbe:	b510      	push	{r4, lr}
 8007bc0:	f8d0 4218 	ldr.w	r4, [r0, #536]	@ 0x218
 8007bc4:	f894 0040 	ldrb.w	r0, [r4, #64]	@ 0x40
 8007bc8:	28ff      	cmp	r0, #255	@ 0xff
 8007bca:	d007      	beq.n	8007bdc <USBD_CDC_EP0_RxReady+0x24>
 8007bcc:	689b      	ldr	r3, [r3, #8]
 8007bce:	f894 2041 	ldrb.w	r2, [r4, #65]	@ 0x41
 8007bd2:	4621      	mov	r1, r4
 8007bd4:	4798      	blx	r3
 8007bd6:	23ff      	movs	r3, #255	@ 0xff
 8007bd8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8007bdc:	2000      	movs	r0, #0
 8007bde:	bd10      	pop	{r4, pc}
 8007be0:	2000      	movs	r0, #0
 8007be2:	4770      	bx	lr

08007be4 <USBD_CDC_GetFSCfgDesc>:
 8007be4:	236a      	movs	r3, #106	@ 0x6a
 8007be6:	8003      	strh	r3, [r0, #0]
 8007be8:	4800      	ldr	r0, [pc, #0]	@ (8007bec <USBD_CDC_GetFSCfgDesc+0x8>)
 8007bea:	4770      	bx	lr
 8007bec:	20000140 	.word	0x20000140

08007bf0 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8007bf0:	230a      	movs	r3, #10
 8007bf2:	8003      	strh	r3, [r0, #0]
 8007bf4:	4800      	ldr	r0, [pc, #0]	@ (8007bf8 <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 8007bf6:	4770      	bx	lr
 8007bf8:	200001e8 	.word	0x200001e8

08007bfc <USBD_CDC_DataOut>:
 8007bfc:	2901      	cmp	r1, #1
 8007bfe:	b570      	push	{r4, r5, r6, lr}
 8007c00:	f8d0 4218 	ldr.w	r4, [r0, #536]	@ 0x218
 8007c04:	4605      	mov	r5, r0
 8007c06:	460e      	mov	r6, r1
 8007c08:	d016      	beq.n	8007c38 <USBD_CDC_DataOut+0x3c>
 8007c0a:	2903      	cmp	r1, #3
 8007c0c:	d112      	bne.n	8007c34 <USBD_CDC_DataOut+0x38>
 8007c0e:	3468      	adds	r4, #104	@ 0x68
 8007c10:	4631      	mov	r1, r6
 8007c12:	4628      	mov	r0, r5
 8007c14:	f7fb ff68 	bl	8003ae8 <USBD_LL_GetRxDataSize>
 8007c18:	f8d5 3218 	ldr.w	r3, [r5, #536]	@ 0x218
 8007c1c:	6060      	str	r0, [r4, #4]
 8007c1e:	b14b      	cbz	r3, 8007c34 <USBD_CDC_DataOut+0x38>
 8007c20:	f8d5 221c 	ldr.w	r2, [r5, #540]	@ 0x21c
 8007c24:	4621      	mov	r1, r4
 8007c26:	68d4      	ldr	r4, [r2, #12]
 8007c28:	f851 0b04 	ldr.w	r0, [r1], #4
 8007c2c:	4632      	mov	r2, r6
 8007c2e:	47a0      	blx	r4
 8007c30:	2000      	movs	r0, #0
 8007c32:	bd70      	pop	{r4, r5, r6, pc}
 8007c34:	2002      	movs	r0, #2
 8007c36:	bd70      	pop	{r4, r5, r6, pc}
 8007c38:	3450      	adds	r4, #80	@ 0x50
 8007c3a:	e7e9      	b.n	8007c10 <USBD_CDC_DataOut+0x14>

08007c3c <USBD_CDC_DataIn>:
 8007c3c:	b508      	push	{r3, lr}
 8007c3e:	f8d0 3218 	ldr.w	r3, [r0, #536]	@ 0x218
 8007c42:	b183      	cbz	r3, 8007c66 <USBD_CDC_DataIn+0x2a>
 8007c44:	2901      	cmp	r1, #1
 8007c46:	d00a      	beq.n	8007c5e <USBD_CDC_DataIn+0x22>
 8007c48:	2903      	cmp	r1, #3
 8007c4a:	bf04      	itt	eq
 8007c4c:	2200      	moveq	r2, #0
 8007c4e:	f883 2064 	strbeq.w	r2, [r3, #100]	@ 0x64
 8007c52:	4b06      	ldr	r3, [pc, #24]	@ (8007c6c <USBD_CDC_DataIn+0x30>)
 8007c54:	6818      	ldr	r0, [r3, #0]
 8007c56:	f7ff ff7f 	bl	8007b58 <osSemaphoreRelease>
 8007c5a:	2000      	movs	r0, #0
 8007c5c:	bd08      	pop	{r3, pc}
 8007c5e:	2200      	movs	r2, #0
 8007c60:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8007c64:	e7f5      	b.n	8007c52 <USBD_CDC_DataIn+0x16>
 8007c66:	2002      	movs	r0, #2
 8007c68:	bd08      	pop	{r3, pc}
 8007c6a:	bf00      	nop
 8007c6c:	20000800 	.word	0x20000800

08007c70 <USBD_CDC_Setup>:
 8007c70:	b570      	push	{r4, r5, r6, lr}
 8007c72:	780b      	ldrb	r3, [r1, #0]
 8007c74:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 8007c78:	2a20      	cmp	r2, #32
 8007c7a:	460c      	mov	r4, r1
 8007c7c:	4605      	mov	r5, r0
 8007c7e:	d025      	beq.n	8007ccc <USBD_CDC_Setup+0x5c>
 8007c80:	2a40      	cmp	r2, #64	@ 0x40
 8007c82:	d003      	beq.n	8007c8c <USBD_CDC_Setup+0x1c>
 8007c84:	b9a2      	cbnz	r2, 8007cb0 <USBD_CDC_Setup+0x40>
 8007c86:	784a      	ldrb	r2, [r1, #1]
 8007c88:	2a0a      	cmp	r2, #10
 8007c8a:	d03a      	beq.n	8007d02 <USBD_CDC_Setup+0x92>
 8007c8c:	f013 0303 	ands.w	r3, r3, #3
 8007c90:	d010      	beq.n	8007cb4 <USBD_CDC_Setup+0x44>
 8007c92:	2b01      	cmp	r3, #1
 8007c94:	d114      	bne.n	8007cc0 <USBD_CDC_Setup+0x50>
 8007c96:	7863      	ldrb	r3, [r4, #1]
 8007c98:	2b50      	cmp	r3, #80	@ 0x50
 8007c9a:	d111      	bne.n	8007cc0 <USBD_CDC_Setup+0x50>
 8007c9c:	88a3      	ldrh	r3, [r4, #4]
 8007c9e:	78a2      	ldrb	r2, [r4, #2]
 8007ca0:	2b05      	cmp	r3, #5
 8007ca2:	d10d      	bne.n	8007cc0 <USBD_CDC_Setup+0x50>
 8007ca4:	b962      	cbnz	r2, 8007cc0 <USBD_CDC_Setup+0x50>
 8007ca6:	88e2      	ldrh	r2, [r4, #6]
 8007ca8:	4920      	ldr	r1, [pc, #128]	@ (8007d2c <USBD_CDC_Setup+0xbc>)
 8007caa:	4628      	mov	r0, r5
 8007cac:	f7f9 f9f6 	bl	800109c <USBD_CtlSendData>
 8007cb0:	2000      	movs	r0, #0
 8007cb2:	bd70      	pop	{r4, r5, r6, pc}
 8007cb4:	7863      	ldrb	r3, [r4, #1]
 8007cb6:	2b50      	cmp	r3, #80	@ 0x50
 8007cb8:	d102      	bne.n	8007cc0 <USBD_CDC_Setup+0x50>
 8007cba:	88a3      	ldrh	r3, [r4, #4]
 8007cbc:	2b04      	cmp	r3, #4
 8007cbe:	d02e      	beq.n	8007d1e <USBD_CDC_Setup+0xae>
 8007cc0:	4628      	mov	r0, r5
 8007cc2:	4621      	mov	r1, r4
 8007cc4:	f7fd ff9c 	bl	8005c00 <USBD_CtlError>
 8007cc8:	2002      	movs	r0, #2
 8007cca:	bd70      	pop	{r4, r5, r6, pc}
 8007ccc:	88ca      	ldrh	r2, [r1, #6]
 8007cce:	f891 c001 	ldrb.w	ip, [r1, #1]
 8007cd2:	b17a      	cbz	r2, 8007cf4 <USBD_CDC_Setup+0x84>
 8007cd4:	061b      	lsls	r3, r3, #24
 8007cd6:	f8d0 6218 	ldr.w	r6, [r0, #536]	@ 0x218
 8007cda:	d518      	bpl.n	8007d0e <USBD_CDC_Setup+0x9e>
 8007cdc:	f8d5 321c 	ldr.w	r3, [r5, #540]	@ 0x21c
 8007ce0:	4631      	mov	r1, r6
 8007ce2:	689b      	ldr	r3, [r3, #8]
 8007ce4:	4660      	mov	r0, ip
 8007ce6:	4798      	blx	r3
 8007ce8:	88e2      	ldrh	r2, [r4, #6]
 8007cea:	4631      	mov	r1, r6
 8007cec:	4628      	mov	r0, r5
 8007cee:	f7f9 f9d5 	bl	800109c <USBD_CtlSendData>
 8007cf2:	e7dd      	b.n	8007cb0 <USBD_CDC_Setup+0x40>
 8007cf4:	f8d0 321c 	ldr.w	r3, [r0, #540]	@ 0x21c
 8007cf8:	4660      	mov	r0, ip
 8007cfa:	689b      	ldr	r3, [r3, #8]
 8007cfc:	4798      	blx	r3
 8007cfe:	2000      	movs	r0, #0
 8007d00:	e7d7      	b.n	8007cb2 <USBD_CDC_Setup+0x42>
 8007d02:	490b      	ldr	r1, [pc, #44]	@ (8007d30 <USBD_CDC_Setup+0xc0>)
 8007d04:	2201      	movs	r2, #1
 8007d06:	f7f9 f9c9 	bl	800109c <USBD_CtlSendData>
 8007d0a:	7823      	ldrb	r3, [r4, #0]
 8007d0c:	e7be      	b.n	8007c8c <USBD_CDC_Setup+0x1c>
 8007d0e:	f886 c040 	strb.w	ip, [r6, #64]	@ 0x40
 8007d12:	f886 2041 	strb.w	r2, [r6, #65]	@ 0x41
 8007d16:	4631      	mov	r1, r6
 8007d18:	f7f9 f9d6 	bl	80010c8 <USBD_CtlPrepareRx>
 8007d1c:	e7c8      	b.n	8007cb0 <USBD_CDC_Setup+0x40>
 8007d1e:	88e2      	ldrh	r2, [r4, #6]
 8007d20:	4904      	ldr	r1, [pc, #16]	@ (8007d34 <USBD_CDC_Setup+0xc4>)
 8007d22:	4628      	mov	r0, r5
 8007d24:	f7f9 f9ba 	bl	800109c <USBD_CtlSendData>
 8007d28:	e7c2      	b.n	8007cb0 <USBD_CDC_Setup+0x40>
 8007d2a:	bf00      	nop
 8007d2c:	20000060 	.word	0x20000060
 8007d30:	200014e4 	.word	0x200014e4
 8007d34:	20000118 	.word	0x20000118

08007d38 <USBD_CDC_DeInit>:
 8007d38:	b510      	push	{r4, lr}
 8007d3a:	2181      	movs	r1, #129	@ 0x81
 8007d3c:	4604      	mov	r4, r0
 8007d3e:	f7fb fe77 	bl	8003a30 <USBD_LL_CloseEP>
 8007d42:	2101      	movs	r1, #1
 8007d44:	4620      	mov	r0, r4
 8007d46:	f7fb fe73 	bl	8003a30 <USBD_LL_CloseEP>
 8007d4a:	2182      	movs	r1, #130	@ 0x82
 8007d4c:	4620      	mov	r0, r4
 8007d4e:	f7fb fe6f 	bl	8003a30 <USBD_LL_CloseEP>
 8007d52:	2183      	movs	r1, #131	@ 0x83
 8007d54:	4620      	mov	r0, r4
 8007d56:	f7fb fe6b 	bl	8003a30 <USBD_LL_CloseEP>
 8007d5a:	2103      	movs	r1, #3
 8007d5c:	4620      	mov	r0, r4
 8007d5e:	f7fb fe67 	bl	8003a30 <USBD_LL_CloseEP>
 8007d62:	f8d4 3218 	ldr.w	r3, [r4, #536]	@ 0x218
 8007d66:	b153      	cbz	r3, 8007d7e <USBD_CDC_DeInit+0x46>
 8007d68:	f8d4 321c 	ldr.w	r3, [r4, #540]	@ 0x21c
 8007d6c:	685b      	ldr	r3, [r3, #4]
 8007d6e:	4798      	blx	r3
 8007d70:	f8d4 0218 	ldr.w	r0, [r4, #536]	@ 0x218
 8007d74:	f01b fa4c 	bl	8023210 <free>
 8007d78:	2300      	movs	r3, #0
 8007d7a:	f8c4 3218 	str.w	r3, [r4, #536]	@ 0x218
 8007d7e:	2000      	movs	r0, #0
 8007d80:	bd10      	pop	{r4, pc}
 8007d82:	bf00      	nop

08007d84 <USBD_CDC_Init>:
 8007d84:	b570      	push	{r4, r5, r6, lr}
 8007d86:	2340      	movs	r3, #64	@ 0x40
 8007d88:	4604      	mov	r4, r0
 8007d8a:	2202      	movs	r2, #2
 8007d8c:	2181      	movs	r1, #129	@ 0x81
 8007d8e:	f7fb fe41 	bl	8003a14 <USBD_LL_OpenEP>
 8007d92:	2340      	movs	r3, #64	@ 0x40
 8007d94:	2202      	movs	r2, #2
 8007d96:	2101      	movs	r1, #1
 8007d98:	4620      	mov	r0, r4
 8007d9a:	f7fb fe3b 	bl	8003a14 <USBD_LL_OpenEP>
 8007d9e:	2340      	movs	r3, #64	@ 0x40
 8007da0:	2202      	movs	r2, #2
 8007da2:	2183      	movs	r1, #131	@ 0x83
 8007da4:	4620      	mov	r0, r4
 8007da6:	f7fb fe35 	bl	8003a14 <USBD_LL_OpenEP>
 8007daa:	2340      	movs	r3, #64	@ 0x40
 8007dac:	2202      	movs	r2, #2
 8007dae:	2103      	movs	r1, #3
 8007db0:	4620      	mov	r0, r4
 8007db2:	f7fb fe2f 	bl	8003a14 <USBD_LL_OpenEP>
 8007db6:	2308      	movs	r3, #8
 8007db8:	2203      	movs	r2, #3
 8007dba:	2182      	movs	r1, #130	@ 0x82
 8007dbc:	4620      	mov	r0, r4
 8007dbe:	f7fb fe29 	bl	8003a14 <USBD_LL_OpenEP>
 8007dc2:	2074      	movs	r0, #116	@ 0x74
 8007dc4:	f01b fa1c 	bl	8023200 <malloc>
 8007dc8:	f8c4 0218 	str.w	r0, [r4, #536]	@ 0x218
 8007dcc:	b1d8      	cbz	r0, 8007e06 <USBD_CDC_Init+0x82>
 8007dce:	f8d4 321c 	ldr.w	r3, [r4, #540]	@ 0x21c
 8007dd2:	4605      	mov	r5, r0
 8007dd4:	2600      	movs	r6, #0
 8007dd6:	681b      	ldr	r3, [r3, #0]
 8007dd8:	4798      	blx	r3
 8007dda:	f885 604c 	strb.w	r6, [r5, #76]	@ 0x4c
 8007dde:	6d2a      	ldr	r2, [r5, #80]	@ 0x50
 8007de0:	f885 6058 	strb.w	r6, [r5, #88]	@ 0x58
 8007de4:	2340      	movs	r3, #64	@ 0x40
 8007de6:	f885 6064 	strb.w	r6, [r5, #100]	@ 0x64
 8007dea:	2101      	movs	r1, #1
 8007dec:	f885 6070 	strb.w	r6, [r5, #112]	@ 0x70
 8007df0:	4620      	mov	r0, r4
 8007df2:	f7fb fe6d 	bl	8003ad0 <USBD_LL_PrepareReceive>
 8007df6:	6eaa      	ldr	r2, [r5, #104]	@ 0x68
 8007df8:	2340      	movs	r3, #64	@ 0x40
 8007dfa:	2103      	movs	r1, #3
 8007dfc:	4620      	mov	r0, r4
 8007dfe:	f7fb fe67 	bl	8003ad0 <USBD_LL_PrepareReceive>
 8007e02:	4630      	mov	r0, r6
 8007e04:	bd70      	pop	{r4, r5, r6, pc}
 8007e06:	2001      	movs	r0, #1
 8007e08:	bd70      	pop	{r4, r5, r6, pc}
 8007e0a:	bf00      	nop

08007e0c <USBD_CDC_GetHSCfgDesc>:
 8007e0c:	236a      	movs	r3, #106	@ 0x6a
 8007e0e:	8003      	strh	r3, [r0, #0]
 8007e10:	4800      	ldr	r0, [pc, #0]	@ (8007e14 <USBD_CDC_GetHSCfgDesc+0x8>)
 8007e12:	4770      	bx	lr
 8007e14:	20000140 	.word	0x20000140

08007e18 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8007e18:	236a      	movs	r3, #106	@ 0x6a
 8007e1a:	8003      	strh	r3, [r0, #0]
 8007e1c:	4800      	ldr	r0, [pc, #0]	@ (8007e20 <USBD_CDC_GetOtherSpeedCfgDesc+0x8>)
 8007e1e:	4770      	bx	lr
 8007e20:	20000140 	.word	0x20000140

08007e24 <USBD_CDC_RegisterInterface>:
 8007e24:	b119      	cbz	r1, 8007e2e <USBD_CDC_RegisterInterface+0xa>
 8007e26:	f8c0 121c 	str.w	r1, [r0, #540]	@ 0x21c
 8007e2a:	2000      	movs	r0, #0
 8007e2c:	4770      	bx	lr
 8007e2e:	2002      	movs	r0, #2
 8007e30:	4770      	bx	lr
 8007e32:	bf00      	nop

08007e34 <USBD_CDC_SetTxBuffer>:
 8007e34:	2b01      	cmp	r3, #1
 8007e36:	f8d0 0218 	ldr.w	r0, [r0, #536]	@ 0x218
 8007e3a:	d009      	beq.n	8007e50 <USBD_CDC_SetTxBuffer+0x1c>
 8007e3c:	2b03      	cmp	r3, #3
 8007e3e:	d105      	bne.n	8007e4c <USBD_CDC_SetTxBuffer+0x18>
 8007e40:	f100 035c 	add.w	r3, r0, #92	@ 0x5c
 8007e44:	e9c3 1200 	strd	r1, r2, [r3]
 8007e48:	2000      	movs	r0, #0
 8007e4a:	4770      	bx	lr
 8007e4c:	2002      	movs	r0, #2
 8007e4e:	4770      	bx	lr
 8007e50:	f100 0344 	add.w	r3, r0, #68	@ 0x44
 8007e54:	e9c3 1200 	strd	r1, r2, [r3]
 8007e58:	2000      	movs	r0, #0
 8007e5a:	4770      	bx	lr

08007e5c <USBD_CDC_SetRxBuffer>:
 8007e5c:	2a01      	cmp	r2, #1
 8007e5e:	f8d0 3218 	ldr.w	r3, [r0, #536]	@ 0x218
 8007e62:	d007      	beq.n	8007e74 <USBD_CDC_SetRxBuffer+0x18>
 8007e64:	2a03      	cmp	r2, #3
 8007e66:	d103      	bne.n	8007e70 <USBD_CDC_SetRxBuffer+0x14>
 8007e68:	3368      	adds	r3, #104	@ 0x68
 8007e6a:	2000      	movs	r0, #0
 8007e6c:	6019      	str	r1, [r3, #0]
 8007e6e:	4770      	bx	lr
 8007e70:	2002      	movs	r0, #2
 8007e72:	4770      	bx	lr
 8007e74:	3350      	adds	r3, #80	@ 0x50
 8007e76:	2000      	movs	r0, #0
 8007e78:	6019      	str	r1, [r3, #0]
 8007e7a:	4770      	bx	lr

08007e7c <USBD_CDC_TransmitPacket>:
 8007e7c:	f8d0 2218 	ldr.w	r2, [r0, #536]	@ 0x218
 8007e80:	b510      	push	{r4, lr}
 8007e82:	b16a      	cbz	r2, 8007ea0 <USBD_CDC_TransmitPacket+0x24>
 8007e84:	2901      	cmp	r1, #1
 8007e86:	d00e      	beq.n	8007ea6 <USBD_CDC_TransmitPacket+0x2a>
 8007e88:	2903      	cmp	r1, #3
 8007e8a:	d109      	bne.n	8007ea0 <USBD_CDC_TransmitPacket+0x24>
 8007e8c:	f892 3064 	ldrb.w	r3, [r2, #100]	@ 0x64
 8007e90:	325c      	adds	r2, #92	@ 0x5c
 8007e92:	2183      	movs	r1, #131	@ 0x83
 8007e94:	f003 04ff 	and.w	r4, r3, #255	@ 0xff
 8007e98:	b16b      	cbz	r3, 8007eb6 <USBD_CDC_TransmitPacket+0x3a>
 8007e9a:	2401      	movs	r4, #1
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	bd10      	pop	{r4, pc}
 8007ea0:	2402      	movs	r4, #2
 8007ea2:	4620      	mov	r0, r4
 8007ea4:	bd10      	pop	{r4, pc}
 8007ea6:	f892 304c 	ldrb.w	r3, [r2, #76]	@ 0x4c
 8007eaa:	3244      	adds	r2, #68	@ 0x44
 8007eac:	2181      	movs	r1, #129	@ 0x81
 8007eae:	f003 04ff 	and.w	r4, r3, #255	@ 0xff
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d1f1      	bne.n	8007e9a <USBD_CDC_TransmitPacket+0x1e>
 8007eb6:	2301      	movs	r3, #1
 8007eb8:	7213      	strb	r3, [r2, #8]
 8007eba:	8893      	ldrh	r3, [r2, #4]
 8007ebc:	6812      	ldr	r2, [r2, #0]
 8007ebe:	f7fb fdfb 	bl	8003ab8 <USBD_LL_Transmit>
 8007ec2:	4620      	mov	r0, r4
 8007ec4:	bd10      	pop	{r4, pc}
 8007ec6:	bf00      	nop

08007ec8 <USBD_CDC_ReceivePacket>:
 8007ec8:	b508      	push	{r3, lr}
 8007eca:	f8d0 3218 	ldr.w	r3, [r0, #536]	@ 0x218
 8007ece:	b11b      	cbz	r3, 8007ed8 <USBD_CDC_ReceivePacket+0x10>
 8007ed0:	2901      	cmp	r1, #1
 8007ed2:	d00a      	beq.n	8007eea <USBD_CDC_ReceivePacket+0x22>
 8007ed4:	2903      	cmp	r1, #3
 8007ed6:	d001      	beq.n	8007edc <USBD_CDC_ReceivePacket+0x14>
 8007ed8:	2002      	movs	r0, #2
 8007eda:	bd08      	pop	{r3, pc}
 8007edc:	3368      	adds	r3, #104	@ 0x68
 8007ede:	681a      	ldr	r2, [r3, #0]
 8007ee0:	2340      	movs	r3, #64	@ 0x40
 8007ee2:	f7fb fdf5 	bl	8003ad0 <USBD_LL_PrepareReceive>
 8007ee6:	2000      	movs	r0, #0
 8007ee8:	bd08      	pop	{r3, pc}
 8007eea:	3350      	adds	r3, #80	@ 0x50
 8007eec:	e7f7      	b.n	8007ede <USBD_CDC_ReceivePacket+0x16>
 8007eee:	bf00      	nop

08007ef0 <HAL_ADCEx_InjectedGetValue>:
 8007ef0:	6803      	ldr	r3, [r0, #0]
 8007ef2:	b082      	sub	sp, #8
 8007ef4:	2000      	movs	r0, #0
 8007ef6:	f06f 0204 	mvn.w	r2, #4
 8007efa:	3901      	subs	r1, #1
 8007efc:	9001      	str	r0, [sp, #4]
 8007efe:	601a      	str	r2, [r3, #0]
 8007f00:	2903      	cmp	r1, #3
 8007f02:	d805      	bhi.n	8007f10 <HAL_ADCEx_InjectedGetValue+0x20>
 8007f04:	e8df f001 	tbb	[pc, r1]
 8007f08:	02070c11 	.word	0x02070c11
 8007f0c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007f0e:	9301      	str	r3, [sp, #4]
 8007f10:	9801      	ldr	r0, [sp, #4]
 8007f12:	b002      	add	sp, #8
 8007f14:	4770      	bx	lr
 8007f16:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007f18:	9301      	str	r3, [sp, #4]
 8007f1a:	9801      	ldr	r0, [sp, #4]
 8007f1c:	b002      	add	sp, #8
 8007f1e:	4770      	bx	lr
 8007f20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007f22:	9301      	str	r3, [sp, #4]
 8007f24:	9801      	ldr	r0, [sp, #4]
 8007f26:	b002      	add	sp, #8
 8007f28:	4770      	bx	lr
 8007f2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007f2c:	9301      	str	r3, [sp, #4]
 8007f2e:	9801      	ldr	r0, [sp, #4]
 8007f30:	b002      	add	sp, #8
 8007f32:	4770      	bx	lr

08007f34 <HAL_ADCEx_InjectedConfigChannel>:
 8007f34:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8007f38:	2b01      	cmp	r3, #1
 8007f3a:	f000 80bf 	beq.w	80080bc <HAL_ADCEx_InjectedConfigChannel+0x188>
 8007f3e:	2301      	movs	r3, #1
 8007f40:	b570      	push	{r4, r5, r6, lr}
 8007f42:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
 8007f46:	680c      	ldr	r4, [r1, #0]
 8007f48:	6803      	ldr	r3, [r0, #0]
 8007f4a:	688a      	ldr	r2, [r1, #8]
 8007f4c:	2c09      	cmp	r4, #9
 8007f4e:	4684      	mov	ip, r0
 8007f50:	b2a0      	uxth	r0, r4
 8007f52:	d85f      	bhi.n	8008014 <HAL_ADCEx_InjectedConfigChannel+0xe0>
 8007f54:	691d      	ldr	r5, [r3, #16]
 8007f56:	eb04 0e44 	add.w	lr, r4, r4, lsl #1
 8007f5a:	2607      	movs	r6, #7
 8007f5c:	fa06 f60e 	lsl.w	r6, r6, lr
 8007f60:	ea25 0506 	bic.w	r5, r5, r6
 8007f64:	611d      	str	r5, [r3, #16]
 8007f66:	691d      	ldr	r5, [r3, #16]
 8007f68:	fa02 f20e 	lsl.w	r2, r2, lr
 8007f6c:	432a      	orrs	r2, r5
 8007f6e:	611a      	str	r2, [r3, #16]
 8007f70:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007f72:	690e      	ldr	r6, [r1, #16]
 8007f74:	684d      	ldr	r5, [r1, #4]
 8007f76:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007f7a:	639a      	str	r2, [r3, #56]	@ 0x38
 8007f7c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007f7e:	f106 3eff 	add.w	lr, r6, #4294967295	@ 0xffffffff
 8007f82:	ea42 520e 	orr.w	r2, r2, lr, lsl #20
 8007f86:	639a      	str	r2, [r3, #56]	@ 0x38
 8007f88:	1cea      	adds	r2, r5, #3
 8007f8a:	1b92      	subs	r2, r2, r6
 8007f8c:	b2d2      	uxtb	r2, r2
 8007f8e:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
 8007f90:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8007f94:	f04f 0e1f 	mov.w	lr, #31
 8007f98:	4090      	lsls	r0, r2
 8007f9a:	fa0e f202 	lsl.w	r2, lr, r2
 8007f9e:	ea26 0202 	bic.w	r2, r6, r2
 8007fa2:	639a      	str	r2, [r3, #56]	@ 0x38
 8007fa4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007fa6:	4310      	orrs	r0, r2
 8007fa8:	6398      	str	r0, [r3, #56]	@ 0x38
 8007faa:	69ca      	ldr	r2, [r1, #28]
 8007fac:	4844      	ldr	r0, [pc, #272]	@ (80080c0 <HAL_ADCEx_InjectedConfigChannel+0x18c>)
 8007fae:	4282      	cmp	r2, r0
 8007fb0:	d064      	beq.n	800807c <HAL_ADCEx_InjectedConfigChannel+0x148>
 8007fb2:	6898      	ldr	r0, [r3, #8]
 8007fb4:	f420 2070 	bic.w	r0, r0, #983040	@ 0xf0000
 8007fb8:	6098      	str	r0, [r3, #8]
 8007fba:	6898      	ldr	r0, [r3, #8]
 8007fbc:	4302      	orrs	r2, r0
 8007fbe:	609a      	str	r2, [r3, #8]
 8007fc0:	689a      	ldr	r2, [r3, #8]
 8007fc2:	6a08      	ldr	r0, [r1, #32]
 8007fc4:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 8007fc8:	609a      	str	r2, [r3, #8]
 8007fca:	689a      	ldr	r2, [r3, #8]
 8007fcc:	4302      	orrs	r2, r0
 8007fce:	609a      	str	r2, [r3, #8]
 8007fd0:	698a      	ldr	r2, [r1, #24]
 8007fd2:	2a00      	cmp	r2, #0
 8007fd4:	d04d      	beq.n	8008072 <HAL_ADCEx_InjectedConfigChannel+0x13e>
 8007fd6:	685a      	ldr	r2, [r3, #4]
 8007fd8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8007fdc:	605a      	str	r2, [r3, #4]
 8007fde:	694a      	ldr	r2, [r1, #20]
 8007fe0:	b342      	cbz	r2, 8008034 <HAL_ADCEx_InjectedConfigChannel+0x100>
 8007fe2:	685a      	ldr	r2, [r3, #4]
 8007fe4:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8007fe8:	605a      	str	r2, [r3, #4]
 8007fea:	2d02      	cmp	r5, #2
 8007fec:	68ca      	ldr	r2, [r1, #12]
 8007fee:	d028      	beq.n	8008042 <HAL_ADCEx_InjectedConfigChannel+0x10e>
 8007ff0:	2d03      	cmp	r5, #3
 8007ff2:	d054      	beq.n	800809e <HAL_ADCEx_InjectedConfigChannel+0x16a>
 8007ff4:	2d01      	cmp	r5, #1
 8007ff6:	d14a      	bne.n	800808e <HAL_ADCEx_InjectedConfigChannel+0x15a>
 8007ff8:	6959      	ldr	r1, [r3, #20]
 8007ffa:	f36f 010b 	bfc	r1, #0, #12
 8007ffe:	6159      	str	r1, [r3, #20]
 8008000:	6959      	ldr	r1, [r3, #20]
 8008002:	430a      	orrs	r2, r1
 8008004:	615a      	str	r2, [r3, #20]
 8008006:	4a2f      	ldr	r2, [pc, #188]	@ (80080c4 <HAL_ADCEx_InjectedConfigChannel+0x190>)
 8008008:	4293      	cmp	r3, r2
 800800a:	d024      	beq.n	8008056 <HAL_ADCEx_InjectedConfigChannel+0x122>
 800800c:	2000      	movs	r0, #0
 800800e:	f88c 003c 	strb.w	r0, [ip, #60]	@ 0x3c
 8008012:	bd70      	pop	{r4, r5, r6, pc}
 8008014:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 8008018:	68de      	ldr	r6, [r3, #12]
 800801a:	3d1e      	subs	r5, #30
 800801c:	f04f 0e07 	mov.w	lr, #7
 8008020:	40aa      	lsls	r2, r5
 8008022:	fa0e f505 	lsl.w	r5, lr, r5
 8008026:	ea26 0505 	bic.w	r5, r6, r5
 800802a:	60dd      	str	r5, [r3, #12]
 800802c:	68dd      	ldr	r5, [r3, #12]
 800802e:	432a      	orrs	r2, r5
 8008030:	60da      	str	r2, [r3, #12]
 8008032:	e79d      	b.n	8007f70 <HAL_ADCEx_InjectedConfigChannel+0x3c>
 8008034:	685a      	ldr	r2, [r3, #4]
 8008036:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800803a:	605a      	str	r2, [r3, #4]
 800803c:	2d02      	cmp	r5, #2
 800803e:	68ca      	ldr	r2, [r1, #12]
 8008040:	d1d6      	bne.n	8007ff0 <HAL_ADCEx_InjectedConfigChannel+0xbc>
 8008042:	6999      	ldr	r1, [r3, #24]
 8008044:	f36f 010b 	bfc	r1, #0, #12
 8008048:	6199      	str	r1, [r3, #24]
 800804a:	6999      	ldr	r1, [r3, #24]
 800804c:	430a      	orrs	r2, r1
 800804e:	619a      	str	r2, [r3, #24]
 8008050:	4a1c      	ldr	r2, [pc, #112]	@ (80080c4 <HAL_ADCEx_InjectedConfigChannel+0x190>)
 8008052:	4293      	cmp	r3, r2
 8008054:	d1da      	bne.n	800800c <HAL_ADCEx_InjectedConfigChannel+0xd8>
 8008056:	2c12      	cmp	r4, #18
 8008058:	d029      	beq.n	80080ae <HAL_ADCEx_InjectedConfigChannel+0x17a>
 800805a:	3c10      	subs	r4, #16
 800805c:	2c01      	cmp	r4, #1
 800805e:	d8d5      	bhi.n	800800c <HAL_ADCEx_InjectedConfigChannel+0xd8>
 8008060:	4a19      	ldr	r2, [pc, #100]	@ (80080c8 <HAL_ADCEx_InjectedConfigChannel+0x194>)
 8008062:	6853      	ldr	r3, [r2, #4]
 8008064:	2000      	movs	r0, #0
 8008066:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800806a:	6053      	str	r3, [r2, #4]
 800806c:	f88c 003c 	strb.w	r0, [ip, #60]	@ 0x3c
 8008070:	bd70      	pop	{r4, r5, r6, pc}
 8008072:	685a      	ldr	r2, [r3, #4]
 8008074:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008078:	605a      	str	r2, [r3, #4]
 800807a:	e7b0      	b.n	8007fde <HAL_ADCEx_InjectedConfigChannel+0xaa>
 800807c:	689a      	ldr	r2, [r3, #8]
 800807e:	f422 2270 	bic.w	r2, r2, #983040	@ 0xf0000
 8008082:	609a      	str	r2, [r3, #8]
 8008084:	689a      	ldr	r2, [r3, #8]
 8008086:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
 800808a:	609a      	str	r2, [r3, #8]
 800808c:	e7a0      	b.n	8007fd0 <HAL_ADCEx_InjectedConfigChannel+0x9c>
 800808e:	6a19      	ldr	r1, [r3, #32]
 8008090:	f36f 010b 	bfc	r1, #0, #12
 8008094:	6219      	str	r1, [r3, #32]
 8008096:	6a19      	ldr	r1, [r3, #32]
 8008098:	430a      	orrs	r2, r1
 800809a:	621a      	str	r2, [r3, #32]
 800809c:	e7b3      	b.n	8008006 <HAL_ADCEx_InjectedConfigChannel+0xd2>
 800809e:	69d9      	ldr	r1, [r3, #28]
 80080a0:	f36f 010b 	bfc	r1, #0, #12
 80080a4:	61d9      	str	r1, [r3, #28]
 80080a6:	69d9      	ldr	r1, [r3, #28]
 80080a8:	430a      	orrs	r2, r1
 80080aa:	61da      	str	r2, [r3, #28]
 80080ac:	e7ab      	b.n	8008006 <HAL_ADCEx_InjectedConfigChannel+0xd2>
 80080ae:	f8d2 3304 	ldr.w	r3, [r2, #772]	@ 0x304
 80080b2:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80080b6:	f8c2 3304 	str.w	r3, [r2, #772]	@ 0x304
 80080ba:	e7a7      	b.n	800800c <HAL_ADCEx_InjectedConfigChannel+0xd8>
 80080bc:	2002      	movs	r0, #2
 80080be:	4770      	bx	lr
 80080c0:	000f0001 	.word	0x000f0001
 80080c4:	40012000 	.word	0x40012000
 80080c8:	40012300 	.word	0x40012300

080080cc <SystemInit>:
 80080cc:	4910      	ldr	r1, [pc, #64]	@ (8008110 <SystemInit+0x44>)
 80080ce:	4b11      	ldr	r3, [pc, #68]	@ (8008114 <SystemInit+0x48>)
 80080d0:	f8d1 2088 	ldr.w	r2, [r1, #136]	@ 0x88
 80080d4:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 80080d8:	b410      	push	{r4}
 80080da:	f8c1 2088 	str.w	r2, [r1, #136]	@ 0x88
 80080de:	681a      	ldr	r2, [r3, #0]
 80080e0:	4c0d      	ldr	r4, [pc, #52]	@ (8008118 <SystemInit+0x4c>)
 80080e2:	2000      	movs	r0, #0
 80080e4:	f042 0201 	orr.w	r2, r2, #1
 80080e8:	601a      	str	r2, [r3, #0]
 80080ea:	6098      	str	r0, [r3, #8]
 80080ec:	681a      	ldr	r2, [r3, #0]
 80080ee:	f022 7284 	bic.w	r2, r2, #17301504	@ 0x1080000
 80080f2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80080f6:	601a      	str	r2, [r3, #0]
 80080f8:	605c      	str	r4, [r3, #4]
 80080fa:	681a      	ldr	r2, [r3, #0]
 80080fc:	f04f 6400 	mov.w	r4, #134217728	@ 0x8000000
 8008100:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8008104:	601a      	str	r2, [r3, #0]
 8008106:	60d8      	str	r0, [r3, #12]
 8008108:	608c      	str	r4, [r1, #8]
 800810a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800810e:	4770      	bx	lr
 8008110:	e000ed00 	.word	0xe000ed00
 8008114:	40023800 	.word	0x40023800
 8008118:	24003010 	.word	0x24003010

0800811c <MX_GPIO_Init>:
 800811c:	b530      	push	{r4, r5, lr}
 800811e:	b08d      	sub	sp, #52	@ 0x34
 8008120:	4b3d      	ldr	r3, [pc, #244]	@ (8008218 <MX_GPIO_Init+0xfc>)
 8008122:	483e      	ldr	r0, [pc, #248]	@ (800821c <MX_GPIO_Init+0x100>)
 8008124:	2400      	movs	r4, #0
 8008126:	9401      	str	r4, [sp, #4]
 8008128:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800812a:	f042 0204 	orr.w	r2, r2, #4
 800812e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008130:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008132:	f001 0104 	and.w	r1, r1, #4
 8008136:	9101      	str	r1, [sp, #4]
 8008138:	9901      	ldr	r1, [sp, #4]
 800813a:	9402      	str	r4, [sp, #8]
 800813c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800813e:	f041 0180 	orr.w	r1, r1, #128	@ 0x80
 8008142:	6319      	str	r1, [r3, #48]	@ 0x30
 8008144:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008146:	f001 0180 	and.w	r1, r1, #128	@ 0x80
 800814a:	9102      	str	r1, [sp, #8]
 800814c:	9902      	ldr	r1, [sp, #8]
 800814e:	9403      	str	r4, [sp, #12]
 8008150:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008152:	2201      	movs	r2, #1
 8008154:	4311      	orrs	r1, r2
 8008156:	6319      	str	r1, [r3, #48]	@ 0x30
 8008158:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800815a:	4011      	ands	r1, r2
 800815c:	9103      	str	r1, [sp, #12]
 800815e:	9903      	ldr	r1, [sp, #12]
 8008160:	9404      	str	r4, [sp, #16]
 8008162:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008164:	f041 0102 	orr.w	r1, r1, #2
 8008168:	6319      	str	r1, [r3, #48]	@ 0x30
 800816a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800816c:	f001 0102 	and.w	r1, r1, #2
 8008170:	9104      	str	r1, [sp, #16]
 8008172:	9904      	ldr	r1, [sp, #16]
 8008174:	9405      	str	r4, [sp, #20]
 8008176:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008178:	f041 0108 	orr.w	r1, r1, #8
 800817c:	6319      	str	r1, [r3, #48]	@ 0x30
 800817e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008180:	f003 0308 	and.w	r3, r3, #8
 8008184:	9305      	str	r3, [sp, #20]
 8008186:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 800818a:	9b05      	ldr	r3, [sp, #20]
 800818c:	f002 f99e 	bl	800a4cc <HAL_GPIO_WritePin>
 8008190:	4622      	mov	r2, r4
 8008192:	4823      	ldr	r0, [pc, #140]	@ (8008220 <MX_GPIO_Init+0x104>)
 8008194:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008198:	f002 f998 	bl	800a4cc <HAL_GPIO_WritePin>
 800819c:	2501      	movs	r5, #1
 800819e:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 80081a2:	a906      	add	r1, sp, #24
 80081a4:	481d      	ldr	r0, [pc, #116]	@ (800821c <MX_GPIO_Init+0x100>)
 80081a6:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80081aa:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80081ae:	f001 ffb3 	bl	800a118 <HAL_GPIO_Init>
 80081b2:	a906      	add	r1, sp, #24
 80081b4:	f248 2210 	movw	r2, #33296	@ 0x8210
 80081b8:	2300      	movs	r3, #0
 80081ba:	4818      	ldr	r0, [pc, #96]	@ (800821c <MX_GPIO_Init+0x100>)
 80081bc:	9408      	str	r4, [sp, #32]
 80081be:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80081c2:	f001 ffa9 	bl	800a118 <HAL_GPIO_Init>
 80081c6:	220c      	movs	r2, #12
 80081c8:	2300      	movs	r3, #0
 80081ca:	a906      	add	r1, sp, #24
 80081cc:	4814      	ldr	r0, [pc, #80]	@ (8008220 <MX_GPIO_Init+0x104>)
 80081ce:	9408      	str	r4, [sp, #32]
 80081d0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80081d4:	f001 ffa0 	bl	800a118 <HAL_GPIO_Init>
 80081d8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80081dc:	a906      	add	r1, sp, #24
 80081de:	4810      	ldr	r0, [pc, #64]	@ (8008220 <MX_GPIO_Init+0x104>)
 80081e0:	9306      	str	r3, [sp, #24]
 80081e2:	e9cd 5407 	strd	r5, r4, [sp, #28]
 80081e6:	9409      	str	r4, [sp, #36]	@ 0x24
 80081e8:	f001 ff96 	bl	800a118 <HAL_GPIO_Init>
 80081ec:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80081f0:	2300      	movs	r3, #0
 80081f2:	a906      	add	r1, sp, #24
 80081f4:	480b      	ldr	r0, [pc, #44]	@ (8008224 <MX_GPIO_Init+0x108>)
 80081f6:	9408      	str	r4, [sp, #32]
 80081f8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80081fc:	f001 ff8c 	bl	800a118 <HAL_GPIO_Init>
 8008200:	2204      	movs	r2, #4
 8008202:	2300      	movs	r3, #0
 8008204:	4808      	ldr	r0, [pc, #32]	@ (8008228 <MX_GPIO_Init+0x10c>)
 8008206:	9508      	str	r5, [sp, #32]
 8008208:	a906      	add	r1, sp, #24
 800820a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800820e:	f001 ff83 	bl	800a118 <HAL_GPIO_Init>
 8008212:	b00d      	add	sp, #52	@ 0x34
 8008214:	bd30      	pop	{r4, r5, pc}
 8008216:	bf00      	nop
 8008218:	40023800 	.word	0x40023800
 800821c:	40020800 	.word	0x40020800
 8008220:	40020400 	.word	0x40020400
 8008224:	40020000 	.word	0x40020000
 8008228:	40020c00 	.word	0x40020c00

0800822c <GPIO_subscribe>:
 800822c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008230:	4f2b      	ldr	r7, [pc, #172]	@ (80082e0 <GPIO_subscribe+0xb4>)
 8008232:	683e      	ldr	r6, [r7, #0]
 8008234:	b087      	sub	sp, #28
 8008236:	460c      	mov	r4, r1
 8008238:	2e00      	cmp	r6, #0
 800823a:	d044      	beq.n	80082c6 <GPIO_subscribe+0x9a>
 800823c:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 80082f0 <GPIO_subscribe+0xc4>
 8008240:	ea4f 1906 	mov.w	r9, r6, lsl #4
 8008244:	46c4      	mov	ip, r8
 8008246:	eb08 1e06 	add.w	lr, r8, r6, lsl #4
 800824a:	2500      	movs	r5, #0
 800824c:	e003      	b.n	8008256 <GPIO_subscribe+0x2a>
 800824e:	f10c 0c10 	add.w	ip, ip, #16
 8008252:	45e6      	cmp	lr, ip
 8008254:	d00c      	beq.n	8008270 <GPIO_subscribe+0x44>
 8008256:	f8dc 1000 	ldr.w	r1, [ip]
 800825a:	4288      	cmp	r0, r1
 800825c:	d1f7      	bne.n	800824e <GPIO_subscribe+0x22>
 800825e:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8008262:	42a1      	cmp	r1, r4
 8008264:	bf08      	it	eq
 8008266:	4665      	moveq	r5, ip
 8008268:	f10c 0c10 	add.w	ip, ip, #16
 800826c:	45e6      	cmp	lr, ip
 800826e:	d1f2      	bne.n	8008256 <GPIO_subscribe+0x2a>
 8008270:	b315      	cbz	r5, 80082b8 <GPIO_subscribe+0x8c>
 8008272:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8008274:	60ab      	str	r3, [r5, #8]
 8008276:	4b1b      	ldr	r3, [pc, #108]	@ (80082e4 <GPIO_subscribe+0xb8>)
 8008278:	80ac      	strh	r4, [r5, #4]
 800827a:	60e9      	str	r1, [r5, #12]
 800827c:	6028      	str	r0, [r5, #0]
 800827e:	a901      	add	r1, sp, #4
 8008280:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8008284:	9203      	str	r2, [sp, #12]
 8008286:	f001 ff47 	bl	800a118 <HAL_GPIO_Init>
 800828a:	4b17      	ldr	r3, [pc, #92]	@ (80082e8 <GPIO_subscribe+0xbc>)
 800828c:	615c      	str	r4, [r3, #20]
 800828e:	0864      	lsrs	r4, r4, #1
 8008290:	d01c      	beq.n	80082cc <GPIO_subscribe+0xa0>
 8008292:	fab4 f484 	clz	r4, r4
 8008296:	f1c4 0420 	rsb	r4, r4, #32
 800829a:	4b14      	ldr	r3, [pc, #80]	@ (80082ec <GPIO_subscribe+0xc0>)
 800829c:	b2a4      	uxth	r4, r4
 800829e:	2200      	movs	r2, #0
 80082a0:	571c      	ldrsb	r4, [r3, r4]
 80082a2:	4611      	mov	r1, r2
 80082a4:	4620      	mov	r0, r4
 80082a6:	f7f8 fe7f 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80082aa:	4620      	mov	r0, r4
 80082ac:	f7f8 feb8 	bl	8001020 <HAL_NVIC_EnableIRQ>
 80082b0:	2001      	movs	r0, #1
 80082b2:	b007      	add	sp, #28
 80082b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80082b8:	2e0a      	cmp	r6, #10
 80082ba:	d00e      	beq.n	80082da <GPIO_subscribe+0xae>
 80082bc:	eb08 0509 	add.w	r5, r8, r9
 80082c0:	3601      	adds	r6, #1
 80082c2:	603e      	str	r6, [r7, #0]
 80082c4:	e7d5      	b.n	8008272 <GPIO_subscribe+0x46>
 80082c6:	4d0a      	ldr	r5, [pc, #40]	@ (80082f0 <GPIO_subscribe+0xc4>)
 80082c8:	2601      	movs	r6, #1
 80082ca:	e7fa      	b.n	80082c2 <GPIO_subscribe+0x96>
 80082cc:	4622      	mov	r2, r4
 80082ce:	4621      	mov	r1, r4
 80082d0:	2006      	movs	r0, #6
 80082d2:	f7f8 fe69 	bl	8000fa8 <HAL_NVIC_SetPriority>
 80082d6:	2406      	movs	r4, #6
 80082d8:	e7e7      	b.n	80082aa <GPIO_subscribe+0x7e>
 80082da:	4628      	mov	r0, r5
 80082dc:	e7e9      	b.n	80082b2 <GPIO_subscribe+0x86>
 80082de:	bf00      	nop
 80082e0:	200014e8 	.word	0x200014e8
 80082e4:	10110000 	.word	0x10110000
 80082e8:	40013c00 	.word	0x40013c00
 80082ec:	0802abf4 	.word	0x0802abf4
 80082f0:	200014ec 	.word	0x200014ec

080082f4 <GPIO_unsubscribe>:
 80082f4:	4b16      	ldr	r3, [pc, #88]	@ (8008350 <GPIO_unsubscribe+0x5c>)
 80082f6:	681a      	ldr	r2, [r3, #0]
 80082f8:	b430      	push	{r4, r5}
 80082fa:	b1d2      	cbz	r2, 8008332 <GPIO_unsubscribe+0x3e>
 80082fc:	4b15      	ldr	r3, [pc, #84]	@ (8008354 <GPIO_unsubscribe+0x60>)
 80082fe:	2400      	movs	r4, #0
 8008300:	eb03 1c02 	add.w	ip, r3, r2, lsl #4
 8008304:	e006      	b.n	8008314 <GPIO_unsubscribe+0x20>
 8008306:	3310      	adds	r3, #16
 8008308:	428a      	cmp	r2, r1
 800830a:	bf08      	it	eq
 800830c:	f044 0401 	orreq.w	r4, r4, #1
 8008310:	459c      	cmp	ip, r3
 8008312:	d00b      	beq.n	800832c <GPIO_unsubscribe+0x38>
 8008314:	681d      	ldr	r5, [r3, #0]
 8008316:	889a      	ldrh	r2, [r3, #4]
 8008318:	4285      	cmp	r5, r0
 800831a:	d1f4      	bne.n	8008306 <GPIO_unsubscribe+0x12>
 800831c:	428a      	cmp	r2, r1
 800831e:	d1f2      	bne.n	8008306 <GPIO_unsubscribe+0x12>
 8008320:	2200      	movs	r2, #0
 8008322:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8008326:	3310      	adds	r3, #16
 8008328:	459c      	cmp	ip, r3
 800832a:	d1f3      	bne.n	8008314 <GPIO_unsubscribe+0x20>
 800832c:	b10c      	cbz	r4, 8008332 <GPIO_unsubscribe+0x3e>
 800832e:	bc30      	pop	{r4, r5}
 8008330:	4770      	bx	lr
 8008332:	0849      	lsrs	r1, r1, #1
 8008334:	bf08      	it	eq
 8008336:	2006      	moveq	r0, #6
 8008338:	d006      	beq.n	8008348 <GPIO_unsubscribe+0x54>
 800833a:	fab1 f181 	clz	r1, r1
 800833e:	f1c1 0320 	rsb	r3, r1, #32
 8008342:	4a05      	ldr	r2, [pc, #20]	@ (8008358 <GPIO_unsubscribe+0x64>)
 8008344:	b29b      	uxth	r3, r3
 8008346:	56d0      	ldrsb	r0, [r2, r3]
 8008348:	bc30      	pop	{r4, r5}
 800834a:	f7f8 be75 	b.w	8001038 <HAL_NVIC_DisableIRQ>
 800834e:	bf00      	nop
 8008350:	200014e8 	.word	0x200014e8
 8008354:	200014ec 	.word	0x200014ec
 8008358:	0802abf4 	.word	0x0802abf4

0800835c <SetGPIO12toUART>:
 800835c:	b510      	push	{r4, lr}
 800835e:	4813      	ldr	r0, [pc, #76]	@ (80083ac <SetGPIO12toUART+0x50>)
 8008360:	b086      	sub	sp, #24
 8008362:	2101      	movs	r1, #1
 8008364:	f7ff ffc6 	bl	80082f4 <GPIO_unsubscribe>
 8008368:	4810      	ldr	r0, [pc, #64]	@ (80083ac <SetGPIO12toUART+0x50>)
 800836a:	2102      	movs	r1, #2
 800836c:	f7ff ffc2 	bl	80082f4 <GPIO_unsubscribe>
 8008370:	2001      	movs	r0, #1
 8008372:	2102      	movs	r1, #2
 8008374:	e9cd 0100 	strd	r0, r1, [sp]
 8008378:	2202      	movs	r2, #2
 800837a:	2303      	movs	r3, #3
 800837c:	2408      	movs	r4, #8
 800837e:	4669      	mov	r1, sp
 8008380:	480a      	ldr	r0, [pc, #40]	@ (80083ac <SetGPIO12toUART+0x50>)
 8008382:	9404      	str	r4, [sp, #16]
 8008384:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8008388:	f001 fec6 	bl	800a118 <HAL_GPIO_Init>
 800838c:	2202      	movs	r2, #2
 800838e:	2302      	movs	r3, #2
 8008390:	e9cd 2300 	strd	r2, r3, [sp]
 8008394:	4805      	ldr	r0, [pc, #20]	@ (80083ac <SetGPIO12toUART+0x50>)
 8008396:	9404      	str	r4, [sp, #16]
 8008398:	2200      	movs	r2, #0
 800839a:	2303      	movs	r3, #3
 800839c:	4669      	mov	r1, sp
 800839e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80083a2:	f001 feb9 	bl	800a118 <HAL_GPIO_Init>
 80083a6:	b006      	add	sp, #24
 80083a8:	bd10      	pop	{r4, pc}
 80083aa:	bf00      	nop
 80083ac:	40020000 	.word	0x40020000

080083b0 <HAL_GPIO_EXTI_Callback>:
 80083b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083b2:	4f0e      	ldr	r7, [pc, #56]	@ (80083ec <HAL_GPIO_EXTI_Callback+0x3c>)
 80083b4:	683b      	ldr	r3, [r7, #0]
 80083b6:	b1bb      	cbz	r3, 80083e8 <HAL_GPIO_EXTI_Callback+0x38>
 80083b8:	4c0d      	ldr	r4, [pc, #52]	@ (80083f0 <HAL_GPIO_EXTI_Callback+0x40>)
 80083ba:	4606      	mov	r6, r0
 80083bc:	2500      	movs	r5, #0
 80083be:	e005      	b.n	80083cc <HAL_GPIO_EXTI_Callback+0x1c>
 80083c0:	683b      	ldr	r3, [r7, #0]
 80083c2:	3501      	adds	r5, #1
 80083c4:	42ab      	cmp	r3, r5
 80083c6:	f104 0410 	add.w	r4, r4, #16
 80083ca:	d90d      	bls.n	80083e8 <HAL_GPIO_EXTI_Callback+0x38>
 80083cc:	88a3      	ldrh	r3, [r4, #4]
 80083ce:	42b3      	cmp	r3, r6
 80083d0:	d1f6      	bne.n	80083c0 <HAL_GPIO_EXTI_Callback+0x10>
 80083d2:	68a3      	ldr	r3, [r4, #8]
 80083d4:	2b00      	cmp	r3, #0
 80083d6:	d0f3      	beq.n	80083c0 <HAL_GPIO_EXTI_Callback+0x10>
 80083d8:	68e0      	ldr	r0, [r4, #12]
 80083da:	4798      	blx	r3
 80083dc:	683b      	ldr	r3, [r7, #0]
 80083de:	3501      	adds	r5, #1
 80083e0:	42ab      	cmp	r3, r5
 80083e2:	f104 0410 	add.w	r4, r4, #16
 80083e6:	d8f1      	bhi.n	80083cc <HAL_GPIO_EXTI_Callback+0x1c>
 80083e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80083ea:	bf00      	nop
 80083ec:	200014e8 	.word	0x200014e8
 80083f0:	200014ec 	.word	0x200014ec

080083f4 <prvAddCurrentTaskToDelayedList>:
 80083f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083f6:	4b21      	ldr	r3, [pc, #132]	@ (800847c <prvAddCurrentTaskToDelayedList+0x88>)
 80083f8:	4d21      	ldr	r5, [pc, #132]	@ (8008480 <prvAddCurrentTaskToDelayedList+0x8c>)
 80083fa:	681e      	ldr	r6, [r3, #0]
 80083fc:	682b      	ldr	r3, [r5, #0]
 80083fe:	4604      	mov	r4, r0
 8008400:	1d18      	adds	r0, r3, #4
 8008402:	460f      	mov	r7, r1
 8008404:	f7fd fc66 	bl	8005cd4 <uxListRemove>
 8008408:	b940      	cbnz	r0, 800841c <prvAddCurrentTaskToDelayedList+0x28>
 800840a:	682b      	ldr	r3, [r5, #0]
 800840c:	491d      	ldr	r1, [pc, #116]	@ (8008484 <prvAddCurrentTaskToDelayedList+0x90>)
 800840e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008410:	2201      	movs	r2, #1
 8008412:	409a      	lsls	r2, r3
 8008414:	680b      	ldr	r3, [r1, #0]
 8008416:	ea23 0302 	bic.w	r3, r3, r2
 800841a:	600b      	str	r3, [r1, #0]
 800841c:	1c63      	adds	r3, r4, #1
 800841e:	d00f      	beq.n	8008440 <prvAddCurrentTaskToDelayedList+0x4c>
 8008420:	682b      	ldr	r3, [r5, #0]
 8008422:	1934      	adds	r4, r6, r4
 8008424:	605c      	str	r4, [r3, #4]
 8008426:	d210      	bcs.n	800844a <prvAddCurrentTaskToDelayedList+0x56>
 8008428:	4b17      	ldr	r3, [pc, #92]	@ (8008488 <prvAddCurrentTaskToDelayedList+0x94>)
 800842a:	6818      	ldr	r0, [r3, #0]
 800842c:	6829      	ldr	r1, [r5, #0]
 800842e:	3104      	adds	r1, #4
 8008430:	f7fd fc38 	bl	8005ca4 <vListInsert>
 8008434:	4b15      	ldr	r3, [pc, #84]	@ (800848c <prvAddCurrentTaskToDelayedList+0x98>)
 8008436:	681a      	ldr	r2, [r3, #0]
 8008438:	42a2      	cmp	r2, r4
 800843a:	d900      	bls.n	800843e <prvAddCurrentTaskToDelayedList+0x4a>
 800843c:	601c      	str	r4, [r3, #0]
 800843e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008440:	b9a7      	cbnz	r7, 800846c <prvAddCurrentTaskToDelayedList+0x78>
 8008442:	682b      	ldr	r3, [r5, #0]
 8008444:	1e72      	subs	r2, r6, #1
 8008446:	605a      	str	r2, [r3, #4]
 8008448:	b13e      	cbz	r6, 800845a <prvAddCurrentTaskToDelayedList+0x66>
 800844a:	4b11      	ldr	r3, [pc, #68]	@ (8008490 <prvAddCurrentTaskToDelayedList+0x9c>)
 800844c:	6818      	ldr	r0, [r3, #0]
 800844e:	6829      	ldr	r1, [r5, #0]
 8008450:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008454:	3104      	adds	r1, #4
 8008456:	f7fd bc25 	b.w	8005ca4 <vListInsert>
 800845a:	4b0b      	ldr	r3, [pc, #44]	@ (8008488 <prvAddCurrentTaskToDelayedList+0x94>)
 800845c:	6818      	ldr	r0, [r3, #0]
 800845e:	6829      	ldr	r1, [r5, #0]
 8008460:	3104      	adds	r1, #4
 8008462:	f7fd fc1f 	bl	8005ca4 <vListInsert>
 8008466:	4b09      	ldr	r3, [pc, #36]	@ (800848c <prvAddCurrentTaskToDelayedList+0x98>)
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800846c:	6829      	ldr	r1, [r5, #0]
 800846e:	4809      	ldr	r0, [pc, #36]	@ (8008494 <prvAddCurrentTaskToDelayedList+0xa0>)
 8008470:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008474:	3104      	adds	r1, #4
 8008476:	f7fd bc07 	b.w	8005c88 <vListInsertEnd>
 800847a:	bf00      	nop
 800847c:	200015b0 	.word	0x200015b0
 8008480:	200016b4 	.word	0x200016b4
 8008484:	200015ac 	.word	0x200015ac
 8008488:	200015fc 	.word	0x200015fc
 800848c:	20001594 	.word	0x20001594
 8008490:	200015f8 	.word	0x200015f8
 8008494:	200015b8 	.word	0x200015b8

08008498 <xTaskCreate>:
 8008498:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800849c:	0094      	lsls	r4, r2, #2
 800849e:	4606      	mov	r6, r0
 80084a0:	4620      	mov	r0, r4
 80084a2:	4689      	mov	r9, r1
 80084a4:	461f      	mov	r7, r3
 80084a6:	f7fc fa07 	bl	80048b8 <pvPortMalloc>
 80084aa:	2800      	cmp	r0, #0
 80084ac:	f000 8085 	beq.w	80085ba <xTaskCreate+0x122>
 80084b0:	4680      	mov	r8, r0
 80084b2:	2054      	movs	r0, #84	@ 0x54
 80084b4:	f7fc fa00 	bl	80048b8 <pvPortMalloc>
 80084b8:	4605      	mov	r5, r0
 80084ba:	2800      	cmp	r0, #0
 80084bc:	d07a      	beq.n	80085b4 <xTaskCreate+0x11c>
 80084be:	f8c0 8030 	str.w	r8, [r0, #48]	@ 0x30
 80084c2:	4622      	mov	r2, r4
 80084c4:	4640      	mov	r0, r8
 80084c6:	21a5      	movs	r1, #165	@ 0xa5
 80084c8:	f01c f8ed 	bl	80246a6 <memset>
 80084cc:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80084ce:	3c04      	subs	r4, #4
 80084d0:	4423      	add	r3, r4
 80084d2:	f023 0807 	bic.w	r8, r3, #7
 80084d6:	f109 3cff 	add.w	ip, r9, #4294967295	@ 0xffffffff
 80084da:	f109 010f 	add.w	r1, r9, #15
 80084de:	f105 0e33 	add.w	lr, r5, #51	@ 0x33
 80084e2:	f81c 4f01 	ldrb.w	r4, [ip, #1]!
 80084e6:	f80e 4f01 	strb.w	r4, [lr, #1]!
 80084ea:	b10c      	cbz	r4, 80084f0 <xTaskCreate+0x58>
 80084ec:	458c      	cmp	ip, r1
 80084ee:	d1f8      	bne.n	80084e2 <xTaskCreate+0x4a>
 80084f0:	9c08      	ldr	r4, [sp, #32]
 80084f2:	2c06      	cmp	r4, #6
 80084f4:	bf28      	it	cs
 80084f6:	2406      	movcs	r4, #6
 80084f8:	f04f 0a00 	mov.w	sl, #0
 80084fc:	f105 0904 	add.w	r9, r5, #4
 8008500:	62ec      	str	r4, [r5, #44]	@ 0x2c
 8008502:	646c      	str	r4, [r5, #68]	@ 0x44
 8008504:	4648      	mov	r0, r9
 8008506:	f885 a043 	strb.w	sl, [r5, #67]	@ 0x43
 800850a:	f8c5 a048 	str.w	sl, [r5, #72]	@ 0x48
 800850e:	f7fd fbb7 	bl	8005c80 <vListInitialiseItem>
 8008512:	f1c4 0407 	rsb	r4, r4, #7
 8008516:	f105 0018 	add.w	r0, r5, #24
 800851a:	f7fd fbb1 	bl	8005c80 <vListInitialiseItem>
 800851e:	f8c5 a04c 	str.w	sl, [r5, #76]	@ 0x4c
 8008522:	61ac      	str	r4, [r5, #24]
 8008524:	f885 a050 	strb.w	sl, [r5, #80]	@ 0x50
 8008528:	612d      	str	r5, [r5, #16]
 800852a:	626d      	str	r5, [r5, #36]	@ 0x24
 800852c:	463a      	mov	r2, r7
 800852e:	4631      	mov	r1, r6
 8008530:	4640      	mov	r0, r8
 8008532:	f7fb fbe5 	bl	8003d00 <pxPortInitialiseStack>
 8008536:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008538:	6028      	str	r0, [r5, #0]
 800853a:	b103      	cbz	r3, 800853e <xTaskCreate+0xa6>
 800853c:	601d      	str	r5, [r3, #0]
 800853e:	f7fb fc09 	bl	8003d54 <vPortEnterCritical>
 8008542:	4a39      	ldr	r2, [pc, #228]	@ (8008628 <xTaskCreate+0x190>)
 8008544:	4c39      	ldr	r4, [pc, #228]	@ (800862c <xTaskCreate+0x194>)
 8008546:	6813      	ldr	r3, [r2, #0]
 8008548:	3301      	adds	r3, #1
 800854a:	6013      	str	r3, [r2, #0]
 800854c:	6823      	ldr	r3, [r4, #0]
 800854e:	2b00      	cmp	r3, #0
 8008550:	d03d      	beq.n	80085ce <xTaskCreate+0x136>
 8008552:	4e37      	ldr	r6, [pc, #220]	@ (8008630 <xTaskCreate+0x198>)
 8008554:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 8008556:	6833      	ldr	r3, [r6, #0]
 8008558:	b39b      	cbz	r3, 80085c2 <xTaskCreate+0x12a>
 800855a:	4f36      	ldr	r7, [pc, #216]	@ (8008634 <xTaskCreate+0x19c>)
 800855c:	f8df c0f4 	ldr.w	ip, [pc, #244]	@ 8008654 <xTaskCreate+0x1bc>
 8008560:	4a35      	ldr	r2, [pc, #212]	@ (8008638 <xTaskCreate+0x1a0>)
 8008562:	f8dc 3000 	ldr.w	r3, [ip]
 8008566:	3301      	adds	r3, #1
 8008568:	f8cc 3000 	str.w	r3, [ip]
 800856c:	f8d2 c000 	ldr.w	ip, [r2]
 8008570:	2301      	movs	r3, #1
 8008572:	4083      	lsls	r3, r0
 8008574:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8008578:	ea43 030c 	orr.w	r3, r3, ip
 800857c:	4649      	mov	r1, r9
 800857e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 8008582:	6013      	str	r3, [r2, #0]
 8008584:	f7fd fb80 	bl	8005c88 <vListInsertEnd>
 8008588:	f7fb fc06 	bl	8003d98 <vPortExitCritical>
 800858c:	6833      	ldr	r3, [r6, #0]
 800858e:	b173      	cbz	r3, 80085ae <xTaskCreate+0x116>
 8008590:	6822      	ldr	r2, [r4, #0]
 8008592:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 8008594:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008596:	429a      	cmp	r2, r3
 8008598:	d209      	bcs.n	80085ae <xTaskCreate+0x116>
 800859a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800859e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80085a2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80085a6:	f3bf 8f4f 	dsb	sy
 80085aa:	f3bf 8f6f 	isb	sy
 80085ae:	2001      	movs	r0, #1
 80085b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80085b4:	4640      	mov	r0, r8
 80085b6:	f7fc fa0d 	bl	80049d4 <vPortFree>
 80085ba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80085be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80085c2:	6823      	ldr	r3, [r4, #0]
 80085c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80085c6:	4283      	cmp	r3, r0
 80085c8:	bf98      	it	ls
 80085ca:	6025      	strls	r5, [r4, #0]
 80085cc:	e7c5      	b.n	800855a <xTaskCreate+0xc2>
 80085ce:	6025      	str	r5, [r4, #0]
 80085d0:	6813      	ldr	r3, [r2, #0]
 80085d2:	2b01      	cmp	r3, #1
 80085d4:	d003      	beq.n	80085de <xTaskCreate+0x146>
 80085d6:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 80085d8:	4f16      	ldr	r7, [pc, #88]	@ (8008634 <xTaskCreate+0x19c>)
 80085da:	4e15      	ldr	r6, [pc, #84]	@ (8008630 <xTaskCreate+0x198>)
 80085dc:	e7be      	b.n	800855c <xTaskCreate+0xc4>
 80085de:	4f15      	ldr	r7, [pc, #84]	@ (8008634 <xTaskCreate+0x19c>)
 80085e0:	463e      	mov	r6, r7
 80085e2:	f107 088c 	add.w	r8, r7, #140	@ 0x8c
 80085e6:	4630      	mov	r0, r6
 80085e8:	3614      	adds	r6, #20
 80085ea:	f7fd fb3d 	bl	8005c68 <vListInitialise>
 80085ee:	45b0      	cmp	r8, r6
 80085f0:	d1f9      	bne.n	80085e6 <xTaskCreate+0x14e>
 80085f2:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 8008658 <xTaskCreate+0x1c0>
 80085f6:	4e11      	ldr	r6, [pc, #68]	@ (800863c <xTaskCreate+0x1a4>)
 80085f8:	4640      	mov	r0, r8
 80085fa:	f7fd fb35 	bl	8005c68 <vListInitialise>
 80085fe:	4630      	mov	r0, r6
 8008600:	f7fd fb32 	bl	8005c68 <vListInitialise>
 8008604:	480e      	ldr	r0, [pc, #56]	@ (8008640 <xTaskCreate+0x1a8>)
 8008606:	f7fd fb2f 	bl	8005c68 <vListInitialise>
 800860a:	480e      	ldr	r0, [pc, #56]	@ (8008644 <xTaskCreate+0x1ac>)
 800860c:	f7fd fb2c 	bl	8005c68 <vListInitialise>
 8008610:	480d      	ldr	r0, [pc, #52]	@ (8008648 <xTaskCreate+0x1b0>)
 8008612:	f7fd fb29 	bl	8005c68 <vListInitialise>
 8008616:	4b0d      	ldr	r3, [pc, #52]	@ (800864c <xTaskCreate+0x1b4>)
 8008618:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
 800861a:	f8c3 8000 	str.w	r8, [r3]
 800861e:	4b0c      	ldr	r3, [pc, #48]	@ (8008650 <xTaskCreate+0x1b8>)
 8008620:	601e      	str	r6, [r3, #0]
 8008622:	4e03      	ldr	r6, [pc, #12]	@ (8008630 <xTaskCreate+0x198>)
 8008624:	e79a      	b.n	800855c <xTaskCreate+0xc4>
 8008626:	bf00      	nop
 8008628:	200015b4 	.word	0x200015b4
 800862c:	200016b4 	.word	0x200016b4
 8008630:	200015a8 	.word	0x200015a8
 8008634:	20001628 	.word	0x20001628
 8008638:	200015ac 	.word	0x200015ac
 800863c:	20001600 	.word	0x20001600
 8008640:	200015e4 	.word	0x200015e4
 8008644:	200015d0 	.word	0x200015d0
 8008648:	200015b8 	.word	0x200015b8
 800864c:	200015fc 	.word	0x200015fc
 8008650:	200015f8 	.word	0x200015f8
 8008654:	20001598 	.word	0x20001598
 8008658:	20001614 	.word	0x20001614

0800865c <vTaskDelete>:
 800865c:	b570      	push	{r4, r5, r6, lr}
 800865e:	4604      	mov	r4, r0
 8008660:	4d35      	ldr	r5, [pc, #212]	@ (8008738 <vTaskDelete+0xdc>)
 8008662:	f7fb fb77 	bl	8003d54 <vPortEnterCritical>
 8008666:	2c00      	cmp	r4, #0
 8008668:	d04c      	beq.n	8008704 <vTaskDelete+0xa8>
 800866a:	1d26      	adds	r6, r4, #4
 800866c:	4630      	mov	r0, r6
 800866e:	f7fd fb31 	bl	8005cd4 <uxListRemove>
 8008672:	b938      	cbnz	r0, 8008684 <vTaskDelete+0x28>
 8008674:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008676:	4a31      	ldr	r2, [pc, #196]	@ (800873c <vTaskDelete+0xe0>)
 8008678:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800867c:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8008680:	2a00      	cmp	r2, #0
 8008682:	d02e      	beq.n	80086e2 <vTaskDelete+0x86>
 8008684:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008686:	b11b      	cbz	r3, 8008690 <vTaskDelete+0x34>
 8008688:	f104 0018 	add.w	r0, r4, #24
 800868c:	f7fd fb22 	bl	8005cd4 <uxListRemove>
 8008690:	4a2b      	ldr	r2, [pc, #172]	@ (8008740 <vTaskDelete+0xe4>)
 8008692:	6813      	ldr	r3, [r2, #0]
 8008694:	3301      	adds	r3, #1
 8008696:	6013      	str	r3, [r2, #0]
 8008698:	682b      	ldr	r3, [r5, #0]
 800869a:	42a3      	cmp	r3, r4
 800869c:	d029      	beq.n	80086f2 <vTaskDelete+0x96>
 800869e:	4a29      	ldr	r2, [pc, #164]	@ (8008744 <vTaskDelete+0xe8>)
 80086a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80086a2:	6813      	ldr	r3, [r2, #0]
 80086a4:	3b01      	subs	r3, #1
 80086a6:	6013      	str	r3, [r2, #0]
 80086a8:	f7fc f994 	bl	80049d4 <vPortFree>
 80086ac:	4620      	mov	r0, r4
 80086ae:	f7fc f991 	bl	80049d4 <vPortFree>
 80086b2:	4b25      	ldr	r3, [pc, #148]	@ (8008748 <vTaskDelete+0xec>)
 80086b4:	681a      	ldr	r2, [r3, #0]
 80086b6:	6812      	ldr	r2, [r2, #0]
 80086b8:	b172      	cbz	r2, 80086d8 <vTaskDelete+0x7c>
 80086ba:	681a      	ldr	r2, [r3, #0]
 80086bc:	4b23      	ldr	r3, [pc, #140]	@ (800874c <vTaskDelete+0xf0>)
 80086be:	68d2      	ldr	r2, [r2, #12]
 80086c0:	68d2      	ldr	r2, [r2, #12]
 80086c2:	6852      	ldr	r2, [r2, #4]
 80086c4:	601a      	str	r2, [r3, #0]
 80086c6:	f7fb fb67 	bl	8003d98 <vPortExitCritical>
 80086ca:	4b21      	ldr	r3, [pc, #132]	@ (8008750 <vTaskDelete+0xf4>)
 80086cc:	681b      	ldr	r3, [r3, #0]
 80086ce:	b113      	cbz	r3, 80086d6 <vTaskDelete+0x7a>
 80086d0:	682b      	ldr	r3, [r5, #0]
 80086d2:	42a3      	cmp	r3, r4
 80086d4:	d018      	beq.n	8008708 <vTaskDelete+0xac>
 80086d6:	bd70      	pop	{r4, r5, r6, pc}
 80086d8:	4b1c      	ldr	r3, [pc, #112]	@ (800874c <vTaskDelete+0xf0>)
 80086da:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80086de:	601a      	str	r2, [r3, #0]
 80086e0:	e7f1      	b.n	80086c6 <vTaskDelete+0x6a>
 80086e2:	491c      	ldr	r1, [pc, #112]	@ (8008754 <vTaskDelete+0xf8>)
 80086e4:	2201      	movs	r2, #1
 80086e6:	409a      	lsls	r2, r3
 80086e8:	680b      	ldr	r3, [r1, #0]
 80086ea:	ea23 0302 	bic.w	r3, r3, r2
 80086ee:	600b      	str	r3, [r1, #0]
 80086f0:	e7c8      	b.n	8008684 <vTaskDelete+0x28>
 80086f2:	4819      	ldr	r0, [pc, #100]	@ (8008758 <vTaskDelete+0xfc>)
 80086f4:	4631      	mov	r1, r6
 80086f6:	f7fd fac7 	bl	8005c88 <vListInsertEnd>
 80086fa:	4a18      	ldr	r2, [pc, #96]	@ (800875c <vTaskDelete+0x100>)
 80086fc:	6813      	ldr	r3, [r2, #0]
 80086fe:	3301      	adds	r3, #1
 8008700:	6013      	str	r3, [r2, #0]
 8008702:	e7e0      	b.n	80086c6 <vTaskDelete+0x6a>
 8008704:	682c      	ldr	r4, [r5, #0]
 8008706:	e7b0      	b.n	800866a <vTaskDelete+0xe>
 8008708:	4b15      	ldr	r3, [pc, #84]	@ (8008760 <vTaskDelete+0x104>)
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	b143      	cbz	r3, 8008720 <vTaskDelete+0xc4>
 800870e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008712:	f383 8811 	msr	BASEPRI, r3
 8008716:	f3bf 8f6f 	isb	sy
 800871a:	f3bf 8f4f 	dsb	sy
 800871e:	e7fe      	b.n	800871e <vTaskDelete+0xc2>
 8008720:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008724:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008728:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800872c:	f3bf 8f4f 	dsb	sy
 8008730:	f3bf 8f6f 	isb	sy
 8008734:	bd70      	pop	{r4, r5, r6, pc}
 8008736:	bf00      	nop
 8008738:	200016b4 	.word	0x200016b4
 800873c:	20001628 	.word	0x20001628
 8008740:	20001598 	.word	0x20001598
 8008744:	200015b4 	.word	0x200015b4
 8008748:	200015fc 	.word	0x200015fc
 800874c:	20001594 	.word	0x20001594
 8008750:	200015a8 	.word	0x200015a8
 8008754:	200015ac 	.word	0x200015ac
 8008758:	200015d0 	.word	0x200015d0
 800875c:	200015cc 	.word	0x200015cc
 8008760:	2000158c 	.word	0x2000158c

08008764 <vTaskStartScheduler>:
 8008764:	b510      	push	{r4, lr}
 8008766:	4b16      	ldr	r3, [pc, #88]	@ (80087c0 <vTaskStartScheduler+0x5c>)
 8008768:	4916      	ldr	r1, [pc, #88]	@ (80087c4 <vTaskStartScheduler+0x60>)
 800876a:	4817      	ldr	r0, [pc, #92]	@ (80087c8 <vTaskStartScheduler+0x64>)
 800876c:	b082      	sub	sp, #8
 800876e:	2400      	movs	r4, #0
 8008770:	e9cd 4300 	strd	r4, r3, [sp]
 8008774:	2280      	movs	r2, #128	@ 0x80
 8008776:	4623      	mov	r3, r4
 8008778:	f7ff fe8e 	bl	8008498 <xTaskCreate>
 800877c:	2801      	cmp	r0, #1
 800877e:	d008      	beq.n	8008792 <vTaskStartScheduler+0x2e>
 8008780:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008784:	f383 8811 	msr	BASEPRI, r3
 8008788:	f3bf 8f6f 	isb	sy
 800878c:	f3bf 8f4f 	dsb	sy
 8008790:	e7fe      	b.n	8008790 <vTaskStartScheduler+0x2c>
 8008792:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008796:	f383 8811 	msr	BASEPRI, r3
 800879a:	f3bf 8f6f 	isb	sy
 800879e:	f3bf 8f4f 	dsb	sy
 80087a2:	490a      	ldr	r1, [pc, #40]	@ (80087cc <vTaskStartScheduler+0x68>)
 80087a4:	4a0a      	ldr	r2, [pc, #40]	@ (80087d0 <vTaskStartScheduler+0x6c>)
 80087a6:	4b0b      	ldr	r3, [pc, #44]	@ (80087d4 <vTaskStartScheduler+0x70>)
 80087a8:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 80087ac:	f8c1 c000 	str.w	ip, [r1]
 80087b0:	6010      	str	r0, [r2, #0]
 80087b2:	601c      	str	r4, [r3, #0]
 80087b4:	b002      	add	sp, #8
 80087b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80087ba:	f7fb bb5b 	b.w	8003e74 <xPortStartScheduler>
 80087be:	bf00      	nop
 80087c0:	20001590 	.word	0x20001590
 80087c4:	080296a8 	.word	0x080296a8
 80087c8:	08008aa5 	.word	0x08008aa5
 80087cc:	20001594 	.word	0x20001594
 80087d0:	200015a8 	.word	0x200015a8
 80087d4:	200015b0 	.word	0x200015b0

080087d8 <vTaskSuspendAll>:
 80087d8:	4a02      	ldr	r2, [pc, #8]	@ (80087e4 <vTaskSuspendAll+0xc>)
 80087da:	6813      	ldr	r3, [r2, #0]
 80087dc:	3301      	adds	r3, #1
 80087de:	6013      	str	r3, [r2, #0]
 80087e0:	4770      	bx	lr
 80087e2:	bf00      	nop
 80087e4:	2000158c 	.word	0x2000158c

080087e8 <xTaskGetTickCount>:
 80087e8:	4b01      	ldr	r3, [pc, #4]	@ (80087f0 <xTaskGetTickCount+0x8>)
 80087ea:	6818      	ldr	r0, [r3, #0]
 80087ec:	4770      	bx	lr
 80087ee:	bf00      	nop
 80087f0:	200015b0 	.word	0x200015b0

080087f4 <xTaskGetTickCountFromISR>:
 80087f4:	b508      	push	{r3, lr}
 80087f6:	f7fb fbb5 	bl	8003f64 <vPortValidateInterruptPriority>
 80087fa:	4b01      	ldr	r3, [pc, #4]	@ (8008800 <xTaskGetTickCountFromISR+0xc>)
 80087fc:	6818      	ldr	r0, [r3, #0]
 80087fe:	bd08      	pop	{r3, pc}
 8008800:	200015b0 	.word	0x200015b0

08008804 <xTaskIncrementTick>:
 8008804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008808:	4b4d      	ldr	r3, [pc, #308]	@ (8008940 <xTaskIncrementTick+0x13c>)
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	b083      	sub	sp, #12
 800880e:	2b00      	cmp	r3, #0
 8008810:	d149      	bne.n	80088a6 <xTaskIncrementTick+0xa2>
 8008812:	4b4c      	ldr	r3, [pc, #304]	@ (8008944 <xTaskIncrementTick+0x140>)
 8008814:	681d      	ldr	r5, [r3, #0]
 8008816:	3501      	adds	r5, #1
 8008818:	601d      	str	r5, [r3, #0]
 800881a:	2d00      	cmp	r5, #0
 800881c:	d051      	beq.n	80088c2 <xTaskIncrementTick+0xbe>
 800881e:	4b4a      	ldr	r3, [pc, #296]	@ (8008948 <xTaskIncrementTick+0x144>)
 8008820:	9301      	str	r3, [sp, #4]
 8008822:	9b01      	ldr	r3, [sp, #4]
 8008824:	681b      	ldr	r3, [r3, #0]
 8008826:	42ab      	cmp	r3, r5
 8008828:	d858      	bhi.n	80088dc <xTaskIncrementTick+0xd8>
 800882a:	4e48      	ldr	r6, [pc, #288]	@ (800894c <xTaskIncrementTick+0x148>)
 800882c:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 8008964 <xTaskIncrementTick+0x160>
 8008830:	6833      	ldr	r3, [r6, #0]
 8008832:	f8df 9134 	ldr.w	r9, [pc, #308]	@ 8008968 <xTaskIncrementTick+0x164>
 8008836:	681c      	ldr	r4, [r3, #0]
 8008838:	2c00      	cmp	r4, #0
 800883a:	d074      	beq.n	8008926 <xTaskIncrementTick+0x122>
 800883c:	4f44      	ldr	r7, [pc, #272]	@ (8008950 <xTaskIncrementTick+0x14c>)
 800883e:	2400      	movs	r4, #0
 8008840:	e023      	b.n	800888a <xTaskIncrementTick+0x86>
 8008842:	f7fd fa47 	bl	8005cd4 <uxListRemove>
 8008846:	f8db 2028 	ldr.w	r2, [fp, #40]	@ 0x28
 800884a:	f10b 0018 	add.w	r0, fp, #24
 800884e:	b10a      	cbz	r2, 8008854 <xTaskIncrementTick+0x50>
 8008850:	f7fd fa40 	bl	8005cd4 <uxListRemove>
 8008854:	f8db 002c 	ldr.w	r0, [fp, #44]	@ 0x2c
 8008858:	683b      	ldr	r3, [r7, #0]
 800885a:	2201      	movs	r2, #1
 800885c:	4082      	lsls	r2, r0
 800885e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8008862:	431a      	orrs	r2, r3
 8008864:	4651      	mov	r1, sl
 8008866:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 800886a:	603a      	str	r2, [r7, #0]
 800886c:	f7fd fa0c 	bl	8005c88 <vListInsertEnd>
 8008870:	f8d9 3000 	ldr.w	r3, [r9]
 8008874:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
 8008878:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800887a:	429a      	cmp	r2, r3
 800887c:	bf28      	it	cs
 800887e:	f044 0401 	orrcs.w	r4, r4, #1
 8008882:	6833      	ldr	r3, [r6, #0]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	2b00      	cmp	r3, #0
 8008888:	d04d      	beq.n	8008926 <xTaskIncrementTick+0x122>
 800888a:	6833      	ldr	r3, [r6, #0]
 800888c:	68db      	ldr	r3, [r3, #12]
 800888e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8008892:	f8db 2004 	ldr.w	r2, [fp, #4]
 8008896:	f10b 0a04 	add.w	sl, fp, #4
 800889a:	4295      	cmp	r5, r2
 800889c:	4650      	mov	r0, sl
 800889e:	d2d0      	bcs.n	8008842 <xTaskIncrementTick+0x3e>
 80088a0:	9b01      	ldr	r3, [sp, #4]
 80088a2:	601a      	str	r2, [r3, #0]
 80088a4:	e01f      	b.n	80088e6 <xTaskIncrementTick+0xe2>
 80088a6:	4a2b      	ldr	r2, [pc, #172]	@ (8008954 <xTaskIncrementTick+0x150>)
 80088a8:	6813      	ldr	r3, [r2, #0]
 80088aa:	3301      	adds	r3, #1
 80088ac:	2000      	movs	r0, #0
 80088ae:	6013      	str	r3, [r2, #0]
 80088b0:	4b29      	ldr	r3, [pc, #164]	@ (8008958 <xTaskIncrementTick+0x154>)
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	2b00      	cmp	r3, #0
 80088b6:	bf18      	it	ne
 80088b8:	f040 0001 	orrne.w	r0, r0, #1
 80088bc:	b003      	add	sp, #12
 80088be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80088c2:	4b22      	ldr	r3, [pc, #136]	@ (800894c <xTaskIncrementTick+0x148>)
 80088c4:	681a      	ldr	r2, [r3, #0]
 80088c6:	6812      	ldr	r2, [r2, #0]
 80088c8:	b1d2      	cbz	r2, 8008900 <xTaskIncrementTick+0xfc>
 80088ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088ce:	f383 8811 	msr	BASEPRI, r3
 80088d2:	f3bf 8f6f 	isb	sy
 80088d6:	f3bf 8f4f 	dsb	sy
 80088da:	e7fe      	b.n	80088da <xTaskIncrementTick+0xd6>
 80088dc:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 8008964 <xTaskIncrementTick+0x160>
 80088e0:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8008968 <xTaskIncrementTick+0x164>
 80088e4:	2400      	movs	r4, #0
 80088e6:	f8d9 3000 	ldr.w	r3, [r9]
 80088ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80088ec:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80088f0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80088f4:	2b01      	cmp	r3, #1
 80088f6:	bf94      	ite	ls
 80088f8:	4620      	movls	r0, r4
 80088fa:	f044 0001 	orrhi.w	r0, r4, #1
 80088fe:	e7d7      	b.n	80088b0 <xTaskIncrementTick+0xac>
 8008900:	4a16      	ldr	r2, [pc, #88]	@ (800895c <xTaskIncrementTick+0x158>)
 8008902:	6818      	ldr	r0, [r3, #0]
 8008904:	6811      	ldr	r1, [r2, #0]
 8008906:	6019      	str	r1, [r3, #0]
 8008908:	4915      	ldr	r1, [pc, #84]	@ (8008960 <xTaskIncrementTick+0x15c>)
 800890a:	6010      	str	r0, [r2, #0]
 800890c:	680a      	ldr	r2, [r1, #0]
 800890e:	3201      	adds	r2, #1
 8008910:	600a      	str	r2, [r1, #0]
 8008912:	681a      	ldr	r2, [r3, #0]
 8008914:	6812      	ldr	r2, [r2, #0]
 8008916:	b95a      	cbnz	r2, 8008930 <xTaskIncrementTick+0x12c>
 8008918:	4b0b      	ldr	r3, [pc, #44]	@ (8008948 <xTaskIncrementTick+0x144>)
 800891a:	9301      	str	r3, [sp, #4]
 800891c:	461a      	mov	r2, r3
 800891e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8008922:	6013      	str	r3, [r2, #0]
 8008924:	e77d      	b.n	8008822 <xTaskIncrementTick+0x1e>
 8008926:	9a01      	ldr	r2, [sp, #4]
 8008928:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800892c:	6013      	str	r3, [r2, #0]
 800892e:	e7da      	b.n	80088e6 <xTaskIncrementTick+0xe2>
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	4a05      	ldr	r2, [pc, #20]	@ (8008948 <xTaskIncrementTick+0x144>)
 8008934:	68db      	ldr	r3, [r3, #12]
 8008936:	9201      	str	r2, [sp, #4]
 8008938:	68db      	ldr	r3, [r3, #12]
 800893a:	685b      	ldr	r3, [r3, #4]
 800893c:	6013      	str	r3, [r2, #0]
 800893e:	e770      	b.n	8008822 <xTaskIncrementTick+0x1e>
 8008940:	2000158c 	.word	0x2000158c
 8008944:	200015b0 	.word	0x200015b0
 8008948:	20001594 	.word	0x20001594
 800894c:	200015fc 	.word	0x200015fc
 8008950:	200015ac 	.word	0x200015ac
 8008954:	200015a4 	.word	0x200015a4
 8008958:	200015a0 	.word	0x200015a0
 800895c:	200015f8 	.word	0x200015f8
 8008960:	2000159c 	.word	0x2000159c
 8008964:	20001628 	.word	0x20001628
 8008968:	200016b4 	.word	0x200016b4

0800896c <xTaskResumeAll.part.0>:
 800896c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008970:	f7fb f9f0 	bl	8003d54 <vPortEnterCritical>
 8008974:	4b39      	ldr	r3, [pc, #228]	@ (8008a5c <xTaskResumeAll.part.0+0xf0>)
 8008976:	681a      	ldr	r2, [r3, #0]
 8008978:	3a01      	subs	r2, #1
 800897a:	601a      	str	r2, [r3, #0]
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	2b00      	cmp	r3, #0
 8008980:	d15b      	bne.n	8008a3a <xTaskResumeAll.part.0+0xce>
 8008982:	4b37      	ldr	r3, [pc, #220]	@ (8008a60 <xTaskResumeAll.part.0+0xf4>)
 8008984:	681b      	ldr	r3, [r3, #0]
 8008986:	2b00      	cmp	r3, #0
 8008988:	d057      	beq.n	8008a3a <xTaskResumeAll.part.0+0xce>
 800898a:	f8df a0ec 	ldr.w	sl, [pc, #236]	@ 8008a78 <xTaskResumeAll.part.0+0x10c>
 800898e:	f8da 3000 	ldr.w	r3, [sl]
 8008992:	2b00      	cmp	r3, #0
 8008994:	d05e      	beq.n	8008a54 <xTaskResumeAll.part.0+0xe8>
 8008996:	4d33      	ldr	r5, [pc, #204]	@ (8008a64 <xTaskResumeAll.part.0+0xf8>)
 8008998:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 8008a7c <xTaskResumeAll.part.0+0x110>
 800899c:	4f32      	ldr	r7, [pc, #200]	@ (8008a68 <xTaskResumeAll.part.0+0xfc>)
 800899e:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8008a80 <xTaskResumeAll.part.0+0x114>
 80089a2:	2601      	movs	r6, #1
 80089a4:	f8da 300c 	ldr.w	r3, [sl, #12]
 80089a8:	68dc      	ldr	r4, [r3, #12]
 80089aa:	f104 0b04 	add.w	fp, r4, #4
 80089ae:	f104 0018 	add.w	r0, r4, #24
 80089b2:	f7fd f98f 	bl	8005cd4 <uxListRemove>
 80089b6:	4658      	mov	r0, fp
 80089b8:	f7fd f98c 	bl	8005cd4 <uxListRemove>
 80089bc:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 80089be:	682a      	ldr	r2, [r5, #0]
 80089c0:	fa06 f300 	lsl.w	r3, r6, r0
 80089c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80089c8:	4313      	orrs	r3, r2
 80089ca:	4659      	mov	r1, fp
 80089cc:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 80089d0:	602b      	str	r3, [r5, #0]
 80089d2:	f7fd f959 	bl	8005c88 <vListInsertEnd>
 80089d6:	683b      	ldr	r3, [r7, #0]
 80089d8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80089da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80089dc:	f8da 3000 	ldr.w	r3, [sl]
 80089e0:	4291      	cmp	r1, r2
 80089e2:	bf28      	it	cs
 80089e4:	f8c9 6000 	strcs.w	r6, [r9]
 80089e8:	2b00      	cmp	r3, #0
 80089ea:	d1db      	bne.n	80089a4 <xTaskResumeAll.part.0+0x38>
 80089ec:	4b1f      	ldr	r3, [pc, #124]	@ (8008a6c <xTaskResumeAll.part.0+0x100>)
 80089ee:	681a      	ldr	r2, [r3, #0]
 80089f0:	6812      	ldr	r2, [r2, #0]
 80089f2:	bb42      	cbnz	r2, 8008a46 <xTaskResumeAll.part.0+0xda>
 80089f4:	4b1e      	ldr	r3, [pc, #120]	@ (8008a70 <xTaskResumeAll.part.0+0x104>)
 80089f6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80089fa:	601a      	str	r2, [r3, #0]
 80089fc:	4e1d      	ldr	r6, [pc, #116]	@ (8008a74 <xTaskResumeAll.part.0+0x108>)
 80089fe:	6834      	ldr	r4, [r6, #0]
 8008a00:	b144      	cbz	r4, 8008a14 <xTaskResumeAll.part.0+0xa8>
 8008a02:	2501      	movs	r5, #1
 8008a04:	f7ff fefe 	bl	8008804 <xTaskIncrementTick>
 8008a08:	b108      	cbz	r0, 8008a0e <xTaskResumeAll.part.0+0xa2>
 8008a0a:	f8c9 5000 	str.w	r5, [r9]
 8008a0e:	3c01      	subs	r4, #1
 8008a10:	d1f8      	bne.n	8008a04 <xTaskResumeAll.part.0+0x98>
 8008a12:	6034      	str	r4, [r6, #0]
 8008a14:	f8d9 3000 	ldr.w	r3, [r9]
 8008a18:	b17b      	cbz	r3, 8008a3a <xTaskResumeAll.part.0+0xce>
 8008a1a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a1e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008a22:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008a26:	f3bf 8f4f 	dsb	sy
 8008a2a:	f3bf 8f6f 	isb	sy
 8008a2e:	2401      	movs	r4, #1
 8008a30:	f7fb f9b2 	bl	8003d98 <vPortExitCritical>
 8008a34:	4620      	mov	r0, r4
 8008a36:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008a3a:	2400      	movs	r4, #0
 8008a3c:	f7fb f9ac 	bl	8003d98 <vPortExitCritical>
 8008a40:	4620      	mov	r0, r4
 8008a42:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008a46:	681a      	ldr	r2, [r3, #0]
 8008a48:	4b09      	ldr	r3, [pc, #36]	@ (8008a70 <xTaskResumeAll.part.0+0x104>)
 8008a4a:	68d2      	ldr	r2, [r2, #12]
 8008a4c:	68d2      	ldr	r2, [r2, #12]
 8008a4e:	6852      	ldr	r2, [r2, #4]
 8008a50:	601a      	str	r2, [r3, #0]
 8008a52:	e7d3      	b.n	80089fc <xTaskResumeAll.part.0+0x90>
 8008a54:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 8008a80 <xTaskResumeAll.part.0+0x114>
 8008a58:	e7d0      	b.n	80089fc <xTaskResumeAll.part.0+0x90>
 8008a5a:	bf00      	nop
 8008a5c:	2000158c 	.word	0x2000158c
 8008a60:	200015b4 	.word	0x200015b4
 8008a64:	200015ac 	.word	0x200015ac
 8008a68:	200016b4 	.word	0x200016b4
 8008a6c:	200015fc 	.word	0x200015fc
 8008a70:	20001594 	.word	0x20001594
 8008a74:	200015a4 	.word	0x200015a4
 8008a78:	200015e4 	.word	0x200015e4
 8008a7c:	20001628 	.word	0x20001628
 8008a80:	200015a0 	.word	0x200015a0

08008a84 <xTaskResumeAll>:
 8008a84:	4b06      	ldr	r3, [pc, #24]	@ (8008aa0 <xTaskResumeAll+0x1c>)
 8008a86:	681b      	ldr	r3, [r3, #0]
 8008a88:	b943      	cbnz	r3, 8008a9c <xTaskResumeAll+0x18>
 8008a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a8e:	f383 8811 	msr	BASEPRI, r3
 8008a92:	f3bf 8f6f 	isb	sy
 8008a96:	f3bf 8f4f 	dsb	sy
 8008a9a:	e7fe      	b.n	8008a9a <xTaskResumeAll+0x16>
 8008a9c:	f7ff bf66 	b.w	800896c <xTaskResumeAll.part.0>
 8008aa0:	2000158c 	.word	0x2000158c

08008aa4 <prvIdleTask>:
 8008aa4:	b580      	push	{r7, lr}
 8008aa6:	4e24      	ldr	r6, [pc, #144]	@ (8008b38 <prvIdleTask+0x94>)
 8008aa8:	4f24      	ldr	r7, [pc, #144]	@ (8008b3c <prvIdleTask+0x98>)
 8008aaa:	4c25      	ldr	r4, [pc, #148]	@ (8008b40 <prvIdleTask+0x9c>)
 8008aac:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8008b48 <prvIdleTask+0xa4>
 8008ab0:	4d24      	ldr	r5, [pc, #144]	@ (8008b44 <prvIdleTask+0xa0>)
 8008ab2:	f8d8 3000 	ldr.w	r3, [r8]
 8008ab6:	b37b      	cbz	r3, 8008b18 <prvIdleTask+0x74>
 8008ab8:	6833      	ldr	r3, [r6, #0]
 8008aba:	3301      	adds	r3, #1
 8008abc:	6033      	str	r3, [r6, #0]
 8008abe:	6833      	ldr	r3, [r6, #0]
 8008ac0:	b943      	cbnz	r3, 8008ad4 <prvIdleTask+0x30>
 8008ac2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ac6:	f383 8811 	msr	BASEPRI, r3
 8008aca:	f3bf 8f6f 	isb	sy
 8008ace:	f3bf 8f4f 	dsb	sy
 8008ad2:	e7fe      	b.n	8008ad2 <prvIdleTask+0x2e>
 8008ad4:	f8d7 9000 	ldr.w	r9, [r7]
 8008ad8:	f7ff ff48 	bl	800896c <xTaskResumeAll.part.0>
 8008adc:	f1b9 0f00 	cmp.w	r9, #0
 8008ae0:	d0e7      	beq.n	8008ab2 <prvIdleTask+0xe>
 8008ae2:	f7fb f937 	bl	8003d54 <vPortEnterCritical>
 8008ae6:	68fb      	ldr	r3, [r7, #12]
 8008ae8:	f8d3 900c 	ldr.w	r9, [r3, #12]
 8008aec:	f109 0004 	add.w	r0, r9, #4
 8008af0:	f7fd f8f0 	bl	8005cd4 <uxListRemove>
 8008af4:	6823      	ldr	r3, [r4, #0]
 8008af6:	3b01      	subs	r3, #1
 8008af8:	6023      	str	r3, [r4, #0]
 8008afa:	f8d8 3000 	ldr.w	r3, [r8]
 8008afe:	3b01      	subs	r3, #1
 8008b00:	f8c8 3000 	str.w	r3, [r8]
 8008b04:	f7fb f948 	bl	8003d98 <vPortExitCritical>
 8008b08:	f8d9 0030 	ldr.w	r0, [r9, #48]	@ 0x30
 8008b0c:	f7fb ff62 	bl	80049d4 <vPortFree>
 8008b10:	4648      	mov	r0, r9
 8008b12:	f7fb ff5f 	bl	80049d4 <vPortFree>
 8008b16:	e7cc      	b.n	8008ab2 <prvIdleTask+0xe>
 8008b18:	682a      	ldr	r2, [r5, #0]
 8008b1a:	2a01      	cmp	r2, #1
 8008b1c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008b20:	d907      	bls.n	8008b32 <prvIdleTask+0x8e>
 8008b22:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b26:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008b2a:	f3bf 8f4f 	dsb	sy
 8008b2e:	f3bf 8f6f 	isb	sy
 8008b32:	f008 fb2d 	bl	8011190 <vApplicationIdleHook>
 8008b36:	e7bc      	b.n	8008ab2 <prvIdleTask+0xe>
 8008b38:	2000158c 	.word	0x2000158c
 8008b3c:	200015d0 	.word	0x200015d0
 8008b40:	200015b4 	.word	0x200015b4
 8008b44:	20001628 	.word	0x20001628
 8008b48:	200015cc 	.word	0x200015cc

08008b4c <vTaskDelay>:
 8008b4c:	b510      	push	{r4, lr}
 8008b4e:	b950      	cbnz	r0, 8008b66 <vTaskDelay+0x1a>
 8008b50:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008b54:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b58:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008b5c:	f3bf 8f4f 	dsb	sy
 8008b60:	f3bf 8f6f 	isb	sy
 8008b64:	bd10      	pop	{r4, pc}
 8008b66:	4c10      	ldr	r4, [pc, #64]	@ (8008ba8 <vTaskDelay+0x5c>)
 8008b68:	6821      	ldr	r1, [r4, #0]
 8008b6a:	b141      	cbz	r1, 8008b7e <vTaskDelay+0x32>
 8008b6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b70:	f383 8811 	msr	BASEPRI, r3
 8008b74:	f3bf 8f6f 	isb	sy
 8008b78:	f3bf 8f4f 	dsb	sy
 8008b7c:	e7fe      	b.n	8008b7c <vTaskDelay+0x30>
 8008b7e:	6823      	ldr	r3, [r4, #0]
 8008b80:	3301      	adds	r3, #1
 8008b82:	6023      	str	r3, [r4, #0]
 8008b84:	f7ff fc36 	bl	80083f4 <prvAddCurrentTaskToDelayedList>
 8008b88:	6823      	ldr	r3, [r4, #0]
 8008b8a:	b943      	cbnz	r3, 8008b9e <vTaskDelay+0x52>
 8008b8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b90:	f383 8811 	msr	BASEPRI, r3
 8008b94:	f3bf 8f6f 	isb	sy
 8008b98:	f3bf 8f4f 	dsb	sy
 8008b9c:	e7fe      	b.n	8008b9c <vTaskDelay+0x50>
 8008b9e:	f7ff fee5 	bl	800896c <xTaskResumeAll.part.0>
 8008ba2:	2800      	cmp	r0, #0
 8008ba4:	d0d4      	beq.n	8008b50 <vTaskDelay+0x4>
 8008ba6:	bd10      	pop	{r4, pc}
 8008ba8:	2000158c 	.word	0x2000158c

08008bac <vTaskSwitchContext>:
 8008bac:	4b1d      	ldr	r3, [pc, #116]	@ (8008c24 <vTaskSwitchContext+0x78>)
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	b11b      	cbz	r3, 8008bba <vTaskSwitchContext+0xe>
 8008bb2:	4b1d      	ldr	r3, [pc, #116]	@ (8008c28 <vTaskSwitchContext+0x7c>)
 8008bb4:	2201      	movs	r2, #1
 8008bb6:	601a      	str	r2, [r3, #0]
 8008bb8:	4770      	bx	lr
 8008bba:	4a1b      	ldr	r2, [pc, #108]	@ (8008c28 <vTaskSwitchContext+0x7c>)
 8008bbc:	b510      	push	{r4, lr}
 8008bbe:	4c1b      	ldr	r4, [pc, #108]	@ (8008c2c <vTaskSwitchContext+0x80>)
 8008bc0:	6013      	str	r3, [r2, #0]
 8008bc2:	6822      	ldr	r2, [r4, #0]
 8008bc4:	6823      	ldr	r3, [r4, #0]
 8008bc6:	6812      	ldr	r2, [r2, #0]
 8008bc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008bca:	429a      	cmp	r2, r3
 8008bcc:	d923      	bls.n	8008c16 <vTaskSwitchContext+0x6a>
 8008bce:	4b18      	ldr	r3, [pc, #96]	@ (8008c30 <vTaskSwitchContext+0x84>)
 8008bd0:	681b      	ldr	r3, [r3, #0]
 8008bd2:	fab3 f383 	clz	r3, r3
 8008bd6:	b2db      	uxtb	r3, r3
 8008bd8:	f1c3 031f 	rsb	r3, r3, #31
 8008bdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008be0:	4914      	ldr	r1, [pc, #80]	@ (8008c34 <vTaskSwitchContext+0x88>)
 8008be2:	009a      	lsls	r2, r3, #2
 8008be4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8008be8:	5888      	ldr	r0, [r1, r2]
 8008bea:	b940      	cbnz	r0, 8008bfe <vTaskSwitchContext+0x52>
 8008bec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bf0:	f383 8811 	msr	BASEPRI, r3
 8008bf4:	f3bf 8f6f 	isb	sy
 8008bf8:	f3bf 8f4f 	dsb	sy
 8008bfc:	e7fe      	b.n	8008bfc <vTaskSwitchContext+0x50>
 8008bfe:	6858      	ldr	r0, [r3, #4]
 8008c00:	3208      	adds	r2, #8
 8008c02:	6840      	ldr	r0, [r0, #4]
 8008c04:	6058      	str	r0, [r3, #4]
 8008c06:	440a      	add	r2, r1
 8008c08:	4290      	cmp	r0, r2
 8008c0a:	bf04      	itt	eq
 8008c0c:	6840      	ldreq	r0, [r0, #4]
 8008c0e:	6058      	streq	r0, [r3, #4]
 8008c10:	68c3      	ldr	r3, [r0, #12]
 8008c12:	6023      	str	r3, [r4, #0]
 8008c14:	bd10      	pop	{r4, pc}
 8008c16:	6820      	ldr	r0, [r4, #0]
 8008c18:	6821      	ldr	r1, [r4, #0]
 8008c1a:	3134      	adds	r1, #52	@ 0x34
 8008c1c:	f008 faa8 	bl	8011170 <vApplicationStackOverflowHook>
 8008c20:	e7d5      	b.n	8008bce <vTaskSwitchContext+0x22>
 8008c22:	bf00      	nop
 8008c24:	2000158c 	.word	0x2000158c
 8008c28:	200015a0 	.word	0x200015a0
 8008c2c:	200016b4 	.word	0x200016b4
 8008c30:	200015ac 	.word	0x200015ac
 8008c34:	20001628 	.word	0x20001628

08008c38 <vTaskPlaceOnEventList>:
 8008c38:	b160      	cbz	r0, 8008c54 <vTaskPlaceOnEventList+0x1c>
 8008c3a:	b510      	push	{r4, lr}
 8008c3c:	4b0a      	ldr	r3, [pc, #40]	@ (8008c68 <vTaskPlaceOnEventList+0x30>)
 8008c3e:	460c      	mov	r4, r1
 8008c40:	6819      	ldr	r1, [r3, #0]
 8008c42:	3118      	adds	r1, #24
 8008c44:	f7fd f82e 	bl	8005ca4 <vListInsert>
 8008c48:	4620      	mov	r0, r4
 8008c4a:	2101      	movs	r1, #1
 8008c4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008c50:	f7ff bbd0 	b.w	80083f4 <prvAddCurrentTaskToDelayedList>
 8008c54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c58:	f383 8811 	msr	BASEPRI, r3
 8008c5c:	f3bf 8f6f 	isb	sy
 8008c60:	f3bf 8f4f 	dsb	sy
 8008c64:	e7fe      	b.n	8008c64 <vTaskPlaceOnEventList+0x2c>
 8008c66:	bf00      	nop
 8008c68:	200016b4 	.word	0x200016b4

08008c6c <xTaskRemoveFromEventList>:
 8008c6c:	b538      	push	{r3, r4, r5, lr}
 8008c6e:	68c3      	ldr	r3, [r0, #12]
 8008c70:	68dc      	ldr	r4, [r3, #12]
 8008c72:	b354      	cbz	r4, 8008cca <xTaskRemoveFromEventList+0x5e>
 8008c74:	f104 0518 	add.w	r5, r4, #24
 8008c78:	4628      	mov	r0, r5
 8008c7a:	f7fd f82b 	bl	8005cd4 <uxListRemove>
 8008c7e:	4b17      	ldr	r3, [pc, #92]	@ (8008cdc <xTaskRemoveFromEventList+0x70>)
 8008c80:	681b      	ldr	r3, [r3, #0]
 8008c82:	b173      	cbz	r3, 8008ca2 <xTaskRemoveFromEventList+0x36>
 8008c84:	4816      	ldr	r0, [pc, #88]	@ (8008ce0 <xTaskRemoveFromEventList+0x74>)
 8008c86:	4629      	mov	r1, r5
 8008c88:	f7fc fffe 	bl	8005c88 <vListInsertEnd>
 8008c8c:	4b15      	ldr	r3, [pc, #84]	@ (8008ce4 <xTaskRemoveFromEventList+0x78>)
 8008c8e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c94:	429a      	cmp	r2, r3
 8008c96:	bf83      	ittte	hi
 8008c98:	4b13      	ldrhi	r3, [pc, #76]	@ (8008ce8 <xTaskRemoveFromEventList+0x7c>)
 8008c9a:	2001      	movhi	r0, #1
 8008c9c:	6018      	strhi	r0, [r3, #0]
 8008c9e:	2000      	movls	r0, #0
 8008ca0:	bd38      	pop	{r3, r4, r5, pc}
 8008ca2:	1d25      	adds	r5, r4, #4
 8008ca4:	4628      	mov	r0, r5
 8008ca6:	f7fd f815 	bl	8005cd4 <uxListRemove>
 8008caa:	4a10      	ldr	r2, [pc, #64]	@ (8008cec <xTaskRemoveFromEventList+0x80>)
 8008cac:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8008cae:	4629      	mov	r1, r5
 8008cb0:	2301      	movs	r3, #1
 8008cb2:	6815      	ldr	r5, [r2, #0]
 8008cb4:	4083      	lsls	r3, r0
 8008cb6:	432b      	orrs	r3, r5
 8008cb8:	6013      	str	r3, [r2, #0]
 8008cba:	4b0d      	ldr	r3, [pc, #52]	@ (8008cf0 <xTaskRemoveFromEventList+0x84>)
 8008cbc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8008cc0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8008cc4:	f7fc ffe0 	bl	8005c88 <vListInsertEnd>
 8008cc8:	e7e0      	b.n	8008c8c <xTaskRemoveFromEventList+0x20>
 8008cca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cce:	f383 8811 	msr	BASEPRI, r3
 8008cd2:	f3bf 8f6f 	isb	sy
 8008cd6:	f3bf 8f4f 	dsb	sy
 8008cda:	e7fe      	b.n	8008cda <xTaskRemoveFromEventList+0x6e>
 8008cdc:	2000158c 	.word	0x2000158c
 8008ce0:	200015e4 	.word	0x200015e4
 8008ce4:	200016b4 	.word	0x200016b4
 8008ce8:	200015a0 	.word	0x200015a0
 8008cec:	200015ac 	.word	0x200015ac
 8008cf0:	20001628 	.word	0x20001628

08008cf4 <vTaskSetTimeOutState>:
 8008cf4:	b130      	cbz	r0, 8008d04 <vTaskSetTimeOutState+0x10>
 8008cf6:	4a08      	ldr	r2, [pc, #32]	@ (8008d18 <vTaskSetTimeOutState+0x24>)
 8008cf8:	4b08      	ldr	r3, [pc, #32]	@ (8008d1c <vTaskSetTimeOutState+0x28>)
 8008cfa:	6812      	ldr	r2, [r2, #0]
 8008cfc:	681b      	ldr	r3, [r3, #0]
 8008cfe:	e9c0 2300 	strd	r2, r3, [r0]
 8008d02:	4770      	bx	lr
 8008d04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d08:	f383 8811 	msr	BASEPRI, r3
 8008d0c:	f3bf 8f6f 	isb	sy
 8008d10:	f3bf 8f4f 	dsb	sy
 8008d14:	e7fe      	b.n	8008d14 <vTaskSetTimeOutState+0x20>
 8008d16:	bf00      	nop
 8008d18:	2000159c 	.word	0x2000159c
 8008d1c:	200015b0 	.word	0x200015b0

08008d20 <xTaskCheckForTimeOut>:
 8008d20:	b330      	cbz	r0, 8008d70 <xTaskCheckForTimeOut+0x50>
 8008d22:	b570      	push	{r4, r5, r6, lr}
 8008d24:	460d      	mov	r5, r1
 8008d26:	b1d1      	cbz	r1, 8008d5e <xTaskCheckForTimeOut+0x3e>
 8008d28:	4604      	mov	r4, r0
 8008d2a:	f7fb f813 	bl	8003d54 <vPortEnterCritical>
 8008d2e:	682b      	ldr	r3, [r5, #0]
 8008d30:	4a1a      	ldr	r2, [pc, #104]	@ (8008d9c <xTaskCheckForTimeOut+0x7c>)
 8008d32:	1c58      	adds	r0, r3, #1
 8008d34:	6811      	ldr	r1, [r2, #0]
 8008d36:	d02c      	beq.n	8008d92 <xTaskCheckForTimeOut+0x72>
 8008d38:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8008da0 <xTaskCheckForTimeOut+0x80>
 8008d3c:	e9d4 6000 	ldrd	r6, r0, [r4]
 8008d40:	f8dc e000 	ldr.w	lr, [ip]
 8008d44:	4576      	cmp	r6, lr
 8008d46:	d001      	beq.n	8008d4c <xTaskCheckForTimeOut+0x2c>
 8008d48:	4281      	cmp	r1, r0
 8008d4a:	d203      	bcs.n	8008d54 <xTaskCheckForTimeOut+0x34>
 8008d4c:	eba1 0e00 	sub.w	lr, r1, r0
 8008d50:	4573      	cmp	r3, lr
 8008d52:	d816      	bhi.n	8008d82 <xTaskCheckForTimeOut+0x62>
 8008d54:	2401      	movs	r4, #1
 8008d56:	f7fb f81f 	bl	8003d98 <vPortExitCritical>
 8008d5a:	4620      	mov	r0, r4
 8008d5c:	bd70      	pop	{r4, r5, r6, pc}
 8008d5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d62:	f383 8811 	msr	BASEPRI, r3
 8008d66:	f3bf 8f6f 	isb	sy
 8008d6a:	f3bf 8f4f 	dsb	sy
 8008d6e:	e7fe      	b.n	8008d6e <xTaskCheckForTimeOut+0x4e>
 8008d70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d74:	f383 8811 	msr	BASEPRI, r3
 8008d78:	f3bf 8f6f 	isb	sy
 8008d7c:	f3bf 8f4f 	dsb	sy
 8008d80:	e7fe      	b.n	8008d80 <xTaskCheckForTimeOut+0x60>
 8008d82:	1a5b      	subs	r3, r3, r1
 8008d84:	f8dc 1000 	ldr.w	r1, [ip]
 8008d88:	6812      	ldr	r2, [r2, #0]
 8008d8a:	4403      	add	r3, r0
 8008d8c:	602b      	str	r3, [r5, #0]
 8008d8e:	e9c4 1200 	strd	r1, r2, [r4]
 8008d92:	2400      	movs	r4, #0
 8008d94:	f7fb f800 	bl	8003d98 <vPortExitCritical>
 8008d98:	4620      	mov	r0, r4
 8008d9a:	bd70      	pop	{r4, r5, r6, pc}
 8008d9c:	200015b0 	.word	0x200015b0
 8008da0:	2000159c 	.word	0x2000159c

08008da4 <vTaskMissedYield>:
 8008da4:	4b01      	ldr	r3, [pc, #4]	@ (8008dac <vTaskMissedYield+0x8>)
 8008da6:	2201      	movs	r2, #1
 8008da8:	601a      	str	r2, [r3, #0]
 8008daa:	4770      	bx	lr
 8008dac:	200015a0 	.word	0x200015a0

08008db0 <uxTaskGetStackHighWaterMark>:
 8008db0:	b178      	cbz	r0, 8008dd2 <uxTaskGetStackHighWaterMark+0x22>
 8008db2:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008db4:	7803      	ldrb	r3, [r0, #0]
 8008db6:	2ba5      	cmp	r3, #165	@ 0xa5
 8008db8:	d111      	bne.n	8008dde <uxTaskGetStackHighWaterMark+0x2e>
 8008dba:	4603      	mov	r3, r0
 8008dbc:	469c      	mov	ip, r3
 8008dbe:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8008dc2:	2aa5      	cmp	r2, #165	@ 0xa5
 8008dc4:	d0fa      	beq.n	8008dbc <uxTaskGetStackHighWaterMark+0xc>
 8008dc6:	f1c0 0001 	rsb	r0, r0, #1
 8008dca:	4460      	add	r0, ip
 8008dcc:	f3c0 008f 	ubfx	r0, r0, #2, #16
 8008dd0:	4770      	bx	lr
 8008dd2:	4b04      	ldr	r3, [pc, #16]	@ (8008de4 <uxTaskGetStackHighWaterMark+0x34>)
 8008dd4:	6818      	ldr	r0, [r3, #0]
 8008dd6:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008dd8:	7803      	ldrb	r3, [r0, #0]
 8008dda:	2ba5      	cmp	r3, #165	@ 0xa5
 8008ddc:	d0ed      	beq.n	8008dba <uxTaskGetStackHighWaterMark+0xa>
 8008dde:	2000      	movs	r0, #0
 8008de0:	4770      	bx	lr
 8008de2:	bf00      	nop
 8008de4:	200016b4 	.word	0x200016b4

08008de8 <xTaskGetSchedulerState>:
 8008de8:	4b05      	ldr	r3, [pc, #20]	@ (8008e00 <xTaskGetSchedulerState+0x18>)
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	b133      	cbz	r3, 8008dfc <xTaskGetSchedulerState+0x14>
 8008dee:	4b05      	ldr	r3, [pc, #20]	@ (8008e04 <xTaskGetSchedulerState+0x1c>)
 8008df0:	6818      	ldr	r0, [r3, #0]
 8008df2:	fab0 f080 	clz	r0, r0
 8008df6:	0940      	lsrs	r0, r0, #5
 8008df8:	0040      	lsls	r0, r0, #1
 8008dfa:	4770      	bx	lr
 8008dfc:	2001      	movs	r0, #1
 8008dfe:	4770      	bx	lr
 8008e00:	200015a8 	.word	0x200015a8
 8008e04:	2000158c 	.word	0x2000158c

08008e08 <vTaskPriorityInherit>:
 8008e08:	b1d8      	cbz	r0, 8008e42 <vTaskPriorityInherit+0x3a>
 8008e0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e0c:	4d20      	ldr	r5, [pc, #128]	@ (8008e90 <vTaskPriorityInherit+0x88>)
 8008e0e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008e10:	682a      	ldr	r2, [r5, #0]
 8008e12:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008e14:	4293      	cmp	r3, r2
 8008e16:	4604      	mov	r4, r0
 8008e18:	d212      	bcs.n	8008e40 <vTaskPriorityInherit+0x38>
 8008e1a:	6982      	ldr	r2, [r0, #24]
 8008e1c:	2a00      	cmp	r2, #0
 8008e1e:	db04      	blt.n	8008e2a <vTaskPriorityInherit+0x22>
 8008e20:	682a      	ldr	r2, [r5, #0]
 8008e22:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008e24:	f1c2 0207 	rsb	r2, r2, #7
 8008e28:	6182      	str	r2, [r0, #24]
 8008e2a:	4e1a      	ldr	r6, [pc, #104]	@ (8008e94 <vTaskPriorityInherit+0x8c>)
 8008e2c:	6962      	ldr	r2, [r4, #20]
 8008e2e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008e32:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8008e36:	429a      	cmp	r2, r3
 8008e38:	d004      	beq.n	8008e44 <vTaskPriorityInherit+0x3c>
 8008e3a:	682b      	ldr	r3, [r5, #0]
 8008e3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e3e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8008e40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008e42:	4770      	bx	lr
 8008e44:	1d27      	adds	r7, r4, #4
 8008e46:	4638      	mov	r0, r7
 8008e48:	f7fc ff44 	bl	8005cd4 <uxListRemove>
 8008e4c:	b968      	cbnz	r0, 8008e6a <vTaskPriorityInherit+0x62>
 8008e4e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008e50:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8008e54:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8008e58:	b93a      	cbnz	r2, 8008e6a <vTaskPriorityInherit+0x62>
 8008e5a:	4a0f      	ldr	r2, [pc, #60]	@ (8008e98 <vTaskPriorityInherit+0x90>)
 8008e5c:	2101      	movs	r1, #1
 8008e5e:	4099      	lsls	r1, r3
 8008e60:	6813      	ldr	r3, [r2, #0]
 8008e62:	ea23 0301 	bic.w	r3, r3, r1
 8008e66:	6013      	str	r3, [r2, #0]
 8008e68:	e000      	b.n	8008e6c <vTaskPriorityInherit+0x64>
 8008e6a:	4a0b      	ldr	r2, [pc, #44]	@ (8008e98 <vTaskPriorityInherit+0x90>)
 8008e6c:	682b      	ldr	r3, [r5, #0]
 8008e6e:	6ad8      	ldr	r0, [r3, #44]	@ 0x2c
 8008e70:	62e0      	str	r0, [r4, #44]	@ 0x2c
 8008e72:	2301      	movs	r3, #1
 8008e74:	6814      	ldr	r4, [r2, #0]
 8008e76:	4083      	lsls	r3, r0
 8008e78:	4323      	orrs	r3, r4
 8008e7a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8008e7e:	4639      	mov	r1, r7
 8008e80:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8008e84:	6013      	str	r3, [r2, #0]
 8008e86:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008e8a:	f7fc befd 	b.w	8005c88 <vListInsertEnd>
 8008e8e:	bf00      	nop
 8008e90:	200016b4 	.word	0x200016b4
 8008e94:	20001628 	.word	0x20001628
 8008e98:	200015ac 	.word	0x200015ac

08008e9c <xTaskPriorityDisinherit>:
 8008e9c:	b320      	cbz	r0, 8008ee8 <xTaskPriorityDisinherit+0x4c>
 8008e9e:	b530      	push	{r4, r5, lr}
 8008ea0:	4b2a      	ldr	r3, [pc, #168]	@ (8008f4c <xTaskPriorityDisinherit+0xb0>)
 8008ea2:	681b      	ldr	r3, [r3, #0]
 8008ea4:	4283      	cmp	r3, r0
 8008ea6:	b083      	sub	sp, #12
 8008ea8:	4604      	mov	r4, r0
 8008eaa:	d008      	beq.n	8008ebe <xTaskPriorityDisinherit+0x22>
 8008eac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eb0:	f383 8811 	msr	BASEPRI, r3
 8008eb4:	f3bf 8f6f 	isb	sy
 8008eb8:	f3bf 8f4f 	dsb	sy
 8008ebc:	e7fe      	b.n	8008ebc <xTaskPriorityDisinherit+0x20>
 8008ebe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008ec0:	b14b      	cbz	r3, 8008ed6 <xTaskPriorityDisinherit+0x3a>
 8008ec2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8008ec4:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 8008ec6:	3b01      	subs	r3, #1
 8008ec8:	4291      	cmp	r1, r2
 8008eca:	6483      	str	r3, [r0, #72]	@ 0x48
 8008ecc:	d000      	beq.n	8008ed0 <xTaskPriorityDisinherit+0x34>
 8008ece:	b16b      	cbz	r3, 8008eec <xTaskPriorityDisinherit+0x50>
 8008ed0:	2000      	movs	r0, #0
 8008ed2:	b003      	add	sp, #12
 8008ed4:	bd30      	pop	{r4, r5, pc}
 8008ed6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008eda:	f383 8811 	msr	BASEPRI, r3
 8008ede:	f3bf 8f6f 	isb	sy
 8008ee2:	f3bf 8f4f 	dsb	sy
 8008ee6:	e7fe      	b.n	8008ee6 <xTaskPriorityDisinherit+0x4a>
 8008ee8:	2000      	movs	r0, #0
 8008eea:	4770      	bx	lr
 8008eec:	1d01      	adds	r1, r0, #4
 8008eee:	4608      	mov	r0, r1
 8008ef0:	9101      	str	r1, [sp, #4]
 8008ef2:	f7fc feef 	bl	8005cd4 <uxListRemove>
 8008ef6:	9901      	ldr	r1, [sp, #4]
 8008ef8:	b1b8      	cbz	r0, 8008f2a <xTaskPriorityDisinherit+0x8e>
 8008efa:	4815      	ldr	r0, [pc, #84]	@ (8008f50 <xTaskPriorityDisinherit+0xb4>)
 8008efc:	4a15      	ldr	r2, [pc, #84]	@ (8008f54 <xTaskPriorityDisinherit+0xb8>)
 8008efe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8008f00:	f8d2 c000 	ldr.w	ip, [r2]
 8008f04:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8008f06:	f1c3 0e07 	rsb	lr, r3, #7
 8008f0a:	2501      	movs	r5, #1
 8008f0c:	f8c4 e018 	str.w	lr, [r4, #24]
 8008f10:	fa05 f403 	lsl.w	r4, r5, r3
 8008f14:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8008f18:	ea44 040c 	orr.w	r4, r4, ip
 8008f1c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8008f20:	6014      	str	r4, [r2, #0]
 8008f22:	f7fc feb1 	bl	8005c88 <vListInsertEnd>
 8008f26:	4628      	mov	r0, r5
 8008f28:	e7d3      	b.n	8008ed2 <xTaskPriorityDisinherit+0x36>
 8008f2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008f2c:	4808      	ldr	r0, [pc, #32]	@ (8008f50 <xTaskPriorityDisinherit+0xb4>)
 8008f2e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8008f32:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8008f36:	b10a      	cbz	r2, 8008f3c <xTaskPriorityDisinherit+0xa0>
 8008f38:	4a06      	ldr	r2, [pc, #24]	@ (8008f54 <xTaskPriorityDisinherit+0xb8>)
 8008f3a:	e7e0      	b.n	8008efe <xTaskPriorityDisinherit+0x62>
 8008f3c:	4a05      	ldr	r2, [pc, #20]	@ (8008f54 <xTaskPriorityDisinherit+0xb8>)
 8008f3e:	2501      	movs	r5, #1
 8008f40:	409d      	lsls	r5, r3
 8008f42:	6813      	ldr	r3, [r2, #0]
 8008f44:	ea23 0305 	bic.w	r3, r3, r5
 8008f48:	6013      	str	r3, [r2, #0]
 8008f4a:	e7d8      	b.n	8008efe <xTaskPriorityDisinherit+0x62>
 8008f4c:	200016b4 	.word	0x200016b4
 8008f50:	20001628 	.word	0x20001628
 8008f54:	200015ac 	.word	0x200015ac

08008f58 <pvTaskIncrementMutexHeldCount>:
 8008f58:	4b04      	ldr	r3, [pc, #16]	@ (8008f6c <pvTaskIncrementMutexHeldCount+0x14>)
 8008f5a:	681a      	ldr	r2, [r3, #0]
 8008f5c:	b11a      	cbz	r2, 8008f66 <pvTaskIncrementMutexHeldCount+0xe>
 8008f5e:	6819      	ldr	r1, [r3, #0]
 8008f60:	6c8a      	ldr	r2, [r1, #72]	@ 0x48
 8008f62:	3201      	adds	r2, #1
 8008f64:	648a      	str	r2, [r1, #72]	@ 0x48
 8008f66:	6818      	ldr	r0, [r3, #0]
 8008f68:	4770      	bx	lr
 8008f6a:	bf00      	nop
 8008f6c:	200016b4 	.word	0x200016b4

08008f70 <xTaskNotifyWait>:
 8008f70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f74:	4c20      	ldr	r4, [pc, #128]	@ (8008ff8 <xTaskNotifyWait+0x88>)
 8008f76:	461e      	mov	r6, r3
 8008f78:	4680      	mov	r8, r0
 8008f7a:	460f      	mov	r7, r1
 8008f7c:	4615      	mov	r5, r2
 8008f7e:	f7fa fee9 	bl	8003d54 <vPortEnterCritical>
 8008f82:	6823      	ldr	r3, [r4, #0]
 8008f84:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008f88:	2b02      	cmp	r3, #2
 8008f8a:	d009      	beq.n	8008fa0 <xTaskNotifyWait+0x30>
 8008f8c:	6822      	ldr	r2, [r4, #0]
 8008f8e:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8008f90:	ea23 0308 	bic.w	r3, r3, r8
 8008f94:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8008f96:	6823      	ldr	r3, [r4, #0]
 8008f98:	2101      	movs	r1, #1
 8008f9a:	f883 1050 	strb.w	r1, [r3, #80]	@ 0x50
 8008f9e:	b9de      	cbnz	r6, 8008fd8 <xTaskNotifyWait+0x68>
 8008fa0:	f7fa fefa 	bl	8003d98 <vPortExitCritical>
 8008fa4:	f7fa fed6 	bl	8003d54 <vPortEnterCritical>
 8008fa8:	b115      	cbz	r5, 8008fb0 <xTaskNotifyWait+0x40>
 8008faa:	6823      	ldr	r3, [r4, #0]
 8008fac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008fae:	602b      	str	r3, [r5, #0]
 8008fb0:	6823      	ldr	r3, [r4, #0]
 8008fb2:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008fb6:	2b01      	cmp	r3, #1
 8008fb8:	d01c      	beq.n	8008ff4 <xTaskNotifyWait+0x84>
 8008fba:	6822      	ldr	r2, [r4, #0]
 8008fbc:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 8008fbe:	ea23 0307 	bic.w	r3, r3, r7
 8008fc2:	2501      	movs	r5, #1
 8008fc4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8008fc6:	6823      	ldr	r3, [r4, #0]
 8008fc8:	2200      	movs	r2, #0
 8008fca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8008fce:	f7fa fee3 	bl	8003d98 <vPortExitCritical>
 8008fd2:	4628      	mov	r0, r5
 8008fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008fd8:	4630      	mov	r0, r6
 8008fda:	f7ff fa0b 	bl	80083f4 <prvAddCurrentTaskToDelayedList>
 8008fde:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008fe2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008fe6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008fea:	f3bf 8f4f 	dsb	sy
 8008fee:	f3bf 8f6f 	isb	sy
 8008ff2:	e7d5      	b.n	8008fa0 <xTaskNotifyWait+0x30>
 8008ff4:	2500      	movs	r5, #0
 8008ff6:	e7e6      	b.n	8008fc6 <xTaskNotifyWait+0x56>
 8008ff8:	200016b4 	.word	0x200016b4

08008ffc <xTaskGenericNotify>:
 8008ffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ffe:	b1f8      	cbz	r0, 8009040 <xTaskGenericNotify+0x44>
 8009000:	461e      	mov	r6, r3
 8009002:	460f      	mov	r7, r1
 8009004:	4615      	mov	r5, r2
 8009006:	4604      	mov	r4, r0
 8009008:	f7fa fea4 	bl	8003d54 <vPortEnterCritical>
 800900c:	b10e      	cbz	r6, 8009012 <xTaskGenericNotify+0x16>
 800900e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009010:	6033      	str	r3, [r6, #0]
 8009012:	f894 1050 	ldrb.w	r1, [r4, #80]	@ 0x50
 8009016:	2202      	movs	r2, #2
 8009018:	1e6b      	subs	r3, r5, #1
 800901a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
 800901e:	b2cd      	uxtb	r5, r1
 8009020:	2b03      	cmp	r3, #3
 8009022:	d806      	bhi.n	8009032 <xTaskGenericNotify+0x36>
 8009024:	e8df f003 	tbb	[pc, r3]
 8009028:	02043915 	.word	0x02043915
 800902c:	2d02      	cmp	r5, #2
 800902e:	d038      	beq.n	80090a2 <xTaskGenericNotify+0xa6>
 8009030:	64e7      	str	r7, [r4, #76]	@ 0x4c
 8009032:	2d01      	cmp	r5, #1
 8009034:	d013      	beq.n	800905e <xTaskGenericNotify+0x62>
 8009036:	2401      	movs	r4, #1
 8009038:	f7fa feae 	bl	8003d98 <vPortExitCritical>
 800903c:	4620      	mov	r0, r4
 800903e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009040:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009044:	f383 8811 	msr	BASEPRI, r3
 8009048:	f3bf 8f6f 	isb	sy
 800904c:	f3bf 8f4f 	dsb	sy
 8009050:	e7fe      	b.n	8009050 <xTaskGenericNotify+0x54>
 8009052:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009054:	2d01      	cmp	r5, #1
 8009056:	ea43 0307 	orr.w	r3, r3, r7
 800905a:	64e3      	str	r3, [r4, #76]	@ 0x4c
 800905c:	d1eb      	bne.n	8009036 <xTaskGenericNotify+0x3a>
 800905e:	1d26      	adds	r6, r4, #4
 8009060:	4630      	mov	r0, r6
 8009062:	f7fc fe37 	bl	8005cd4 <uxListRemove>
 8009066:	4a18      	ldr	r2, [pc, #96]	@ (80090c8 <xTaskGenericNotify+0xcc>)
 8009068:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800906a:	fa05 f300 	lsl.w	r3, r5, r0
 800906e:	6815      	ldr	r5, [r2, #0]
 8009070:	432b      	orrs	r3, r5
 8009072:	6013      	str	r3, [r2, #0]
 8009074:	4b15      	ldr	r3, [pc, #84]	@ (80090cc <xTaskGenericNotify+0xd0>)
 8009076:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800907a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800907e:	4631      	mov	r1, r6
 8009080:	f7fc fe02 	bl	8005c88 <vListInsertEnd>
 8009084:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009086:	b173      	cbz	r3, 80090a6 <xTaskGenericNotify+0xaa>
 8009088:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800908c:	f383 8811 	msr	BASEPRI, r3
 8009090:	f3bf 8f6f 	isb	sy
 8009094:	f3bf 8f4f 	dsb	sy
 8009098:	e7fe      	b.n	8009098 <xTaskGenericNotify+0x9c>
 800909a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800909c:	3301      	adds	r3, #1
 800909e:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80090a0:	e7c7      	b.n	8009032 <xTaskGenericNotify+0x36>
 80090a2:	2400      	movs	r4, #0
 80090a4:	e7c8      	b.n	8009038 <xTaskGenericNotify+0x3c>
 80090a6:	4b0a      	ldr	r3, [pc, #40]	@ (80090d0 <xTaskGenericNotify+0xd4>)
 80090a8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80090aa:	681b      	ldr	r3, [r3, #0]
 80090ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80090ae:	429a      	cmp	r2, r3
 80090b0:	d9c1      	bls.n	8009036 <xTaskGenericNotify+0x3a>
 80090b2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80090b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80090ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80090be:	f3bf 8f4f 	dsb	sy
 80090c2:	f3bf 8f6f 	isb	sy
 80090c6:	e7b6      	b.n	8009036 <xTaskGenericNotify+0x3a>
 80090c8:	200015ac 	.word	0x200015ac
 80090cc:	20001628 	.word	0x20001628
 80090d0:	200016b4 	.word	0x200016b4

080090d4 <xTaskGenericNotifyFromISR>:
 80090d4:	b358      	cbz	r0, 800912e <xTaskGenericNotifyFromISR+0x5a>
 80090d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80090da:	460f      	mov	r7, r1
 80090dc:	4615      	mov	r5, r2
 80090de:	461e      	mov	r6, r3
 80090e0:	4604      	mov	r4, r0
 80090e2:	f7fa ff3f 	bl	8003f64 <vPortValidateInterruptPriority>
 80090e6:	f3ef 8811 	mrs	r8, BASEPRI
 80090ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090ee:	f383 8811 	msr	BASEPRI, r3
 80090f2:	f3bf 8f6f 	isb	sy
 80090f6:	f3bf 8f4f 	dsb	sy
 80090fa:	b10e      	cbz	r6, 8009100 <xTaskGenericNotifyFromISR+0x2c>
 80090fc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80090fe:	6033      	str	r3, [r6, #0]
 8009100:	f894 2050 	ldrb.w	r2, [r4, #80]	@ 0x50
 8009104:	1e6b      	subs	r3, r5, #1
 8009106:	b2d5      	uxtb	r5, r2
 8009108:	2202      	movs	r2, #2
 800910a:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
 800910e:	2b03      	cmp	r3, #3
 8009110:	d806      	bhi.n	8009120 <xTaskGenericNotifyFromISR+0x4c>
 8009112:	e8df f003 	tbb	[pc, r3]
 8009116:	2615      	.short	0x2615
 8009118:	0204      	.short	0x0204
 800911a:	2d02      	cmp	r5, #2
 800911c:	d039      	beq.n	8009192 <xTaskGenericNotifyFromISR+0xbe>
 800911e:	64e7      	str	r7, [r4, #76]	@ 0x4c
 8009120:	2d01      	cmp	r5, #1
 8009122:	d013      	beq.n	800914c <xTaskGenericNotifyFromISR+0x78>
 8009124:	2001      	movs	r0, #1
 8009126:	f388 8811 	msr	BASEPRI, r8
 800912a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800912e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009132:	f383 8811 	msr	BASEPRI, r3
 8009136:	f3bf 8f6f 	isb	sy
 800913a:	f3bf 8f4f 	dsb	sy
 800913e:	e7fe      	b.n	800913e <xTaskGenericNotifyFromISR+0x6a>
 8009140:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009142:	2d01      	cmp	r5, #1
 8009144:	ea43 0307 	orr.w	r3, r3, r7
 8009148:	64e3      	str	r3, [r4, #76]	@ 0x4c
 800914a:	d1eb      	bne.n	8009124 <xTaskGenericNotifyFromISR+0x50>
 800914c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800914e:	b163      	cbz	r3, 800916a <xTaskGenericNotifyFromISR+0x96>
 8009150:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009154:	f383 8811 	msr	BASEPRI, r3
 8009158:	f3bf 8f6f 	isb	sy
 800915c:	f3bf 8f4f 	dsb	sy
 8009160:	e7fe      	b.n	8009160 <xTaskGenericNotifyFromISR+0x8c>
 8009162:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8009164:	3301      	adds	r3, #1
 8009166:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8009168:	e7da      	b.n	8009120 <xTaskGenericNotifyFromISR+0x4c>
 800916a:	4b16      	ldr	r3, [pc, #88]	@ (80091c4 <xTaskGenericNotifyFromISR+0xf0>)
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	b193      	cbz	r3, 8009196 <xTaskGenericNotifyFromISR+0xc2>
 8009170:	4815      	ldr	r0, [pc, #84]	@ (80091c8 <xTaskGenericNotifyFromISR+0xf4>)
 8009172:	f104 0118 	add.w	r1, r4, #24
 8009176:	f7fc fd87 	bl	8005c88 <vListInsertEnd>
 800917a:	4b14      	ldr	r3, [pc, #80]	@ (80091cc <xTaskGenericNotifyFromISR+0xf8>)
 800917c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009182:	429a      	cmp	r2, r3
 8009184:	d9ce      	bls.n	8009124 <xTaskGenericNotifyFromISR+0x50>
 8009186:	9b06      	ldr	r3, [sp, #24]
 8009188:	b1c3      	cbz	r3, 80091bc <xTaskGenericNotifyFromISR+0xe8>
 800918a:	9a06      	ldr	r2, [sp, #24]
 800918c:	2301      	movs	r3, #1
 800918e:	6013      	str	r3, [r2, #0]
 8009190:	e7c8      	b.n	8009124 <xTaskGenericNotifyFromISR+0x50>
 8009192:	2000      	movs	r0, #0
 8009194:	e7c7      	b.n	8009126 <xTaskGenericNotifyFromISR+0x52>
 8009196:	1d26      	adds	r6, r4, #4
 8009198:	4630      	mov	r0, r6
 800919a:	f7fc fd9b 	bl	8005cd4 <uxListRemove>
 800919e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 80091a0:	4b0b      	ldr	r3, [pc, #44]	@ (80091d0 <xTaskGenericNotifyFromISR+0xfc>)
 80091a2:	4a0c      	ldr	r2, [pc, #48]	@ (80091d4 <xTaskGenericNotifyFromISR+0x100>)
 80091a4:	4085      	lsls	r5, r0
 80091a6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80091aa:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 80091ae:	681a      	ldr	r2, [r3, #0]
 80091b0:	4631      	mov	r1, r6
 80091b2:	4315      	orrs	r5, r2
 80091b4:	601d      	str	r5, [r3, #0]
 80091b6:	f7fc fd67 	bl	8005c88 <vListInsertEnd>
 80091ba:	e7de      	b.n	800917a <xTaskGenericNotifyFromISR+0xa6>
 80091bc:	4b06      	ldr	r3, [pc, #24]	@ (80091d8 <xTaskGenericNotifyFromISR+0x104>)
 80091be:	2201      	movs	r2, #1
 80091c0:	601a      	str	r2, [r3, #0]
 80091c2:	e7af      	b.n	8009124 <xTaskGenericNotifyFromISR+0x50>
 80091c4:	2000158c 	.word	0x2000158c
 80091c8:	200015e4 	.word	0x200015e4
 80091cc:	200016b4 	.word	0x200016b4
 80091d0:	200015ac 	.word	0x200015ac
 80091d4:	20001628 	.word	0x20001628
 80091d8:	200015a0 	.word	0x200015a0

080091dc <TIM_OC1_SetConfig>:
 80091dc:	6a03      	ldr	r3, [r0, #32]
 80091de:	f023 0301 	bic.w	r3, r3, #1
 80091e2:	b470      	push	{r4, r5, r6}
 80091e4:	6203      	str	r3, [r0, #32]
 80091e6:	6a03      	ldr	r3, [r0, #32]
 80091e8:	6844      	ldr	r4, [r0, #4]
 80091ea:	6982      	ldr	r2, [r0, #24]
 80091ec:	680d      	ldr	r5, [r1, #0]
 80091ee:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
 80091f2:	432a      	orrs	r2, r5
 80091f4:	688d      	ldr	r5, [r1, #8]
 80091f6:	f023 0302 	bic.w	r3, r3, #2
 80091fa:	432b      	orrs	r3, r5
 80091fc:	4d0e      	ldr	r5, [pc, #56]	@ (8009238 <TIM_OC1_SetConfig+0x5c>)
 80091fe:	42a8      	cmp	r0, r5
 8009200:	d00a      	beq.n	8009218 <TIM_OC1_SetConfig+0x3c>
 8009202:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8009206:	42a8      	cmp	r0, r5
 8009208:	d006      	beq.n	8009218 <TIM_OC1_SetConfig+0x3c>
 800920a:	6849      	ldr	r1, [r1, #4]
 800920c:	6044      	str	r4, [r0, #4]
 800920e:	6182      	str	r2, [r0, #24]
 8009210:	bc70      	pop	{r4, r5, r6}
 8009212:	6341      	str	r1, [r0, #52]	@ 0x34
 8009214:	6203      	str	r3, [r0, #32]
 8009216:	4770      	bx	lr
 8009218:	68cd      	ldr	r5, [r1, #12]
 800921a:	f023 0308 	bic.w	r3, r3, #8
 800921e:	432b      	orrs	r3, r5
 8009220:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
 8009224:	f424 7440 	bic.w	r4, r4, #768	@ 0x300
 8009228:	ea46 0c05 	orr.w	ip, r6, r5
 800922c:	f023 0304 	bic.w	r3, r3, #4
 8009230:	ea4c 0404 	orr.w	r4, ip, r4
 8009234:	e7e9      	b.n	800920a <TIM_OC1_SetConfig+0x2e>
 8009236:	bf00      	nop
 8009238:	40010000 	.word	0x40010000

0800923c <TIM_OC3_SetConfig>:
 800923c:	6a03      	ldr	r3, [r0, #32]
 800923e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009242:	b470      	push	{r4, r5, r6}
 8009244:	6203      	str	r3, [r0, #32]
 8009246:	6a03      	ldr	r3, [r0, #32]
 8009248:	6844      	ldr	r4, [r0, #4]
 800924a:	69c2      	ldr	r2, [r0, #28]
 800924c:	680d      	ldr	r5, [r1, #0]
 800924e:	f022 0273 	bic.w	r2, r2, #115	@ 0x73
 8009252:	432a      	orrs	r2, r5
 8009254:	688d      	ldr	r5, [r1, #8]
 8009256:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800925a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800925e:	4d0f      	ldr	r5, [pc, #60]	@ (800929c <TIM_OC3_SetConfig+0x60>)
 8009260:	42a8      	cmp	r0, r5
 8009262:	d00a      	beq.n	800927a <TIM_OC3_SetConfig+0x3e>
 8009264:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8009268:	42a8      	cmp	r0, r5
 800926a:	d006      	beq.n	800927a <TIM_OC3_SetConfig+0x3e>
 800926c:	6849      	ldr	r1, [r1, #4]
 800926e:	6044      	str	r4, [r0, #4]
 8009270:	61c2      	str	r2, [r0, #28]
 8009272:	bc70      	pop	{r4, r5, r6}
 8009274:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8009276:	6203      	str	r3, [r0, #32]
 8009278:	4770      	bx	lr
 800927a:	68cd      	ldr	r5, [r1, #12]
 800927c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009280:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8009284:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
 8009288:	f424 5440 	bic.w	r4, r4, #12288	@ 0x3000
 800928c:	ea46 0c05 	orr.w	ip, r6, r5
 8009290:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009294:	ea44 140c 	orr.w	r4, r4, ip, lsl #4
 8009298:	e7e8      	b.n	800926c <TIM_OC3_SetConfig+0x30>
 800929a:	bf00      	nop
 800929c:	40010000 	.word	0x40010000

080092a0 <TIM_OC4_SetConfig>:
 80092a0:	6a03      	ldr	r3, [r0, #32]
 80092a2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80092a6:	b430      	push	{r4, r5}
 80092a8:	6203      	str	r3, [r0, #32]
 80092aa:	6a03      	ldr	r3, [r0, #32]
 80092ac:	6844      	ldr	r4, [r0, #4]
 80092ae:	69c2      	ldr	r2, [r0, #28]
 80092b0:	680d      	ldr	r5, [r1, #0]
 80092b2:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
 80092b6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80092ba:	688d      	ldr	r5, [r1, #8]
 80092bc:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80092c0:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 80092c4:	4d09      	ldr	r5, [pc, #36]	@ (80092ec <TIM_OC4_SetConfig+0x4c>)
 80092c6:	42a8      	cmp	r0, r5
 80092c8:	d00a      	beq.n	80092e0 <TIM_OC4_SetConfig+0x40>
 80092ca:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 80092ce:	42a8      	cmp	r0, r5
 80092d0:	d006      	beq.n	80092e0 <TIM_OC4_SetConfig+0x40>
 80092d2:	6849      	ldr	r1, [r1, #4]
 80092d4:	6044      	str	r4, [r0, #4]
 80092d6:	61c2      	str	r2, [r0, #28]
 80092d8:	bc30      	pop	{r4, r5}
 80092da:	6401      	str	r1, [r0, #64]	@ 0x40
 80092dc:	6203      	str	r3, [r0, #32]
 80092de:	4770      	bx	lr
 80092e0:	694d      	ldr	r5, [r1, #20]
 80092e2:	f424 4480 	bic.w	r4, r4, #16384	@ 0x4000
 80092e6:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80092ea:	e7f2      	b.n	80092d2 <TIM_OC4_SetConfig+0x32>
 80092ec:	40010000 	.word	0x40010000

080092f0 <HAL_TIM_Base_Start_IT>:
 80092f0:	4603      	mov	r3, r0
 80092f2:	2000      	movs	r0, #0
 80092f4:	681b      	ldr	r3, [r3, #0]
 80092f6:	68da      	ldr	r2, [r3, #12]
 80092f8:	f042 0201 	orr.w	r2, r2, #1
 80092fc:	60da      	str	r2, [r3, #12]
 80092fe:	681a      	ldr	r2, [r3, #0]
 8009300:	f042 0201 	orr.w	r2, r2, #1
 8009304:	601a      	str	r2, [r3, #0]
 8009306:	4770      	bx	lr

08009308 <HAL_TIM_OC_MspInit>:
 8009308:	4770      	bx	lr
 800930a:	bf00      	nop

0800930c <HAL_TIM_OC_Start_IT>:
 800930c:	6803      	ldr	r3, [r0, #0]
 800930e:	290c      	cmp	r1, #12
 8009310:	d80c      	bhi.n	800932c <HAL_TIM_OC_Start_IT+0x20>
 8009312:	e8df f001 	tbb	[pc, r1]
 8009316:	0b07      	.short	0x0b07
 8009318:	0b310b0b 	.word	0x0b310b0b
 800931c:	0b2c0b0b 	.word	0x0b2c0b0b
 8009320:	0b0b      	.short	0x0b0b
 8009322:	27          	.byte	0x27
 8009323:	00          	.byte	0x00
 8009324:	68da      	ldr	r2, [r3, #12]
 8009326:	f042 0202 	orr.w	r2, r2, #2
 800932a:	60da      	str	r2, [r3, #12]
 800932c:	6a18      	ldr	r0, [r3, #32]
 800932e:	2201      	movs	r2, #1
 8009330:	fa02 f101 	lsl.w	r1, r2, r1
 8009334:	ea20 0001 	bic.w	r0, r0, r1
 8009338:	6218      	str	r0, [r3, #32]
 800933a:	6a18      	ldr	r0, [r3, #32]
 800933c:	4a11      	ldr	r2, [pc, #68]	@ (8009384 <HAL_TIM_OC_Start_IT+0x78>)
 800933e:	4301      	orrs	r1, r0
 8009340:	4293      	cmp	r3, r2
 8009342:	6219      	str	r1, [r3, #32]
 8009344:	d009      	beq.n	800935a <HAL_TIM_OC_Start_IT+0x4e>
 8009346:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800934a:	4293      	cmp	r3, r2
 800934c:	d005      	beq.n	800935a <HAL_TIM_OC_Start_IT+0x4e>
 800934e:	681a      	ldr	r2, [r3, #0]
 8009350:	f042 0201 	orr.w	r2, r2, #1
 8009354:	2000      	movs	r0, #0
 8009356:	601a      	str	r2, [r3, #0]
 8009358:	4770      	bx	lr
 800935a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800935c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8009360:	645a      	str	r2, [r3, #68]	@ 0x44
 8009362:	e7f4      	b.n	800934e <HAL_TIM_OC_Start_IT+0x42>
 8009364:	68da      	ldr	r2, [r3, #12]
 8009366:	f042 0210 	orr.w	r2, r2, #16
 800936a:	60da      	str	r2, [r3, #12]
 800936c:	e7de      	b.n	800932c <HAL_TIM_OC_Start_IT+0x20>
 800936e:	68da      	ldr	r2, [r3, #12]
 8009370:	f042 0208 	orr.w	r2, r2, #8
 8009374:	60da      	str	r2, [r3, #12]
 8009376:	e7d9      	b.n	800932c <HAL_TIM_OC_Start_IT+0x20>
 8009378:	68da      	ldr	r2, [r3, #12]
 800937a:	f042 0204 	orr.w	r2, r2, #4
 800937e:	60da      	str	r2, [r3, #12]
 8009380:	e7d4      	b.n	800932c <HAL_TIM_OC_Start_IT+0x20>
 8009382:	bf00      	nop
 8009384:	40010000 	.word	0x40010000

08009388 <HAL_TIM_PWM_Start>:
 8009388:	6803      	ldr	r3, [r0, #0]
 800938a:	2201      	movs	r2, #1
 800938c:	6a18      	ldr	r0, [r3, #32]
 800938e:	fa02 f101 	lsl.w	r1, r2, r1
 8009392:	ea20 0001 	bic.w	r0, r0, r1
 8009396:	6218      	str	r0, [r3, #32]
 8009398:	6a18      	ldr	r0, [r3, #32]
 800939a:	4a0a      	ldr	r2, [pc, #40]	@ (80093c4 <HAL_TIM_PWM_Start+0x3c>)
 800939c:	4301      	orrs	r1, r0
 800939e:	4293      	cmp	r3, r2
 80093a0:	6219      	str	r1, [r3, #32]
 80093a2:	d009      	beq.n	80093b8 <HAL_TIM_PWM_Start+0x30>
 80093a4:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80093a8:	4293      	cmp	r3, r2
 80093aa:	d005      	beq.n	80093b8 <HAL_TIM_PWM_Start+0x30>
 80093ac:	681a      	ldr	r2, [r3, #0]
 80093ae:	f042 0201 	orr.w	r2, r2, #1
 80093b2:	2000      	movs	r0, #0
 80093b4:	601a      	str	r2, [r3, #0]
 80093b6:	4770      	bx	lr
 80093b8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80093ba:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80093be:	645a      	str	r2, [r3, #68]	@ 0x44
 80093c0:	e7f4      	b.n	80093ac <HAL_TIM_PWM_Start+0x24>
 80093c2:	bf00      	nop
 80093c4:	40010000 	.word	0x40010000

080093c8 <HAL_TIM_PWM_Start_IT>:
 80093c8:	f7ff bfa0 	b.w	800930c <HAL_TIM_OC_Start_IT>

080093cc <HAL_TIM_IC_Start_IT>:
 80093cc:	6803      	ldr	r3, [r0, #0]
 80093ce:	290c      	cmp	r1, #12
 80093d0:	d80c      	bhi.n	80093ec <HAL_TIM_IC_Start_IT+0x20>
 80093d2:	e8df f001 	tbb	[pc, r1]
 80093d6:	0b07      	.short	0x0b07
 80093d8:	0b250b0b 	.word	0x0b250b0b
 80093dc:	0b200b0b 	.word	0x0b200b0b
 80093e0:	0b0b      	.short	0x0b0b
 80093e2:	1b          	.byte	0x1b
 80093e3:	00          	.byte	0x00
 80093e4:	68da      	ldr	r2, [r3, #12]
 80093e6:	f042 0202 	orr.w	r2, r2, #2
 80093ea:	60da      	str	r2, [r3, #12]
 80093ec:	6a18      	ldr	r0, [r3, #32]
 80093ee:	2201      	movs	r2, #1
 80093f0:	fa02 f101 	lsl.w	r1, r2, r1
 80093f4:	ea20 0001 	bic.w	r0, r0, r1
 80093f8:	6218      	str	r0, [r3, #32]
 80093fa:	6a1a      	ldr	r2, [r3, #32]
 80093fc:	4311      	orrs	r1, r2
 80093fe:	6219      	str	r1, [r3, #32]
 8009400:	681a      	ldr	r2, [r3, #0]
 8009402:	f042 0201 	orr.w	r2, r2, #1
 8009406:	2000      	movs	r0, #0
 8009408:	601a      	str	r2, [r3, #0]
 800940a:	4770      	bx	lr
 800940c:	68da      	ldr	r2, [r3, #12]
 800940e:	f042 0210 	orr.w	r2, r2, #16
 8009412:	60da      	str	r2, [r3, #12]
 8009414:	e7ea      	b.n	80093ec <HAL_TIM_IC_Start_IT+0x20>
 8009416:	68da      	ldr	r2, [r3, #12]
 8009418:	f042 0208 	orr.w	r2, r2, #8
 800941c:	60da      	str	r2, [r3, #12]
 800941e:	e7e5      	b.n	80093ec <HAL_TIM_IC_Start_IT+0x20>
 8009420:	68da      	ldr	r2, [r3, #12]
 8009422:	f042 0204 	orr.w	r2, r2, #4
 8009426:	60da      	str	r2, [r3, #12]
 8009428:	e7e0      	b.n	80093ec <HAL_TIM_IC_Start_IT+0x20>
 800942a:	bf00      	nop

0800942c <HAL_TIM_Encoder_Start>:
 800942c:	6803      	ldr	r3, [r0, #0]
 800942e:	b1c1      	cbz	r1, 8009462 <HAL_TIM_Encoder_Start+0x36>
 8009430:	2904      	cmp	r1, #4
 8009432:	d10d      	bne.n	8009450 <HAL_TIM_Encoder_Start+0x24>
 8009434:	6a1a      	ldr	r2, [r3, #32]
 8009436:	f022 0210 	bic.w	r2, r2, #16
 800943a:	621a      	str	r2, [r3, #32]
 800943c:	6a1a      	ldr	r2, [r3, #32]
 800943e:	f042 0210 	orr.w	r2, r2, #16
 8009442:	621a      	str	r2, [r3, #32]
 8009444:	681a      	ldr	r2, [r3, #0]
 8009446:	f042 0201 	orr.w	r2, r2, #1
 800944a:	2000      	movs	r0, #0
 800944c:	601a      	str	r2, [r3, #0]
 800944e:	4770      	bx	lr
 8009450:	6a1a      	ldr	r2, [r3, #32]
 8009452:	f022 0201 	bic.w	r2, r2, #1
 8009456:	621a      	str	r2, [r3, #32]
 8009458:	6a1a      	ldr	r2, [r3, #32]
 800945a:	f042 0201 	orr.w	r2, r2, #1
 800945e:	621a      	str	r2, [r3, #32]
 8009460:	e7e8      	b.n	8009434 <HAL_TIM_Encoder_Start+0x8>
 8009462:	6a1a      	ldr	r2, [r3, #32]
 8009464:	f022 0201 	bic.w	r2, r2, #1
 8009468:	621a      	str	r2, [r3, #32]
 800946a:	6a1a      	ldr	r2, [r3, #32]
 800946c:	f042 0201 	orr.w	r2, r2, #1
 8009470:	621a      	str	r2, [r3, #32]
 8009472:	e7e7      	b.n	8009444 <HAL_TIM_Encoder_Start+0x18>

08009474 <HAL_TIM_ConfigClockSource>:
 8009474:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8009478:	2a01      	cmp	r2, #1
 800947a:	d070      	beq.n	800955e <HAL_TIM_ConfigClockSource+0xea>
 800947c:	4603      	mov	r3, r0
 800947e:	6802      	ldr	r2, [r0, #0]
 8009480:	b430      	push	{r4, r5}
 8009482:	2002      	movs	r0, #2
 8009484:	2401      	movs	r4, #1
 8009486:	f883 4038 	strb.w	r4, [r3, #56]	@ 0x38
 800948a:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39
 800948e:	6890      	ldr	r0, [r2, #8]
 8009490:	680c      	ldr	r4, [r1, #0]
 8009492:	f420 407f 	bic.w	r0, r0, #65280	@ 0xff00
 8009496:	f020 0077 	bic.w	r0, r0, #119	@ 0x77
 800949a:	2c50      	cmp	r4, #80	@ 0x50
 800949c:	6090      	str	r0, [r2, #8]
 800949e:	f000 8093 	beq.w	80095c8 <HAL_TIM_ConfigClockSource+0x154>
 80094a2:	d80e      	bhi.n	80094c2 <HAL_TIM_ConfigClockSource+0x4e>
 80094a4:	2c20      	cmp	r4, #32
 80094a6:	f000 8088 	beq.w	80095ba <HAL_TIM_ConfigClockSource+0x146>
 80094aa:	d829      	bhi.n	8009500 <HAL_TIM_ConfigClockSource+0x8c>
 80094ac:	2c00      	cmp	r4, #0
 80094ae:	d07d      	beq.n	80095ac <HAL_TIM_ConfigClockSource+0x138>
 80094b0:	2c10      	cmp	r4, #16
 80094b2:	d11d      	bne.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80094b4:	6891      	ldr	r1, [r2, #8]
 80094b6:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 80094ba:	f041 0117 	orr.w	r1, r1, #23
 80094be:	6091      	str	r1, [r2, #8]
 80094c0:	e016      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80094c2:	f5b4 5f80 	cmp.w	r4, #4096	@ 0x1000
 80094c6:	d065      	beq.n	8009594 <HAL_TIM_ConfigClockSource+0x120>
 80094c8:	d836      	bhi.n	8009538 <HAL_TIM_ConfigClockSource+0xc4>
 80094ca:	2c60      	cmp	r4, #96	@ 0x60
 80094cc:	d049      	beq.n	8009562 <HAL_TIM_ConfigClockSource+0xee>
 80094ce:	2c70      	cmp	r4, #112	@ 0x70
 80094d0:	d10e      	bne.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80094d2:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 80094d6:	6894      	ldr	r4, [r2, #8]
 80094d8:	4328      	orrs	r0, r5
 80094da:	68cd      	ldr	r5, [r1, #12]
 80094dc:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 80094e0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 80094e4:	4308      	orrs	r0, r1
 80094e6:	6090      	str	r0, [r2, #8]
 80094e8:	6891      	ldr	r1, [r2, #8]
 80094ea:	f041 0177 	orr.w	r1, r1, #119	@ 0x77
 80094ee:	6091      	str	r1, [r2, #8]
 80094f0:	2000      	movs	r0, #0
 80094f2:	2201      	movs	r2, #1
 80094f4:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80094f8:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38
 80094fc:	bc30      	pop	{r4, r5}
 80094fe:	4770      	bx	lr
 8009500:	2c30      	cmp	r4, #48	@ 0x30
 8009502:	d04c      	beq.n	800959e <HAL_TIM_ConfigClockSource+0x12a>
 8009504:	2c40      	cmp	r4, #64	@ 0x40
 8009506:	d1f3      	bne.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 8009508:	6848      	ldr	r0, [r1, #4]
 800950a:	68cc      	ldr	r4, [r1, #12]
 800950c:	6a11      	ldr	r1, [r2, #32]
 800950e:	f021 010a 	bic.w	r1, r1, #10
 8009512:	4308      	orrs	r0, r1
 8009514:	6a11      	ldr	r1, [r2, #32]
 8009516:	f021 0101 	bic.w	r1, r1, #1
 800951a:	6211      	str	r1, [r2, #32]
 800951c:	6991      	ldr	r1, [r2, #24]
 800951e:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 8009522:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 8009526:	6191      	str	r1, [r2, #24]
 8009528:	6210      	str	r0, [r2, #32]
 800952a:	6891      	ldr	r1, [r2, #8]
 800952c:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 8009530:	f041 0147 	orr.w	r1, r1, #71	@ 0x47
 8009534:	6091      	str	r1, [r2, #8]
 8009536:	e7db      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 8009538:	f5b4 5f00 	cmp.w	r4, #8192	@ 0x2000
 800953c:	d1d8      	bne.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 800953e:	e9d1 5001 	ldrd	r5, r0, [r1, #4]
 8009542:	6894      	ldr	r4, [r2, #8]
 8009544:	4328      	orrs	r0, r5
 8009546:	68cd      	ldr	r5, [r1, #12]
 8009548:	f424 417f 	bic.w	r1, r4, #65280	@ 0xff00
 800954c:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
 8009550:	4308      	orrs	r0, r1
 8009552:	6090      	str	r0, [r2, #8]
 8009554:	6891      	ldr	r1, [r2, #8]
 8009556:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800955a:	6091      	str	r1, [r2, #8]
 800955c:	e7c8      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 800955e:	2002      	movs	r0, #2
 8009560:	4770      	bx	lr
 8009562:	684c      	ldr	r4, [r1, #4]
 8009564:	68cd      	ldr	r5, [r1, #12]
 8009566:	6a11      	ldr	r1, [r2, #32]
 8009568:	f021 0110 	bic.w	r1, r1, #16
 800956c:	6211      	str	r1, [r2, #32]
 800956e:	6990      	ldr	r0, [r2, #24]
 8009570:	6a11      	ldr	r1, [r2, #32]
 8009572:	f420 4070 	bic.w	r0, r0, #61440	@ 0xf000
 8009576:	f021 01a0 	bic.w	r1, r1, #160	@ 0xa0
 800957a:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 800957e:	ea40 3005 	orr.w	r0, r0, r5, lsl #12
 8009582:	6190      	str	r0, [r2, #24]
 8009584:	6211      	str	r1, [r2, #32]
 8009586:	6891      	ldr	r1, [r2, #8]
 8009588:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 800958c:	f041 0167 	orr.w	r1, r1, #103	@ 0x67
 8009590:	6091      	str	r1, [r2, #8]
 8009592:	e7ad      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 8009594:	6891      	ldr	r1, [r2, #8]
 8009596:	f021 0107 	bic.w	r1, r1, #7
 800959a:	6091      	str	r1, [r2, #8]
 800959c:	e7a8      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 800959e:	6891      	ldr	r1, [r2, #8]
 80095a0:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 80095a4:	f041 0137 	orr.w	r1, r1, #55	@ 0x37
 80095a8:	6091      	str	r1, [r2, #8]
 80095aa:	e7a1      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80095ac:	6891      	ldr	r1, [r2, #8]
 80095ae:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 80095b2:	f041 0107 	orr.w	r1, r1, #7
 80095b6:	6091      	str	r1, [r2, #8]
 80095b8:	e79a      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80095ba:	6891      	ldr	r1, [r2, #8]
 80095bc:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 80095c0:	f041 0127 	orr.w	r1, r1, #39	@ 0x27
 80095c4:	6091      	str	r1, [r2, #8]
 80095c6:	e793      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>
 80095c8:	6848      	ldr	r0, [r1, #4]
 80095ca:	68cc      	ldr	r4, [r1, #12]
 80095cc:	6a11      	ldr	r1, [r2, #32]
 80095ce:	f021 010a 	bic.w	r1, r1, #10
 80095d2:	4308      	orrs	r0, r1
 80095d4:	6a11      	ldr	r1, [r2, #32]
 80095d6:	f021 0101 	bic.w	r1, r1, #1
 80095da:	6211      	str	r1, [r2, #32]
 80095dc:	6991      	ldr	r1, [r2, #24]
 80095de:	f021 01f0 	bic.w	r1, r1, #240	@ 0xf0
 80095e2:	ea41 1104 	orr.w	r1, r1, r4, lsl #4
 80095e6:	6191      	str	r1, [r2, #24]
 80095e8:	6210      	str	r0, [r2, #32]
 80095ea:	6891      	ldr	r1, [r2, #8]
 80095ec:	f021 0170 	bic.w	r1, r1, #112	@ 0x70
 80095f0:	f041 0157 	orr.w	r1, r1, #87	@ 0x57
 80095f4:	6091      	str	r1, [r2, #8]
 80095f6:	e77b      	b.n	80094f0 <HAL_TIM_ConfigClockSource+0x7c>

080095f8 <HAL_TIM_OC_DelayElapsedCallback>:
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop

080095fc <HAL_TIM_IC_CaptureCallback>:
 80095fc:	4770      	bx	lr
 80095fe:	bf00      	nop

08009600 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009600:	4770      	bx	lr
 8009602:	bf00      	nop

08009604 <HAL_TIM_TriggerCallback>:
 8009604:	4770      	bx	lr
 8009606:	bf00      	nop

08009608 <HAL_TIM_IRQHandler>:
 8009608:	6803      	ldr	r3, [r0, #0]
 800960a:	691a      	ldr	r2, [r3, #16]
 800960c:	0791      	lsls	r1, r2, #30
 800960e:	b510      	push	{r4, lr}
 8009610:	4604      	mov	r4, r0
 8009612:	d502      	bpl.n	800961a <HAL_TIM_IRQHandler+0x12>
 8009614:	68da      	ldr	r2, [r3, #12]
 8009616:	0792      	lsls	r2, r2, #30
 8009618:	d45f      	bmi.n	80096da <HAL_TIM_IRQHandler+0xd2>
 800961a:	691a      	ldr	r2, [r3, #16]
 800961c:	0750      	lsls	r0, r2, #29
 800961e:	d502      	bpl.n	8009626 <HAL_TIM_IRQHandler+0x1e>
 8009620:	68da      	ldr	r2, [r3, #12]
 8009622:	0751      	lsls	r1, r2, #29
 8009624:	d446      	bmi.n	80096b4 <HAL_TIM_IRQHandler+0xac>
 8009626:	691a      	ldr	r2, [r3, #16]
 8009628:	0712      	lsls	r2, r2, #28
 800962a:	d502      	bpl.n	8009632 <HAL_TIM_IRQHandler+0x2a>
 800962c:	68da      	ldr	r2, [r3, #12]
 800962e:	0710      	lsls	r0, r2, #28
 8009630:	d42e      	bmi.n	8009690 <HAL_TIM_IRQHandler+0x88>
 8009632:	691a      	ldr	r2, [r3, #16]
 8009634:	06d2      	lsls	r2, r2, #27
 8009636:	d502      	bpl.n	800963e <HAL_TIM_IRQHandler+0x36>
 8009638:	68da      	ldr	r2, [r3, #12]
 800963a:	06d0      	lsls	r0, r2, #27
 800963c:	d418      	bmi.n	8009670 <HAL_TIM_IRQHandler+0x68>
 800963e:	691a      	ldr	r2, [r3, #16]
 8009640:	07d1      	lsls	r1, r2, #31
 8009642:	d502      	bpl.n	800964a <HAL_TIM_IRQHandler+0x42>
 8009644:	68da      	ldr	r2, [r3, #12]
 8009646:	07d2      	lsls	r2, r2, #31
 8009648:	d45d      	bmi.n	8009706 <HAL_TIM_IRQHandler+0xfe>
 800964a:	691a      	ldr	r2, [r3, #16]
 800964c:	0610      	lsls	r0, r2, #24
 800964e:	d502      	bpl.n	8009656 <HAL_TIM_IRQHandler+0x4e>
 8009650:	68da      	ldr	r2, [r3, #12]
 8009652:	0611      	lsls	r1, r2, #24
 8009654:	d45f      	bmi.n	8009716 <HAL_TIM_IRQHandler+0x10e>
 8009656:	691a      	ldr	r2, [r3, #16]
 8009658:	0652      	lsls	r2, r2, #25
 800965a:	d502      	bpl.n	8009662 <HAL_TIM_IRQHandler+0x5a>
 800965c:	68da      	ldr	r2, [r3, #12]
 800965e:	0650      	lsls	r0, r2, #25
 8009660:	d461      	bmi.n	8009726 <HAL_TIM_IRQHandler+0x11e>
 8009662:	691a      	ldr	r2, [r3, #16]
 8009664:	0691      	lsls	r1, r2, #26
 8009666:	d502      	bpl.n	800966e <HAL_TIM_IRQHandler+0x66>
 8009668:	68da      	ldr	r2, [r3, #12]
 800966a:	0692      	lsls	r2, r2, #26
 800966c:	d443      	bmi.n	80096f6 <HAL_TIM_IRQHandler+0xee>
 800966e:	bd10      	pop	{r4, pc}
 8009670:	f06f 0110 	mvn.w	r1, #16
 8009674:	2208      	movs	r2, #8
 8009676:	6119      	str	r1, [r3, #16]
 8009678:	7622      	strb	r2, [r4, #24]
 800967a:	69db      	ldr	r3, [r3, #28]
 800967c:	f413 7f40 	tst.w	r3, #768	@ 0x300
 8009680:	4620      	mov	r0, r4
 8009682:	d064      	beq.n	800974e <HAL_TIM_IRQHandler+0x146>
 8009684:	f7ff ffba 	bl	80095fc <HAL_TIM_IC_CaptureCallback>
 8009688:	2200      	movs	r2, #0
 800968a:	6823      	ldr	r3, [r4, #0]
 800968c:	7622      	strb	r2, [r4, #24]
 800968e:	e7d6      	b.n	800963e <HAL_TIM_IRQHandler+0x36>
 8009690:	f06f 0108 	mvn.w	r1, #8
 8009694:	2204      	movs	r2, #4
 8009696:	6119      	str	r1, [r3, #16]
 8009698:	7622      	strb	r2, [r4, #24]
 800969a:	69db      	ldr	r3, [r3, #28]
 800969c:	0799      	lsls	r1, r3, #30
 800969e:	4620      	mov	r0, r4
 80096a0:	d152      	bne.n	8009748 <HAL_TIM_IRQHandler+0x140>
 80096a2:	f7ff ffa9 	bl	80095f8 <HAL_TIM_OC_DelayElapsedCallback>
 80096a6:	4620      	mov	r0, r4
 80096a8:	f7ff ffaa 	bl	8009600 <HAL_TIM_PWM_PulseFinishedCallback>
 80096ac:	2200      	movs	r2, #0
 80096ae:	6823      	ldr	r3, [r4, #0]
 80096b0:	7622      	strb	r2, [r4, #24]
 80096b2:	e7be      	b.n	8009632 <HAL_TIM_IRQHandler+0x2a>
 80096b4:	f06f 0104 	mvn.w	r1, #4
 80096b8:	2202      	movs	r2, #2
 80096ba:	6119      	str	r1, [r3, #16]
 80096bc:	7622      	strb	r2, [r4, #24]
 80096be:	699b      	ldr	r3, [r3, #24]
 80096c0:	f413 7f40 	tst.w	r3, #768	@ 0x300
 80096c4:	4620      	mov	r0, r4
 80096c6:	d13c      	bne.n	8009742 <HAL_TIM_IRQHandler+0x13a>
 80096c8:	f7ff ff96 	bl	80095f8 <HAL_TIM_OC_DelayElapsedCallback>
 80096cc:	4620      	mov	r0, r4
 80096ce:	f7ff ff97 	bl	8009600 <HAL_TIM_PWM_PulseFinishedCallback>
 80096d2:	2200      	movs	r2, #0
 80096d4:	6823      	ldr	r3, [r4, #0]
 80096d6:	7622      	strb	r2, [r4, #24]
 80096d8:	e7a5      	b.n	8009626 <HAL_TIM_IRQHandler+0x1e>
 80096da:	f06f 0102 	mvn.w	r1, #2
 80096de:	2201      	movs	r2, #1
 80096e0:	6119      	str	r1, [r3, #16]
 80096e2:	7602      	strb	r2, [r0, #24]
 80096e4:	699b      	ldr	r3, [r3, #24]
 80096e6:	079b      	lsls	r3, r3, #30
 80096e8:	d025      	beq.n	8009736 <HAL_TIM_IRQHandler+0x12e>
 80096ea:	f7ff ff87 	bl	80095fc <HAL_TIM_IC_CaptureCallback>
 80096ee:	2200      	movs	r2, #0
 80096f0:	6823      	ldr	r3, [r4, #0]
 80096f2:	7622      	strb	r2, [r4, #24]
 80096f4:	e791      	b.n	800961a <HAL_TIM_IRQHandler+0x12>
 80096f6:	f06f 0220 	mvn.w	r2, #32
 80096fa:	4620      	mov	r0, r4
 80096fc:	611a      	str	r2, [r3, #16]
 80096fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009702:	f7f9 ba3d 	b.w	8002b80 <HAL_TIMEx_CommutationCallback>
 8009706:	f06f 0201 	mvn.w	r2, #1
 800970a:	611a      	str	r2, [r3, #16]
 800970c:	4620      	mov	r0, r4
 800970e:	f7fa f86d 	bl	80037ec <HAL_TIM_PeriodElapsedCallback>
 8009712:	6823      	ldr	r3, [r4, #0]
 8009714:	e799      	b.n	800964a <HAL_TIM_IRQHandler+0x42>
 8009716:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800971a:	611a      	str	r2, [r3, #16]
 800971c:	4620      	mov	r0, r4
 800971e:	f7f9 fa31 	bl	8002b84 <HAL_TIMEx_BreakCallback>
 8009722:	6823      	ldr	r3, [r4, #0]
 8009724:	e797      	b.n	8009656 <HAL_TIM_IRQHandler+0x4e>
 8009726:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800972a:	611a      	str	r2, [r3, #16]
 800972c:	4620      	mov	r0, r4
 800972e:	f7ff ff69 	bl	8009604 <HAL_TIM_TriggerCallback>
 8009732:	6823      	ldr	r3, [r4, #0]
 8009734:	e795      	b.n	8009662 <HAL_TIM_IRQHandler+0x5a>
 8009736:	f7ff ff5f 	bl	80095f8 <HAL_TIM_OC_DelayElapsedCallback>
 800973a:	4620      	mov	r0, r4
 800973c:	f7ff ff60 	bl	8009600 <HAL_TIM_PWM_PulseFinishedCallback>
 8009740:	e7d5      	b.n	80096ee <HAL_TIM_IRQHandler+0xe6>
 8009742:	f7ff ff5b 	bl	80095fc <HAL_TIM_IC_CaptureCallback>
 8009746:	e7c4      	b.n	80096d2 <HAL_TIM_IRQHandler+0xca>
 8009748:	f7ff ff58 	bl	80095fc <HAL_TIM_IC_CaptureCallback>
 800974c:	e7ae      	b.n	80096ac <HAL_TIM_IRQHandler+0xa4>
 800974e:	f7ff ff53 	bl	80095f8 <HAL_TIM_OC_DelayElapsedCallback>
 8009752:	4620      	mov	r0, r4
 8009754:	f7ff ff54 	bl	8009600 <HAL_TIM_PWM_PulseFinishedCallback>
 8009758:	e796      	b.n	8009688 <HAL_TIM_IRQHandler+0x80>
 800975a:	bf00      	nop

0800975c <TIM_Base_SetConfig>:
 800975c:	b430      	push	{r4, r5}
 800975e:	4d36      	ldr	r5, [pc, #216]	@ (8009838 <TIM_Base_SetConfig+0xdc>)
 8009760:	688c      	ldr	r4, [r1, #8]
 8009762:	6803      	ldr	r3, [r0, #0]
 8009764:	680a      	ldr	r2, [r1, #0]
 8009766:	42a8      	cmp	r0, r5
 8009768:	d03c      	beq.n	80097e4 <TIM_Base_SetConfig+0x88>
 800976a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800976e:	d027      	beq.n	80097c0 <TIM_Base_SetConfig+0x64>
 8009770:	f5a5 457c 	sub.w	r5, r5, #64512	@ 0xfc00
 8009774:	42a8      	cmp	r0, r5
 8009776:	d023      	beq.n	80097c0 <TIM_Base_SetConfig+0x64>
 8009778:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 800977c:	42a8      	cmp	r0, r5
 800977e:	d01f      	beq.n	80097c0 <TIM_Base_SetConfig+0x64>
 8009780:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8009784:	42a8      	cmp	r0, r5
 8009786:	d03e      	beq.n	8009806 <TIM_Base_SetConfig+0xaa>
 8009788:	f505 4578 	add.w	r5, r5, #63488	@ 0xf800
 800978c:	42a8      	cmp	r0, r5
 800978e:	d017      	beq.n	80097c0 <TIM_Base_SetConfig+0x64>
 8009790:	4d2a      	ldr	r5, [pc, #168]	@ (800983c <TIM_Base_SetConfig+0xe0>)
 8009792:	42a8      	cmp	r0, r5
 8009794:	d03b      	beq.n	800980e <TIM_Base_SetConfig+0xb2>
 8009796:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 800979a:	42a8      	cmp	r0, r5
 800979c:	d037      	beq.n	800980e <TIM_Base_SetConfig+0xb2>
 800979e:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 80097a2:	42a8      	cmp	r0, r5
 80097a4:	d033      	beq.n	800980e <TIM_Base_SetConfig+0xb2>
 80097a6:	f5a5 3598 	sub.w	r5, r5, #77824	@ 0x13000
 80097aa:	42a8      	cmp	r0, r5
 80097ac:	d03a      	beq.n	8009824 <TIM_Base_SetConfig+0xc8>
 80097ae:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 80097b2:	42a8      	cmp	r0, r5
 80097b4:	d02b      	beq.n	800980e <TIM_Base_SetConfig+0xb2>
 80097b6:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 80097ba:	42a8      	cmp	r0, r5
 80097bc:	d12b      	bne.n	8009816 <TIM_Base_SetConfig+0xba>
 80097be:	e026      	b.n	800980e <TIM_Base_SetConfig+0xb2>
 80097c0:	684d      	ldr	r5, [r1, #4]
 80097c2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80097c6:	432b      	orrs	r3, r5
 80097c8:	68cd      	ldr	r5, [r1, #12]
 80097ca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80097ce:	432b      	orrs	r3, r5
 80097d0:	6003      	str	r3, [r0, #0]
 80097d2:	4b1b      	ldr	r3, [pc, #108]	@ (8009840 <TIM_Base_SetConfig+0xe4>)
 80097d4:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80097d6:	4298      	cmp	r0, r3
 80097d8:	6282      	str	r2, [r0, #40]	@ 0x28
 80097da:	d00e      	beq.n	80097fa <TIM_Base_SetConfig+0x9e>
 80097dc:	2301      	movs	r3, #1
 80097de:	bc30      	pop	{r4, r5}
 80097e0:	6143      	str	r3, [r0, #20]
 80097e2:	4770      	bx	lr
 80097e4:	684d      	ldr	r5, [r1, #4]
 80097e6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80097ea:	432b      	orrs	r3, r5
 80097ec:	68cd      	ldr	r5, [r1, #12]
 80097ee:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80097f2:	432b      	orrs	r3, r5
 80097f4:	6003      	str	r3, [r0, #0]
 80097f6:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80097f8:	6282      	str	r2, [r0, #40]	@ 0x28
 80097fa:	690b      	ldr	r3, [r1, #16]
 80097fc:	6303      	str	r3, [r0, #48]	@ 0x30
 80097fe:	2301      	movs	r3, #1
 8009800:	bc30      	pop	{r4, r5}
 8009802:	6143      	str	r3, [r0, #20]
 8009804:	4770      	bx	lr
 8009806:	684d      	ldr	r5, [r1, #4]
 8009808:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800980c:	432b      	orrs	r3, r5
 800980e:	68c9      	ldr	r1, [r1, #12]
 8009810:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009814:	430b      	orrs	r3, r1
 8009816:	6003      	str	r3, [r0, #0]
 8009818:	2301      	movs	r3, #1
 800981a:	62c4      	str	r4, [r0, #44]	@ 0x2c
 800981c:	6282      	str	r2, [r0, #40]	@ 0x28
 800981e:	bc30      	pop	{r4, r5}
 8009820:	6143      	str	r3, [r0, #20]
 8009822:	4770      	bx	lr
 8009824:	68c9      	ldr	r1, [r1, #12]
 8009826:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800982a:	4319      	orrs	r1, r3
 800982c:	4b05      	ldr	r3, [pc, #20]	@ (8009844 <TIM_Base_SetConfig+0xe8>)
 800982e:	6019      	str	r1, [r3, #0]
 8009830:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8009832:	629a      	str	r2, [r3, #40]	@ 0x28
 8009834:	e7d2      	b.n	80097dc <TIM_Base_SetConfig+0x80>
 8009836:	bf00      	nop
 8009838:	40010000 	.word	0x40010000
 800983c:	40014000 	.word	0x40014000
 8009840:	40010400 	.word	0x40010400
 8009844:	40001800 	.word	0x40001800

08009848 <HAL_TIM_Base_Init>:
 8009848:	b1c0      	cbz	r0, 800987c <HAL_TIM_Base_Init+0x34>
 800984a:	b510      	push	{r4, lr}
 800984c:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8009850:	4604      	mov	r4, r0
 8009852:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009856:	b163      	cbz	r3, 8009872 <HAL_TIM_Base_Init+0x2a>
 8009858:	4621      	mov	r1, r4
 800985a:	2302      	movs	r3, #2
 800985c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009860:	f851 0b04 	ldr.w	r0, [r1], #4
 8009864:	f7ff ff7a 	bl	800975c <TIM_Base_SetConfig>
 8009868:	2301      	movs	r3, #1
 800986a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 800986e:	2000      	movs	r0, #0
 8009870:	bd10      	pop	{r4, pc}
 8009872:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 8009876:	f7f8 fe0b 	bl	8002490 <HAL_TIM_Base_MspInit>
 800987a:	e7ed      	b.n	8009858 <HAL_TIM_Base_Init+0x10>
 800987c:	2001      	movs	r0, #1
 800987e:	4770      	bx	lr

08009880 <HAL_TIM_OC_Init>:
 8009880:	b1c0      	cbz	r0, 80098b4 <HAL_TIM_OC_Init+0x34>
 8009882:	b510      	push	{r4, lr}
 8009884:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8009888:	4604      	mov	r4, r0
 800988a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800988e:	b163      	cbz	r3, 80098aa <HAL_TIM_OC_Init+0x2a>
 8009890:	4621      	mov	r1, r4
 8009892:	2302      	movs	r3, #2
 8009894:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009898:	f851 0b04 	ldr.w	r0, [r1], #4
 800989c:	f7ff ff5e 	bl	800975c <TIM_Base_SetConfig>
 80098a0:	2301      	movs	r3, #1
 80098a2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 80098a6:	2000      	movs	r0, #0
 80098a8:	bd10      	pop	{r4, pc}
 80098aa:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 80098ae:	f7ff fd2b 	bl	8009308 <HAL_TIM_OC_MspInit>
 80098b2:	e7ed      	b.n	8009890 <HAL_TIM_OC_Init+0x10>
 80098b4:	2001      	movs	r0, #1
 80098b6:	4770      	bx	lr

080098b8 <HAL_TIM_PWM_Init>:
 80098b8:	b1c0      	cbz	r0, 80098ec <HAL_TIM_PWM_Init+0x34>
 80098ba:	b510      	push	{r4, lr}
 80098bc:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 80098c0:	4604      	mov	r4, r0
 80098c2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80098c6:	b163      	cbz	r3, 80098e2 <HAL_TIM_PWM_Init+0x2a>
 80098c8:	4621      	mov	r1, r4
 80098ca:	2302      	movs	r3, #2
 80098cc:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 80098d0:	f851 0b04 	ldr.w	r0, [r1], #4
 80098d4:	f7ff ff42 	bl	800975c <TIM_Base_SetConfig>
 80098d8:	2301      	movs	r3, #1
 80098da:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 80098de:	2000      	movs	r0, #0
 80098e0:	bd10      	pop	{r4, pc}
 80098e2:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 80098e6:	f7f8 fe11 	bl	800250c <HAL_TIM_PWM_MspInit>
 80098ea:	e7ed      	b.n	80098c8 <HAL_TIM_PWM_Init+0x10>
 80098ec:	2001      	movs	r0, #1
 80098ee:	4770      	bx	lr

080098f0 <HAL_TIM_IC_Init>:
 80098f0:	b1c0      	cbz	r0, 8009924 <HAL_TIM_IC_Init+0x34>
 80098f2:	b510      	push	{r4, lr}
 80098f4:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 80098f8:	4604      	mov	r4, r0
 80098fa:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80098fe:	b163      	cbz	r3, 800991a <HAL_TIM_IC_Init+0x2a>
 8009900:	4621      	mov	r1, r4
 8009902:	2302      	movs	r3, #2
 8009904:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009908:	f851 0b04 	ldr.w	r0, [r1], #4
 800990c:	f7ff ff26 	bl	800975c <TIM_Base_SetConfig>
 8009910:	2301      	movs	r3, #1
 8009912:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009916:	2000      	movs	r0, #0
 8009918:	bd10      	pop	{r4, pc}
 800991a:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 800991e:	f7f8 fe8f 	bl	8002640 <HAL_TIM_IC_MspInit>
 8009922:	e7ed      	b.n	8009900 <HAL_TIM_IC_Init+0x10>
 8009924:	2001      	movs	r0, #1
 8009926:	4770      	bx	lr

08009928 <HAL_TIM_Encoder_Init>:
 8009928:	2800      	cmp	r0, #0
 800992a:	d046      	beq.n	80099ba <HAL_TIM_Encoder_Init+0x92>
 800992c:	b570      	push	{r4, r5, r6, lr}
 800992e:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8009932:	460c      	mov	r4, r1
 8009934:	4605      	mov	r5, r0
 8009936:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800993a:	2b00      	cmp	r3, #0
 800993c:	d038      	beq.n	80099b0 <HAL_TIM_Encoder_Init+0x88>
 800993e:	4629      	mov	r1, r5
 8009940:	2302      	movs	r3, #2
 8009942:	f885 3039 	strb.w	r3, [r5, #57]	@ 0x39
 8009946:	f851 0b04 	ldr.w	r0, [r1], #4
 800994a:	6883      	ldr	r3, [r0, #8]
 800994c:	f023 0307 	bic.w	r3, r3, #7
 8009950:	6083      	str	r3, [r0, #8]
 8009952:	f7ff ff03 	bl	800975c <TIM_Base_SetConfig>
 8009956:	6881      	ldr	r1, [r0, #8]
 8009958:	6983      	ldr	r3, [r0, #24]
 800995a:	69a6      	ldr	r6, [r4, #24]
 800995c:	68a2      	ldr	r2, [r4, #8]
 800995e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009962:	f023 0303 	bic.w	r3, r3, #3
 8009966:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
 800996a:	431a      	orrs	r2, r3
 800996c:	6923      	ldr	r3, [r4, #16]
 800996e:	69e6      	ldr	r6, [r4, #28]
 8009970:	011b      	lsls	r3, r3, #4
 8009972:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
 8009976:	68e6      	ldr	r6, [r4, #12]
 8009978:	4333      	orrs	r3, r6
 800997a:	6a06      	ldr	r6, [r0, #32]
 800997c:	f026 0caa 	bic.w	ip, r6, #170	@ 0xaa
 8009980:	6a26      	ldr	r6, [r4, #32]
 8009982:	f422 427c 	bic.w	r2, r2, #64512	@ 0xfc00
 8009986:	f022 02fc 	bic.w	r2, r2, #252	@ 0xfc
 800998a:	ea43 3306 	orr.w	r3, r3, r6, lsl #12
 800998e:	4313      	orrs	r3, r2
 8009990:	6966      	ldr	r6, [r4, #20]
 8009992:	6862      	ldr	r2, [r4, #4]
 8009994:	6824      	ldr	r4, [r4, #0]
 8009996:	ea42 1206 	orr.w	r2, r2, r6, lsl #4
 800999a:	4321      	orrs	r1, r4
 800999c:	6081      	str	r1, [r0, #8]
 800999e:	ea42 020c 	orr.w	r2, r2, ip
 80099a2:	2101      	movs	r1, #1
 80099a4:	6183      	str	r3, [r0, #24]
 80099a6:	6202      	str	r2, [r0, #32]
 80099a8:	f885 1039 	strb.w	r1, [r5, #57]	@ 0x39
 80099ac:	2000      	movs	r0, #0
 80099ae:	bd70      	pop	{r4, r5, r6, pc}
 80099b0:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 80099b4:	f7f8 fde8 	bl	8002588 <HAL_TIM_Encoder_MspInit>
 80099b8:	e7c1      	b.n	800993e <HAL_TIM_Encoder_Init+0x16>
 80099ba:	2001      	movs	r0, #1
 80099bc:	4770      	bx	lr
 80099be:	bf00      	nop

080099c0 <TIM_TI1_SetConfig>:
 80099c0:	b470      	push	{r4, r5, r6}
 80099c2:	6a04      	ldr	r4, [r0, #32]
 80099c4:	4e19      	ldr	r6, [pc, #100]	@ (8009a2c <TIM_TI1_SetConfig+0x6c>)
 80099c6:	f024 0401 	bic.w	r4, r4, #1
 80099ca:	6204      	str	r4, [r0, #32]
 80099cc:	6984      	ldr	r4, [r0, #24]
 80099ce:	6a05      	ldr	r5, [r0, #32]
 80099d0:	42b0      	cmp	r0, r6
 80099d2:	f024 0403 	bic.w	r4, r4, #3
 80099d6:	d01d      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099d8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80099dc:	d01a      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099de:	f5a6 467c 	sub.w	r6, r6, #64512	@ 0xfc00
 80099e2:	42b0      	cmp	r0, r6
 80099e4:	d016      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099e6:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 80099ea:	42b0      	cmp	r0, r6
 80099ec:	d012      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099ee:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
 80099f2:	42b0      	cmp	r0, r6
 80099f4:	d00e      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099f6:	f506 4678 	add.w	r6, r6, #63488	@ 0xf800
 80099fa:	42b0      	cmp	r0, r6
 80099fc:	d00a      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 80099fe:	f506 5670 	add.w	r6, r6, #15360	@ 0x3c00
 8009a02:	42b0      	cmp	r0, r6
 8009a04:	d006      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 8009a06:	f5a6 3694 	sub.w	r6, r6, #75776	@ 0x12800
 8009a0a:	42b0      	cmp	r0, r6
 8009a0c:	d002      	beq.n	8009a14 <TIM_TI1_SetConfig+0x54>
 8009a0e:	f044 0401 	orr.w	r4, r4, #1
 8009a12:	e000      	b.n	8009a16 <TIM_TI1_SetConfig+0x56>
 8009a14:	4314      	orrs	r4, r2
 8009a16:	f025 020a 	bic.w	r2, r5, #10
 8009a1a:	f001 010a 	and.w	r1, r1, #10
 8009a1e:	f363 1407 	bfi	r4, r3, #4, #4
 8009a22:	4311      	orrs	r1, r2
 8009a24:	6184      	str	r4, [r0, #24]
 8009a26:	bc70      	pop	{r4, r5, r6}
 8009a28:	6201      	str	r1, [r0, #32]
 8009a2a:	4770      	bx	lr
 8009a2c:	40010000 	.word	0x40010000

08009a30 <HAL_TIM_IC_ConfigChannel>:
 8009a30:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8009a34:	2b01      	cmp	r3, #1
 8009a36:	d079      	beq.n	8009b2c <HAL_TIM_IC_ConfigChannel+0xfc>
 8009a38:	b570      	push	{r4, r5, r6, lr}
 8009a3a:	2302      	movs	r3, #2
 8009a3c:	460d      	mov	r5, r1
 8009a3e:	4616      	mov	r6, r2
 8009a40:	2201      	movs	r2, #1
 8009a42:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
 8009a46:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 8009a4a:	4604      	mov	r4, r0
 8009a4c:	e9d1 1200 	ldrd	r1, r2, [r1]
 8009a50:	6800      	ldr	r0, [r0, #0]
 8009a52:	68eb      	ldr	r3, [r5, #12]
 8009a54:	b33e      	cbz	r6, 8009aa6 <HAL_TIM_IC_ConfigChannel+0x76>
 8009a56:	2e04      	cmp	r6, #4
 8009a58:	68ad      	ldr	r5, [r5, #8]
 8009a5a:	d02f      	beq.n	8009abc <HAL_TIM_IC_ConfigChannel+0x8c>
 8009a5c:	2e08      	cmp	r6, #8
 8009a5e:	d04a      	beq.n	8009af6 <HAL_TIM_IC_ConfigChannel+0xc6>
 8009a60:	6a06      	ldr	r6, [r0, #32]
 8009a62:	f426 5680 	bic.w	r6, r6, #4096	@ 0x1000
 8009a66:	6206      	str	r6, [r0, #32]
 8009a68:	69c6      	ldr	r6, [r0, #28]
 8009a6a:	f426 7640 	bic.w	r6, r6, #768	@ 0x300
 8009a6e:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 8009a72:	f363 360f 	bfi	r6, r3, #12, #4
 8009a76:	6a03      	ldr	r3, [r0, #32]
 8009a78:	61c6      	str	r6, [r0, #28]
 8009a7a:	0309      	lsls	r1, r1, #12
 8009a7c:	f423 4320 	bic.w	r3, r3, #40960	@ 0xa000
 8009a80:	f401 4120 	and.w	r1, r1, #40960	@ 0xa000
 8009a84:	4319      	orrs	r1, r3
 8009a86:	6201      	str	r1, [r0, #32]
 8009a88:	69c3      	ldr	r3, [r0, #28]
 8009a8a:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8009a8e:	61c3      	str	r3, [r0, #28]
 8009a90:	69c3      	ldr	r3, [r0, #28]
 8009a92:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8009a96:	61c3      	str	r3, [r0, #28]
 8009a98:	2000      	movs	r0, #0
 8009a9a:	2301      	movs	r3, #1
 8009a9c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009aa0:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009aa4:	bd70      	pop	{r4, r5, r6, pc}
 8009aa6:	f7ff ff8b 	bl	80099c0 <TIM_TI1_SetConfig>
 8009aaa:	6983      	ldr	r3, [r0, #24]
 8009aac:	68aa      	ldr	r2, [r5, #8]
 8009aae:	f023 030c 	bic.w	r3, r3, #12
 8009ab2:	6183      	str	r3, [r0, #24]
 8009ab4:	6983      	ldr	r3, [r0, #24]
 8009ab6:	4313      	orrs	r3, r2
 8009ab8:	6183      	str	r3, [r0, #24]
 8009aba:	e7ed      	b.n	8009a98 <HAL_TIM_IC_ConfigChannel+0x68>
 8009abc:	6a06      	ldr	r6, [r0, #32]
 8009abe:	f026 0610 	bic.w	r6, r6, #16
 8009ac2:	6206      	str	r6, [r0, #32]
 8009ac4:	6986      	ldr	r6, [r0, #24]
 8009ac6:	f426 7640 	bic.w	r6, r6, #768	@ 0x300
 8009aca:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 8009ace:	f363 360f 	bfi	r6, r3, #12, #4
 8009ad2:	6a03      	ldr	r3, [r0, #32]
 8009ad4:	6186      	str	r6, [r0, #24]
 8009ad6:	0109      	lsls	r1, r1, #4
 8009ad8:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8009adc:	f001 01a0 	and.w	r1, r1, #160	@ 0xa0
 8009ae0:	4319      	orrs	r1, r3
 8009ae2:	6201      	str	r1, [r0, #32]
 8009ae4:	6983      	ldr	r3, [r0, #24]
 8009ae6:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8009aea:	6183      	str	r3, [r0, #24]
 8009aec:	6983      	ldr	r3, [r0, #24]
 8009aee:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8009af2:	6183      	str	r3, [r0, #24]
 8009af4:	e7d0      	b.n	8009a98 <HAL_TIM_IC_ConfigChannel+0x68>
 8009af6:	6a06      	ldr	r6, [r0, #32]
 8009af8:	f426 7680 	bic.w	r6, r6, #256	@ 0x100
 8009afc:	6206      	str	r6, [r0, #32]
 8009afe:	69c6      	ldr	r6, [r0, #28]
 8009b00:	f026 0603 	bic.w	r6, r6, #3
 8009b04:	4316      	orrs	r6, r2
 8009b06:	f363 1607 	bfi	r6, r3, #4, #4
 8009b0a:	6a03      	ldr	r3, [r0, #32]
 8009b0c:	61c6      	str	r6, [r0, #28]
 8009b0e:	0209      	lsls	r1, r1, #8
 8009b10:	f423 6320 	bic.w	r3, r3, #2560	@ 0xa00
 8009b14:	f401 6120 	and.w	r1, r1, #2560	@ 0xa00
 8009b18:	4319      	orrs	r1, r3
 8009b1a:	6201      	str	r1, [r0, #32]
 8009b1c:	69c3      	ldr	r3, [r0, #28]
 8009b1e:	f023 030c 	bic.w	r3, r3, #12
 8009b22:	61c3      	str	r3, [r0, #28]
 8009b24:	69c3      	ldr	r3, [r0, #28]
 8009b26:	432b      	orrs	r3, r5
 8009b28:	61c3      	str	r3, [r0, #28]
 8009b2a:	e7b5      	b.n	8009a98 <HAL_TIM_IC_ConfigChannel+0x68>
 8009b2c:	2002      	movs	r0, #2
 8009b2e:	4770      	bx	lr

08009b30 <TIM_OC2_SetConfig>:
 8009b30:	6a03      	ldr	r3, [r0, #32]
 8009b32:	f023 0310 	bic.w	r3, r3, #16
 8009b36:	b470      	push	{r4, r5, r6}
 8009b38:	6203      	str	r3, [r0, #32]
 8009b3a:	6a03      	ldr	r3, [r0, #32]
 8009b3c:	6844      	ldr	r4, [r0, #4]
 8009b3e:	6982      	ldr	r2, [r0, #24]
 8009b40:	680d      	ldr	r5, [r1, #0]
 8009b42:	f422 42e6 	bic.w	r2, r2, #29440	@ 0x7300
 8009b46:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8009b4a:	688d      	ldr	r5, [r1, #8]
 8009b4c:	f023 0320 	bic.w	r3, r3, #32
 8009b50:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8009b54:	4d0e      	ldr	r5, [pc, #56]	@ (8009b90 <TIM_OC2_SetConfig+0x60>)
 8009b56:	42a8      	cmp	r0, r5
 8009b58:	d00a      	beq.n	8009b70 <TIM_OC2_SetConfig+0x40>
 8009b5a:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 8009b5e:	42a8      	cmp	r0, r5
 8009b60:	d006      	beq.n	8009b70 <TIM_OC2_SetConfig+0x40>
 8009b62:	6849      	ldr	r1, [r1, #4]
 8009b64:	6044      	str	r4, [r0, #4]
 8009b66:	6182      	str	r2, [r0, #24]
 8009b68:	bc70      	pop	{r4, r5, r6}
 8009b6a:	6381      	str	r1, [r0, #56]	@ 0x38
 8009b6c:	6203      	str	r3, [r0, #32]
 8009b6e:	4770      	bx	lr
 8009b70:	68cd      	ldr	r5, [r1, #12]
 8009b72:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009b76:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8009b7a:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
 8009b7e:	f424 6440 	bic.w	r4, r4, #3072	@ 0xc00
 8009b82:	ea46 0c05 	orr.w	ip, r6, r5
 8009b86:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009b8a:	ea44 048c 	orr.w	r4, r4, ip, lsl #2
 8009b8e:	e7e8      	b.n	8009b62 <TIM_OC2_SetConfig+0x32>
 8009b90:	40010000 	.word	0x40010000

08009b94 <HAL_TIM_OC_ConfigChannel>:
 8009b94:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8009b98:	2b01      	cmp	r3, #1
 8009b9a:	d025      	beq.n	8009be8 <HAL_TIM_OC_ConfigChannel+0x54>
 8009b9c:	2302      	movs	r3, #2
 8009b9e:	b510      	push	{r4, lr}
 8009ba0:	4604      	mov	r4, r0
 8009ba2:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 8009ba6:	2a0c      	cmp	r2, #12
 8009ba8:	d80b      	bhi.n	8009bc2 <HAL_TIM_OC_ConfigChannel+0x2e>
 8009baa:	e8df f002 	tbb	[pc, r2]
 8009bae:	0a07      	.short	0x0a07
 8009bb0:	0a150a0a 	.word	0x0a150a0a
 8009bb4:	0a190a0a 	.word	0x0a190a0a
 8009bb8:	0a0a      	.short	0x0a0a
 8009bba:	11          	.byte	0x11
 8009bbb:	00          	.byte	0x00
 8009bbc:	6800      	ldr	r0, [r0, #0]
 8009bbe:	f7ff fb0d 	bl	80091dc <TIM_OC1_SetConfig>
 8009bc2:	2000      	movs	r0, #0
 8009bc4:	2301      	movs	r3, #1
 8009bc6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009bca:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009bce:	bd10      	pop	{r4, pc}
 8009bd0:	6800      	ldr	r0, [r0, #0]
 8009bd2:	f7ff fb65 	bl	80092a0 <TIM_OC4_SetConfig>
 8009bd6:	e7f4      	b.n	8009bc2 <HAL_TIM_OC_ConfigChannel+0x2e>
 8009bd8:	6800      	ldr	r0, [r0, #0]
 8009bda:	f7ff ffa9 	bl	8009b30 <TIM_OC2_SetConfig>
 8009bde:	e7f0      	b.n	8009bc2 <HAL_TIM_OC_ConfigChannel+0x2e>
 8009be0:	6800      	ldr	r0, [r0, #0]
 8009be2:	f7ff fb2b 	bl	800923c <TIM_OC3_SetConfig>
 8009be6:	e7ec      	b.n	8009bc2 <HAL_TIM_OC_ConfigChannel+0x2e>
 8009be8:	2002      	movs	r0, #2
 8009bea:	4770      	bx	lr

08009bec <HAL_TIM_PWM_ConfigChannel>:
 8009bec:	b538      	push	{r3, r4, r5, lr}
 8009bee:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8009bf2:	2b01      	cmp	r3, #1
 8009bf4:	d070      	beq.n	8009cd8 <HAL_TIM_PWM_ConfigChannel+0xec>
 8009bf6:	460d      	mov	r5, r1
 8009bf8:	2302      	movs	r3, #2
 8009bfa:	2101      	movs	r1, #1
 8009bfc:	4604      	mov	r4, r0
 8009bfe:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8009c02:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
 8009c06:	2a0c      	cmp	r2, #12
 8009c08:	d818      	bhi.n	8009c3c <HAL_TIM_PWM_ConfigChannel+0x50>
 8009c0a:	e8df f002 	tbb	[pc, r2]
 8009c0e:	1707      	.short	0x1707
 8009c10:	17361717 	.word	0x17361717
 8009c14:	174e1717 	.word	0x174e1717
 8009c18:	1717      	.short	0x1717
 8009c1a:	1e          	.byte	0x1e
 8009c1b:	00          	.byte	0x00
 8009c1c:	6800      	ldr	r0, [r0, #0]
 8009c1e:	4629      	mov	r1, r5
 8009c20:	f7ff fadc 	bl	80091dc <TIM_OC1_SetConfig>
 8009c24:	6983      	ldr	r3, [r0, #24]
 8009c26:	692a      	ldr	r2, [r5, #16]
 8009c28:	f043 0308 	orr.w	r3, r3, #8
 8009c2c:	6183      	str	r3, [r0, #24]
 8009c2e:	6983      	ldr	r3, [r0, #24]
 8009c30:	f023 0304 	bic.w	r3, r3, #4
 8009c34:	6183      	str	r3, [r0, #24]
 8009c36:	6983      	ldr	r3, [r0, #24]
 8009c38:	4313      	orrs	r3, r2
 8009c3a:	6183      	str	r3, [r0, #24]
 8009c3c:	2000      	movs	r0, #0
 8009c3e:	2301      	movs	r3, #1
 8009c40:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009c44:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009c48:	bd38      	pop	{r3, r4, r5, pc}
 8009c4a:	6800      	ldr	r0, [r0, #0]
 8009c4c:	4629      	mov	r1, r5
 8009c4e:	f7ff fb27 	bl	80092a0 <TIM_OC4_SetConfig>
 8009c52:	69c3      	ldr	r3, [r0, #28]
 8009c54:	692a      	ldr	r2, [r5, #16]
 8009c56:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8009c5a:	61c3      	str	r3, [r0, #28]
 8009c5c:	69c3      	ldr	r3, [r0, #28]
 8009c5e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009c62:	61c3      	str	r3, [r0, #28]
 8009c64:	69c3      	ldr	r3, [r0, #28]
 8009c66:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8009c6a:	61c3      	str	r3, [r0, #28]
 8009c6c:	2000      	movs	r0, #0
 8009c6e:	2301      	movs	r3, #1
 8009c70:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009c74:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009c78:	e7e6      	b.n	8009c48 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8009c7a:	6800      	ldr	r0, [r0, #0]
 8009c7c:	4629      	mov	r1, r5
 8009c7e:	f7ff ff57 	bl	8009b30 <TIM_OC2_SetConfig>
 8009c82:	6983      	ldr	r3, [r0, #24]
 8009c84:	692a      	ldr	r2, [r5, #16]
 8009c86:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8009c8a:	6183      	str	r3, [r0, #24]
 8009c8c:	6983      	ldr	r3, [r0, #24]
 8009c8e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009c92:	6183      	str	r3, [r0, #24]
 8009c94:	6983      	ldr	r3, [r0, #24]
 8009c96:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8009c9a:	6183      	str	r3, [r0, #24]
 8009c9c:	2000      	movs	r0, #0
 8009c9e:	2301      	movs	r3, #1
 8009ca0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009ca4:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009ca8:	e7ce      	b.n	8009c48 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8009caa:	6800      	ldr	r0, [r0, #0]
 8009cac:	4629      	mov	r1, r5
 8009cae:	f7ff fac5 	bl	800923c <TIM_OC3_SetConfig>
 8009cb2:	69c3      	ldr	r3, [r0, #28]
 8009cb4:	692a      	ldr	r2, [r5, #16]
 8009cb6:	f043 0308 	orr.w	r3, r3, #8
 8009cba:	61c3      	str	r3, [r0, #28]
 8009cbc:	69c3      	ldr	r3, [r0, #28]
 8009cbe:	f023 0304 	bic.w	r3, r3, #4
 8009cc2:	61c3      	str	r3, [r0, #28]
 8009cc4:	69c3      	ldr	r3, [r0, #28]
 8009cc6:	4313      	orrs	r3, r2
 8009cc8:	61c3      	str	r3, [r0, #28]
 8009cca:	2000      	movs	r0, #0
 8009ccc:	2301      	movs	r3, #1
 8009cce:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
 8009cd2:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
 8009cd6:	e7b7      	b.n	8009c48 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8009cd8:	2002      	movs	r0, #2
 8009cda:	bd38      	pop	{r3, r4, r5, pc}

08009cdc <HAL_ADC_Init>:
 8009cdc:	2800      	cmp	r0, #0
 8009cde:	f000 809c 	beq.w	8009e1a <HAL_ADC_Init+0x13e>
 8009ce2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009ce4:	b510      	push	{r4, lr}
 8009ce6:	4604      	mov	r4, r0
 8009ce8:	b13b      	cbz	r3, 8009cfa <HAL_ADC_Init+0x1e>
 8009cea:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009cec:	06db      	lsls	r3, r3, #27
 8009cee:	d50c      	bpl.n	8009d0a <HAL_ADC_Init+0x2e>
 8009cf0:	2300      	movs	r3, #0
 8009cf2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
 8009cf6:	2001      	movs	r0, #1
 8009cf8:	bd10      	pop	{r4, pc}
 8009cfa:	6443      	str	r3, [r0, #68]	@ 0x44
 8009cfc:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
 8009d00:	f7fb fcea 	bl	80056d8 <HAL_ADC_MspInit>
 8009d04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009d06:	06db      	lsls	r3, r3, #27
 8009d08:	d4f2      	bmi.n	8009cf0 <HAL_ADC_Init+0x14>
 8009d0a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009d0c:	4a46      	ldr	r2, [pc, #280]	@ (8009e28 <HAL_ADC_Init+0x14c>)
 8009d0e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8009d12:	f023 0302 	bic.w	r3, r3, #2
 8009d16:	f043 0302 	orr.w	r3, r3, #2
 8009d1a:	6423      	str	r3, [r4, #64]	@ 0x40
 8009d1c:	6851      	ldr	r1, [r2, #4]
 8009d1e:	6823      	ldr	r3, [r4, #0]
 8009d20:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
 8009d24:	6051      	str	r1, [r2, #4]
 8009d26:	6851      	ldr	r1, [r2, #4]
 8009d28:	6860      	ldr	r0, [r4, #4]
 8009d2a:	4301      	orrs	r1, r0
 8009d2c:	6051      	str	r1, [r2, #4]
 8009d2e:	685a      	ldr	r2, [r3, #4]
 8009d30:	6920      	ldr	r0, [r4, #16]
 8009d32:	68a1      	ldr	r1, [r4, #8]
 8009d34:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8009d38:	605a      	str	r2, [r3, #4]
 8009d3a:	685a      	ldr	r2, [r3, #4]
 8009d3c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8009d40:	605a      	str	r2, [r3, #4]
 8009d42:	685a      	ldr	r2, [r3, #4]
 8009d44:	68e0      	ldr	r0, [r4, #12]
 8009d46:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8009d4a:	605a      	str	r2, [r3, #4]
 8009d4c:	685a      	ldr	r2, [r3, #4]
 8009d4e:	430a      	orrs	r2, r1
 8009d50:	605a      	str	r2, [r3, #4]
 8009d52:	689a      	ldr	r2, [r3, #8]
 8009d54:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8009d56:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8009d5a:	609a      	str	r2, [r3, #8]
 8009d5c:	689a      	ldr	r2, [r3, #8]
 8009d5e:	4302      	orrs	r2, r0
 8009d60:	609a      	str	r2, [r3, #8]
 8009d62:	4a32      	ldr	r2, [pc, #200]	@ (8009e2c <HAL_ADC_Init+0x150>)
 8009d64:	4291      	cmp	r1, r2
 8009d66:	689a      	ldr	r2, [r3, #8]
 8009d68:	d04f      	beq.n	8009e0a <HAL_ADC_Init+0x12e>
 8009d6a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8009d6e:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8009d70:	609a      	str	r2, [r3, #8]
 8009d72:	689a      	ldr	r2, [r3, #8]
 8009d74:	4311      	orrs	r1, r2
 8009d76:	6099      	str	r1, [r3, #8]
 8009d78:	689a      	ldr	r2, [r3, #8]
 8009d7a:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8009d7e:	609a      	str	r2, [r3, #8]
 8009d80:	689a      	ldr	r2, [r3, #8]
 8009d82:	4302      	orrs	r2, r0
 8009d84:	609a      	str	r2, [r3, #8]
 8009d86:	689a      	ldr	r2, [r3, #8]
 8009d88:	69a0      	ldr	r0, [r4, #24]
 8009d8a:	6a21      	ldr	r1, [r4, #32]
 8009d8c:	f022 0202 	bic.w	r2, r2, #2
 8009d90:	609a      	str	r2, [r3, #8]
 8009d92:	689a      	ldr	r2, [r3, #8]
 8009d94:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8009d98:	609a      	str	r2, [r3, #8]
 8009d9a:	685a      	ldr	r2, [r3, #4]
 8009d9c:	2900      	cmp	r1, #0
 8009d9e:	d03e      	beq.n	8009e1e <HAL_ADC_Init+0x142>
 8009da0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8009da4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8009da6:	605a      	str	r2, [r3, #4]
 8009da8:	685a      	ldr	r2, [r3, #4]
 8009daa:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8009dae:	605a      	str	r2, [r3, #4]
 8009db0:	685a      	ldr	r2, [r3, #4]
 8009db2:	3901      	subs	r1, #1
 8009db4:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 8009db8:	605a      	str	r2, [r3, #4]
 8009dba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009dbc:	69e1      	ldr	r1, [r4, #28]
 8009dbe:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8009dc0:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8009dc4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009dc6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009dc8:	3901      	subs	r1, #1
 8009dca:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8009dce:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009dd0:	689a      	ldr	r2, [r3, #8]
 8009dd2:	6961      	ldr	r1, [r4, #20]
 8009dd4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8009dd8:	609a      	str	r2, [r3, #8]
 8009dda:	689a      	ldr	r2, [r3, #8]
 8009ddc:	ea42 2240 	orr.w	r2, r2, r0, lsl #9
 8009de0:	609a      	str	r2, [r3, #8]
 8009de2:	689a      	ldr	r2, [r3, #8]
 8009de4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009de8:	609a      	str	r2, [r3, #8]
 8009dea:	689a      	ldr	r2, [r3, #8]
 8009dec:	2000      	movs	r0, #0
 8009dee:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8009df2:	609a      	str	r2, [r3, #8]
 8009df4:	6460      	str	r0, [r4, #68]	@ 0x44
 8009df6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009df8:	f023 0303 	bic.w	r3, r3, #3
 8009dfc:	f043 0301 	orr.w	r3, r3, #1
 8009e00:	6423      	str	r3, [r4, #64]	@ 0x40
 8009e02:	2300      	movs	r3, #0
 8009e04:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
 8009e08:	bd10      	pop	{r4, pc}
 8009e0a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8009e0e:	609a      	str	r2, [r3, #8]
 8009e10:	689a      	ldr	r2, [r3, #8]
 8009e12:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8009e16:	609a      	str	r2, [r3, #8]
 8009e18:	e7b5      	b.n	8009d86 <HAL_ADC_Init+0xaa>
 8009e1a:	2001      	movs	r0, #1
 8009e1c:	4770      	bx	lr
 8009e1e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8009e22:	605a      	str	r2, [r3, #4]
 8009e24:	e7c9      	b.n	8009dba <HAL_ADC_Init+0xde>
 8009e26:	bf00      	nop
 8009e28:	40012300 	.word	0x40012300
 8009e2c:	0f000001 	.word	0x0f000001

08009e30 <HAL_ADC_Start_DMA>:
 8009e30:	b570      	push	{r4, r5, r6, lr}
 8009e32:	4605      	mov	r5, r0
 8009e34:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
 8009e38:	b082      	sub	sp, #8
 8009e3a:	2300      	movs	r3, #0
 8009e3c:	2801      	cmp	r0, #1
 8009e3e:	9301      	str	r3, [sp, #4]
 8009e40:	d066      	beq.n	8009f10 <HAL_ADC_Start_DMA+0xe0>
 8009e42:	682e      	ldr	r6, [r5, #0]
 8009e44:	4613      	mov	r3, r2
 8009e46:	2201      	movs	r2, #1
 8009e48:	f885 203c 	strb.w	r2, [r5, #60]	@ 0x3c
 8009e4c:	68b2      	ldr	r2, [r6, #8]
 8009e4e:	07d2      	lsls	r2, r2, #31
 8009e50:	d414      	bmi.n	8009e7c <HAL_ADC_Start_DMA+0x4c>
 8009e52:	68b2      	ldr	r2, [r6, #8]
 8009e54:	f042 0201 	orr.w	r2, r2, #1
 8009e58:	60b2      	str	r2, [r6, #8]
 8009e5a:	4a2f      	ldr	r2, [pc, #188]	@ (8009f18 <HAL_ADC_Start_DMA+0xe8>)
 8009e5c:	6810      	ldr	r0, [r2, #0]
 8009e5e:	4a2f      	ldr	r2, [pc, #188]	@ (8009f1c <HAL_ADC_Start_DMA+0xec>)
 8009e60:	fba2 2000 	umull	r2, r0, r2, r0
 8009e64:	0c80      	lsrs	r0, r0, #18
 8009e66:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8009e6a:	9001      	str	r0, [sp, #4]
 8009e6c:	9a01      	ldr	r2, [sp, #4]
 8009e6e:	b12a      	cbz	r2, 8009e7c <HAL_ADC_Start_DMA+0x4c>
 8009e70:	9c01      	ldr	r4, [sp, #4]
 8009e72:	3c01      	subs	r4, #1
 8009e74:	9401      	str	r4, [sp, #4]
 8009e76:	9801      	ldr	r0, [sp, #4]
 8009e78:	2800      	cmp	r0, #0
 8009e7a:	d1f9      	bne.n	8009e70 <HAL_ADC_Start_DMA+0x40>
 8009e7c:	68b2      	ldr	r2, [r6, #8]
 8009e7e:	07d4      	lsls	r4, r2, #31
 8009e80:	d53a      	bpl.n	8009ef8 <HAL_ADC_Start_DMA+0xc8>
 8009e82:	6c28      	ldr	r0, [r5, #64]	@ 0x40
 8009e84:	f420 60e0 	bic.w	r0, r0, #1792	@ 0x700
 8009e88:	f020 0001 	bic.w	r0, r0, #1
 8009e8c:	f440 7080 	orr.w	r0, r0, #256	@ 0x100
 8009e90:	6428      	str	r0, [r5, #64]	@ 0x40
 8009e92:	6872      	ldr	r2, [r6, #4]
 8009e94:	0550      	lsls	r0, r2, #21
 8009e96:	d505      	bpl.n	8009ea4 <HAL_ADC_Start_DMA+0x74>
 8009e98:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 8009e9a:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 8009e9e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8009ea2:	642a      	str	r2, [r5, #64]	@ 0x40
 8009ea4:	6c2a      	ldr	r2, [r5, #64]	@ 0x40
 8009ea6:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 8009ea8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8009eac:	bf1c      	itt	ne
 8009eae:	6c6a      	ldrne	r2, [r5, #68]	@ 0x44
 8009eb0:	f022 0206 	bicne.w	r2, r2, #6
 8009eb4:	646a      	str	r2, [r5, #68]	@ 0x44
 8009eb6:	2200      	movs	r2, #0
 8009eb8:	f885 203c 	strb.w	r2, [r5, #60]	@ 0x3c
 8009ebc:	460a      	mov	r2, r1
 8009ebe:	4918      	ldr	r1, [pc, #96]	@ (8009f20 <HAL_ADC_Start_DMA+0xf0>)
 8009ec0:	63c1      	str	r1, [r0, #60]	@ 0x3c
 8009ec2:	4918      	ldr	r1, [pc, #96]	@ (8009f24 <HAL_ADC_Start_DMA+0xf4>)
 8009ec4:	6401      	str	r1, [r0, #64]	@ 0x40
 8009ec6:	4918      	ldr	r1, [pc, #96]	@ (8009f28 <HAL_ADC_Start_DMA+0xf8>)
 8009ec8:	64c1      	str	r1, [r0, #76]	@ 0x4c
 8009eca:	f06f 0122 	mvn.w	r1, #34	@ 0x22
 8009ece:	6031      	str	r1, [r6, #0]
 8009ed0:	6871      	ldr	r1, [r6, #4]
 8009ed2:	f041 6180 	orr.w	r1, r1, #67108864	@ 0x4000000
 8009ed6:	6071      	str	r1, [r6, #4]
 8009ed8:	68b1      	ldr	r1, [r6, #8]
 8009eda:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 8009ede:	60b1      	str	r1, [r6, #8]
 8009ee0:	f106 014c 	add.w	r1, r6, #76	@ 0x4c
 8009ee4:	f7fa fb48 	bl	8004578 <HAL_DMA_Start_IT>
 8009ee8:	4b10      	ldr	r3, [pc, #64]	@ (8009f2c <HAL_ADC_Start_DMA+0xfc>)
 8009eea:	685a      	ldr	r2, [r3, #4]
 8009eec:	682b      	ldr	r3, [r5, #0]
 8009eee:	06d2      	lsls	r2, r2, #27
 8009ef0:	d005      	beq.n	8009efe <HAL_ADC_Start_DMA+0xce>
 8009ef2:	4a0f      	ldr	r2, [pc, #60]	@ (8009f30 <HAL_ADC_Start_DMA+0x100>)
 8009ef4:	4293      	cmp	r3, r2
 8009ef6:	d002      	beq.n	8009efe <HAL_ADC_Start_DMA+0xce>
 8009ef8:	2000      	movs	r0, #0
 8009efa:	b002      	add	sp, #8
 8009efc:	bd70      	pop	{r4, r5, r6, pc}
 8009efe:	689a      	ldr	r2, [r3, #8]
 8009f00:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8009f04:	d1f8      	bne.n	8009ef8 <HAL_ADC_Start_DMA+0xc8>
 8009f06:	689a      	ldr	r2, [r3, #8]
 8009f08:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8009f0c:	609a      	str	r2, [r3, #8]
 8009f0e:	e7f3      	b.n	8009ef8 <HAL_ADC_Start_DMA+0xc8>
 8009f10:	2002      	movs	r0, #2
 8009f12:	b002      	add	sp, #8
 8009f14:	bd70      	pop	{r4, r5, r6, pc}
 8009f16:	bf00      	nop
 8009f18:	200001f4 	.word	0x200001f4
 8009f1c:	431bde83 	.word	0x431bde83
 8009f20:	08009f41 	.word	0x08009f41
 8009f24:	08009fa1 	.word	0x08009fa1
 8009f28:	08009fb1 	.word	0x08009fb1
 8009f2c:	40012300 	.word	0x40012300
 8009f30:	40012000 	.word	0x40012000

08009f34 <HAL_ADC_GetValue>:
 8009f34:	6803      	ldr	r3, [r0, #0]
 8009f36:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8009f38:	4770      	bx	lr
 8009f3a:	bf00      	nop

08009f3c <HAL_ADC_ConvCpltCallback>:
 8009f3c:	4770      	bx	lr
 8009f3e:	bf00      	nop

08009f40 <ADC_DMAConvCplt>:
 8009f40:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8009f42:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009f44:	f012 0f50 	tst.w	r2, #80	@ 0x50
 8009f48:	d125      	bne.n	8009f96 <ADC_DMAConvCplt+0x56>
 8009f4a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009f4c:	6819      	ldr	r1, [r3, #0]
 8009f4e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009f52:	b510      	push	{r4, lr}
 8009f54:	641a      	str	r2, [r3, #64]	@ 0x40
 8009f56:	688a      	ldr	r2, [r1, #8]
 8009f58:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8009f5c:	d117      	bne.n	8009f8e <ADC_DMAConvCplt+0x4e>
 8009f5e:	699a      	ldr	r2, [r3, #24]
 8009f60:	b9aa      	cbnz	r2, 8009f8e <ADC_DMAConvCplt+0x4e>
 8009f62:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8009f64:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8009f68:	d002      	beq.n	8009f70 <ADC_DMAConvCplt+0x30>
 8009f6a:	688a      	ldr	r2, [r1, #8]
 8009f6c:	0550      	lsls	r0, r2, #21
 8009f6e:	d40e      	bmi.n	8009f8e <ADC_DMAConvCplt+0x4e>
 8009f70:	684a      	ldr	r2, [r1, #4]
 8009f72:	f022 0220 	bic.w	r2, r2, #32
 8009f76:	604a      	str	r2, [r1, #4]
 8009f78:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009f7a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8009f7e:	641a      	str	r2, [r3, #64]	@ 0x40
 8009f80:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009f82:	04d2      	lsls	r2, r2, #19
 8009f84:	d403      	bmi.n	8009f8e <ADC_DMAConvCplt+0x4e>
 8009f86:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009f88:	f042 0201 	orr.w	r2, r2, #1
 8009f8c:	641a      	str	r2, [r3, #64]	@ 0x40
 8009f8e:	4618      	mov	r0, r3
 8009f90:	f7ff ffd4 	bl	8009f3c <HAL_ADC_ConvCpltCallback>
 8009f94:	bd10      	pop	{r4, pc}
 8009f96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009f98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8009f9a:	4718      	bx	r3

08009f9c <HAL_ADC_ConvHalfCpltCallback>:
 8009f9c:	4770      	bx	lr
 8009f9e:	bf00      	nop

08009fa0 <ADC_DMAHalfConvCplt>:
 8009fa0:	b508      	push	{r3, lr}
 8009fa2:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8009fa4:	f7ff fffa 	bl	8009f9c <HAL_ADC_ConvHalfCpltCallback>
 8009fa8:	bd08      	pop	{r3, pc}
 8009faa:	bf00      	nop

08009fac <HAL_ADC_ErrorCallback>:
 8009fac:	4770      	bx	lr
 8009fae:	bf00      	nop

08009fb0 <ADC_DMAError>:
 8009fb0:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8009fb2:	b508      	push	{r3, lr}
 8009fb4:	2340      	movs	r3, #64	@ 0x40
 8009fb6:	6403      	str	r3, [r0, #64]	@ 0x40
 8009fb8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8009fba:	f043 0304 	orr.w	r3, r3, #4
 8009fbe:	6443      	str	r3, [r0, #68]	@ 0x44
 8009fc0:	f7ff fff4 	bl	8009fac <HAL_ADC_ErrorCallback>
 8009fc4:	bd08      	pop	{r3, pc}
 8009fc6:	bf00      	nop

08009fc8 <HAL_ADC_ConfigChannel>:
 8009fc8:	b570      	push	{r4, r5, r6, lr}
 8009fca:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8009fce:	b082      	sub	sp, #8
 8009fd0:	4602      	mov	r2, r0
 8009fd2:	2b01      	cmp	r3, #1
 8009fd4:	f04f 0000 	mov.w	r0, #0
 8009fd8:	9001      	str	r0, [sp, #4]
 8009fda:	f000 8093 	beq.w	800a104 <HAL_ADC_ConfigChannel+0x13c>
 8009fde:	2301      	movs	r3, #1
 8009fe0:	f882 303c 	strb.w	r3, [r2, #60]	@ 0x3c
 8009fe4:	680d      	ldr	r5, [r1, #0]
 8009fe6:	6813      	ldr	r3, [r2, #0]
 8009fe8:	688c      	ldr	r4, [r1, #8]
 8009fea:	2d09      	cmp	r5, #9
 8009fec:	b2a8      	uxth	r0, r5
 8009fee:	d828      	bhi.n	800a042 <HAL_ADC_ConfigChannel+0x7a>
 8009ff0:	691e      	ldr	r6, [r3, #16]
 8009ff2:	eb05 0e45 	add.w	lr, r5, r5, lsl #1
 8009ff6:	f04f 0c07 	mov.w	ip, #7
 8009ffa:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009ffe:	ea26 060c 	bic.w	r6, r6, ip
 800a002:	611e      	str	r6, [r3, #16]
 800a004:	691e      	ldr	r6, [r3, #16]
 800a006:	fa04 f40e 	lsl.w	r4, r4, lr
 800a00a:	4334      	orrs	r4, r6
 800a00c:	611c      	str	r4, [r3, #16]
 800a00e:	684c      	ldr	r4, [r1, #4]
 800a010:	2c06      	cmp	r4, #6
 800a012:	eb04 0184 	add.w	r1, r4, r4, lsl #2
 800a016:	d82a      	bhi.n	800a06e <HAL_ADC_ConfigChannel+0xa6>
 800a018:	6b5c      	ldr	r4, [r3, #52]	@ 0x34
 800a01a:	3905      	subs	r1, #5
 800a01c:	f04f 0c1f 	mov.w	ip, #31
 800a020:	4088      	lsls	r0, r1
 800a022:	fa0c f101 	lsl.w	r1, ip, r1
 800a026:	ea24 0101 	bic.w	r1, r4, r1
 800a02a:	6359      	str	r1, [r3, #52]	@ 0x34
 800a02c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800a02e:	4308      	orrs	r0, r1
 800a030:	6358      	str	r0, [r3, #52]	@ 0x34
 800a032:	4936      	ldr	r1, [pc, #216]	@ (800a10c <HAL_ADC_ConfigChannel+0x144>)
 800a034:	428b      	cmp	r3, r1
 800a036:	d02b      	beq.n	800a090 <HAL_ADC_ConfigChannel+0xc8>
 800a038:	2000      	movs	r0, #0
 800a03a:	f882 003c 	strb.w	r0, [r2, #60]	@ 0x3c
 800a03e:	b002      	add	sp, #8
 800a040:	bd70      	pop	{r4, r5, r6, pc}
 800a042:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 800a046:	68de      	ldr	r6, [r3, #12]
 800a048:	f1ac 0c1e 	sub.w	ip, ip, #30
 800a04c:	f04f 0e07 	mov.w	lr, #7
 800a050:	fa04 f40c 	lsl.w	r4, r4, ip
 800a054:	fa0e fc0c 	lsl.w	ip, lr, ip
 800a058:	ea26 060c 	bic.w	r6, r6, ip
 800a05c:	60de      	str	r6, [r3, #12]
 800a05e:	68de      	ldr	r6, [r3, #12]
 800a060:	4334      	orrs	r4, r6
 800a062:	60dc      	str	r4, [r3, #12]
 800a064:	684c      	ldr	r4, [r1, #4]
 800a066:	2c06      	cmp	r4, #6
 800a068:	eb04 0184 	add.w	r1, r4, r4, lsl #2
 800a06c:	d9d4      	bls.n	800a018 <HAL_ADC_ConfigChannel+0x50>
 800a06e:	2c0c      	cmp	r4, #12
 800a070:	d834      	bhi.n	800a0dc <HAL_ADC_ConfigChannel+0x114>
 800a072:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800a074:	3923      	subs	r1, #35	@ 0x23
 800a076:	261f      	movs	r6, #31
 800a078:	4088      	lsls	r0, r1
 800a07a:	fa06 f101 	lsl.w	r1, r6, r1
 800a07e:	ea24 0101 	bic.w	r1, r4, r1
 800a082:	6319      	str	r1, [r3, #48]	@ 0x30
 800a084:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800a086:	4308      	orrs	r0, r1
 800a088:	4920      	ldr	r1, [pc, #128]	@ (800a10c <HAL_ADC_ConfigChannel+0x144>)
 800a08a:	6318      	str	r0, [r3, #48]	@ 0x30
 800a08c:	428b      	cmp	r3, r1
 800a08e:	d1d3      	bne.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a090:	2d12      	cmp	r5, #18
 800a092:	d030      	beq.n	800a0f6 <HAL_ADC_ConfigChannel+0x12e>
 800a094:	f1a5 0310 	sub.w	r3, r5, #16
 800a098:	2b01      	cmp	r3, #1
 800a09a:	d8cd      	bhi.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a09c:	491c      	ldr	r1, [pc, #112]	@ (800a110 <HAL_ADC_ConfigChannel+0x148>)
 800a09e:	684b      	ldr	r3, [r1, #4]
 800a0a0:	2d10      	cmp	r5, #16
 800a0a2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800a0a6:	604b      	str	r3, [r1, #4]
 800a0a8:	d1c6      	bne.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a0aa:	4b1a      	ldr	r3, [pc, #104]	@ (800a114 <HAL_ADC_ConfigChannel+0x14c>)
 800a0ac:	f101 7146 	add.w	r1, r1, #51904512	@ 0x3180000
 800a0b0:	681b      	ldr	r3, [r3, #0]
 800a0b2:	f501 312e 	add.w	r1, r1, #178176	@ 0x2b800
 800a0b6:	f201 3183 	addw	r1, r1, #899	@ 0x383
 800a0ba:	fba1 1303 	umull	r1, r3, r1, r3
 800a0be:	0c9b      	lsrs	r3, r3, #18
 800a0c0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a0c4:	005b      	lsls	r3, r3, #1
 800a0c6:	9301      	str	r3, [sp, #4]
 800a0c8:	9b01      	ldr	r3, [sp, #4]
 800a0ca:	2b00      	cmp	r3, #0
 800a0cc:	d0b4      	beq.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a0ce:	9b01      	ldr	r3, [sp, #4]
 800a0d0:	3b01      	subs	r3, #1
 800a0d2:	9301      	str	r3, [sp, #4]
 800a0d4:	9b01      	ldr	r3, [sp, #4]
 800a0d6:	2b00      	cmp	r3, #0
 800a0d8:	d1f9      	bne.n	800a0ce <HAL_ADC_ConfigChannel+0x106>
 800a0da:	e7ad      	b.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a0dc:	6adc      	ldr	r4, [r3, #44]	@ 0x2c
 800a0de:	3941      	subs	r1, #65	@ 0x41
 800a0e0:	261f      	movs	r6, #31
 800a0e2:	4088      	lsls	r0, r1
 800a0e4:	fa06 f101 	lsl.w	r1, r6, r1
 800a0e8:	ea24 0101 	bic.w	r1, r4, r1
 800a0ec:	62d9      	str	r1, [r3, #44]	@ 0x2c
 800a0ee:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800a0f0:	4308      	orrs	r0, r1
 800a0f2:	62d8      	str	r0, [r3, #44]	@ 0x2c
 800a0f4:	e79d      	b.n	800a032 <HAL_ADC_ConfigChannel+0x6a>
 800a0f6:	f8d1 3304 	ldr.w	r3, [r1, #772]	@ 0x304
 800a0fa:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800a0fe:	f8c1 3304 	str.w	r3, [r1, #772]	@ 0x304
 800a102:	e799      	b.n	800a038 <HAL_ADC_ConfigChannel+0x70>
 800a104:	2002      	movs	r0, #2
 800a106:	b002      	add	sp, #8
 800a108:	bd70      	pop	{r4, r5, r6, pc}
 800a10a:	bf00      	nop
 800a10c:	40012000 	.word	0x40012000
 800a110:	40012300 	.word	0x40012300
 800a114:	200001f4 	.word	0x200001f4

0800a118 <HAL_GPIO_Init>:
 800a118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a11c:	2300      	movs	r3, #0
 800a11e:	680c      	ldr	r4, [r1, #0]
 800a120:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800a344 <HAL_GPIO_Init+0x22c>
 800a124:	b085      	sub	sp, #20
 800a126:	468a      	mov	sl, r1
 800a128:	e003      	b.n	800a132 <HAL_GPIO_Init+0x1a>
 800a12a:	3301      	adds	r3, #1
 800a12c:	2b10      	cmp	r3, #16
 800a12e:	f000 80a2 	beq.w	800a276 <HAL_GPIO_Init+0x15e>
 800a132:	2201      	movs	r2, #1
 800a134:	fa02 f103 	lsl.w	r1, r2, r3
 800a138:	ea31 0204 	bics.w	r2, r1, r4
 800a13c:	ea01 0704 	and.w	r7, r1, r4
 800a140:	d1f3      	bne.n	800a12a <HAL_GPIO_Init+0x12>
 800a142:	f8da 2004 	ldr.w	r2, [sl, #4]
 800a146:	f8da 5008 	ldr.w	r5, [sl, #8]
 800a14a:	005e      	lsls	r6, r3, #1
 800a14c:	fa05 fc06 	lsl.w	ip, r5, r6
 800a150:	f022 0810 	bic.w	r8, r2, #16
 800a154:	2503      	movs	r5, #3
 800a156:	40b5      	lsls	r5, r6
 800a158:	f002 0e03 	and.w	lr, r2, #3
 800a15c:	f1b8 0f02 	cmp.w	r8, #2
 800a160:	ea6f 0505 	mvn.w	r5, r5
 800a164:	fa0e fe06 	lsl.w	lr, lr, r6
 800a168:	f000 8088 	beq.w	800a27c <HAL_GPIO_Init+0x164>
 800a16c:	f8d0 9000 	ldr.w	r9, [r0]
 800a170:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800a174:	ea09 0905 	and.w	r9, r9, r5
 800a178:	ea49 0e0e 	orr.w	lr, r9, lr
 800a17c:	f1b8 0f01 	cmp.w	r8, #1
 800a180:	f8c0 e000 	str.w	lr, [r0]
 800a184:	f240 809a 	bls.w	800a2bc <HAL_GPIO_Init+0x1a4>
 800a188:	68c1      	ldr	r1, [r0, #12]
 800a18a:	4029      	ands	r1, r5
 800a18c:	ea41 010c 	orr.w	r1, r1, ip
 800a190:	60c1      	str	r1, [r0, #12]
 800a192:	00d1      	lsls	r1, r2, #3
 800a194:	d5c9      	bpl.n	800a12a <HAL_GPIO_Init+0x12>
 800a196:	4d68      	ldr	r5, [pc, #416]	@ (800a338 <HAL_GPIO_Init+0x220>)
 800a198:	2100      	movs	r1, #0
 800a19a:	9103      	str	r1, [sp, #12]
 800a19c:	6c69      	ldr	r1, [r5, #68]	@ 0x44
 800a19e:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800a1a2:	6469      	str	r1, [r5, #68]	@ 0x44
 800a1a4:	6c69      	ldr	r1, [r5, #68]	@ 0x44
 800a1a6:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 800a1aa:	9103      	str	r1, [sp, #12]
 800a1ac:	9903      	ldr	r1, [sp, #12]
 800a1ae:	f023 0103 	bic.w	r1, r3, #3
 800a1b2:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800a1b6:	f501 319c 	add.w	r1, r1, #79872	@ 0x13800
 800a1ba:	f003 0603 	and.w	r6, r3, #3
 800a1be:	688d      	ldr	r5, [r1, #8]
 800a1c0:	00b6      	lsls	r6, r6, #2
 800a1c2:	f04f 0c0f 	mov.w	ip, #15
 800a1c6:	fa0c fc06 	lsl.w	ip, ip, r6
 800a1ca:	ea25 0e0c 	bic.w	lr, r5, ip
 800a1ce:	4d5b      	ldr	r5, [pc, #364]	@ (800a33c <HAL_GPIO_Init+0x224>)
 800a1d0:	42a8      	cmp	r0, r5
 800a1d2:	d028      	beq.n	800a226 <HAL_GPIO_Init+0x10e>
 800a1d4:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
 800a1d8:	42a8      	cmp	r0, r5
 800a1da:	f000 8085 	beq.w	800a2e8 <HAL_GPIO_Init+0x1d0>
 800a1de:	4d58      	ldr	r5, [pc, #352]	@ (800a340 <HAL_GPIO_Init+0x228>)
 800a1e0:	42a8      	cmp	r0, r5
 800a1e2:	f000 8087 	beq.w	800a2f4 <HAL_GPIO_Init+0x1dc>
 800a1e6:	f8df c160 	ldr.w	ip, [pc, #352]	@ 800a348 <HAL_GPIO_Init+0x230>
 800a1ea:	4560      	cmp	r0, ip
 800a1ec:	f000 8089 	beq.w	800a302 <HAL_GPIO_Init+0x1ea>
 800a1f0:	f8df c158 	ldr.w	ip, [pc, #344]	@ 800a34c <HAL_GPIO_Init+0x234>
 800a1f4:	4560      	cmp	r0, ip
 800a1f6:	f000 808a 	beq.w	800a30e <HAL_GPIO_Init+0x1f6>
 800a1fa:	f8df c154 	ldr.w	ip, [pc, #340]	@ 800a350 <HAL_GPIO_Init+0x238>
 800a1fe:	4560      	cmp	r0, ip
 800a200:	f000 808c 	beq.w	800a31c <HAL_GPIO_Init+0x204>
 800a204:	f8df c14c 	ldr.w	ip, [pc, #332]	@ 800a354 <HAL_GPIO_Init+0x23c>
 800a208:	4560      	cmp	r0, ip
 800a20a:	f000 808e 	beq.w	800a32a <HAL_GPIO_Init+0x212>
 800a20e:	f8df c148 	ldr.w	ip, [pc, #328]	@ 800a358 <HAL_GPIO_Init+0x240>
 800a212:	4560      	cmp	r0, ip
 800a214:	bf0c      	ite	eq
 800a216:	f04f 0c07 	moveq.w	ip, #7
 800a21a:	f04f 0c08 	movne.w	ip, #8
 800a21e:	fa0c f606 	lsl.w	r6, ip, r6
 800a222:	ea4e 0e06 	orr.w	lr, lr, r6
 800a226:	f8c1 e008 	str.w	lr, [r1, #8]
 800a22a:	f8db 1000 	ldr.w	r1, [fp]
 800a22e:	43fd      	mvns	r5, r7
 800a230:	03d6      	lsls	r6, r2, #15
 800a232:	bf54      	ite	pl
 800a234:	4029      	andpl	r1, r5
 800a236:	4339      	orrmi	r1, r7
 800a238:	f8cb 1000 	str.w	r1, [fp]
 800a23c:	f8db 1004 	ldr.w	r1, [fp, #4]
 800a240:	0396      	lsls	r6, r2, #14
 800a242:	bf54      	ite	pl
 800a244:	4029      	andpl	r1, r5
 800a246:	4339      	orrmi	r1, r7
 800a248:	f8cb 1004 	str.w	r1, [fp, #4]
 800a24c:	f8db 1008 	ldr.w	r1, [fp, #8]
 800a250:	02d6      	lsls	r6, r2, #11
 800a252:	bf54      	ite	pl
 800a254:	4029      	andpl	r1, r5
 800a256:	4339      	orrmi	r1, r7
 800a258:	f8cb 1008 	str.w	r1, [fp, #8]
 800a25c:	f8db 100c 	ldr.w	r1, [fp, #12]
 800a260:	0292      	lsls	r2, r2, #10
 800a262:	f103 0301 	add.w	r3, r3, #1
 800a266:	bf54      	ite	pl
 800a268:	4029      	andpl	r1, r5
 800a26a:	4339      	orrmi	r1, r7
 800a26c:	2b10      	cmp	r3, #16
 800a26e:	f8cb 100c 	str.w	r1, [fp, #12]
 800a272:	f47f af5e 	bne.w	800a132 <HAL_GPIO_Init+0x1a>
 800a276:	b005      	add	sp, #20
 800a278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a27c:	ea4f 09d3 	mov.w	r9, r3, lsr #3
 800a280:	eb00 0989 	add.w	r9, r0, r9, lsl #2
 800a284:	f003 0807 	and.w	r8, r3, #7
 800a288:	f8d9 7020 	ldr.w	r7, [r9, #32]
 800a28c:	9700      	str	r7, [sp, #0]
 800a28e:	f8da 7010 	ldr.w	r7, [sl, #16]
 800a292:	ea4f 0888 	mov.w	r8, r8, lsl #2
 800a296:	fa07 f708 	lsl.w	r7, r7, r8
 800a29a:	9701      	str	r7, [sp, #4]
 800a29c:	270f      	movs	r7, #15
 800a29e:	fa07 f808 	lsl.w	r8, r7, r8
 800a2a2:	9f00      	ldr	r7, [sp, #0]
 800a2a4:	ea27 0808 	bic.w	r8, r7, r8
 800a2a8:	9f01      	ldr	r7, [sp, #4]
 800a2aa:	ea47 0708 	orr.w	r7, r7, r8
 800a2ae:	f8c9 7020 	str.w	r7, [r9, #32]
 800a2b2:	6807      	ldr	r7, [r0, #0]
 800a2b4:	402f      	ands	r7, r5
 800a2b6:	ea47 070e 	orr.w	r7, r7, lr
 800a2ba:	6007      	str	r7, [r0, #0]
 800a2bc:	6887      	ldr	r7, [r0, #8]
 800a2be:	ea07 0e05 	and.w	lr, r7, r5
 800a2c2:	f8da 700c 	ldr.w	r7, [sl, #12]
 800a2c6:	40b7      	lsls	r7, r6
 800a2c8:	ea47 070e 	orr.w	r7, r7, lr
 800a2cc:	6087      	str	r7, [r0, #8]
 800a2ce:	6846      	ldr	r6, [r0, #4]
 800a2d0:	0912      	lsrs	r2, r2, #4
 800a2d2:	409a      	lsls	r2, r3
 800a2d4:	ea26 0101 	bic.w	r1, r6, r1
 800a2d8:	430a      	orrs	r2, r1
 800a2da:	6042      	str	r2, [r0, #4]
 800a2dc:	68c2      	ldr	r2, [r0, #12]
 800a2de:	402a      	ands	r2, r5
 800a2e0:	ea42 020c 	orr.w	r2, r2, ip
 800a2e4:	60c2      	str	r2, [r0, #12]
 800a2e6:	e720      	b.n	800a12a <HAL_GPIO_Init+0x12>
 800a2e8:	2501      	movs	r5, #1
 800a2ea:	fa05 f606 	lsl.w	r6, r5, r6
 800a2ee:	ea4e 0e06 	orr.w	lr, lr, r6
 800a2f2:	e798      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a2f4:	f04f 0c02 	mov.w	ip, #2
 800a2f8:	fa0c f606 	lsl.w	r6, ip, r6
 800a2fc:	ea4e 0e06 	orr.w	lr, lr, r6
 800a300:	e791      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a302:	2503      	movs	r5, #3
 800a304:	fa05 f606 	lsl.w	r6, r5, r6
 800a308:	ea4e 0e06 	orr.w	lr, lr, r6
 800a30c:	e78b      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a30e:	f04f 0c04 	mov.w	ip, #4
 800a312:	fa0c f606 	lsl.w	r6, ip, r6
 800a316:	ea4e 0e06 	orr.w	lr, lr, r6
 800a31a:	e784      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a31c:	f04f 0c05 	mov.w	ip, #5
 800a320:	fa0c f606 	lsl.w	r6, ip, r6
 800a324:	ea4e 0e06 	orr.w	lr, lr, r6
 800a328:	e77d      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a32a:	f04f 0c06 	mov.w	ip, #6
 800a32e:	fa0c f606 	lsl.w	r6, ip, r6
 800a332:	ea4e 0e06 	orr.w	lr, lr, r6
 800a336:	e776      	b.n	800a226 <HAL_GPIO_Init+0x10e>
 800a338:	40023800 	.word	0x40023800
 800a33c:	40020000 	.word	0x40020000
 800a340:	40020800 	.word	0x40020800
 800a344:	40013c00 	.word	0x40013c00
 800a348:	40020c00 	.word	0x40020c00
 800a34c:	40021000 	.word	0x40021000
 800a350:	40021400 	.word	0x40021400
 800a354:	40021800 	.word	0x40021800
 800a358:	40021c00 	.word	0x40021c00

0800a35c <HAL_GPIO_DeInit>:
 800a35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a360:	2300      	movs	r3, #0
 800a362:	f8df a14c 	ldr.w	sl, [pc, #332]	@ 800a4b0 <HAL_GPIO_DeInit+0x154>
 800a366:	4e4d      	ldr	r6, [pc, #308]	@ (800a49c <HAL_GPIO_DeInit+0x140>)
 800a368:	b083      	sub	sp, #12
 800a36a:	2501      	movs	r5, #1
 800a36c:	f04f 0903 	mov.w	r9, #3
 800a370:	f04f 080f 	mov.w	r8, #15
 800a374:	e002      	b.n	800a37c <HAL_GPIO_DeInit+0x20>
 800a376:	3301      	adds	r3, #1
 800a378:	2b10      	cmp	r3, #16
 800a37a:	d06d      	beq.n	800a458 <HAL_GPIO_DeInit+0xfc>
 800a37c:	fa05 f203 	lsl.w	r2, r5, r3
 800a380:	ea32 0401 	bics.w	r4, r2, r1
 800a384:	d1f7      	bne.n	800a376 <HAL_GPIO_DeInit+0x1a>
 800a386:	6804      	ldr	r4, [r0, #0]
 800a388:	005f      	lsls	r7, r3, #1
 800a38a:	fa09 f707 	lsl.w	r7, r9, r7
 800a38e:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
 800a392:	ea24 0407 	bic.w	r4, r4, r7
 800a396:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 800a39a:	6004      	str	r4, [r0, #0]
 800a39c:	f003 0407 	and.w	r4, r3, #7
 800a3a0:	f8dc e020 	ldr.w	lr, [ip, #32]
 800a3a4:	00a4      	lsls	r4, r4, #2
 800a3a6:	fa08 f404 	lsl.w	r4, r8, r4
 800a3aa:	ea2e 0404 	bic.w	r4, lr, r4
 800a3ae:	f8cc 4020 	str.w	r4, [ip, #32]
 800a3b2:	6884      	ldr	r4, [r0, #8]
 800a3b4:	ea24 0407 	bic.w	r4, r4, r7
 800a3b8:	6084      	str	r4, [r0, #8]
 800a3ba:	6844      	ldr	r4, [r0, #4]
 800a3bc:	ea24 0402 	bic.w	r4, r4, r2
 800a3c0:	6044      	str	r4, [r0, #4]
 800a3c2:	68c4      	ldr	r4, [r0, #12]
 800a3c4:	ea24 0407 	bic.w	r4, r4, r7
 800a3c8:	f023 0703 	bic.w	r7, r3, #3
 800a3cc:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 800a3d0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800a3d4:	60c4      	str	r4, [r0, #12]
 800a3d6:	f003 0403 	and.w	r4, r3, #3
 800a3da:	f8d7 c008 	ldr.w	ip, [r7, #8]
 800a3de:	00a4      	lsls	r4, r4, #2
 800a3e0:	43d2      	mvns	r2, r2
 800a3e2:	fa08 fe04 	lsl.w	lr, r8, r4
 800a3e6:	4550      	cmp	r0, sl
 800a3e8:	9201      	str	r2, [sp, #4]
 800a3ea:	ea0e 0c0c 	and.w	ip, lr, ip
 800a3ee:	d036      	beq.n	800a45e <HAL_GPIO_DeInit+0x102>
 800a3f0:	4a2b      	ldr	r2, [pc, #172]	@ (800a4a0 <HAL_GPIO_DeInit+0x144>)
 800a3f2:	4290      	cmp	r0, r2
 800a3f4:	d037      	beq.n	800a466 <HAL_GPIO_DeInit+0x10a>
 800a3f6:	4a2b      	ldr	r2, [pc, #172]	@ (800a4a4 <HAL_GPIO_DeInit+0x148>)
 800a3f8:	4290      	cmp	r0, r2
 800a3fa:	d037      	beq.n	800a46c <HAL_GPIO_DeInit+0x110>
 800a3fc:	4a2a      	ldr	r2, [pc, #168]	@ (800a4a8 <HAL_GPIO_DeInit+0x14c>)
 800a3fe:	4290      	cmp	r0, r2
 800a400:	d039      	beq.n	800a476 <HAL_GPIO_DeInit+0x11a>
 800a402:	4a2a      	ldr	r2, [pc, #168]	@ (800a4ac <HAL_GPIO_DeInit+0x150>)
 800a404:	4290      	cmp	r0, r2
 800a406:	d039      	beq.n	800a47c <HAL_GPIO_DeInit+0x120>
 800a408:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 800a4b4 <HAL_GPIO_DeInit+0x158>
 800a40c:	4558      	cmp	r0, fp
 800a40e:	d03a      	beq.n	800a486 <HAL_GPIO_DeInit+0x12a>
 800a410:	f8df b0a4 	ldr.w	fp, [pc, #164]	@ 800a4b8 <HAL_GPIO_DeInit+0x15c>
 800a414:	4558      	cmp	r0, fp
 800a416:	d03b      	beq.n	800a490 <HAL_GPIO_DeInit+0x134>
 800a418:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 800a4bc <HAL_GPIO_DeInit+0x160>
 800a41c:	4558      	cmp	r0, fp
 800a41e:	bf0c      	ite	eq
 800a420:	f04f 0b07 	moveq.w	fp, #7
 800a424:	f04f 0b08 	movne.w	fp, #8
 800a428:	fa0b f404 	lsl.w	r4, fp, r4
 800a42c:	45a4      	cmp	ip, r4
 800a42e:	d1a2      	bne.n	800a376 <HAL_GPIO_DeInit+0x1a>
 800a430:	68bc      	ldr	r4, [r7, #8]
 800a432:	9a01      	ldr	r2, [sp, #4]
 800a434:	ea24 040e 	bic.w	r4, r4, lr
 800a438:	60bc      	str	r4, [r7, #8]
 800a43a:	6834      	ldr	r4, [r6, #0]
 800a43c:	4014      	ands	r4, r2
 800a43e:	6034      	str	r4, [r6, #0]
 800a440:	6874      	ldr	r4, [r6, #4]
 800a442:	4014      	ands	r4, r2
 800a444:	6074      	str	r4, [r6, #4]
 800a446:	68b4      	ldr	r4, [r6, #8]
 800a448:	4014      	ands	r4, r2
 800a44a:	60b4      	str	r4, [r6, #8]
 800a44c:	68f4      	ldr	r4, [r6, #12]
 800a44e:	3301      	adds	r3, #1
 800a450:	4022      	ands	r2, r4
 800a452:	2b10      	cmp	r3, #16
 800a454:	60f2      	str	r2, [r6, #12]
 800a456:	d191      	bne.n	800a37c <HAL_GPIO_DeInit+0x20>
 800a458:	b003      	add	sp, #12
 800a45a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a45e:	2400      	movs	r4, #0
 800a460:	45a4      	cmp	ip, r4
 800a462:	d188      	bne.n	800a376 <HAL_GPIO_DeInit+0x1a>
 800a464:	e7e4      	b.n	800a430 <HAL_GPIO_DeInit+0xd4>
 800a466:	fa05 f404 	lsl.w	r4, r5, r4
 800a46a:	e7f9      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a46c:	f04f 0b02 	mov.w	fp, #2
 800a470:	fa0b f404 	lsl.w	r4, fp, r4
 800a474:	e7f4      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a476:	fa09 f404 	lsl.w	r4, r9, r4
 800a47a:	e7f1      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a47c:	f04f 0b04 	mov.w	fp, #4
 800a480:	fa0b f404 	lsl.w	r4, fp, r4
 800a484:	e7ec      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a486:	f04f 0b05 	mov.w	fp, #5
 800a48a:	fa0b f404 	lsl.w	r4, fp, r4
 800a48e:	e7e7      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a490:	f04f 0b06 	mov.w	fp, #6
 800a494:	fa0b f404 	lsl.w	r4, fp, r4
 800a498:	e7e2      	b.n	800a460 <HAL_GPIO_DeInit+0x104>
 800a49a:	bf00      	nop
 800a49c:	40013c00 	.word	0x40013c00
 800a4a0:	40020400 	.word	0x40020400
 800a4a4:	40020800 	.word	0x40020800
 800a4a8:	40020c00 	.word	0x40020c00
 800a4ac:	40021000 	.word	0x40021000
 800a4b0:	40020000 	.word	0x40020000
 800a4b4:	40021400 	.word	0x40021400
 800a4b8:	40021800 	.word	0x40021800
 800a4bc:	40021c00 	.word	0x40021c00

0800a4c0 <HAL_GPIO_ReadPin>:
 800a4c0:	6900      	ldr	r0, [r0, #16]
 800a4c2:	4008      	ands	r0, r1
 800a4c4:	3800      	subs	r0, #0
 800a4c6:	bf18      	it	ne
 800a4c8:	2001      	movne	r0, #1
 800a4ca:	4770      	bx	lr

0800a4cc <HAL_GPIO_WritePin>:
 800a4cc:	b902      	cbnz	r2, 800a4d0 <HAL_GPIO_WritePin+0x4>
 800a4ce:	0409      	lsls	r1, r1, #16
 800a4d0:	6181      	str	r1, [r0, #24]
 800a4d2:	4770      	bx	lr

0800a4d4 <HAL_GPIO_EXTI_IRQHandler>:
 800a4d4:	4a04      	ldr	r2, [pc, #16]	@ (800a4e8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a4d6:	6951      	ldr	r1, [r2, #20]
 800a4d8:	4201      	tst	r1, r0
 800a4da:	d100      	bne.n	800a4de <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a4dc:	4770      	bx	lr
 800a4de:	b508      	push	{r3, lr}
 800a4e0:	6150      	str	r0, [r2, #20]
 800a4e2:	f7fd ff65 	bl	80083b0 <HAL_GPIO_EXTI_Callback>
 800a4e6:	bd08      	pop	{r3, pc}
 800a4e8:	40013c00 	.word	0x40013c00

0800a4ec <HAL_I2C_Init>:
 800a4ec:	2800      	cmp	r0, #0
 800a4ee:	d06a      	beq.n	800a5c6 <HAL_I2C_Init+0xda>
 800a4f0:	b538      	push	{r3, r4, r5, lr}
 800a4f2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a4f6:	4604      	mov	r4, r0
 800a4f8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a4fc:	2b00      	cmp	r3, #0
 800a4fe:	d04d      	beq.n	800a59c <HAL_I2C_Init+0xb0>
 800a500:	6822      	ldr	r2, [r4, #0]
 800a502:	4d32      	ldr	r5, [pc, #200]	@ (800a5cc <HAL_I2C_Init+0xe0>)
 800a504:	2324      	movs	r3, #36	@ 0x24
 800a506:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
 800a50a:	6813      	ldr	r3, [r2, #0]
 800a50c:	f023 0301 	bic.w	r3, r3, #1
 800a510:	6013      	str	r3, [r2, #0]
 800a512:	f7fc fa09 	bl	8006928 <HAL_RCC_GetPCLK1Freq>
 800a516:	4b2e      	ldr	r3, [pc, #184]	@ (800a5d0 <HAL_I2C_Init+0xe4>)
 800a518:	6822      	ldr	r2, [r4, #0]
 800a51a:	fba3 1300 	umull	r1, r3, r3, r0
 800a51e:	6861      	ldr	r1, [r4, #4]
 800a520:	0c9b      	lsrs	r3, r3, #18
 800a522:	42a9      	cmp	r1, r5
 800a524:	6053      	str	r3, [r2, #4]
 800a526:	d824      	bhi.n	800a572 <HAL_I2C_Init+0x86>
 800a528:	0049      	lsls	r1, r1, #1
 800a52a:	fbb0 f0f1 	udiv	r0, r0, r1
 800a52e:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800a532:	3301      	adds	r3, #1
 800a534:	4208      	tst	r0, r1
 800a536:	6213      	str	r3, [r2, #32]
 800a538:	bf08      	it	eq
 800a53a:	2004      	moveq	r0, #4
 800a53c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800a540:	61d0      	str	r0, [r2, #28]
 800a542:	430b      	orrs	r3, r1
 800a544:	e9d4 0103 	ldrd	r0, r1, [r4, #12]
 800a548:	6013      	str	r3, [r2, #0]
 800a54a:	4301      	orrs	r1, r0
 800a54c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a550:	4303      	orrs	r3, r0
 800a552:	6091      	str	r1, [r2, #8]
 800a554:	60d3      	str	r3, [r2, #12]
 800a556:	6811      	ldr	r1, [r2, #0]
 800a558:	2300      	movs	r3, #0
 800a55a:	f041 0101 	orr.w	r1, r1, #1
 800a55e:	2020      	movs	r0, #32
 800a560:	6011      	str	r1, [r2, #0]
 800a562:	6423      	str	r3, [r4, #64]	@ 0x40
 800a564:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
 800a568:	6323      	str	r3, [r4, #48]	@ 0x30
 800a56a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a56e:	4618      	mov	r0, r3
 800a570:	bd38      	pop	{r3, r4, r5, pc}
 800a572:	4d18      	ldr	r5, [pc, #96]	@ (800a5d4 <HAL_I2C_Init+0xe8>)
 800a574:	f44f 7c96 	mov.w	ip, #300	@ 0x12c
 800a578:	fb0c f303 	mul.w	r3, ip, r3
 800a57c:	fba5 5303 	umull	r5, r3, r5, r3
 800a580:	099b      	lsrs	r3, r3, #6
 800a582:	3301      	adds	r3, #1
 800a584:	6213      	str	r3, [r2, #32]
 800a586:	68a3      	ldr	r3, [r4, #8]
 800a588:	b96b      	cbnz	r3, 800a5a6 <HAL_I2C_Init+0xba>
 800a58a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800a58e:	fbb0 f0f1 	udiv	r0, r0, r1
 800a592:	f3c0 030b 	ubfx	r3, r0, #0, #12
 800a596:	b99b      	cbnz	r3, 800a5c0 <HAL_I2C_Init+0xd4>
 800a598:	2001      	movs	r0, #1
 800a59a:	e7cf      	b.n	800a53c <HAL_I2C_Init+0x50>
 800a59c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
 800a5a0:	f000 fe2a 	bl	800b1f8 <HAL_I2C_MspInit>
 800a5a4:	e7ac      	b.n	800a500 <HAL_I2C_Init+0x14>
 800a5a6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a5aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800a5ae:	fbb0 f0f1 	udiv	r0, r0, r1
 800a5b2:	f3c0 030b 	ubfx	r3, r0, #0, #12
 800a5b6:	2b00      	cmp	r3, #0
 800a5b8:	d0ee      	beq.n	800a598 <HAL_I2C_Init+0xac>
 800a5ba:	f440 4040 	orr.w	r0, r0, #49152	@ 0xc000
 800a5be:	e7bd      	b.n	800a53c <HAL_I2C_Init+0x50>
 800a5c0:	f440 4000 	orr.w	r0, r0, #32768	@ 0x8000
 800a5c4:	e7ba      	b.n	800a53c <HAL_I2C_Init+0x50>
 800a5c6:	2001      	movs	r0, #1
 800a5c8:	4770      	bx	lr
 800a5ca:	bf00      	nop
 800a5cc:	000186a0 	.word	0x000186a0
 800a5d0:	431bde83 	.word	0x431bde83
 800a5d4:	10624dd3 	.word	0x10624dd3

0800a5d8 <HAL_I2C_Slave_Sequential_Transmit_IT>:
 800a5d8:	f890 c03d 	ldrb.w	ip, [r0, #61]	@ 0x3d
 800a5dc:	f1bc 0f28 	cmp.w	ip, #40	@ 0x28
 800a5e0:	d130      	bne.n	800a644 <HAL_I2C_Slave_Sequential_Transmit_IT+0x6c>
 800a5e2:	2900      	cmp	r1, #0
 800a5e4:	d02c      	beq.n	800a640 <HAL_I2C_Slave_Sequential_Transmit_IT+0x68>
 800a5e6:	2a00      	cmp	r2, #0
 800a5e8:	d02a      	beq.n	800a640 <HAL_I2C_Slave_Sequential_Transmit_IT+0x68>
 800a5ea:	b430      	push	{r4, r5}
 800a5ec:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
 800a5f0:	2c01      	cmp	r4, #1
 800a5f2:	b082      	sub	sp, #8
 800a5f4:	d02d      	beq.n	800a652 <HAL_I2C_Slave_Sequential_Transmit_IT+0x7a>
 800a5f6:	6804      	ldr	r4, [r0, #0]
 800a5f8:	6825      	ldr	r5, [r4, #0]
 800a5fa:	07ed      	lsls	r5, r5, #31
 800a5fc:	d524      	bpl.n	800a648 <HAL_I2C_Slave_Sequential_Transmit_IT+0x70>
 800a5fe:	6825      	ldr	r5, [r4, #0]
 800a600:	f425 6500 	bic.w	r5, r5, #2048	@ 0x800
 800a604:	6025      	str	r5, [r4, #0]
 800a606:	2529      	movs	r5, #41	@ 0x29
 800a608:	f880 503d 	strb.w	r5, [r0, #61]	@ 0x3d
 800a60c:	6241      	str	r1, [r0, #36]	@ 0x24
 800a60e:	2520      	movs	r5, #32
 800a610:	2100      	movs	r1, #0
 800a612:	f880 503e 	strb.w	r5, [r0, #62]	@ 0x3e
 800a616:	6401      	str	r1, [r0, #64]	@ 0x40
 800a618:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800a61a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a61c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800a61e:	9101      	str	r1, [sp, #4]
 800a620:	6963      	ldr	r3, [r4, #20]
 800a622:	9301      	str	r3, [sp, #4]
 800a624:	69a3      	ldr	r3, [r4, #24]
 800a626:	9301      	str	r3, [sp, #4]
 800a628:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 800a62c:	9b01      	ldr	r3, [sp, #4]
 800a62e:	6863      	ldr	r3, [r4, #4]
 800a630:	8502      	strh	r2, [r0, #40]	@ 0x28
 800a632:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800a636:	6063      	str	r3, [r4, #4]
 800a638:	4608      	mov	r0, r1
 800a63a:	b002      	add	sp, #8
 800a63c:	bc30      	pop	{r4, r5}
 800a63e:	4770      	bx	lr
 800a640:	2001      	movs	r0, #1
 800a642:	4770      	bx	lr
 800a644:	2002      	movs	r0, #2
 800a646:	4770      	bx	lr
 800a648:	6825      	ldr	r5, [r4, #0]
 800a64a:	f045 0501 	orr.w	r5, r5, #1
 800a64e:	6025      	str	r5, [r4, #0]
 800a650:	e7d5      	b.n	800a5fe <HAL_I2C_Slave_Sequential_Transmit_IT+0x26>
 800a652:	2002      	movs	r0, #2
 800a654:	e7f1      	b.n	800a63a <HAL_I2C_Slave_Sequential_Transmit_IT+0x62>
 800a656:	bf00      	nop

0800a658 <HAL_I2C_Slave_Sequential_Receive_IT>:
 800a658:	f890 c03d 	ldrb.w	ip, [r0, #61]	@ 0x3d
 800a65c:	f1bc 0f28 	cmp.w	ip, #40	@ 0x28
 800a660:	d130      	bne.n	800a6c4 <HAL_I2C_Slave_Sequential_Receive_IT+0x6c>
 800a662:	2900      	cmp	r1, #0
 800a664:	d02c      	beq.n	800a6c0 <HAL_I2C_Slave_Sequential_Receive_IT+0x68>
 800a666:	2a00      	cmp	r2, #0
 800a668:	d02a      	beq.n	800a6c0 <HAL_I2C_Slave_Sequential_Receive_IT+0x68>
 800a66a:	b430      	push	{r4, r5}
 800a66c:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
 800a670:	2c01      	cmp	r4, #1
 800a672:	b082      	sub	sp, #8
 800a674:	d02d      	beq.n	800a6d2 <HAL_I2C_Slave_Sequential_Receive_IT+0x7a>
 800a676:	6804      	ldr	r4, [r0, #0]
 800a678:	6825      	ldr	r5, [r4, #0]
 800a67a:	07ed      	lsls	r5, r5, #31
 800a67c:	d524      	bpl.n	800a6c8 <HAL_I2C_Slave_Sequential_Receive_IT+0x70>
 800a67e:	6825      	ldr	r5, [r4, #0]
 800a680:	f425 6500 	bic.w	r5, r5, #2048	@ 0x800
 800a684:	6025      	str	r5, [r4, #0]
 800a686:	252a      	movs	r5, #42	@ 0x2a
 800a688:	f880 503d 	strb.w	r5, [r0, #61]	@ 0x3d
 800a68c:	6241      	str	r1, [r0, #36]	@ 0x24
 800a68e:	2520      	movs	r5, #32
 800a690:	2100      	movs	r1, #0
 800a692:	f880 503e 	strb.w	r5, [r0, #62]	@ 0x3e
 800a696:	6401      	str	r1, [r0, #64]	@ 0x40
 800a698:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800a69a:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a69c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800a69e:	9101      	str	r1, [sp, #4]
 800a6a0:	6963      	ldr	r3, [r4, #20]
 800a6a2:	9301      	str	r3, [sp, #4]
 800a6a4:	69a3      	ldr	r3, [r4, #24]
 800a6a6:	9301      	str	r3, [sp, #4]
 800a6a8:	f880 103c 	strb.w	r1, [r0, #60]	@ 0x3c
 800a6ac:	9b01      	ldr	r3, [sp, #4]
 800a6ae:	6863      	ldr	r3, [r4, #4]
 800a6b0:	8502      	strh	r2, [r0, #40]	@ 0x28
 800a6b2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800a6b6:	6063      	str	r3, [r4, #4]
 800a6b8:	4608      	mov	r0, r1
 800a6ba:	b002      	add	sp, #8
 800a6bc:	bc30      	pop	{r4, r5}
 800a6be:	4770      	bx	lr
 800a6c0:	2001      	movs	r0, #1
 800a6c2:	4770      	bx	lr
 800a6c4:	2002      	movs	r0, #2
 800a6c6:	4770      	bx	lr
 800a6c8:	6825      	ldr	r5, [r4, #0]
 800a6ca:	f045 0501 	orr.w	r5, r5, #1
 800a6ce:	6025      	str	r5, [r4, #0]
 800a6d0:	e7d5      	b.n	800a67e <HAL_I2C_Slave_Sequential_Receive_IT+0x26>
 800a6d2:	2002      	movs	r0, #2
 800a6d4:	e7f1      	b.n	800a6ba <HAL_I2C_Slave_Sequential_Receive_IT+0x62>
 800a6d6:	bf00      	nop

0800a6d8 <HAL_I2C_EnableListen_IT>:
 800a6d8:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800a6dc:	2b20      	cmp	r3, #32
 800a6de:	d001      	beq.n	800a6e4 <HAL_I2C_EnableListen_IT+0xc>
 800a6e0:	2002      	movs	r0, #2
 800a6e2:	4770      	bx	lr
 800a6e4:	2228      	movs	r2, #40	@ 0x28
 800a6e6:	6803      	ldr	r3, [r0, #0]
 800a6e8:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800a6ec:	681a      	ldr	r2, [r3, #0]
 800a6ee:	07d2      	lsls	r2, r2, #31
 800a6f0:	d403      	bmi.n	800a6fa <HAL_I2C_EnableListen_IT+0x22>
 800a6f2:	681a      	ldr	r2, [r3, #0]
 800a6f4:	f042 0201 	orr.w	r2, r2, #1
 800a6f8:	601a      	str	r2, [r3, #0]
 800a6fa:	681a      	ldr	r2, [r3, #0]
 800a6fc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800a700:	601a      	str	r2, [r3, #0]
 800a702:	685a      	ldr	r2, [r3, #4]
 800a704:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 800a708:	2000      	movs	r0, #0
 800a70a:	605a      	str	r2, [r3, #4]
 800a70c:	4770      	bx	lr
 800a70e:	bf00      	nop

0800a710 <HAL_I2C_MasterTxCpltCallback>:
 800a710:	4770      	bx	lr
 800a712:	bf00      	nop

0800a714 <HAL_I2C_MasterRxCpltCallback>:
 800a714:	4770      	bx	lr
 800a716:	bf00      	nop

0800a718 <HAL_I2C_SlaveTxCpltCallback>:
 800a718:	4770      	bx	lr
 800a71a:	bf00      	nop

0800a71c <HAL_I2C_SlaveRxCpltCallback>:
 800a71c:	4770      	bx	lr
 800a71e:	bf00      	nop

0800a720 <HAL_I2C_MemTxCpltCallback>:
 800a720:	4770      	bx	lr
 800a722:	bf00      	nop

0800a724 <HAL_I2C_MemRxCpltCallback>:
 800a724:	4770      	bx	lr
 800a726:	bf00      	nop

0800a728 <HAL_I2C_AbortCpltCallback>:
 800a728:	4770      	bx	lr
 800a72a:	bf00      	nop

0800a72c <I2C_ITError>:
 800a72c:	b510      	push	{r4, lr}
 800a72e:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800a732:	6803      	ldr	r3, [r0, #0]
 800a734:	3a29      	subs	r2, #41	@ 0x29
 800a736:	2a01      	cmp	r2, #1
 800a738:	4604      	mov	r4, r0
 800a73a:	d956      	bls.n	800a7ea <I2C_ITError+0xbe>
 800a73c:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800a740:	2a60      	cmp	r2, #96	@ 0x60
 800a742:	d005      	beq.n	800a750 <I2C_ITError+0x24>
 800a744:	685a      	ldr	r2, [r3, #4]
 800a746:	0512      	lsls	r2, r2, #20
 800a748:	bf5c      	itt	pl
 800a74a:	2220      	movpl	r2, #32
 800a74c:	f880 203d 	strbpl.w	r2, [r0, #61]	@ 0x3d
 800a750:	2200      	movs	r2, #0
 800a752:	6322      	str	r2, [r4, #48]	@ 0x30
 800a754:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
 800a758:	681a      	ldr	r2, [r3, #0]
 800a75a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800a75e:	601a      	str	r2, [r3, #0]
 800a760:	685a      	ldr	r2, [r3, #4]
 800a762:	f412 6200 	ands.w	r2, r2, #2048	@ 0x800
 800a766:	d01d      	beq.n	800a7a4 <I2C_ITError+0x78>
 800a768:	685a      	ldr	r2, [r3, #4]
 800a76a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800a76c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800a770:	605a      	str	r2, [r3, #4]
 800a772:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 800a776:	2b01      	cmp	r3, #1
 800a778:	d056      	beq.n	800a828 <I2C_ITError+0xfc>
 800a77a:	4b39      	ldr	r3, [pc, #228]	@ (800a860 <I2C_ITError+0x134>)
 800a77c:	6503      	str	r3, [r0, #80]	@ 0x50
 800a77e:	f7f9 ff83 	bl	8004688 <HAL_DMA_Abort_IT>
 800a782:	b150      	cbz	r0, 800a79a <I2C_ITError+0x6e>
 800a784:	6822      	ldr	r2, [r4, #0]
 800a786:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800a788:	6813      	ldr	r3, [r2, #0]
 800a78a:	2120      	movs	r1, #32
 800a78c:	f023 0301 	bic.w	r3, r3, #1
 800a790:	6013      	str	r3, [r2, #0]
 800a792:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
 800a796:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a798:	4798      	blx	r3
 800a79a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800a79e:	2b28      	cmp	r3, #40	@ 0x28
 800a7a0:	d013      	beq.n	800a7ca <I2C_ITError+0x9e>
 800a7a2:	bd10      	pop	{r4, pc}
 800a7a4:	f894 103d 	ldrb.w	r1, [r4, #61]	@ 0x3d
 800a7a8:	2960      	cmp	r1, #96	@ 0x60
 800a7aa:	d024      	beq.n	800a7f6 <I2C_ITError+0xca>
 800a7ac:	695a      	ldr	r2, [r3, #20]
 800a7ae:	0652      	lsls	r2, r2, #25
 800a7b0:	d504      	bpl.n	800a7bc <I2C_ITError+0x90>
 800a7b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800a7b4:	691b      	ldr	r3, [r3, #16]
 800a7b6:	1c51      	adds	r1, r2, #1
 800a7b8:	6261      	str	r1, [r4, #36]	@ 0x24
 800a7ba:	7013      	strb	r3, [r2, #0]
 800a7bc:	4620      	mov	r0, r4
 800a7be:	f017 f91b 	bl	80219f8 <HAL_I2C_ErrorCallback>
 800a7c2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800a7c6:	2b28      	cmp	r3, #40	@ 0x28
 800a7c8:	d1eb      	bne.n	800a7a2 <I2C_ITError+0x76>
 800a7ca:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800a7cc:	075b      	lsls	r3, r3, #29
 800a7ce:	d5e8      	bpl.n	800a7a2 <I2C_ITError+0x76>
 800a7d0:	2300      	movs	r3, #0
 800a7d2:	4924      	ldr	r1, [pc, #144]	@ (800a864 <I2C_ITError+0x138>)
 800a7d4:	62e1      	str	r1, [r4, #44]	@ 0x2c
 800a7d6:	2220      	movs	r2, #32
 800a7d8:	6323      	str	r3, [r4, #48]	@ 0x30
 800a7da:	4620      	mov	r0, r4
 800a7dc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
 800a7e0:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800a7e4:	f017 f8b4 	bl	8021950 <HAL_I2C_ListenCpltCallback>
 800a7e8:	bd10      	pop	{r4, pc}
 800a7ea:	2100      	movs	r1, #0
 800a7ec:	2228      	movs	r2, #40	@ 0x28
 800a7ee:	6301      	str	r1, [r0, #48]	@ 0x30
 800a7f0:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800a7f4:	e7b0      	b.n	800a758 <I2C_ITError+0x2c>
 800a7f6:	2120      	movs	r1, #32
 800a7f8:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
 800a7fc:	6422      	str	r2, [r4, #64]	@ 0x40
 800a7fe:	695a      	ldr	r2, [r3, #20]
 800a800:	0651      	lsls	r1, r2, #25
 800a802:	d505      	bpl.n	800a810 <I2C_ITError+0xe4>
 800a804:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800a806:	691b      	ldr	r3, [r3, #16]
 800a808:	1c51      	adds	r1, r2, #1
 800a80a:	6261      	str	r1, [r4, #36]	@ 0x24
 800a80c:	7013      	strb	r3, [r2, #0]
 800a80e:	6823      	ldr	r3, [r4, #0]
 800a810:	681a      	ldr	r2, [r3, #0]
 800a812:	f022 0201 	bic.w	r2, r2, #1
 800a816:	601a      	str	r2, [r3, #0]
 800a818:	4620      	mov	r0, r4
 800a81a:	f7ff ff85 	bl	800a728 <HAL_I2C_AbortCpltCallback>
 800a81e:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800a822:	2b28      	cmp	r3, #40	@ 0x28
 800a824:	d1bd      	bne.n	800a7a2 <I2C_ITError+0x76>
 800a826:	e7d0      	b.n	800a7ca <I2C_ITError+0x9e>
 800a828:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 800a82a:	4b0d      	ldr	r3, [pc, #52]	@ (800a860 <I2C_ITError+0x134>)
 800a82c:	6503      	str	r3, [r0, #80]	@ 0x50
 800a82e:	f7f9 ff2b 	bl	8004688 <HAL_DMA_Abort_IT>
 800a832:	2800      	cmp	r0, #0
 800a834:	d0b1      	beq.n	800a79a <I2C_ITError+0x6e>
 800a836:	6823      	ldr	r3, [r4, #0]
 800a838:	695a      	ldr	r2, [r3, #20]
 800a83a:	0650      	lsls	r0, r2, #25
 800a83c:	d505      	bpl.n	800a84a <I2C_ITError+0x11e>
 800a83e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800a840:	691b      	ldr	r3, [r3, #16]
 800a842:	1c51      	adds	r1, r2, #1
 800a844:	6261      	str	r1, [r4, #36]	@ 0x24
 800a846:	7013      	strb	r3, [r2, #0]
 800a848:	6823      	ldr	r3, [r4, #0]
 800a84a:	681a      	ldr	r2, [r3, #0]
 800a84c:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 800a84e:	f022 0201 	bic.w	r2, r2, #1
 800a852:	2120      	movs	r1, #32
 800a854:	601a      	str	r2, [r3, #0]
 800a856:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
 800a85a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800a85c:	4798      	blx	r3
 800a85e:	e79c      	b.n	800a79a <I2C_ITError+0x6e>
 800a860:	0800b165 	.word	0x0800b165
 800a864:	ffff0000 	.word	0xffff0000

0800a868 <HAL_I2C_ER_IRQHandler>:
 800a868:	b570      	push	{r4, r5, r6, lr}
 800a86a:	6803      	ldr	r3, [r0, #0]
 800a86c:	4a5e      	ldr	r2, [pc, #376]	@ (800a9e8 <HAL_I2C_ER_IRQHandler+0x180>)
 800a86e:	695c      	ldr	r4, [r3, #20]
 800a870:	6859      	ldr	r1, [r3, #4]
 800a872:	4214      	tst	r4, r2
 800a874:	b082      	sub	sp, #8
 800a876:	f404 3581 	and.w	r5, r4, #66048	@ 0x10200
 800a87a:	d008      	beq.n	800a88e <HAL_I2C_ER_IRQHandler+0x26>
 800a87c:	05ce      	lsls	r6, r1, #23
 800a87e:	f404 3282 	and.w	r2, r4, #66560	@ 0x10400
 800a882:	d443      	bmi.n	800a90c <HAL_I2C_ER_IRQHandler+0xa4>
 800a884:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a886:	2b00      	cmp	r3, #0
 800a888:	d132      	bne.n	800a8f0 <HAL_I2C_ER_IRQHandler+0x88>
 800a88a:	b002      	add	sp, #8
 800a88c:	bd70      	pop	{r4, r5, r6, pc}
 800a88e:	2d00      	cmp	r5, #0
 800a890:	d033      	beq.n	800a8fa <HAL_I2C_ER_IRQHandler+0x92>
 800a892:	05cd      	lsls	r5, r1, #23
 800a894:	d5f6      	bpl.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a896:	f404 3282 	and.w	r2, r4, #66560	@ 0x10400
 800a89a:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800a89c:	f041 0102 	orr.w	r1, r1, #2
 800a8a0:	6401      	str	r1, [r0, #64]	@ 0x40
 800a8a2:	f46f 7100 	mvn.w	r1, #512	@ 0x200
 800a8a6:	6159      	str	r1, [r3, #20]
 800a8a8:	2a00      	cmp	r2, #0
 800a8aa:	d03a      	beq.n	800a922 <HAL_I2C_ER_IRQHandler+0xba>
 800a8ac:	f890 503e 	ldrb.w	r5, [r0, #62]	@ 0x3e
 800a8b0:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800a8b2:	f890 103d 	ldrb.w	r1, [r0, #61]	@ 0x3d
 800a8b6:	6b06      	ldr	r6, [r0, #48]	@ 0x30
 800a8b8:	2d20      	cmp	r5, #32
 800a8ba:	b292      	uxth	r2, r2
 800a8bc:	b2c9      	uxtb	r1, r1
 800a8be:	d037      	beq.n	800a930 <HAL_I2C_ER_IRQHandler+0xc8>
 800a8c0:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800a8c2:	f042 0204 	orr.w	r2, r2, #4
 800a8c6:	6402      	str	r2, [r0, #64]	@ 0x40
 800a8c8:	f890 203e 	ldrb.w	r2, [r0, #62]	@ 0x3e
 800a8cc:	2a10      	cmp	r2, #16
 800a8ce:	d04b      	beq.n	800a968 <HAL_I2C_ER_IRQHandler+0x100>
 800a8d0:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800a8d4:	f414 3f84 	tst.w	r4, #67584	@ 0x10800
 800a8d8:	615a      	str	r2, [r3, #20]
 800a8da:	d0d3      	beq.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a8dc:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800a8de:	f46f 6100 	mvn.w	r1, #2048	@ 0x800
 800a8e2:	f042 0208 	orr.w	r2, r2, #8
 800a8e6:	6402      	str	r2, [r0, #64]	@ 0x40
 800a8e8:	6159      	str	r1, [r3, #20]
 800a8ea:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800a8ec:	2b00      	cmp	r3, #0
 800a8ee:	d0cc      	beq.n	800a88a <HAL_I2C_ER_IRQHandler+0x22>
 800a8f0:	b002      	add	sp, #8
 800a8f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8f6:	f7ff bf19 	b.w	800a72c <I2C_ITError>
 800a8fa:	f414 3f82 	tst.w	r4, #66560	@ 0x10400
 800a8fe:	d114      	bne.n	800a92a <HAL_I2C_ER_IRQHandler+0xc2>
 800a900:	f414 3f84 	tst.w	r4, #67584	@ 0x10800
 800a904:	d0be      	beq.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a906:	05ca      	lsls	r2, r1, #23
 800a908:	d5bc      	bpl.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a90a:	e7e7      	b.n	800a8dc <HAL_I2C_ER_IRQHandler+0x74>
 800a90c:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800a90e:	f041 0101 	orr.w	r1, r1, #1
 800a912:	6401      	str	r1, [r0, #64]	@ 0x40
 800a914:	f46f 7180 	mvn.w	r1, #256	@ 0x100
 800a918:	6159      	str	r1, [r3, #20]
 800a91a:	2d00      	cmp	r5, #0
 800a91c:	d1bd      	bne.n	800a89a <HAL_I2C_ER_IRQHandler+0x32>
 800a91e:	2a00      	cmp	r2, #0
 800a920:	d1c4      	bne.n	800a8ac <HAL_I2C_ER_IRQHandler+0x44>
 800a922:	f414 3f84 	tst.w	r4, #67584	@ 0x10800
 800a926:	d1d9      	bne.n	800a8dc <HAL_I2C_ER_IRQHandler+0x74>
 800a928:	e7ac      	b.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a92a:	05c9      	lsls	r1, r1, #23
 800a92c:	d4be      	bmi.n	800a8ac <HAL_I2C_ER_IRQHandler+0x44>
 800a92e:	e7a9      	b.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a930:	2a00      	cmp	r2, #0
 800a932:	d1c5      	bne.n	800a8c0 <HAL_I2C_ER_IRQHandler+0x58>
 800a934:	f001 02f7 	and.w	r2, r1, #247	@ 0xf7
 800a938:	2a21      	cmp	r2, #33	@ 0x21
 800a93a:	d003      	beq.n	800a944 <HAL_I2C_ER_IRQHandler+0xdc>
 800a93c:	2928      	cmp	r1, #40	@ 0x28
 800a93e:	d1bf      	bne.n	800a8c0 <HAL_I2C_ER_IRQHandler+0x58>
 800a940:	2e21      	cmp	r6, #33	@ 0x21
 800a942:	d1bd      	bne.n	800a8c0 <HAL_I2C_ER_IRQHandler+0x58>
 800a944:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800a948:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800a94a:	2904      	cmp	r1, #4
 800a94c:	b2d2      	uxtb	r2, r2
 800a94e:	d010      	beq.n	800a972 <HAL_I2C_ER_IRQHandler+0x10a>
 800a950:	2908      	cmp	r1, #8
 800a952:	d00e      	beq.n	800a972 <HAL_I2C_ER_IRQHandler+0x10a>
 800a954:	2a21      	cmp	r2, #33	@ 0x21
 800a956:	f404 3484 	and.w	r4, r4, #67584	@ 0x10800
 800a95a:	d02a      	beq.n	800a9b2 <HAL_I2C_ER_IRQHandler+0x14a>
 800a95c:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800a960:	615a      	str	r2, [r3, #20]
 800a962:	2c00      	cmp	r4, #0
 800a964:	d1ba      	bne.n	800a8dc <HAL_I2C_ER_IRQHandler+0x74>
 800a966:	e78d      	b.n	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a968:	681a      	ldr	r2, [r3, #0]
 800a96a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800a96e:	601a      	str	r2, [r3, #0]
 800a970:	e7ae      	b.n	800a8d0 <HAL_I2C_ER_IRQHandler+0x68>
 800a972:	2a28      	cmp	r2, #40	@ 0x28
 800a974:	d1ee      	bne.n	800a954 <HAL_I2C_ER_IRQHandler+0xec>
 800a976:	4a1d      	ldr	r2, [pc, #116]	@ (800a9ec <HAL_I2C_ER_IRQHandler+0x184>)
 800a978:	62c2      	str	r2, [r0, #44]	@ 0x2c
 800a97a:	685a      	ldr	r2, [r3, #4]
 800a97c:	9001      	str	r0, [sp, #4]
 800a97e:	f46f 6180 	mvn.w	r1, #1024	@ 0x400
 800a982:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800a986:	605a      	str	r2, [r3, #4]
 800a988:	6159      	str	r1, [r3, #20]
 800a98a:	681a      	ldr	r2, [r3, #0]
 800a98c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a990:	601a      	str	r2, [r3, #0]
 800a992:	2100      	movs	r1, #0
 800a994:	2320      	movs	r3, #32
 800a996:	6301      	str	r1, [r0, #48]	@ 0x30
 800a998:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800a99c:	f880 103e 	strb.w	r1, [r0, #62]	@ 0x3e
 800a9a0:	f016 ffd6 	bl	8021950 <HAL_I2C_ListenCpltCallback>
 800a9a4:	f414 3f84 	tst.w	r4, #67584	@ 0x10800
 800a9a8:	9801      	ldr	r0, [sp, #4]
 800a9aa:	f43f af6b 	beq.w	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a9ae:	6803      	ldr	r3, [r0, #0]
 800a9b0:	e794      	b.n	800a8dc <HAL_I2C_ER_IRQHandler+0x74>
 800a9b2:	490e      	ldr	r1, [pc, #56]	@ (800a9ec <HAL_I2C_ER_IRQHandler+0x184>)
 800a9b4:	62c1      	str	r1, [r0, #44]	@ 0x2c
 800a9b6:	6302      	str	r2, [r0, #48]	@ 0x30
 800a9b8:	2120      	movs	r1, #32
 800a9ba:	2200      	movs	r2, #0
 800a9bc:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800a9c0:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
 800a9c4:	685a      	ldr	r2, [r3, #4]
 800a9c6:	9001      	str	r0, [sp, #4]
 800a9c8:	f46f 6180 	mvn.w	r1, #1024	@ 0x400
 800a9cc:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800a9d0:	605a      	str	r2, [r3, #4]
 800a9d2:	6159      	str	r1, [r3, #20]
 800a9d4:	681a      	ldr	r2, [r3, #0]
 800a9d6:	400a      	ands	r2, r1
 800a9d8:	601a      	str	r2, [r3, #0]
 800a9da:	f7ff fe9d 	bl	800a718 <HAL_I2C_SlaveTxCpltCallback>
 800a9de:	9801      	ldr	r0, [sp, #4]
 800a9e0:	2c00      	cmp	r4, #0
 800a9e2:	f43f af4f 	beq.w	800a884 <HAL_I2C_ER_IRQHandler+0x1c>
 800a9e6:	e7e2      	b.n	800a9ae <HAL_I2C_ER_IRQHandler+0x146>
 800a9e8:	00010100 	.word	0x00010100
 800a9ec:	ffff0000 	.word	0xffff0000

0800a9f0 <HAL_I2C_EV_IRQHandler>:
 800a9f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9f2:	6803      	ldr	r3, [r0, #0]
 800a9f4:	699e      	ldr	r6, [r3, #24]
 800a9f6:	695a      	ldr	r2, [r3, #20]
 800a9f8:	685c      	ldr	r4, [r3, #4]
 800a9fa:	f890 103e 	ldrb.w	r1, [r0, #62]	@ 0x3e
 800a9fe:	2910      	cmp	r1, #16
 800aa00:	b08d      	sub	sp, #52	@ 0x34
 800aa02:	d03d      	beq.n	800aa80 <HAL_I2C_EV_IRQHandler+0x90>
 800aa04:	b2cd      	uxtb	r5, r1
 800aa06:	2d40      	cmp	r5, #64	@ 0x40
 800aa08:	d03a      	beq.n	800aa80 <HAL_I2C_EV_IRQHandler+0x90>
 800aa0a:	4990      	ldr	r1, [pc, #576]	@ (800ac4c <HAL_I2C_EV_IRQHandler+0x25c>)
 800aa0c:	4011      	ands	r1, r2
 800aa0e:	2900      	cmp	r1, #0
 800aa10:	f000 80ba 	beq.w	800ab88 <HAL_I2C_EV_IRQHandler+0x198>
 800aa14:	05a7      	lsls	r7, r4, #22
 800aa16:	f100 8171 	bmi.w	800acfc <HAL_I2C_EV_IRQHandler+0x30c>
 800aa1a:	498d      	ldr	r1, [pc, #564]	@ (800ac50 <HAL_I2C_EV_IRQHandler+0x260>)
 800aa1c:	4d8d      	ldr	r5, [pc, #564]	@ (800ac54 <HAL_I2C_EV_IRQHandler+0x264>)
 800aa1e:	4031      	ands	r1, r6
 800aa20:	4015      	ands	r5, r2
 800aa22:	2900      	cmp	r1, #0
 800aa24:	f000 8120 	beq.w	800ac68 <HAL_I2C_EV_IRQHandler+0x278>
 800aa28:	498b      	ldr	r1, [pc, #556]	@ (800ac58 <HAL_I2C_EV_IRQHandler+0x268>)
 800aa2a:	4011      	ands	r1, r2
 800aa2c:	2900      	cmp	r1, #0
 800aa2e:	f000 8189 	beq.w	800ad44 <HAL_I2C_EV_IRQHandler+0x354>
 800aa32:	0566      	lsls	r6, r4, #21
 800aa34:	f140 8186 	bpl.w	800ad44 <HAL_I2C_EV_IRQHandler+0x354>
 800aa38:	2d00      	cmp	r5, #0
 800aa3a:	f040 8186 	bne.w	800ad4a <HAL_I2C_EV_IRQHandler+0x35a>
 800aa3e:	f890 103d 	ldrb.w	r1, [r0, #61]	@ 0x3d
 800aa42:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800aa44:	b292      	uxth	r2, r2
 800aa46:	b2c9      	uxtb	r1, r1
 800aa48:	b1c2      	cbz	r2, 800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aa4a:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800aa4c:	1c54      	adds	r4, r2, #1
 800aa4e:	6244      	str	r4, [r0, #36]	@ 0x24
 800aa50:	7812      	ldrb	r2, [r2, #0]
 800aa52:	611a      	str	r2, [r3, #16]
 800aa54:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800aa56:	3a01      	subs	r2, #1
 800aa58:	b292      	uxth	r2, r2
 800aa5a:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800aa5c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800aa5e:	b292      	uxth	r2, r2
 800aa60:	b962      	cbnz	r2, 800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aa62:	2929      	cmp	r1, #41	@ 0x29
 800aa64:	d10a      	bne.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aa66:	685a      	ldr	r2, [r3, #4]
 800aa68:	2421      	movs	r4, #33	@ 0x21
 800aa6a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800aa6e:	2128      	movs	r1, #40	@ 0x28
 800aa70:	605a      	str	r2, [r3, #4]
 800aa72:	6304      	str	r4, [r0, #48]	@ 0x30
 800aa74:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800aa78:	f7ff fe4e 	bl	800a718 <HAL_I2C_SlaveTxCpltCallback>
 800aa7c:	b00d      	add	sp, #52	@ 0x34
 800aa7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa80:	f012 1f01 	tst.w	r2, #65537	@ 0x10001
 800aa84:	d035      	beq.n	800aaf2 <HAL_I2C_EV_IRQHandler+0x102>
 800aa86:	05a5      	lsls	r5, r4, #22
 800aa88:	f100 8123 	bmi.w	800acd2 <HAL_I2C_EV_IRQHandler+0x2e2>
 800aa8c:	4d70      	ldr	r5, [pc, #448]	@ (800ac50 <HAL_I2C_EV_IRQHandler+0x260>)
 800aa8e:	4971      	ldr	r1, [pc, #452]	@ (800ac54 <HAL_I2C_EV_IRQHandler+0x264>)
 800aa90:	4035      	ands	r5, r6
 800aa92:	4011      	ands	r1, r2
 800aa94:	2d00      	cmp	r5, #0
 800aa96:	d04e      	beq.n	800ab36 <HAL_I2C_EV_IRQHandler+0x146>
 800aa98:	4d6f      	ldr	r5, [pc, #444]	@ (800ac58 <HAL_I2C_EV_IRQHandler+0x268>)
 800aa9a:	4015      	ands	r5, r2
 800aa9c:	2d00      	cmp	r5, #0
 800aa9e:	d046      	beq.n	800ab2e <HAL_I2C_EV_IRQHandler+0x13e>
 800aaa0:	0567      	lsls	r7, r4, #21
 800aaa2:	d544      	bpl.n	800ab2e <HAL_I2C_EV_IRQHandler+0x13e>
 800aaa4:	2900      	cmp	r1, #0
 800aaa6:	f000 8180 	beq.w	800adaa <HAL_I2C_EV_IRQHandler+0x3ba>
 800aaaa:	05a6      	lsls	r6, r4, #22
 800aaac:	d5e6      	bpl.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aaae:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800aab0:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800aab4:	2a21      	cmp	r2, #33	@ 0x21
 800aab6:	d1e1      	bne.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aab8:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800aaba:	b292      	uxth	r2, r2
 800aabc:	2a00      	cmp	r2, #0
 800aabe:	f040 814c 	bne.w	800ad5a <HAL_I2C_EV_IRQHandler+0x36a>
 800aac2:	2904      	cmp	r1, #4
 800aac4:	f000 81f7 	beq.w	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800aac8:	2908      	cmp	r1, #8
 800aaca:	f000 81f4 	beq.w	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800aace:	f511 3f80 	cmn.w	r1, #65536	@ 0x10000
 800aad2:	f000 81f0 	beq.w	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800aad6:	6859      	ldr	r1, [r3, #4]
 800aad8:	f421 61e0 	bic.w	r1, r1, #1792	@ 0x700
 800aadc:	6059      	str	r1, [r3, #4]
 800aade:	2411      	movs	r4, #17
 800aae0:	2320      	movs	r3, #32
 800aae2:	6304      	str	r4, [r0, #48]	@ 0x30
 800aae4:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
 800aae8:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800aaec:	f7ff fe10 	bl	800a710 <HAL_I2C_MasterTxCpltCallback>
 800aaf0:	e7c4      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aaf2:	495a      	ldr	r1, [pc, #360]	@ (800ac5c <HAL_I2C_EV_IRQHandler+0x26c>)
 800aaf4:	4011      	ands	r1, r2
 800aaf6:	2900      	cmp	r1, #0
 800aaf8:	f040 80e4 	bne.w	800acc4 <HAL_I2C_EV_IRQHandler+0x2d4>
 800aafc:	4d53      	ldr	r5, [pc, #332]	@ (800ac4c <HAL_I2C_EV_IRQHandler+0x25c>)
 800aafe:	4015      	ands	r5, r2
 800ab00:	2d00      	cmp	r5, #0
 800ab02:	d0c3      	beq.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ab04:	05a7      	lsls	r7, r4, #22
 800ab06:	d5c1      	bpl.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ab08:	f890 503e 	ldrb.w	r5, [r0, #62]	@ 0x3e
 800ab0c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ab0e:	f8d0 e030 	ldr.w	lr, [r0, #48]	@ 0x30
 800ab12:	f890 c03d 	ldrb.w	ip, [r0, #61]	@ 0x3d
 800ab16:	f1bc 0f22 	cmp.w	ip, #34	@ 0x22
 800ab1a:	b2ed      	uxtb	r5, r5
 800ab1c:	f000 816e 	beq.w	800adfc <HAL_I2C_EV_IRQHandler+0x40c>
 800ab20:	910a      	str	r1, [sp, #40]	@ 0x28
 800ab22:	6959      	ldr	r1, [r3, #20]
 800ab24:	910a      	str	r1, [sp, #40]	@ 0x28
 800ab26:	6999      	ldr	r1, [r3, #24]
 800ab28:	910a      	str	r1, [sp, #40]	@ 0x28
 800ab2a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800ab2c:	e7ae      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ab2e:	2900      	cmp	r1, #0
 800ab30:	d1bb      	bne.n	800aaaa <HAL_I2C_EV_IRQHandler+0xba>
 800ab32:	b00d      	add	sp, #52	@ 0x34
 800ab34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab36:	4d4a      	ldr	r5, [pc, #296]	@ (800ac60 <HAL_I2C_EV_IRQHandler+0x270>)
 800ab38:	4015      	ands	r5, r2
 800ab3a:	b30d      	cbz	r5, 800ab80 <HAL_I2C_EV_IRQHandler+0x190>
 800ab3c:	0565      	lsls	r5, r4, #21
 800ab3e:	d51f      	bpl.n	800ab80 <HAL_I2C_EV_IRQHandler+0x190>
 800ab40:	2900      	cmp	r1, #0
 800ab42:	f000 8114 	beq.w	800ad6e <HAL_I2C_EV_IRQHandler+0x37e>
 800ab46:	05a2      	lsls	r2, r4, #22
 800ab48:	d598      	bpl.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ab4a:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800ab4c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ab4e:	6a41      	ldr	r1, [r0, #36]	@ 0x24
 800ab50:	b292      	uxth	r2, r2
 800ab52:	2a04      	cmp	r2, #4
 800ab54:	f101 0401 	add.w	r4, r1, #1
 800ab58:	f000 819c 	beq.w	800ae94 <HAL_I2C_EV_IRQHandler+0x4a4>
 800ab5c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ab5e:	b292      	uxth	r2, r2
 800ab60:	2a03      	cmp	r2, #3
 800ab62:	f000 819f 	beq.w	800aea4 <HAL_I2C_EV_IRQHandler+0x4b4>
 800ab66:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ab68:	b292      	uxth	r2, r2
 800ab6a:	2a02      	cmp	r2, #2
 800ab6c:	f000 81db 	beq.w	800af26 <HAL_I2C_EV_IRQHandler+0x536>
 800ab70:	691b      	ldr	r3, [r3, #16]
 800ab72:	6244      	str	r4, [r0, #36]	@ 0x24
 800ab74:	700b      	strb	r3, [r1, #0]
 800ab76:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ab78:	3b01      	subs	r3, #1
 800ab7a:	b29b      	uxth	r3, r3
 800ab7c:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ab7e:	e77d      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ab80:	2900      	cmp	r1, #0
 800ab82:	d1e0      	bne.n	800ab46 <HAL_I2C_EV_IRQHandler+0x156>
 800ab84:	b00d      	add	sp, #52	@ 0x34
 800ab86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab88:	4d36      	ldr	r5, [pc, #216]	@ (800ac64 <HAL_I2C_EV_IRQHandler+0x274>)
 800ab8a:	4015      	ands	r5, r2
 800ab8c:	2d00      	cmp	r5, #0
 800ab8e:	f43f af44 	beq.w	800aa1a <HAL_I2C_EV_IRQHandler+0x2a>
 800ab92:	05a5      	lsls	r5, r4, #22
 800ab94:	f57f af41 	bpl.w	800aa1a <HAL_I2C_EV_IRQHandler+0x2a>
 800ab98:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
 800ab9c:	685a      	ldr	r2, [r3, #4]
 800ab9e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800aba2:	605a      	str	r2, [r3, #4]
 800aba4:	910b      	str	r1, [sp, #44]	@ 0x2c
 800aba6:	695a      	ldr	r2, [r3, #20]
 800aba8:	920b      	str	r2, [sp, #44]	@ 0x2c
 800abaa:	681a      	ldr	r2, [r3, #0]
 800abac:	f042 0201 	orr.w	r2, r2, #1
 800abb0:	601a      	str	r2, [r3, #0]
 800abb2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800abb4:	681a      	ldr	r2, [r3, #0]
 800abb6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800abba:	601a      	str	r2, [r3, #0]
 800abbc:	685a      	ldr	r2, [r3, #4]
 800abbe:	0511      	lsls	r1, r2, #20
 800abc0:	b2e4      	uxtb	r4, r4
 800abc2:	d50e      	bpl.n	800abe2 <HAL_I2C_EV_IRQHandler+0x1f2>
 800abc4:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800abc8:	2a22      	cmp	r2, #34	@ 0x22
 800abca:	f000 8157 	beq.w	800ae7c <HAL_I2C_EV_IRQHandler+0x48c>
 800abce:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800abd2:	2a2a      	cmp	r2, #42	@ 0x2a
 800abd4:	f000 8152 	beq.w	800ae7c <HAL_I2C_EV_IRQHandler+0x48c>
 800abd8:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800abda:	6812      	ldr	r2, [r2, #0]
 800abdc:	6852      	ldr	r2, [r2, #4]
 800abde:	b292      	uxth	r2, r2
 800abe0:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800abe2:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800abe4:	b292      	uxth	r2, r2
 800abe6:	b1c2      	cbz	r2, 800ac1a <HAL_I2C_EV_IRQHandler+0x22a>
 800abe8:	695a      	ldr	r2, [r3, #20]
 800abea:	0752      	lsls	r2, r2, #29
 800abec:	d509      	bpl.n	800ac02 <HAL_I2C_EV_IRQHandler+0x212>
 800abee:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800abf0:	691b      	ldr	r3, [r3, #16]
 800abf2:	1c51      	adds	r1, r2, #1
 800abf4:	6241      	str	r1, [r0, #36]	@ 0x24
 800abf6:	7013      	strb	r3, [r2, #0]
 800abf8:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800abfa:	6803      	ldr	r3, [r0, #0]
 800abfc:	3a01      	subs	r2, #1
 800abfe:	b292      	uxth	r2, r2
 800ac00:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800ac02:	695a      	ldr	r2, [r3, #20]
 800ac04:	0657      	lsls	r7, r2, #25
 800ac06:	d508      	bpl.n	800ac1a <HAL_I2C_EV_IRQHandler+0x22a>
 800ac08:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ac0a:	691b      	ldr	r3, [r3, #16]
 800ac0c:	1c51      	adds	r1, r2, #1
 800ac0e:	6241      	str	r1, [r0, #36]	@ 0x24
 800ac10:	7013      	strb	r3, [r2, #0]
 800ac12:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ac14:	3b01      	subs	r3, #1
 800ac16:	b29b      	uxth	r3, r3
 800ac18:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ac1a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ac1c:	2b00      	cmp	r3, #0
 800ac1e:	f040 810a 	bne.w	800ae36 <HAL_I2C_EV_IRQHandler+0x446>
 800ac22:	f1a4 0228 	sub.w	r2, r4, #40	@ 0x28
 800ac26:	2a02      	cmp	r2, #2
 800ac28:	f240 8111 	bls.w	800ae4e <HAL_I2C_EV_IRQHandler+0x45e>
 800ac2c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 800ac2e:	2b22      	cmp	r3, #34	@ 0x22
 800ac30:	d002      	beq.n	800ac38 <HAL_I2C_EV_IRQHandler+0x248>
 800ac32:	2c22      	cmp	r4, #34	@ 0x22
 800ac34:	f47f af22 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ac38:	2300      	movs	r3, #0
 800ac3a:	2220      	movs	r2, #32
 800ac3c:	6303      	str	r3, [r0, #48]	@ 0x30
 800ac3e:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800ac42:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800ac46:	f7ff fd69 	bl	800a71c <HAL_I2C_SlaveRxCpltCallback>
 800ac4a:	e717      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ac4c:	00010002 	.word	0x00010002
 800ac50:	00100004 	.word	0x00100004
 800ac54:	00010004 	.word	0x00010004
 800ac58:	00010080 	.word	0x00010080
 800ac5c:	00010008 	.word	0x00010008
 800ac60:	00010040 	.word	0x00010040
 800ac64:	00010010 	.word	0x00010010
 800ac68:	499e      	ldr	r1, [pc, #632]	@ (800aee4 <HAL_I2C_EV_IRQHandler+0x4f4>)
 800ac6a:	4011      	ands	r1, r2
 800ac6c:	2900      	cmp	r1, #0
 800ac6e:	d054      	beq.n	800ad1a <HAL_I2C_EV_IRQHandler+0x32a>
 800ac70:	0561      	lsls	r1, r4, #21
 800ac72:	d552      	bpl.n	800ad1a <HAL_I2C_EV_IRQHandler+0x32a>
 800ac74:	2d00      	cmp	r5, #0
 800ac76:	d153      	bne.n	800ad20 <HAL_I2C_EV_IRQHandler+0x330>
 800ac78:	f890 103d 	ldrb.w	r1, [r0, #61]	@ 0x3d
 800ac7c:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ac7e:	b292      	uxth	r2, r2
 800ac80:	b2c9      	uxtb	r1, r1
 800ac82:	2a00      	cmp	r2, #0
 800ac84:	f43f aefa 	beq.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ac88:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ac8a:	691b      	ldr	r3, [r3, #16]
 800ac8c:	1c54      	adds	r4, r2, #1
 800ac8e:	6244      	str	r4, [r0, #36]	@ 0x24
 800ac90:	7013      	strb	r3, [r2, #0]
 800ac92:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ac94:	3b01      	subs	r3, #1
 800ac96:	b29b      	uxth	r3, r3
 800ac98:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ac9a:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ac9c:	b29b      	uxth	r3, r3
 800ac9e:	2b00      	cmp	r3, #0
 800aca0:	f47f aeec 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aca4:	292a      	cmp	r1, #42	@ 0x2a
 800aca6:	f47f aee9 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800acaa:	6802      	ldr	r2, [r0, #0]
 800acac:	6853      	ldr	r3, [r2, #4]
 800acae:	2422      	movs	r4, #34	@ 0x22
 800acb0:	2128      	movs	r1, #40	@ 0x28
 800acb2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800acb6:	6053      	str	r3, [r2, #4]
 800acb8:	6304      	str	r4, [r0, #48]	@ 0x30
 800acba:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800acbe:	f7ff fd2d 	bl	800a71c <HAL_I2C_SlaveRxCpltCallback>
 800acc2:	e6db      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800acc4:	05a1      	lsls	r1, r4, #22
 800acc6:	f57f aee1 	bpl.w	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800acca:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800accc:	b2c9      	uxtb	r1, r1
 800acce:	6119      	str	r1, [r3, #16]
 800acd0:	e6dc      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800acd2:	f890 103e 	ldrb.w	r1, [r0, #62]	@ 0x3e
 800acd6:	2940      	cmp	r1, #64	@ 0x40
 800acd8:	f000 80b2 	beq.w	800ae40 <HAL_I2C_EV_IRQHandler+0x450>
 800acdc:	6901      	ldr	r1, [r0, #16]
 800acde:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
 800ace2:	d07f      	beq.n	800ade4 <HAL_I2C_EV_IRQHandler+0x3f4>
 800ace4:	6d01      	ldr	r1, [r0, #80]	@ 0x50
 800ace6:	2900      	cmp	r1, #0
 800ace8:	f040 80bc 	bne.w	800ae64 <HAL_I2C_EV_IRQHandler+0x474>
 800acec:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800acee:	11c9      	asrs	r1, r1, #7
 800acf0:	f001 0106 	and.w	r1, r1, #6
 800acf4:	f041 01f0 	orr.w	r1, r1, #240	@ 0xf0
 800acf8:	6119      	str	r1, [r3, #16]
 800acfa:	e6c7      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800acfc:	6999      	ldr	r1, [r3, #24]
 800acfe:	699b      	ldr	r3, [r3, #24]
 800ad00:	061e      	lsls	r6, r3, #24
 800ad02:	bf54      	ite	pl
 800ad04:	68c2      	ldrpl	r2, [r0, #12]
 800ad06:	6982      	ldrmi	r2, [r0, #24]
 800ad08:	f3c1 0180 	ubfx	r1, r1, #2, #1
 800ad0c:	f081 0101 	eor.w	r1, r1, #1
 800ad10:	b2c9      	uxtb	r1, r1
 800ad12:	b292      	uxth	r2, r2
 800ad14:	f016 fe4e 	bl	80219b4 <HAL_I2C_AddrCallback>
 800ad18:	e6b0      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad1a:	2d00      	cmp	r5, #0
 800ad1c:	f43f aeae 	beq.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad20:	05a2      	lsls	r2, r4, #22
 800ad22:	f57f aeab 	bpl.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad26:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ad28:	b292      	uxth	r2, r2
 800ad2a:	2a00      	cmp	r2, #0
 800ad2c:	f43f aea6 	beq.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad30:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ad32:	691b      	ldr	r3, [r3, #16]
 800ad34:	1c51      	adds	r1, r2, #1
 800ad36:	6241      	str	r1, [r0, #36]	@ 0x24
 800ad38:	7013      	strb	r3, [r2, #0]
 800ad3a:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ad3c:	3b01      	subs	r3, #1
 800ad3e:	b29b      	uxth	r3, r3
 800ad40:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ad42:	e69b      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad44:	2d00      	cmp	r5, #0
 800ad46:	f43f ae99 	beq.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad4a:	05a4      	lsls	r4, r4, #22
 800ad4c:	f57f ae96 	bpl.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad50:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ad52:	b292      	uxth	r2, r2
 800ad54:	2a00      	cmp	r2, #0
 800ad56:	f43f ae91 	beq.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad5a:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ad5c:	1c51      	adds	r1, r2, #1
 800ad5e:	6241      	str	r1, [r0, #36]	@ 0x24
 800ad60:	7812      	ldrb	r2, [r2, #0]
 800ad62:	611a      	str	r2, [r3, #16]
 800ad64:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ad66:	3b01      	subs	r3, #1
 800ad68:	b29b      	uxth	r3, r3
 800ad6a:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ad6c:	e686      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad6e:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800ad72:	2a22      	cmp	r2, #34	@ 0x22
 800ad74:	f47f ae82 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad78:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800ad7a:	b292      	uxth	r2, r2
 800ad7c:	2a03      	cmp	r2, #3
 800ad7e:	f240 8113 	bls.w	800afa8 <HAL_I2C_EV_IRQHandler+0x5b8>
 800ad82:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800ad84:	691b      	ldr	r3, [r3, #16]
 800ad86:	1c51      	adds	r1, r2, #1
 800ad88:	6241      	str	r1, [r0, #36]	@ 0x24
 800ad8a:	7013      	strb	r3, [r2, #0]
 800ad8c:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ad8e:	3b01      	subs	r3, #1
 800ad90:	b29b      	uxth	r3, r3
 800ad92:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800ad94:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800ad96:	b29b      	uxth	r3, r3
 800ad98:	2b03      	cmp	r3, #3
 800ad9a:	f47f ae6f 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ad9e:	6802      	ldr	r2, [r0, #0]
 800ada0:	6853      	ldr	r3, [r2, #4]
 800ada2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800ada6:	6053      	str	r3, [r2, #4]
 800ada8:	e668      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800adaa:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800adae:	8d04      	ldrh	r4, [r0, #40]	@ 0x28
 800adb0:	f890 103e 	ldrb.w	r1, [r0, #62]	@ 0x3e
 800adb4:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
 800adb6:	b2d2      	uxtb	r2, r2
 800adb8:	b2c9      	uxtb	r1, r1
 800adba:	2c00      	cmp	r4, #0
 800adbc:	d16f      	bne.n	800ae9e <HAL_I2C_EV_IRQHandler+0x4ae>
 800adbe:	2a21      	cmp	r2, #33	@ 0x21
 800adc0:	f000 80dd 	beq.w	800af7e <HAL_I2C_EV_IRQHandler+0x58e>
 800adc4:	2940      	cmp	r1, #64	@ 0x40
 800adc6:	f47f ae59 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800adca:	2a22      	cmp	r2, #34	@ 0x22
 800adcc:	f47f ae56 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800add0:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 800add2:	b292      	uxth	r2, r2
 800add4:	2a00      	cmp	r2, #0
 800add6:	f040 810f 	bne.w	800aff8 <HAL_I2C_EV_IRQHandler+0x608>
 800adda:	685a      	ldr	r2, [r3, #4]
 800addc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800ade0:	605a      	str	r2, [r3, #4]
 800ade2:	e64b      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ade4:	f890 103d 	ldrb.w	r1, [r0, #61]	@ 0x3d
 800ade8:	2921      	cmp	r1, #33	@ 0x21
 800adea:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800adec:	bf16      	itet	ne
 800adee:	f041 0101 	orrne.w	r1, r1, #1
 800adf2:	f001 01fe 	andeq.w	r1, r1, #254	@ 0xfe
 800adf6:	b2c9      	uxtbne	r1, r1
 800adf8:	6119      	str	r1, [r3, #16]
 800adfa:	e647      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800adfc:	6d01      	ldr	r1, [r0, #80]	@ 0x50
 800adfe:	b911      	cbnz	r1, 800ae06 <HAL_I2C_EV_IRQHandler+0x416>
 800ae00:	2d40      	cmp	r5, #64	@ 0x40
 800ae02:	f000 80f2 	beq.w	800afea <HAL_I2C_EV_IRQHandler+0x5fa>
 800ae06:	6d05      	ldr	r5, [r0, #80]	@ 0x50
 800ae08:	b925      	cbnz	r5, 800ae14 <HAL_I2C_EV_IRQHandler+0x424>
 800ae0a:	6901      	ldr	r1, [r0, #16]
 800ae0c:	f5b1 4f40 	cmp.w	r1, #49152	@ 0xc000
 800ae10:	f000 8106 	beq.w	800b020 <HAL_I2C_EV_IRQHandler+0x630>
 800ae14:	8d41      	ldrh	r1, [r0, #42]	@ 0x2a
 800ae16:	b289      	uxth	r1, r1
 800ae18:	2900      	cmp	r1, #0
 800ae1a:	d167      	bne.n	800aeec <HAL_I2C_EV_IRQHandler+0x4fc>
 800ae1c:	9103      	str	r1, [sp, #12]
 800ae1e:	6959      	ldr	r1, [r3, #20]
 800ae20:	9103      	str	r1, [sp, #12]
 800ae22:	6999      	ldr	r1, [r3, #24]
 800ae24:	9103      	str	r1, [sp, #12]
 800ae26:	9903      	ldr	r1, [sp, #12]
 800ae28:	6819      	ldr	r1, [r3, #0]
 800ae2a:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 800ae2e:	6019      	str	r1, [r3, #0]
 800ae30:	2100      	movs	r1, #0
 800ae32:	6501      	str	r1, [r0, #80]	@ 0x50
 800ae34:	e62a      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ae36:	b00d      	add	sp, #52	@ 0x34
 800ae38:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ae3c:	f7ff bc76 	b.w	800a72c <I2C_ITError>
 800ae40:	6d01      	ldr	r1, [r0, #80]	@ 0x50
 800ae42:	bb09      	cbnz	r1, 800ae88 <HAL_I2C_EV_IRQHandler+0x498>
 800ae44:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800ae46:	f001 01fe 	and.w	r1, r1, #254	@ 0xfe
 800ae4a:	6119      	str	r1, [r3, #16]
 800ae4c:	e61e      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ae4e:	4926      	ldr	r1, [pc, #152]	@ (800aee8 <HAL_I2C_EV_IRQHandler+0x4f8>)
 800ae50:	62c1      	str	r1, [r0, #44]	@ 0x2c
 800ae52:	2220      	movs	r2, #32
 800ae54:	6303      	str	r3, [r0, #48]	@ 0x30
 800ae56:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800ae5a:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800ae5e:	f016 fd77 	bl	8021950 <HAL_I2C_ListenCpltCallback>
 800ae62:	e60b      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800ae64:	6d01      	ldr	r1, [r0, #80]	@ 0x50
 800ae66:	2901      	cmp	r1, #1
 800ae68:	f47f ae10 	bne.w	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ae6c:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800ae6e:	11c9      	asrs	r1, r1, #7
 800ae70:	f001 0106 	and.w	r1, r1, #6
 800ae74:	f041 01f1 	orr.w	r1, r1, #241	@ 0xf1
 800ae78:	6119      	str	r1, [r3, #16]
 800ae7a:	e607      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ae7c:	6b82      	ldr	r2, [r0, #56]	@ 0x38
 800ae7e:	6812      	ldr	r2, [r2, #0]
 800ae80:	6852      	ldr	r2, [r2, #4]
 800ae82:	b292      	uxth	r2, r2
 800ae84:	8542      	strh	r2, [r0, #42]	@ 0x2a
 800ae86:	e6ac      	b.n	800abe2 <HAL_I2C_EV_IRQHandler+0x1f2>
 800ae88:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 800ae8a:	f041 0101 	orr.w	r1, r1, #1
 800ae8e:	b2c9      	uxtb	r1, r1
 800ae90:	6119      	str	r1, [r3, #16]
 800ae92:	e5fb      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800ae94:	685a      	ldr	r2, [r3, #4]
 800ae96:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800ae9a:	605a      	str	r2, [r3, #4]
 800ae9c:	e668      	b.n	800ab70 <HAL_I2C_EV_IRQHandler+0x180>
 800ae9e:	2a21      	cmp	r2, #33	@ 0x21
 800aea0:	d190      	bne.n	800adc4 <HAL_I2C_EV_IRQHandler+0x3d4>
 800aea2:	e795      	b.n	800add0 <HAL_I2C_EV_IRQHandler+0x3e0>
 800aea4:	685a      	ldr	r2, [r3, #4]
 800aea6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800aeaa:	605a      	str	r2, [r3, #4]
 800aeac:	681a      	ldr	r2, [r3, #0]
 800aeae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800aeb2:	601a      	str	r2, [r3, #0]
 800aeb4:	e65c      	b.n	800ab70 <HAL_I2C_EV_IRQHandler+0x180>
 800aeb6:	685a      	ldr	r2, [r3, #4]
 800aeb8:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800aebc:	605a      	str	r2, [r3, #4]
 800aebe:	681a      	ldr	r2, [r3, #0]
 800aec0:	2100      	movs	r1, #0
 800aec2:	2420      	movs	r4, #32
 800aec4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800aec8:	601a      	str	r2, [r3, #0]
 800aeca:	6301      	str	r1, [r0, #48]	@ 0x30
 800aecc:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
 800aed0:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
 800aed4:	f880 103e 	strb.w	r1, [r0, #62]	@ 0x3e
 800aed8:	2b40      	cmp	r3, #64	@ 0x40
 800aeda:	f47f ae07 	bne.w	800aaec <HAL_I2C_EV_IRQHandler+0xfc>
 800aede:	f7ff fc1f 	bl	800a720 <HAL_I2C_MemTxCpltCallback>
 800aee2:	e5cb      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800aee4:	00010040 	.word	0x00010040
 800aee8:	ffff0000 	.word	0xffff0000
 800aeec:	8d41      	ldrh	r1, [r0, #42]	@ 0x2a
 800aeee:	b289      	uxth	r1, r1
 800aef0:	2901      	cmp	r1, #1
 800aef2:	f000 80ab 	beq.w	800b04c <HAL_I2C_EV_IRQHandler+0x65c>
 800aef6:	8d41      	ldrh	r1, [r0, #42]	@ 0x2a
 800aef8:	b289      	uxth	r1, r1
 800aefa:	2902      	cmp	r1, #2
 800aefc:	f000 80c1 	beq.w	800b082 <HAL_I2C_EV_IRQHandler+0x692>
 800af00:	6819      	ldr	r1, [r3, #0]
 800af02:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
 800af06:	6019      	str	r1, [r3, #0]
 800af08:	6859      	ldr	r1, [r3, #4]
 800af0a:	0509      	lsls	r1, r1, #20
 800af0c:	d503      	bpl.n	800af16 <HAL_I2C_EV_IRQHandler+0x526>
 800af0e:	6859      	ldr	r1, [r3, #4]
 800af10:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800af14:	6059      	str	r1, [r3, #4]
 800af16:	2100      	movs	r1, #0
 800af18:	9109      	str	r1, [sp, #36]	@ 0x24
 800af1a:	6959      	ldr	r1, [r3, #20]
 800af1c:	9109      	str	r1, [sp, #36]	@ 0x24
 800af1e:	6999      	ldr	r1, [r3, #24]
 800af20:	9109      	str	r1, [sp, #36]	@ 0x24
 800af22:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800af24:	e784      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800af26:	3d01      	subs	r5, #1
 800af28:	2d01      	cmp	r5, #1
 800af2a:	681a      	ldr	r2, [r3, #0]
 800af2c:	f240 8086 	bls.w	800b03c <HAL_I2C_EV_IRQHandler+0x64c>
 800af30:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800af34:	601a      	str	r2, [r3, #0]
 800af36:	691b      	ldr	r3, [r3, #16]
 800af38:	6244      	str	r4, [r0, #36]	@ 0x24
 800af3a:	700b      	strb	r3, [r1, #0]
 800af3c:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800af3e:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 800af40:	6801      	ldr	r1, [r0, #0]
 800af42:	3b01      	subs	r3, #1
 800af44:	b29b      	uxth	r3, r3
 800af46:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800af48:	690b      	ldr	r3, [r1, #16]
 800af4a:	1c51      	adds	r1, r2, #1
 800af4c:	6241      	str	r1, [r0, #36]	@ 0x24
 800af4e:	7013      	strb	r3, [r2, #0]
 800af50:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800af52:	6801      	ldr	r1, [r0, #0]
 800af54:	3b01      	subs	r3, #1
 800af56:	b29b      	uxth	r3, r3
 800af58:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800af5a:	684b      	ldr	r3, [r1, #4]
 800af5c:	2200      	movs	r2, #0
 800af5e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800af62:	2420      	movs	r4, #32
 800af64:	604b      	str	r3, [r1, #4]
 800af66:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
 800af6a:	6302      	str	r2, [r0, #48]	@ 0x30
 800af6c:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
 800af70:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
 800af74:	2b40      	cmp	r3, #64	@ 0x40
 800af76:	d035      	beq.n	800afe4 <HAL_I2C_EV_IRQHandler+0x5f4>
 800af78:	f7ff fbcc 	bl	800a714 <HAL_I2C_MasterRxCpltCallback>
 800af7c:	e57e      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800af7e:	2d04      	cmp	r5, #4
 800af80:	d099      	beq.n	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800af82:	2d08      	cmp	r5, #8
 800af84:	d097      	beq.n	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800af86:	f515 3f80 	cmn.w	r5, #65536	@ 0x10000
 800af8a:	d094      	beq.n	800aeb6 <HAL_I2C_EV_IRQHandler+0x4c6>
 800af8c:	685a      	ldr	r2, [r3, #4]
 800af8e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800af92:	605a      	str	r2, [r3, #4]
 800af94:	2111      	movs	r1, #17
 800af96:	2320      	movs	r3, #32
 800af98:	6301      	str	r1, [r0, #48]	@ 0x30
 800af9a:	f880 403e 	strb.w	r4, [r0, #62]	@ 0x3e
 800af9e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
 800afa2:	f7ff fbb5 	bl	800a710 <HAL_I2C_MasterTxCpltCallback>
 800afa6:	e569      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800afa8:	2a01      	cmp	r2, #1
 800afaa:	f63f ad67 	bhi.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800afae:	681a      	ldr	r2, [r3, #0]
 800afb0:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 800afb2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800afb6:	601a      	str	r2, [r3, #0]
 800afb8:	685a      	ldr	r2, [r3, #4]
 800afba:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800afbe:	605a      	str	r2, [r3, #4]
 800afc0:	691b      	ldr	r3, [r3, #16]
 800afc2:	1c62      	adds	r2, r4, #1
 800afc4:	6242      	str	r2, [r0, #36]	@ 0x24
 800afc6:	7023      	strb	r3, [r4, #0]
 800afc8:	8d43      	ldrh	r3, [r0, #42]	@ 0x2a
 800afca:	3b01      	subs	r3, #1
 800afcc:	b29b      	uxth	r3, r3
 800afce:	2220      	movs	r2, #32
 800afd0:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800afd2:	f880 203d 	strb.w	r2, [r0, #61]	@ 0x3d
 800afd6:	6301      	str	r1, [r0, #48]	@ 0x30
 800afd8:	f890 303e 	ldrb.w	r3, [r0, #62]	@ 0x3e
 800afdc:	f880 103e 	strb.w	r1, [r0, #62]	@ 0x3e
 800afe0:	2b40      	cmp	r3, #64	@ 0x40
 800afe2:	d1c9      	bne.n	800af78 <HAL_I2C_EV_IRQHandler+0x588>
 800afe4:	f7ff fb9e 	bl	800a724 <HAL_I2C_MemRxCpltCallback>
 800afe8:	e548      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800afea:	9101      	str	r1, [sp, #4]
 800afec:	6959      	ldr	r1, [r3, #20]
 800afee:	9101      	str	r1, [sp, #4]
 800aff0:	6999      	ldr	r1, [r3, #24]
 800aff2:	9101      	str	r1, [sp, #4]
 800aff4:	9901      	ldr	r1, [sp, #4]
 800aff6:	e549      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800aff8:	f890 203e 	ldrb.w	r2, [r0, #62]	@ 0x3e
 800affc:	2a40      	cmp	r2, #64	@ 0x40
 800affe:	f47f aeac 	bne.w	800ad5a <HAL_I2C_EV_IRQHandler+0x36a>
 800b002:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800b004:	2a00      	cmp	r2, #0
 800b006:	d17e      	bne.n	800b106 <HAL_I2C_EV_IRQHandler+0x716>
 800b008:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
 800b00a:	2a01      	cmp	r2, #1
 800b00c:	6c82      	ldr	r2, [r0, #72]	@ 0x48
 800b00e:	f000 8096 	beq.w	800b13e <HAL_I2C_EV_IRQHandler+0x74e>
 800b012:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b016:	611a      	str	r2, [r3, #16]
 800b018:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800b01a:	3301      	adds	r3, #1
 800b01c:	6503      	str	r3, [r0, #80]	@ 0x50
 800b01e:	e52d      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b020:	9502      	str	r5, [sp, #8]
 800b022:	6959      	ldr	r1, [r3, #20]
 800b024:	9102      	str	r1, [sp, #8]
 800b026:	6999      	ldr	r1, [r3, #24]
 800b028:	9102      	str	r1, [sp, #8]
 800b02a:	9902      	ldr	r1, [sp, #8]
 800b02c:	6819      	ldr	r1, [r3, #0]
 800b02e:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 800b032:	6019      	str	r1, [r3, #0]
 800b034:	6d01      	ldr	r1, [r0, #80]	@ 0x50
 800b036:	3101      	adds	r1, #1
 800b038:	6501      	str	r1, [r0, #80]	@ 0x50
 800b03a:	e527      	b.n	800aa8c <HAL_I2C_EV_IRQHandler+0x9c>
 800b03c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b040:	601a      	str	r2, [r3, #0]
 800b042:	681a      	ldr	r2, [r3, #0]
 800b044:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b048:	601a      	str	r2, [r3, #0]
 800b04a:	e774      	b.n	800af36 <HAL_I2C_EV_IRQHandler+0x546>
 800b04c:	f517 3f80 	cmn.w	r7, #65536	@ 0x10000
 800b050:	d041      	beq.n	800b0d6 <HAL_I2C_EV_IRQHandler+0x6e6>
 800b052:	2f04      	cmp	r7, #4
 800b054:	d02f      	beq.n	800b0b6 <HAL_I2C_EV_IRQHandler+0x6c6>
 800b056:	2f08      	cmp	r7, #8
 800b058:	d02d      	beq.n	800b0b6 <HAL_I2C_EV_IRQHandler+0x6c6>
 800b05a:	f1be 0f12 	cmp.w	lr, #18
 800b05e:	d02a      	beq.n	800b0b6 <HAL_I2C_EV_IRQHandler+0x6c6>
 800b060:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b062:	2902      	cmp	r1, #2
 800b064:	6819      	ldr	r1, [r3, #0]
 800b066:	bf14      	ite	ne
 800b068:	f421 6180 	bicne.w	r1, r1, #1024	@ 0x400
 800b06c:	f441 6180 	orreq.w	r1, r1, #1024	@ 0x400
 800b070:	6019      	str	r1, [r3, #0]
 800b072:	2100      	movs	r1, #0
 800b074:	9106      	str	r1, [sp, #24]
 800b076:	6959      	ldr	r1, [r3, #20]
 800b078:	9106      	str	r1, [sp, #24]
 800b07a:	6999      	ldr	r1, [r3, #24]
 800b07c:	9106      	str	r1, [sp, #24]
 800b07e:	9906      	ldr	r1, [sp, #24]
 800b080:	e6d6      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800b082:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800b084:	2902      	cmp	r1, #2
 800b086:	6819      	ldr	r1, [r3, #0]
 800b088:	d039      	beq.n	800b0fe <HAL_I2C_EV_IRQHandler+0x70e>
 800b08a:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b08e:	6019      	str	r1, [r3, #0]
 800b090:	6819      	ldr	r1, [r3, #0]
 800b092:	f441 6100 	orr.w	r1, r1, #2048	@ 0x800
 800b096:	6019      	str	r1, [r3, #0]
 800b098:	6859      	ldr	r1, [r3, #4]
 800b09a:	050d      	lsls	r5, r1, #20
 800b09c:	d503      	bpl.n	800b0a6 <HAL_I2C_EV_IRQHandler+0x6b6>
 800b09e:	6859      	ldr	r1, [r3, #4]
 800b0a0:	f441 5180 	orr.w	r1, r1, #4096	@ 0x1000
 800b0a4:	6059      	str	r1, [r3, #4]
 800b0a6:	2100      	movs	r1, #0
 800b0a8:	9108      	str	r1, [sp, #32]
 800b0aa:	6959      	ldr	r1, [r3, #20]
 800b0ac:	9108      	str	r1, [sp, #32]
 800b0ae:	6999      	ldr	r1, [r3, #24]
 800b0b0:	9108      	str	r1, [sp, #32]
 800b0b2:	9908      	ldr	r1, [sp, #32]
 800b0b4:	e6bc      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800b0b6:	6819      	ldr	r1, [r3, #0]
 800b0b8:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b0bc:	6019      	str	r1, [r3, #0]
 800b0be:	2100      	movs	r1, #0
 800b0c0:	9107      	str	r1, [sp, #28]
 800b0c2:	6959      	ldr	r1, [r3, #20]
 800b0c4:	9107      	str	r1, [sp, #28]
 800b0c6:	6999      	ldr	r1, [r3, #24]
 800b0c8:	9107      	str	r1, [sp, #28]
 800b0ca:	9907      	ldr	r1, [sp, #28]
 800b0cc:	6819      	ldr	r1, [r3, #0]
 800b0ce:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 800b0d2:	6019      	str	r1, [r3, #0]
 800b0d4:	e6ac      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800b0d6:	6819      	ldr	r1, [r3, #0]
 800b0d8:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b0dc:	6019      	str	r1, [r3, #0]
 800b0de:	6859      	ldr	r1, [r3, #4]
 800b0e0:	f411 6100 	ands.w	r1, r1, #2048	@ 0x800
 800b0e4:	d020      	beq.n	800b128 <HAL_I2C_EV_IRQHandler+0x738>
 800b0e6:	6819      	ldr	r1, [r3, #0]
 800b0e8:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b0ec:	6019      	str	r1, [r3, #0]
 800b0ee:	2100      	movs	r1, #0
 800b0f0:	9104      	str	r1, [sp, #16]
 800b0f2:	6959      	ldr	r1, [r3, #20]
 800b0f4:	9104      	str	r1, [sp, #16]
 800b0f6:	6999      	ldr	r1, [r3, #24]
 800b0f8:	9104      	str	r1, [sp, #16]
 800b0fa:	9904      	ldr	r1, [sp, #16]
 800b0fc:	e698      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800b0fe:	f441 6180 	orr.w	r1, r1, #1024	@ 0x400
 800b102:	6019      	str	r1, [r3, #0]
 800b104:	e7c8      	b.n	800b098 <HAL_I2C_EV_IRQHandler+0x6a8>
 800b106:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800b108:	2a01      	cmp	r2, #1
 800b10a:	d01e      	beq.n	800b14a <HAL_I2C_EV_IRQHandler+0x75a>
 800b10c:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800b10e:	2a02      	cmp	r2, #2
 800b110:	f47f acb4 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b114:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800b118:	2a22      	cmp	r2, #34	@ 0x22
 800b11a:	d01d      	beq.n	800b158 <HAL_I2C_EV_IRQHandler+0x768>
 800b11c:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
 800b120:	2a21      	cmp	r2, #33	@ 0x21
 800b122:	f47f acab 	bne.w	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b126:	e618      	b.n	800ad5a <HAL_I2C_EV_IRQHandler+0x36a>
 800b128:	9105      	str	r1, [sp, #20]
 800b12a:	6959      	ldr	r1, [r3, #20]
 800b12c:	9105      	str	r1, [sp, #20]
 800b12e:	6999      	ldr	r1, [r3, #24]
 800b130:	9105      	str	r1, [sp, #20]
 800b132:	9905      	ldr	r1, [sp, #20]
 800b134:	6819      	ldr	r1, [r3, #0]
 800b136:	f441 7100 	orr.w	r1, r1, #512	@ 0x200
 800b13a:	6019      	str	r1, [r3, #0]
 800b13c:	e678      	b.n	800ae30 <HAL_I2C_EV_IRQHandler+0x440>
 800b13e:	b2d2      	uxtb	r2, r2
 800b140:	611a      	str	r2, [r3, #16]
 800b142:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800b144:	3302      	adds	r3, #2
 800b146:	6503      	str	r3, [r0, #80]	@ 0x50
 800b148:	e498      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b14a:	6c82      	ldr	r2, [r0, #72]	@ 0x48
 800b14c:	b2d2      	uxtb	r2, r2
 800b14e:	611a      	str	r2, [r3, #16]
 800b150:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 800b152:	3301      	adds	r3, #1
 800b154:	6503      	str	r3, [r0, #80]	@ 0x50
 800b156:	e491      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b158:	681a      	ldr	r2, [r3, #0]
 800b15a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b15e:	601a      	str	r2, [r3, #0]
 800b160:	e48c      	b.n	800aa7c <HAL_I2C_EV_IRQHandler+0x8c>
 800b162:	bf00      	nop

0800b164 <I2C_DMAAbort>:
 800b164:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 800b166:	6802      	ldr	r2, [r0, #0]
 800b168:	6811      	ldr	r1, [r2, #0]
 800b16a:	b510      	push	{r4, lr}
 800b16c:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800b170:	6b44      	ldr	r4, [r0, #52]	@ 0x34
 800b172:	6011      	str	r1, [r2, #0]
 800b174:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 800b176:	2300      	movs	r3, #0
 800b178:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800b17a:	6523      	str	r3, [r4, #80]	@ 0x50
 800b17c:	650b      	str	r3, [r1, #80]	@ 0x50
 800b17e:	f890 103d 	ldrb.w	r1, [r0, #61]	@ 0x3d
 800b182:	2960      	cmp	r1, #96	@ 0x60
 800b184:	f04f 0120 	mov.w	r1, #32
 800b188:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
 800b18c:	f880 303e 	strb.w	r3, [r0, #62]	@ 0x3e
 800b190:	d006      	beq.n	800b1a0 <I2C_DMAAbort+0x3c>
 800b192:	6813      	ldr	r3, [r2, #0]
 800b194:	f023 0301 	bic.w	r3, r3, #1
 800b198:	6013      	str	r3, [r2, #0]
 800b19a:	f016 fc2d 	bl	80219f8 <HAL_I2C_ErrorCallback>
 800b19e:	bd10      	pop	{r4, pc}
 800b1a0:	6403      	str	r3, [r0, #64]	@ 0x40
 800b1a2:	6813      	ldr	r3, [r2, #0]
 800b1a4:	f023 0301 	bic.w	r3, r3, #1
 800b1a8:	6013      	str	r3, [r2, #0]
 800b1aa:	f7ff fabd 	bl	800a728 <HAL_I2C_AbortCpltCallback>
 800b1ae:	bd10      	pop	{r4, pc}

0800b1b0 <MX_I2C1_Init>:
 800b1b0:	0042      	lsls	r2, r0, #1
 800b1b2:	480d      	ldr	r0, [pc, #52]	@ (800b1e8 <MX_I2C1_Init+0x38>)
 800b1b4:	490d      	ldr	r1, [pc, #52]	@ (800b1ec <MX_I2C1_Init+0x3c>)
 800b1b6:	b510      	push	{r4, lr}
 800b1b8:	2300      	movs	r3, #0
 800b1ba:	4c0d      	ldr	r4, [pc, #52]	@ (800b1f0 <MX_I2C1_Init+0x40>)
 800b1bc:	6041      	str	r1, [r0, #4]
 800b1be:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800b1c2:	e9c0 3202 	strd	r3, r2, [r0, #8]
 800b1c6:	e9c0 1304 	strd	r1, r3, [r0, #16]
 800b1ca:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800b1ce:	6004      	str	r4, [r0, #0]
 800b1d0:	6203      	str	r3, [r0, #32]
 800b1d2:	f7ff f98b 	bl	800a4ec <HAL_I2C_Init>
 800b1d6:	b900      	cbnz	r0, 800b1da <MX_I2C1_Init+0x2a>
 800b1d8:	bd10      	pop	{r4, pc}
 800b1da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b1de:	4805      	ldr	r0, [pc, #20]	@ (800b1f4 <MX_I2C1_Init+0x44>)
 800b1e0:	214f      	movs	r1, #79	@ 0x4f
 800b1e2:	f7f8 bb0d 	b.w	8003800 <_Error_Handler>
 800b1e6:	bf00      	nop
 800b1e8:	20001778 	.word	0x20001778
 800b1ec:	000186a0 	.word	0x000186a0
 800b1f0:	40005400 	.word	0x40005400
 800b1f4:	080296b0 	.word	0x080296b0

0800b1f8 <HAL_I2C_MspInit>:
 800b1f8:	4b37      	ldr	r3, [pc, #220]	@ (800b2d8 <HAL_I2C_MspInit+0xe0>)
 800b1fa:	6802      	ldr	r2, [r0, #0]
 800b1fc:	429a      	cmp	r2, r3
 800b1fe:	d000      	beq.n	800b202 <HAL_I2C_MspInit+0xa>
 800b200:	4770      	bx	lr
 800b202:	b570      	push	{r4, r5, r6, lr}
 800b204:	2201      	movs	r2, #1
 800b206:	b088      	sub	sp, #32
 800b208:	2112      	movs	r1, #18
 800b20a:	2303      	movs	r3, #3
 800b20c:	4604      	mov	r4, r0
 800b20e:	f44f 7040 	mov.w	r0, #768	@ 0x300
 800b212:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b216:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800b21a:	4830      	ldr	r0, [pc, #192]	@ (800b2dc <HAL_I2C_MspInit+0xe4>)
 800b21c:	4e30      	ldr	r6, [pc, #192]	@ (800b2e0 <HAL_I2C_MspInit+0xe8>)
 800b21e:	2304      	movs	r3, #4
 800b220:	a902      	add	r1, sp, #8
 800b222:	9306      	str	r3, [sp, #24]
 800b224:	f7fe ff78 	bl	800a118 <HAL_GPIO_Init>
 800b228:	2300      	movs	r3, #0
 800b22a:	4a2e      	ldr	r2, [pc, #184]	@ (800b2e4 <HAL_I2C_MspInit+0xec>)
 800b22c:	9301      	str	r3, [sp, #4]
 800b22e:	6c11      	ldr	r1, [r2, #64]	@ 0x40
 800b230:	f441 1100 	orr.w	r1, r1, #2097152	@ 0x200000
 800b234:	6411      	str	r1, [r2, #64]	@ 0x40
 800b236:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800b238:	492b      	ldr	r1, [pc, #172]	@ (800b2e8 <HAL_I2C_MspInit+0xf0>)
 800b23a:	60b3      	str	r3, [r6, #8]
 800b23c:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800b240:	9201      	str	r2, [sp, #4]
 800b242:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800b246:	e9c6 1200 	strd	r1, r2, [r6]
 800b24a:	9801      	ldr	r0, [sp, #4]
 800b24c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800b250:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b254:	4630      	mov	r0, r6
 800b256:	e9c6 3103 	strd	r3, r1, [r6, #12]
 800b25a:	e9c6 3305 	strd	r3, r3, [r6, #20]
 800b25e:	e9c6 3308 	strd	r3, r3, [r6, #32]
 800b262:	61f2      	str	r2, [r6, #28]
 800b264:	f7f9 f8bc 	bl	80043e0 <HAL_DMA_Init>
 800b268:	bb58      	cbnz	r0, 800b2c2 <HAL_I2C_MspInit+0xca>
 800b26a:	4d20      	ldr	r5, [pc, #128]	@ (800b2ec <HAL_I2C_MspInit+0xf4>)
 800b26c:	4a20      	ldr	r2, [pc, #128]	@ (800b2f0 <HAL_I2C_MspInit+0xf8>)
 800b26e:	602a      	str	r2, [r5, #0]
 800b270:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 800b274:	2300      	movs	r3, #0
 800b276:	63a6      	str	r6, [r4, #56]	@ 0x38
 800b278:	606a      	str	r2, [r5, #4]
 800b27a:	2140      	movs	r1, #64	@ 0x40
 800b27c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800b280:	4628      	mov	r0, r5
 800b282:	e9c5 1302 	strd	r1, r3, [r5, #8]
 800b286:	e9c5 3305 	strd	r3, r3, [r5, #20]
 800b28a:	e9c5 3307 	strd	r3, r3, [r5, #28]
 800b28e:	63b4      	str	r4, [r6, #56]	@ 0x38
 800b290:	612a      	str	r2, [r5, #16]
 800b292:	626b      	str	r3, [r5, #36]	@ 0x24
 800b294:	f7f9 f8a4 	bl	80043e0 <HAL_DMA_Init>
 800b298:	b9c0      	cbnz	r0, 800b2cc <HAL_I2C_MspInit+0xd4>
 800b29a:	6365      	str	r5, [r4, #52]	@ 0x34
 800b29c:	2200      	movs	r2, #0
 800b29e:	2105      	movs	r1, #5
 800b2a0:	201f      	movs	r0, #31
 800b2a2:	63ac      	str	r4, [r5, #56]	@ 0x38
 800b2a4:	f7f5 fe80 	bl	8000fa8 <HAL_NVIC_SetPriority>
 800b2a8:	201f      	movs	r0, #31
 800b2aa:	f7f5 feb9 	bl	8001020 <HAL_NVIC_EnableIRQ>
 800b2ae:	2200      	movs	r2, #0
 800b2b0:	2105      	movs	r1, #5
 800b2b2:	2020      	movs	r0, #32
 800b2b4:	f7f5 fe78 	bl	8000fa8 <HAL_NVIC_SetPriority>
 800b2b8:	2020      	movs	r0, #32
 800b2ba:	f7f5 feb1 	bl	8001020 <HAL_NVIC_EnableIRQ>
 800b2be:	b008      	add	sp, #32
 800b2c0:	bd70      	pop	{r4, r5, r6, pc}
 800b2c2:	480c      	ldr	r0, [pc, #48]	@ (800b2f4 <HAL_I2C_MspInit+0xfc>)
 800b2c4:	217a      	movs	r1, #122	@ 0x7a
 800b2c6:	f7f8 fa9b 	bl	8003800 <_Error_Handler>
 800b2ca:	e7ce      	b.n	800b26a <HAL_I2C_MspInit+0x72>
 800b2cc:	4809      	ldr	r0, [pc, #36]	@ (800b2f4 <HAL_I2C_MspInit+0xfc>)
 800b2ce:	218c      	movs	r1, #140	@ 0x8c
 800b2d0:	f7f8 fa96 	bl	8003800 <_Error_Handler>
 800b2d4:	e7e1      	b.n	800b29a <HAL_I2C_MspInit+0xa2>
 800b2d6:	bf00      	nop
 800b2d8:	40005400 	.word	0x40005400
 800b2dc:	40020400 	.word	0x40020400
 800b2e0:	20001718 	.word	0x20001718
 800b2e4:	40023800 	.word	0x40023800
 800b2e8:	40026010 	.word	0x40026010
 800b2ec:	200016b8 	.word	0x200016b8
 800b2f0:	400260a0 	.word	0x400260a0
 800b2f4:	080296b0 	.word	0x080296b0

0800b2f8 <Reset_Handler>:
 800b2f8:	f8df d038 	ldr.w	sp, [pc, #56]	@ 800b334 <LoopFillZerobss+0x18>
 800b2fc:	2100      	movs	r1, #0
 800b2fe:	e003      	b.n	800b308 <LoopCopyDataInit>

0800b300 <CopyDataInit>:
 800b300:	4b0d      	ldr	r3, [pc, #52]	@ (800b338 <LoopFillZerobss+0x1c>)
 800b302:	585b      	ldr	r3, [r3, r1]
 800b304:	5043      	str	r3, [r0, r1]
 800b306:	3104      	adds	r1, #4

0800b308 <LoopCopyDataInit>:
 800b308:	480c      	ldr	r0, [pc, #48]	@ (800b33c <LoopFillZerobss+0x20>)
 800b30a:	4b0d      	ldr	r3, [pc, #52]	@ (800b340 <LoopFillZerobss+0x24>)
 800b30c:	1842      	adds	r2, r0, r1
 800b30e:	429a      	cmp	r2, r3
 800b310:	d3f6      	bcc.n	800b300 <CopyDataInit>
 800b312:	4a0c      	ldr	r2, [pc, #48]	@ (800b344 <LoopFillZerobss+0x28>)
 800b314:	e002      	b.n	800b31c <LoopFillZerobss>

0800b316 <FillZerobss>:
 800b316:	2300      	movs	r3, #0
 800b318:	f842 3b04 	str.w	r3, [r2], #4

0800b31c <LoopFillZerobss>:
 800b31c:	4b0a      	ldr	r3, [pc, #40]	@ (800b348 <LoopFillZerobss+0x2c>)
 800b31e:	429a      	cmp	r2, r3
 800b320:	d3f9      	bcc.n	800b316 <FillZerobss>
 800b322:	f7fc fed3 	bl	80080cc <SystemInit>
 800b326:	f7f8 f969 	bl	80035fc <early_start_checks>
 800b32a:	f019 fa87 	bl	802483c <__libc_init_array>
 800b32e:	f7f8 fa01 	bl	8003734 <main>
 800b332:	4770      	bx	lr
 800b334:	20020000 	.word	0x20020000
 800b338:	08038998 	.word	0x08038998
 800b33c:	20000000 	.word	0x20000000
 800b340:	200005f8 	.word	0x200005f8
 800b344:	200005f8 	.word	0x200005f8
 800b348:	2000d6cc 	.word	0x2000d6cc

0800b34c <CAN2_RX0_IRQHandler>:
 800b34c:	e7fe      	b.n	800b34c <CAN2_RX0_IRQHandler>
	...

0800b350 <_sbrk>:
 800b350:	b510      	push	{r4, lr}
 800b352:	4604      	mov	r4, r0
 800b354:	f7fd fa40 	bl	80087d8 <vTaskSuspendAll>
 800b358:	4a09      	ldr	r2, [pc, #36]	@ (800b380 <_sbrk+0x30>)
 800b35a:	6810      	ldr	r0, [r2, #0]
 800b35c:	b160      	cbz	r0, 800b378 <_sbrk+0x28>
 800b35e:	4909      	ldr	r1, [pc, #36]	@ (800b384 <_sbrk+0x34>)
 800b360:	6809      	ldr	r1, [r1, #0]
 800b362:	1903      	adds	r3, r0, r4
 800b364:	428b      	cmp	r3, r1
 800b366:	bf96      	itet	ls
 800b368:	4604      	movls	r4, r0
 800b36a:	f04f 34ff 	movhi.w	r4, #4294967295	@ 0xffffffff
 800b36e:	6013      	strls	r3, [r2, #0]
 800b370:	f7fd fb88 	bl	8008a84 <xTaskResumeAll>
 800b374:	4620      	mov	r0, r4
 800b376:	bd10      	pop	{r4, pc}
 800b378:	4b03      	ldr	r3, [pc, #12]	@ (800b388 <_sbrk+0x38>)
 800b37a:	6818      	ldr	r0, [r3, #0]
 800b37c:	6010      	str	r0, [r2, #0]
 800b37e:	e7ee      	b.n	800b35e <_sbrk+0xe>
 800b380:	200017cc 	.word	0x200017cc
 800b384:	200001f8 	.word	0x200001f8
 800b388:	200001fc 	.word	0x200001fc

0800b38c <DRV8301_readSpi>:
 800b38c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b38e:	4604      	mov	r4, r0
 800b390:	b085      	sub	sp, #20
 800b392:	2200      	movs	r2, #0
 800b394:	68c0      	ldr	r0, [r0, #12]
 800b396:	460d      	mov	r5, r1
 800b398:	8a21      	ldrh	r1, [r4, #16]
 800b39a:	f7ff f897 	bl	800a4cc <HAL_GPIO_WritePin>
 800b39e:	2001      	movs	r0, #1
 800b3a0:	f000 fb14 	bl	800b9cc <delay_us>
 800b3a4:	ea6f 4145 	mvn.w	r1, r5, lsl #17
 800b3a8:	ea6f 4151 	mvn.w	r1, r1, lsr #17
 800b3ac:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800b3b0:	2700      	movs	r7, #0
 800b3b2:	f64b 66ef 	movw	r6, #48879	@ 0xbeef
 800b3b6:	f8ad 100c 	strh.w	r1, [sp, #12]
 800b3ba:	2201      	movs	r2, #1
 800b3bc:	a903      	add	r1, sp, #12
 800b3be:	6820      	ldr	r0, [r4, #0]
 800b3c0:	f8ad 700a 	strh.w	r7, [sp, #10]
 800b3c4:	f8ad 600e 	strh.w	r6, [sp, #14]
 800b3c8:	f7f7 fcf8 	bl	8002dbc <HAL_SPI_Transmit>
 800b3cc:	8a21      	ldrh	r1, [r4, #16]
 800b3ce:	68e0      	ldr	r0, [r4, #12]
 800b3d0:	2201      	movs	r2, #1
 800b3d2:	f7ff f87b 	bl	800a4cc <HAL_GPIO_WritePin>
 800b3d6:	2001      	movs	r0, #1
 800b3d8:	f000 faf8 	bl	800b9cc <delay_us>
 800b3dc:	8a21      	ldrh	r1, [r4, #16]
 800b3de:	68e0      	ldr	r0, [r4, #12]
 800b3e0:	463a      	mov	r2, r7
 800b3e2:	f7ff f873 	bl	800a4cc <HAL_GPIO_WritePin>
 800b3e6:	2001      	movs	r0, #1
 800b3e8:	f000 faf0 	bl	800b9cc <delay_us>
 800b3ec:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800b3f0:	9200      	str	r2, [sp, #0]
 800b3f2:	2301      	movs	r3, #1
 800b3f4:	f10d 020e 	add.w	r2, sp, #14
 800b3f8:	f10d 010a 	add.w	r1, sp, #10
 800b3fc:	6820      	ldr	r0, [r4, #0]
 800b3fe:	f7f7 fdad 	bl	8002f5c <HAL_SPI_TransmitReceive>
 800b402:	2001      	movs	r0, #1
 800b404:	f000 fae2 	bl	800b9cc <delay_us>
 800b408:	8a21      	ldrh	r1, [r4, #16]
 800b40a:	68e0      	ldr	r0, [r4, #12]
 800b40c:	2201      	movs	r2, #1
 800b40e:	f7ff f85d 	bl	800a4cc <HAL_GPIO_WritePin>
 800b412:	2001      	movs	r0, #1
 800b414:	f000 fada 	bl	800b9cc <delay_us>
 800b418:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800b41c:	42b0      	cmp	r0, r6
 800b41e:	d003      	beq.n	800b428 <DRV8301_readSpi+0x9c>
 800b420:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b424:	b005      	add	sp, #20
 800b426:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b428:	4b03      	ldr	r3, [pc, #12]	@ (800b438 <DRV8301_readSpi+0xac>)
 800b42a:	4a04      	ldr	r2, [pc, #16]	@ (800b43c <DRV8301_readSpi+0xb0>)
 800b42c:	4804      	ldr	r0, [pc, #16]	@ (800b440 <DRV8301_readSpi+0xb4>)
 800b42e:	f240 1187 	movw	r1, #391	@ 0x187
 800b432:	f017 fe7f 	bl	8023134 <__assert_func>
 800b436:	bf00      	nop
 800b438:	080296c4 	.word	0x080296c4
 800b43c:	0802ac04 	.word	0x0802ac04
 800b440:	080296d8 	.word	0x080296d8

0800b444 <DRV8301_enable>:
 800b444:	b510      	push	{r4, lr}
 800b446:	8901      	ldrh	r1, [r0, #8]
 800b448:	4604      	mov	r4, r0
 800b44a:	2201      	movs	r2, #1
 800b44c:	6840      	ldr	r0, [r0, #4]
 800b44e:	f7ff f83d 	bl	800a4cc <HAL_GPIO_WritePin>
 800b452:	200a      	movs	r0, #10
 800b454:	f7fc fae8 	bl	8007a28 <osDelay>
 800b458:	2100      	movs	r1, #0
 800b45a:	4620      	mov	r0, r4
 800b45c:	f7ff ff96 	bl	800b38c <DRV8301_readSpi>
 800b460:	0543      	lsls	r3, r0, #21
 800b462:	d4f9      	bmi.n	800b458 <DRV8301_enable+0x14>
 800b464:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b468:	2001      	movs	r0, #1
 800b46a:	f7fc badd 	b.w	8007a28 <osDelay>
 800b46e:	bf00      	nop

0800b470 <DRV8301_getFaultType>:
 800b470:	b508      	push	{r3, lr}
 800b472:	2100      	movs	r1, #0
 800b474:	f7ff ff8a 	bl	800b38c <DRV8301_readSpi>
 800b478:	f410 6f80 	tst.w	r0, #1024	@ 0x400
 800b47c:	bf08      	it	eq
 800b47e:	2000      	moveq	r0, #0
 800b480:	bd08      	pop	{r3, pc}
 800b482:	bf00      	nop

0800b484 <DRV8301_writeSpi>:
 800b484:	b570      	push	{r4, r5, r6, lr}
 800b486:	4604      	mov	r4, r0
 800b488:	b082      	sub	sp, #8
 800b48a:	460d      	mov	r5, r1
 800b48c:	4616      	mov	r6, r2
 800b48e:	8a01      	ldrh	r1, [r0, #16]
 800b490:	68c0      	ldr	r0, [r0, #12]
 800b492:	2200      	movs	r2, #0
 800b494:	f7ff f81a 	bl	800a4cc <HAL_GPIO_WritePin>
 800b498:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800b49c:	2001      	movs	r0, #1
 800b49e:	f000 fa95 	bl	800b9cc <delay_us>
 800b4a2:	4335      	orrs	r5, r6
 800b4a4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800b4a8:	f10d 0106 	add.w	r1, sp, #6
 800b4ac:	2201      	movs	r2, #1
 800b4ae:	6820      	ldr	r0, [r4, #0]
 800b4b0:	f8ad 5006 	strh.w	r5, [sp, #6]
 800b4b4:	f7f7 fc82 	bl	8002dbc <HAL_SPI_Transmit>
 800b4b8:	2001      	movs	r0, #1
 800b4ba:	f000 fa87 	bl	800b9cc <delay_us>
 800b4be:	8a21      	ldrh	r1, [r4, #16]
 800b4c0:	68e0      	ldr	r0, [r4, #12]
 800b4c2:	2201      	movs	r2, #1
 800b4c4:	f7ff f802 	bl	800a4cc <HAL_GPIO_WritePin>
 800b4c8:	2001      	movs	r0, #1
 800b4ca:	f000 fa7f 	bl	800b9cc <delay_us>
 800b4ce:	b002      	add	sp, #8
 800b4d0:	bd70      	pop	{r4, r5, r6, pc}
 800b4d2:	bf00      	nop

0800b4d4 <DRV8301_writeData>:
 800b4d4:	b538      	push	{r3, r4, r5, lr}
 800b4d6:	f891 3022 	ldrb.w	r3, [r1, #34]	@ 0x22
 800b4da:	b903      	cbnz	r3, 800b4de <DRV8301_writeData+0xa>
 800b4dc:	bd38      	pop	{r3, r4, r5, pc}
 800b4de:	7c4a      	ldrb	r2, [r1, #17]
 800b4e0:	7c0b      	ldrb	r3, [r1, #16]
 800b4e2:	4313      	orrs	r3, r2
 800b4e4:	7c8a      	ldrb	r2, [r1, #18]
 800b4e6:	4313      	orrs	r3, r2
 800b4e8:	7cca      	ldrb	r2, [r1, #19]
 800b4ea:	4313      	orrs	r3, r2
 800b4ec:	8a8a      	ldrh	r2, [r1, #20]
 800b4ee:	460c      	mov	r4, r1
 800b4f0:	431a      	orrs	r2, r3
 800b4f2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800b4f6:	4605      	mov	r5, r0
 800b4f8:	f7ff ffc4 	bl	800b484 <DRV8301_writeSpi>
 800b4fc:	7de2      	ldrb	r2, [r4, #23]
 800b4fe:	7da3      	ldrb	r3, [r4, #22]
 800b500:	4313      	orrs	r3, r2
 800b502:	7e22      	ldrb	r2, [r4, #24]
 800b504:	4313      	orrs	r3, r2
 800b506:	7e62      	ldrb	r2, [r4, #25]
 800b508:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 800b50c:	431a      	orrs	r2, r3
 800b50e:	4628      	mov	r0, r5
 800b510:	f7ff ffb8 	bl	800b484 <DRV8301_writeSpi>
 800b514:	2300      	movs	r3, #0
 800b516:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800b51a:	bd38      	pop	{r3, r4, r5, pc}

0800b51c <DRV8301_readData>:
 800b51c:	b538      	push	{r3, r4, r5, lr}
 800b51e:	f891 3023 	ldrb.w	r3, [r1, #35]	@ 0x23
 800b522:	b903      	cbnz	r3, 800b526 <DRV8301_readData+0xa>
 800b524:	bd38      	pop	{r3, r4, r5, pc}
 800b526:	460c      	mov	r4, r1
 800b528:	2100      	movs	r1, #0
 800b52a:	4605      	mov	r5, r0
 800b52c:	f7ff ff2e 	bl	800b38c <DRV8301_readSpi>
 800b530:	2100      	movs	r1, #0
 800b532:	f3c0 2280 	ubfx	r2, r0, #10, #1
 800b536:	f362 0107 	bfi	r1, r2, #0, #8
 800b53a:	f3c0 2240 	ubfx	r2, r0, #9, #1
 800b53e:	f362 210f 	bfi	r1, r2, #8, #8
 800b542:	f3c0 2200 	ubfx	r2, r0, #8, #1
 800b546:	f362 4117 	bfi	r1, r2, #16, #8
 800b54a:	f3c0 12c0 	ubfx	r2, r0, #7, #1
 800b54e:	4603      	mov	r3, r0
 800b550:	f362 611f 	bfi	r1, r2, #24, #8
 800b554:	f3c0 1080 	ubfx	r0, r0, #6, #1
 800b558:	2200      	movs	r2, #0
 800b55a:	f360 0207 	bfi	r2, r0, #0, #8
 800b55e:	6021      	str	r1, [r4, #0]
 800b560:	f3c3 1140 	ubfx	r1, r3, #5, #1
 800b564:	f361 220f 	bfi	r2, r1, #8, #8
 800b568:	f3c3 1100 	ubfx	r1, r3, #4, #1
 800b56c:	f361 4217 	bfi	r2, r1, #16, #8
 800b570:	f3c3 01c0 	ubfx	r1, r3, #3, #1
 800b574:	f361 621f 	bfi	r2, r1, #24, #8
 800b578:	8363      	strh	r3, [r4, #26]
 800b57a:	f3c3 0180 	ubfx	r1, r3, #2, #1
 800b57e:	6062      	str	r2, [r4, #4]
 800b580:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b584:	f003 0301 	and.w	r3, r3, #1
 800b588:	7221      	strb	r1, [r4, #8]
 800b58a:	7262      	strb	r2, [r4, #9]
 800b58c:	72a3      	strb	r3, [r4, #10]
 800b58e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800b592:	4628      	mov	r0, r5
 800b594:	f7ff fefa 	bl	800b38c <DRV8301_readSpi>
 800b598:	f3c0 12c0 	ubfx	r2, r0, #7, #1
 800b59c:	f000 030f 	and.w	r3, r0, #15
 800b5a0:	7322      	strb	r2, [r4, #12]
 800b5a2:	81e3      	strh	r3, [r4, #14]
 800b5a4:	83a0      	strh	r0, [r4, #28]
 800b5a6:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800b5aa:	4628      	mov	r0, r5
 800b5ac:	f7ff feee 	bl	800b38c <DRV8301_readSpi>
 800b5b0:	2200      	movs	r2, #0
 800b5b2:	b2c1      	uxtb	r1, r0
 800b5b4:	f361 0207 	bfi	r2, r1, #0, #8
 800b5b8:	f361 220f 	bfi	r2, r1, #8, #8
 800b5bc:	f361 4217 	bfi	r2, r1, #16, #8
 800b5c0:	f361 621f 	bfi	r2, r1, #24, #8
 800b5c4:	490f      	ldr	r1, [pc, #60]	@ (800b604 <DRV8301_readData+0xe8>)
 800b5c6:	83e0      	strh	r0, [r4, #30]
 800b5c8:	4011      	ands	r1, r2
 800b5ca:	f400 63f8 	and.w	r3, r0, #1984	@ 0x7c0
 800b5ce:	6121      	str	r1, [r4, #16]
 800b5d0:	82a3      	strh	r3, [r4, #20]
 800b5d2:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 800b5d6:	4628      	mov	r0, r5
 800b5d8:	f7ff fed8 	bl	800b38c <DRV8301_readSpi>
 800b5dc:	2300      	movs	r3, #0
 800b5de:	b2c2      	uxtb	r2, r0
 800b5e0:	f362 0307 	bfi	r3, r2, #0, #8
 800b5e4:	f362 230f 	bfi	r3, r2, #8, #8
 800b5e8:	4907      	ldr	r1, [pc, #28]	@ (800b608 <DRV8301_readData+0xec>)
 800b5ea:	8420      	strh	r0, [r4, #32]
 800b5ec:	f362 4317 	bfi	r3, r2, #16, #8
 800b5f0:	f362 631f 	bfi	r3, r2, #24, #8
 800b5f4:	4019      	ands	r1, r3
 800b5f6:	f8c4 1016 	str.w	r1, [r4, #22]
 800b5fa:	2300      	movs	r3, #0
 800b5fc:	f884 3023 	strb.w	r3, [r4, #35]	@ 0x23
 800b600:	bd38      	pop	{r3, r4, r5, pc}
 800b602:	bf00      	nop
 800b604:	30080403 	.word	0x30080403
 800b608:	40300c03 	.word	0x40300c03

0800b60c <DRV8301_setupSpi>:
 800b60c:	b570      	push	{r4, r5, r6, lr}
 800b60e:	2500      	movs	r5, #0
 800b610:	4606      	mov	r6, r0
 800b612:	844d      	strh	r5, [r1, #34]	@ 0x22
 800b614:	2001      	movs	r0, #1
 800b616:	460c      	mov	r4, r1
 800b618:	f7fc fa06 	bl	8007a28 <osDelay>
 800b61c:	4629      	mov	r1, r5
 800b61e:	4630      	mov	r0, r6
 800b620:	f7ff feb4 	bl	800b38c <DRV8301_readSpi>
 800b624:	4629      	mov	r1, r5
 800b626:	f3c0 2280 	ubfx	r2, r0, #10, #1
 800b62a:	4603      	mov	r3, r0
 800b62c:	f362 0107 	bfi	r1, r2, #0, #8
 800b630:	f3c0 1080 	ubfx	r0, r0, #6, #1
 800b634:	462a      	mov	r2, r5
 800b636:	f360 0207 	bfi	r2, r0, #0, #8
 800b63a:	f3c3 2040 	ubfx	r0, r3, #9, #1
 800b63e:	f360 210f 	bfi	r1, r0, #8, #8
 800b642:	f3c3 1040 	ubfx	r0, r3, #5, #1
 800b646:	f360 220f 	bfi	r2, r0, #8, #8
 800b64a:	f3c3 2000 	ubfx	r0, r3, #8, #1
 800b64e:	f360 4117 	bfi	r1, r0, #16, #8
 800b652:	f3c3 1000 	ubfx	r0, r3, #4, #1
 800b656:	f360 4217 	bfi	r2, r0, #16, #8
 800b65a:	f3c3 10c0 	ubfx	r0, r3, #7, #1
 800b65e:	f360 611f 	bfi	r1, r0, #24, #8
 800b662:	6021      	str	r1, [r4, #0]
 800b664:	f3c3 01c0 	ubfx	r1, r3, #3, #1
 800b668:	f361 621f 	bfi	r2, r1, #24, #8
 800b66c:	6062      	str	r2, [r4, #4]
 800b66e:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800b672:	7222      	strb	r2, [r4, #8]
 800b674:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800b678:	f003 0301 	and.w	r3, r3, #1
 800b67c:	7262      	strb	r2, [r4, #9]
 800b67e:	72a3      	strb	r3, [r4, #10]
 800b680:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800b684:	4630      	mov	r0, r6
 800b686:	f7ff fe81 	bl	800b38c <DRV8301_readSpi>
 800b68a:	f3c0 13c0 	ubfx	r3, r0, #7, #1
 800b68e:	f000 000f 	and.w	r0, r0, #15
 800b692:	7323      	strb	r3, [r4, #12]
 800b694:	81e0      	strh	r0, [r4, #14]
 800b696:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800b69a:	4630      	mov	r0, r6
 800b69c:	f7ff fe76 	bl	800b38c <DRV8301_readSpi>
 800b6a0:	462b      	mov	r3, r5
 800b6a2:	b2c2      	uxtb	r2, r0
 800b6a4:	f362 0307 	bfi	r3, r2, #0, #8
 800b6a8:	f362 230f 	bfi	r3, r2, #8, #8
 800b6ac:	f362 4317 	bfi	r3, r2, #16, #8
 800b6b0:	f362 631f 	bfi	r3, r2, #24, #8
 800b6b4:	4a0c      	ldr	r2, [pc, #48]	@ (800b6e8 <DRV8301_setupSpi+0xdc>)
 800b6b6:	f400 60f8 	and.w	r0, r0, #1984	@ 0x7c0
 800b6ba:	401a      	ands	r2, r3
 800b6bc:	82a0      	strh	r0, [r4, #20]
 800b6be:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 800b6c2:	4630      	mov	r0, r6
 800b6c4:	6122      	str	r2, [r4, #16]
 800b6c6:	f7ff fe61 	bl	800b38c <DRV8301_readSpi>
 800b6ca:	b2c0      	uxtb	r0, r0
 800b6cc:	f360 0507 	bfi	r5, r0, #0, #8
 800b6d0:	f360 250f 	bfi	r5, r0, #8, #8
 800b6d4:	4b05      	ldr	r3, [pc, #20]	@ (800b6ec <DRV8301_setupSpi+0xe0>)
 800b6d6:	f360 4517 	bfi	r5, r0, #16, #8
 800b6da:	f360 651f 	bfi	r5, r0, #24, #8
 800b6de:	402b      	ands	r3, r5
 800b6e0:	f8c4 3016 	str.w	r3, [r4, #22]
 800b6e4:	bd70      	pop	{r4, r5, r6, pc}
 800b6e6:	bf00      	nop
 800b6e8:	30080403 	.word	0x30080403
 800b6ec:	40300c03 	.word	0x40300c03

0800b6f0 <SVM>:
 800b6f0:	eddf 7a7b 	vldr	s15, [pc, #492]	@ 800b8e0 <SVM+0x1f0>
 800b6f4:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800b6f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6fc:	ee60 7aa7 	vmul.f32	s15, s1, s15
 800b700:	db6d      	blt.n	800b7de <SVM+0xee>
 800b702:	eddf 6a78 	vldr	s13, [pc, #480]	@ 800b8e4 <SVM+0x1f4>
 800b706:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800b70a:	ee60 0aa6 	vmul.f32	s1, s1, s13
 800b70e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b716:	ee37 7a60 	vsub.f32	s14, s14, s1
 800b71a:	db46      	blt.n	800b7aa <SVM+0xba>
 800b71c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b720:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b724:	f140 8082 	bpl.w	800b82c <SVM+0x13c>
 800b728:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 800b72c:	ee27 7a26 	vmul.f32	s14, s14, s13
 800b730:	ee77 6ac0 	vsub.f32	s13, s15, s0
 800b734:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b738:	ee76 7a87 	vadd.f32	s15, s13, s14
 800b73c:	ed81 7a00 	vstr	s14, [r1]
 800b740:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b744:	edc0 7a00 	vstr	s15, [r0]
 800b748:	ed82 0a00 	vstr	s0, [r2]
 800b74c:	ed90 0a00 	vldr	s0, [r0]
 800b750:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800b754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b758:	f2c0 80be 	blt.w	800b8d8 <SVM+0x1e8>
 800b75c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800b760:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b768:	f200 80b6 	bhi.w	800b8d8 <SVM+0x1e8>
 800b76c:	ed91 7a00 	vldr	s14, [r1]
 800b770:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b778:	f2c0 80ae 	blt.w	800b8d8 <SVM+0x1e8>
 800b77c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b780:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b784:	f200 80a8 	bhi.w	800b8d8 <SVM+0x1e8>
 800b788:	ed92 7a00 	vldr	s14, [r2]
 800b78c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b794:	f2c0 80a0 	blt.w	800b8d8 <SVM+0x1e8>
 800b798:	eeb4 7a67 	vcmp.f32	s14, s15
 800b79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7a0:	bf8c      	ite	hi
 800b7a2:	f04f 30ff 	movhi.w	r0, #4294967295	@ 0xffffffff
 800b7a6:	2000      	movls	r0, #0
 800b7a8:	4770      	bx	lr
 800b7aa:	eef1 6a67 	vneg.f32	s13, s15
 800b7ae:	eeb4 0ae6 	vcmpe.f32	s0, s13
 800b7b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7b6:	d5b7      	bpl.n	800b728 <SVM+0x38>
 800b7b8:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b7bc:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800b7c0:	ee30 7a07 	vadd.f32	s14, s0, s14
 800b7c4:	ee27 7a27 	vmul.f32	s14, s14, s15
 800b7c8:	ee77 0a20 	vadd.f32	s1, s14, s1
 800b7cc:	ed81 7a00 	vstr	s14, [r1]
 800b7d0:	ee30 0ac0 	vsub.f32	s0, s1, s0
 800b7d4:	edc2 0a00 	vstr	s1, [r2]
 800b7d8:	ed80 0a00 	vstr	s0, [r0]
 800b7dc:	e7b8      	b.n	800b750 <SVM+0x60>
 800b7de:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800b7e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7e6:	db55      	blt.n	800b894 <SVM+0x1a4>
 800b7e8:	eeb1 7a67 	vneg.f32	s14, s15
 800b7ec:	eeb4 0ac7 	vcmpe.f32	s0, s14
 800b7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7f4:	d531      	bpl.n	800b85a <SVM+0x16a>
 800b7f6:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 800b7fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b7fe:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800b802:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800b806:	ee70 6a27 	vadd.f32	s13, s0, s15
 800b80a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800b80e:	ee67 7a06 	vmul.f32	s15, s14, s12
 800b812:	ee37 7ae6 	vsub.f32	s14, s15, s13
 800b816:	edc2 7a00 	vstr	s15, [r2]
 800b81a:	ee30 0a07 	vadd.f32	s0, s0, s14
 800b81e:	ed80 7a00 	vstr	s14, [r0]
 800b822:	ed81 0a00 	vstr	s0, [r1]
 800b826:	ed90 0a00 	vldr	s0, [r0]
 800b82a:	e791      	b.n	800b750 <SVM+0x60>
 800b82c:	ee77 6ac0 	vsub.f32	s13, s15, s0
 800b830:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800b834:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b838:	ee30 0a67 	vsub.f32	s0, s0, s15
 800b83c:	ee67 7a06 	vmul.f32	s15, s14, s12
 800b840:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b844:	edc0 7a00 	vstr	s15, [r0]
 800b848:	ee70 0a20 	vadd.f32	s1, s0, s1
 800b84c:	ed81 0a00 	vstr	s0, [r1]
 800b850:	edc2 0a00 	vstr	s1, [r2]
 800b854:	ed90 0a00 	vldr	s0, [r0]
 800b858:	e77a      	b.n	800b750 <SVM+0x60>
 800b85a:	eddf 6a23 	vldr	s13, [pc, #140]	@ 800b8e8 <SVM+0x1f8>
 800b85e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b862:	eea0 7ae6 	vfms.f32	s14, s1, s13
 800b866:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b86a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800b86e:	ee77 7a40 	vsub.f32	s15, s14, s0
 800b872:	ee67 7a86 	vmul.f32	s15, s15, s12
 800b876:	ee30 0a27 	vadd.f32	s0, s0, s15
 800b87a:	edc0 7a00 	vstr	s15, [r0]
 800b87e:	eef0 7a40 	vmov.f32	s15, s0
 800b882:	eee0 7aa6 	vfma.f32	s15, s1, s13
 800b886:	ed82 0a00 	vstr	s0, [r2]
 800b88a:	edc1 7a00 	vstr	s15, [r1]
 800b88e:	ed90 0a00 	vldr	s0, [r0]
 800b892:	e75d      	b.n	800b750 <SVM+0x60>
 800b894:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b89c:	d5ab      	bpl.n	800b7f6 <SVM+0x106>
 800b89e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b8a2:	eddf 6a11 	vldr	s13, [pc, #68]	@ 800b8e8 <SVM+0x1f8>
 800b8a6:	ee30 7a07 	vadd.f32	s14, s0, s14
 800b8aa:	ee37 0ac0 	vsub.f32	s0, s15, s0
 800b8ae:	eea0 7ae6 	vfms.f32	s14, s1, s13
 800b8b2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800b8b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b8ba:	ee67 7a86 	vmul.f32	s15, s15, s12
 800b8be:	eeb0 7a67 	vmov.f32	s14, s15
 800b8c2:	eea0 7aa6 	vfma.f32	s14, s1, s13
 800b8c6:	edc2 7a00 	vstr	s15, [r2]
 800b8ca:	ee30 0a07 	vadd.f32	s0, s0, s14
 800b8ce:	ed81 7a00 	vstr	s14, [r1]
 800b8d2:	ed80 0a00 	vstr	s0, [r0]
 800b8d6:	e73b      	b.n	800b750 <SVM+0x60>
 800b8d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800b8dc:	4770      	bx	lr
 800b8de:	bf00      	nop
 800b8e0:	3f13cd3a 	.word	0x3f13cd3a
 800b8e4:	3f93cd3a 	.word	0x3f93cd3a
 800b8e8:	bf93cd3a 	.word	0xbf93cd3a

0800b8ec <fast_atan2>:
 800b8ec:	eeb0 6ac0 	vabs.f32	s12, s0
 800b8f0:	eef0 6ae0 	vabs.f32	s13, s1
 800b8f4:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800b97c <fast_atan2+0x90>
 800b8f8:	ed9f 4a21 	vldr	s8, [pc, #132]	@ 800b980 <fast_atan2+0x94>
 800b8fc:	eddf 4a21 	vldr	s9, [pc, #132]	@ 800b984 <fast_atan2+0x98>
 800b900:	eeb4 6ae6 	vcmpe.f32	s12, s13
 800b904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b908:	bf4c      	ite	mi
 800b90a:	ee76 7aa7 	vaddmi.f32	s15, s13, s15
 800b90e:	ee76 7a27 	vaddpl.f32	s15, s12, s15
 800b912:	bfd4      	ite	le
 800b914:	eeb0 5a46 	vmovle.f32	s10, s12
 800b918:	eeb0 5a66 	vmovgt.f32	s10, s13
 800b91c:	eec5 5a27 	vdiv.f32	s11, s10, s15
 800b920:	eddf 7a19 	vldr	s15, [pc, #100]	@ 800b988 <fast_atan2+0x9c>
 800b924:	ee25 5aa5 	vmul.f32	s10, s11, s11
 800b928:	eeb0 7a40 	vmov.f32	s14, s0
 800b92c:	eee5 7a04 	vfma.f32	s15, s10, s8
 800b930:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 800b934:	eee7 4a85 	vfma.f32	s9, s15, s10
 800b938:	eef0 7a40 	vmov.f32	s15, s0
 800b93c:	eee4 7a85 	vfma.f32	s15, s9, s10
 800b940:	eeb4 6ae6 	vcmpe.f32	s12, s13
 800b944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b948:	ee27 0aa5 	vmul.f32	s0, s15, s11
 800b94c:	bfc8      	it	gt
 800b94e:	eddf 7a0f 	vldrgt	s15, [pc, #60]	@ 800b98c <fast_atan2+0xa0>
 800b952:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800b956:	bfc8      	it	gt
 800b958:	ee37 0ac0 	vsubgt.f32	s0, s15, s0
 800b95c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b960:	bf48      	it	mi
 800b962:	eddf 7a0b 	vldrmi	s15, [pc, #44]	@ 800b990 <fast_atan2+0xa4>
 800b966:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b96a:	bf48      	it	mi
 800b96c:	ee37 0ac0 	vsubmi.f32	s0, s15, s0
 800b970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b974:	bf48      	it	mi
 800b976:	eeb1 0a40 	vnegmi.f32	s0, s0
 800b97a:	4770      	bx	lr
 800b97c:	00800000 	.word	0x00800000
 800b980:	bd3e7316 	.word	0xbd3e7316
 800b984:	bea7be2c 	.word	0xbea7be2c
 800b988:	3e232344 	.word	0x3e232344
 800b98c:	3fc90fdb 	.word	0x3fc90fdb
 800b990:	40490fdb 	.word	0x40490fdb

0800b994 <horner_fma>:
 800b994:	eeb0 7a40 	vmov.f32	s14, s0
 800b998:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 800b9b8 <horner_fma+0x24>
 800b99c:	b151      	cbz	r1, 800b9b4 <horner_fma+0x20>
 800b99e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800b9a2:	ecf0 7a01 	vldmia	r0!, {s15}
 800b9a6:	eee7 7a00 	vfma.f32	s15, s14, s0
 800b9aa:	4288      	cmp	r0, r1
 800b9ac:	eeb0 0a67 	vmov.f32	s0, s15
 800b9b0:	d1f7      	bne.n	800b9a2 <horner_fma+0xe>
 800b9b2:	4770      	bx	lr
 800b9b4:	4770      	bx	lr
 800b9b6:	bf00      	nop
 800b9b8:	00000000 	.word	0x00000000

0800b9bc <mod>:
 800b9bc:	fb90 f3f1 	sdiv	r3, r0, r1
 800b9c0:	fb03 0011 	mls	r0, r3, r1, r0
 800b9c4:	2800      	cmp	r0, #0
 800b9c6:	bfb8      	it	lt
 800b9c8:	1840      	addlt	r0, r0, r1
 800b9ca:	4770      	bx	lr

0800b9cc <delay_us>:
 800b9cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b9d0:	4d0f      	ldr	r5, [pc, #60]	@ (800ba10 <delay_us+0x44>)
 800b9d2:	4680      	mov	r8, r0
 800b9d4:	f7fa fa02 	bl	8005ddc <HAL_GetTick>
 800b9d8:	6a6f      	ldr	r7, [r5, #36]	@ 0x24
 800b9da:	4604      	mov	r4, r0
 800b9dc:	f7fa f9fe 	bl	8005ddc <HAL_GetTick>
 800b9e0:	4284      	cmp	r4, r0
 800b9e2:	d1f7      	bne.n	800b9d4 <delay_us+0x8>
 800b9e4:	f44f 797a 	mov.w	r9, #1000	@ 0x3e8
 800b9e8:	4e09      	ldr	r6, [pc, #36]	@ (800ba10 <delay_us+0x44>)
 800b9ea:	fb09 7704 	mla	r7, r9, r4, r7
 800b9ee:	f7fa f9f5 	bl	8005ddc <HAL_GetTick>
 800b9f2:	6a75      	ldr	r5, [r6, #36]	@ 0x24
 800b9f4:	4604      	mov	r4, r0
 800b9f6:	f7fa f9f1 	bl	8005ddc <HAL_GetTick>
 800b9fa:	4284      	cmp	r4, r0
 800b9fc:	d1f7      	bne.n	800b9ee <delay_us+0x22>
 800b9fe:	1bed      	subs	r5, r5, r7
 800ba00:	fb09 5504 	mla	r5, r9, r4, r5
 800ba04:	4545      	cmp	r5, r8
 800ba06:	d201      	bcs.n	800ba0c <delay_us+0x40>
 800ba08:	bf00      	nop
 800ba0a:	e7f0      	b.n	800b9ee <delay_us+0x22>
 800ba0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ba10:	40002000 	.word	0x40002000

0800ba14 <our_arm_sin_f32>:
 800ba14:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800ba9c <our_arm_sin_f32+0x88>
 800ba18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ba1c:	ee60 7a27 	vmul.f32	s15, s0, s15
 800ba20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ba28:	d504      	bpl.n	800ba34 <our_arm_sin_f32+0x20>
 800ba2a:	ee17 3a10 	vmov	r3, s14
 800ba2e:	3b01      	subs	r3, #1
 800ba30:	ee07 3a10 	vmov	s14, r3
 800ba34:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ba38:	eddf 6a19 	vldr	s13, [pc, #100]	@ 800baa0 <our_arm_sin_f32+0x8c>
 800ba3c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800ba40:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ba44:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 800ba48:	ee17 3a10 	vmov	r3, s14
 800ba4c:	b29b      	uxth	r3, r3
 800ba4e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ba52:	d21a      	bcs.n	800ba8a <our_arm_sin_f32+0x76>
 800ba54:	ee07 3a10 	vmov	s14, r3
 800ba58:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 800ba5c:	1c59      	adds	r1, r3, #1
 800ba5e:	ee37 0ac7 	vsub.f32	s0, s15, s14
 800ba62:	4a10      	ldr	r2, [pc, #64]	@ (800baa4 <our_arm_sin_f32+0x90>)
 800ba64:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800ba68:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 800ba6c:	ee37 7a26 	vadd.f32	s14, s14, s13
 800ba70:	edd1 6a00 	vldr	s13, [r1]
 800ba74:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800ba78:	ee37 7a67 	vsub.f32	s14, s14, s15
 800ba7c:	ee20 0a26 	vmul.f32	s0, s0, s13
 800ba80:	edd2 7a00 	vldr	s15, [r2]
 800ba84:	eea7 0a27 	vfma.f32	s0, s14, s15
 800ba88:	4770      	bx	lr
 800ba8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ba8e:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 800baa8 <our_arm_sin_f32+0x94>
 800ba92:	eeb0 0a67 	vmov.f32	s0, s15
 800ba96:	2101      	movs	r1, #1
 800ba98:	2300      	movs	r3, #0
 800ba9a:	e7e2      	b.n	800ba62 <our_arm_sin_f32+0x4e>
 800ba9c:	3e22f983 	.word	0x3e22f983
 800baa0:	44000000 	.word	0x44000000
 800baa4:	08036f88 	.word	0x08036f88
 800baa8:	00000000 	.word	0x00000000

0800baac <our_arm_cos_f32>:
 800baac:	ed9f 7a23 	vldr	s14, [pc, #140]	@ 800bb3c <our_arm_cos_f32+0x90>
 800bab0:	eddf 6a23 	vldr	s13, [pc, #140]	@ 800bb40 <our_arm_cos_f32+0x94>
 800bab4:	eef5 7a00 	vmov.f32	s15, #80	@ 0x3e800000  0.250
 800bab8:	eee0 7a07 	vfma.f32	s15, s0, s14
 800babc:	eeb4 0ae6 	vcmpe.f32	s0, s13
 800bac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bac4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800bac8:	d504      	bpl.n	800bad4 <our_arm_cos_f32+0x28>
 800baca:	ee17 3a10 	vmov	r3, s14
 800bace:	3b01      	subs	r3, #1
 800bad0:	ee07 3a10 	vmov	s14, r3
 800bad4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800bad8:	eddf 6a1a 	vldr	s13, [pc, #104]	@ 800bb44 <our_arm_cos_f32+0x98>
 800badc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800bae0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800bae4:	eebc 7ae7 	vcvt.u32.f32	s14, s15
 800bae8:	ee17 3a10 	vmov	r3, s14
 800baec:	b29b      	uxth	r3, r3
 800baee:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800baf2:	d21a      	bcs.n	800bb2a <our_arm_cos_f32+0x7e>
 800baf4:	ee07 3a10 	vmov	s14, r3
 800baf8:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 800bafc:	1c59      	adds	r1, r3, #1
 800bafe:	ee37 0ac7 	vsub.f32	s0, s15, s14
 800bb02:	4a11      	ldr	r2, [pc, #68]	@ (800bb48 <our_arm_cos_f32+0x9c>)
 800bb04:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800bb08:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 800bb0c:	ee37 7a26 	vadd.f32	s14, s14, s13
 800bb10:	edd1 6a00 	vldr	s13, [r1]
 800bb14:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800bb18:	ee37 7a67 	vsub.f32	s14, s14, s15
 800bb1c:	ee20 0a26 	vmul.f32	s0, s0, s13
 800bb20:	edd2 7a00 	vldr	s15, [r2]
 800bb24:	eea7 0a27 	vfma.f32	s0, s14, s15
 800bb28:	4770      	bx	lr
 800bb2a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800bb2e:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 800bb4c <our_arm_cos_f32+0xa0>
 800bb32:	eeb0 0a67 	vmov.f32	s0, s15
 800bb36:	2101      	movs	r1, #1
 800bb38:	2300      	movs	r3, #0
 800bb3a:	e7e2      	b.n	800bb02 <our_arm_cos_f32+0x56>
 800bb3c:	3e22f983 	.word	0x3e22f983
 800bb40:	bfc90fdb 	.word	0xbfc90fdb
 800bb44:	44000000 	.word	0x44000000
 800bb48:	08036f88 	.word	0x08036f88
 800bb4c:	00000000 	.word	0x00000000

0800bb50 <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>:
 800bb50:	8803      	ldrh	r3, [r0, #0]
 800bb52:	4319      	orrs	r1, r3
 800bb54:	8001      	strh	r1, [r0, #0]
 800bb56:	4770      	bx	lr

0800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>:
 800bb58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb5c:	4e26      	ldr	r6, [pc, #152]	@ (800bbf8 <low_level_fault(ODriveIntf::MotorIntf::Error)+0xa0>)
 800bb5e:	4607      	mov	r7, r0
 800bb60:	4632      	mov	r2, r6
 800bb62:	f106 0808 	add.w	r8, r6, #8
 800bb66:	2400      	movs	r4, #0
 800bb68:	6813      	ldr	r3, [r2, #0]
 800bb6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb6c:	f3ef 8110 	mrs	r1, PRIMASK
 800bb70:	b672      	cpsid	i
 800bb72:	6818      	ldr	r0, [r3, #0]
 800bb74:	f883 4066 	strb.w	r4, [r3, #102]	@ 0x66
 800bb78:	6803      	ldr	r3, [r0, #0]
 800bb7a:	681d      	ldr	r5, [r3, #0]
 800bb7c:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 800bb7e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bb82:	646b      	str	r3, [r5, #68]	@ 0x44
 800bb84:	f381 8810 	msr	PRIMASK, r1
 800bb88:	f852 3b04 	ldr.w	r3, [r2], #4
 800bb8c:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800bb8e:	4639      	mov	r1, r7
 800bb90:	3064      	adds	r0, #100	@ 0x64
 800bb92:	f7ff ffdd 	bl	800bb50 <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800bb96:	4590      	cmp	r8, r2
 800bb98:	d1e6      	bne.n	800bb68 <low_level_fault(ODriveIntf::MotorIntf::Error)+0x10>
 800bb9a:	f3ef 8110 	mrs	r1, PRIMASK
 800bb9e:	b672      	cpsid	i
 800bba0:	4b16      	ldr	r3, [pc, #88]	@ (800bbfc <low_level_fault(ODriveIntf::MotorIntf::Error)+0xa4>)
 800bba2:	4a17      	ldr	r2, [pc, #92]	@ (800bc00 <low_level_fault(ODriveIntf::MotorIntf::Error)+0xa8>)
 800bba4:	701c      	strb	r4, [r3, #0]
 800bba6:	6812      	ldr	r2, [r2, #0]
 800bba8:	6833      	ldr	r3, [r6, #0]
 800bbaa:	63d4      	str	r4, [r2, #60]	@ 0x3c
 800bbac:	f241 0001 	movw	r0, #4097	@ 0x1001
 800bbb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bbb2:	6410      	str	r0, [r2, #64]	@ 0x40
 800bbb4:	f3ef 8010 	mrs	r0, PRIMASK
 800bbb8:	b672      	cpsid	i
 800bbba:	f883 4066 	strb.w	r4, [r3, #102]	@ 0x66
 800bbbe:	681b      	ldr	r3, [r3, #0]
 800bbc0:	681b      	ldr	r3, [r3, #0]
 800bbc2:	681a      	ldr	r2, [r3, #0]
 800bbc4:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 800bbc6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bbca:	6453      	str	r3, [r2, #68]	@ 0x44
 800bbcc:	f380 8810 	msr	PRIMASK, r0
 800bbd0:	6873      	ldr	r3, [r6, #4]
 800bbd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bbd4:	f3ef 8010 	mrs	r0, PRIMASK
 800bbd8:	b672      	cpsid	i
 800bbda:	681a      	ldr	r2, [r3, #0]
 800bbdc:	f883 4066 	strb.w	r4, [r3, #102]	@ 0x66
 800bbe0:	6813      	ldr	r3, [r2, #0]
 800bbe2:	681a      	ldr	r2, [r3, #0]
 800bbe4:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 800bbe6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bbea:	6453      	str	r3, [r2, #68]	@ 0x44
 800bbec:	f380 8810 	msr	PRIMASK, r0
 800bbf0:	f381 8810 	msr	PRIMASK, r1
 800bbf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbf8:	200019cc 	.word	0x200019cc
 800bbfc:	2000182d 	.word	0x2000182d
 800bc00:	2000077c 	.word	0x2000077c

0800bc04 <safety_critical_arm_motor_pwm>:
 800bc04:	f3ef 8310 	mrs	r3, PRIMASK
 800bc08:	b672      	cpsid	i
 800bc0a:	4a04      	ldr	r2, [pc, #16]	@ (800bc1c <safety_critical_arm_motor_pwm+0x18>)
 800bc0c:	7812      	ldrb	r2, [r2, #0]
 800bc0e:	b112      	cbz	r2, 800bc16 <safety_critical_arm_motor_pwm+0x12>
 800bc10:	2201      	movs	r2, #1
 800bc12:	f880 2066 	strb.w	r2, [r0, #102]	@ 0x66
 800bc16:	f383 8810 	msr	PRIMASK, r3
 800bc1a:	4770      	bx	lr
 800bc1c:	2000182d 	.word	0x2000182d

0800bc20 <safety_critical_disarm_motor_pwm>:
 800bc20:	f3ef 8c10 	mrs	ip, PRIMASK
 800bc24:	b672      	cpsid	i
 800bc26:	6802      	ldr	r2, [r0, #0]
 800bc28:	f890 3066 	ldrb.w	r3, [r0, #102]	@ 0x66
 800bc2c:	6811      	ldr	r1, [r2, #0]
 800bc2e:	6809      	ldr	r1, [r1, #0]
 800bc30:	2200      	movs	r2, #0
 800bc32:	f880 2066 	strb.w	r2, [r0, #102]	@ 0x66
 800bc36:	6c4a      	ldr	r2, [r1, #68]	@ 0x44
 800bc38:	1e18      	subs	r0, r3, #0
 800bc3a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800bc3e:	bf18      	it	ne
 800bc40:	2001      	movne	r0, #1
 800bc42:	644a      	str	r2, [r1, #68]	@ 0x44
 800bc44:	f38c 8810 	msr	PRIMASK, ip
 800bc48:	4770      	bx	lr
 800bc4a:	bf00      	nop

0800bc4c <safety_critical_apply_motor_pwm_timings>:
 800bc4c:	b410      	push	{r4}
 800bc4e:	f3ef 8c10 	mrs	ip, PRIMASK
 800bc52:	b672      	cpsid	i
 800bc54:	4b25      	ldr	r3, [pc, #148]	@ (800bcec <safety_critical_apply_motor_pwm_timings+0xa0>)
 800bc56:	781b      	ldrb	r3, [r3, #0]
 800bc58:	b9f3      	cbnz	r3, 800bc98 <safety_critical_apply_motor_pwm_timings+0x4c>
 800bc5a:	6802      	ldr	r2, [r0, #0]
 800bc5c:	f880 3066 	strb.w	r3, [r0, #102]	@ 0x66
 800bc60:	6813      	ldr	r3, [r2, #0]
 800bc62:	880a      	ldrh	r2, [r1, #0]
 800bc64:	681b      	ldr	r3, [r3, #0]
 800bc66:	884c      	ldrh	r4, [r1, #2]
 800bc68:	635a      	str	r2, [r3, #52]	@ 0x34
 800bc6a:	888a      	ldrh	r2, [r1, #4]
 800bc6c:	639c      	str	r4, [r3, #56]	@ 0x38
 800bc6e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800bc70:	f3ef 8110 	mrs	r1, PRIMASK
 800bc74:	b672      	cpsid	i
 800bc76:	6803      	ldr	r3, [r0, #0]
 800bc78:	681b      	ldr	r3, [r3, #0]
 800bc7a:	2200      	movs	r2, #0
 800bc7c:	f880 2066 	strb.w	r2, [r0, #102]	@ 0x66
 800bc80:	681a      	ldr	r2, [r3, #0]
 800bc82:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 800bc84:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bc88:	6453      	str	r3, [r2, #68]	@ 0x44
 800bc8a:	f381 8810 	msr	PRIMASK, r1
 800bc8e:	f38c 8810 	msr	PRIMASK, ip
 800bc92:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc96:	4770      	bx	lr
 800bc98:	6803      	ldr	r3, [r0, #0]
 800bc9a:	f890 2066 	ldrb.w	r2, [r0, #102]	@ 0x66
 800bc9e:	681b      	ldr	r3, [r3, #0]
 800bca0:	880c      	ldrh	r4, [r1, #0]
 800bca2:	681b      	ldr	r3, [r3, #0]
 800bca4:	2a01      	cmp	r2, #1
 800bca6:	635c      	str	r4, [r3, #52]	@ 0x34
 800bca8:	884c      	ldrh	r4, [r1, #2]
 800bcaa:	8889      	ldrh	r1, [r1, #4]
 800bcac:	639c      	str	r4, [r3, #56]	@ 0x38
 800bcae:	63d9      	str	r1, [r3, #60]	@ 0x3c
 800bcb0:	d00d      	beq.n	800bcce <safety_critical_apply_motor_pwm_timings+0x82>
 800bcb2:	2a02      	cmp	r2, #2
 800bcb4:	d113      	bne.n	800bcde <safety_critical_apply_motor_pwm_timings+0x92>
 800bcb6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800bcb8:	2103      	movs	r1, #3
 800bcba:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800bcbe:	f880 1066 	strb.w	r1, [r0, #102]	@ 0x66
 800bcc2:	645a      	str	r2, [r3, #68]	@ 0x44
 800bcc4:	f38c 8810 	msr	PRIMASK, ip
 800bcc8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bccc:	4770      	bx	lr
 800bcce:	2302      	movs	r3, #2
 800bcd0:	f880 3066 	strb.w	r3, [r0, #102]	@ 0x66
 800bcd4:	f38c 8810 	msr	PRIMASK, ip
 800bcd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bcdc:	4770      	bx	lr
 800bcde:	2a03      	cmp	r2, #3
 800bce0:	d1c6      	bne.n	800bc70 <safety_critical_apply_motor_pwm_timings+0x24>
 800bce2:	f38c 8810 	msr	PRIMASK, ip
 800bce6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bcea:	4770      	bx	lr
 800bcec:	2000182d 	.word	0x2000182d

0800bcf0 <safety_critical_disarm_brake_resistor>:
 800bcf0:	b510      	push	{r4, lr}
 800bcf2:	f3ef 8c10 	mrs	ip, PRIMASK
 800bcf6:	b672      	cpsid	i
 800bcf8:	4b16      	ldr	r3, [pc, #88]	@ (800bd54 <safety_critical_disarm_brake_resistor+0x64>)
 800bcfa:	4917      	ldr	r1, [pc, #92]	@ (800bd58 <safety_critical_disarm_brake_resistor+0x68>)
 800bcfc:	4a17      	ldr	r2, [pc, #92]	@ (800bd5c <safety_critical_disarm_brake_resistor+0x6c>)
 800bcfe:	6818      	ldr	r0, [r3, #0]
 800bd00:	2300      	movs	r3, #0
 800bd02:	7013      	strb	r3, [r2, #0]
 800bd04:	680a      	ldr	r2, [r1, #0]
 800bd06:	63c3      	str	r3, [r0, #60]	@ 0x3c
 800bd08:	f241 0401 	movw	r4, #4097	@ 0x1001
 800bd0c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800bd0e:	6404      	str	r4, [r0, #64]	@ 0x40
 800bd10:	f3ef 8e10 	mrs	lr, PRIMASK
 800bd14:	b672      	cpsid	i
 800bd16:	f882 3066 	strb.w	r3, [r2, #102]	@ 0x66
 800bd1a:	6812      	ldr	r2, [r2, #0]
 800bd1c:	6812      	ldr	r2, [r2, #0]
 800bd1e:	6810      	ldr	r0, [r2, #0]
 800bd20:	6c42      	ldr	r2, [r0, #68]	@ 0x44
 800bd22:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800bd26:	6442      	str	r2, [r0, #68]	@ 0x44
 800bd28:	f38e 8810 	msr	PRIMASK, lr
 800bd2c:	684a      	ldr	r2, [r1, #4]
 800bd2e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800bd30:	f3ef 8110 	mrs	r1, PRIMASK
 800bd34:	b672      	cpsid	i
 800bd36:	6810      	ldr	r0, [r2, #0]
 800bd38:	f882 3066 	strb.w	r3, [r2, #102]	@ 0x66
 800bd3c:	6803      	ldr	r3, [r0, #0]
 800bd3e:	681a      	ldr	r2, [r3, #0]
 800bd40:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 800bd42:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bd46:	6453      	str	r3, [r2, #68]	@ 0x44
 800bd48:	f381 8810 	msr	PRIMASK, r1
 800bd4c:	f38c 8810 	msr	PRIMASK, ip
 800bd50:	bd10      	pop	{r4, pc}
 800bd52:	bf00      	nop
 800bd54:	2000077c 	.word	0x2000077c
 800bd58:	200019cc 	.word	0x200019cc
 800bd5c:	2000182d 	.word	0x2000182d

0800bd60 <start_pwm>:
 800bd60:	6803      	ldr	r3, [r0, #0]
 800bd62:	f240 62d6 	movw	r2, #1750	@ 0x6d6
 800bd66:	b510      	push	{r4, lr}
 800bd68:	2100      	movs	r1, #0
 800bd6a:	635a      	str	r2, [r3, #52]	@ 0x34
 800bd6c:	4604      	mov	r4, r0
 800bd6e:	639a      	str	r2, [r3, #56]	@ 0x38
 800bd70:	63da      	str	r2, [r3, #60]	@ 0x3c
 800bd72:	f7fd fb09 	bl	8009388 <HAL_TIM_PWM_Start>
 800bd76:	2100      	movs	r1, #0
 800bd78:	4620      	mov	r0, r4
 800bd7a:	f7f6 fe9b 	bl	8002ab4 <HAL_TIMEx_PWMN_Start>
 800bd7e:	2104      	movs	r1, #4
 800bd80:	4620      	mov	r0, r4
 800bd82:	f7fd fb01 	bl	8009388 <HAL_TIM_PWM_Start>
 800bd86:	2104      	movs	r1, #4
 800bd88:	4620      	mov	r0, r4
 800bd8a:	f7f6 fe93 	bl	8002ab4 <HAL_TIMEx_PWMN_Start>
 800bd8e:	2108      	movs	r1, #8
 800bd90:	4620      	mov	r0, r4
 800bd92:	f7fd faf9 	bl	8009388 <HAL_TIM_PWM_Start>
 800bd96:	2108      	movs	r1, #8
 800bd98:	4620      	mov	r0, r4
 800bd9a:	f7f6 fe8b 	bl	8002ab4 <HAL_TIMEx_PWMN_Start>
 800bd9e:	6823      	ldr	r3, [r4, #0]
 800bda0:	2201      	movs	r2, #1
 800bda2:	4620      	mov	r0, r4
 800bda4:	210c      	movs	r1, #12
 800bda6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdaa:	641a      	str	r2, [r3, #64]	@ 0x40
 800bdac:	f7fd bb0c 	b.w	80093c8 <HAL_TIM_PWM_Start_IT>

0800bdb0 <sync_timers>:
 800bdb0:	6800      	ldr	r0, [r0, #0]
 800bdb2:	6809      	ldr	r1, [r1, #0]
 800bdb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdb8:	461e      	mov	r6, r3
 800bdba:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800bdbc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800bdc0:	f403 4e00 	and.w	lr, r3, #32768	@ 0x8000
 800bdc4:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
 800bdc6:	6847      	ldr	r7, [r0, #4]
 800bdc8:	f403 4c00 	and.w	ip, r3, #32768	@ 0x8000
 800bdcc:	688b      	ldr	r3, [r1, #8]
 800bdce:	6c44      	ldr	r4, [r0, #68]	@ 0x44
 800bdd0:	f424 4400 	bic.w	r4, r4, #32768	@ 0x8000
 800bdd4:	6444      	str	r4, [r0, #68]	@ 0x44
 800bdd6:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 800bdd8:	f424 4400 	bic.w	r4, r4, #32768	@ 0x8000
 800bddc:	644c      	str	r4, [r1, #68]	@ 0x44
 800bdde:	6804      	ldr	r4, [r0, #0]
 800bde0:	f024 0401 	bic.w	r4, r4, #1
 800bde4:	6004      	str	r4, [r0, #0]
 800bde6:	680c      	ldr	r4, [r1, #0]
 800bde8:	f024 0401 	bic.w	r4, r4, #1
 800bdec:	600c      	str	r4, [r1, #0]
 800bdee:	6844      	ldr	r4, [r0, #4]
 800bdf0:	f024 0470 	bic.w	r4, r4, #112	@ 0x70
 800bdf4:	6044      	str	r4, [r0, #4]
 800bdf6:	6844      	ldr	r4, [r0, #4]
 800bdf8:	f044 0410 	orr.w	r4, r4, #16
 800bdfc:	6044      	str	r4, [r0, #4]
 800bdfe:	688c      	ldr	r4, [r1, #8]
 800be00:	f024 0470 	bic.w	r4, r4, #112	@ 0x70
 800be04:	608c      	str	r4, [r1, #8]
 800be06:	688c      	ldr	r4, [r1, #8]
 800be08:	4322      	orrs	r2, r4
 800be0a:	608a      	str	r2, [r1, #8]
 800be0c:	688a      	ldr	r2, [r1, #8]
 800be0e:	f022 0207 	bic.w	r2, r2, #7
 800be12:	608a      	str	r2, [r1, #8]
 800be14:	688a      	ldr	r2, [r1, #8]
 800be16:	f042 0206 	orr.w	r2, r2, #6
 800be1a:	608a      	str	r2, [r1, #8]
 800be1c:	6805      	ldr	r5, [r0, #0]
 800be1e:	680c      	ldr	r4, [r1, #0]
 800be20:	6802      	ldr	r2, [r0, #0]
 800be22:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800be26:	6002      	str	r2, [r0, #0]
 800be28:	680a      	ldr	r2, [r1, #0]
 800be2a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 800be2e:	600a      	str	r2, [r1, #0]
 800be30:	6802      	ldr	r2, [r0, #0]
 800be32:	f022 0210 	bic.w	r2, r2, #16
 800be36:	6002      	str	r2, [r0, #0]
 800be38:	680a      	ldr	r2, [r1, #0]
 800be3a:	f022 0210 	bic.w	r2, r2, #16
 800be3e:	600a      	str	r2, [r1, #0]
 800be40:	6802      	ldr	r2, [r0, #0]
 800be42:	f005 0560 	and.w	r5, r5, #96	@ 0x60
 800be46:	4315      	orrs	r5, r2
 800be48:	6005      	str	r5, [r0, #0]
 800be4a:	680a      	ldr	r2, [r1, #0]
 800be4c:	f004 0460 	and.w	r4, r4, #96	@ 0x60
 800be50:	4314      	orrs	r4, r2
 800be52:	2200      	movs	r2, #0
 800be54:	600c      	str	r4, [r1, #0]
 800be56:	6246      	str	r6, [r0, #36]	@ 0x24
 800be58:	624a      	str	r2, [r1, #36]	@ 0x24
 800be5a:	f1b8 0f00 	cmp.w	r8, #0
 800be5e:	d006      	beq.n	800be6e <sync_timers+0xbe>
 800be60:	f8d8 2000 	ldr.w	r2, [r8]
 800be64:	6256      	str	r6, [r2, #36]	@ 0x24
 800be66:	6814      	ldr	r4, [r2, #0]
 800be68:	f044 0401 	orr.w	r4, r4, #1
 800be6c:	6014      	str	r4, [r2, #0]
 800be6e:	6804      	ldr	r4, [r0, #0]
 800be70:	b29b      	uxth	r3, r3
 800be72:	b2bf      	uxth	r7, r7
 800be74:	f044 0401 	orr.w	r4, r4, #1
 800be78:	6004      	str	r4, [r0, #0]
 800be7a:	6047      	str	r7, [r0, #4]
 800be7c:	608b      	str	r3, [r1, #8]
 800be7e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800be80:	ea4e 0303 	orr.w	r3, lr, r3
 800be84:	6443      	str	r3, [r0, #68]	@ 0x44
 800be86:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
 800be88:	ea4c 0303 	orr.w	r3, ip, r3
 800be8c:	644b      	str	r3, [r1, #68]	@ 0x44
 800be8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be92:	bf00      	nop

0800be94 <start_adc_pwm>:
 800be94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be96:	4c4d      	ldr	r4, [pc, #308]	@ (800bfcc <start_adc_pwm+0x138>)
 800be98:	4e4d      	ldr	r6, [pc, #308]	@ (800bfd0 <start_adc_pwm+0x13c>)
 800be9a:	6821      	ldr	r1, [r4, #0]
 800be9c:	6832      	ldr	r2, [r6, #0]
 800be9e:	688b      	ldr	r3, [r1, #8]
 800bea0:	4d4c      	ldr	r5, [pc, #304]	@ (800bfd4 <start_adc_pwm+0x140>)
 800bea2:	4f4d      	ldr	r7, [pc, #308]	@ (800bfd8 <start_adc_pwm+0x144>)
 800bea4:	f043 0301 	orr.w	r3, r3, #1
 800bea8:	b083      	sub	sp, #12
 800beaa:	608b      	str	r3, [r1, #8]
 800beac:	6893      	ldr	r3, [r2, #8]
 800beae:	f043 0301 	orr.w	r3, r3, #1
 800beb2:	6093      	str	r3, [r2, #8]
 800beb4:	682a      	ldr	r2, [r5, #0]
 800beb6:	6893      	ldr	r3, [r2, #8]
 800beb8:	f043 0301 	orr.w	r3, r3, #1
 800bebc:	6093      	str	r3, [r2, #8]
 800bebe:	2002      	movs	r0, #2
 800bec0:	f7fb fdb2 	bl	8007a28 <osDelay>
 800bec4:	6824      	ldr	r4, [r4, #0]
 800bec6:	6831      	ldr	r1, [r6, #0]
 800bec8:	6860      	ldr	r0, [r4, #4]
 800beca:	682a      	ldr	r2, [r5, #0]
 800becc:	4b43      	ldr	r3, [pc, #268]	@ (800bfdc <start_adc_pwm+0x148>)
 800bece:	4e44      	ldr	r6, [pc, #272]	@ (800bfe0 <start_adc_pwm+0x14c>)
 800bed0:	4d44      	ldr	r5, [pc, #272]	@ (800bfe4 <start_adc_pwm+0x150>)
 800bed2:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 800bed6:	6060      	str	r0, [r4, #4]
 800bed8:	6848      	ldr	r0, [r1, #4]
 800beda:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 800bede:	6048      	str	r0, [r1, #4]
 800bee0:	6850      	ldr	r0, [r2, #4]
 800bee2:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
 800bee6:	6050      	str	r0, [r2, #4]
 800bee8:	6848      	ldr	r0, [r1, #4]
 800beea:	f040 0020 	orr.w	r0, r0, #32
 800beee:	6048      	str	r0, [r1, #4]
 800bef0:	6851      	ldr	r1, [r2, #4]
 800bef2:	f041 0120 	orr.w	r1, r1, #32
 800bef6:	6051      	str	r1, [r2, #4]
 800bef8:	68da      	ldr	r2, [r3, #12]
 800befa:	f042 0201 	orr.w	r2, r2, #1
 800befe:	60da      	str	r2, [r3, #12]
 800bf00:	68da      	ldr	r2, [r3, #12]
 800bf02:	f042 0202 	orr.w	r2, r2, #2
 800bf06:	60da      	str	r2, [r3, #12]
 800bf08:	689a      	ldr	r2, [r3, #8]
 800bf0a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800bf0e:	609a      	str	r2, [r3, #8]
 800bf10:	4638      	mov	r0, r7
 800bf12:	f7ff ff25 	bl	800bd60 <start_pwm>
 800bf16:	4630      	mov	r0, r6
 800bf18:	f7ff ff22 	bl	800bd60 <start_pwm>
 800bf1c:	4a32      	ldr	r2, [pc, #200]	@ (800bfe8 <start_adc_pwm+0x154>)
 800bf1e:	9200      	str	r2, [sp, #0]
 800bf20:	4631      	mov	r1, r6
 800bf22:	4638      	mov	r0, r7
 800bf24:	f240 6356 	movw	r3, #1622	@ 0x656
 800bf28:	2200      	movs	r2, #0
 800bf2a:	f7ff ff41 	bl	800bdb0 <sync_timers>
 800bf2e:	683a      	ldr	r2, [r7, #0]
 800bf30:	6833      	ldr	r3, [r6, #0]
 800bf32:	6c51      	ldr	r1, [r2, #68]	@ 0x44
 800bf34:	6828      	ldr	r0, [r5, #0]
 800bf36:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
 800bf3a:	6451      	str	r1, [r2, #68]	@ 0x44
 800bf3c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800bf3e:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
 800bf42:	6459      	str	r1, [r3, #68]	@ 0x44
 800bf44:	68d1      	ldr	r1, [r2, #12]
 800bf46:	f041 0101 	orr.w	r1, r1, #1
 800bf4a:	60d1      	str	r1, [r2, #12]
 800bf4c:	68da      	ldr	r2, [r3, #12]
 800bf4e:	2400      	movs	r4, #0
 800bf50:	f042 0201 	orr.w	r2, r2, #1
 800bf54:	f241 0601 	movw	r6, #4097	@ 0x1001
 800bf58:	60da      	str	r2, [r3, #12]
 800bf5a:	2108      	movs	r1, #8
 800bf5c:	63c4      	str	r4, [r0, #60]	@ 0x3c
 800bf5e:	6406      	str	r6, [r0, #64]	@ 0x40
 800bf60:	4628      	mov	r0, r5
 800bf62:	f7fd fa11 	bl	8009388 <HAL_TIM_PWM_Start>
 800bf66:	210c      	movs	r1, #12
 800bf68:	4628      	mov	r0, r5
 800bf6a:	f7fd fa0d 	bl	8009388 <HAL_TIM_PWM_Start>
 800bf6e:	4a1f      	ldr	r2, [pc, #124]	@ (800bfec <start_adc_pwm+0x158>)
 800bf70:	6813      	ldr	r3, [r2, #0]
 800bf72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bf74:	f3ef 8010 	mrs	r0, PRIMASK
 800bf78:	b672      	cpsid	i
 800bf7a:	f883 4066 	strb.w	r4, [r3, #102]	@ 0x66
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	681b      	ldr	r3, [r3, #0]
 800bf82:	6819      	ldr	r1, [r3, #0]
 800bf84:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
 800bf86:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bf8a:	644b      	str	r3, [r1, #68]	@ 0x44
 800bf8c:	f380 8810 	msr	PRIMASK, r0
 800bf90:	6853      	ldr	r3, [r2, #4]
 800bf92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bf94:	f3ef 8110 	mrs	r1, PRIMASK
 800bf98:	b672      	cpsid	i
 800bf9a:	f883 4066 	strb.w	r4, [r3, #102]	@ 0x66
 800bf9e:	681b      	ldr	r3, [r3, #0]
 800bfa0:	681b      	ldr	r3, [r3, #0]
 800bfa2:	681a      	ldr	r2, [r3, #0]
 800bfa4:	6c53      	ldr	r3, [r2, #68]	@ 0x44
 800bfa6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800bfaa:	6453      	str	r3, [r2, #68]	@ 0x44
 800bfac:	f381 8810 	msr	PRIMASK, r1
 800bfb0:	f3ef 8210 	mrs	r2, PRIMASK
 800bfb4:	b672      	cpsid	i
 800bfb6:	682b      	ldr	r3, [r5, #0]
 800bfb8:	490d      	ldr	r1, [pc, #52]	@ (800bff0 <start_adc_pwm+0x15c>)
 800bfba:	63dc      	str	r4, [r3, #60]	@ 0x3c
 800bfbc:	641e      	str	r6, [r3, #64]	@ 0x40
 800bfbe:	2301      	movs	r3, #1
 800bfc0:	700b      	strb	r3, [r1, #0]
 800bfc2:	f382 8810 	msr	PRIMASK, r2
 800bfc6:	b003      	add	sp, #12
 800bfc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bfca:	bf00      	nop
 800bfcc:	20001028 	.word	0x20001028
 800bfd0:	20000fe0 	.word	0x20000fe0
 800bfd4:	20000f98 	.word	0x20000f98
 800bfd8:	200007b8 	.word	0x200007b8
 800bfdc:	e0042000 	.word	0xe0042000
 800bfe0:	2000068c 	.word	0x2000068c
 800bfe4:	2000077c 	.word	0x2000077c
 800bfe8:	20000650 	.word	0x20000650
 800bfec:	200019cc 	.word	0x200019cc
 800bff0:	2000182d 	.word	0x2000182d

0800bff4 <start_general_purpose_adc>:
 800bff4:	b530      	push	{r4, r5, lr}
 800bff6:	481e      	ldr	r0, [pc, #120]	@ (800c070 <start_general_purpose_adc+0x7c>)
 800bff8:	4d1e      	ldr	r5, [pc, #120]	@ (800c074 <start_general_purpose_adc+0x80>)
 800bffa:	491f      	ldr	r1, [pc, #124]	@ (800c078 <start_general_purpose_adc+0x84>)
 800bffc:	f44f 3480 	mov.w	r4, #65536	@ 0x10000
 800c000:	b085      	sub	sp, #20
 800c002:	2200      	movs	r2, #0
 800c004:	2301      	movs	r3, #1
 800c006:	e9c5 0400 	strd	r0, r4, [r5]
 800c00a:	62a9      	str	r1, [r5, #40]	@ 0x28
 800c00c:	4628      	mov	r0, r5
 800c00e:	2110      	movs	r1, #16
 800c010:	60aa      	str	r2, [r5, #8]
 800c012:	612b      	str	r3, [r5, #16]
 800c014:	61ab      	str	r3, [r5, #24]
 800c016:	622a      	str	r2, [r5, #32]
 800c018:	62ea      	str	r2, [r5, #44]	@ 0x2c
 800c01a:	60ea      	str	r2, [r5, #12]
 800c01c:	61e9      	str	r1, [r5, #28]
 800c01e:	632b      	str	r3, [r5, #48]	@ 0x30
 800c020:	616b      	str	r3, [r5, #20]
 800c022:	f7fd fe5b 	bl	8009cdc <HAL_ADC_Init>
 800c026:	b9e0      	cbnz	r0, 800c062 <start_general_purpose_adc+0x6e>
 800c028:	2301      	movs	r3, #1
 800c02a:	9302      	str	r3, [sp, #8]
 800c02c:	2400      	movs	r4, #0
 800c02e:	e001      	b.n	800c034 <start_general_purpose_adc+0x40>
 800c030:	2c10      	cmp	r4, #16
 800c032:	d00f      	beq.n	800c054 <start_general_purpose_adc+0x60>
 800c034:	9400      	str	r4, [sp, #0]
 800c036:	480f      	ldr	r0, [pc, #60]	@ (800c074 <start_general_purpose_adc+0x80>)
 800c038:	3401      	adds	r4, #1
 800c03a:	4669      	mov	r1, sp
 800c03c:	9401      	str	r4, [sp, #4]
 800c03e:	f7fd ffc3 	bl	8009fc8 <HAL_ADC_ConfigChannel>
 800c042:	2800      	cmp	r0, #0
 800c044:	d0f4      	beq.n	800c030 <start_general_purpose_adc+0x3c>
 800c046:	480d      	ldr	r0, [pc, #52]	@ (800c07c <start_general_purpose_adc+0x88>)
 800c048:	f44f 71b9 	mov.w	r1, #370	@ 0x172
 800c04c:	f7f7 fbd8 	bl	8003800 <_Error_Handler>
 800c050:	2c10      	cmp	r4, #16
 800c052:	d1ef      	bne.n	800c034 <start_general_purpose_adc+0x40>
 800c054:	490a      	ldr	r1, [pc, #40]	@ (800c080 <start_general_purpose_adc+0x8c>)
 800c056:	4807      	ldr	r0, [pc, #28]	@ (800c074 <start_general_purpose_adc+0x80>)
 800c058:	4622      	mov	r2, r4
 800c05a:	f7fd fee9 	bl	8009e30 <HAL_ADC_Start_DMA>
 800c05e:	b005      	add	sp, #20
 800c060:	bd30      	pop	{r4, r5, pc}
 800c062:	4806      	ldr	r0, [pc, #24]	@ (800c07c <start_general_purpose_adc+0x88>)
 800c064:	f240 1169 	movw	r1, #361	@ 0x169
 800c068:	f7f7 fbca 	bl	8003800 <_Error_Handler>
 800c06c:	e7dc      	b.n	800c028 <start_general_purpose_adc+0x34>
 800c06e:	bf00      	nop
 800c070:	40012000 	.word	0x40012000
 800c074:	20001028 	.word	0x20001028
 800c078:	0f000001 	.word	0x0f000001
 800c07c:	080296f4 	.word	0x080296f4
 800c080:	20001800 	.word	0x20001800

0800c084 <channel_from_gpio>:
 800c084:	4b64      	ldr	r3, [pc, #400]	@ (800c218 <channel_from_gpio+0x194>)
 800c086:	4298      	cmp	r0, r3
 800c088:	d011      	beq.n	800c0ae <channel_from_gpio+0x2a>
 800c08a:	4b64      	ldr	r3, [pc, #400]	@ (800c21c <channel_from_gpio+0x198>)
 800c08c:	4298      	cmp	r0, r3
 800c08e:	d005      	beq.n	800c09c <channel_from_gpio+0x18>
 800c090:	4b63      	ldr	r3, [pc, #396]	@ (800c220 <channel_from_gpio+0x19c>)
 800c092:	4298      	cmp	r0, r3
 800c094:	d056      	beq.n	800c144 <channel_from_gpio+0xc0>
 800c096:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800c09a:	4770      	bx	lr
 800c09c:	2901      	cmp	r1, #1
 800c09e:	f000 809f 	beq.w	800c1e0 <channel_from_gpio+0x15c>
 800c0a2:	2902      	cmp	r1, #2
 800c0a4:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800c0a8:	bf08      	it	eq
 800c0aa:	2009      	moveq	r0, #9
 800c0ac:	4770      	bx	lr
 800c0ae:	2920      	cmp	r1, #32
 800c0b0:	f200 808e 	bhi.w	800c1d0 <channel_from_gpio+0x14c>
 800c0b4:	2900      	cmp	r1, #0
 800c0b6:	d0ee      	beq.n	800c096 <channel_from_gpio+0x12>
 800c0b8:	3901      	subs	r1, #1
 800c0ba:	291f      	cmp	r1, #31
 800c0bc:	d8eb      	bhi.n	800c096 <channel_from_gpio+0x12>
 800c0be:	a301      	add	r3, pc, #4	@ (adr r3, 800c0c4 <channel_from_gpio+0x40>)
 800c0c0:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 800c0c4:	0800c211 	.word	0x0800c211
 800c0c8:	0800c20d 	.word	0x0800c20d
 800c0cc:	0800c097 	.word	0x0800c097
 800c0d0:	0800c209 	.word	0x0800c209
 800c0d4:	0800c097 	.word	0x0800c097
 800c0d8:	0800c097 	.word	0x0800c097
 800c0dc:	0800c097 	.word	0x0800c097
 800c0e0:	0800c205 	.word	0x0800c205
 800c0e4:	0800c097 	.word	0x0800c097
 800c0e8:	0800c097 	.word	0x0800c097
 800c0ec:	0800c097 	.word	0x0800c097
 800c0f0:	0800c097 	.word	0x0800c097
 800c0f4:	0800c097 	.word	0x0800c097
 800c0f8:	0800c097 	.word	0x0800c097
 800c0fc:	0800c097 	.word	0x0800c097
 800c100:	0800c201 	.word	0x0800c201
 800c104:	0800c097 	.word	0x0800c097
 800c108:	0800c097 	.word	0x0800c097
 800c10c:	0800c097 	.word	0x0800c097
 800c110:	0800c097 	.word	0x0800c097
 800c114:	0800c097 	.word	0x0800c097
 800c118:	0800c097 	.word	0x0800c097
 800c11c:	0800c097 	.word	0x0800c097
 800c120:	0800c097 	.word	0x0800c097
 800c124:	0800c097 	.word	0x0800c097
 800c128:	0800c097 	.word	0x0800c097
 800c12c:	0800c097 	.word	0x0800c097
 800c130:	0800c097 	.word	0x0800c097
 800c134:	0800c097 	.word	0x0800c097
 800c138:	0800c097 	.word	0x0800c097
 800c13c:	0800c097 	.word	0x0800c097
 800c140:	0800c1fd 	.word	0x0800c1fd
 800c144:	3901      	subs	r1, #1
 800c146:	291f      	cmp	r1, #31
 800c148:	d8a5      	bhi.n	800c096 <channel_from_gpio+0x12>
 800c14a:	a301      	add	r3, pc, #4	@ (adr r3, 800c150 <channel_from_gpio+0xcc>)
 800c14c:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 800c150:	0800c1f5 	.word	0x0800c1f5
 800c154:	0800c1f9 	.word	0x0800c1f9
 800c158:	0800c097 	.word	0x0800c097
 800c15c:	0800c1e5 	.word	0x0800c1e5
 800c160:	0800c097 	.word	0x0800c097
 800c164:	0800c097 	.word	0x0800c097
 800c168:	0800c097 	.word	0x0800c097
 800c16c:	0800c1e9 	.word	0x0800c1e9
 800c170:	0800c097 	.word	0x0800c097
 800c174:	0800c097 	.word	0x0800c097
 800c178:	0800c097 	.word	0x0800c097
 800c17c:	0800c097 	.word	0x0800c097
 800c180:	0800c097 	.word	0x0800c097
 800c184:	0800c097 	.word	0x0800c097
 800c188:	0800c097 	.word	0x0800c097
 800c18c:	0800c1ed 	.word	0x0800c1ed
 800c190:	0800c097 	.word	0x0800c097
 800c194:	0800c097 	.word	0x0800c097
 800c198:	0800c097 	.word	0x0800c097
 800c19c:	0800c097 	.word	0x0800c097
 800c1a0:	0800c097 	.word	0x0800c097
 800c1a4:	0800c097 	.word	0x0800c097
 800c1a8:	0800c097 	.word	0x0800c097
 800c1ac:	0800c097 	.word	0x0800c097
 800c1b0:	0800c097 	.word	0x0800c097
 800c1b4:	0800c097 	.word	0x0800c097
 800c1b8:	0800c097 	.word	0x0800c097
 800c1bc:	0800c097 	.word	0x0800c097
 800c1c0:	0800c097 	.word	0x0800c097
 800c1c4:	0800c097 	.word	0x0800c097
 800c1c8:	0800c097 	.word	0x0800c097
 800c1cc:	0800c1f1 	.word	0x0800c1f1
 800c1d0:	2940      	cmp	r1, #64	@ 0x40
 800c1d2:	d01f      	beq.n	800c214 <channel_from_gpio+0x190>
 800c1d4:	2980      	cmp	r1, #128	@ 0x80
 800c1d6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800c1da:	bf08      	it	eq
 800c1dc:	2007      	moveq	r0, #7
 800c1de:	4770      	bx	lr
 800c1e0:	2008      	movs	r0, #8
 800c1e2:	4770      	bx	lr
 800c1e4:	200c      	movs	r0, #12
 800c1e6:	4770      	bx	lr
 800c1e8:	200d      	movs	r0, #13
 800c1ea:	4770      	bx	lr
 800c1ec:	200e      	movs	r0, #14
 800c1ee:	4770      	bx	lr
 800c1f0:	200f      	movs	r0, #15
 800c1f2:	4770      	bx	lr
 800c1f4:	200a      	movs	r0, #10
 800c1f6:	4770      	bx	lr
 800c1f8:	200b      	movs	r0, #11
 800c1fa:	4770      	bx	lr
 800c1fc:	2005      	movs	r0, #5
 800c1fe:	4770      	bx	lr
 800c200:	2004      	movs	r0, #4
 800c202:	4770      	bx	lr
 800c204:	2003      	movs	r0, #3
 800c206:	4770      	bx	lr
 800c208:	2002      	movs	r0, #2
 800c20a:	4770      	bx	lr
 800c20c:	2001      	movs	r0, #1
 800c20e:	4770      	bx	lr
 800c210:	2000      	movs	r0, #0
 800c212:	4770      	bx	lr
 800c214:	2006      	movs	r0, #6
 800c216:	4770      	bx	lr
 800c218:	40020000 	.word	0x40020000
 800c21c:	40020400 	.word	0x40020400
 800c220:	40020800 	.word	0x40020800

0800c224 <get_adc_voltage>:
 800c224:	b508      	push	{r3, lr}
 800c226:	f7ff ff2d 	bl	800c084 <channel_from_gpio>
 800c22a:	280f      	cmp	r0, #15
 800c22c:	d80b      	bhi.n	800c246 <get_adc_voltage+0x22>
 800c22e:	4b07      	ldr	r3, [pc, #28]	@ (800c24c <get_adc_voltage+0x28>)
 800c230:	eddf 7a07 	vldr	s15, [pc, #28]	@ 800c250 <get_adc_voltage+0x2c>
 800c234:	f833 3010 	ldrh.w	r3, [r3, r0, lsl #1]
 800c238:	ee00 3a10 	vmov	s0, r3
 800c23c:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 800c240:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c244:	bd08      	pop	{r3, pc}
 800c246:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 800c254 <get_adc_voltage+0x30>
 800c24a:	bd08      	pop	{r3, pc}
 800c24c:	20001800 	.word	0x20001800
 800c250:	3a533333 	.word	0x3a533333
 800c254:	7fc00000 	.word	0x7fc00000

0800c258 <analog_polling_thread(void*)>:
 800c258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c25c:	f8df 80c8 	ldr.w	r8, [pc, #200]	@ 800c328 <analog_polling_thread(void*)+0xd0>
 800c260:	4f29      	ldr	r7, [pc, #164]	@ (800c308 <analog_polling_thread(void*)+0xb0>)
 800c262:	4e2a      	ldr	r6, [pc, #168]	@ (800c30c <analog_polling_thread(void*)+0xb4>)
 800c264:	ed2d 8b04 	vpush	{d8-d9}
 800c268:	ed9f 8a29 	vldr	s16, [pc, #164]	@ 800c310 <analog_polling_thread(void*)+0xb8>
 800c26c:	ed9f 9a29 	vldr	s18, [pc, #164]	@ 800c314 <analog_polling_thread(void*)+0xbc>
 800c270:	eddf 8a29 	vldr	s17, [pc, #164]	@ 800c318 <analog_polling_thread(void*)+0xc0>
 800c274:	4d29      	ldr	r5, [pc, #164]	@ (800c31c <analog_polling_thread(void*)+0xc4>)
 800c276:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800c27a:	e005      	b.n	800c288 <analog_polling_thread(void*)+0x30>
 800c27c:	3401      	adds	r4, #1
 800c27e:	b2a4      	uxth	r4, r4
 800c280:	2c07      	cmp	r4, #7
 800c282:	f105 050c 	add.w	r5, r5, #12
 800c286:	d02d      	beq.n	800c2e4 <analog_polling_thread(void*)+0x8c>
 800c288:	6828      	ldr	r0, [r5, #0]
 800c28a:	f007 ffe5 	bl	8014258 <fibre::is_endpoint_ref_valid(endpoint_ref_t)>
 800c28e:	2800      	cmp	r0, #0
 800c290:	d0f4      	beq.n	800c27c <analog_polling_thread(void*)+0x24>
 800c292:	f024 0302 	bic.w	r3, r4, #2
 800c296:	2b04      	cmp	r3, #4
 800c298:	d02b      	beq.n	800c2f2 <analog_polling_thread(void*)+0x9a>
 800c29a:	2c03      	cmp	r4, #3
 800c29c:	d02d      	beq.n	800c2fa <analog_polling_thread(void*)+0xa2>
 800c29e:	2c06      	cmp	r4, #6
 800c2a0:	d92e      	bls.n	800c300 <analog_polling_thread(void*)+0xa8>
 800c2a2:	481f      	ldr	r0, [pc, #124]	@ (800c320 <analog_polling_thread(void*)+0xc8>)
 800c2a4:	2101      	movs	r1, #1
 800c2a6:	f7ff feed 	bl	800c084 <channel_from_gpio>
 800c2aa:	280f      	cmp	r0, #15
 800c2ac:	d81e      	bhi.n	800c2ec <analog_polling_thread(void*)+0x94>
 800c2ae:	f837 3010 	ldrh.w	r3, [r7, r0, lsl #1]
 800c2b2:	ee07 3a10 	vmov	s14, r3
 800c2b6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 800c2ba:	ee27 7a28 	vmul.f32	s14, s14, s17
 800c2be:	ed95 0a01 	vldr	s0, [r5, #4]
 800c2c2:	edd5 7a02 	vldr	s15, [r5, #8]
 800c2c6:	6828      	ldr	r0, [r5, #0]
 800c2c8:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800c2cc:	3401      	adds	r4, #1
 800c2ce:	ee67 7a88 	vmul.f32	s15, s15, s16
 800c2d2:	b2a4      	uxth	r4, r4
 800c2d4:	eea7 0a87 	vfma.f32	s0, s15, s14
 800c2d8:	f007 ffd4 	bl	8014284 <fibre::set_endpoint_from_float(endpoint_ref_t, float)>
 800c2dc:	2c07      	cmp	r4, #7
 800c2de:	f105 050c 	add.w	r5, r5, #12
 800c2e2:	d1d1      	bne.n	800c288 <analog_polling_thread(void*)+0x30>
 800c2e4:	200a      	movs	r0, #10
 800c2e6:	f7fb fb9f 	bl	8007a28 <osDelay>
 800c2ea:	e7c3      	b.n	800c274 <analog_polling_thread(void*)+0x1c>
 800c2ec:	eeb0 7a49 	vmov.f32	s14, s18
 800c2f0:	e7e5      	b.n	800c2be <analog_polling_thread(void*)+0x66>
 800c2f2:	f838 1014 	ldrh.w	r1, [r8, r4, lsl #1]
 800c2f6:	4630      	mov	r0, r6
 800c2f8:	e7d5      	b.n	800c2a6 <analog_polling_thread(void*)+0x4e>
 800c2fa:	480a      	ldr	r0, [pc, #40]	@ (800c324 <analog_polling_thread(void*)+0xcc>)
 800c2fc:	2110      	movs	r1, #16
 800c2fe:	e7d2      	b.n	800c2a6 <analog_polling_thread(void*)+0x4e>
 800c300:	f838 1014 	ldrh.w	r1, [r8, r4, lsl #1]
 800c304:	4806      	ldr	r0, [pc, #24]	@ (800c320 <analog_polling_thread(void*)+0xc8>)
 800c306:	e7ce      	b.n	800c2a6 <analog_polling_thread(void*)+0x4e>
 800c308:	20001800 	.word	0x20001800
 800c30c:	40020400 	.word	0x40020400
 800c310:	3e9b26ca 	.word	0x3e9b26ca
 800c314:	7fc00000 	.word	0x7fc00000
 800c318:	3a533333 	.word	0x3a533333
 800c31c:	2000195c 	.word	0x2000195c
 800c320:	40020000 	.word	0x40020000
 800c324:	40020800 	.word	0x40020800
 800c328:	0802ac14 	.word	0x0802ac14

0800c32c <get_adc_voltage_channel>:
 800c32c:	280f      	cmp	r0, #15
 800c32e:	d80b      	bhi.n	800c348 <get_adc_voltage_channel+0x1c>
 800c330:	4b07      	ldr	r3, [pc, #28]	@ (800c350 <get_adc_voltage_channel+0x24>)
 800c332:	eddf 7a08 	vldr	s15, [pc, #32]	@ 800c354 <get_adc_voltage_channel+0x28>
 800c336:	f833 3010 	ldrh.w	r3, [r3, r0, lsl #1]
 800c33a:	ee00 3a10 	vmov	s0, r3
 800c33e:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 800c342:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c346:	4770      	bx	lr
 800c348:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 800c358 <get_adc_voltage_channel+0x2c>
 800c34c:	4770      	bx	lr
 800c34e:	bf00      	nop
 800c350:	20001800 	.word	0x20001800
 800c354:	3a533333 	.word	0x3a533333
 800c358:	7fc00000 	.word	0x7fc00000

0800c35c <vbus_sense_adc_cb>:
 800c35c:	b508      	push	{r3, lr}
 800c35e:	2101      	movs	r1, #1
 800c360:	f7fb fdc6 	bl	8007ef0 <HAL_ADCEx_InjectedGetValue>
 800c364:	ee07 0a90 	vmov	s15, r0
 800c368:	ed9f 7a04 	vldr	s14, [pc, #16]	@ 800c37c <vbus_sense_adc_cb+0x20>
 800c36c:	4b04      	ldr	r3, [pc, #16]	@ (800c380 <vbus_sense_adc_cb+0x24>)
 800c36e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c372:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c376:	edc3 7a00 	vstr	s15, [r3]
 800c37a:	bd08      	pop	{r3, pc}
 800c37c:	3c7acccd 	.word	0x3c7acccd
 800c380:	20000200 	.word	0x20000200

0800c384 <tim_update_cb>:
 800c384:	b538      	push	{r3, r4, r5, lr}
 800c386:	6803      	ldr	r3, [r0, #0]
 800c388:	681b      	ldr	r3, [r3, #0]
 800c38a:	f013 0310 	ands.w	r3, r3, #16
 800c38e:	d11a      	bne.n	800c3c6 <tim_update_cb+0x42>
 800c390:	4a12      	ldr	r2, [pc, #72]	@ (800c3dc <tim_update_cb+0x58>)
 800c392:	4290      	cmp	r0, r2
 800c394:	d018      	beq.n	800c3c8 <tim_update_cb+0x44>
 800c396:	4b12      	ldr	r3, [pc, #72]	@ (800c3e0 <tim_update_cb+0x5c>)
 800c398:	4298      	cmp	r0, r3
 800c39a:	d119      	bne.n	800c3d0 <tim_update_cb+0x4c>
 800c39c:	4b11      	ldr	r3, [pc, #68]	@ (800c3e4 <tim_update_cb+0x60>)
 800c39e:	685b      	ldr	r3, [r3, #4]
 800c3a0:	2401      	movs	r4, #1
 800c3a2:	6918      	ldr	r0, [r3, #16]
 800c3a4:	f003 fa00 	bl	800f7a8 <Encoder::sample_now()>
 800c3a8:	490f      	ldr	r1, [pc, #60]	@ (800c3e8 <tim_update_cb+0x64>)
 800c3aa:	4a10      	ldr	r2, [pc, #64]	@ (800c3ec <tim_update_cb+0x68>)
 800c3ac:	4810      	ldr	r0, [pc, #64]	@ (800c3f0 <tim_update_cb+0x6c>)
 800c3ae:	6915      	ldr	r5, [r2, #16]
 800c3b0:	eb04 0344 	add.w	r3, r4, r4, lsl #1
 800c3b4:	4c0f      	ldr	r4, [pc, #60]	@ (800c3f4 <tim_update_cb+0x70>)
 800c3b6:	f821 5013 	strh.w	r5, [r1, r3, lsl #1]
 800c3ba:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800c3be:	6921      	ldr	r1, [r4, #16]
 800c3c0:	6903      	ldr	r3, [r0, #16]
 800c3c2:	8093      	strh	r3, [r2, #4]
 800c3c4:	8051      	strh	r1, [r2, #2]
 800c3c6:	bd38      	pop	{r3, r4, r5, pc}
 800c3c8:	4a06      	ldr	r2, [pc, #24]	@ (800c3e4 <tim_update_cb+0x60>)
 800c3ca:	461c      	mov	r4, r3
 800c3cc:	6813      	ldr	r3, [r2, #0]
 800c3ce:	e7e8      	b.n	800c3a2 <tim_update_cb+0x1e>
 800c3d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c3d4:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800c3d8:	f7ff bbbe 	b.w	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c3dc:	200007b8 	.word	0x200007b8
 800c3e0:	2000068c 	.word	0x2000068c
 800c3e4:	200019cc 	.word	0x200019cc
 800c3e8:	20001820 	.word	0x20001820
 800c3ec:	40020000 	.word	0x40020000
 800c3f0:	40020800 	.word	0x40020800
 800c3f4:	40020400 	.word	0x40020400

0800c3f8 <update_brake_current>:
 800c3f8:	b538      	push	{r3, r4, r5, lr}
 800c3fa:	4b64      	ldr	r3, [pc, #400]	@ (800c58c <update_brake_current+0x194>)
 800c3fc:	4c64      	ldr	r4, [pc, #400]	@ (800c590 <update_brake_current+0x198>)
 800c3fe:	681a      	ldr	r2, [r3, #0]
 800c400:	685b      	ldr	r3, [r3, #4]
 800c402:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800c404:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c406:	f892 1066 	ldrb.w	r1, [r2, #102]	@ 0x66
 800c40a:	2903      	cmp	r1, #3
 800c40c:	ed2d 8b04 	vpush	{d8-d9}
 800c410:	bf08      	it	eq
 800c412:	edd2 8a23 	vldreq	s17, [r2, #140]	@ 0x8c
 800c416:	f893 2066 	ldrb.w	r2, [r3, #102]	@ 0x66
 800c41a:	bf18      	it	ne
 800c41c:	eddf 8a5d 	vldrne	s17, [pc, #372]	@ 800c594 <update_brake_current+0x19c>
 800c420:	edd4 9a27 	vldr	s19, [r4, #156]	@ 0x9c
 800c424:	2a03      	cmp	r2, #3
 800c426:	bf08      	it	eq
 800c428:	edd3 7a23 	vldreq	s15, [r3, #140]	@ 0x8c
 800c42c:	4b5a      	ldr	r3, [pc, #360]	@ (800c598 <update_brake_current+0x1a0>)
 800c42e:	bf08      	it	eq
 800c430:	ee78 8aa7 	vaddeq.f32	s17, s17, s15
 800c434:	edd4 7a26 	vldr	s15, [r4, #152]	@ 0x98
 800c438:	ed93 9a00 	vldr	s18, [r3]
 800c43c:	f894 30a8 	ldrb.w	r3, [r4, #168]	@ 0xa8
 800c440:	ee78 7aa7 	vadd.f32	s15, s17, s15
 800c444:	ee69 7ae7 	vnmul.f32	s15, s19, s15
 800c448:	ee87 8a89 	vdiv.f32	s16, s15, s18
 800c44c:	b16b      	cbz	r3, 800c46a <update_brake_current+0x72>
 800c44e:	eef5 9ac0 	vcmpe.f32	s19, #0.0
 800c452:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c456:	dd08      	ble.n	800c46a <update_brake_current+0x72>
 800c458:	ed94 7a2b 	vldr	s14, [r4, #172]	@ 0xac
 800c45c:	edd4 7a2c 	vldr	s15, [r4, #176]	@ 0xb0
 800c460:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c468:	d46e      	bmi.n	800c548 <update_brake_current+0x150>
 800c46a:	eeb4 8a48 	vcmp.f32	s16, s16
 800c46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c472:	f180 8083 	bvs.w	800c57c <update_brake_current+0x184>
 800c476:	eddf 7a49 	vldr	s15, [pc, #292]	@ 800c59c <update_brake_current+0x1a4>
 800c47a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800c47e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c482:	da4b      	bge.n	800c51c <update_brake_current+0x124>
 800c484:	eddf 7a43 	vldr	s15, [pc, #268]	@ 800c594 <update_brake_current+0x19c>
 800c488:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800c48c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c490:	bf48      	it	mi
 800c492:	eeb0 8a67 	vmovmi.f32	s16, s15
 800c496:	eeb4 8a67 	vcmp.f32	s16, s15
 800c49a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c49e:	d144      	bne.n	800c52a <update_brake_current+0x132>
 800c4a0:	4b3f      	ldr	r3, [pc, #252]	@ (800c5a0 <update_brake_current+0x1a8>)
 800c4a2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800c4a6:	edd3 7a00 	vldr	s15, [r3]
 800c4aa:	ed94 7a2d 	vldr	s14, [r4, #180]	@ 0xb4
 800c4ae:	ee78 6ae7 	vsub.f32	s13, s17, s15
 800c4b2:	eeb4 7ae8 	vcmpe.f32	s14, s17
 800c4b6:	eee6 7a26 	vfma.f32	s15, s12, s13
 800c4ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4be:	edc3 7a00 	vstr	s15, [r3]
 800c4c2:	d44e      	bmi.n	800c562 <update_brake_current+0x16a>
 800c4c4:	edd4 7a2e 	vldr	s15, [r4, #184]	@ 0xb8
 800c4c8:	eef4 7ae8 	vcmpe.f32	s15, s17
 800c4cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4d0:	dc32      	bgt.n	800c538 <update_brake_current+0x140>
 800c4d2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800c4d6:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800c4da:	eeb0 7a67 	vmov.f32	s14, s15
 800c4de:	eebe 7aca 	vcvt.s32.f32	s14, s14, #12
 800c4e2:	ee17 4a10 	vmov	r4, s14
 800c4e6:	f1a4 0528 	sub.w	r5, r4, #40	@ 0x28
 800c4ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c4ee:	1b63      	subs	r3, r4, r5
 800c4f0:	2b27      	cmp	r3, #39	@ 0x27
 800c4f2:	d93e      	bls.n	800c572 <update_brake_current+0x17a>
 800c4f4:	f3ef 8210 	mrs	r2, PRIMASK
 800c4f8:	b672      	cpsid	i
 800c4fa:	4b2a      	ldr	r3, [pc, #168]	@ (800c5a4 <update_brake_current+0x1ac>)
 800c4fc:	781b      	ldrb	r3, [r3, #0]
 800c4fe:	b143      	cbz	r3, 800c512 <update_brake_current+0x11a>
 800c500:	4b29      	ldr	r3, [pc, #164]	@ (800c5a8 <update_brake_current+0x1b0>)
 800c502:	681b      	ldr	r3, [r3, #0]
 800c504:	2100      	movs	r1, #0
 800c506:	63d9      	str	r1, [r3, #60]	@ 0x3c
 800c508:	f241 0101 	movw	r1, #4097	@ 0x1001
 800c50c:	6419      	str	r1, [r3, #64]	@ 0x40
 800c50e:	63dd      	str	r5, [r3, #60]	@ 0x3c
 800c510:	641c      	str	r4, [r3, #64]	@ 0x40
 800c512:	f382 8810 	msr	PRIMASK, r2
 800c516:	ecbd 8b04 	vpop	{d8-d9}
 800c51a:	bd38      	pop	{r3, r4, r5, pc}
 800c51c:	4b23      	ldr	r3, [pc, #140]	@ (800c5ac <update_brake_current+0x1b4>)
 800c51e:	f04f 0201 	mov.w	r2, #1
 800c522:	701a      	strb	r2, [r3, #0]
 800c524:	bfc8      	it	gt
 800c526:	eeb0 8a67 	vmovgt.f32	s16, s15
 800c52a:	ee29 9a08 	vmul.f32	s18, s18, s16
 800c52e:	eec9 7a29 	vdiv.f32	s15, s18, s19
 800c532:	ee78 8aa7 	vadd.f32	s17, s17, s15
 800c536:	e7b3      	b.n	800c4a0 <update_brake_current+0xa8>
 800c538:	ecbd 8b04 	vpop	{d8-d9}
 800c53c:	f44f 4080 	mov.w	r0, #16384	@ 0x4000
 800c540:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c544:	f7ff bb08 	b.w	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c548:	ee39 0a47 	vsub.f32	s0, s18, s14
 800c54c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800c550:	eddf 0a10 	vldr	s1, [pc, #64]	@ 800c594 <update_brake_current+0x19c>
 800c554:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800c558:	f016 fc6e 	bl	8022e38 <fmaxf>
 800c55c:	ee38 8a00 	vadd.f32	s16, s16, s0
 800c560:	e783      	b.n	800c46a <update_brake_current+0x72>
 800c562:	ecbd 8b04 	vpop	{d8-d9}
 800c566:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
 800c56a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c56e:	f7ff baf3 	b.w	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c572:	f44f 7080 	mov.w	r0, #256	@ 0x100
 800c576:	f7ff faef 	bl	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c57a:	e7bb      	b.n	800c4f4 <update_brake_current+0xfc>
 800c57c:	ecbd 8b04 	vpop	{d8-d9}
 800c580:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800c584:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c588:	f7ff bae6 	b.w	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c58c:	200019cc 	.word	0x200019cc
 800c590:	20001840 	.word	0x20001840
 800c594:	00000000 	.word	0x00000000
 800c598:	20000200 	.word	0x20000200
 800c59c:	3f733333 	.word	0x3f733333
 800c5a0:	20001830 	.word	0x20001830
 800c5a4:	2000182d 	.word	0x2000182d
 800c5a8:	2000077c 	.word	0x2000077c
 800c5ac:	2000182c 	.word	0x2000182c

0800c5b0 <pwm_trig_adc_cb>:
 800c5b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5b4:	f8df 820c 	ldr.w	r8, [pc, #524]	@ 800c7c4 <pwm_trig_adc_cb+0x214>
 800c5b8:	4540      	cmp	r0, r8
 800c5ba:	b087      	sub	sp, #28
 800c5bc:	4604      	mov	r4, r0
 800c5be:	460f      	mov	r7, r1
 800c5c0:	d002      	beq.n	800c5c8 <pwm_trig_adc_cb+0x18>
 800c5c2:	4b7d      	ldr	r3, [pc, #500]	@ (800c7b8 <pwm_trig_adc_cb+0x208>)
 800c5c4:	4298      	cmp	r0, r3
 800c5c6:	d171      	bne.n	800c6ac <pwm_trig_adc_cb+0xfc>
 800c5c8:	f8df a1fc 	ldr.w	sl, [pc, #508]	@ 800c7c8 <pwm_trig_adc_cb+0x218>
 800c5cc:	e9da 6b00 	ldrd	r6, fp, [sl]
 800c5d0:	2f00      	cmp	r7, #0
 800c5d2:	d168      	bne.n	800c6a6 <pwm_trig_adc_cb+0xf6>
 800c5d4:	465b      	mov	r3, fp
 800c5d6:	f04f 0901 	mov.w	r9, #1
 800c5da:	46b3      	mov	fp, r6
 800c5dc:	461e      	mov	r6, r3
 800c5de:	6a70      	ldr	r0, [r6, #36]	@ 0x24
 800c5e0:	6803      	ldr	r3, [r0, #0]
 800c5e2:	681b      	ldr	r3, [r3, #0]
 800c5e4:	681b      	ldr	r3, [r3, #0]
 800c5e6:	681d      	ldr	r5, [r3, #0]
 800c5e8:	f015 0510 	ands.w	r5, r5, #16
 800c5ec:	d164      	bne.n	800c6b8 <pwm_trig_adc_cb+0x108>
 800c5ee:	2101      	movs	r1, #1
 800c5f0:	f001 ff8e 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800c5f4:	4544      	cmp	r4, r8
 800c5f6:	f000 808b 	beq.w	800c710 <pwm_trig_adc_cb+0x160>
 800c5fa:	2f00      	cmp	r7, #0
 800c5fc:	d06d      	beq.n	800c6da <pwm_trig_adc_cb+0x12a>
 800c5fe:	2101      	movs	r1, #1
 800c600:	4620      	mov	r0, r4
 800c602:	f7fb fc75 	bl	8007ef0 <HAL_ADCEx_InjectedGetValue>
 800c606:	4601      	mov	r1, r0
 800c608:	6a70      	ldr	r0, [r6, #36]	@ 0x24
 800c60a:	f001 ff8f 	bl	800e52c <Motor::phase_current_from_adcval(unsigned long)>
 800c60e:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 800c610:	2d00      	cmp	r5, #0
 800c612:	d16c      	bne.n	800c6ee <pwm_trig_adc_cb+0x13e>
 800c614:	4544      	cmp	r4, r8
 800c616:	f000 8084 	beq.w	800c722 <pwm_trig_adc_cb+0x172>
 800c61a:	6937      	ldr	r7, [r6, #16]
 800c61c:	4967      	ldr	r1, [pc, #412]	@ (800c7bc <pwm_trig_adc_cb+0x20c>)
 800c61e:	68ba      	ldr	r2, [r7, #8]
 800c620:	edd3 7a1d 	vldr	s15, [r3, #116]	@ 0x74
 800c624:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 800c7cc <pwm_trig_adc_cb+0x21c>
 800c628:	f8df e1a4 	ldr.w	lr, [pc, #420]	@ 800c7d0 <pwm_trig_adc_cb+0x220>
 800c62c:	f1c9 0900 	rsb	r9, r9, #0
 800c630:	f009 0906 	and.w	r9, r9, #6
 800c634:	4489      	add	r9, r1
 800c636:	69d1      	ldr	r1, [r2, #28]
 800c638:	9102      	str	r1, [sp, #8]
 800c63a:	6951      	ldr	r1, [r2, #20]
 800c63c:	9103      	str	r1, [sp, #12]
 800c63e:	68d1      	ldr	r1, [r2, #12]
 800c640:	9104      	str	r1, [sp, #16]
 800c642:	ee30 0a67 	vsub.f32	s0, s0, s15
 800c646:	8c11      	ldrh	r1, [r2, #32]
 800c648:	f8ad 1000 	strh.w	r1, [sp]
 800c64c:	8b11      	ldrh	r1, [r2, #24]
 800c64e:	8a12      	ldrh	r2, [r2, #16]
 800c650:	ed83 0a1b 	vstr	s0, [r3, #108]	@ 0x6c
 800c654:	f8ad 1002 	strh.w	r1, [sp, #2]
 800c658:	462b      	mov	r3, r5
 800c65a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c65e:	a902      	add	r1, sp, #8
 800c660:	4668      	mov	r0, sp
 800c662:	ad05      	add	r5, sp, #20
 800c664:	f109 0404 	add.w	r4, r9, #4
 800c668:	f851 2b04 	ldr.w	r2, [r1], #4
 800c66c:	4562      	cmp	r2, ip
 800c66e:	46a0      	mov	r8, r4
 800c670:	d04c      	beq.n	800c70c <pwm_trig_adc_cb+0x15c>
 800c672:	4572      	cmp	r2, lr
 800c674:	d101      	bne.n	800c67a <pwm_trig_adc_cb+0xca>
 800c676:	f109 0802 	add.w	r8, r9, #2
 800c67a:	f8b8 8000 	ldrh.w	r8, [r8]
 800c67e:	f830 2b02 	ldrh.w	r2, [r0], #2
 800c682:	005b      	lsls	r3, r3, #1
 800c684:	ea02 0208 	and.w	r2, r2, r8
 800c688:	2a00      	cmp	r2, #0
 800c68a:	bf18      	it	ne
 800c68c:	f043 0301 	orrne.w	r3, r3, #1
 800c690:	428d      	cmp	r5, r1
 800c692:	b2db      	uxtb	r3, r3
 800c694:	d1e8      	bne.n	800c668 <pwm_trig_adc_cb+0xb8>
 800c696:	4630      	mov	r0, r6
 800c698:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 800c69c:	b007      	add	sp, #28
 800c69e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6a2:	f000 bc91 	b.w	800cfc8 <Axis::signal_current_meas()>
 800c6a6:	f04f 0900 	mov.w	r9, #0
 800c6aa:	e798      	b.n	800c5de <pwm_trig_adc_cb+0x2e>
 800c6ac:	2004      	movs	r0, #4
 800c6ae:	b007      	add	sp, #28
 800c6b0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6b4:	f7ff ba50 	b.w	800bb58 <low_level_fault(ODriveIntf::MotorIntf::Error)>
 800c6b8:	2102      	movs	r1, #2
 800c6ba:	f001 ff29 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800c6be:	4544      	cmp	r4, r8
 800c6c0:	d19b      	bne.n	800c5fa <pwm_trig_adc_cb+0x4a>
 800c6c2:	f8da 3004 	ldr.w	r3, [sl, #4]
 800c6c6:	429e      	cmp	r6, r3
 800c6c8:	d041      	beq.n	800c74e <pwm_trig_adc_cb+0x19e>
 800c6ca:	f1b9 0f00 	cmp.w	r9, #0
 800c6ce:	d094      	beq.n	800c5fa <pwm_trig_adc_cb+0x4a>
 800c6d0:	6930      	ldr	r0, [r6, #16]
 800c6d2:	f003 f91b 	bl	800f90c <Encoder::abs_spi_start_transaction()>
 800c6d6:	2f00      	cmp	r7, #0
 800c6d8:	d191      	bne.n	800c5fe <pwm_trig_adc_cb+0x4e>
 800c6da:	4620      	mov	r0, r4
 800c6dc:	f7fd fc2a 	bl	8009f34 <HAL_ADC_GetValue>
 800c6e0:	4601      	mov	r1, r0
 800c6e2:	6a70      	ldr	r0, [r6, #36]	@ 0x24
 800c6e4:	f001 ff22 	bl	800e52c <Motor::phase_current_from_adcval(unsigned long)>
 800c6e8:	6a73      	ldr	r3, [r6, #36]	@ 0x24
 800c6ea:	2d00      	cmp	r5, #0
 800c6ec:	d092      	beq.n	800c614 <pwm_trig_adc_cb+0x64>
 800c6ee:	4544      	cmp	r4, r8
 800c6f0:	d020      	beq.n	800c734 <pwm_trig_adc_cb+0x184>
 800c6f2:	edd3 7a1d 	vldr	s15, [r3, #116]	@ 0x74
 800c6f6:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 800c7c0 <pwm_trig_adc_cb+0x210>
 800c6fa:	ee30 0a67 	vsub.f32	s0, s0, s15
 800c6fe:	eee0 7a07 	vfma.f32	s15, s0, s14
 800c702:	edc3 7a1d 	vstr	s15, [r3, #116]	@ 0x74
 800c706:	b007      	add	sp, #28
 800c708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c70c:	46c8      	mov	r8, r9
 800c70e:	e7b4      	b.n	800c67a <pwm_trig_adc_cb+0xca>
 800c710:	f8da 3000 	ldr.w	r3, [sl]
 800c714:	429e      	cmp	r6, r3
 800c716:	d043      	beq.n	800c7a0 <pwm_trig_adc_cb+0x1f0>
 800c718:	f1b9 0f00 	cmp.w	r9, #0
 800c71c:	f47f af6d 	bne.w	800c5fa <pwm_trig_adc_cb+0x4a>
 800c720:	e7d6      	b.n	800c6d0 <pwm_trig_adc_cb+0x120>
 800c722:	edd3 7a1c 	vldr	s15, [r3, #112]	@ 0x70
 800c726:	ee30 0a67 	vsub.f32	s0, s0, s15
 800c72a:	ed83 0a1a 	vstr	s0, [r3, #104]	@ 0x68
 800c72e:	b007      	add	sp, #28
 800c730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c734:	edd3 7a1c 	vldr	s15, [r3, #112]	@ 0x70
 800c738:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 800c7c0 <pwm_trig_adc_cb+0x210>
 800c73c:	ee30 0a67 	vsub.f32	s0, s0, s15
 800c740:	eee0 7a07 	vfma.f32	s15, s0, s14
 800c744:	edc3 7a1c 	vstr	s15, [r3, #112]	@ 0x70
 800c748:	b007      	add	sp, #28
 800c74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c74e:	f1b9 0f00 	cmp.w	r9, #0
 800c752:	d002      	beq.n	800c75a <pwm_trig_adc_cb+0x1aa>
 800c754:	6930      	ldr	r0, [r6, #16]
 800c756:	f003 f8d9 	bl	800f90c <Encoder::abs_spi_start_transaction()>
 800c75a:	f8db 0024 	ldr.w	r0, [fp, #36]	@ 0x24
 800c75e:	f890 2042 	ldrb.w	r2, [r0, #66]	@ 0x42
 800c762:	b9aa      	cbnz	r2, 800c790 <pwm_trig_adc_cb+0x1e0>
 800c764:	f3ef 8c10 	mrs	ip, PRIMASK
 800c768:	b672      	cpsid	i
 800c76a:	6803      	ldr	r3, [r0, #0]
 800c76c:	f890 e066 	ldrb.w	lr, [r0, #102]	@ 0x66
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	6819      	ldr	r1, [r3, #0]
 800c774:	f880 2066 	strb.w	r2, [r0, #102]	@ 0x66
 800c778:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
 800c77a:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800c77e:	644b      	str	r3, [r1, #68]	@ 0x44
 800c780:	f38c 8810 	msr	PRIMASK, ip
 800c784:	f1be 0f00 	cmp.w	lr, #0
 800c788:	d10e      	bne.n	800c7a8 <pwm_trig_adc_cb+0x1f8>
 800c78a:	f7ff fe35 	bl	800c3f8 <update_brake_current>
 800c78e:	e734      	b.n	800c5fa <pwm_trig_adc_cb+0x4a>
 800c790:	2300      	movs	r3, #0
 800c792:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
 800c796:	f100 013c 	add.w	r1, r0, #60	@ 0x3c
 800c79a:	f7ff fa57 	bl	800bc4c <safety_critical_apply_motor_pwm_timings>
 800c79e:	e7f4      	b.n	800c78a <pwm_trig_adc_cb+0x1da>
 800c7a0:	f1b9 0f00 	cmp.w	r9, #0
 800c7a4:	d1d9      	bne.n	800c75a <pwm_trig_adc_cb+0x1aa>
 800c7a6:	e7d5      	b.n	800c754 <pwm_trig_adc_cb+0x1a4>
 800c7a8:	f8db 0024 	ldr.w	r0, [fp, #36]	@ 0x24
 800c7ac:	2110      	movs	r1, #16
 800c7ae:	3064      	adds	r0, #100	@ 0x64
 800c7b0:	f7ff f9ce 	bl	800bb50 <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800c7b4:	e7e9      	b.n	800c78a <pwm_trig_adc_cb+0x1da>
 800c7b6:	bf00      	nop
 800c7b8:	20000f98 	.word	0x20000f98
 800c7bc:	20001820 	.word	0x20001820
 800c7c0:	3a23d70b 	.word	0x3a23d70b
 800c7c4:	20000fe0 	.word	0x20000fe0
 800c7c8:	200019cc 	.word	0x200019cc
 800c7cc:	40020000 	.word	0x40020000
 800c7d0:	40020400 	.word	0x40020400

0800c7d4 <pwm_in_init>:
 800c7d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7d6:	230f      	movs	r3, #15
 800c7d8:	b08b      	sub	sp, #44	@ 0x2c
 800c7da:	2200      	movs	r2, #0
 800c7dc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800c7e0:	200a      	movs	r0, #10
 800c7e2:	2302      	movs	r3, #2
 800c7e4:	2101      	movs	r1, #1
 800c7e6:	2400      	movs	r4, #0
 800c7e8:	e9cd 0100 	strd	r0, r1, [sp]
 800c7ec:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c7f0:	e9cd 4307 	strd	r4, r3, [sp, #28]
 800c7f4:	4f1b      	ldr	r7, [pc, #108]	@ (800c864 <pwm_in_init+0x90>)
 800c7f6:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 800c7fa:	eb04 0344 	add.w	r3, r4, r4, lsl #1
 800c7fe:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800c802:	f8d3 00bc 	ldr.w	r0, [r3, #188]	@ 0xbc
 800c806:	f007 fd27 	bl	8014258 <fibre::is_endpoint_ref_valid(endpoint_ref_t)>
 800c80a:	b1c0      	cbz	r0, 800c83e <pwm_in_init+0x6a>
 800c80c:	2d06      	cmp	r5, #6
 800c80e:	4b16      	ldr	r3, [pc, #88]	@ (800c868 <pwm_in_init+0x94>)
 800c810:	4816      	ldr	r0, [pc, #88]	@ (800c86c <pwm_in_init+0x98>)
 800c812:	f04f 0101 	mov.w	r1, #1
 800c816:	d819      	bhi.n	800c84c <pwm_in_init+0x78>
 800c818:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
 800c81c:	9104      	str	r1, [sp, #16]
 800c81e:	f7fd fd9d 	bl	800a35c <HAL_GPIO_DeInit>
 800c822:	4812      	ldr	r0, [pc, #72]	@ (800c86c <pwm_in_init+0x98>)
 800c824:	a904      	add	r1, sp, #16
 800c826:	f7fd fc77 	bl	800a118 <HAL_GPIO_Init>
 800c82a:	00a6      	lsls	r6, r4, #2
 800c82c:	4669      	mov	r1, sp
 800c82e:	4810      	ldr	r0, [pc, #64]	@ (800c870 <pwm_in_init+0x9c>)
 800c830:	4632      	mov	r2, r6
 800c832:	f7fd f8fd 	bl	8009a30 <HAL_TIM_IC_ConfigChannel>
 800c836:	480e      	ldr	r0, [pc, #56]	@ (800c870 <pwm_in_init+0x9c>)
 800c838:	4631      	mov	r1, r6
 800c83a:	f7fc fdc7 	bl	80093cc <HAL_TIM_IC_Start_IT>
 800c83e:	3401      	adds	r4, #1
 800c840:	3501      	adds	r5, #1
 800c842:	2c04      	cmp	r4, #4
 800c844:	b2ad      	uxth	r5, r5
 800c846:	d1d8      	bne.n	800c7fa <pwm_in_init+0x26>
 800c848:	b00b      	add	sp, #44	@ 0x2c
 800c84a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c84c:	2301      	movs	r3, #1
 800c84e:	4807      	ldr	r0, [pc, #28]	@ (800c86c <pwm_in_init+0x98>)
 800c850:	9304      	str	r3, [sp, #16]
 800c852:	f7fd fd83 	bl	800a35c <HAL_GPIO_DeInit>
 800c856:	4805      	ldr	r0, [pc, #20]	@ (800c86c <pwm_in_init+0x98>)
 800c858:	a904      	add	r1, sp, #16
 800c85a:	f7fd fc5d 	bl	800a118 <HAL_GPIO_Init>
 800c85e:	2600      	movs	r6, #0
 800c860:	e7e4      	b.n	800c82c <pwm_in_init+0x58>
 800c862:	bf00      	nop
 800c864:	20001840 	.word	0x20001840
 800c868:	0802ac14 	.word	0x0802ac14
 800c86c:	40020000 	.word	0x40020000
 800c870:	200006c8 	.word	0x200006c8

0800c874 <pwm_in_cb>:
 800c874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c878:	1e44      	subs	r4, r0, #1
 800c87a:	2c03      	cmp	r4, #3
 800c87c:	b082      	sub	sp, #8
 800c87e:	d81d      	bhi.n	800c8bc <pwm_in_cb+0x48>
 800c880:	3802      	subs	r0, #2
 800c882:	b280      	uxth	r0, r0
 800c884:	2806      	cmp	r0, #6
 800c886:	bf98      	it	ls
 800c888:	4b28      	ldrls	r3, [pc, #160]	@ (800c92c <pwm_in_cb+0xb8>)
 800c88a:	4e29      	ldr	r6, [pc, #164]	@ (800c930 <pwm_in_cb+0xbc>)
 800c88c:	4f29      	ldr	r7, [pc, #164]	@ (800c934 <pwm_in_cb+0xc0>)
 800c88e:	460d      	mov	r5, r1
 800c890:	bf98      	it	ls
 800c892:	f833 1010 	ldrhls.w	r1, [r3, r0, lsl #1]
 800c896:	4828      	ldr	r0, [pc, #160]	@ (800c938 <pwm_in_cb+0xc4>)
 800c898:	bf88      	it	hi
 800c89a:	2101      	movhi	r1, #1
 800c89c:	f7fd fe10 	bl	800a4c0 <HAL_GPIO_ReadPin>
 800c8a0:	5d33      	ldrb	r3, [r6, r4]
 800c8a2:	f1b0 0800 	subs.w	r8, r0, #0
 800c8a6:	bf18      	it	ne
 800c8a8:	f04f 0801 	movne.w	r8, #1
 800c8ac:	b94b      	cbnz	r3, 800c8c2 <pwm_in_cb+0x4e>
 800c8ae:	4b23      	ldr	r3, [pc, #140]	@ (800c93c <pwm_in_cb+0xc8>)
 800c8b0:	f843 5024 	str.w	r5, [r3, r4, lsl #2]
 800c8b4:	2301      	movs	r3, #1
 800c8b6:	f807 8004 	strb.w	r8, [r7, r4]
 800c8ba:	5533      	strb	r3, [r6, r4]
 800c8bc:	b002      	add	sp, #8
 800c8be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c8c2:	5d3b      	ldrb	r3, [r7, r4]
 800c8c4:	2b00      	cmp	r3, #0
 800c8c6:	d0f2      	beq.n	800c8ae <pwm_in_cb+0x3a>
 800c8c8:	4b1c      	ldr	r3, [pc, #112]	@ (800c93c <pwm_in_cb+0xc8>)
 800c8ca:	2800      	cmp	r0, #0
 800c8cc:	d1f0      	bne.n	800c8b0 <pwm_in_cb+0x3c>
 800c8ce:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 800c8d2:	481b      	ldr	r0, [pc, #108]	@ (800c940 <pwm_in_cb+0xcc>)
 800c8d4:	1aaa      	subs	r2, r5, r2
 800c8d6:	f5a2 4124 	sub.w	r1, r2, #41984	@ 0xa400
 800c8da:	3910      	subs	r1, #16
 800c8dc:	4281      	cmp	r1, r0
 800c8de:	d8e7      	bhi.n	800c8b0 <pwm_in_cb+0x3c>
 800c8e0:	4282      	cmp	r2, r0
 800c8e2:	4918      	ldr	r1, [pc, #96]	@ (800c944 <pwm_in_cb+0xd0>)
 800c8e4:	eddf 7a18 	vldr	s15, [pc, #96]	@ 800c948 <pwm_in_cb+0xd4>
 800c8e8:	9301      	str	r3, [sp, #4]
 800c8ea:	bf28      	it	cs
 800c8ec:	4602      	movcs	r2, r0
 800c8ee:	eb04 0044 	add.w	r0, r4, r4, lsl #1
 800c8f2:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 800c8f6:	ed91 0a30 	vldr	s0, [r1, #192]	@ 0xc0
 800c8fa:	ed91 7a31 	vldr	s14, [r1, #196]	@ 0xc4
 800c8fe:	f8d1 00bc 	ldr.w	r0, [r1, #188]	@ 0xbc
 800c902:	4912      	ldr	r1, [pc, #72]	@ (800c94c <pwm_in_cb+0xd8>)
 800c904:	428a      	cmp	r2, r1
 800c906:	bf38      	it	cc
 800c908:	460a      	movcc	r2, r1
 800c90a:	ee37 7a40 	vsub.f32	s14, s14, s0
 800c90e:	f5a2 32a4 	sub.w	r2, r2, #83968	@ 0x14800
 800c912:	3a20      	subs	r2, #32
 800c914:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c918:	ee07 2a90 	vmov	s15, r2
 800c91c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c920:	eea7 0a27 	vfma.f32	s0, s14, s15
 800c924:	f007 fcae 	bl	8014284 <fibre::set_endpoint_from_float(endpoint_ref_t, float)>
 800c928:	9b01      	ldr	r3, [sp, #4]
 800c92a:	e7c1      	b.n	800c8b0 <pwm_in_cb+0x3c>
 800c92c:	0802ac14 	.word	0x0802ac14
 800c930:	200017d0 	.word	0x200017d0
 800c934:	200017d8 	.word	0x200017d8
 800c938:	40020000 	.word	0x40020000
 800c93c:	200017e0 	.word	0x200017e0
 800c940:	00029040 	.word	0x00029040
 800c944:	20001840 	.word	0x20001840
 800c948:	3747ba90 	.word	0x3747ba90
 800c94c:	00014820 	.word	0x00014820

0800c950 <start_analog_thread>:
 800c950:	b510      	push	{r4, lr}
 800c952:	4c08      	ldr	r4, [pc, #32]	@ (800c974 <start_analog_thread+0x24>)
 800c954:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c956:	b086      	sub	sp, #24
 800c958:	f10d 0c04 	add.w	ip, sp, #4
 800c95c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c960:	6823      	ldr	r3, [r4, #0]
 800c962:	f8cc 3000 	str.w	r3, [ip]
 800c966:	2100      	movs	r1, #0
 800c968:	a801      	add	r0, sp, #4
 800c96a:	f7fb f841 	bl	80079f0 <osThreadCreate>
 800c96e:	b006      	add	sp, #24
 800c970:	bd10      	pop	{r4, pc}
 800c972:	bf00      	nop
 800c974:	080294f0 	.word	0x080294f0

0800c978 <HAL_SPI_TxRxCpltCallback>:
 800c978:	4a08      	ldr	r2, [pc, #32]	@ (800c99c <HAL_SPI_TxRxCpltCallback+0x24>)
 800c97a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 800c97c:	6811      	ldr	r1, [r2, #0]
 800c97e:	6908      	ldr	r0, [r1, #16]
 800c980:	f100 016a 	add.w	r1, r0, #106	@ 0x6a
 800c984:	428b      	cmp	r3, r1
 800c986:	d006      	beq.n	800c996 <HAL_SPI_TxRxCpltCallback+0x1e>
 800c988:	6852      	ldr	r2, [r2, #4]
 800c98a:	6910      	ldr	r0, [r2, #16]
 800c98c:	f100 026a 	add.w	r2, r0, #106	@ 0x6a
 800c990:	4293      	cmp	r3, r2
 800c992:	d000      	beq.n	800c996 <HAL_SPI_TxRxCpltCallback+0x1e>
 800c994:	4770      	bx	lr
 800c996:	f002 bfef 	b.w	800f978 <Encoder::abs_spi_cb()>
 800c99a:	bf00      	nop
 800c99c:	200019cc 	.word	0x200019cc

0800c9a0 <erase>:
 800c9a0:	b530      	push	{r4, r5, lr}
 800c9a2:	4605      	mov	r5, r0
 800c9a4:	b089      	sub	sp, #36	@ 0x24
 800c9a6:	686b      	ldr	r3, [r5, #4]
 800c9a8:	9304      	str	r3, [sp, #16]
 800c9aa:	2100      	movs	r1, #0
 800c9ac:	2201      	movs	r2, #1
 800c9ae:	2302      	movs	r3, #2
 800c9b0:	2000      	movs	r0, #0
 800c9b2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c9b6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c9ba:	f7fa fc07 	bl	80071cc <HAL_FLASH_Unlock>
 800c9be:	4b0b      	ldr	r3, [pc, #44]	@ (800c9ec <erase+0x4c>)
 800c9c0:	22f3      	movs	r2, #243	@ 0xf3
 800c9c2:	60da      	str	r2, [r3, #12]
 800c9c4:	a901      	add	r1, sp, #4
 800c9c6:	a802      	add	r0, sp, #8
 800c9c8:	f7f9 facc 	bl	8005f64 <HAL_FLASHEx_Erase>
 800c9cc:	b938      	cbnz	r0, 800c9de <erase+0x3e>
 800c9ce:	68eb      	ldr	r3, [r5, #12]
 800c9d0:	602b      	str	r3, [r5, #0]
 800c9d2:	4604      	mov	r4, r0
 800c9d4:	f7fa fc0e 	bl	80071f4 <HAL_FLASH_Lock>
 800c9d8:	4620      	mov	r0, r4
 800c9da:	b009      	add	sp, #36	@ 0x24
 800c9dc:	bd30      	pop	{r4, r5, pc}
 800c9de:	f7fa fc09 	bl	80071f4 <HAL_FLASH_Lock>
 800c9e2:	f7fa fc11 	bl	8007208 <HAL_FLASH_GetError>
 800c9e6:	b009      	add	sp, #36	@ 0x24
 800c9e8:	bd30      	pop	{r4, r5, pc}
 800c9ea:	bf00      	nop
 800c9ec:	40023c00 	.word	0x40023c00

0800c9f0 <set_allocation_state>:
 800c9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9f4:	4606      	mov	r6, r0
 800c9f6:	68c0      	ldr	r0, [r0, #12]
 800c9f8:	4288      	cmp	r0, r1
 800c9fa:	d850      	bhi.n	800ca9e <set_allocation_state+0xae>
 800c9fc:	68b4      	ldr	r4, [r6, #8]
 800c9fe:	1888      	adds	r0, r1, r2
 800ca00:	42a0      	cmp	r0, r4
 800ca02:	d24c      	bcs.n	800ca9e <set_allocation_state+0xae>
 800ca04:	b25b      	sxtb	r3, r3
 800ca06:	011d      	lsls	r5, r3, #4
 800ca08:	ea45 0583 	orr.w	r5, r5, r3, lsl #2
 800ca0c:	431d      	orrs	r5, r3
 800ca0e:	ea45 1583 	orr.w	r5, r5, r3, lsl #6
 800ca12:	004b      	lsls	r3, r1, #1
 800ca14:	f003 0306 	and.w	r3, r3, #6
 800ca18:	f001 0803 	and.w	r8, r1, #3
 800ca1c:	24ff      	movs	r4, #255	@ 0xff
 800ca1e:	409c      	lsls	r4, r3
 800ca20:	4490      	add	r8, r2
 800ca22:	f021 0703 	bic.w	r7, r1, #3
 800ca26:	f7fa fbd1 	bl	80071cc <HAL_FLASH_Unlock>
 800ca2a:	4b1e      	ldr	r3, [pc, #120]	@ (800caa4 <set_allocation_state+0xb4>)
 800ca2c:	43e4      	mvns	r4, r4
 800ca2e:	22f3      	movs	r2, #243	@ 0xf3
 800ca30:	b2ed      	uxtb	r5, r5
 800ca32:	b2e4      	uxtb	r4, r4
 800ca34:	60da      	str	r2, [r3, #12]
 800ca36:	e00e      	b.n	800ca56 <set_allocation_state+0x66>
 800ca38:	6931      	ldr	r1, [r6, #16]
 800ca3a:	ea45 0204 	orr.w	r2, r5, r4
 800ca3e:	2300      	movs	r3, #0
 800ca40:	eb01 0197 	add.w	r1, r1, r7, lsr #2
 800ca44:	b2d2      	uxtb	r2, r2
 800ca46:	4618      	mov	r0, r3
 800ca48:	f7fa fc18 	bl	800727c <HAL_FLASH_Program>
 800ca4c:	f1a8 0804 	sub.w	r8, r8, #4
 800ca50:	4604      	mov	r4, r0
 800ca52:	3704      	adds	r7, #4
 800ca54:	b9e8      	cbnz	r0, 800ca92 <set_allocation_state+0xa2>
 800ca56:	f1b8 0f03 	cmp.w	r8, #3
 800ca5a:	d8ed      	bhi.n	800ca38 <set_allocation_state+0x48>
 800ca5c:	f1b8 0f00 	cmp.w	r8, #0
 800ca60:	d012      	beq.n	800ca88 <set_allocation_state+0x98>
 800ca62:	f1c8 0804 	rsb	r8, r8, #4
 800ca66:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800ca6a:	f06f 02ff 	mvn.w	r2, #255	@ 0xff
 800ca6e:	6931      	ldr	r1, [r6, #16]
 800ca70:	4325      	orrs	r5, r4
 800ca72:	fa42 f208 	asr.w	r2, r2, r8
 800ca76:	2300      	movs	r3, #0
 800ca78:	432a      	orrs	r2, r5
 800ca7a:	eb01 0197 	add.w	r1, r1, r7, lsr #2
 800ca7e:	4618      	mov	r0, r3
 800ca80:	b2d2      	uxtb	r2, r2
 800ca82:	f7fa fbfb 	bl	800727c <HAL_FLASH_Program>
 800ca86:	b920      	cbnz	r0, 800ca92 <set_allocation_state+0xa2>
 800ca88:	f7fa fbb4 	bl	80071f4 <HAL_FLASH_Lock>
 800ca8c:	2000      	movs	r0, #0
 800ca8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca92:	f7fa fbaf 	bl	80071f4 <HAL_FLASH_Lock>
 800ca96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ca9a:	f7fa bbb5 	b.w	8007208 <HAL_FLASH_GetError>
 800ca9e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800caa2:	e7f4      	b.n	800ca8e <set_allocation_state+0x9e>
 800caa4:	40023c00 	.word	0x40023c00

0800caa8 <scan_allocation_table>:
 800caa8:	b252      	sxtb	r2, r2
 800caaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caac:	68c4      	ldr	r4, [r0, #12]
 800caae:	ea4f 1e02 	mov.w	lr, r2, lsl #4
 800cab2:	4606      	mov	r6, r0
 800cab4:	ea4e 0e82 	orr.w	lr, lr, r2, lsl #2
 800cab8:	1cc8      	adds	r0, r1, #3
 800caba:	f020 0003 	bic.w	r0, r0, #3
 800cabe:	ea42 0e0e 	orr.w	lr, r2, lr
 800cac2:	1d25      	adds	r5, r4, #4
 800cac4:	ea4e 1e82 	orr.w	lr, lr, r2, lsl #6
 800cac8:	42a8      	cmp	r0, r5
 800caca:	fa4f f78e 	sxtb.w	r7, lr
 800cace:	eba0 0101 	sub.w	r1, r0, r1
 800cad2:	fa5f fe8e 	uxtb.w	lr, lr
 800cad6:	d334      	bcc.n	800cb42 <scan_allocation_table+0x9a>
 800cad8:	1e42      	subs	r2, r0, #1
 800cada:	6936      	ldr	r6, [r6, #16]
 800cadc:	0892      	lsrs	r2, r2, #2
 800cade:	5cb2      	ldrb	r2, [r6, r2]
 800cae0:	b2d2      	uxtb	r2, r2
 800cae2:	b181      	cbz	r1, 800cb06 <scan_allocation_table+0x5e>
 800cae4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800cae8:	f06f 01ff 	mvn.w	r1, #255	@ 0xff
 800caec:	fa41 f10c 	asr.w	r1, r1, ip
 800caf0:	ea22 0201 	bic.w	r2, r2, r1
 800caf4:	ea0e 0101 	and.w	r1, lr, r1
 800caf8:	430a      	orrs	r2, r1
 800cafa:	e004      	b.n	800cb06 <scan_allocation_table+0x5e>
 800cafc:	45ac      	cmp	ip, r5
 800cafe:	d31e      	bcc.n	800cb3e <scan_allocation_table+0x96>
 800cb00:	5c72      	ldrb	r2, [r6, r1]
 800cb02:	4660      	mov	r0, ip
 800cb04:	b2d2      	uxtb	r2, r2
 800cb06:	1f41      	subs	r1, r0, #5
 800cb08:	4572      	cmp	r2, lr
 800cb0a:	ea4f 0191 	mov.w	r1, r1, lsr #2
 800cb0e:	f1a0 0c04 	sub.w	ip, r0, #4
 800cb12:	d0f3      	beq.n	800cafc <scan_allocation_table+0x54>
 800cb14:	f007 0703 	and.w	r7, r7, #3
 800cb18:	0995      	lsrs	r5, r2, #6
 800cb1a:	ebb7 1f92 	cmp.w	r7, r2, lsr #6
 800cb1e:	46ac      	mov	ip, r5
 800cb20:	d006      	beq.n	800cb30 <scan_allocation_table+0x88>
 800cb22:	e009      	b.n	800cb38 <scan_allocation_table+0x90>
 800cb24:	f3c1 1c81 	ubfx	ip, r1, #6, #2
 800cb28:	45ac      	cmp	ip, r5
 800cb2a:	f100 30ff 	add.w	r0, r0, #4294967295	@ 0xffffffff
 800cb2e:	d103      	bne.n	800cb38 <scan_allocation_table+0x90>
 800cb30:	0091      	lsls	r1, r2, #2
 800cb32:	4284      	cmp	r4, r0
 800cb34:	b2ca      	uxtb	r2, r1
 800cb36:	d3f5      	bcc.n	800cb24 <scan_allocation_table+0x7c>
 800cb38:	f883 c000 	strb.w	ip, [r3]
 800cb3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb3e:	4660      	mov	r0, ip
 800cb40:	e7e8      	b.n	800cb14 <scan_allocation_table+0x6c>
 800cb42:	4672      	mov	r2, lr
 800cb44:	e7e6      	b.n	800cb14 <scan_allocation_table+0x6c>
 800cb46:	bf00      	nop

0800cb48 <NVM_init>:
 800cb48:	b530      	push	{r4, r5, lr}
 800cb4a:	4c18      	ldr	r4, [pc, #96]	@ (800cbac <NVM_init+0x64>)
 800cb4c:	b083      	sub	sp, #12
 800cb4e:	68a1      	ldr	r1, [r4, #8]
 800cb50:	f10d 0305 	add.w	r3, sp, #5
 800cb54:	2203      	movs	r2, #3
 800cb56:	4620      	mov	r0, r4
 800cb58:	f7ff ffa6 	bl	800caa8 <scan_allocation_table>
 800cb5c:	f10d 0306 	add.w	r3, sp, #6
 800cb60:	2203      	movs	r2, #3
 800cb62:	6020      	str	r0, [r4, #0]
 800cb64:	6a21      	ldr	r1, [r4, #32]
 800cb66:	4605      	mov	r5, r0
 800cb68:	f104 0018 	add.w	r0, r4, #24
 800cb6c:	f7ff ff9c 	bl	800caa8 <scan_allocation_table>
 800cb70:	4b0f      	ldr	r3, [pc, #60]	@ (800cbb0 <NVM_init+0x68>)
 800cb72:	61a0      	str	r0, [r4, #24]
 800cb74:	2200      	movs	r2, #0
 800cb76:	701a      	strb	r2, [r3, #0]
 800cb78:	f89d 2006 	ldrb.w	r2, [sp, #6]
 800cb7c:	b99a      	cbnz	r2, 800cba6 <NVM_init+0x5e>
 800cb7e:	2201      	movs	r2, #1
 800cb80:	4605      	mov	r5, r0
 800cb82:	701a      	strb	r2, [r3, #0]
 800cb84:	f104 0018 	add.w	r0, r4, #24
 800cb88:	f10d 0307 	add.w	r3, sp, #7
 800cb8c:	4629      	mov	r1, r5
 800cb8e:	2200      	movs	r2, #0
 800cb90:	f7ff ff8a 	bl	800caa8 <scan_allocation_table>
 800cb94:	2300      	movs	r3, #0
 800cb96:	4907      	ldr	r1, [pc, #28]	@ (800cbb4 <NVM_init+0x6c>)
 800cb98:	4a07      	ldr	r2, [pc, #28]	@ (800cbb8 <NVM_init+0x70>)
 800cb9a:	1a2d      	subs	r5, r5, r0
 800cb9c:	4618      	mov	r0, r3
 800cb9e:	600d      	str	r5, [r1, #0]
 800cba0:	6013      	str	r3, [r2, #0]
 800cba2:	b003      	add	sp, #12
 800cba4:	bd30      	pop	{r4, r5, pc}
 800cba6:	4620      	mov	r0, r4
 800cba8:	e7ee      	b.n	800cb88 <NVM_init+0x40>
 800cbaa:	bf00      	nop
 800cbac:	20000204 	.word	0x20000204
 800cbb0:	2000183c 	.word	0x2000183c
 800cbb4:	20001834 	.word	0x20001834
 800cbb8:	20001838 	.word	0x20001838

0800cbbc <NVM_erase>:
 800cbbc:	b538      	push	{r3, r4, r5, lr}
 800cbbe:	4909      	ldr	r1, [pc, #36]	@ (800cbe4 <NVM_erase+0x28>)
 800cbc0:	4c09      	ldr	r4, [pc, #36]	@ (800cbe8 <NVM_erase+0x2c>)
 800cbc2:	2000      	movs	r0, #0
 800cbc4:	68e2      	ldr	r2, [r4, #12]
 800cbc6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cbc8:	7008      	strb	r0, [r1, #0]
 800cbca:	4620      	mov	r0, r4
 800cbcc:	6022      	str	r2, [r4, #0]
 800cbce:	61a3      	str	r3, [r4, #24]
 800cbd0:	f7ff fee6 	bl	800c9a0 <erase>
 800cbd4:	4605      	mov	r5, r0
 800cbd6:	f104 0018 	add.w	r0, r4, #24
 800cbda:	f7ff fee1 	bl	800c9a0 <erase>
 800cbde:	4328      	orrs	r0, r5
 800cbe0:	bd38      	pop	{r3, r4, r5, pc}
 800cbe2:	bf00      	nop
 800cbe4:	2000183c 	.word	0x2000183c
 800cbe8:	20000204 	.word	0x20000204

0800cbec <NVM_get_max_read_length>:
 800cbec:	4b01      	ldr	r3, [pc, #4]	@ (800cbf4 <NVM_get_max_read_length+0x8>)
 800cbee:	6818      	ldr	r0, [r3, #0]
 800cbf0:	00c0      	lsls	r0, r0, #3
 800cbf2:	4770      	bx	lr
 800cbf4:	20001834 	.word	0x20001834

0800cbf8 <NVM_get_max_write_length>:
 800cbf8:	4b06      	ldr	r3, [pc, #24]	@ (800cc14 <NVM_get_max_write_length+0x1c>)
 800cbfa:	4a07      	ldr	r2, [pc, #28]	@ (800cc18 <NVM_get_max_write_length+0x20>)
 800cbfc:	781b      	ldrb	r3, [r3, #0]
 800cbfe:	f1c3 0301 	rsb	r3, r3, #1
 800cc02:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800cc06:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800cc0a:	e9d3 0302 	ldrd	r0, r3, [r3, #8]
 800cc0e:	1ac0      	subs	r0, r0, r3
 800cc10:	00c0      	lsls	r0, r0, #3
 800cc12:	4770      	bx	lr
 800cc14:	2000183c 	.word	0x2000183c
 800cc18:	20000204 	.word	0x20000204

0800cc1c <NVM_read>:
 800cc1c:	b538      	push	{r3, r4, r5, lr}
 800cc1e:	4c10      	ldr	r4, [pc, #64]	@ (800cc60 <NVM_read+0x44>)
 800cc20:	6825      	ldr	r5, [r4, #0]
 800cc22:	eb00 0c02 	add.w	ip, r0, r2
 800cc26:	ebbc 0fc5 	cmp.w	ip, r5, lsl #3
 800cc2a:	d815      	bhi.n	800cc58 <NVM_read+0x3c>
 800cc2c:	4603      	mov	r3, r0
 800cc2e:	4608      	mov	r0, r1
 800cc30:	490c      	ldr	r1, [pc, #48]	@ (800cc64 <NVM_read+0x48>)
 800cc32:	f891 c000 	ldrb.w	ip, [r1]
 800cc36:	490c      	ldr	r1, [pc, #48]	@ (800cc68 <NVM_read+0x4c>)
 800cc38:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800cc3c:	f851 403c 	ldr.w	r4, [r1, ip, lsl #3]
 800cc40:	eb01 01cc 	add.w	r1, r1, ip, lsl #3
 800cc44:	eba4 0c05 	sub.w	ip, r4, r5
 800cc48:	6949      	ldr	r1, [r1, #20]
 800cc4a:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
 800cc4e:	4419      	add	r1, r3
 800cc50:	f017 fe1b 	bl	802488a <memcpy>
 800cc54:	2000      	movs	r0, #0
 800cc56:	bd38      	pop	{r3, r4, r5, pc}
 800cc58:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800cc5c:	bd38      	pop	{r3, r4, r5, pc}
 800cc5e:	bf00      	nop
 800cc60:	20001834 	.word	0x20001834
 800cc64:	2000183c 	.word	0x2000183c
 800cc68:	20000204 	.word	0x20000204

0800cc6c <NVM_start_write>:
 800cc6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc6e:	4b13      	ldr	r3, [pc, #76]	@ (800ccbc <NVM_start_write+0x50>)
 800cc70:	4e13      	ldr	r6, [pc, #76]	@ (800ccc0 <NVM_start_write+0x54>)
 800cc72:	781b      	ldrb	r3, [r3, #0]
 800cc74:	f1c3 0301 	rsb	r3, r3, #1
 800cc78:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800cc7c:	eb06 05c3 	add.w	r5, r6, r3, lsl #3
 800cc80:	00dc      	lsls	r4, r3, #3
 800cc82:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800cc86:	3007      	adds	r0, #7
 800cc88:	1a9a      	subs	r2, r3, r2
 800cc8a:	ebb2 0fd0 	cmp.w	r2, r0, lsr #3
 800cc8e:	d312      	bcc.n	800ccb6 <NVM_start_write+0x4a>
 800cc90:	5931      	ldr	r1, [r6, r4]
 800cc92:	08c7      	lsrs	r7, r0, #3
 800cc94:	1a5b      	subs	r3, r3, r1
 800cc96:	42bb      	cmp	r3, r7
 800cc98:	d204      	bcs.n	800cca4 <NVM_start_write+0x38>
 800cc9a:	4628      	mov	r0, r5
 800cc9c:	f7ff fe80 	bl	800c9a0 <erase>
 800cca0:	b940      	cbnz	r0, 800ccb4 <NVM_start_write+0x48>
 800cca2:	5931      	ldr	r1, [r6, r4]
 800cca4:	2301      	movs	r3, #1
 800cca6:	463a      	mov	r2, r7
 800cca8:	4628      	mov	r0, r5
 800ccaa:	f7ff fea1 	bl	800c9f0 <set_allocation_state>
 800ccae:	b908      	cbnz	r0, 800ccb4 <NVM_start_write+0x48>
 800ccb0:	4b04      	ldr	r3, [pc, #16]	@ (800ccc4 <NVM_start_write+0x58>)
 800ccb2:	601f      	str	r7, [r3, #0]
 800ccb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ccb6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800ccba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ccbc:	2000183c 	.word	0x2000183c
 800ccc0:	20000204 	.word	0x20000204
 800ccc4:	20001838 	.word	0x20001838

0800ccc8 <NVM_write>:
 800ccc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cccc:	4b3c      	ldr	r3, [pc, #240]	@ (800cdc0 <NVM_write+0xf8>)
 800ccce:	4615      	mov	r5, r2
 800ccd0:	681a      	ldr	r2, [r3, #0]
 800ccd2:	1943      	adds	r3, r0, r5
 800ccd4:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 800ccd8:	d86f      	bhi.n	800cdba <NVM_write+0xf2>
 800ccda:	4b3a      	ldr	r3, [pc, #232]	@ (800cdc4 <NVM_write+0xfc>)
 800ccdc:	4604      	mov	r4, r0
 800ccde:	f893 8000 	ldrb.w	r8, [r3]
 800cce2:	460e      	mov	r6, r1
 800cce4:	f7fa fa72 	bl	80071cc <HAL_FLASH_Unlock>
 800cce8:	4b37      	ldr	r3, [pc, #220]	@ (800cdc8 <NVM_write+0x100>)
 800ccea:	22f3      	movs	r2, #243	@ 0xf3
 800ccec:	60da      	str	r2, [r3, #12]
 800ccee:	07a2      	lsls	r2, r4, #30
 800ccf0:	f1c8 0801 	rsb	r8, r8, #1
 800ccf4:	d020      	beq.n	800cd38 <NVM_write+0x70>
 800ccf6:	4b35      	ldr	r3, [pc, #212]	@ (800cdcc <NVM_write+0x104>)
 800ccf8:	eb08 0248 	add.w	r2, r8, r8, lsl #1
 800ccfc:	eb03 09c2 	add.w	r9, r3, r2, lsl #3
 800cd00:	e00f      	b.n	800cd22 <NVM_write+0x5a>
 800cd02:	f8d9 7000 	ldr.w	r7, [r9]
 800cd06:	f8d9 1014 	ldr.w	r1, [r9, #20]
 800cd0a:	7812      	ldrb	r2, [r2, #0]
 800cd0c:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800cd10:	4421      	add	r1, r4
 800cd12:	f7fa fab3 	bl	800727c <HAL_FLASH_Program>
 800cd16:	bb48      	cbnz	r0, 800cd6c <NVM_write+0xa4>
 800cd18:	3401      	adds	r4, #1
 800cd1a:	07a3      	lsls	r3, r4, #30
 800cd1c:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 800cd20:	d00a      	beq.n	800cd38 <NVM_write+0x70>
 800cd22:	2300      	movs	r3, #0
 800cd24:	4632      	mov	r2, r6
 800cd26:	4618      	mov	r0, r3
 800cd28:	3601      	adds	r6, #1
 800cd2a:	2d00      	cmp	r5, #0
 800cd2c:	d1e9      	bne.n	800cd02 <NVM_write+0x3a>
 800cd2e:	f7fa fa61 	bl	80071f4 <HAL_FLASH_Lock>
 800cd32:	2000      	movs	r0, #0
 800cd34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cd38:	2d03      	cmp	r5, #3
 800cd3a:	d91d      	bls.n	800cd78 <NVM_write+0xb0>
 800cd3c:	4f23      	ldr	r7, [pc, #140]	@ (800cdcc <NVM_write+0x104>)
 800cd3e:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 800cd42:	eb07 07c3 	add.w	r7, r7, r3, lsl #3
 800cd46:	e004      	b.n	800cd52 <NVM_write+0x8a>
 800cd48:	3d04      	subs	r5, #4
 800cd4a:	2d03      	cmp	r5, #3
 800cd4c:	f104 0404 	add.w	r4, r4, #4
 800cd50:	d912      	bls.n	800cd78 <NVM_write+0xb0>
 800cd52:	683b      	ldr	r3, [r7, #0]
 800cd54:	6979      	ldr	r1, [r7, #20]
 800cd56:	f856 2b04 	ldr.w	r2, [r6], #4
 800cd5a:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800cd5e:	4421      	add	r1, r4
 800cd60:	2300      	movs	r3, #0
 800cd62:	2002      	movs	r0, #2
 800cd64:	f7fa fa8a 	bl	800727c <HAL_FLASH_Program>
 800cd68:	2800      	cmp	r0, #0
 800cd6a:	d0ed      	beq.n	800cd48 <NVM_write+0x80>
 800cd6c:	f7fa fa42 	bl	80071f4 <HAL_FLASH_Lock>
 800cd70:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cd74:	f7fa ba48 	b.w	8007208 <HAL_FLASH_GetError>
 800cd78:	2d00      	cmp	r5, #0
 800cd7a:	d0d8      	beq.n	800cd2e <NVM_write+0x66>
 800cd7c:	4f13      	ldr	r7, [pc, #76]	@ (800cdcc <NVM_write+0x104>)
 800cd7e:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 800cd82:	4435      	add	r5, r6
 800cd84:	46b0      	mov	r8, r6
 800cd86:	eb07 07c3 	add.w	r7, r7, r3, lsl #3
 800cd8a:	e001      	b.n	800cd90 <NVM_write+0xc8>
 800cd8c:	45a8      	cmp	r8, r5
 800cd8e:	d0ce      	beq.n	800cd2e <NVM_write+0x66>
 800cd90:	697a      	ldr	r2, [r7, #20]
 800cd92:	6839      	ldr	r1, [r7, #0]
 800cd94:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 800cd98:	4421      	add	r1, r4
 800cd9a:	2300      	movs	r3, #0
 800cd9c:	1b89      	subs	r1, r1, r6
 800cd9e:	4441      	add	r1, r8
 800cda0:	4618      	mov	r0, r3
 800cda2:	f818 2b01 	ldrb.w	r2, [r8], #1
 800cda6:	f7fa fa69 	bl	800727c <HAL_FLASH_Program>
 800cdaa:	2800      	cmp	r0, #0
 800cdac:	d0ee      	beq.n	800cd8c <NVM_write+0xc4>
 800cdae:	f7fa fa21 	bl	80071f4 <HAL_FLASH_Lock>
 800cdb2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cdb6:	f7fa ba27 	b.w	8007208 <HAL_FLASH_GetError>
 800cdba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800cdbe:	e7b9      	b.n	800cd34 <NVM_write+0x6c>
 800cdc0:	20001838 	.word	0x20001838
 800cdc4:	2000183c 	.word	0x2000183c
 800cdc8:	40023c00 	.word	0x40023c00
 800cdcc:	20000204 	.word	0x20000204

0800cdd0 <NVM_commit>:
 800cdd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cdd4:	4e1a      	ldr	r6, [pc, #104]	@ (800ce40 <NVM_commit+0x70>)
 800cdd6:	4d1b      	ldr	r5, [pc, #108]	@ (800ce44 <NVM_commit+0x74>)
 800cdd8:	7834      	ldrb	r4, [r6, #0]
 800cdda:	f8df 8070 	ldr.w	r8, [pc, #112]	@ 800ce4c <NVM_commit+0x7c>
 800cdde:	f1c4 0001 	rsb	r0, r4, #1
 800cde2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800cde6:	00c7      	lsls	r7, r0, #3
 800cde8:	f8d8 2000 	ldr.w	r2, [r8]
 800cdec:	59e9      	ldr	r1, [r5, r7]
 800cdee:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 800cdf2:	2300      	movs	r3, #0
 800cdf4:	f7ff fdfc 	bl	800c9f0 <set_allocation_state>
 800cdf8:	b9e0      	cbnz	r0, 800ce34 <NVM_commit+0x64>
 800cdfa:	f8d8 2000 	ldr.w	r2, [r8]
 800cdfe:	59eb      	ldr	r3, [r5, r7]
 800ce00:	f8c8 0000 	str.w	r0, [r8]
 800ce04:	4413      	add	r3, r2
 800ce06:	51eb      	str	r3, [r5, r7]
 800ce08:	4b0f      	ldr	r3, [pc, #60]	@ (800ce48 <NVM_commit+0x78>)
 800ce0a:	601a      	str	r2, [r3, #0]
 800ce0c:	7833      	ldrb	r3, [r6, #0]
 800ce0e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800ce12:	f1c3 0301 	rsb	r3, r3, #1
 800ce16:	7033      	strb	r3, [r6, #0]
 800ce18:	eb05 00c4 	add.w	r0, r5, r4, lsl #3
 800ce1c:	00e6      	lsls	r6, r4, #3
 800ce1e:	6883      	ldr	r3, [r0, #8]
 800ce20:	59a9      	ldr	r1, [r5, r6]
 800ce22:	4299      	cmp	r1, r3
 800ce24:	d208      	bcs.n	800ce38 <NVM_commit+0x68>
 800ce26:	2301      	movs	r3, #1
 800ce28:	461a      	mov	r2, r3
 800ce2a:	f7ff fde1 	bl	800c9f0 <set_allocation_state>
 800ce2e:	59ab      	ldr	r3, [r5, r6]
 800ce30:	3301      	adds	r3, #1
 800ce32:	51ab      	str	r3, [r5, r6]
 800ce34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ce3c:	f7ff bdb0 	b.w	800c9a0 <erase>
 800ce40:	2000183c 	.word	0x2000183c
 800ce44:	20000204 	.word	0x20000204
 800ce48:	20001834 	.word	0x20001834
 800ce4c:	20001838 	.word	0x20001838

0800ce50 <Axis::clear_errors()>:
 800ce50:	b430      	push	{r4, r5}
 800ce52:	e9d0 4205 	ldrd	r4, r2, [r0, #20]
 800ce56:	6a45      	ldr	r5, [r0, #36]	@ 0x24
 800ce58:	2300      	movs	r3, #0
 800ce5a:	f8a5 3064 	strh.w	r3, [r5, #100]	@ 0x64
 800ce5e:	7513      	strb	r3, [r2, #20]
 800ce60:	6902      	ldr	r2, [r0, #16]
 800ce62:	7223      	strb	r3, [r4, #8]
 800ce64:	2100      	movs	r1, #0
 800ce66:	8293      	strh	r3, [r2, #20]
 800ce68:	6451      	str	r1, [r2, #68]	@ 0x44
 800ce6a:	bc30      	pop	{r4, r5}
 800ce6c:	6503      	str	r3, [r0, #80]	@ 0x50
 800ce6e:	4770      	bx	lr

0800ce70 <Axis::watchdog_feed()>:
 800ce70:	68c3      	ldr	r3, [r0, #12]
 800ce72:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 800ceac <Axis::watchdog_feed()+0x3c>
 800ce76:	edd3 6a03 	vldr	s13, [r3, #12]
 800ce7a:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 800ceb0 <Axis::watchdog_feed()+0x40>
 800ce7e:	ed9f 6a0d 	vldr	s12, [pc, #52]	@ 800ceb4 <Axis::watchdog_feed()+0x44>
 800ce82:	eef4 6ac7 	vcmpe.f32	s13, s14
 800ce86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce8a:	bf58      	it	pl
 800ce8c:	eeb0 7a66 	vmovpl.f32	s14, s13
 800ce90:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ce94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce98:	bfd8      	it	le
 800ce9a:	eef0 7a47 	vmovle.f32	s15, s14
 800ce9e:	ee67 7a86 	vmul.f32	s15, s15, s12
 800cea2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800cea6:	edc0 7a22 	vstr	s15, [r0, #136]	@ 0x88
 800ceaa:	4770      	bx	lr
 800ceac:	00000000 	.word	0x00000000
 800ceb0:	49030e30 	.word	0x49030e30
 800ceb4:	45fa0000 	.word	0x45fa0000

0800ceb8 <operator&=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 800ceb8:	6803      	ldr	r3, [r0, #0]
 800ceba:	400b      	ands	r3, r1
 800cebc:	6003      	str	r3, [r0, #0]
 800cebe:	4770      	bx	lr

0800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 800cec0:	6803      	ldr	r3, [r0, #0]
 800cec2:	430b      	orrs	r3, r1
 800cec4:	6003      	str	r3, [r0, #0]
 800cec6:	4770      	bx	lr

0800cec8 <step_cb_wrapper(void*)>:
 800cec8:	6e02      	ldr	r2, [r0, #96]	@ 0x60
 800ceca:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800cece:	6912      	ldr	r2, [r2, #16]
 800ced0:	f890 c054 	ldrb.w	ip, [r0, #84]	@ 0x54
 800ced4:	4013      	ands	r3, r2
 800ced6:	3b00      	subs	r3, #0
 800ced8:	f04f 0101 	mov.w	r1, #1
 800cedc:	bf18      	it	ne
 800cede:	2301      	movne	r3, #1
 800cee0:	408b      	lsls	r3, r1
 800cee2:	3b01      	subs	r3, #1
 800cee4:	fb0c f303 	mul.w	r3, ip, r3
 800cee8:	6982      	ldr	r2, [r0, #24]
 800ceea:	68c0      	ldr	r0, [r0, #12]
 800ceec:	ed92 7a10 	vldr	s14, [r2, #64]	@ 0x40
 800cef0:	edd0 6a02 	vldr	s13, [r0, #8]
 800cef4:	f882 1054 	strb.w	r1, [r2, #84]	@ 0x54
 800cef8:	ee07 3a90 	vmov	s15, r3
 800cefc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800cf00:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800cf04:	ed82 7a10 	vstr	s14, [r2, #64]	@ 0x40
 800cf08:	4770      	bx	lr
 800cf0a:	bf00      	nop

0800cf0c <operator~(ODriveIntf::AxisIntf::Error)>:
 800cf0c:	43c0      	mvns	r0, r0
 800cf0e:	4770      	bx	lr

0800cf10 <Axis::default_calibration()>:
 800cf10:	b530      	push	{r4, r5, lr}
 800cf12:	4c0a      	ldr	r4, [pc, #40]	@ (800cf3c <Axis::default_calibration()+0x2c>)
 800cf14:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 800cf40 <Axis::default_calibration()+0x30>
 800cf18:	4686      	mov	lr, r0
 800cf1a:	4684      	mov	ip, r0
 800cf1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cf1e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800cf22:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800cf26:	f240 1501 	movw	r5, #257	@ 0x101
 800cf2a:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800cf2e:	edce 7a05 	vstr	s15, [lr, #20]
 800cf32:	f8ae 5019 	strh.w	r5, [lr, #25]
 800cf36:	4670      	mov	r0, lr
 800cf38:	bd30      	pop	{r4, r5, pc}
 800cf3a:	bf00      	nop
 800cf3c:	08029504 	.word	0x08029504
 800cf40:	441d1463 	.word	0x441d1463

0800cf44 <Axis::default_sensorless()>:
 800cf44:	b530      	push	{r4, r5, lr}
 800cf46:	4c0b      	ldr	r4, [pc, #44]	@ (800cf74 <Axis::default_sensorless()+0x30>)
 800cf48:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 800cf78 <Axis::default_sensorless()+0x34>
 800cf4c:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 800cf7c <Axis::default_sensorless()+0x38>
 800cf50:	4686      	mov	lr, r0
 800cf52:	4684      	mov	ip, r0
 800cf54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cf56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800cf5a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800cf5e:	2501      	movs	r5, #1
 800cf60:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800cf64:	ed8e 7a03 	vstr	s14, [lr, #12]
 800cf68:	edce 7a04 	vstr	s15, [lr, #16]
 800cf6c:	f88e 5018 	strb.w	r5, [lr, #24]
 800cf70:	4670      	mov	r0, lr
 800cf72:	bd30      	pop	{r4, r5, pc}
 800cf74:	08029504 	.word	0x08029504
 800cf78:	43480000 	.word	0x43480000
 800cf7c:	43c80000 	.word	0x43c80000

0800cf80 <Axis::setup()>:
 800cf80:	4770      	bx	lr
 800cf82:	bf00      	nop

0800cf84 <Axis::start_thread()>:
 800cf84:	b510      	push	{r4, lr}
 800cf86:	6882      	ldr	r2, [r0, #8]
 800cf88:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 800cf8a:	f8b2 c004 	ldrh.w	ip, [r2, #4]
 800cf8e:	490c      	ldr	r1, [pc, #48]	@ (800cfc0 <Axis::start_thread()+0x3c>)
 800cf90:	b086      	sub	sp, #24
 800cf92:	2200      	movs	r2, #0
 800cf94:	f8cd 200e 	str.w	r2, [sp, #14]
 800cf98:	f8ad 2012 	strh.w	r2, [sp, #18]
 800cf9c:	4a09      	ldr	r2, [pc, #36]	@ (800cfc4 <Axis::start_thread()+0x40>)
 800cf9e:	f8ad c00c 	strh.w	ip, [sp, #12]
 800cfa2:	4604      	mov	r4, r0
 800cfa4:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800cfa8:	089b      	lsrs	r3, r3, #2
 800cfaa:	4601      	mov	r1, r0
 800cfac:	a801      	add	r0, sp, #4
 800cfae:	9305      	str	r3, [sp, #20]
 800cfb0:	f7fa fd1e 	bl	80079f0 <osThreadCreate>
 800cfb4:	2301      	movs	r3, #1
 800cfb6:	6460      	str	r0, [r4, #68]	@ 0x44
 800cfb8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
 800cfbc:	b006      	add	sp, #24
 800cfbe:	bd10      	pop	{r4, pc}
 800cfc0:	0802ab90 	.word	0x0802ab90
 800cfc4:	0800e145 	.word	0x0800e145

0800cfc8 <Axis::signal_current_meas()>:
 800cfc8:	f890 304c 	ldrb.w	r3, [r0, #76]	@ 0x4c
 800cfcc:	b903      	cbnz	r3, 800cfd0 <Axis::signal_current_meas()+0x8>
 800cfce:	4770      	bx	lr
 800cfd0:	6c40      	ldr	r0, [r0, #68]	@ 0x44
 800cfd2:	2101      	movs	r1, #1
 800cfd4:	f7fa bd30 	b.w	8007a38 <osSignalSet>

0800cfd8 <Axis::wait_for_current_meas()>:
 800cfd8:	b500      	push	{lr}
 800cfda:	b085      	sub	sp, #20
 800cfdc:	a801      	add	r0, sp, #4
 800cfde:	2202      	movs	r2, #2
 800cfe0:	2101      	movs	r1, #1
 800cfe2:	f7fa fd53 	bl	8007a8c <osSignalWait>
 800cfe6:	9801      	ldr	r0, [sp, #4]
 800cfe8:	f1a0 0008 	sub.w	r0, r0, #8
 800cfec:	fab0 f080 	clz	r0, r0
 800cff0:	0940      	lsrs	r0, r0, #5
 800cff2:	b005      	add	sp, #20
 800cff4:	f85d fb04 	ldr.w	pc, [sp], #4

0800cff8 <Axis::load_default_step_dir_pin_config(AxisHardwareConfig_t const&, Axis::Config_t*)>:
 800cff8:	6803      	ldr	r3, [r0, #0]
 800cffa:	f8c1 3012 	str.w	r3, [r1, #18]
 800cffe:	4770      	bx	lr

0800d000 <Axis::load_default_can_id(int const&, Axis::Config_t&)>:
 800d000:	6803      	ldr	r3, [r0, #0]
 800d002:	66cb      	str	r3, [r1, #108]	@ 0x6c
 800d004:	4770      	bx	lr
 800d006:	bf00      	nop

0800d008 <Axis::decode_step_dir_pins()>:
 800d008:	68c2      	ldr	r2, [r0, #12]
 800d00a:	8a53      	ldrh	r3, [r2, #18]
 800d00c:	2b06      	cmp	r3, #6
 800d00e:	b410      	push	{r4}
 800d010:	d03b      	beq.n	800d08a <Axis::decode_step_dir_pins()+0x82>
 800d012:	2b08      	cmp	r3, #8
 800d014:	d039      	beq.n	800d08a <Axis::decode_step_dir_pins()+0x82>
 800d016:	2b05      	cmp	r3, #5
 800d018:	d11b      	bne.n	800d052 <Axis::decode_step_dir_pins()+0x4a>
 800d01a:	4b24      	ldr	r3, [pc, #144]	@ (800d0ac <Axis::decode_step_dir_pins()+0xa4>)
 800d01c:	6583      	str	r3, [r0, #88]	@ 0x58
 800d01e:	2110      	movs	r1, #16
 800d020:	8a93      	ldrh	r3, [r2, #20]
 800d022:	f8a0 105c 	strh.w	r1, [r0, #92]	@ 0x5c
 800d026:	2b06      	cmp	r3, #6
 800d028:	d023      	beq.n	800d072 <Axis::decode_step_dir_pins()+0x6a>
 800d02a:	2b08      	cmp	r3, #8
 800d02c:	d021      	beq.n	800d072 <Axis::decode_step_dir_pins()+0x6a>
 800d02e:	2b05      	cmp	r3, #5
 800d030:	d033      	beq.n	800d09a <Axis::decode_step_dir_pins()+0x92>
 800d032:	3b02      	subs	r3, #2
 800d034:	b29b      	uxth	r3, r3
 800d036:	4a1e      	ldr	r2, [pc, #120]	@ (800d0b0 <Axis::decode_step_dir_pins()+0xa8>)
 800d038:	6602      	str	r2, [r0, #96]	@ 0x60
 800d03a:	2b06      	cmp	r3, #6
 800d03c:	bf98      	it	ls
 800d03e:	4a1d      	ldrls	r2, [pc, #116]	@ (800d0b4 <Axis::decode_step_dir_pins()+0xac>)
 800d040:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d044:	bf94      	ite	ls
 800d046:	f832 3013 	ldrhls.w	r3, [r2, r3, lsl #1]
 800d04a:	2301      	movhi	r3, #1
 800d04c:	f8a0 3064 	strh.w	r3, [r0, #100]	@ 0x64
 800d050:	4770      	bx	lr
 800d052:	3b02      	subs	r3, #2
 800d054:	b29b      	uxth	r3, r3
 800d056:	4916      	ldr	r1, [pc, #88]	@ (800d0b0 <Axis::decode_step_dir_pins()+0xa8>)
 800d058:	6581      	str	r1, [r0, #88]	@ 0x58
 800d05a:	2b06      	cmp	r3, #6
 800d05c:	bf9c      	itt	ls
 800d05e:	4915      	ldrls	r1, [pc, #84]	@ (800d0b4 <Axis::decode_step_dir_pins()+0xac>)
 800d060:	f831 1013 	ldrhls.w	r1, [r1, r3, lsl #1]
 800d064:	8a93      	ldrh	r3, [r2, #20]
 800d066:	bf88      	it	hi
 800d068:	2101      	movhi	r1, #1
 800d06a:	2b06      	cmp	r3, #6
 800d06c:	f8a0 105c 	strh.w	r1, [r0, #92]	@ 0x5c
 800d070:	d1db      	bne.n	800d02a <Axis::decode_step_dir_pins()+0x22>
 800d072:	3b02      	subs	r3, #2
 800d074:	490f      	ldr	r1, [pc, #60]	@ (800d0b4 <Axis::decode_step_dir_pins()+0xac>)
 800d076:	4a10      	ldr	r2, [pc, #64]	@ (800d0b8 <Axis::decode_step_dir_pins()+0xb0>)
 800d078:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d07c:	6602      	str	r2, [r0, #96]	@ 0x60
 800d07e:	b29b      	uxth	r3, r3
 800d080:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 800d084:	f8a0 3064 	strh.w	r3, [r0, #100]	@ 0x64
 800d088:	4770      	bx	lr
 800d08a:	3b02      	subs	r3, #2
 800d08c:	4909      	ldr	r1, [pc, #36]	@ (800d0b4 <Axis::decode_step_dir_pins()+0xac>)
 800d08e:	4c0a      	ldr	r4, [pc, #40]	@ (800d0b8 <Axis::decode_step_dir_pins()+0xb0>)
 800d090:	6584      	str	r4, [r0, #88]	@ 0x58
 800d092:	b29b      	uxth	r3, r3
 800d094:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
 800d098:	e7c2      	b.n	800d020 <Axis::decode_step_dir_pins()+0x18>
 800d09a:	4b04      	ldr	r3, [pc, #16]	@ (800d0ac <Axis::decode_step_dir_pins()+0xa4>)
 800d09c:	6603      	str	r3, [r0, #96]	@ 0x60
 800d09e:	2310      	movs	r3, #16
 800d0a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d0a4:	f8a0 3064 	strh.w	r3, [r0, #100]	@ 0x64
 800d0a8:	4770      	bx	lr
 800d0aa:	bf00      	nop
 800d0ac:	40020800 	.word	0x40020800
 800d0b0:	40020000 	.word	0x40020000
 800d0b4:	0802ac28 	.word	0x0802ac28
 800d0b8:	40020400 	.word	0x40020400

0800d0bc <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)>:
 800d0bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0c0:	461d      	mov	r5, r3
 800d0c2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800d0c6:	6483      	str	r3, [r0, #72]	@ 0x48
 800d0c8:	2302      	movs	r3, #2
 800d0ca:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800d0ce:	f8dd 902c 	ldr.w	r9, [sp, #44]	@ 0x2c
 800d0d2:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
 800d0d6:	6041      	str	r1, [r0, #4]
 800d0d8:	f880 3066 	strb.w	r3, [r0, #102]	@ 0x66
 800d0dc:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800d0de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d0e0:	f8dd e03c 	ldr.w	lr, [sp, #60]	@ 0x3c
 800d0e4:	f8dd c040 	ldr.w	ip, [sp, #64]	@ 0x40
 800d0e8:	9f11      	ldr	r7, [sp, #68]	@ 0x44
 800d0ea:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 800d0ec:	61c1      	str	r1, [r0, #28]
 800d0ee:	e9c0 2502 	strd	r2, r5, [r0, #8]
 800d0f2:	2200      	movs	r2, #0
 800d0f4:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
 800d0f8:	6502      	str	r2, [r0, #80]	@ 0x50
 800d0fa:	f880 2054 	strb.w	r2, [r0, #84]	@ 0x54
 800d0fe:	f8c0 2067 	str.w	r2, [r0, #103]	@ 0x67
 800d102:	6341      	str	r1, [r0, #52]	@ 0x34
 800d104:	63c1      	str	r1, [r0, #60]	@ 0x3c
 800d106:	6203      	str	r3, [r0, #32]
 800d108:	6383      	str	r3, [r0, #56]	@ 0x38
 800d10a:	6403      	str	r3, [r0, #64]	@ 0x40
 800d10c:	f8c0 e024 	str.w	lr, [r0, #36]	@ 0x24
 800d110:	f8c0 c028 	str.w	ip, [r0, #40]	@ 0x28
 800d114:	f8c0 a010 	str.w	sl, [r0, #16]
 800d118:	f8c0 9014 	str.w	r9, [r0, #20]
 800d11c:	f8c0 8018 	str.w	r8, [r0, #24]
 800d120:	62c7      	str	r7, [r0, #44]	@ 0x2c
 800d122:	6306      	str	r6, [r0, #48]	@ 0x30
 800d124:	f8a0 207c 	strh.w	r2, [r0, #124]	@ 0x7c
 800d128:	f8ca 0010 	str.w	r0, [sl, #16]
 800d12c:	f8c9 0000 	str.w	r0, [r9]
 800d130:	f8c8 0010 	str.w	r0, [r8, #16]
 800d134:	6248      	str	r0, [r1, #36]	@ 0x24
 800d136:	6258      	str	r0, [r3, #36]	@ 0x24
 800d138:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800d13a:	4e19      	ldr	r6, [pc, #100]	@ (800d1a0 <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)+0xe4>)
 800d13c:	f8ce 0024 	str.w	r0, [lr, #36]	@ 0x24
 800d140:	f100 0b67 	add.w	fp, r0, #103	@ 0x67
 800d144:	f8cc 0000 	str.w	r0, [ip]
 800d148:	e9c0 2220 	strd	r2, r2, [r0, #128]	@ 0x80
 800d14c:	6078      	str	r0, [r7, #4]
 800d14e:	6006      	str	r6, [r0, #0]
 800d150:	f8c0 206b 	str.w	r2, [r0, #107]	@ 0x6b
 800d154:	f8a0 206f 	strh.w	r2, [r0, #111]	@ 0x6f
 800d158:	f8c0 b074 	str.w	fp, [r0, #116]	@ 0x74
 800d15c:	6782      	str	r2, [r0, #120]	@ 0x78
 800d15e:	6058      	str	r0, [r3, #4]
 800d160:	f7ff ff52 	bl	800d008 <Axis::decode_step_dir_pins()>
 800d164:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 800d1a4 <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)+0xe8>
 800d168:	edd5 6a03 	vldr	s13, [r5, #12]
 800d16c:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 800d1a8 <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)+0xec>
 800d170:	ed9f 6a0e 	vldr	s12, [pc, #56]	@ 800d1ac <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)+0xf0>
 800d174:	eef4 6ac7 	vcmpe.f32	s13, s14
 800d178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d17c:	bf58      	it	pl
 800d17e:	eeb0 7a66 	vmovpl.f32	s14, s13
 800d182:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d18a:	bfd8      	it	le
 800d18c:	eef0 7a47 	vmovle.f32	s15, s14
 800d190:	ee67 7a86 	vmul.f32	s15, s15, s12
 800d194:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800d198:	edc0 7a22 	vstr	s15, [r0, #136]	@ 0x88
 800d19c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1a0:	0802ac74 	.word	0x0802ac74
 800d1a4:	00000000 	.word	0x00000000
 800d1a8:	49030e30 	.word	0x49030e30
 800d1ac:	45fa0000 	.word	0x45fa0000

0800d1b0 <Axis::set_step_dir_active(bool)>:
 800d1b0:	b510      	push	{r4, lr}
 800d1b2:	4604      	mov	r4, r0
 800d1b4:	b088      	sub	sp, #32
 800d1b6:	b1b1      	cbz	r1, 800d1e6 <Axis::set_step_dir_active(bool)+0x36>
 800d1b8:	f8b0 2064 	ldrh.w	r2, [r0, #100]	@ 0x64
 800d1bc:	6e00      	ldr	r0, [r0, #96]	@ 0x60
 800d1be:	2300      	movs	r3, #0
 800d1c0:	a903      	add	r1, sp, #12
 800d1c2:	e9cd 2303 	strd	r2, r3, [sp, #12]
 800d1c6:	9305      	str	r3, [sp, #20]
 800d1c8:	f7fc ffa6 	bl	800a118 <HAL_GPIO_Init>
 800d1cc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 800d1d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d1d2:	4b0a      	ldr	r3, [pc, #40]	@ (800d1fc <Axis::set_step_dir_active(bool)+0x4c>)
 800d1d4:	9400      	str	r4, [sp, #0]
 800d1d6:	2202      	movs	r2, #2
 800d1d8:	f7fb f828 	bl	800822c <GPIO_subscribe>
 800d1dc:	2301      	movs	r3, #1
 800d1de:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800d1e2:	b008      	add	sp, #32
 800d1e4:	bd10      	pop	{r4, pc}
 800d1e6:	460b      	mov	r3, r1
 800d1e8:	f8b0 105c 	ldrh.w	r1, [r0, #92]	@ 0x5c
 800d1ec:	6d80      	ldr	r0, [r0, #88]	@ 0x58
 800d1ee:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 800d1f2:	b008      	add	sp, #32
 800d1f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1f8:	f7fb b87c 	b.w	80082f4 <GPIO_unsubscribe>
 800d1fc:	0800cec9 	.word	0x0800cec9

0800d200 <Axis::do_checks()>:
 800d200:	4b35      	ldr	r3, [pc, #212]	@ (800d2d8 <Axis::do_checks()+0xd8>)
 800d202:	781b      	ldrb	r3, [r3, #0]
 800d204:	b510      	push	{r4, lr}
 800d206:	4604      	mov	r4, r0
 800d208:	2b00      	cmp	r3, #0
 800d20a:	d035      	beq.n	800d278 <Axis::do_checks()+0x78>
 800d20c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d20e:	781b      	ldrb	r3, [r3, #0]
 800d210:	2b01      	cmp	r3, #1
 800d212:	d003      	beq.n	800d21c <Axis::do_checks()+0x1c>
 800d214:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d216:	f893 3066 	ldrb.w	r3, [r3, #102]	@ 0x66
 800d21a:	b33b      	cbz	r3, 800d26c <Axis::do_checks()+0x6c>
 800d21c:	4b2f      	ldr	r3, [pc, #188]	@ (800d2dc <Axis::do_checks()+0xdc>)
 800d21e:	4a30      	ldr	r2, [pc, #192]	@ (800d2e0 <Axis::do_checks()+0xe0>)
 800d220:	edd3 7a00 	vldr	s15, [r3]
 800d224:	ed92 7a28 	vldr	s14, [r2, #160]	@ 0xa0
 800d228:	eeb4 7a67 	vcmp.f32	s14, s15
 800d22c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d230:	d83c      	bhi.n	800d2ac <Axis::do_checks()+0xac>
 800d232:	ed92 7a29 	vldr	s14, [r2, #164]	@ 0xa4
 800d236:	eef4 7a47 	vcmp.f32	s15, s14
 800d23a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d23e:	d82f      	bhi.n	800d2a0 <Axis::do_checks()+0xa0>
 800d240:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800d242:	f001 fe6b 	bl	800ef1c <ThermistorCurrentLimiter::do_checks()>
 800d246:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800d248:	f001 fe68 	bl	800ef1c <ThermistorCurrentLimiter::do_checks()>
 800d24c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d24e:	f001 f8a9 	bl	800e3a4 <Motor::do_checks()>
 800d252:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800d254:	6803      	ldr	r3, [r0, #0]
 800d256:	7a9b      	ldrb	r3, [r3, #10]
 800d258:	b99b      	cbnz	r3, 800d282 <Axis::do_checks()+0x82>
 800d25a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d25c:	6803      	ldr	r3, [r0, #0]
 800d25e:	7a9b      	ldrb	r3, [r3, #10]
 800d260:	bb53      	cbnz	r3, 800d2b8 <Axis::do_checks()+0xb8>
 800d262:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800d264:	fab0 f080 	clz	r0, r0
 800d268:	0940      	lsrs	r0, r0, #5
 800d26a:	bd10      	pop	{r4, pc}
 800d26c:	2120      	movs	r1, #32
 800d26e:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d272:	f7ff fe25 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d276:	e7d1      	b.n	800d21c <Axis::do_checks()+0x1c>
 800d278:	2110      	movs	r1, #16
 800d27a:	3050      	adds	r0, #80	@ 0x50
 800d27c:	f7ff fe20 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d280:	e7c4      	b.n	800d20c <Axis::do_checks()+0xc>
 800d282:	f002 fe9d 	bl	800ffc0 <Endstop::get_state()>
 800d286:	2800      	cmp	r0, #0
 800d288:	d0e7      	beq.n	800d25a <Axis::do_checks()+0x5a>
 800d28a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d28c:	781b      	ldrb	r3, [r3, #0]
 800d28e:	2b0b      	cmp	r3, #11
 800d290:	d0e3      	beq.n	800d25a <Axis::do_checks()+0x5a>
 800d292:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800d296:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d29a:	f7ff fe11 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d29e:	e7e0      	b.n	800d262 <Axis::do_checks()+0x62>
 800d2a0:	2104      	movs	r1, #4
 800d2a2:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d2a6:	f7ff fe0b 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d2aa:	e7c9      	b.n	800d240 <Axis::do_checks()+0x40>
 800d2ac:	2102      	movs	r1, #2
 800d2ae:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d2b2:	f7ff fe05 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d2b6:	e7bc      	b.n	800d232 <Axis::do_checks()+0x32>
 800d2b8:	f002 fe82 	bl	800ffc0 <Endstop::get_state()>
 800d2bc:	2800      	cmp	r0, #0
 800d2be:	d0d0      	beq.n	800d262 <Axis::do_checks()+0x62>
 800d2c0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d2c2:	781b      	ldrb	r3, [r3, #0]
 800d2c4:	2b0b      	cmp	r3, #11
 800d2c6:	d0cc      	beq.n	800d262 <Axis::do_checks()+0x62>
 800d2c8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800d2cc:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d2d0:	f7ff fdf6 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d2d4:	e7c5      	b.n	800d262 <Axis::do_checks()+0x62>
 800d2d6:	bf00      	nop
 800d2d8:	2000182d 	.word	0x2000182d
 800d2dc:	20000200 	.word	0x20000200
 800d2e0:	20001840 	.word	0x20001840

0800d2e4 <Axis::do_updates()>:
 800d2e4:	b570      	push	{r4, r5, r6, lr}
 800d2e6:	4604      	mov	r4, r0
 800d2e8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 800d2ea:	4e10      	ldr	r6, [pc, #64]	@ (800d32c <Axis::do_updates()+0x48>)
 800d2ec:	f001 fe02 	bl	800eef4 <ThermistorCurrentLimiter::update()>
 800d2f0:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800d2f2:	f001 fdff 	bl	800eef4 <ThermistorCurrentLimiter::update()>
 800d2f6:	6920      	ldr	r0, [r4, #16]
 800d2f8:	f002 fc00 	bl	800fafc <Encoder::update()>
 800d2fc:	6960      	ldr	r0, [r4, #20]
 800d2fe:	f003 fb01 	bl	8010904 <SensorlessEstimator::update()>
 800d302:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800d304:	f002 fe02 	bl	800ff0c <Endstop::update()>
 800d308:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800d30a:	f002 fdff 	bl	800ff0c <Endstop::update()>
 800d30e:	6d25      	ldr	r5, [r4, #80]	@ 0x50
 800d310:	6830      	ldr	r0, [r6, #0]
 800d312:	4621      	mov	r1, r4
 800d314:	fab5 f585 	clz	r5, r5
 800d318:	f014 fa7c 	bl	8021814 <ODriveCAN::send_heartbeat(Axis*)>
 800d31c:	096d      	lsrs	r5, r5, #5
 800d31e:	6830      	ldr	r0, [r6, #0]
 800d320:	4621      	mov	r1, r4
 800d322:	f014 fa93 	bl	802184c <ODriveCAN::get_encoder_estimates_callback(Axis*)>
 800d326:	4628      	mov	r0, r5
 800d328:	bd70      	pop	{r4, r5, r6, pc}
 800d32a:	bf00      	nop
 800d32c:	200019c8 	.word	0x200019c8

0800d330 <Axis::watchdog_check()>:
 800d330:	b508      	push	{r3, lr}
 800d332:	68c3      	ldr	r3, [r0, #12]
 800d334:	7c1b      	ldrb	r3, [r3, #16]
 800d336:	b12b      	cbz	r3, 800d344 <Axis::watchdog_check()+0x14>
 800d338:	f8d0 2088 	ldr.w	r2, [r0, #136]	@ 0x88
 800d33c:	b122      	cbz	r2, 800d348 <Axis::watchdog_check()+0x18>
 800d33e:	3a01      	subs	r2, #1
 800d340:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
 800d344:	2001      	movs	r0, #1
 800d346:	bd08      	pop	{r3, pc}
 800d348:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d34c:	3050      	adds	r0, #80	@ 0x50
 800d34e:	f7ff fdb7 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d352:	4610      	mov	r0, r2
 800d354:	bd08      	pop	{r3, pc}
 800d356:	bf00      	nop

0800d358 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)>:
 800d358:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d35a:	ed2d 8b08 	vpush	{d8-d11}
 800d35e:	ed9f 8a9f 	vldr	s16, [pc, #636]	@ 800d5dc <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x284>
 800d362:	eddf 8aa0 	vldr	s17, [pc, #640]	@ 800d5e4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x28c>
 800d366:	ed9f aaa0 	vldr	s20, [pc, #640]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d36a:	eddf 9a9d 	vldr	s19, [pc, #628]	@ 800d5e0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x288>
 800d36e:	2301      	movs	r3, #1
 800d370:	b085      	sub	sp, #20
 800d372:	4604      	mov	r4, r0
 800d374:	eeb0 9a48 	vmov.f32	s18, s16
 800d378:	460d      	mov	r5, r1
 800d37a:	f880 307c 	strb.w	r3, [r0, #124]	@ 0x7c
 800d37e:	f100 0750 	add.w	r7, r0, #80	@ 0x50
 800d382:	f894 6066 	ldrb.w	r6, [r4, #102]	@ 0x66
 800d386:	2e00      	cmp	r6, #0
 800d388:	d15b      	bne.n	800d442 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0xea>
 800d38a:	4620      	mov	r0, r4
 800d38c:	f7ff ff38 	bl	800d200 <Axis::do_checks()>
 800d390:	4606      	mov	r6, r0
 800d392:	4620      	mov	r0, r4
 800d394:	f7ff ffa6 	bl	800d2e4 <Axis::do_updates()>
 800d398:	68e3      	ldr	r3, [r4, #12]
 800d39a:	7c1b      	ldrb	r3, [r3, #16]
 800d39c:	b13b      	cbz	r3, 800d3ae <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x56>
 800d39e:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800d3a2:	2b00      	cmp	r3, #0
 800d3a4:	f000 819a 	beq.w	800d6dc <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x384>
 800d3a8:	3b01      	subs	r3, #1
 800d3aa:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800d3ae:	b106      	cbz	r6, 800d3b2 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x5a>
 800d3b0:	b918      	cbnz	r0, 800d3ba <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x62>
 800d3b2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d3b4:	781b      	ldrb	r3, [r3, #0]
 800d3b6:	2b01      	cmp	r3, #1
 800d3b8:	d141      	bne.n	800d43e <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0xe6>
 800d3ba:	edd5 7a02 	vldr	s15, [r5, #8]
 800d3be:	eddf 0a8a 	vldr	s1, [pc, #552]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d3c2:	eeb0 0a68 	vmov.f32	s0, s17
 800d3c6:	eea7 0a88 	vfma.f32	s0, s15, s16
 800d3ca:	f015 fd11 	bl	8022df0 <fmodf>
 800d3ce:	edd5 7a01 	vldr	s15, [r5, #4]
 800d3d2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d3d4:	edd5 6a00 	vldr	s13, [r5]
 800d3d8:	6a03      	ldr	r3, [r0, #32]
 800d3da:	ee89 7aa7 	vdiv.f32	s14, s19, s15
 800d3de:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800d3e2:	edd3 7a06 	vldr	s15, [r3, #24]
 800d3e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d3ea:	bf48      	it	mi
 800d3ec:	ee30 0a0a 	vaddmi.f32	s0, s0, s20
 800d3f0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d3f4:	ee70 0a68 	vsub.f32	s1, s0, s17
 800d3f8:	eeb0 1a49 	vmov.f32	s2, s18
 800d3fc:	ee27 0a88 	vmul.f32	s0, s15, s16
 800d400:	ee38 8a07 	vadd.f32	s16, s16, s14
 800d404:	f001 fc20 	bl	800ec48 <Motor::update(float, float, float)>
 800d408:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d40a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800d40e:	3301      	adds	r3, #1
 800d410:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800d414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d418:	4606      	mov	r6, r0
 800d41a:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d41c:	f04f 0202 	mov.w	r2, #2
 800d420:	f04f 0101 	mov.w	r1, #1
 800d424:	a801      	add	r0, sp, #4
 800d426:	f006 0601 	and.w	r6, r6, #1
 800d42a:	bf58      	it	pl
 800d42c:	2600      	movpl	r6, #0
 800d42e:	f7fa fb2d 	bl	8007a8c <osSignalWait>
 800d432:	9b01      	ldr	r3, [sp, #4]
 800d434:	2b08      	cmp	r3, #8
 800d436:	f040 81c6 	bne.w	800d7c6 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x46e>
 800d43a:	2e00      	cmp	r6, #0
 800d43c:	d1a1      	bne.n	800d382 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x2a>
 800d43e:	f894 6066 	ldrb.w	r6, [r4, #102]	@ 0x66
 800d442:	edd5 9a02 	vldr	s19, [r5, #8]
 800d446:	ed9f 8a68 	vldr	s16, [pc, #416]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d44a:	ed9f 0a66 	vldr	s0, [pc, #408]	@ 800d5e4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x28c>
 800d44e:	ed9f aa65 	vldr	s20, [pc, #404]	@ 800d5e4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x28c>
 800d452:	ed9f 9a63 	vldr	s18, [pc, #396]	@ 800d5e0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x288>
 800d456:	eddf aa64 	vldr	s21, [pc, #400]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d45a:	eef0 0a48 	vmov.f32	s1, s16
 800d45e:	ee39 0a80 	vadd.f32	s0, s19, s0
 800d462:	f015 fcc5 	bl	8022df0 <fmodf>
 800d466:	edd5 7a01 	vldr	s15, [r5, #4]
 800d46a:	eec9 8aa7 	vdiv.f32	s17, s19, s15
 800d46e:	2302      	movs	r3, #2
 800d470:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
 800d474:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800d478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d47c:	bf48      	it	mi
 800d47e:	ee30 0a08 	vaddmi.f32	s0, s0, s16
 800d482:	ee30 8a4a 	vsub.f32	s16, s0, s20
 800d486:	2e00      	cmp	r6, #0
 800d488:	f040 808a 	bne.w	800d5a0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x248>
 800d48c:	4620      	mov	r0, r4
 800d48e:	f7ff feb7 	bl	800d200 <Axis::do_checks()>
 800d492:	4606      	mov	r6, r0
 800d494:	4620      	mov	r0, r4
 800d496:	f7ff ff25 	bl	800d2e4 <Axis::do_updates()>
 800d49a:	68e3      	ldr	r3, [r4, #12]
 800d49c:	7c1b      	ldrb	r3, [r3, #16]
 800d49e:	b13b      	cbz	r3, 800d4b0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x158>
 800d4a0:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800d4a4:	2b00      	cmp	r3, #0
 800d4a6:	f000 811f 	beq.w	800d6e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x390>
 800d4aa:	3b01      	subs	r3, #1
 800d4ac:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800d4b0:	b106      	cbz	r6, 800d4b4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x15c>
 800d4b2:	b918      	cbnz	r0, 800d4bc <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x164>
 800d4b4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d4b6:	781b      	ldrb	r3, [r3, #0]
 800d4b8:	2b01      	cmp	r3, #1
 800d4ba:	d171      	bne.n	800d5a0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x248>
 800d4bc:	edd5 7a03 	vldr	s15, [r5, #12]
 800d4c0:	eddf 0a49 	vldr	s1, [pc, #292]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d4c4:	eee7 8a89 	vfma.f32	s17, s15, s18
 800d4c8:	ee38 0a0a 	vadd.f32	s0, s16, s20
 800d4cc:	eee8 9a89 	vfma.f32	s19, s17, s18
 800d4d0:	eea8 0a89 	vfma.f32	s0, s17, s18
 800d4d4:	f015 fc8c 	bl	8022df0 <fmodf>
 800d4d8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800d4dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d4e0:	d501      	bpl.n	800d4e6 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x18e>
 800d4e2:	ee30 0a2a 	vadd.f32	s0, s0, s21
 800d4e6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d4e8:	edd5 7a00 	vldr	s15, [r5]
 800d4ec:	6a03      	ldr	r3, [r0, #32]
 800d4ee:	ee30 8a4a 	vsub.f32	s16, s0, s20
 800d4f2:	ed93 0a06 	vldr	s0, [r3, #24]
 800d4f6:	eeb0 1a68 	vmov.f32	s2, s17
 800d4fa:	ee20 0a27 	vmul.f32	s0, s0, s15
 800d4fe:	eef0 0a48 	vmov.f32	s1, s16
 800d502:	f001 fba1 	bl	800ec48 <Motor::update(float, float, float)>
 800d506:	2800      	cmp	r0, #0
 800d508:	d035      	beq.n	800d576 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x21e>
 800d50a:	edd5 7a04 	vldr	s15, [r5, #16]
 800d50e:	eeb0 7ae8 	vabs.f32	s14, s17
 800d512:	eef0 7ae7 	vabs.f32	s15, s15
 800d516:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d51a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d51e:	da1e      	bge.n	800d55e <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x206>
 800d520:	7e6b      	ldrb	r3, [r5, #25]
 800d522:	b153      	cbz	r3, 800d53a <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x1e2>
 800d524:	edd5 7a05 	vldr	s15, [r5, #20]
 800d528:	eeb0 7ae9 	vabs.f32	s14, s19
 800d52c:	eef0 7ae7 	vabs.f32	s15, s15
 800d530:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d538:	da11      	bge.n	800d55e <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x206>
 800d53a:	7eab      	ldrb	r3, [r5, #26]
 800d53c:	2b00      	cmp	r3, #0
 800d53e:	f040 80da 	bne.w	800d6f6 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x39e>
 800d542:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d544:	3301      	adds	r3, #1
 800d546:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d548:	2202      	movs	r2, #2
 800d54a:	2101      	movs	r1, #1
 800d54c:	a801      	add	r0, sp, #4
 800d54e:	f7fa fa9d 	bl	8007a8c <osSignalWait>
 800d552:	9b01      	ldr	r3, [sp, #4]
 800d554:	2b08      	cmp	r3, #8
 800d556:	d119      	bne.n	800d58c <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x234>
 800d558:	f894 6066 	ldrb.w	r6, [r4, #102]	@ 0x66
 800d55c:	e793      	b.n	800d486 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x12e>
 800d55e:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d560:	3301      	adds	r3, #1
 800d562:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d564:	2202      	movs	r2, #2
 800d566:	2101      	movs	r1, #1
 800d568:	a801      	add	r0, sp, #4
 800d56a:	f7fa fa8f 	bl	8007a8c <osSignalWait>
 800d56e:	9b01      	ldr	r3, [sp, #4]
 800d570:	2b08      	cmp	r3, #8
 800d572:	d015      	beq.n	800d5a0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x248>
 800d574:	e00a      	b.n	800d58c <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x234>
 800d576:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d578:	3301      	adds	r3, #1
 800d57a:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d57c:	2202      	movs	r2, #2
 800d57e:	2101      	movs	r1, #1
 800d580:	a801      	add	r0, sp, #4
 800d582:	f7fa fa83 	bl	8007a8c <osSignalWait>
 800d586:	9b01      	ldr	r3, [sp, #4]
 800d588:	2b08      	cmp	r3, #8
 800d58a:	d009      	beq.n	800d5a0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x248>
 800d58c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d58e:	f7fe fb47 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800d592:	f7fe ff31 	bl	800c3f8 <update_brake_current>
 800d596:	2108      	movs	r1, #8
 800d598:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d59c:	f7ff fc90 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d5a0:	6920      	ldr	r0, [r4, #16]
 800d5a2:	7d83      	ldrb	r3, [r0, #22]
 800d5a4:	2b00      	cmp	r3, #0
 800d5a6:	f000 810a 	beq.w	800d7be <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x466>
 800d5aa:	7e2b      	ldrb	r3, [r5, #24]
 800d5ac:	b1f3      	cbz	r3, 800d5ec <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x294>
 800d5ae:	edd5 7a04 	vldr	s15, [r5, #16]
 800d5b2:	eef0 8ae8 	vabs.f32	s17, s17
 800d5b6:	eef0 7ae7 	vabs.f32	s15, s15
 800d5ba:	eef4 8ae7 	vcmpe.f32	s17, s15
 800d5be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5c2:	db13      	blt.n	800d5ec <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x294>
 800d5c4:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800d5c6:	fab0 f080 	clz	r0, r0
 800d5ca:	2300      	movs	r3, #0
 800d5cc:	0940      	lsrs	r0, r0, #5
 800d5ce:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
 800d5d2:	b005      	add	sp, #20
 800d5d4:	ecbd 8b08 	vpop	{d8-d11}
 800d5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d5da:	bf00      	nop
 800d5dc:	00000000 	.word	0x00000000
 800d5e0:	3903126f 	.word	0x3903126f
 800d5e4:	40490fdb 	.word	0x40490fdb
 800d5e8:	40c90fdb 	.word	0x40c90fdb
 800d5ec:	7e6b      	ldrb	r3, [r5, #25]
 800d5ee:	b153      	cbz	r3, 800d606 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x2ae>
 800d5f0:	edd5 7a05 	vldr	s15, [r5, #20]
 800d5f4:	eeb0 7ae9 	vabs.f32	s14, s19
 800d5f8:	eef0 7ae7 	vabs.f32	s15, s15
 800d5fc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d604:	dade      	bge.n	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d606:	7eab      	ldrb	r3, [r5, #26]
 800d608:	2b00      	cmp	r3, #0
 800d60a:	f040 8086 	bne.w	800d71a <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x3c2>
 800d60e:	edd5 8a04 	vldr	s17, [r5, #16]
 800d612:	ed5f aa0d 	vldr	s21, [pc, #-52]	@ 800d5e0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x288>
 800d616:	ed1f 9a0d 	vldr	s18, [pc, #-52]	@ 800d5e4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x28c>
 800d61a:	ed1f ba0d 	vldr	s22, [pc, #-52]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d61e:	ee68 aaaa 	vmul.f32	s21, s17, s21
 800d622:	2303      	movs	r3, #3
 800d624:	ee3a aa89 	vadd.f32	s20, s21, s18
 800d628:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
 800d62c:	f104 0750 	add.w	r7, r4, #80	@ 0x50
 800d630:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800d634:	2b00      	cmp	r3, #0
 800d636:	d1c5      	bne.n	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d638:	4620      	mov	r0, r4
 800d63a:	f7ff fde1 	bl	800d200 <Axis::do_checks()>
 800d63e:	4606      	mov	r6, r0
 800d640:	4620      	mov	r0, r4
 800d642:	f7ff fe4f 	bl	800d2e4 <Axis::do_updates()>
 800d646:	68e3      	ldr	r3, [r4, #12]
 800d648:	7c1b      	ldrb	r3, [r3, #16]
 800d64a:	b13b      	cbz	r3, 800d65c <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x304>
 800d64c:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800d650:	2b00      	cmp	r3, #0
 800d652:	f000 80ae 	beq.w	800d7b2 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x45a>
 800d656:	3b01      	subs	r3, #1
 800d658:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800d65c:	b106      	cbz	r6, 800d660 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x308>
 800d65e:	b918      	cbnz	r0, 800d668 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x310>
 800d660:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d662:	781b      	ldrb	r3, [r3, #0]
 800d664:	2b01      	cmp	r3, #1
 800d666:	d1ad      	bne.n	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d668:	ed5f 0a21 	vldr	s1, [pc, #-132]	@ 800d5e8 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x290>
 800d66c:	ee38 0a0a 	vadd.f32	s0, s16, s20
 800d670:	f015 fbbe 	bl	8022df0 <fmodf>
 800d674:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800d678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d67c:	d501      	bpl.n	800d682 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x32a>
 800d67e:	ee30 0a0b 	vadd.f32	s0, s0, s22
 800d682:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d684:	edd5 7a00 	vldr	s15, [r5]
 800d688:	6a03      	ldr	r3, [r0, #32]
 800d68a:	ee30 8a49 	vsub.f32	s16, s0, s18
 800d68e:	ed93 0a06 	vldr	s0, [r3, #24]
 800d692:	eeb0 1a68 	vmov.f32	s2, s17
 800d696:	ee20 0a27 	vmul.f32	s0, s0, s15
 800d69a:	eef0 0a48 	vmov.f32	s1, s16
 800d69e:	f001 fad3 	bl	800ec48 <Motor::update(float, float, float)>
 800d6a2:	2800      	cmp	r0, #0
 800d6a4:	d05d      	beq.n	800d762 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x40a>
 800d6a6:	7e2b      	ldrb	r3, [r5, #24]
 800d6a8:	2b00      	cmp	r3, #0
 800d6aa:	d03c      	beq.n	800d726 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x3ce>
 800d6ac:	edd5 7a04 	vldr	s15, [r5, #16]
 800d6b0:	eeb0 7ae8 	vabs.f32	s14, s17
 800d6b4:	eef0 7ae7 	vabs.f32	s15, s15
 800d6b8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d6bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d6c0:	db31      	blt.n	800d726 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x3ce>
 800d6c2:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d6c4:	3301      	adds	r3, #1
 800d6c6:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d6c8:	2202      	movs	r2, #2
 800d6ca:	2101      	movs	r1, #1
 800d6cc:	a801      	add	r0, sp, #4
 800d6ce:	f7fa f9dd 	bl	8007a8c <osSignalWait>
 800d6d2:	9b01      	ldr	r3, [sp, #4]
 800d6d4:	2b08      	cmp	r3, #8
 800d6d6:	f43f af75 	beq.w	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d6da:	e04e      	b.n	800d77a <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x422>
 800d6dc:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d6e0:	4638      	mov	r0, r7
 800d6e2:	f7ff fbed 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d6e6:	e664      	b.n	800d3b2 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x5a>
 800d6e8:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d6ec:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d6f0:	f7ff fbe6 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d6f4:	e6de      	b.n	800d4b4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x15c>
 800d6f6:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d6f8:	6922      	ldr	r2, [r4, #16]
 800d6fa:	3301      	adds	r3, #1
 800d6fc:	7d96      	ldrb	r6, [r2, #22]
 800d6fe:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d700:	2202      	movs	r2, #2
 800d702:	2101      	movs	r1, #1
 800d704:	a801      	add	r0, sp, #4
 800d706:	f7fa f9c1 	bl	8007a8c <osSignalWait>
 800d70a:	9b01      	ldr	r3, [sp, #4]
 800d70c:	2b08      	cmp	r3, #8
 800d70e:	f47f af3d 	bne.w	800d58c <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x234>
 800d712:	2e00      	cmp	r6, #0
 800d714:	f43f af20 	beq.w	800d558 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x200>
 800d718:	e742      	b.n	800d5a0 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x248>
 800d71a:	6923      	ldr	r3, [r4, #16]
 800d71c:	7d9b      	ldrb	r3, [r3, #22]
 800d71e:	2b00      	cmp	r3, #0
 800d720:	f47f af50 	bne.w	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d724:	e773      	b.n	800d60e <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x2b6>
 800d726:	7e6b      	ldrb	r3, [r5, #25]
 800d728:	ee79 9aaa 	vadd.f32	s19, s19, s21
 800d72c:	b153      	cbz	r3, 800d744 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x3ec>
 800d72e:	edd5 7a05 	vldr	s15, [r5, #20]
 800d732:	eeb0 7ae9 	vabs.f32	s14, s19
 800d736:	eef0 7ae7 	vabs.f32	s15, s15
 800d73a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d73e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d742:	dabe      	bge.n	800d6c2 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x36a>
 800d744:	7eab      	ldrb	r3, [r5, #26]
 800d746:	bb1b      	cbnz	r3, 800d790 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x438>
 800d748:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d74a:	3301      	adds	r3, #1
 800d74c:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d74e:	2202      	movs	r2, #2
 800d750:	2101      	movs	r1, #1
 800d752:	a801      	add	r0, sp, #4
 800d754:	f7fa f99a 	bl	8007a8c <osSignalWait>
 800d758:	9b01      	ldr	r3, [sp, #4]
 800d75a:	2b08      	cmp	r3, #8
 800d75c:	f43f af68 	beq.w	800d630 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x2d8>
 800d760:	e00b      	b.n	800d77a <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x422>
 800d762:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d764:	3301      	adds	r3, #1
 800d766:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d768:	2202      	movs	r2, #2
 800d76a:	2101      	movs	r1, #1
 800d76c:	a801      	add	r0, sp, #4
 800d76e:	f7fa f98d 	bl	8007a8c <osSignalWait>
 800d772:	9b01      	ldr	r3, [sp, #4]
 800d774:	2b08      	cmp	r3, #8
 800d776:	f43f af25 	beq.w	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d77a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d77c:	f7fe fa50 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800d780:	f7fe fe3a 	bl	800c3f8 <update_brake_current>
 800d784:	2108      	movs	r1, #8
 800d786:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d78a:	f7ff fb99 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d78e:	e719      	b.n	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d790:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d792:	6922      	ldr	r2, [r4, #16]
 800d794:	3301      	adds	r3, #1
 800d796:	7d96      	ldrb	r6, [r2, #22]
 800d798:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d79a:	2202      	movs	r2, #2
 800d79c:	2101      	movs	r1, #1
 800d79e:	a801      	add	r0, sp, #4
 800d7a0:	f7fa f974 	bl	8007a8c <osSignalWait>
 800d7a4:	9b01      	ldr	r3, [sp, #4]
 800d7a6:	2b08      	cmp	r3, #8
 800d7a8:	d1e7      	bne.n	800d77a <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x422>
 800d7aa:	2e00      	cmp	r6, #0
 800d7ac:	f43f af40 	beq.w	800d630 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x2d8>
 800d7b0:	e708      	b.n	800d5c4 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x26c>
 800d7b2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d7b6:	4638      	mov	r0, r7
 800d7b8:	f7ff fb82 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d7bc:	e750      	b.n	800d660 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x308>
 800d7be:	2101      	movs	r1, #1
 800d7c0:	f001 fd10 	bl	800f1e4 <Encoder::set_idx_subscribe(bool)>
 800d7c4:	e6f1      	b.n	800d5aa <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0x252>
 800d7c6:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d7c8:	f7fe fa2a 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800d7cc:	f7fe fe14 	bl	800c3f8 <update_brake_current>
 800d7d0:	2108      	movs	r1, #8
 800d7d2:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d7d6:	f7ff fb73 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d7da:	e630      	b.n	800d43e <Axis::run_lockin_spin(Axis::LockinConfig_t const&)+0xe6>

0800d7dc <Axis::run_sensorless_control_loop()>:
 800d7dc:	b570      	push	{r4, r5, r6, lr}
 800d7de:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
 800d7e2:	4604      	mov	r4, r0
 800d7e4:	2100      	movs	r1, #0
 800d7e6:	f102 0014 	add.w	r0, r2, #20
 800d7ea:	b084      	sub	sp, #16
 800d7ec:	e9c3 1106 	strd	r1, r1, [r3, #24]
 800d7f0:	e9c3 1008 	strd	r1, r0, [r3, #32]
 800d7f4:	321c      	adds	r2, #28
 800d7f6:	629a      	str	r2, [r3, #40]	@ 0x28
 800d7f8:	f104 0650 	add.w	r6, r4, #80	@ 0x50
 800d7fc:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800d800:	2b00      	cmp	r3, #0
 800d802:	d136      	bne.n	800d872 <Axis::run_sensorless_control_loop()+0x96>
 800d804:	4620      	mov	r0, r4
 800d806:	f7ff fcfb 	bl	800d200 <Axis::do_checks()>
 800d80a:	4605      	mov	r5, r0
 800d80c:	4620      	mov	r0, r4
 800d80e:	f7ff fd69 	bl	800d2e4 <Axis::do_updates()>
 800d812:	68e3      	ldr	r3, [r4, #12]
 800d814:	7c1b      	ldrb	r3, [r3, #16]
 800d816:	b133      	cbz	r3, 800d826 <Axis::run_sensorless_control_loop()+0x4a>
 800d818:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800d81c:	2b00      	cmp	r3, #0
 800d81e:	d047      	beq.n	800d8b0 <Axis::run_sensorless_control_loop()+0xd4>
 800d820:	3b01      	subs	r3, #1
 800d822:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800d826:	b105      	cbz	r5, 800d82a <Axis::run_sensorless_control_loop()+0x4e>
 800d828:	b918      	cbnz	r0, 800d832 <Axis::run_sensorless_control_loop()+0x56>
 800d82a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d82c:	781b      	ldrb	r3, [r3, #0]
 800d82e:	2b01      	cmp	r3, #1
 800d830:	d11f      	bne.n	800d872 <Axis::run_sensorless_control_loop()+0x96>
 800d832:	69a0      	ldr	r0, [r4, #24]
 800d834:	a901      	add	r1, sp, #4
 800d836:	f002 fd65 	bl	8010304 <Controller::update(float*)>
 800d83a:	bb00      	cbnz	r0, 800d87e <Axis::run_sensorless_control_loop()+0xa2>
 800d83c:	f104 0550 	add.w	r5, r4, #80	@ 0x50
 800d840:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800d844:	4628      	mov	r0, r5
 800d846:	f7ff fb3b 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d84a:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d84c:	2101      	movs	r1, #1
 800d84e:	440b      	add	r3, r1
 800d850:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d852:	2202      	movs	r2, #2
 800d854:	a801      	add	r0, sp, #4
 800d856:	f7fa f919 	bl	8007a8c <osSignalWait>
 800d85a:	9b01      	ldr	r3, [sp, #4]
 800d85c:	2b08      	cmp	r3, #8
 800d85e:	d008      	beq.n	800d872 <Axis::run_sensorless_control_loop()+0x96>
 800d860:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d862:	f7fe f9dd 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800d866:	f7fe fdc7 	bl	800c3f8 <update_brake_current>
 800d86a:	2108      	movs	r1, #8
 800d86c:	4628      	mov	r0, r5
 800d86e:	f7ff fb27 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d872:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800d874:	fab0 f080 	clz	r0, r0
 800d878:	0940      	lsrs	r0, r0, #5
 800d87a:	b004      	add	sp, #16
 800d87c:	bd70      	pop	{r4, r5, r6, pc}
 800d87e:	6963      	ldr	r3, [r4, #20]
 800d880:	ed9d 0a01 	vldr	s0, [sp, #4]
 800d884:	ed93 1a05 	vldr	s2, [r3, #20]
 800d888:	edd3 0a03 	vldr	s1, [r3, #12]
 800d88c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d88e:	f001 f9db 	bl	800ec48 <Motor::update(float, float, float)>
 800d892:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d894:	2101      	movs	r1, #1
 800d896:	440b      	add	r3, r1
 800d898:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d89a:	4605      	mov	r5, r0
 800d89c:	2202      	movs	r2, #2
 800d89e:	a801      	add	r0, sp, #4
 800d8a0:	f7fa f8f4 	bl	8007a8c <osSignalWait>
 800d8a4:	9b01      	ldr	r3, [sp, #4]
 800d8a6:	2b08      	cmp	r3, #8
 800d8a8:	d108      	bne.n	800d8bc <Axis::run_sensorless_control_loop()+0xe0>
 800d8aa:	2d00      	cmp	r5, #0
 800d8ac:	d1a6      	bne.n	800d7fc <Axis::run_sensorless_control_loop()+0x20>
 800d8ae:	e7e0      	b.n	800d872 <Axis::run_sensorless_control_loop()+0x96>
 800d8b0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800d8b4:	4630      	mov	r0, r6
 800d8b6:	f7ff fb03 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d8ba:	e7b6      	b.n	800d82a <Axis::run_sensorless_control_loop()+0x4e>
 800d8bc:	f104 0550 	add.w	r5, r4, #80	@ 0x50
 800d8c0:	e7ce      	b.n	800d860 <Axis::run_sensorless_control_loop()+0x84>
 800d8c2:	bf00      	nop

0800d8c4 <Axis::run_closed_loop_control_loop()>:
 800d8c4:	b570      	push	{r4, r5, r6, lr}
 800d8c6:	4604      	mov	r4, r0
 800d8c8:	6980      	ldr	r0, [r0, #24]
 800d8ca:	68c3      	ldr	r3, [r0, #12]
 800d8cc:	ed2d 8b02 	vpush	{d8}
 800d8d0:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
 800d8d4:	b084      	sub	sp, #16
 800d8d6:	f893 189c 	ldrb.w	r1, [r3, #2204]	@ 0x89c
 800d8da:	f002 fc4d 	bl	8010178 <Controller::select_encoder(unsigned int)>
 800d8de:	2800      	cmp	r0, #0
 800d8e0:	d067      	beq.n	800d9b2 <Axis::run_closed_loop_control_loop()+0xee>
 800d8e2:	69a3      	ldr	r3, [r4, #24]
 800d8e4:	68da      	ldr	r2, [r3, #12]
 800d8e6:	f892 2020 	ldrb.w	r2, [r2, #32]
 800d8ea:	2a00      	cmp	r2, #0
 800d8ec:	d15e      	bne.n	800d9ac <Axis::run_closed_loop_control_loop()+0xe8>
 800d8ee:	699a      	ldr	r2, [r3, #24]
 800d8f0:	2a00      	cmp	r2, #0
 800d8f2:	d05e      	beq.n	800d9b2 <Axis::run_closed_loop_control_loop()+0xee>
 800d8f4:	68e1      	ldr	r1, [r4, #12]
 800d8f6:	6812      	ldr	r2, [r2, #0]
 800d8f8:	7989      	ldrb	r1, [r1, #6]
 800d8fa:	631a      	str	r2, [r3, #48]	@ 0x30
 800d8fc:	2000      	movs	r0, #0
 800d8fe:	2501      	movs	r5, #1
 800d900:	6398      	str	r0, [r3, #56]	@ 0x38
 800d902:	f883 5054 	strb.w	r5, [r3, #84]	@ 0x54
 800d906:	641a      	str	r2, [r3, #64]	@ 0x40
 800d908:	4620      	mov	r0, r4
 800d90a:	f7ff fc51 	bl	800d1b0 <Axis::set_step_dir_active(bool)>
 800d90e:	ed9f 8a44 	vldr	s16, [pc, #272]	@ 800da20 <Axis::run_closed_loop_control_loop()+0x15c>
 800d912:	f104 0650 	add.w	r6, r4, #80	@ 0x50
 800d916:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800d91a:	2b00      	cmp	r3, #0
 800d91c:	d175      	bne.n	800da0a <Axis::run_closed_loop_control_loop()+0x146>
 800d91e:	4620      	mov	r0, r4
 800d920:	f7ff fc6e 	bl	800d200 <Axis::do_checks()>
 800d924:	4605      	mov	r5, r0
 800d926:	4620      	mov	r0, r4
 800d928:	f7ff fcdc 	bl	800d2e4 <Axis::do_updates()>
 800d92c:	68e2      	ldr	r2, [r4, #12]
 800d92e:	7c13      	ldrb	r3, [r2, #16]
 800d930:	b133      	cbz	r3, 800d940 <Axis::run_closed_loop_control_loop()+0x7c>
 800d932:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800d936:	2b00      	cmp	r3, #0
 800d938:	d069      	beq.n	800da0e <Axis::run_closed_loop_control_loop()+0x14a>
 800d93a:	3b01      	subs	r3, #1
 800d93c:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800d940:	b105      	cbz	r5, 800d944 <Axis::run_closed_loop_control_loop()+0x80>
 800d942:	b918      	cbnz	r0, 800d94c <Axis::run_closed_loop_control_loop()+0x88>
 800d944:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d946:	781b      	ldrb	r3, [r3, #0]
 800d948:	2b01      	cmp	r3, #1
 800d94a:	d121      	bne.n	800d990 <Axis::run_closed_loop_control_loop()+0xcc>
 800d94c:	69a0      	ldr	r0, [r4, #24]
 800d94e:	a901      	add	r1, sp, #4
 800d950:	f002 fcd8 	bl	8010304 <Controller::update(float*)>
 800d954:	2800      	cmp	r0, #0
 800d956:	d137      	bne.n	800d9c8 <Axis::run_closed_loop_control_loop()+0x104>
 800d958:	f104 0550 	add.w	r5, r4, #80	@ 0x50
 800d95c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800d960:	4628      	mov	r0, r5
 800d962:	f7ff faad 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d966:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d968:	2101      	movs	r1, #1
 800d96a:	440b      	add	r3, r1
 800d96c:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d96e:	2202      	movs	r2, #2
 800d970:	a801      	add	r0, sp, #4
 800d972:	f7fa f88b 	bl	8007a8c <osSignalWait>
 800d976:	9b01      	ldr	r3, [sp, #4]
 800d978:	2b08      	cmp	r3, #8
 800d97a:	d046      	beq.n	800da0a <Axis::run_closed_loop_control_loop()+0x146>
 800d97c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d97e:	f7fe f94f 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800d982:	f7fe fd39 	bl	800c3f8 <update_brake_current>
 800d986:	2108      	movs	r1, #8
 800d988:	4628      	mov	r0, r5
 800d98a:	f7ff fa99 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d98e:	68e2      	ldr	r2, [r4, #12]
 800d990:	7991      	ldrb	r1, [r2, #6]
 800d992:	b101      	cbz	r1, 800d996 <Axis::run_closed_loop_control_loop()+0xd2>
 800d994:	79d1      	ldrb	r1, [r2, #7]
 800d996:	4620      	mov	r0, r4
 800d998:	f7ff fc0a 	bl	800d1b0 <Axis::set_step_dir_active(bool)>
 800d99c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800d99e:	fab0 f080 	clz	r0, r0
 800d9a2:	0940      	lsrs	r0, r0, #5
 800d9a4:	b004      	add	sp, #16
 800d9a6:	ecbd 8b02 	vpop	{d8}
 800d9aa:	bd70      	pop	{r4, r5, r6, pc}
 800d9ac:	69da      	ldr	r2, [r3, #28]
 800d9ae:	2a00      	cmp	r2, #0
 800d9b0:	d1a0      	bne.n	800d8f4 <Axis::run_closed_loop_control_loop()+0x30>
 800d9b2:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800d9b6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800d9ba:	f7ff fa81 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800d9be:	2000      	movs	r0, #0
 800d9c0:	b004      	add	sp, #16
 800d9c2:	ecbd 8b02 	vpop	{d8}
 800d9c6:	bd70      	pop	{r4, r5, r6, pc}
 800d9c8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800d9ca:	6923      	ldr	r3, [r4, #16]
 800d9cc:	6a02      	ldr	r2, [r0, #32]
 800d9ce:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 800d9d2:	ed92 1a01 	vldr	s2, [r2, #4]
 800d9d6:	edd3 0a09 	vldr	s1, [r3, #36]	@ 0x24
 800d9da:	ed9d 0a01 	vldr	s0, [sp, #4]
 800d9de:	ee67 7a88 	vmul.f32	s15, s15, s16
 800d9e2:	eeb8 1ac1 	vcvt.f32.s32	s2, s2
 800d9e6:	ee21 1a27 	vmul.f32	s2, s2, s15
 800d9ea:	f001 f92d 	bl	800ec48 <Motor::update(float, float, float)>
 800d9ee:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800d9f0:	2101      	movs	r1, #1
 800d9f2:	440b      	add	r3, r1
 800d9f4:	67a3      	str	r3, [r4, #120]	@ 0x78
 800d9f6:	4605      	mov	r5, r0
 800d9f8:	2202      	movs	r2, #2
 800d9fa:	a801      	add	r0, sp, #4
 800d9fc:	f7fa f846 	bl	8007a8c <osSignalWait>
 800da00:	9b01      	ldr	r3, [sp, #4]
 800da02:	2b08      	cmp	r3, #8
 800da04:	d109      	bne.n	800da1a <Axis::run_closed_loop_control_loop()+0x156>
 800da06:	2d00      	cmp	r5, #0
 800da08:	d185      	bne.n	800d916 <Axis::run_closed_loop_control_loop()+0x52>
 800da0a:	68e2      	ldr	r2, [r4, #12]
 800da0c:	e7c0      	b.n	800d990 <Axis::run_closed_loop_control_loop()+0xcc>
 800da0e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800da12:	4630      	mov	r0, r6
 800da14:	f7ff fa54 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800da18:	e794      	b.n	800d944 <Axis::run_closed_loop_control_loop()+0x80>
 800da1a:	f104 0550 	add.w	r5, r4, #80	@ 0x50
 800da1e:	e7ad      	b.n	800d97c <Axis::run_closed_loop_control_loop()+0xb8>
 800da20:	40c90fdb 	.word	0x40c90fdb

0800da24 <Axis::run_homing()>:
 800da24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da26:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800da28:	681b      	ldr	r3, [r3, #0]
 800da2a:	ed2d 8b02 	vpush	{d8}
 800da2e:	7a9b      	ldrb	r3, [r3, #10]
 800da30:	b085      	sub	sp, #20
 800da32:	4604      	mov	r4, r0
 800da34:	b94b      	cbnz	r3, 800da4a <Axis::run_homing()+0x26>
 800da36:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 800da3a:	3050      	adds	r0, #80	@ 0x50
 800da3c:	f7ff fa40 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800da40:	2000      	movs	r0, #0
 800da42:	b005      	add	sp, #20
 800da44:	ecbd 8b02 	vpop	{d8}
 800da48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da4a:	6980      	ldr	r0, [r0, #24]
 800da4c:	68c3      	ldr	r3, [r0, #12]
 800da4e:	f240 2202 	movw	r2, #514	@ 0x202
 800da52:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 800da56:	881f      	ldrh	r7, [r3, #0]
 800da58:	801a      	strh	r2, [r3, #0]
 800da5a:	2200      	movs	r2, #0
 800da5c:	6402      	str	r2, [r0, #64]	@ 0x40
 800da5e:	6482      	str	r2, [r0, #72]	@ 0x48
 800da60:	2100      	movs	r1, #0
 800da62:	eef1 7a67 	vneg.f32	s15, s15
 800da66:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
 800da6a:	2201      	movs	r2, #1
 800da6c:	edc0 7a11 	vstr	s15, [r0, #68]	@ 0x44
 800da70:	f880 2054 	strb.w	r2, [r0, #84]	@ 0x54
 800da74:	f884 107d 	strb.w	r1, [r4, #125]	@ 0x7d
 800da78:	f893 189c 	ldrb.w	r1, [r3, #2204]	@ 0x89c
 800da7c:	f002 fb7c 	bl	8010178 <Controller::select_encoder(unsigned int)>
 800da80:	2800      	cmp	r0, #0
 800da82:	f000 80c8 	beq.w	800dc16 <Axis::run_homing()+0x1f2>
 800da86:	69a3      	ldr	r3, [r4, #24]
 800da88:	68da      	ldr	r2, [r3, #12]
 800da8a:	f892 2020 	ldrb.w	r2, [r2, #32]
 800da8e:	2a00      	cmp	r2, #0
 800da90:	f040 80bd 	bne.w	800dc0e <Axis::run_homing()+0x1ea>
 800da94:	699a      	ldr	r2, [r3, #24]
 800da96:	2a00      	cmp	r2, #0
 800da98:	f000 80bd 	beq.w	800dc16 <Axis::run_homing()+0x1f2>
 800da9c:	6811      	ldr	r1, [r2, #0]
 800da9e:	ed9f 8a8f 	vldr	s16, [pc, #572]	@ 800dcdc <Axis::run_homing()+0x2b8>
 800daa2:	6319      	str	r1, [r3, #48]	@ 0x30
 800daa4:	2200      	movs	r2, #0
 800daa6:	639a      	str	r2, [r3, #56]	@ 0x38
 800daa8:	f104 0650 	add.w	r6, r4, #80	@ 0x50
 800daac:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800dab0:	2b00      	cmp	r3, #0
 800dab2:	d137      	bne.n	800db24 <Axis::run_homing()+0x100>
 800dab4:	4620      	mov	r0, r4
 800dab6:	f7ff fba3 	bl	800d200 <Axis::do_checks()>
 800daba:	4605      	mov	r5, r0
 800dabc:	4620      	mov	r0, r4
 800dabe:	f7ff fc11 	bl	800d2e4 <Axis::do_updates()>
 800dac2:	68e3      	ldr	r3, [r4, #12]
 800dac4:	7c1b      	ldrb	r3, [r3, #16]
 800dac6:	b13b      	cbz	r3, 800dad8 <Axis::run_homing()+0xb4>
 800dac8:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800dacc:	2b00      	cmp	r3, #0
 800dace:	f000 80f9 	beq.w	800dcc4 <Axis::run_homing()+0x2a0>
 800dad2:	3b01      	subs	r3, #1
 800dad4:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800dad8:	b105      	cbz	r5, 800dadc <Axis::run_homing()+0xb8>
 800dada:	b918      	cbnz	r0, 800dae4 <Axis::run_homing()+0xc0>
 800dadc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800dade:	781b      	ldrb	r3, [r3, #0]
 800dae0:	2b01      	cmp	r3, #1
 800dae2:	d11f      	bne.n	800db24 <Axis::run_homing()+0x100>
 800dae4:	69a0      	ldr	r0, [r4, #24]
 800dae6:	a901      	add	r1, sp, #4
 800dae8:	f002 fc0c 	bl	8010304 <Controller::update(float*)>
 800daec:	2800      	cmp	r0, #0
 800daee:	f040 80bf 	bne.w	800dc70 <Axis::run_homing()+0x24c>
 800daf2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800daf6:	4630      	mov	r0, r6
 800daf8:	f7ff f9e2 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dafc:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800dafe:	3301      	adds	r3, #1
 800db00:	67a3      	str	r3, [r4, #120]	@ 0x78
 800db02:	2202      	movs	r2, #2
 800db04:	2101      	movs	r1, #1
 800db06:	a801      	add	r0, sp, #4
 800db08:	f7f9 ffc0 	bl	8007a8c <osSignalWait>
 800db0c:	9b01      	ldr	r3, [sp, #4]
 800db0e:	2b08      	cmp	r3, #8
 800db10:	d008      	beq.n	800db24 <Axis::run_homing()+0x100>
 800db12:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800db14:	f7fe f884 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800db18:	f7fe fc6e 	bl	800c3f8 <update_brake_current>
 800db1c:	2108      	movs	r1, #8
 800db1e:	4630      	mov	r0, r6
 800db20:	f7ff f9ce 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800db24:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800db28:	f7ff f9f0 	bl	800cf0c <operator~(ODriveIntf::AxisIntf::Error)>
 800db2c:	4601      	mov	r1, r0
 800db2e:	4630      	mov	r0, r6
 800db30:	f7ff f9c2 	bl	800ceb8 <operator&=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800db34:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800db36:	6920      	ldr	r0, [r4, #16]
 800db38:	681a      	ldr	r2, [r3, #0]
 800db3a:	69a3      	ldr	r3, [r4, #24]
 800db3c:	ed92 7a00 	vldr	s14, [r2]
 800db40:	68c2      	ldr	r2, [r0, #12]
 800db42:	ed83 7a0c 	vstr	s14, [r3, #48]	@ 0x30
 800db46:	edd2 7a02 	vldr	s15, [r2, #8]
 800db4a:	ed9f 8a64 	vldr	s16, [pc, #400]	@ 800dcdc <Axis::run_homing()+0x2b8>
 800db4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800db52:	2500      	movs	r5, #0
 800db54:	ee67 7a87 	vmul.f32	s15, s15, s14
 800db58:	635d      	str	r5, [r3, #52]	@ 0x34
 800db5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800db5e:	6803      	ldr	r3, [r0, #0]
 800db60:	ee17 1a90 	vmov	r1, s15
 800db64:	681b      	ldr	r3, [r3, #0]
 800db66:	4798      	blx	r3
 800db68:	69a3      	ldr	r3, [r4, #24]
 800db6a:	68da      	ldr	r2, [r3, #12]
 800db6c:	f240 5103 	movw	r1, #1283	@ 0x503
 800db70:	8011      	strh	r1, [r2, #0]
 800db72:	2201      	movs	r2, #1
 800db74:	641d      	str	r5, [r3, #64]	@ 0x40
 800db76:	645d      	str	r5, [r3, #68]	@ 0x44
 800db78:	649d      	str	r5, [r3, #72]	@ 0x48
 800db7a:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
 800db7e:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800db82:	2b00      	cmp	r3, #0
 800db84:	d135      	bne.n	800dbf2 <Axis::run_homing()+0x1ce>
 800db86:	4620      	mov	r0, r4
 800db88:	f7ff fb3a 	bl	800d200 <Axis::do_checks()>
 800db8c:	4605      	mov	r5, r0
 800db8e:	4620      	mov	r0, r4
 800db90:	f7ff fba8 	bl	800d2e4 <Axis::do_updates()>
 800db94:	68e3      	ldr	r3, [r4, #12]
 800db96:	7c1b      	ldrb	r3, [r3, #16]
 800db98:	b13b      	cbz	r3, 800dbaa <Axis::run_homing()+0x186>
 800db9a:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800db9e:	2b00      	cmp	r3, #0
 800dba0:	f000 8096 	beq.w	800dcd0 <Axis::run_homing()+0x2ac>
 800dba4:	3b01      	subs	r3, #1
 800dba6:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800dbaa:	b105      	cbz	r5, 800dbae <Axis::run_homing()+0x18a>
 800dbac:	b918      	cbnz	r0, 800dbb6 <Axis::run_homing()+0x192>
 800dbae:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800dbb0:	781b      	ldrb	r3, [r3, #0]
 800dbb2:	2b01      	cmp	r3, #1
 800dbb4:	d11d      	bne.n	800dbf2 <Axis::run_homing()+0x1ce>
 800dbb6:	69a0      	ldr	r0, [r4, #24]
 800dbb8:	a901      	add	r1, sp, #4
 800dbba:	f002 fba3 	bl	8010304 <Controller::update(float*)>
 800dbbe:	bb88      	cbnz	r0, 800dc24 <Axis::run_homing()+0x200>
 800dbc0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800dbc4:	4630      	mov	r0, r6
 800dbc6:	f7ff f97b 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dbca:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800dbcc:	3301      	adds	r3, #1
 800dbce:	67a3      	str	r3, [r4, #120]	@ 0x78
 800dbd0:	2202      	movs	r2, #2
 800dbd2:	2101      	movs	r1, #1
 800dbd4:	a801      	add	r0, sp, #4
 800dbd6:	f7f9 ff59 	bl	8007a8c <osSignalWait>
 800dbda:	9b01      	ldr	r3, [sp, #4]
 800dbdc:	2b08      	cmp	r3, #8
 800dbde:	d008      	beq.n	800dbf2 <Axis::run_homing()+0x1ce>
 800dbe0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800dbe2:	f7fe f81d 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800dbe6:	f7fe fc07 	bl	800c3f8 <update_brake_current>
 800dbea:	2108      	movs	r1, #8
 800dbec:	4630      	mov	r0, r6
 800dbee:	f7ff f967 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dbf2:	69a2      	ldr	r2, [r4, #24]
 800dbf4:	68d2      	ldr	r2, [r2, #12]
 800dbf6:	8017      	strh	r7, [r2, #0]
 800dbf8:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800dbfa:	fab0 f080 	clz	r0, r0
 800dbfe:	2301      	movs	r3, #1
 800dc00:	0940      	lsrs	r0, r0, #5
 800dc02:	f884 307d 	strb.w	r3, [r4, #125]	@ 0x7d
 800dc06:	b005      	add	sp, #20
 800dc08:	ecbd 8b02 	vpop	{d8}
 800dc0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dc0e:	69da      	ldr	r2, [r3, #28]
 800dc10:	2a00      	cmp	r2, #0
 800dc12:	f47f af43 	bne.w	800da9c <Axis::run_homing()+0x78>
 800dc16:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800dc1a:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800dc1e:	f7ff f94f 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dc22:	e70d      	b.n	800da40 <Axis::run_homing()+0x1c>
 800dc24:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800dc26:	6923      	ldr	r3, [r4, #16]
 800dc28:	6a02      	ldr	r2, [r0, #32]
 800dc2a:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 800dc2e:	ed92 1a01 	vldr	s2, [r2, #4]
 800dc32:	edd3 0a09 	vldr	s1, [r3, #36]	@ 0x24
 800dc36:	ed9d 0a01 	vldr	s0, [sp, #4]
 800dc3a:	ee67 7a88 	vmul.f32	s15, s15, s16
 800dc3e:	eeb8 1ac1 	vcvt.f32.s32	s2, s2
 800dc42:	ee21 1a27 	vmul.f32	s2, s2, s15
 800dc46:	f000 ffff 	bl	800ec48 <Motor::update(float, float, float)>
 800dc4a:	2800      	cmp	r0, #0
 800dc4c:	d0bd      	beq.n	800dbca <Axis::run_homing()+0x1a6>
 800dc4e:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800dc50:	69a2      	ldr	r2, [r4, #24]
 800dc52:	3301      	adds	r3, #1
 800dc54:	f892 5055 	ldrb.w	r5, [r2, #85]	@ 0x55
 800dc58:	67a3      	str	r3, [r4, #120]	@ 0x78
 800dc5a:	2202      	movs	r2, #2
 800dc5c:	2101      	movs	r1, #1
 800dc5e:	a801      	add	r0, sp, #4
 800dc60:	f7f9 ff14 	bl	8007a8c <osSignalWait>
 800dc64:	9b01      	ldr	r3, [sp, #4]
 800dc66:	2b08      	cmp	r3, #8
 800dc68:	d1ba      	bne.n	800dbe0 <Axis::run_homing()+0x1bc>
 800dc6a:	2d00      	cmp	r5, #0
 800dc6c:	d087      	beq.n	800db7e <Axis::run_homing()+0x15a>
 800dc6e:	e7c0      	b.n	800dbf2 <Axis::run_homing()+0x1ce>
 800dc70:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800dc72:	6923      	ldr	r3, [r4, #16]
 800dc74:	6a02      	ldr	r2, [r0, #32]
 800dc76:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 800dc7a:	ed92 1a01 	vldr	s2, [r2, #4]
 800dc7e:	edd3 0a09 	vldr	s1, [r3, #36]	@ 0x24
 800dc82:	ed9d 0a01 	vldr	s0, [sp, #4]
 800dc86:	ee67 7a88 	vmul.f32	s15, s15, s16
 800dc8a:	eeb8 1ac1 	vcvt.f32.s32	s2, s2
 800dc8e:	ee21 1a27 	vmul.f32	s2, s2, s15
 800dc92:	f000 ffd9 	bl	800ec48 <Motor::update(float, float, float)>
 800dc96:	2800      	cmp	r0, #0
 800dc98:	f43f af30 	beq.w	800dafc <Axis::run_homing()+0xd8>
 800dc9c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 800dc9e:	f002 f98f 	bl	800ffc0 <Endstop::get_state()>
 800dca2:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800dca4:	3301      	adds	r3, #1
 800dca6:	67a3      	str	r3, [r4, #120]	@ 0x78
 800dca8:	4605      	mov	r5, r0
 800dcaa:	2202      	movs	r2, #2
 800dcac:	2101      	movs	r1, #1
 800dcae:	a801      	add	r0, sp, #4
 800dcb0:	f7f9 feec 	bl	8007a8c <osSignalWait>
 800dcb4:	9b01      	ldr	r3, [sp, #4]
 800dcb6:	2b08      	cmp	r3, #8
 800dcb8:	f47f af2b 	bne.w	800db12 <Axis::run_homing()+0xee>
 800dcbc:	2d00      	cmp	r5, #0
 800dcbe:	f43f aef5 	beq.w	800daac <Axis::run_homing()+0x88>
 800dcc2:	e72f      	b.n	800db24 <Axis::run_homing()+0x100>
 800dcc4:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800dcc8:	4630      	mov	r0, r6
 800dcca:	f7ff f8f9 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dcce:	e705      	b.n	800dadc <Axis::run_homing()+0xb8>
 800dcd0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800dcd4:	4630      	mov	r0, r6
 800dcd6:	f7ff f8f3 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dcda:	e768      	b.n	800dbae <Axis::run_homing()+0x18a>
 800dcdc:	40c90fdb 	.word	0x40c90fdb

0800dce0 <Axis::run_idle_loop()>:
 800dce0:	b570      	push	{r4, r5, r6, lr}
 800dce2:	4604      	mov	r4, r0
 800dce4:	b084      	sub	sp, #16
 800dce6:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800dce8:	f7fd ff9a 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800dcec:	68e3      	ldr	r3, [r4, #12]
 800dcee:	7999      	ldrb	r1, [r3, #6]
 800dcf0:	b101      	cbz	r1, 800dcf4 <Axis::run_idle_loop()+0x14>
 800dcf2:	79d9      	ldrb	r1, [r3, #7]
 800dcf4:	4620      	mov	r0, r4
 800dcf6:	f7ff fa5b 	bl	800d1b0 <Axis::set_step_dir_active(bool)>
 800dcfa:	f104 0650 	add.w	r6, r4, #80	@ 0x50
 800dcfe:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800dd02:	bb53      	cbnz	r3, 800dd5a <Axis::run_idle_loop()+0x7a>
 800dd04:	4620      	mov	r0, r4
 800dd06:	f7ff fa7b 	bl	800d200 <Axis::do_checks()>
 800dd0a:	4605      	mov	r5, r0
 800dd0c:	4620      	mov	r0, r4
 800dd0e:	f7ff fae9 	bl	800d2e4 <Axis::do_updates()>
 800dd12:	68e3      	ldr	r3, [r4, #12]
 800dd14:	7c1b      	ldrb	r3, [r3, #16]
 800dd16:	b12b      	cbz	r3, 800dd24 <Axis::run_idle_loop()+0x44>
 800dd18:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
 800dd1c:	b31b      	cbz	r3, 800dd66 <Axis::run_idle_loop()+0x86>
 800dd1e:	3b01      	subs	r3, #1
 800dd20:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800dd24:	b105      	cbz	r5, 800dd28 <Axis::run_idle_loop()+0x48>
 800dd26:	b918      	cbnz	r0, 800dd30 <Axis::run_idle_loop()+0x50>
 800dd28:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800dd2a:	781b      	ldrb	r3, [r3, #0]
 800dd2c:	2b01      	cmp	r3, #1
 800dd2e:	d114      	bne.n	800dd5a <Axis::run_idle_loop()+0x7a>
 800dd30:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800dd32:	3301      	adds	r3, #1
 800dd34:	67a3      	str	r3, [r4, #120]	@ 0x78
 800dd36:	2202      	movs	r2, #2
 800dd38:	2101      	movs	r1, #1
 800dd3a:	a801      	add	r0, sp, #4
 800dd3c:	f7f9 fea6 	bl	8007a8c <osSignalWait>
 800dd40:	9b01      	ldr	r3, [sp, #4]
 800dd42:	2b08      	cmp	r3, #8
 800dd44:	d0db      	beq.n	800dcfe <Axis::run_idle_loop()+0x1e>
 800dd46:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800dd48:	f7fd ff6a 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800dd4c:	f7fe fb54 	bl	800c3f8 <update_brake_current>
 800dd50:	2108      	movs	r1, #8
 800dd52:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800dd56:	f7ff f8b3 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dd5a:	6d20      	ldr	r0, [r4, #80]	@ 0x50
 800dd5c:	fab0 f080 	clz	r0, r0
 800dd60:	0940      	lsrs	r0, r0, #5
 800dd62:	b004      	add	sp, #16
 800dd64:	bd70      	pop	{r4, r5, r6, pc}
 800dd66:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800dd6a:	4630      	mov	r0, r6
 800dd6c:	f7ff f8a8 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dd70:	e7da      	b.n	800dd28 <Axis::run_idle_loop()+0x48>
 800dd72:	bf00      	nop

0800dd74 <Axis::run_state_machine_loop()>:
 800dd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd78:	ed2d 8b04 	vpush	{d8-d9}
 800dd7c:	4605      	mov	r5, r0
 800dd7e:	b085      	sub	sp, #20
 800dd80:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800dd82:	ed9f 9aa8 	vldr	s18, [pc, #672]	@ 800e024 <Axis::run_state_machine_loop()+0x2b0>
 800dd86:	ed9f 8aa8 	vldr	s16, [pc, #672]	@ 800e028 <Axis::run_state_machine_loop()+0x2b4>
 800dd8a:	eddf 8aa8 	vldr	s17, [pc, #672]	@ 800e02c <Axis::run_state_machine_loop()+0x2b8>
 800dd8e:	eddf 9aa8 	vldr	s19, [pc, #672]	@ 800e030 <Axis::run_state_machine_loop()+0x2bc>
 800dd92:	f000 fa4b 	bl	800e22c <Motor::arm()>
 800dd96:	f105 0871 	add.w	r8, r5, #113	@ 0x71
 800dd9a:	f105 0368 	add.w	r3, r5, #104	@ 0x68
 800dd9e:	f105 0b50 	add.w	fp, r5, #80	@ 0x50
 800dda2:	f105 0667 	add.w	r6, r5, #103	@ 0x67
 800dda6:	9302      	str	r3, [sp, #8]
 800dda8:	f04f 0900 	mov.w	r9, #0
 800ddac:	2701      	movs	r7, #1
 800ddae:	f8cd 8004 	str.w	r8, [sp, #4]
 800ddb2:	f895 3066 	ldrb.w	r3, [r5, #102]	@ 0x66
 800ddb6:	b1b3      	cbz	r3, 800dde6 <Axis::run_state_machine_loop()+0x72>
 800ddb8:	2b02      	cmp	r3, #2
 800ddba:	f000 813d 	beq.w	800e038 <Axis::run_state_machine_loop()+0x2c4>
 800ddbe:	2b03      	cmp	r3, #3
 800ddc0:	f000 8169 	beq.w	800e096 <Axis::run_state_machine_loop()+0x322>
 800ddc4:	f885 3067 	strb.w	r3, [r5, #103]	@ 0x67
 800ddc8:	f885 7068 	strb.w	r7, [r5, #104]	@ 0x68
 800ddcc:	2102      	movs	r1, #2
 800ddce:	186b      	adds	r3, r5, r1
 800ddd0:	2001      	movs	r0, #1
 800ddd2:	f883 9067 	strb.w	r9, [r3, #103]	@ 0x67
 800ddd6:	f885 9066 	strb.w	r9, [r5, #102]	@ 0x66
 800ddda:	f7ff f897 	bl	800cf0c <operator~(ODriveIntf::AxisIntf::Error)>
 800ddde:	4601      	mov	r1, r0
 800dde0:	4658      	mov	r0, fp
 800dde2:	f7ff f869 	bl	800ceb8 <operator&=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800dde6:	6f6c      	ldr	r4, [r5, #116]	@ 0x74
 800dde8:	7823      	ldrb	r3, [r4, #0]
 800ddea:	3b01      	subs	r3, #1
 800ddec:	2b0a      	cmp	r3, #10
 800ddee:	d80c      	bhi.n	800de0a <Axis::run_state_machine_loop()+0x96>
 800ddf0:	e8df f013 	tbh	[pc, r3, lsl #1]
 800ddf4:	000b0106 	.word	0x000b0106
 800ddf8:	00b6000b 	.word	0x00b6000b
 800ddfc:	007d008f 	.word	0x007d008f
 800de00:	00ba00eb 	.word	0x00ba00eb
 800de04:	002000f5 	.word	0x002000f5
 800de08:	001a      	.short	0x001a
 800de0a:	2101      	movs	r1, #1
 800de0c:	4658      	mov	r0, fp
 800de0e:	f7ff f857 	bl	800cec0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800de12:	9b01      	ldr	r3, [sp, #4]
 800de14:	429e      	cmp	r6, r3
 800de16:	d005      	beq.n	800de24 <Axis::run_state_machine_loop()+0xb0>
 800de18:	f8c6 9000 	str.w	r9, [r6]
 800de1c:	f8c6 9004 	str.w	r9, [r6, #4]
 800de20:	f8a6 9008 	strh.w	r9, [r6, #8]
 800de24:	7027      	strb	r7, [r4, #0]
 800de26:	e7c4      	b.n	800ddb2 <Axis::run_state_machine_loop()+0x3e>
 800de28:	4628      	mov	r0, r5
 800de2a:	f7ff fdfb 	bl	800da24 <Axis::run_homing()>
 800de2e:	b958      	cbnz	r0, 800de48 <Axis::run_state_machine_loop()+0xd4>
 800de30:	6f6c      	ldr	r4, [r5, #116]	@ 0x74
 800de32:	e7ee      	b.n	800de12 <Axis::run_state_machine_loop()+0x9e>
 800de34:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800de36:	f893 3067 	ldrb.w	r3, [r3, #103]	@ 0x67
 800de3a:	2b00      	cmp	r3, #0
 800de3c:	d0e5      	beq.n	800de0a <Axis::run_state_machine_loop()+0x96>
 800de3e:	6928      	ldr	r0, [r5, #16]
 800de40:	f001 fa4c 	bl	800f2dc <Encoder::run_direction_find()>
 800de44:	2800      	cmp	r0, #0
 800de46:	d0f3      	beq.n	800de30 <Axis::run_state_machine_loop()+0xbc>
 800de48:	9b02      	ldr	r3, [sp, #8]
 800de4a:	42b3      	cmp	r3, r6
 800de4c:	4634      	mov	r4, r6
 800de4e:	f000 80e6 	beq.w	800e01e <Axis::run_state_machine_loop()+0x2aa>
 800de52:	1b99      	subs	r1, r3, r6
 800de54:	9b01      	ldr	r3, [sp, #4]
 800de56:	2909      	cmp	r1, #9
 800de58:	eba3 0e06 	sub.w	lr, r3, r6
 800de5c:	f000 80d7 	beq.w	800e00e <Axis::run_state_machine_loop()+0x29a>
 800de60:	ebae 0c01 	sub.w	ip, lr, r1
 800de64:	4561      	cmp	r1, ip
 800de66:	da22      	bge.n	800deae <Axis::run_state_machine_loop()+0x13a>
 800de68:	2901      	cmp	r1, #1
 800de6a:	f000 813a 	beq.w	800e0e2 <Axis::run_state_machine_loop()+0x36e>
 800de6e:	f1bc 0f00 	cmp.w	ip, #0
 800de72:	eb04 0301 	add.w	r3, r4, r1
 800de76:	dd0d      	ble.n	800de94 <Axis::run_state_machine_loop()+0x120>
 800de78:	1e62      	subs	r2, r4, #1
 800de7a:	eb03 0a0c 	add.w	sl, r3, ip
 800de7e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800de82:	f893 8000 	ldrb.w	r8, [r3]
 800de86:	f882 8000 	strb.w	r8, [r2]
 800de8a:	f803 0b01 	strb.w	r0, [r3], #1
 800de8e:	459a      	cmp	sl, r3
 800de90:	d1f5      	bne.n	800de7e <Axis::run_state_machine_loop()+0x10a>
 800de92:	4464      	add	r4, ip
 800de94:	fbbe f3f1 	udiv	r3, lr, r1
 800de98:	fb01 e313 	mls	r3, r1, r3, lr
 800de9c:	2b00      	cmp	r3, #0
 800de9e:	f000 80be 	beq.w	800e01e <Axis::run_state_machine_loop()+0x2aa>
 800dea2:	468e      	mov	lr, r1
 800dea4:	1ac9      	subs	r1, r1, r3
 800dea6:	ebae 0c01 	sub.w	ip, lr, r1
 800deaa:	4561      	cmp	r1, ip
 800deac:	dbdc      	blt.n	800de68 <Axis::run_state_machine_loop()+0xf4>
 800deae:	f1bc 0f01 	cmp.w	ip, #1
 800deb2:	eb04 020e 	add.w	r2, r4, lr
 800deb6:	f000 8127 	beq.w	800e108 <Axis::run_state_machine_loop()+0x394>
 800deba:	2900      	cmp	r1, #0
 800debc:	eb04 0801 	add.w	r8, r4, r1
 800dec0:	f340 80fc 	ble.w	800e0bc <Axis::run_state_machine_loop()+0x348>
 800dec4:	4643      	mov	r3, r8
 800dec6:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
 800deca:	f812 ad01 	ldrb.w	sl, [r2, #-1]!
 800dece:	f883 a000 	strb.w	sl, [r3]
 800ded2:	429c      	cmp	r4, r3
 800ded4:	7010      	strb	r0, [r2, #0]
 800ded6:	d1f6      	bne.n	800dec6 <Axis::run_state_machine_loop()+0x152>
 800ded8:	eba8 0401 	sub.w	r4, r8, r1
 800dedc:	fbbe f1fc 	udiv	r1, lr, ip
 800dee0:	fb0c e111 	mls	r1, ip, r1, lr
 800dee4:	2900      	cmp	r1, #0
 800dee6:	f000 809a 	beq.w	800e01e <Axis::run_state_machine_loop()+0x2aa>
 800deea:	46e6      	mov	lr, ip
 800deec:	e7b8      	b.n	800de60 <Axis::run_state_machine_loop()+0xec>
 800deee:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800def0:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 800def4:	2a00      	cmp	r2, #0
 800def6:	d088      	beq.n	800de0a <Axis::run_state_machine_loop()+0x96>
 800def8:	6928      	ldr	r0, [r5, #16]
 800defa:	68c2      	ldr	r2, [r0, #12]
 800defc:	f892 2029 	ldrb.w	r2, [r2, #41]	@ 0x29
 800df00:	b122      	cbz	r2, 800df0c <Axis::run_state_machine_loop()+0x198>
 800df02:	6a1b      	ldr	r3, [r3, #32]
 800df04:	69db      	ldr	r3, [r3, #28]
 800df06:	2b00      	cmp	r3, #0
 800df08:	f43f af7f 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df0c:	f001 f9ca 	bl	800f2a4 <Encoder::run_index_search()>
 800df10:	e78d      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800df12:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800df14:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 800df18:	2a00      	cmp	r2, #0
 800df1a:	f43f af76 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df1e:	6a1b      	ldr	r3, [r3, #32]
 800df20:	69db      	ldr	r3, [r3, #28]
 800df22:	2b00      	cmp	r3, #0
 800df24:	f43f af71 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df28:	68e9      	ldr	r1, [r5, #12]
 800df2a:	4628      	mov	r0, r5
 800df2c:	3134      	adds	r1, #52	@ 0x34
 800df2e:	f7ff fa13 	bl	800d358 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)>
 800df32:	2800      	cmp	r0, #0
 800df34:	f43f af7c 	beq.w	800de30 <Axis::run_state_machine_loop()+0xbc>
 800df38:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800df3a:	6a1b      	ldr	r3, [r3, #32]
 800df3c:	edd3 7a01 	vldr	s15, [r3, #4]
 800df40:	68eb      	ldr	r3, [r5, #12]
 800df42:	ed93 7a11 	vldr	s14, [r3, #68]	@ 0x44
 800df46:	69ab      	ldr	r3, [r5, #24]
 800df48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800df4c:	ee27 7a29 	vmul.f32	s14, s14, s19
 800df50:	4628      	mov	r0, r5
 800df52:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800df56:	edc3 6a0d 	vstr	s13, [r3, #52]	@ 0x34
 800df5a:	f7ff fc3f 	bl	800d7dc <Axis::run_sensorless_control_loop()>
 800df5e:	e766      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800df60:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 800df62:	f000 fc9b 	bl	800e89c <Motor::run_calibration()>
 800df66:	e762      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800df68:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800df6a:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 800df6e:	2a00      	cmp	r2, #0
 800df70:	f43f af4b 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df74:	6a1b      	ldr	r3, [r3, #32]
 800df76:	69db      	ldr	r3, [r3, #28]
 800df78:	2b00      	cmp	r3, #0
 800df7a:	f43f af46 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df7e:	692b      	ldr	r3, [r5, #16]
 800df80:	7ddb      	ldrb	r3, [r3, #23]
 800df82:	2b00      	cmp	r3, #0
 800df84:	f43f af41 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800df88:	682b      	ldr	r3, [r5, #0]
 800df8a:	4a2a      	ldr	r2, [pc, #168]	@ (800e034 <Axis::run_state_machine_loop()+0x2c0>)
 800df8c:	681b      	ldr	r3, [r3, #0]
 800df8e:	4293      	cmp	r3, r2
 800df90:	f040 80cb 	bne.w	800e12a <Axis::run_state_machine_loop()+0x3b6>
 800df94:	68eb      	ldr	r3, [r5, #12]
 800df96:	edd3 7a03 	vldr	s15, [r3, #12]
 800df9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800df9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfa2:	bf48      	it	mi
 800dfa4:	eef0 7a49 	vmovmi.f32	s15, s18
 800dfa8:	eef4 7ac8 	vcmpe.f32	s15, s16
 800dfac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfb0:	bfc8      	it	gt
 800dfb2:	eef0 7a48 	vmovgt.f32	s15, s16
 800dfb6:	ee67 7aa8 	vmul.f32	s15, s15, s17
 800dfba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800dfbe:	edc5 7a22 	vstr	s15, [r5, #136]	@ 0x88
 800dfc2:	4628      	mov	r0, r5
 800dfc4:	f7ff fc7e 	bl	800d8c4 <Axis::run_closed_loop_control_loop()>
 800dfc8:	e731      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800dfca:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800dfcc:	f893 3067 	ldrb.w	r3, [r3, #103]	@ 0x67
 800dfd0:	2b00      	cmp	r3, #0
 800dfd2:	f43f af1a 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800dfd6:	6928      	ldr	r0, [r5, #16]
 800dfd8:	f001 f9c4 	bl	800f364 <Encoder::run_offset_calibration()>
 800dfdc:	e727      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800dfde:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800dfe0:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 800dfe4:	2a00      	cmp	r2, #0
 800dfe6:	f43f af10 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800dfea:	6a1b      	ldr	r3, [r3, #32]
 800dfec:	69db      	ldr	r3, [r3, #28]
 800dfee:	2b00      	cmp	r3, #0
 800dff0:	f43f af0b 	beq.w	800de0a <Axis::run_state_machine_loop()+0x96>
 800dff4:	68e9      	ldr	r1, [r5, #12]
 800dff6:	4628      	mov	r0, r5
 800dff8:	3150      	adds	r1, #80	@ 0x50
 800dffa:	f7ff f9ad 	bl	800d358 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)>
 800dffe:	e716      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800e000:	4628      	mov	r0, r5
 800e002:	f7ff fe6d 	bl	800dce0 <Axis::run_idle_loop()>
 800e006:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 800e008:	f000 f910 	bl	800e22c <Motor::arm()>
 800e00c:	e70f      	b.n	800de2e <Axis::run_state_machine_loop()+0xba>
 800e00e:	f895 3067 	ldrb.w	r3, [r5, #103]	@ 0x67
 800e012:	f895 2068 	ldrb.w	r2, [r5, #104]	@ 0x68
 800e016:	f885 2067 	strb.w	r2, [r5, #103]	@ 0x67
 800e01a:	f885 3068 	strb.w	r3, [r5, #104]	@ 0x68
 800e01e:	f885 9070 	strb.w	r9, [r5, #112]	@ 0x70
 800e022:	e6c6      	b.n	800ddb2 <Axis::run_state_machine_loop()+0x3e>
 800e024:	00000000 	.word	0x00000000
 800e028:	49030e30 	.word	0x49030e30
 800e02c:	45fa0000 	.word	0x45fa0000
 800e030:	3e22f983 	.word	0x3e22f983
 800e034:	0800ce71 	.word	0x0800ce71
 800e038:	68e8      	ldr	r0, [r5, #12]
 800e03a:	7802      	ldrb	r2, [r0, #0]
 800e03c:	2a00      	cmp	r2, #0
 800e03e:	d03f      	beq.n	800e0c0 <Axis::run_state_machine_loop()+0x34c>
 800e040:	2204      	movs	r2, #4
 800e042:	f885 2067 	strb.w	r2, [r5, #103]	@ 0x67
 800e046:	2201      	movs	r2, #1
 800e048:	7841      	ldrb	r1, [r0, #1]
 800e04a:	b149      	cbz	r1, 800e060 <Axis::run_state_machine_loop()+0x2ec>
 800e04c:	6929      	ldr	r1, [r5, #16]
 800e04e:	68c9      	ldr	r1, [r1, #12]
 800e050:	7889      	ldrb	r1, [r1, #2]
 800e052:	b129      	cbz	r1, 800e060 <Axis::run_state_machine_loop()+0x2ec>
 800e054:	442a      	add	r2, r5
 800e056:	2106      	movs	r1, #6
 800e058:	f882 1067 	strb.w	r1, [r2, #103]	@ 0x67
 800e05c:	461a      	mov	r2, r3
 800e05e:	3301      	adds	r3, #1
 800e060:	7881      	ldrb	r1, [r0, #2]
 800e062:	b129      	cbz	r1, 800e070 <Axis::run_state_machine_loop()+0x2fc>
 800e064:	18a9      	adds	r1, r5, r2
 800e066:	2407      	movs	r4, #7
 800e068:	461a      	mov	r2, r3
 800e06a:	f881 4067 	strb.w	r4, [r1, #103]	@ 0x67
 800e06e:	3301      	adds	r3, #1
 800e070:	7941      	ldrb	r1, [r0, #5]
 800e072:	b129      	cbz	r1, 800e080 <Axis::run_state_machine_loop()+0x30c>
 800e074:	18a9      	adds	r1, r5, r2
 800e076:	240b      	movs	r4, #11
 800e078:	461a      	mov	r2, r3
 800e07a:	f881 4067 	strb.w	r4, [r1, #103]	@ 0x67
 800e07e:	3301      	adds	r3, #1
 800e080:	78c1      	ldrb	r1, [r0, #3]
 800e082:	b1f9      	cbz	r1, 800e0c4 <Axis::run_state_machine_loop()+0x350>
 800e084:	442a      	add	r2, r5
 800e086:	2108      	movs	r1, #8
 800e088:	f882 1067 	strb.w	r1, [r2, #103]	@ 0x67
 800e08c:	1c59      	adds	r1, r3, #1
 800e08e:	18ea      	adds	r2, r5, r3
 800e090:	f882 7067 	strb.w	r7, [r2, #103]	@ 0x67
 800e094:	e69b      	b.n	800ddce <Axis::run_state_machine_loop()+0x5a>
 800e096:	692a      	ldr	r2, [r5, #16]
 800e098:	68d2      	ldr	r2, [r2, #12]
 800e09a:	7892      	ldrb	r2, [r2, #2]
 800e09c:	2104      	movs	r1, #4
 800e09e:	f885 1067 	strb.w	r1, [r5, #103]	@ 0x67
 800e0a2:	b1ba      	cbz	r2, 800e0d4 <Axis::run_state_machine_loop()+0x360>
 800e0a4:	2206      	movs	r2, #6
 800e0a6:	f885 2068 	strb.w	r2, [r5, #104]	@ 0x68
 800e0aa:	2202      	movs	r2, #2
 800e0ac:	18a8      	adds	r0, r5, r2
 800e0ae:	18ea      	adds	r2, r5, r3
 800e0b0:	2307      	movs	r3, #7
 800e0b2:	f880 3067 	strb.w	r3, [r0, #103]	@ 0x67
 800e0b6:	f882 7067 	strb.w	r7, [r2, #103]	@ 0x67
 800e0ba:	e688      	b.n	800ddce <Axis::run_state_machine_loop()+0x5a>
 800e0bc:	4644      	mov	r4, r8
 800e0be:	e70d      	b.n	800dedc <Axis::run_state_machine_loop()+0x168>
 800e0c0:	2301      	movs	r3, #1
 800e0c2:	e7c1      	b.n	800e048 <Axis::run_state_machine_loop()+0x2d4>
 800e0c4:	7901      	ldrb	r1, [r0, #4]
 800e0c6:	b149      	cbz	r1, 800e0dc <Axis::run_state_machine_loop()+0x368>
 800e0c8:	442a      	add	r2, r5
 800e0ca:	2105      	movs	r1, #5
 800e0cc:	f882 1067 	strb.w	r1, [r2, #103]	@ 0x67
 800e0d0:	1c59      	adds	r1, r3, #1
 800e0d2:	e7dc      	b.n	800e08e <Axis::run_state_machine_loop()+0x31a>
 800e0d4:	4619      	mov	r1, r3
 800e0d6:	2201      	movs	r2, #1
 800e0d8:	2302      	movs	r3, #2
 800e0da:	e7e7      	b.n	800e0ac <Axis::run_state_machine_loop()+0x338>
 800e0dc:	4619      	mov	r1, r3
 800e0de:	4613      	mov	r3, r2
 800e0e0:	e7d5      	b.n	800e08e <Axis::run_state_machine_loop()+0x31a>
 800e0e2:	4621      	mov	r1, r4
 800e0e4:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 800e0e8:	f1ba 0f01 	cmp.w	sl, #1
 800e0ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e0f0:	dd1e      	ble.n	800e130 <Axis::run_state_machine_loop()+0x3bc>
 800e0f2:	4652      	mov	r2, sl
 800e0f4:	4620      	mov	r0, r4
 800e0f6:	9303      	str	r3, [sp, #12]
 800e0f8:	f016 fabc 	bl	8024674 <memmove>
 800e0fc:	9b03      	ldr	r3, [sp, #12]
 800e0fe:	f804 300a 	strb.w	r3, [r4, sl]
 800e102:	f885 9070 	strb.w	r9, [r5, #112]	@ 0x70
 800e106:	e654      	b.n	800ddb2 <Axis::run_state_machine_loop()+0x3e>
 800e108:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
 800e10c:	f1be 0f01 	cmp.w	lr, #1
 800e110:	f814 a00e 	ldrb.w	sl, [r4, lr]
 800e114:	dd10      	ble.n	800e138 <Axis::run_state_machine_loop()+0x3c4>
 800e116:	4672      	mov	r2, lr
 800e118:	4621      	mov	r1, r4
 800e11a:	1c60      	adds	r0, r4, #1
 800e11c:	f016 faaa 	bl	8024674 <memmove>
 800e120:	f884 a000 	strb.w	sl, [r4]
 800e124:	f885 9070 	strb.w	r9, [r5, #112]	@ 0x70
 800e128:	e643      	b.n	800ddb2 <Axis::run_state_machine_loop()+0x3e>
 800e12a:	4628      	mov	r0, r5
 800e12c:	4798      	blx	r3
 800e12e:	e748      	b.n	800dfc2 <Axis::run_state_machine_loop()+0x24e>
 800e130:	bf04      	itt	eq
 800e132:	7862      	ldrbeq	r2, [r4, #1]
 800e134:	7022      	strbeq	r2, [r4, #0]
 800e136:	e7e2      	b.n	800e0fe <Axis::run_state_machine_loop()+0x38a>
 800e138:	bf04      	itt	eq
 800e13a:	7823      	ldrbeq	r3, [r4, #0]
 800e13c:	f802 3c01 	strbeq.w	r3, [r2, #-1]
 800e140:	e7ee      	b.n	800e120 <Axis::run_state_machine_loop()+0x3ac>
 800e142:	bf00      	nop

0800e144 <run_state_machine_loop_wrapper(void*)>:
 800e144:	b508      	push	{r3, lr}
 800e146:	f7ff fe15 	bl	800dd74 <Axis::run_state_machine_loop()>
 800e14a:	bf00      	nop

0800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>:
 800e14c:	8803      	ldrh	r3, [r0, #0]
 800e14e:	4319      	orrs	r1, r3
 800e150:	8001      	strh	r1, [r0, #0]
 800e152:	4770      	bx	lr

0800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 800e154:	6803      	ldr	r3, [r0, #0]
 800e156:	430b      	orrs	r3, r1
 800e158:	6003      	str	r3, [r0, #0]
 800e15a:	4770      	bx	lr

0800e15c <Motor::Motor(MotorHardwareConfig_t const&, GateDriverHardwareConfig_t const&, Motor::Config_t&)>:
 800e15c:	4684      	mov	ip, r0
 800e15e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e162:	4696      	mov	lr, r2
 800e164:	4604      	mov	r4, r0
 800e166:	f84c 1b04 	str.w	r1, [ip], #4
 800e16a:	461e      	mov	r6, r3
 800e16c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e170:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e174:	4683      	mov	fp, r0
 800e176:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 800e17a:	6923      	ldr	r3, [r4, #16]
 800e17c:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800e180:	f8b4 900c 	ldrh.w	r9, [r4, #12]
 800e184:	4f26      	ldr	r7, [pc, #152]	@ (800e220 <Motor::Motor(MotorHardwareConfig_t const&, GateDriverHardwareConfig_t const&, Motor::Config_t&)+0xc4>)
 800e186:	eddf 7a27 	vldr	s15, [pc, #156]	@ 800e224 <Motor::Motor(MotorHardwareConfig_t const&, GateDriverHardwareConfig_t const&, Motor::Config_t&)+0xc8>
 800e18a:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800e18e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e192:	2500      	movs	r5, #0
 800e194:	6363      	str	r3, [r4, #52]	@ 0x34
 800e196:	8aa3      	ldrh	r3, [r4, #20]
 800e198:	6325      	str	r5, [r4, #48]	@ 0x30
 800e19a:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800e19c:	e9c4 6508 	strd	r6, r5, [r4, #32]
 800e1a0:	e9c4 ba0a 	strd	fp, sl, [r4, #40]	@ 0x28
 800e1a4:	63a5      	str	r5, [r4, #56]	@ 0x38
 800e1a6:	f8a4 9030 	strh.w	r9, [r4, #48]	@ 0x30
 800e1aa:	8723      	strh	r3, [r4, #56]	@ 0x38
 800e1ac:	7833      	ldrb	r3, [r6, #0]
 800e1ae:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 800e1b2:	f884 3067 	strb.w	r3, [r4, #103]	@ 0x67
 800e1b6:	edc4 7a1a 	vstr	s15, [r4, #104]	@ 0x68
 800e1ba:	edc4 7a1b 	vstr	s15, [r4, #108]	@ 0x6c
 800e1be:	edc4 7a1c 	vstr	s15, [r4, #112]	@ 0x70
 800e1c2:	edc4 7a1d 	vstr	s15, [r4, #116]	@ 0x74
 800e1c6:	edc4 7a1e 	vstr	s15, [r4, #120]	@ 0x78
 800e1ca:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
 800e1ce:	f8a4 5044 	strh.w	r5, [r4, #68]	@ 0x44
 800e1d2:	64a5      	str	r5, [r4, #72]	@ 0x48
 800e1d4:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 800e1d8:	f884 5066 	strb.w	r5, [r4, #102]	@ 0x66
 800e1dc:	2244      	movs	r2, #68	@ 0x44
 800e1de:	4629      	mov	r1, r5
 800e1e0:	f104 007c 	add.w	r0, r4, #124	@ 0x7c
 800e1e4:	f016 fa5f 	bl	80246a6 <memset>
 800e1e8:	edd6 7a04 	vldr	s15, [r6, #16]
 800e1ec:	ed96 6a05 	vldr	s12, [r6, #20]
 800e1f0:	edd6 6a0d 	vldr	s13, [r6, #52]	@ 0x34
 800e1f4:	4b0c      	ldr	r3, [pc, #48]	@ (800e228 <Motor::Motor(MotorHardwareConfig_t const&, GateDriverHardwareConfig_t const&, Motor::Config_t&)+0xcc>)
 800e1f6:	f8a4 50c0 	strh.w	r5, [r4, #192]	@ 0xc0
 800e1fa:	ee86 7a27 	vdiv.f32	s14, s12, s15
 800e1fe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800e202:	f8c4 20a8 	str.w	r2, [r4, #168]	@ 0xa8
 800e206:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
 800e20a:	4620      	mov	r0, r4
 800e20c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e210:	edc4 7a1f 	vstr	s15, [r4, #124]	@ 0x7c
 800e214:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e218:	edc4 7a20 	vstr	s15, [r4, #128]	@ 0x80
 800e21c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e220:	08029520 	.word	0x08029520
 800e224:	00000000 	.word	0x00000000
 800e228:	41200000 	.word	0x41200000

0800e22c <Motor::arm()>:
 800e22c:	b538      	push	{r3, r4, r5, lr}
 800e22e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e230:	4604      	mov	r4, r0
 800e232:	6998      	ldr	r0, [r3, #24]
 800e234:	f001 ff9a 	bl	801016c <Controller::reset()>
 800e238:	2300      	movs	r3, #0
 800e23a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800e23c:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800e240:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 800e244:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 800e248:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
 800e24c:	f7fe fec4 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800e250:	4605      	mov	r5, r0
 800e252:	b930      	cbnz	r0, 800e262 <Motor::arm()+0x36>
 800e254:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800e256:	2108      	movs	r1, #8
 800e258:	3050      	adds	r0, #80	@ 0x50
 800e25a:	f7ff ff7b 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e25e:	4628      	mov	r0, r5
 800e260:	bd38      	pop	{r3, r4, r5, pc}
 800e262:	2300      	movs	r3, #0
 800e264:	4620      	mov	r0, r4
 800e266:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800e26a:	f7fd fccb 	bl	800bc04 <safety_critical_arm_motor_pwm>
 800e26e:	4628      	mov	r0, r5
 800e270:	bd38      	pop	{r3, r4, r5, pc}
 800e272:	bf00      	nop

0800e274 <Motor::update_current_controller_gains()>:
 800e274:	6a03      	ldr	r3, [r0, #32]
 800e276:	edd3 7a04 	vldr	s15, [r3, #16]
 800e27a:	ed93 6a05 	vldr	s12, [r3, #20]
 800e27e:	edd3 6a0d 	vldr	s13, [r3, #52]	@ 0x34
 800e282:	ee86 7a27 	vdiv.f32	s14, s12, s15
 800e286:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e28a:	edc0 7a1f 	vstr	s15, [r0, #124]	@ 0x7c
 800e28e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e292:	edc0 7a20 	vstr	s15, [r0, #128]	@ 0x80
 800e296:	4770      	bx	lr

0800e298 <Motor::DRV8301_setup()>:
 800e298:	6802      	ldr	r2, [r0, #0]
 800e29a:	6a03      	ldr	r3, [r0, #32]
 800e29c:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 800e388 <Motor::DRV8301_setup()+0xf0>
 800e2a0:	edd2 7a02 	vldr	s15, [r2, #8]
 800e2a4:	ed93 6a0c 	vldr	s12, [r3, #48]	@ 0x30
 800e2a8:	4a38      	ldr	r2, [pc, #224]	@ (800e38c <Motor::DRV8301_setup()+0xf4>)
 800e2aa:	4939      	ldr	r1, [pc, #228]	@ (800e390 <Motor::DRV8301_setup()+0xf8>)
 800e2ac:	ee67 6a87 	vmul.f32	s13, s15, s14
 800e2b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e2b2:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800e2b6:	b089      	sub	sp, #36	@ 0x24
 800e2b8:	2300      	movs	r3, #0
 800e2ba:	4605      	mov	r5, r0
 800e2bc:	9204      	str	r2, [sp, #16]
 800e2be:	4835      	ldr	r0, [pc, #212]	@ (800e394 <Motor::DRV8301_setup()+0xfc>)
 800e2c0:	9303      	str	r3, [sp, #12]
 800e2c2:	2208      	movs	r2, #8
 800e2c4:	9305      	str	r3, [sp, #20]
 800e2c6:	9307      	str	r3, [sp, #28]
 800e2c8:	9301      	str	r3, [sp, #4]
 800e2ca:	9000      	str	r0, [sp, #0]
 800e2cc:	2304      	movs	r3, #4
 800e2ce:	4832      	ldr	r0, [pc, #200]	@ (800e398 <Motor::DRV8301_setup()+0x100>)
 800e2d0:	f88d 2014 	strb.w	r2, [sp, #20]
 800e2d4:	220c      	movs	r2, #12
 800e2d6:	9002      	str	r0, [sp, #8]
 800e2d8:	f88d 300c 	strb.w	r3, [sp, #12]
 800e2dc:	9106      	str	r1, [sp, #24]
 800e2de:	f88d 201c 	strb.w	r2, [sp, #28]
 800e2e2:	ac08      	add	r4, sp, #32
 800e2e4:	105a      	asrs	r2, r3, #1
 800e2e6:	eba4 01c2 	sub.w	r1, r4, r2, lsl #3
 800e2ea:	ed51 7a02 	vldr	s15, [r1, #-8]
 800e2ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e2f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e2f6:	eba3 0302 	sub.w	r3, r3, r2
 800e2fa:	bf4a      	itet	mi
 800e2fc:	f103 33ff 	addmi.w	r3, r3, #4294967295	@ 0xffffffff
 800e300:	4613      	movpl	r3, r2
 800e302:	f1a1 0408 	submi.w	r4, r1, #8
 800e306:	2b00      	cmp	r3, #0
 800e308:	dcec      	bgt.n	800e2e4 <Motor::DRV8301_setup()+0x4c>
 800e30a:	466b      	mov	r3, sp
 800e30c:	429c      	cmp	r4, r3
 800e30e:	d037      	beq.n	800e380 <Motor::DRV8301_setup()+0xe8>
 800e310:	ed54 7a02 	vldr	s15, [r4, #-8]
 800e314:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800e318:	ee87 6a27 	vdiv.f32	s12, s14, s15
 800e31c:	f105 0628 	add.w	r6, r5, #40	@ 0x28
 800e320:	f105 07c2 	add.w	r7, r5, #194	@ 0xc2
 800e324:	4630      	mov	r0, r6
 800e326:	ee66 7a86 	vmul.f32	s15, s13, s12
 800e32a:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 800e39c <Motor::DRV8301_setup()+0x104>
 800e32e:	ed85 6a1e 	vstr	s12, [r5, #120]	@ 0x78
 800e332:	ee27 7a87 	vmul.f32	s14, s15, s14
 800e336:	edc5 7a2b 	vstr	s15, [r5, #172]	@ 0xac
 800e33a:	ed85 7a2c 	vstr	s14, [r5, #176]	@ 0xb0
 800e33e:	f7fd f881 	bl	800b444 <DRV8301_enable>
 800e342:	4639      	mov	r1, r7
 800e344:	4630      	mov	r0, r6
 800e346:	f7fd f961 	bl	800b60c <DRV8301_setupSpi>
 800e34a:	2210      	movs	r2, #16
 800e34c:	f814 3c04 	ldrb.w	r3, [r4, #-4]
 800e350:	f885 20d5 	strb.w	r2, [r5, #213]	@ 0xd5
 800e354:	2401      	movs	r4, #1
 800e356:	f44f 62a8 	mov.w	r2, #1344	@ 0x540
 800e35a:	4639      	mov	r1, r7
 800e35c:	4630      	mov	r0, r6
 800e35e:	f8a5 20d6 	strh.w	r2, [r5, #214]	@ 0xd6
 800e362:	f885 30d9 	strb.w	r3, [r5, #217]	@ 0xd9
 800e366:	f885 40e4 	strb.w	r4, [r5, #228]	@ 0xe4
 800e36a:	f7fd f8b3 	bl	800b4d4 <DRV8301_writeData>
 800e36e:	4639      	mov	r1, r7
 800e370:	4630      	mov	r0, r6
 800e372:	f885 40e5 	strb.w	r4, [r5, #229]	@ 0xe5
 800e376:	b009      	add	sp, #36	@ 0x24
 800e378:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e37c:	f7fd b8ce 	b.w	800b51c <DRV8301_readData>
 800e380:	ed9f 6a07 	vldr	s12, [pc, #28]	@ 800e3a0 <Motor::DRV8301_setup()+0x108>
 800e384:	ac02      	add	r4, sp, #8
 800e386:	e7c9      	b.n	800e31c <Motor::DRV8301_setup()+0x84>
 800e388:	3f9b851f 	.word	0x3f9b851f
 800e38c:	42200000 	.word	0x42200000
 800e390:	42a00000 	.word	0x42a00000
 800e394:	41200000 	.word	0x41200000
 800e398:	41a00000 	.word	0x41a00000
 800e39c:	3f8e38e4 	.word	0x3f8e38e4
 800e3a0:	3dcccccd 	.word	0x3dcccccd

0800e3a4 <Motor::do_checks()>:
 800e3a4:	b538      	push	{r3, r4, r5, lr}
 800e3a6:	8b81      	ldrh	r1, [r0, #28]
 800e3a8:	4605      	mov	r5, r0
 800e3aa:	6980      	ldr	r0, [r0, #24]
 800e3ac:	f7fc f888 	bl	800a4c0 <HAL_GPIO_ReadPin>
 800e3b0:	b108      	cbz	r0, 800e3b6 <Motor::do_checks()+0x12>
 800e3b2:	2001      	movs	r0, #1
 800e3b4:	bd38      	pop	{r3, r4, r5, pc}
 800e3b6:	4604      	mov	r4, r0
 800e3b8:	f105 0028 	add.w	r0, r5, #40	@ 0x28
 800e3bc:	f7fd f858 	bl	800b470 <DRV8301_getFaultType>
 800e3c0:	2108      	movs	r1, #8
 800e3c2:	f8a5 00c0 	strh.w	r0, [r5, #192]	@ 0xc0
 800e3c6:	f105 0064 	add.w	r0, r5, #100	@ 0x64
 800e3ca:	f7ff febf 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800e3ce:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 800e3d0:	2140      	movs	r1, #64	@ 0x40
 800e3d2:	3050      	adds	r0, #80	@ 0x50
 800e3d4:	f7ff febe 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e3d8:	4628      	mov	r0, r5
 800e3da:	f7fd fc21 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e3de:	f7fe f80b 	bl	800c3f8 <update_brake_current>
 800e3e2:	4620      	mov	r0, r4
 800e3e4:	bd38      	pop	{r3, r4, r5, pc}
 800e3e6:	bf00      	nop

0800e3e8 <Motor::effective_current_lim()>:
 800e3e8:	b538      	push	{r3, r4, r5, lr}
 800e3ea:	e9d0 2508 	ldrd	r2, r5, [r0, #32]
 800e3ee:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800e3f0:	ed92 0a09 	vldr	s0, [r2, #36]	@ 0x24
 800e3f4:	6a1a      	ldr	r2, [r3, #32]
 800e3f6:	f892 2020 	ldrb.w	r2, [r2, #32]
 800e3fa:	2a02      	cmp	r2, #2
 800e3fc:	ed2d 8b02 	vpush	{d8}
 800e400:	4604      	mov	r4, r0
 800e402:	d02a      	beq.n	800e45a <Motor::effective_current_lim()+0x72>
 800e404:	ed93 8a2b 	vldr	s16, [r3, #172]	@ 0xac
 800e408:	eeb4 0ac8 	vcmpe.f32	s0, s16
 800e40c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e410:	bfd8      	it	le
 800e412:	eeb0 8a40 	vmovle.f32	s16, s0
 800e416:	6b68      	ldr	r0, [r5, #52]	@ 0x34
 800e418:	6803      	ldr	r3, [r0, #0]
 800e41a:	689b      	ldr	r3, [r3, #8]
 800e41c:	4798      	blx	r3
 800e41e:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
 800e420:	6a22      	ldr	r2, [r4, #32]
 800e422:	6803      	ldr	r3, [r0, #0]
 800e424:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800e428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e42c:	eef0 7a40 	vmov.f32	s15, s0
 800e430:	689b      	ldr	r3, [r3, #8]
 800e432:	ed92 0a09 	vldr	s0, [r2, #36]	@ 0x24
 800e436:	bfc8      	it	gt
 800e438:	eeb0 8a67 	vmovgt.f32	s16, s15
 800e43c:	4798      	blx	r3
 800e43e:	eeb4 0ac8 	vcmpe.f32	s0, s16
 800e442:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e446:	bf48      	it	mi
 800e448:	eeb0 8a40 	vmovmi.f32	s16, s0
 800e44c:	eeb0 0a48 	vmov.f32	s0, s16
 800e450:	ed84 8a3a 	vstr	s16, [r4, #232]	@ 0xe8
 800e454:	ecbd 8b02 	vpop	{d8}
 800e458:	bd38      	pop	{r3, r4, r5, pc}
 800e45a:	4b07      	ldr	r3, [pc, #28]	@ (800e478 <Motor::effective_current_lim()+0x90>)
 800e45c:	eddf 7a07 	vldr	s15, [pc, #28]	@ 800e47c <Motor::effective_current_lim()+0x94>
 800e460:	ed93 8a00 	vldr	s16, [r3]
 800e464:	ee28 8a27 	vmul.f32	s16, s16, s15
 800e468:	eeb4 0ac8 	vcmpe.f32	s0, s16
 800e46c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e470:	bfd8      	it	le
 800e472:	eeb0 8a40 	vmovle.f32	s16, s0
 800e476:	e7ce      	b.n	800e416 <Motor::effective_current_lim()+0x2e>
 800e478:	20000200 	.word	0x20000200
 800e47c:	3f10d87c 	.word	0x3f10d87c

0800e480 <Motor::max_available_torque()>:
 800e480:	6a03      	ldr	r3, [r0, #32]
 800e482:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e486:	2b03      	cmp	r3, #3
 800e488:	b510      	push	{r4, lr}
 800e48a:	4604      	mov	r4, r0
 800e48c:	d01b      	beq.n	800e4c6 <Motor::max_available_torque()+0x46>
 800e48e:	f7ff ffab 	bl	800e3e8 <Motor::effective_current_lim()>
 800e492:	6a23      	ldr	r3, [r4, #32]
 800e494:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 800e50c <Motor::max_available_torque()+0x8c>
 800e498:	edd3 6a06 	vldr	s13, [r3, #24]
 800e49c:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800e4a0:	ee20 0a26 	vmul.f32	s0, s0, s13
 800e4a4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 800e4a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4ac:	bf58      	it	pl
 800e4ae:	eeb0 7a40 	vmovpl.f32	s14, s0
 800e4b2:	eef4 7ac7 	vcmpe.f32	s15, s14
 800e4b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4ba:	bf54      	ite	pl
 800e4bc:	eeb0 0a47 	vmovpl.f32	s0, s14
 800e4c0:	eeb0 0a67 	vmovmi.f32	s0, s15
 800e4c4:	bd10      	pop	{r4, pc}
 800e4c6:	f7ff ff8f 	bl	800e3e8 <Motor::effective_current_lim()>
 800e4ca:	6a23      	ldr	r3, [r4, #32]
 800e4cc:	ed94 6a2d 	vldr	s12, [r4, #180]	@ 0xb4
 800e4d0:	ed93 7a06 	vldr	s14, [r3, #24]
 800e4d4:	eddf 6a0d 	vldr	s13, [pc, #52]	@ 800e50c <Motor::max_available_torque()+0x8c>
 800e4d8:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800e4dc:	ee27 7a06 	vmul.f32	s14, s14, s12
 800e4e0:	ee27 0a00 	vmul.f32	s0, s14, s0
 800e4e4:	eeb4 0ae6 	vcmpe.f32	s0, s13
 800e4e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4ec:	bf54      	ite	pl
 800e4ee:	eeb0 7a40 	vmovpl.f32	s14, s0
 800e4f2:	eeb0 7a66 	vmovmi.f32	s14, s13
 800e4f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e4fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e4fe:	bfd4      	ite	le
 800e500:	eeb0 0a47 	vmovle.f32	s0, s14
 800e504:	eeb0 0a67 	vmovgt.f32	s0, s15
 800e508:	bd10      	pop	{r4, pc}
 800e50a:	bf00      	nop
 800e50c:	00000000 	.word	0x00000000

0800e510 <Motor::log_timing(TimingLog_t)>:
 800e510:	4b05      	ldr	r3, [pc, #20]	@ (800e528 <Motor::log_timing(TimingLog_t)+0x18>)
 800e512:	681b      	ldr	r3, [r3, #0]
 800e514:	290b      	cmp	r1, #11
 800e516:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e518:	d804      	bhi.n	800e524 <Motor::log_timing(TimingLog_t)+0x14>
 800e51a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 800e51e:	005b      	lsls	r3, r3, #1
 800e520:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
 800e524:	4770      	bx	lr
 800e526:	bf00      	nop
 800e528:	20000650 	.word	0x20000650

0800e52c <Motor::phase_current_from_adcval(unsigned long)>:
 800e52c:	edd0 7a1e 	vldr	s15, [r0, #120]	@ 0x78
 800e530:	6803      	ldr	r3, [r0, #0]
 800e532:	eddf 6a08 	vldr	s13, [pc, #32]	@ 800e554 <Motor::phase_current_from_adcval(unsigned long)+0x28>
 800e536:	ed93 7a02 	vldr	s14, [r3, #8]
 800e53a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e53e:	f5a1 6100 	sub.w	r1, r1, #2048	@ 0x800
 800e542:	ee67 7a87 	vmul.f32	s15, s15, s14
 800e546:	ee07 1a10 	vmov	s14, r1
 800e54a:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800e54e:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e552:	4770      	bx	lr
 800e554:	3a533333 	.word	0x3a533333

0800e558 <Motor::enqueue_modulation_timings(float, float)>:
 800e558:	b510      	push	{r4, lr}
 800e55a:	b084      	sub	sp, #16
 800e55c:	4604      	mov	r4, r0
 800e55e:	aa03      	add	r2, sp, #12
 800e560:	a902      	add	r1, sp, #8
 800e562:	a801      	add	r0, sp, #4
 800e564:	f7fd f8c4 	bl	800b6f0 <SVM>
 800e568:	bb10      	cbnz	r0, 800e5b0 <Motor::enqueue_modulation_timings(float, float)+0x58>
 800e56a:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 800e5d4 <Motor::enqueue_modulation_timings(float, float)+0x7c>
 800e56e:	eddd 6a01 	vldr	s13, [sp, #4]
 800e572:	ed9d 7a02 	vldr	s14, [sp, #8]
 800e576:	eddd 7a03 	vldr	s15, [sp, #12]
 800e57a:	ee66 6a86 	vmul.f32	s13, s13, s12
 800e57e:	ee27 7a06 	vmul.f32	s14, s14, s12
 800e582:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 800e586:	ee67 7a86 	vmul.f32	s15, s15, s12
 800e58a:	ee16 3a90 	vmov	r3, s13
 800e58e:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 800e592:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800e596:	87a3      	strh	r3, [r4, #60]	@ 0x3c
 800e598:	ee17 3a10 	vmov	r3, s14
 800e59c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800e59e:	ee17 3a90 	vmov	r3, s15
 800e5a2:	2001      	movs	r0, #1
 800e5a4:	f8a4 3040 	strh.w	r3, [r4, #64]	@ 0x40
 800e5a8:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
 800e5ac:	b004      	add	sp, #16
 800e5ae:	bd10      	pop	{r4, pc}
 800e5b0:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800e5b4:	2180      	movs	r1, #128	@ 0x80
 800e5b6:	f7ff fdc9 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800e5ba:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800e5bc:	2140      	movs	r1, #64	@ 0x40
 800e5be:	3050      	adds	r0, #80	@ 0x50
 800e5c0:	f7ff fdc8 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	f7fd fb2b 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e5ca:	f7fd ff15 	bl	800c3f8 <update_brake_current>
 800e5ce:	2000      	movs	r0, #0
 800e5d0:	b004      	add	sp, #16
 800e5d2:	bd10      	pop	{r4, pc}
 800e5d4:	455ac000 	.word	0x455ac000

0800e5d8 <Motor::measure_phase_inductance(float, float)>:
 800e5d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e5dc:	ed2d 8b04 	vpush	{d8-d9}
 800e5e0:	2600      	movs	r6, #0
 800e5e2:	b084      	sub	sp, #16
 800e5e4:	e9cd 6602 	strd	r6, r6, [sp, #8]
 800e5e8:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 800e5ea:	ed9f 8a57 	vldr	s16, [pc, #348]	@ 800e748 <Motor::measure_phase_inductance(float, float)+0x170>
 800e5ee:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 800e754 <Motor::measure_phase_inductance(float, float)+0x17c>
 800e5f2:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800e758 <Motor::measure_phase_inductance(float, float)+0x180>
 800e5f6:	ed8d 0a00 	vstr	s0, [sp]
 800e5fa:	eeb0 9a40 	vmov.f32	s18, s0
 800e5fe:	eef0 8a60 	vmov.f32	s17, s1
 800e602:	4605      	mov	r5, r0
 800e604:	edcd 0a01 	vstr	s1, [sp, #4]
 800e608:	e012      	b.n	800e630 <Motor::measure_phase_inductance(float, float)+0x58>
 800e60a:	f8d9 2000 	ldr.w	r2, [r9]
 800e60e:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800e610:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800e612:	0049      	lsls	r1, r1, #1
 800e614:	0052      	lsls	r2, r2, #1
 800e616:	f8a5 105a 	strh.w	r1, [r5, #90]	@ 0x5a
 800e61a:	f8a5 2054 	strh.w	r2, [r5, #84]	@ 0x54
 800e61e:	67a3      	str	r3, [r4, #120]	@ 0x78
 800e620:	f7fe fcda 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800e624:	f242 7310 	movw	r3, #10000	@ 0x2710
 800e628:	2800      	cmp	r0, #0
 800e62a:	d045      	beq.n	800e6b8 <Motor::measure_phase_inductance(float, float)+0xe0>
 800e62c:	429e      	cmp	r6, r3
 800e62e:	d04d      	beq.n	800e6cc <Motor::measure_phase_inductance(float, float)+0xf4>
 800e630:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800e634:	4620      	mov	r0, r4
 800e636:	2b00      	cmp	r3, #0
 800e638:	d148      	bne.n	800e6cc <Motor::measure_phase_inductance(float, float)+0xf4>
 800e63a:	f7fe fde1 	bl	800d200 <Axis::do_checks()>
 800e63e:	4682      	mov	sl, r0
 800e640:	4620      	mov	r0, r4
 800e642:	f7fe fe4f 	bl	800d2e4 <Axis::do_updates()>
 800e646:	4607      	mov	r7, r0
 800e648:	4620      	mov	r0, r4
 800e64a:	f7fe fe71 	bl	800d330 <Axis::watchdog_check()>
 800e64e:	f006 0301 	and.w	r3, r6, #1
 800e652:	a904      	add	r1, sp, #16
 800e654:	4602      	mov	r2, r0
 800e656:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 800e65a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800e65e:	4628      	mov	r0, r5
 800e660:	f1ba 0f00 	cmp.w	sl, #0
 800e664:	d001      	beq.n	800e66a <Motor::measure_phase_inductance(float, float)+0x92>
 800e666:	b107      	cbz	r7, 800e66a <Motor::measure_phase_inductance(float, float)+0x92>
 800e668:	b91a      	cbnz	r2, 800e672 <Motor::measure_phase_inductance(float, float)+0x9a>
 800e66a:	6f62      	ldr	r2, [r4, #116]	@ 0x74
 800e66c:	7812      	ldrb	r2, [r2, #0]
 800e66e:	2a01      	cmp	r2, #1
 800e670:	d12c      	bne.n	800e6cc <Motor::measure_phase_inductance(float, float)+0xf4>
 800e672:	ed98 6a00 	vldr	s12, [r8]
 800e676:	ed95 7a1a 	vldr	s14, [r5, #104]	@ 0x68
 800e67a:	ed13 0a04 	vldr	s0, [r3, #-16]
 800e67e:	eec7 6a86 	vdiv.f32	s13, s15, s12
 800e682:	3601      	adds	r6, #1
 800e684:	ed95 6a1b 	vldr	s12, [r5, #108]	@ 0x6c
 800e688:	ed53 7a02 	vldr	s15, [r3, #-8]
 800e68c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e690:	ee66 0a88 	vmul.f32	s1, s13, s16
 800e694:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e698:	ee26 0a80 	vmul.f32	s0, s13, s0
 800e69c:	ed43 7a02 	vstr	s15, [r3, #-8]
 800e6a0:	f7ff ff5a 	bl	800e558 <Motor::enqueue_modulation_timings(float, float)>
 800e6a4:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800e6a6:	4602      	mov	r2, r0
 800e6a8:	3301      	adds	r3, #1
 800e6aa:	4620      	mov	r0, r4
 800e6ac:	2a00      	cmp	r2, #0
 800e6ae:	d1ac      	bne.n	800e60a <Motor::measure_phase_inductance(float, float)+0x32>
 800e6b0:	67a3      	str	r3, [r4, #120]	@ 0x78
 800e6b2:	f7fe fc91 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800e6b6:	b948      	cbnz	r0, 800e6cc <Motor::measure_phase_inductance(float, float)+0xf4>
 800e6b8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800e6ba:	f7fd fab1 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e6be:	f7fd fe9b 	bl	800c3f8 <update_brake_current>
 800e6c2:	2108      	movs	r1, #8
 800e6c4:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800e6c8:	f7ff fd44 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e6cc:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
 800e6ce:	6d13      	ldr	r3, [r2, #80]	@ 0x50
 800e6d0:	bb9b      	cbnz	r3, 800e73a <Motor::measure_phase_inductance(float, float)+0x162>
 800e6d2:	ed9d 7a02 	vldr	s14, [sp, #8]
 800e6d6:	eddd 7a03 	vldr	s15, [sp, #12]
 800e6da:	6a2b      	ldr	r3, [r5, #32]
 800e6dc:	ee78 8ac9 	vsub.f32	s17, s17, s18
 800e6e0:	eef5 6a04 	vmov.f32	s13, #84	@ 0x3ea00000  0.3125000
 800e6e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e6e8:	ee68 8aa6 	vmul.f32	s17, s17, s13
 800e6ec:	ee88 7aa7 	vdiv.f32	s14, s17, s15
 800e6f0:	eddf 7a16 	vldr	s15, [pc, #88]	@ 800e74c <Motor::measure_phase_inductance(float, float)+0x174>
 800e6f4:	ed83 7a04 	vstr	s14, [r3, #16]
 800e6f8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e6fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e700:	d40c      	bmi.n	800e71c <Motor::measure_phase_inductance(float, float)+0x144>
 800e702:	eddf 7a13 	vldr	s15, [pc, #76]	@ 800e750 <Motor::measure_phase_inductance(float, float)+0x178>
 800e706:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e70e:	dc05      	bgt.n	800e71c <Motor::measure_phase_inductance(float, float)+0x144>
 800e710:	2001      	movs	r0, #1
 800e712:	b004      	add	sp, #16
 800e714:	ecbd 8b04 	vpop	{d8-d9}
 800e718:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e71c:	2102      	movs	r1, #2
 800e71e:	f105 0064 	add.w	r0, r5, #100	@ 0x64
 800e722:	f7ff fd13 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800e726:	f102 0050 	add.w	r0, r2, #80	@ 0x50
 800e72a:	2140      	movs	r1, #64	@ 0x40
 800e72c:	f7ff fd12 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e730:	4628      	mov	r0, r5
 800e732:	f7fd fa75 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e736:	f7fd fe5f 	bl	800c3f8 <update_brake_current>
 800e73a:	2000      	movs	r0, #0
 800e73c:	b004      	add	sp, #16
 800e73e:	ecbd 8b04 	vpop	{d8-d9}
 800e742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e746:	bf00      	nop
 800e748:	00000000 	.word	0x00000000
 800e74c:	360637bd 	.word	0x360637bd
 800e750:	3b83126f 	.word	0x3b83126f
 800e754:	20000650 	.word	0x20000650
 800e758:	20000200 	.word	0x20000200

0800e75c <Motor::measure_phase_resistance(float, float)>:
 800e75c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e760:	ed2d 8b06 	vpush	{d8-d10}
 800e764:	ed9f 8a49 	vldr	s16, [pc, #292]	@ 800e88c <Motor::measure_phase_resistance(float, float)+0x130>
 800e768:	6a44      	ldr	r4, [r0, #36]	@ 0x24
 800e76a:	eddf 9a49 	vldr	s19, [pc, #292]	@ 800e890 <Motor::measure_phase_resistance(float, float)+0x134>
 800e76e:	f8df 9128 	ldr.w	r9, [pc, #296]	@ 800e898 <Motor::measure_phase_resistance(float, float)+0x13c>
 800e772:	4605      	mov	r5, r0
 800e774:	eeb0 9a40 	vmov.f32	s18, s0
 800e778:	eef0 8a60 	vmov.f32	s17, s1
 800e77c:	eeb0 aa48 	vmov.f32	s20, s16
 800e780:	f645 58bf 	movw	r8, #23999	@ 0x5dbf
 800e784:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800e788:	4620      	mov	r0, r4
 800e78a:	2b00      	cmp	r3, #0
 800e78c:	d146      	bne.n	800e81c <Motor::measure_phase_resistance(float, float)+0xc0>
 800e78e:	f7fe fd37 	bl	800d200 <Axis::do_checks()>
 800e792:	4606      	mov	r6, r0
 800e794:	4620      	mov	r0, r4
 800e796:	f7fe fda5 	bl	800d2e4 <Axis::do_updates()>
 800e79a:	4607      	mov	r7, r0
 800e79c:	4620      	mov	r0, r4
 800e79e:	f7fe fdc7 	bl	800d330 <Axis::watchdog_check()>
 800e7a2:	eef1 6a68 	vneg.f32	s13, s17
 800e7a6:	b10e      	cbz	r6, 800e7ac <Motor::measure_phase_resistance(float, float)+0x50>
 800e7a8:	b107      	cbz	r7, 800e7ac <Motor::measure_phase_resistance(float, float)+0x50>
 800e7aa:	b918      	cbnz	r0, 800e7b4 <Motor::measure_phase_resistance(float, float)+0x58>
 800e7ac:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e7ae:	781b      	ldrb	r3, [r3, #0]
 800e7b0:	2b01      	cmp	r3, #1
 800e7b2:	d133      	bne.n	800e81c <Motor::measure_phase_resistance(float, float)+0xc0>
 800e7b4:	edd5 7a1a 	vldr	s15, [r5, #104]	@ 0x68
 800e7b8:	ed95 7a1b 	vldr	s14, [r5, #108]	@ 0x6c
 800e7bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e7c0:	ee77 7a89 	vadd.f32	s15, s15, s18
 800e7c4:	eea7 8aa9 	vfma.f32	s16, s15, s19
 800e7c8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 800e7cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7d0:	dc04      	bgt.n	800e7dc <Motor::measure_phase_resistance(float, float)+0x80>
 800e7d2:	eeb4 8ae6 	vcmpe.f32	s16, s13
 800e7d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7da:	d52c      	bpl.n	800e836 <Motor::measure_phase_resistance(float, float)+0xda>
 800e7dc:	2101      	movs	r1, #1
 800e7de:	f105 0064 	add.w	r0, r5, #100	@ 0x64
 800e7e2:	f7ff fcb3 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800e7e6:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 800e7e8:	2140      	movs	r1, #64	@ 0x40
 800e7ea:	3050      	adds	r0, #80	@ 0x50
 800e7ec:	f7ff fcb2 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e7f0:	4628      	mov	r0, r5
 800e7f2:	f7fd fa15 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e7f6:	f7fd fdff 	bl	800c3f8 <update_brake_current>
 800e7fa:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800e7fc:	3301      	adds	r3, #1
 800e7fe:	4620      	mov	r0, r4
 800e800:	67a3      	str	r3, [r4, #120]	@ 0x78
 800e802:	f7fe fbe9 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800e806:	b948      	cbnz	r0, 800e81c <Motor::measure_phase_resistance(float, float)+0xc0>
 800e808:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800e80a:	f7fd fa09 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800e80e:	f7fd fdf3 	bl	800c3f8 <update_brake_current>
 800e812:	2108      	movs	r1, #8
 800e814:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800e818:	f7ff fc9c 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800e81c:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800e81e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e820:	bb7b      	cbnz	r3, 800e882 <Motor::measure_phase_resistance(float, float)+0x126>
 800e822:	eec8 7a09 	vdiv.f32	s15, s16, s18
 800e826:	ecbd 8b06 	vpop	{d8-d10}
 800e82a:	6a2b      	ldr	r3, [r5, #32]
 800e82c:	2001      	movs	r0, #1
 800e82e:	edc3 7a05 	vstr	s15, [r3, #20]
 800e832:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e836:	edd9 7a00 	vldr	s15, [r9]
 800e83a:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800e83e:	ee87 0a27 	vdiv.f32	s0, s14, s15
 800e842:	4628      	mov	r0, r5
 800e844:	ee60 0a0a 	vmul.f32	s1, s0, s20
 800e848:	ee28 0a00 	vmul.f32	s0, s16, s0
 800e84c:	f7ff fe84 	bl	800e558 <Motor::enqueue_modulation_timings(float, float)>
 800e850:	4603      	mov	r3, r0
 800e852:	4a10      	ldr	r2, [pc, #64]	@ (800e894 <Motor::measure_phase_resistance(float, float)+0x138>)
 800e854:	4620      	mov	r0, r4
 800e856:	2b00      	cmp	r3, #0
 800e858:	d0cf      	beq.n	800e7fa <Motor::measure_phase_resistance(float, float)+0x9e>
 800e85a:	6812      	ldr	r2, [r2, #0]
 800e85c:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800e85e:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800e860:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800e862:	0049      	lsls	r1, r1, #1
 800e864:	0052      	lsls	r2, r2, #1
 800e866:	3301      	adds	r3, #1
 800e868:	f8a5 105a 	strh.w	r1, [r5, #90]	@ 0x5a
 800e86c:	f8a5 2052 	strh.w	r2, [r5, #82]	@ 0x52
 800e870:	67a3      	str	r3, [r4, #120]	@ 0x78
 800e872:	f7fe fbb1 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800e876:	2800      	cmp	r0, #0
 800e878:	d0c6      	beq.n	800e808 <Motor::measure_phase_resistance(float, float)+0xac>
 800e87a:	f1b8 0801 	subs.w	r8, r8, #1
 800e87e:	d181      	bne.n	800e784 <Motor::measure_phase_resistance(float, float)+0x28>
 800e880:	e7cc      	b.n	800e81c <Motor::measure_phase_resistance(float, float)+0xc0>
 800e882:	ecbd 8b06 	vpop	{d8-d10}
 800e886:	2000      	movs	r0, #0
 800e888:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e88c:	00000000 	.word	0x00000000
 800e890:	3aa3d70b 	.word	0x3aa3d70b
 800e894:	20000650 	.word	0x20000650
 800e898:	20000200 	.word	0x20000200

0800e89c <Motor::run_calibration()>:
 800e89c:	b510      	push	{r4, lr}
 800e89e:	6a03      	ldr	r3, [r0, #32]
 800e8a0:	f893 2020 	ldrb.w	r2, [r3, #32]
 800e8a4:	ed2d 8b02 	vpush	{d8}
 800e8a8:	4604      	mov	r4, r0
 800e8aa:	b1ca      	cbz	r2, 800e8e0 <Motor::run_calibration()+0x44>
 800e8ac:	2a03      	cmp	r2, #3
 800e8ae:	d017      	beq.n	800e8e0 <Motor::run_calibration()+0x44>
 800e8b0:	2a02      	cmp	r2, #2
 800e8b2:	d11f      	bne.n	800e8f4 <Motor::run_calibration()+0x58>
 800e8b4:	edd3 7a04 	vldr	s15, [r3, #16]
 800e8b8:	ed93 6a05 	vldr	s12, [r3, #20]
 800e8bc:	edd3 6a0d 	vldr	s13, [r3, #52]	@ 0x34
 800e8c0:	ee86 7a27 	vdiv.f32	s14, s12, s15
 800e8c4:	ecbd 8b02 	vpop	{d8}
 800e8c8:	2001      	movs	r0, #1
 800e8ca:	f884 0067 	strb.w	r0, [r4, #103]	@ 0x67
 800e8ce:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e8d2:	edc4 7a1f 	vstr	s15, [r4, #124]	@ 0x7c
 800e8d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e8da:	edc4 7a20 	vstr	s15, [r4, #128]	@ 0x80
 800e8de:	bd10      	pop	{r4, pc}
 800e8e0:	ed93 8a03 	vldr	s16, [r3, #12]
 800e8e4:	ed93 0a02 	vldr	s0, [r3, #8]
 800e8e8:	eef0 0a48 	vmov.f32	s1, s16
 800e8ec:	4620      	mov	r0, r4
 800e8ee:	f7ff ff35 	bl	800e75c <Motor::measure_phase_resistance(float, float)>
 800e8f2:	b918      	cbnz	r0, 800e8fc <Motor::run_calibration()+0x60>
 800e8f4:	ecbd 8b02 	vpop	{d8}
 800e8f8:	2000      	movs	r0, #0
 800e8fa:	bd10      	pop	{r4, pc}
 800e8fc:	eef0 0a48 	vmov.f32	s1, s16
 800e900:	eeb1 0a48 	vneg.f32	s0, s16
 800e904:	4620      	mov	r0, r4
 800e906:	f7ff fe67 	bl	800e5d8 <Motor::measure_phase_inductance(float, float)>
 800e90a:	2800      	cmp	r0, #0
 800e90c:	d0f2      	beq.n	800e8f4 <Motor::run_calibration()+0x58>
 800e90e:	6a23      	ldr	r3, [r4, #32]
 800e910:	e7d0      	b.n	800e8b4 <Motor::run_calibration()+0x18>
 800e912:	bf00      	nop

0800e914 <Motor::enqueue_voltage_timings(float, float)>:
 800e914:	4b0b      	ldr	r3, [pc, #44]	@ (800e944 <Motor::enqueue_voltage_timings(float, float)+0x30>)
 800e916:	ed93 7a00 	vldr	s14, [r3]
 800e91a:	eef7 6a08 	vmov.f32	s13, #120	@ 0x3fc00000  1.5
 800e91e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800e922:	b510      	push	{r4, lr}
 800e924:	4604      	mov	r4, r0
 800e926:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800e92a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800e92e:	f7ff fe13 	bl	800e558 <Motor::enqueue_modulation_timings(float, float)>
 800e932:	b128      	cbz	r0, 800e940 <Motor::enqueue_voltage_timings(float, float)+0x2c>
 800e934:	4b04      	ldr	r3, [pc, #16]	@ (800e948 <Motor::enqueue_voltage_timings(float, float)+0x34>)
 800e936:	681b      	ldr	r3, [r3, #0]
 800e938:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e93a:	005b      	lsls	r3, r3, #1
 800e93c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e940:	bd10      	pop	{r4, pc}
 800e942:	bf00      	nop
 800e944:	20000200 	.word	0x20000200
 800e948:	20000650 	.word	0x20000650

0800e94c <Motor::FOC_voltage(float, float, float)>:
 800e94c:	b510      	push	{r4, lr}
 800e94e:	ed2d 8b04 	vpush	{d8-d9}
 800e952:	eeb0 9a40 	vmov.f32	s18, s0
 800e956:	eeb0 0a41 	vmov.f32	s0, s2
 800e95a:	eeb0 8a60 	vmov.f32	s16, s1
 800e95e:	eef0 9a41 	vmov.f32	s19, s2
 800e962:	4604      	mov	r4, r0
 800e964:	f7fd f8a2 	bl	800baac <our_arm_cos_f32>
 800e968:	eef0 8a40 	vmov.f32	s17, s0
 800e96c:	eeb0 0a69 	vmov.f32	s0, s19
 800e970:	f7fd f850 	bl	800ba14 <our_arm_sin_f32>
 800e974:	4b10      	ldr	r3, [pc, #64]	@ (800e9b8 <Motor::FOC_voltage(float, float, float)+0x6c>)
 800e976:	edd3 6a00 	vldr	s13, [r3]
 800e97a:	eeb7 6a08 	vmov.f32	s12, #120	@ 0x3fc00000  1.5
 800e97e:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800e982:	4620      	mov	r0, r4
 800e984:	eef0 7a40 	vmov.f32	s15, s0
 800e988:	ee67 7a89 	vmul.f32	s15, s15, s18
 800e98c:	ee28 0a40 	vnmul.f32	s0, s16, s0
 800e990:	eee8 7a88 	vfma.f32	s15, s17, s16
 800e994:	eea8 0a89 	vfma.f32	s0, s17, s18
 800e998:	ee67 0a87 	vmul.f32	s1, s15, s14
 800e99c:	ee20 0a07 	vmul.f32	s0, s0, s14
 800e9a0:	f7ff fdda 	bl	800e558 <Motor::enqueue_modulation_timings(float, float)>
 800e9a4:	b128      	cbz	r0, 800e9b2 <Motor::FOC_voltage(float, float, float)+0x66>
 800e9a6:	4b05      	ldr	r3, [pc, #20]	@ (800e9bc <Motor::FOC_voltage(float, float, float)+0x70>)
 800e9a8:	681b      	ldr	r3, [r3, #0]
 800e9aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e9ac:	005b      	lsls	r3, r3, #1
 800e9ae:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800e9b2:	ecbd 8b04 	vpop	{d8-d9}
 800e9b6:	bd10      	pop	{r4, pc}
 800e9b8:	20000200 	.word	0x20000200
 800e9bc:	20000650 	.word	0x20000650

0800e9c0 <Motor::FOC_current(float, float, float, float)>:
 800e9c0:	b510      	push	{r4, lr}
 800e9c2:	edd0 7a1a 	vldr	s15, [r0, #104]	@ 0x68
 800e9c6:	ed90 7a2c 	vldr	s14, [r0, #176]	@ 0xb0
 800e9ca:	eef0 6ae7 	vabs.f32	s13, s15
 800e9ce:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800e9d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e9d6:	ed2d 8b08 	vpush	{d8-d11}
 800e9da:	4604      	mov	r4, r0
 800e9dc:	edc0 0a27 	vstr	s1, [r0, #156]	@ 0x9c
 800e9e0:	d408      	bmi.n	800e9f4 <Motor::FOC_current(float, float, float, float)+0x34>
 800e9e2:	edd0 6a1b 	vldr	s13, [r0, #108]	@ 0x6c
 800e9e6:	eeb0 6ae6 	vabs.f32	s12, s13
 800e9ea:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800e9ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e9f2:	d513      	bpl.n	800ea1c <Motor::FOC_current(float, float, float, float)+0x5c>
 800e9f4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800e9f8:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800e9fc:	f7ff fba6 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800ea00:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800ea02:	2140      	movs	r1, #64	@ 0x40
 800ea04:	3050      	adds	r0, #80	@ 0x50
 800ea06:	f7ff fba5 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800ea0a:	4620      	mov	r0, r4
 800ea0c:	f7fd f908 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800ea10:	f7fd fcf2 	bl	800c3f8 <update_brake_current>
 800ea14:	2000      	movs	r0, #0
 800ea16:	ecbd 8b08 	vpop	{d8-d11}
 800ea1a:	bd10      	pop	{r4, pc}
 800ea1c:	ee37 9aa6 	vadd.f32	s18, s15, s13
 800ea20:	ed9f 7a7e 	vldr	s14, [pc, #504]	@ 800ec1c <Motor::FOC_current(float, float, float, float)+0x25c>
 800ea24:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ea28:	eeb0 aa40 	vmov.f32	s20, s0
 800ea2c:	eeb0 0a41 	vmov.f32	s0, s2
 800ea30:	ee27 8a87 	vmul.f32	s16, s15, s14
 800ea34:	eef0 8a41 	vmov.f32	s17, s2
 800ea38:	eef0 9a60 	vmov.f32	s19, s1
 800ea3c:	eef0 aa61 	vmov.f32	s21, s3
 800ea40:	f7fd f834 	bl	800baac <our_arm_cos_f32>
 800ea44:	eeb0 ba40 	vmov.f32	s22, s0
 800ea48:	eeb0 0a68 	vmov.f32	s0, s17
 800ea4c:	f7fc ffe2 	bl	800ba14 <our_arm_sin_f32>
 800ea50:	ee68 ba0b 	vmul.f32	s23, s16, s22
 800ea54:	ee28 8a00 	vmul.f32	s16, s16, s0
 800ea58:	eeb1 9a49 	vneg.f32	s18, s18
 800ea5c:	eea9 8a0b 	vfma.f32	s16, s18, s22
 800ea60:	4620      	mov	r0, r4
 800ea62:	ee69 8a00 	vmul.f32	s17, s18, s0
 800ea66:	ed94 7a28 	vldr	s14, [r4, #160]	@ 0xa0
 800ea6a:	edd4 7a29 	vldr	s15, [r4, #164]	@ 0xa4
 800ea6e:	edd4 6a2a 	vldr	s13, [r4, #168]	@ 0xa8
 800ea72:	ee3b bae8 	vsub.f32	s22, s23, s17
 800ea76:	ee38 6a67 	vsub.f32	s12, s16, s15
 800ea7a:	ee7b 5a47 	vsub.f32	s11, s22, s14
 800ea7e:	eee6 7a86 	vfma.f32	s15, s13, s12
 800ea82:	eea6 7aa5 	vfma.f32	s14, s13, s11
 800ea86:	edc4 7a29 	vstr	s15, [r4, #164]	@ 0xa4
 800ea8a:	ed84 7a28 	vstr	s14, [r4, #160]	@ 0xa0
 800ea8e:	f7ff fcab 	bl	800e3e8 <Motor::effective_current_lim()>
 800ea92:	6a23      	ldr	r3, [r4, #32]
 800ea94:	ee6b 7a0b 	vmul.f32	s15, s22, s22
 800ea98:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 800ea9c:	eee8 7a08 	vfma.f32	s15, s16, s16
 800eaa0:	ee70 6a07 	vadd.f32	s13, s0, s14
 800eaa4:	ee66 6aa6 	vmul.f32	s13, s13, s13
 800eaa8:	eef4 7ae6 	vcmpe.f32	s15, s13
 800eaac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eab0:	f300 80a4 	bgt.w	800ebfc <Motor::FOC_current(float, float, float, float)+0x23c>
 800eab4:	4b5a      	ldr	r3, [pc, #360]	@ (800ec20 <Motor::FOC_current(float, float, float, float)+0x260>)
 800eab6:	ed94 6a22 	vldr	s12, [r4, #136]	@ 0x88
 800eaba:	edd3 7a00 	vldr	s15, [r3]
 800eabe:	edd4 5a1f 	vldr	s11, [r4, #124]	@ 0x7c
 800eac2:	eddf 4a58 	vldr	s9, [pc, #352]	@ 800ec24 <Motor::FOC_current(float, float, float, float)+0x264>
 800eac6:	ed9f 5a58 	vldr	s10, [pc, #352]	@ 800ec28 <Motor::FOC_current(float, float, float, float)+0x268>
 800eaca:	eeb7 7a08 	vmov.f32	s14, #120	@ 0x3fc00000  1.5
 800eace:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ead2:	ee78 0aa9 	vadd.f32	s1, s17, s19
 800ead6:	ed94 7a21 	vldr	s14, [r4, #132]	@ 0x84
 800eada:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800eade:	eef0 8a46 	vmov.f32	s17, s12
 800eae2:	eee5 8aa0 	vfma.f32	s17, s11, s1
 800eae6:	ee3a 0a48 	vsub.f32	s0, s20, s16
 800eaea:	eef0 9a47 	vmov.f32	s19, s14
 800eaee:	eee5 9a80 	vfma.f32	s19, s11, s0
 800eaf2:	ee68 8aa6 	vmul.f32	s17, s17, s13
 800eaf6:	ee69 9aa6 	vmul.f32	s19, s19, s13
 800eafa:	ee68 6aa8 	vmul.f32	s13, s17, s17
 800eafe:	ee27 aaa4 	vmul.f32	s20, s15, s9
 800eb02:	eee9 6aa9 	vfma.f32	s13, s19, s19
 800eb06:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
 800eb0a:	eef1 7ae6 	vsqrt.f32	s15, s13
 800eb0e:	eec5 6a27 	vdiv.f32	s13, s10, s15
 800eb12:	eef4 6ae5 	vcmpe.f32	s13, s11
 800eb16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eb1a:	d464      	bmi.n	800ebe6 <Motor::FOC_current(float, float, float, float)+0x226>
 800eb1c:	edd4 5a20 	vldr	s11, [r4, #128]	@ 0x80
 800eb20:	eddf 7a42 	vldr	s15, [pc, #264]	@ 800ec2c <Motor::FOC_current(float, float, float, float)+0x26c>
 800eb24:	ee65 5aa7 	vmul.f32	s11, s11, s15
 800eb28:	eea0 7a25 	vfma.f32	s14, s0, s11
 800eb2c:	eea0 6aa5 	vfma.f32	s12, s1, s11
 800eb30:	eef0 6a47 	vmov.f32	s13, s14
 800eb34:	ee28 7a8b 	vmul.f32	s14, s17, s22
 800eb38:	ed84 6a22 	vstr	s12, [r4, #136]	@ 0x88
 800eb3c:	eea9 7a88 	vfma.f32	s14, s19, s16
 800eb40:	edc4 6a21 	vstr	s13, [r4, #132]	@ 0x84
 800eb44:	ed84 7a23 	vstr	s14, [r4, #140]	@ 0x8c
 800eb48:	eeb0 0a6a 	vmov.f32	s0, s21
 800eb4c:	f7fc ffae 	bl	800baac <our_arm_cos_f32>
 800eb50:	eeb0 8a40 	vmov.f32	s16, s0
 800eb54:	eeb0 0a6a 	vmov.f32	s0, s21
 800eb58:	f7fc ff5c 	bl	800ba14 <our_arm_sin_f32>
 800eb5c:	eef0 0a40 	vmov.f32	s1, s0
 800eb60:	ee69 0aa0 	vmul.f32	s1, s19, s1
 800eb64:	ee20 0a68 	vnmul.f32	s0, s0, s17
 800eb68:	eee8 0a88 	vfma.f32	s1, s17, s16
 800eb6c:	4620      	mov	r0, r4
 800eb6e:	eea9 0a88 	vfma.f32	s0, s19, s16
 800eb72:	ee6a 7a20 	vmul.f32	s15, s20, s1
 800eb76:	ee2a 7a00 	vmul.f32	s14, s20, s0
 800eb7a:	edc4 7a25 	vstr	s15, [r4, #148]	@ 0x94
 800eb7e:	ed84 7a24 	vstr	s14, [r4, #144]	@ 0x90
 800eb82:	f7ff fce9 	bl	800e558 <Motor::enqueue_modulation_timings(float, float)>
 800eb86:	2800      	cmp	r0, #0
 800eb88:	f43f af44 	beq.w	800ea14 <Motor::FOC_current(float, float, float, float)+0x54>
 800eb8c:	4b28      	ldr	r3, [pc, #160]	@ (800ec30 <Motor::FOC_current(float, float, float, float)+0x270>)
 800eb8e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800eb90:	681b      	ldr	r3, [r3, #0]
 800eb92:	6852      	ldr	r2, [r2, #4]
 800eb94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800eb96:	005b      	lsls	r3, r3, #1
 800eb98:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 800eb9c:	2a00      	cmp	r2, #0
 800eb9e:	f47f af3a 	bne.w	800ea16 <Motor::FOC_current(float, float, float, float)+0x56>
 800eba2:	ed94 7a21 	vldr	s14, [r4, #132]	@ 0x84
 800eba6:	4b23      	ldr	r3, [pc, #140]	@ (800ec34 <Motor::FOC_current(float, float, float, float)+0x274>)
 800eba8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800ebac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ebb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebb4:	d525      	bpl.n	800ec02 <Motor::FOC_current(float, float, float, float)+0x242>
 800ebb6:	2201      	movs	r2, #1
 800ebb8:	701a      	strb	r2, [r3, #0]
 800ebba:	491f      	ldr	r1, [pc, #124]	@ (800ec38 <Motor::FOC_current(float, float, float, float)+0x278>)
 800ebbc:	780b      	ldrb	r3, [r1, #0]
 800ebbe:	2b00      	cmp	r3, #0
 800ebc0:	f43f af29 	beq.w	800ea16 <Motor::FOC_current(float, float, float, float)+0x56>
 800ebc4:	4c1d      	ldr	r4, [pc, #116]	@ (800ec3c <Motor::FOC_current(float, float, float, float)+0x27c>)
 800ebc6:	4a1e      	ldr	r2, [pc, #120]	@ (800ec40 <Motor::FOC_current(float, float, float, float)+0x280>)
 800ebc8:	6823      	ldr	r3, [r4, #0]
 800ebca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800ebce:	3301      	adds	r3, #1
 800ebd0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800ebd4:	bf28      	it	cs
 800ebd6:	2300      	movcs	r3, #0
 800ebd8:	ed82 9a00 	vstr	s18, [r2]
 800ebdc:	bf32      	itee	cc
 800ebde:	6023      	strcc	r3, [r4, #0]
 800ebe0:	6023      	strcs	r3, [r4, #0]
 800ebe2:	700b      	strbcs	r3, [r1, #0]
 800ebe4:	e717      	b.n	800ea16 <Motor::FOC_current(float, float, float, float)+0x56>
 800ebe6:	eddf 7a17 	vldr	s15, [pc, #92]	@ 800ec44 <Motor::FOC_current(float, float, float, float)+0x284>
 800ebea:	ee69 9aa6 	vmul.f32	s19, s19, s13
 800ebee:	ee68 8aa6 	vmul.f32	s17, s17, s13
 800ebf2:	ee26 6a27 	vmul.f32	s12, s12, s15
 800ebf6:	ee67 6a27 	vmul.f32	s13, s14, s15
 800ebfa:	e79b      	b.n	800eb34 <Motor::FOC_current(float, float, float, float)+0x174>
 800ebfc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800ec00:	e6fa      	b.n	800e9f8 <Motor::FOC_current(float, float, float, float)+0x38>
 800ec02:	7819      	ldrb	r1, [r3, #0]
 800ec04:	2900      	cmp	r1, #0
 800ec06:	d0d8      	beq.n	800ebba <Motor::FOC_current(float, float, float, float)+0x1fa>
 800ec08:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ec0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec10:	dbd3      	blt.n	800ebba <Motor::FOC_current(float, float, float, float)+0x1fa>
 800ec12:	4909      	ldr	r1, [pc, #36]	@ (800ec38 <Motor::FOC_current(float, float, float, float)+0x278>)
 800ec14:	701a      	strb	r2, [r3, #0]
 800ec16:	2401      	movs	r4, #1
 800ec18:	700c      	strb	r4, [r1, #0]
 800ec1a:	e7d3      	b.n	800ebc4 <Motor::FOC_current(float, float, float, float)+0x204>
 800ec1c:	3f13cd3a 	.word	0x3f13cd3a
 800ec20:	20000200 	.word	0x20000200
 800ec24:	3f2aaaab 	.word	0x3f2aaaab
 800ec28:	3f315cac 	.word	0x3f315cac
 800ec2c:	3903126f 	.word	0x3903126f
 800ec30:	20000650 	.word	0x20000650
 800ec34:	2000183e 	.word	0x2000183e
 800ec38:	2000183d 	.word	0x2000183d
 800ec3c:	20008e50 	.word	0x20008e50
 800ec40:	20008e54 	.word	0x20008e54
 800ec44:	3f7d70a4 	.word	0x3f7d70a4

0800ec48 <Motor::update(float, float, float)>:
 800ec48:	b510      	push	{r4, lr}
 800ec4a:	6a03      	ldr	r3, [r0, #32]
 800ec4c:	edd3 7a07 	vldr	s15, [r3, #28]
 800ec50:	f893 2020 	ldrb.w	r2, [r3, #32]
 800ec54:	ed2d 8b06 	vpush	{d8-d10}
 800ec58:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 800ec5c:	2a03      	cmp	r2, #3
 800ec5e:	ee68 9a20 	vmul.f32	s19, s16, s1
 800ec62:	ee28 9a01 	vmul.f32	s18, s16, s2
 800ec66:	ed93 aa06 	vldr	s20, [r3, #24]
 800ec6a:	4604      	mov	r4, r0
 800ec6c:	eef0 8a40 	vmov.f32	s17, s0
 800ec70:	f000 80df 	beq.w	800ee32 <Motor::update(float, float, float)+0x1ea>
 800ec74:	eec0 7a0a 	vdiv.f32	s15, s0, s20
 800ec78:	4620      	mov	r0, r4
 800ec7a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800ec7e:	f7ff fbb3 	bl	800e3e8 <Motor::effective_current_lim()>
 800ec82:	edd4 8a26 	vldr	s17, [r4, #152]	@ 0x98
 800ec86:	6a22      	ldr	r2, [r4, #32]
 800ec88:	eef1 7a40 	vneg.f32	s15, s0
 800ec8c:	eef4 7ae8 	vcmpe.f32	s15, s17
 800ec90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec94:	bfc8      	it	gt
 800ec96:	eef0 8a67 	vmovgt.f32	s17, s15
 800ec9a:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ec9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eca2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800eca6:	bf48      	it	mi
 800eca8:	eef0 8a40 	vmovmi.f32	s17, s0
 800ecac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecb0:	bf58      	it	pl
 800ecb2:	eef0 7a48 	vmovpl.f32	s15, s16
 800ecb6:	f892 3020 	ldrb.w	r3, [r2, #32]
 800ecba:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800ecbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecc2:	bf54      	ite	pl
 800ecc4:	eeb0 8a67 	vmovpl.f32	s16, s15
 800ecc8:	eeb0 8a40 	vmovmi.f32	s16, s0
 800eccc:	2b03      	cmp	r3, #3
 800ecce:	d029      	beq.n	800ed24 <Motor::update(float, float, float)+0xdc>
 800ecd0:	eddf 7a64 	vldr	s15, [pc, #400]	@ 800ee64 <Motor::update(float, float, float)+0x21c>
 800ecd4:	eef0 1a69 	vmov.f32	s3, s19
 800ecd8:	eee9 1a27 	vfma.f32	s3, s18, s15
 800ecdc:	b1ab      	cbz	r3, 800ed0a <Motor::update(float, float, float)+0xc2>
 800ecde:	2b02      	cmp	r3, #2
 800ece0:	f000 80b2 	beq.w	800ee48 <Motor::update(float, float, float)+0x200>
 800ece4:	2120      	movs	r1, #32
 800ece6:	f104 0064 	add.w	r0, r4, #100	@ 0x64
 800ecea:	f7ff fa2f 	bl	800e14c <operator|=(ODriveIntf::MotorIntf::Error&, ODriveIntf::MotorIntf::Error) [clone .isra.0]>
 800ecee:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800ecf0:	2140      	movs	r1, #64	@ 0x40
 800ecf2:	3050      	adds	r0, #80	@ 0x50
 800ecf4:	f7ff fa2e 	bl	800e154 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	f7fc ff91 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800ecfe:	f7fd fb7b 	bl	800c3f8 <update_brake_current>
 800ed02:	ecbd 8b06 	vpop	{d8-d10}
 800ed06:	2000      	movs	r0, #0
 800ed08:	bd10      	pop	{r4, pc}
 800ed0a:	eeb0 1a69 	vmov.f32	s2, s19
 800ed0e:	eef0 0a48 	vmov.f32	s1, s16
 800ed12:	eeb0 0a68 	vmov.f32	s0, s17
 800ed16:	ecbd 8b06 	vpop	{d8-d10}
 800ed1a:	4620      	mov	r0, r4
 800ed1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed20:	f7ff be4e 	b.w	800e9c0 <Motor::FOC_current(float, float, float, float)>
 800ed24:	f892 304c 	ldrb.w	r3, [r2, #76]	@ 0x4c
 800ed28:	b323      	cbz	r3, 800ed74 <Motor::update(float, float, float)+0x12c>
 800ed2a:	eef0 7ac8 	vabs.f32	s15, s16
 800ed2e:	eef4 8ae7 	vcmpe.f32	s17, s15
 800ed32:	ed9f 6a4d 	vldr	s12, [pc, #308]	@ 800ee68 <Motor::update(float, float, float)+0x220>
 800ed36:	ed92 7a12 	vldr	s14, [r2, #72]	@ 0x48
 800ed3a:	ee77 7ae8 	vsub.f32	s15, s15, s17
 800ed3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed42:	bf4c      	ite	mi
 800ed44:	edd2 6a14 	vldrmi	s13, [r2, #80]	@ 0x50
 800ed48:	edd2 6a15 	vldrpl	s13, [r2, #84]	@ 0x54
 800ed4c:	ee67 7a86 	vmul.f32	s15, s15, s12
 800ed50:	eee6 8aa7 	vfma.f32	s17, s13, s15
 800ed54:	eef4 8ac7 	vcmpe.f32	s17, s14
 800ed58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed5c:	bf48      	it	mi
 800ed5e:	eef0 8a47 	vmovmi.f32	s17, s14
 800ed62:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ed66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed6a:	bf48      	it	mi
 800ed6c:	eef0 8a40 	vmovmi.f32	s17, s0
 800ed70:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800ed74:	edd2 6a10 	vldr	s13, [r2, #64]	@ 0x40
 800ed78:	ed94 7a2d 	vldr	s14, [r4, #180]	@ 0xb4
 800ed7c:	ed9f 0a3a 	vldr	s0, [pc, #232]	@ 800ee68 <Motor::update(float, float, float)+0x220>
 800ed80:	ed9f 6a3a 	vldr	s12, [pc, #232]	@ 800ee6c <Motor::update(float, float, float)+0x224>
 800ed84:	ed9f aa3a 	vldr	s20, [pc, #232]	@ 800ee70 <Motor::update(float, float, float)+0x228>
 800ed88:	ee66 7a80 	vmul.f32	s15, s13, s0
 800ed8c:	ee78 5ac7 	vsub.f32	s11, s17, s14
 800ed90:	eef0 0a4a 	vmov.f32	s1, s20
 800ed94:	eea5 7aa7 	vfma.f32	s14, s11, s15
 800ed98:	eec8 7a07 	vdiv.f32	s15, s16, s14
 800ed9c:	ed84 7a2d 	vstr	s14, [r4, #180]	@ 0xb4
 800eda0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800eda4:	eddf 6a33 	vldr	s13, [pc, #204]	@ 800ee74 <Motor::update(float, float, float)+0x22c>
 800eda8:	eeb0 7ae7 	vabs.f32	s14, s15
 800edac:	eeb4 7a46 	vcmp.f32	s14, s12
 800edb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800edb4:	bf98      	it	ls
 800edb6:	ee27 7a80 	vmulls.f32	s14, s15, s0
 800edba:	ed94 0a2f 	vldr	s0, [r4, #188]	@ 0xbc
 800edbe:	bf88      	it	hi
 800edc0:	ed9f 7a2d 	vldrhi	s14, [pc, #180]	@ 800ee78 <Motor::update(float, float, float)+0x230>
 800edc4:	ee30 0a26 	vadd.f32	s0, s0, s13
 800edc8:	bf88      	it	hi
 800edca:	eef0 7a47 	vmovhi.f32	s15, s14
 800edce:	ee30 0a07 	vadd.f32	s0, s0, s14
 800edd2:	edc4 7a2e 	vstr	s15, [r4, #184]	@ 0xb8
 800edd6:	bf98      	it	ls
 800edd8:	ee39 9a27 	vaddls.f32	s18, s18, s15
 800eddc:	f014 f808 	bl	8022df0 <fmodf>
 800ede0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ede4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ede8:	bf48      	it	mi
 800edea:	ee30 0a0a 	vaddmi.f32	s0, s0, s20
 800edee:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800ee74 <Motor::update(float, float, float)+0x22c>
 800edf2:	ed9f aa1f 	vldr	s20, [pc, #124]	@ 800ee70 <Motor::update(float, float, float)+0x228>
 800edf6:	ee70 7a67 	vsub.f32	s15, s0, s15
 800edfa:	eef0 0a4a 	vmov.f32	s1, s20
 800edfe:	edc4 7a2f 	vstr	s15, [r4, #188]	@ 0xbc
 800ee02:	ee39 0a80 	vadd.f32	s0, s19, s0
 800ee06:	f013 fff3 	bl	8022df0 <fmodf>
 800ee0a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800ee0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ee12:	bf48      	it	mi
 800ee14:	ee30 0a0a 	vaddmi.f32	s0, s0, s20
 800ee18:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 800ee74 <Motor::update(float, float, float)+0x22c>
 800ee1c:	eddf 7a11 	vldr	s15, [pc, #68]	@ 800ee64 <Motor::update(float, float, float)+0x21c>
 800ee20:	ee30 1a47 	vsub.f32	s2, s0, s14
 800ee24:	eef0 0a48 	vmov.f32	s1, s16
 800ee28:	eef0 1a41 	vmov.f32	s3, s2
 800ee2c:	eee9 1a27 	vfma.f32	s3, s18, s15
 800ee30:	e76f      	b.n	800ed12 <Motor::update(float, float, float)+0xca>
 800ee32:	edd3 0a11 	vldr	s1, [r3, #68]	@ 0x44
 800ee36:	ed90 0a2d 	vldr	s0, [r0, #180]	@ 0xb4
 800ee3a:	f013 fffd 	bl	8022e38 <fmaxf>
 800ee3e:	ee20 0a0a 	vmul.f32	s0, s0, s20
 800ee42:	eec8 7a80 	vdiv.f32	s15, s17, s0
 800ee46:	e717      	b.n	800ec78 <Motor::update(float, float, float)+0x30>
 800ee48:	eef0 0a48 	vmov.f32	s1, s16
 800ee4c:	eeb0 0a68 	vmov.f32	s0, s17
 800ee50:	ecbd 8b06 	vpop	{d8-d10}
 800ee54:	4620      	mov	r0, r4
 800ee56:	eeb0 1a61 	vmov.f32	s2, s3
 800ee5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee5e:	f7ff bd75 	b.w	800e94c <Motor::FOC_voltage(float, float, float)>
 800ee62:	bf00      	nop
 800ee64:	39449ba6 	.word	0x39449ba6
 800ee68:	3903126f 	.word	0x3903126f
 800ee6c:	44480000 	.word	0x44480000
 800ee70:	40c90fdb 	.word	0x40c90fdb
 800ee74:	40490fdb 	.word	0x40490fdb
 800ee78:	00000000 	.word	0x00000000

0800ee7c <ThermistorCurrentLimiter::get_current_limit(float) const>:
 800ee7c:	69c3      	ldr	r3, [r0, #28]
 800ee7e:	781b      	ldrb	r3, [r3, #0]
 800ee80:	b1eb      	cbz	r3, 800eebe <ThermistorCurrentLimiter::get_current_limit(float) const+0x42>
 800ee82:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 800ee86:	edd0 6a04 	vldr	s13, [r0, #16]
 800ee8a:	edd2 7a00 	vldr	s15, [r2]
 800ee8e:	ed93 7a00 	vldr	s14, [r3]
 800ee92:	ee77 6ae6 	vsub.f32	s13, s15, s13
 800ee96:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800ee9a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800ee9e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800eea2:	eef5 7a40 	vcmp.f32	s15, #0.0
 800eea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeaa:	bfb8      	it	lt
 800eeac:	eddf 7a04 	vldrlt	s15, [pc, #16]	@ 800eec0 <ThermistorCurrentLimiter::get_current_limit(float) const+0x44>
 800eeb0:	eef4 7ac0 	vcmpe.f32	s15, s0
 800eeb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeb8:	bfd8      	it	le
 800eeba:	eeb0 0a67 	vmovle.f32	s0, s15
 800eebe:	4770      	bx	lr
 800eec0:	00000000 	.word	0x00000000

0800eec4 <OffboardThermistorCurrentLimiter::~OffboardThermistorCurrentLimiter()>:
 800eec4:	4770      	bx	lr
 800eec6:	bf00      	nop

0800eec8 <OnboardThermistorCurrentLimiter::~OnboardThermistorCurrentLimiter()>:
 800eec8:	4770      	bx	lr
 800eeca:	bf00      	nop

0800eecc <OnboardThermistorCurrentLimiter::~OnboardThermistorCurrentLimiter()>:
 800eecc:	b510      	push	{r4, lr}
 800eece:	212c      	movs	r1, #44	@ 0x2c
 800eed0:	4604      	mov	r4, r0
 800eed2:	f012 ffd7 	bl	8021e84 <operator delete(void*, unsigned int)>
 800eed6:	4620      	mov	r0, r4
 800eed8:	bd10      	pop	{r4, pc}
 800eeda:	bf00      	nop

0800eedc <OffboardThermistorCurrentLimiter::~OffboardThermistorCurrentLimiter()>:
 800eedc:	b510      	push	{r4, lr}
 800eede:	212c      	movs	r1, #44	@ 0x2c
 800eee0:	4604      	mov	r4, r0
 800eee2:	f012 ffcf 	bl	8021e84 <operator delete(void*, unsigned int)>
 800eee6:	4620      	mov	r0, r4
 800eee8:	bd10      	pop	{r4, pc}
 800eeea:	bf00      	nop

0800eeec <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 800eeec:	6803      	ldr	r3, [r0, #0]
 800eeee:	430b      	orrs	r3, r1
 800eef0:	6003      	str	r3, [r0, #0]
 800eef2:	4770      	bx	lr

0800eef4 <ThermistorCurrentLimiter::update()>:
 800eef4:	b510      	push	{r4, lr}
 800eef6:	4604      	mov	r4, r0
 800eef8:	8880      	ldrh	r0, [r0, #4]
 800eefa:	f7fd fa17 	bl	800c32c <get_adc_voltage_channel>
 800eefe:	4b06      	ldr	r3, [pc, #24]	@ (800ef18 <ThermistorCurrentLimiter::update()+0x24>)
 800ef00:	68e1      	ldr	r1, [r4, #12]
 800ef02:	edd3 7a00 	vldr	s15, [r3]
 800ef06:	68a0      	ldr	r0, [r4, #8]
 800ef08:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800ef0c:	f7fc fd42 	bl	800b994 <horner_fma>
 800ef10:	ed84 0a04 	vstr	s0, [r4, #16]
 800ef14:	bd10      	pop	{r4, pc}
 800ef16:	bf00      	nop
 800ef18:	0802ac24 	.word	0x0802ac24

0800ef1c <ThermistorCurrentLimiter::do_checks()>:
 800ef1c:	69c2      	ldr	r2, [r0, #28]
 800ef1e:	b508      	push	{r3, lr}
 800ef20:	4603      	mov	r3, r0
 800ef22:	7810      	ldrb	r0, [r2, #0]
 800ef24:	b170      	cbz	r0, 800ef44 <ThermistorCurrentLimiter::do_checks()+0x28>
 800ef26:	699a      	ldr	r2, [r3, #24]
 800ef28:	ed93 7a04 	vldr	s14, [r3, #16]
 800ef2c:	edd2 7a00 	vldr	s15, [r2]
 800ef30:	eef1 6a04 	vmov.f32	s13, #20	@ 0x40a00000  5.0
 800ef34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef38:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ef3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef40:	da02      	bge.n	800ef48 <ThermistorCurrentLimiter::do_checks()+0x2c>
 800ef42:	bd08      	pop	{r3, pc}
 800ef44:	2001      	movs	r0, #1
 800ef46:	bd08      	pop	{r3, pc}
 800ef48:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800ef4a:	2201      	movs	r2, #1
 800ef4c:	f883 2020 	strb.w	r2, [r3, #32]
 800ef50:	f44f 2180 	mov.w	r1, #262144	@ 0x40000
 800ef54:	3050      	adds	r0, #80	@ 0x50
 800ef56:	f7ff ffc9 	bl	800eeec <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800ef5a:	2000      	movs	r0, #0
 800ef5c:	bd08      	pop	{r3, pc}
 800ef5e:	bf00      	nop

0800ef60 <OnboardThermistorCurrentLimiter::OnboardThermistorCurrentLimiter(ThermistorHardwareConfig_t const&, OnboardThermistorCurrentLimiter::Config_t&)>:
 800ef60:	b430      	push	{r4, r5}
 800ef62:	680d      	ldr	r5, [r1, #0]
 800ef64:	6282      	str	r2, [r0, #40]	@ 0x28
 800ef66:	e9d1 4101 	ldrd	r4, r1, [r1, #4]
 800ef6a:	6142      	str	r2, [r0, #20]
 800ef6c:	e9c0 5402 	strd	r5, r4, [r0, #8]
 800ef70:	1d14      	adds	r4, r2, #4
 800ef72:	3208      	adds	r2, #8
 800ef74:	f8df c020 	ldr.w	ip, [pc, #32]	@ 800ef98 <OnboardThermistorCurrentLimiter::OnboardThermistorCurrentLimiter(ThermistorHardwareConfig_t const&, OnboardThermistorCurrentLimiter::Config_t&)+0x38>
 800ef78:	8081      	strh	r1, [r0, #4]
 800ef7a:	61c2      	str	r2, [r0, #28]
 800ef7c:	2100      	movs	r1, #0
 800ef7e:	4a05      	ldr	r2, [pc, #20]	@ (800ef94 <OnboardThermistorCurrentLimiter::OnboardThermistorCurrentLimiter(ThermistorHardwareConfig_t const&, OnboardThermistorCurrentLimiter::Config_t&)+0x34>)
 800ef80:	6184      	str	r4, [r0, #24]
 800ef82:	f8c0 c010 	str.w	ip, [r0, #16]
 800ef86:	bc30      	pop	{r4, r5}
 800ef88:	f880 1020 	strb.w	r1, [r0, #32]
 800ef8c:	6241      	str	r1, [r0, #36]	@ 0x24
 800ef8e:	6002      	str	r2, [r0, #0]
 800ef90:	4770      	bx	lr
 800ef92:	bf00      	nop
 800ef94:	0802ae28 	.word	0x0802ae28
 800ef98:	7fc00000 	.word	0x7fc00000

0800ef9c <OffboardThermistorCurrentLimiter::decode_pin()>:
 800ef9c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800ef9e:	8a1b      	ldrh	r3, [r3, #16]
 800efa0:	2b06      	cmp	r3, #6
 800efa2:	b510      	push	{r4, lr}
 800efa4:	4604      	mov	r4, r0
 800efa6:	d013      	beq.n	800efd0 <OffboardThermistorCurrentLimiter::decode_pin()+0x34>
 800efa8:	2b08      	cmp	r3, #8
 800efaa:	d011      	beq.n	800efd0 <OffboardThermistorCurrentLimiter::decode_pin()+0x34>
 800efac:	2b05      	cmp	r3, #5
 800efae:	d009      	beq.n	800efc4 <OffboardThermistorCurrentLimiter::decode_pin()+0x28>
 800efb0:	3b02      	subs	r3, #2
 800efb2:	b29b      	uxth	r3, r3
 800efb4:	2b06      	cmp	r3, #6
 800efb6:	d915      	bls.n	800efe4 <OffboardThermistorCurrentLimiter::decode_pin()+0x48>
 800efb8:	480d      	ldr	r0, [pc, #52]	@ (800eff0 <OffboardThermistorCurrentLimiter::decode_pin()+0x54>)
 800efba:	2101      	movs	r1, #1
 800efbc:	f7fd f862 	bl	800c084 <channel_from_gpio>
 800efc0:	80a0      	strh	r0, [r4, #4]
 800efc2:	bd10      	pop	{r4, pc}
 800efc4:	480b      	ldr	r0, [pc, #44]	@ (800eff4 <OffboardThermistorCurrentLimiter::decode_pin()+0x58>)
 800efc6:	2110      	movs	r1, #16
 800efc8:	f7fd f85c 	bl	800c084 <channel_from_gpio>
 800efcc:	80a0      	strh	r0, [r4, #4]
 800efce:	bd10      	pop	{r4, pc}
 800efd0:	3b02      	subs	r3, #2
 800efd2:	4a09      	ldr	r2, [pc, #36]	@ (800eff8 <OffboardThermistorCurrentLimiter::decode_pin()+0x5c>)
 800efd4:	4809      	ldr	r0, [pc, #36]	@ (800effc <OffboardThermistorCurrentLimiter::decode_pin()+0x60>)
 800efd6:	b29b      	uxth	r3, r3
 800efd8:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800efdc:	f7fd f852 	bl	800c084 <channel_from_gpio>
 800efe0:	80a0      	strh	r0, [r4, #4]
 800efe2:	bd10      	pop	{r4, pc}
 800efe4:	4a04      	ldr	r2, [pc, #16]	@ (800eff8 <OffboardThermistorCurrentLimiter::decode_pin()+0x5c>)
 800efe6:	4802      	ldr	r0, [pc, #8]	@ (800eff0 <OffboardThermistorCurrentLimiter::decode_pin()+0x54>)
 800efe8:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800efec:	e7ec      	b.n	800efc8 <OffboardThermistorCurrentLimiter::decode_pin()+0x2c>
 800efee:	bf00      	nop
 800eff0:	40020000 	.word	0x40020000
 800eff4:	40020800 	.word	0x40020800
 800eff8:	0802ac7c 	.word	0x0802ac7c
 800effc:	40020400 	.word	0x40020400

0800f000 <OffboardThermistorCurrentLimiter::OffboardThermistorCurrentLimiter(OffboardThermistorCurrentLimiter::Config_t&)>:
 800f000:	4a0f      	ldr	r2, [pc, #60]	@ (800f040 <OffboardThermistorCurrentLimiter::OffboardThermistorCurrentLimiter(OffboardThermistorCurrentLimiter::Config_t&)+0x40>)
 800f002:	b510      	push	{r4, lr}
 800f004:	6102      	str	r2, [r0, #16]
 800f006:	f101 0214 	add.w	r2, r1, #20
 800f00a:	6142      	str	r2, [r0, #20]
 800f00c:	f101 0218 	add.w	r2, r1, #24
 800f010:	2300      	movs	r3, #0
 800f012:	6182      	str	r2, [r0, #24]
 800f014:	f101 021c 	add.w	r2, r1, #28
 800f018:	f64f 7cff 	movw	ip, #65535	@ 0xffff
 800f01c:	61c2      	str	r2, [r0, #28]
 800f01e:	f880 3020 	strb.w	r3, [r0, #32]
 800f022:	4a08      	ldr	r2, [pc, #32]	@ (800f044 <OffboardThermistorCurrentLimiter::OffboardThermistorCurrentLimiter(OffboardThermistorCurrentLimiter::Config_t&)+0x44>)
 800f024:	6243      	str	r3, [r0, #36]	@ 0x24
 800f026:	2304      	movs	r3, #4
 800f028:	4604      	mov	r4, r0
 800f02a:	f8a0 c004 	strh.w	ip, [r0, #4]
 800f02e:	6081      	str	r1, [r0, #8]
 800f030:	6002      	str	r2, [r0, #0]
 800f032:	6281      	str	r1, [r0, #40]	@ 0x28
 800f034:	60c3      	str	r3, [r0, #12]
 800f036:	f7ff ffb1 	bl	800ef9c <OffboardThermistorCurrentLimiter::decode_pin()>
 800f03a:	4620      	mov	r0, r4
 800f03c:	bd10      	pop	{r4, pc}
 800f03e:	bf00      	nop
 800f040:	7fc00000 	.word	0x7fc00000
 800f044:	0802ae3c 	.word	0x0802ae3c

0800f048 <Encoder::set_linear_count(long)>:
 800f048:	f3ef 8310 	mrs	r3, PRIMASK
 800f04c:	b672      	cpsid	i
 800f04e:	6882      	ldr	r2, [r0, #8]
 800f050:	ee07 1a90 	vmov	s15, r1
 800f054:	6812      	ldr	r2, [r2, #0]
 800f056:	6181      	str	r1, [r0, #24]
 800f058:	6812      	ldr	r2, [r2, #0]
 800f05a:	f8a0 105a 	strh.w	r1, [r0, #90]	@ 0x5a
 800f05e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f062:	edc0 7a0a 	vstr	s15, [r0, #40]	@ 0x28
 800f066:	6251      	str	r1, [r2, #36]	@ 0x24
 800f068:	f383 8810 	msr	PRIMASK, r3
 800f06c:	4770      	bx	lr
 800f06e:	bf00      	nop

0800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>:
 800f070:	8803      	ldrh	r3, [r0, #0]
 800f072:	4319      	orrs	r1, r3
 800f074:	8001      	strh	r1, [r0, #0]
 800f076:	4770      	bx	lr

0800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 800f078:	6803      	ldr	r3, [r0, #0]
 800f07a:	430b      	orrs	r3, r1
 800f07c:	6003      	str	r3, [r0, #0]
 800f07e:	4770      	bx	lr

0800f080 <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)>:
 800f080:	edd2 7a09 	vldr	s15, [r2, #36]	@ 0x24
 800f084:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 800f138 <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)+0xb8>
 800f088:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800f08c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 800f090:	ee67 6aa7 	vmul.f32	s13, s15, s15
 800f094:	ee27 7a87 	vmul.f32	s14, s15, s14
 800f098:	b538      	push	{r3, r4, r5, lr}
 800f09a:	ee66 6a86 	vmul.f32	s13, s13, s12
 800f09e:	4604      	mov	r4, r0
 800f0a0:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 800f0a4:	4825      	ldr	r0, [pc, #148]	@ (800f13c <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)+0xbc>)
 800f0a6:	6020      	str	r0, [r4, #0]
 800f0a8:	eeb4 7a46 	vcmp.f32	s14, s12
 800f0ac:	2000      	movs	r0, #0
 800f0ae:	2500      	movs	r5, #0
 800f0b0:	e9c4 1202 	strd	r1, r2, [r4, #8]
 800f0b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0b8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f0bc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f0c0:	e9c4 5506 	strd	r5, r5, [r4, #24]
 800f0c4:	6425      	str	r5, [r4, #64]	@ 0x40
 800f0c6:	65a5      	str	r5, [r4, #88]	@ 0x58
 800f0c8:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 800f0cc:	f884 506c 	strb.w	r5, [r4, #108]	@ 0x6c
 800f0d0:	f8a4 506e 	strh.w	r5, [r4, #110]	@ 0x6e
 800f0d4:	6220      	str	r0, [r4, #32]
 800f0d6:	6260      	str	r0, [r4, #36]	@ 0x24
 800f0d8:	62a0      	str	r0, [r4, #40]	@ 0x28
 800f0da:	62e0      	str	r0, [r4, #44]	@ 0x2c
 800f0dc:	6320      	str	r0, [r4, #48]	@ 0x30
 800f0de:	63e0      	str	r0, [r4, #60]	@ 0x3c
 800f0e0:	6460      	str	r0, [r4, #68]	@ 0x44
 800f0e2:	64a0      	str	r0, [r4, #72]	@ 0x48
 800f0e4:	64e0      	str	r0, [r4, #76]	@ 0x4c
 800f0e6:	6520      	str	r0, [r4, #80]	@ 0x50
 800f0e8:	6560      	str	r0, [r4, #84]	@ 0x54
 800f0ea:	6620      	str	r0, [r4, #96]	@ 0x60
 800f0ec:	6660      	str	r0, [r4, #100]	@ 0x64
 800f0ee:	f8a4 1068 	strh.w	r1, [r4, #104]	@ 0x68
 800f0f2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f0f6:	edc4 6a0e 	vstr	s13, [r4, #56]	@ 0x38
 800f0fa:	461d      	mov	r5, r3
 800f0fc:	d510      	bpl.n	800f120 <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)+0xa0>
 800f0fe:	78d3      	ldrb	r3, [r2, #3]
 800f100:	b163      	cbz	r3, 800f11c <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)+0x9c>
 800f102:	8813      	ldrh	r3, [r2, #0]
 800f104:	3b01      	subs	r3, #1
 800f106:	b29b      	uxth	r3, r3
 800f108:	2b01      	cmp	r3, #1
 800f10a:	bf9c      	itt	ls
 800f10c:	2301      	movls	r3, #1
 800f10e:	75e3      	strbls	r3, [r4, #23]
 800f110:	f895 3020 	ldrb.w	r3, [r5, #32]
 800f114:	2b03      	cmp	r3, #3
 800f116:	bf04      	itt	eq
 800f118:	2301      	moveq	r3, #1
 800f11a:	75e3      	strbeq	r3, [r4, #23]
 800f11c:	4620      	mov	r0, r4
 800f11e:	bd38      	pop	{r3, r4, r5, pc}
 800f120:	f104 0014 	add.w	r0, r4, #20
 800f124:	2101      	movs	r1, #1
 800f126:	f7ff ffa3 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f12a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f12e:	2050      	movs	r0, #80	@ 0x50
 800f130:	f7ff ffa2 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f134:	e7e3      	b.n	800f0fe <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)+0x7e>
 800f136:	bf00      	nop
 800f138:	3903126f 	.word	0x3903126f
 800f13c:	0802ae9c 	.word	0x0802ae9c

0800f140 <Encoder::enc_index_cb()>:
 800f140:	b538      	push	{r3, r4, r5, lr}
 800f142:	68c3      	ldr	r3, [r0, #12]
 800f144:	789b      	ldrb	r3, [r3, #2]
 800f146:	4604      	mov	r4, r0
 800f148:	b933      	cbnz	r3, 800f158 <Encoder::enc_index_cb()+0x18>
 800f14a:	68a3      	ldr	r3, [r4, #8]
 800f14c:	8919      	ldrh	r1, [r3, #8]
 800f14e:	6858      	ldr	r0, [r3, #4]
 800f150:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f154:	f7f9 b8ce 	b.w	80082f4 <GPIO_unsubscribe>
 800f158:	f3ef 8510 	mrs	r5, PRIMASK
 800f15c:	b672      	cpsid	i
 800f15e:	68c3      	ldr	r3, [r0, #12]
 800f160:	2000      	movs	r0, #0
 800f162:	6899      	ldr	r1, [r3, #8]
 800f164:	f7fc fc2a 	bl	800b9bc <mod>
 800f168:	ee07 0a90 	vmov	s15, r0
 800f16c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f170:	61e0      	str	r0, [r4, #28]
 800f172:	edc4 7a0b 	vstr	s15, [r4, #44]	@ 0x2c
 800f176:	f385 8810 	msr	PRIMASK, r5
 800f17a:	68e3      	ldr	r3, [r4, #12]
 800f17c:	791a      	ldrb	r2, [r3, #4]
 800f17e:	b1a2      	cbz	r2, 800f1aa <Encoder::enc_index_cb()+0x6a>
 800f180:	6823      	ldr	r3, [r4, #0]
 800f182:	4a16      	ldr	r2, [pc, #88]	@ (800f1dc <Encoder::enc_index_cb()+0x9c>)
 800f184:	681b      	ldr	r3, [r3, #0]
 800f186:	4293      	cmp	r3, r2
 800f188:	d122      	bne.n	800f1d0 <Encoder::enc_index_cb()+0x90>
 800f18a:	f3ef 8210 	mrs	r2, PRIMASK
 800f18e:	b672      	cpsid	i
 800f190:	68a3      	ldr	r3, [r4, #8]
 800f192:	6819      	ldr	r1, [r3, #0]
 800f194:	6809      	ldr	r1, [r1, #0]
 800f196:	2300      	movs	r3, #0
 800f198:	2000      	movs	r0, #0
 800f19a:	61a3      	str	r3, [r4, #24]
 800f19c:	62a0      	str	r0, [r4, #40]	@ 0x28
 800f19e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 800f1a2:	624b      	str	r3, [r1, #36]	@ 0x24
 800f1a4:	f382 8810 	msr	PRIMASK, r2
 800f1a8:	68e3      	ldr	r3, [r4, #12]
 800f1aa:	78db      	ldrb	r3, [r3, #3]
 800f1ac:	b163      	cbz	r3, 800f1c8 <Encoder::enc_index_cb()+0x88>
 800f1ae:	6923      	ldr	r3, [r4, #16]
 800f1b0:	699a      	ldr	r2, [r3, #24]
 800f1b2:	68d3      	ldr	r3, [r2, #12]
 800f1b4:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
 800f1b8:	2101      	movs	r1, #1
 800f1ba:	f893 3878 	ldrb.w	r3, [r3, #2168]	@ 0x878
 800f1be:	75e1      	strb	r1, [r4, #23]
 800f1c0:	b11b      	cbz	r3, 800f1ca <Encoder::enc_index_cb()+0x8a>
 800f1c2:	f882 1056 	strb.w	r1, [r2, #86]	@ 0x56
 800f1c6:	e000      	b.n	800f1ca <Encoder::enc_index_cb()+0x8a>
 800f1c8:	75e3      	strb	r3, [r4, #23]
 800f1ca:	2301      	movs	r3, #1
 800f1cc:	75a3      	strb	r3, [r4, #22]
 800f1ce:	e7bc      	b.n	800f14a <Encoder::enc_index_cb()+0xa>
 800f1d0:	2100      	movs	r1, #0
 800f1d2:	4620      	mov	r0, r4
 800f1d4:	4798      	blx	r3
 800f1d6:	68e3      	ldr	r3, [r4, #12]
 800f1d8:	e7e7      	b.n	800f1aa <Encoder::enc_index_cb()+0x6a>
 800f1da:	bf00      	nop
 800f1dc:	0800f049 	.word	0x0800f049

0800f1e0 <enc_index_cb_wrapper(void*)>:
 800f1e0:	f7ff bfae 	b.w	800f140 <Encoder::enc_index_cb()>

0800f1e4 <Encoder::set_idx_subscribe(bool)>:
 800f1e4:	68c3      	ldr	r3, [r0, #12]
 800f1e6:	4602      	mov	r2, r0
 800f1e8:	7898      	ldrb	r0, [r3, #2]
 800f1ea:	b920      	cbnz	r0, 800f1f6 <Encoder::set_idx_subscribe(bool)+0x12>
 800f1ec:	6893      	ldr	r3, [r2, #8]
 800f1ee:	8919      	ldrh	r1, [r3, #8]
 800f1f0:	6858      	ldr	r0, [r3, #4]
 800f1f2:	f7f9 b87f 	b.w	80082f4 <GPIO_unsubscribe>
 800f1f6:	b919      	cbnz	r1, 800f200 <Encoder::set_idx_subscribe(bool)+0x1c>
 800f1f8:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800f1fc:	2b00      	cmp	r3, #0
 800f1fe:	d1f5      	bne.n	800f1ec <Encoder::set_idx_subscribe(bool)+0x8>
 800f200:	b500      	push	{lr}
 800f202:	6890      	ldr	r0, [r2, #8]
 800f204:	4b05      	ldr	r3, [pc, #20]	@ (800f21c <Encoder::set_idx_subscribe(bool)+0x38>)
 800f206:	8901      	ldrh	r1, [r0, #8]
 800f208:	6840      	ldr	r0, [r0, #4]
 800f20a:	b083      	sub	sp, #12
 800f20c:	9200      	str	r2, [sp, #0]
 800f20e:	2202      	movs	r2, #2
 800f210:	f7f9 f80c 	bl	800822c <GPIO_subscribe>
 800f214:	b003      	add	sp, #12
 800f216:	f85d fb04 	ldr.w	pc, [sp], #4
 800f21a:	bf00      	nop
 800f21c:	0800f1e1 	.word	0x0800f1e1

0800f220 <Encoder::update_pll_gains()>:
 800f220:	b508      	push	{r3, lr}
 800f222:	68c3      	ldr	r3, [r0, #12]
 800f224:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 800f278 <Encoder::update_pll_gains()+0x58>
 800f228:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 800f22c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800f230:	eef5 5a00 	vmov.f32	s11, #80	@ 0x3e800000  0.250
 800f234:	ee67 6aa7 	vmul.f32	s13, s15, s15
 800f238:	ee27 7a87 	vmul.f32	s14, s15, s14
 800f23c:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 800f240:	ee66 6aa5 	vmul.f32	s13, s13, s11
 800f244:	eeb4 7a46 	vcmp.f32	s14, s12
 800f248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f24c:	edc0 7a0d 	vstr	s15, [r0, #52]	@ 0x34
 800f250:	edc0 6a0e 	vstr	s13, [r0, #56]	@ 0x38
 800f254:	d500      	bpl.n	800f258 <Encoder::update_pll_gains()+0x38>
 800f256:	bd08      	pop	{r3, pc}
 800f258:	2300      	movs	r3, #0
 800f25a:	4602      	mov	r2, r0
 800f25c:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800f260:	2101      	movs	r1, #1
 800f262:	3014      	adds	r0, #20
 800f264:	f7ff ff04 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f268:	6910      	ldr	r0, [r2, #16]
 800f26a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f26e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f272:	3050      	adds	r0, #80	@ 0x50
 800f274:	f7ff bf00 	b.w	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f278:	3903126f 	.word	0x3903126f

0800f27c <Encoder::check_pre_calibrated()>:
 800f27c:	7dc3      	ldrb	r3, [r0, #23]
 800f27e:	b943      	cbnz	r3, 800f292 <Encoder::check_pre_calibrated()+0x16>
 800f280:	6902      	ldr	r2, [r0, #16]
 800f282:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800f284:	6a12      	ldr	r2, [r2, #32]
 800f286:	f892 2020 	ldrb.w	r2, [r2, #32]
 800f28a:	2a03      	cmp	r2, #3
 800f28c:	bf1c      	itt	ne
 800f28e:	68c2      	ldrne	r2, [r0, #12]
 800f290:	70d3      	strbne	r3, [r2, #3]
 800f292:	f8b0 306e 	ldrh.w	r3, [r0, #110]	@ 0x6e
 800f296:	b91b      	cbnz	r3, 800f2a0 <Encoder::check_pre_calibrated()+0x24>
 800f298:	7d83      	ldrb	r3, [r0, #22]
 800f29a:	b90b      	cbnz	r3, 800f2a0 <Encoder::check_pre_calibrated()+0x24>
 800f29c:	68c2      	ldr	r2, [r0, #12]
 800f29e:	70d3      	strb	r3, [r2, #3]
 800f2a0:	4770      	bx	lr
 800f2a2:	bf00      	nop

0800f2a4 <Encoder::run_index_search()>:
 800f2a4:	68c3      	ldr	r3, [r0, #12]
 800f2a6:	b510      	push	{r4, lr}
 800f2a8:	f893 1029 	ldrb.w	r1, [r3, #41]	@ 0x29
 800f2ac:	4604      	mov	r4, r0
 800f2ae:	2201      	movs	r2, #1
 800f2b0:	2000      	movs	r0, #0
 800f2b2:	709a      	strb	r2, [r3, #2]
 800f2b4:	75a0      	strb	r0, [r4, #22]
 800f2b6:	b929      	cbnz	r1, 800f2c4 <Encoder::run_index_search()+0x20>
 800f2b8:	6923      	ldr	r3, [r4, #16]
 800f2ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f2bc:	6a1b      	ldr	r3, [r3, #32]
 800f2be:	69d9      	ldr	r1, [r3, #28]
 800f2c0:	b901      	cbnz	r1, 800f2c4 <Encoder::run_index_search()+0x20>
 800f2c2:	61da      	str	r2, [r3, #28]
 800f2c4:	4620      	mov	r0, r4
 800f2c6:	2100      	movs	r1, #0
 800f2c8:	f7ff ff8c 	bl	800f1e4 <Encoder::set_idx_subscribe(bool)>
 800f2cc:	6920      	ldr	r0, [r4, #16]
 800f2ce:	68c1      	ldr	r1, [r0, #12]
 800f2d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f2d4:	3118      	adds	r1, #24
 800f2d6:	f7fe b83f 	b.w	800d358 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)>
 800f2da:	bf00      	nop

0800f2dc <Encoder::run_direction_find()>:
 800f2dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f2e0:	f8d0 8010 	ldr.w	r8, [r0, #16]
 800f2e4:	6985      	ldr	r5, [r0, #24]
 800f2e6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800f2ea:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
 800f2ee:	f103 0c18 	add.w	ip, r3, #24
 800f2f2:	6a13      	ldr	r3, [r2, #32]
 800f2f4:	2601      	movs	r6, #1
 800f2f6:	b089      	sub	sp, #36	@ 0x24
 800f2f8:	4604      	mov	r4, r0
 800f2fa:	61de      	str	r6, [r3, #28]
 800f2fc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800f300:	f10d 0e04 	add.w	lr, sp, #4
 800f304:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800f308:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800f30c:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
 800f310:	eddd 7a05 	vldr	s15, [sp, #20]
 800f314:	eeb0 7a08 	vmov.f32	s14, #8	@ 0x40400000  3.0
 800f318:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f31c:	2700      	movs	r7, #0
 800f31e:	f44f 7980 	mov.w	r9, #256	@ 0x100
 800f322:	4640      	mov	r0, r8
 800f324:	a901      	add	r1, sp, #4
 800f326:	f8ad 901c 	strh.w	r9, [sp, #28]
 800f32a:	f88d 701e 	strb.w	r7, [sp, #30]
 800f32e:	edcd 7a06 	vstr	s15, [sp, #24]
 800f332:	f7fe f811 	bl	800d358 <Axis::run_lockin_spin(Axis::LockinConfig_t const&)>
 800f336:	b140      	cbz	r0, 800f34a <Encoder::run_direction_find()+0x6e>
 800f338:	6922      	ldr	r2, [r4, #16]
 800f33a:	69a3      	ldr	r3, [r4, #24]
 800f33c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800f33e:	f105 0108 	add.w	r1, r5, #8
 800f342:	428b      	cmp	r3, r1
 800f344:	6a12      	ldr	r2, [r2, #32]
 800f346:	dd03      	ble.n	800f350 <Encoder::run_direction_find()+0x74>
 800f348:	61d6      	str	r6, [r2, #28]
 800f34a:	b009      	add	sp, #36	@ 0x24
 800f34c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f350:	3d08      	subs	r5, #8
 800f352:	42ab      	cmp	r3, r5
 800f354:	bfba      	itte	lt
 800f356:	f04f 33ff 	movlt.w	r3, #4294967295	@ 0xffffffff
 800f35a:	61d3      	strlt	r3, [r2, #28]
 800f35c:	61d7      	strge	r7, [r2, #28]
 800f35e:	b009      	add	sp, #36	@ 0x24
 800f360:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f364 <Encoder::run_offset_calibration()>:
 800f364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f368:	68c3      	ldr	r3, [r0, #12]
 800f36a:	ed2d 8b08 	vpush	{d8-d11}
 800f36e:	789a      	ldrb	r2, [r3, #2]
 800f370:	ed93 aa07 	vldr	s20, [r3, #28]
 800f374:	edd3 aa08 	vldr	s21, [r3, #32]
 800f378:	b083      	sub	sp, #12
 800f37a:	4605      	mov	r5, r0
 800f37c:	b11a      	cbz	r2, 800f386 <Encoder::run_offset_calibration()+0x22>
 800f37e:	7d83      	ldrb	r3, [r0, #22]
 800f380:	2b00      	cmp	r3, #0
 800f382:	f000 81f0 	beq.w	800f766 <Encoder::run_offset_calibration()+0x402>
 800f386:	692c      	ldr	r4, [r5, #16]
 800f388:	69ea      	ldr	r2, [r5, #28]
 800f38a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f38c:	61aa      	str	r2, [r5, #24]
 800f38e:	6a1b      	ldr	r3, [r3, #32]
 800f390:	f893 2020 	ldrb.w	r2, [r3, #32]
 800f394:	2a00      	cmp	r2, #0
 800f396:	f040 81d6 	bne.w	800f746 <Encoder::run_offset_calibration()+0x3e2>
 800f39a:	edd3 8a02 	vldr	s17, [r3, #8]
 800f39e:	edd3 7a05 	vldr	s15, [r3, #20]
 800f3a2:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800f3a6:	ed9f 9a95 	vldr	s18, [pc, #596]	@ 800f5fc <Encoder::run_offset_calibration()+0x298>
 800f3aa:	eddf 9a95 	vldr	s19, [pc, #596]	@ 800f600 <Encoder::run_offset_calibration()+0x29c>
 800f3ae:	f04f 0800 	mov.w	r8, #0
 800f3b2:	e015      	b.n	800f3e0 <Encoder::run_offset_calibration()+0x7c>
 800f3b4:	692b      	ldr	r3, [r5, #16]
 800f3b6:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f3b8:	f7ff f8aa 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800f3bc:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800f3be:	f108 0801 	add.w	r8, r8, #1
 800f3c2:	ee07 8a90 	vmov	s15, r8
 800f3c6:	3301      	adds	r3, #1
 800f3c8:	67a3      	str	r3, [r4, #120]	@ 0x78
 800f3ca:	4620      	mov	r0, r4
 800f3cc:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 800f3d0:	f7fd fe02 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f3d4:	b358      	cbz	r0, 800f42e <Encoder::run_offset_calibration()+0xca>
 800f3d6:	eeb4 8ae9 	vcmpe.f32	s16, s19
 800f3da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3de:	d530      	bpl.n	800f442 <Encoder::run_offset_calibration()+0xde>
 800f3e0:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800f3e4:	4620      	mov	r0, r4
 800f3e6:	bb63      	cbnz	r3, 800f442 <Encoder::run_offset_calibration()+0xde>
 800f3e8:	f7fd ff0a 	bl	800d200 <Axis::do_checks()>
 800f3ec:	4606      	mov	r6, r0
 800f3ee:	4620      	mov	r0, r4
 800f3f0:	f7fd ff78 	bl	800d2e4 <Axis::do_updates()>
 800f3f4:	4607      	mov	r7, r0
 800f3f6:	4620      	mov	r0, r4
 800f3f8:	f7fd ff9a 	bl	800d330 <Axis::watchdog_check()>
 800f3fc:	eef0 0a49 	vmov.f32	s1, s18
 800f400:	eeb0 0a68 	vmov.f32	s0, s17
 800f404:	b10e      	cbz	r6, 800f40a <Encoder::run_offset_calibration()+0xa6>
 800f406:	b107      	cbz	r7, 800f40a <Encoder::run_offset_calibration()+0xa6>
 800f408:	b918      	cbnz	r0, 800f412 <Encoder::run_offset_calibration()+0xae>
 800f40a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f40c:	781b      	ldrb	r3, [r3, #0]
 800f40e:	2b01      	cmp	r3, #1
 800f410:	d117      	bne.n	800f442 <Encoder::run_offset_calibration()+0xde>
 800f412:	692b      	ldr	r3, [r5, #16]
 800f414:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f416:	f7ff fa7d 	bl	800e914 <Motor::enqueue_voltage_timings(float, float)>
 800f41a:	2105      	movs	r1, #5
 800f41c:	2800      	cmp	r0, #0
 800f41e:	d1c9      	bne.n	800f3b4 <Encoder::run_offset_calibration()+0x50>
 800f420:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800f422:	3301      	adds	r3, #1
 800f424:	4620      	mov	r0, r4
 800f426:	67a3      	str	r3, [r4, #120]	@ 0x78
 800f428:	f7fd fdd6 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f42c:	b948      	cbnz	r0, 800f442 <Encoder::run_offset_calibration()+0xde>
 800f42e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800f430:	f7fc fbf6 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800f434:	f7fc ffe0 	bl	800c3f8 <update_brake_current>
 800f438:	2108      	movs	r1, #8
 800f43a:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f43e:	f7ff fe1b 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f442:	692c      	ldr	r4, [r5, #16]
 800f444:	6d26      	ldr	r6, [r4, #80]	@ 0x50
 800f446:	2e00      	cmp	r6, #0
 800f448:	f040 817f 	bne.w	800f74a <Encoder::run_offset_calibration()+0x3e6>
 800f44c:	eeca 7a2a 	vdiv.f32	s15, s20, s21
 800f450:	69ab      	ldr	r3, [r5, #24]
 800f452:	9301      	str	r3, [sp, #4]
 800f454:	46b2      	mov	sl, r6
 800f456:	46b3      	mov	fp, r6
 800f458:	eddf 6a69 	vldr	s13, [pc, #420]	@ 800f600 <Encoder::run_offset_calibration()+0x29c>
 800f45c:	eddf 9a69 	vldr	s19, [pc, #420]	@ 800f604 <Encoder::run_offset_calibration()+0x2a0>
 800f460:	ed9f ba6a 	vldr	s22, [pc, #424]	@ 800f60c <Encoder::run_offset_calibration()+0x2a8>
 800f464:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f468:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800f46c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f470:	eef6 aa00 	vmov.f32	s21, #96	@ 0x3f000000  0.5
 800f474:	ee17 9a90 	vmov	r9, s15
 800f478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f47c:	ee87 aa27 	vdiv.f32	s20, s14, s15
 800f480:	e013      	b.n	800f4aa <Encoder::run_offset_calibration()+0x146>
 800f482:	692b      	ldr	r3, [r5, #16]
 800f484:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f486:	f7ff f843 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800f48a:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
 800f48c:	69ab      	ldr	r3, [r5, #24]
 800f48e:	3201      	adds	r2, #1
 800f490:	199e      	adds	r6, r3, r6
 800f492:	67a2      	str	r2, [r4, #120]	@ 0x78
 800f494:	4620      	mov	r0, r4
 800f496:	eb4a 7ae3 	adc.w	sl, sl, r3, asr #31
 800f49a:	f10b 0b01 	add.w	fp, fp, #1
 800f49e:	f7fd fd9b 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f4a2:	2800      	cmp	r0, #0
 800f4a4:	d053      	beq.n	800f54e <Encoder::run_offset_calibration()+0x1ea>
 800f4a6:	45d9      	cmp	r9, fp
 800f4a8:	dd5b      	ble.n	800f562 <Encoder::run_offset_calibration()+0x1fe>
 800f4aa:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800f4ae:	4620      	mov	r0, r4
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	d156      	bne.n	800f562 <Encoder::run_offset_calibration()+0x1fe>
 800f4b4:	f7fd fea4 	bl	800d200 <Axis::do_checks()>
 800f4b8:	4607      	mov	r7, r0
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	f7fd ff12 	bl	800d2e4 <Axis::do_updates()>
 800f4c0:	4680      	mov	r8, r0
 800f4c2:	4620      	mov	r0, r4
 800f4c4:	f7fd ff34 	bl	800d330 <Axis::watchdog_check()>
 800f4c8:	ee07 ba90 	vmov	s15, fp
 800f4cc:	eddf 0a4f 	vldr	s1, [pc, #316]	@ 800f60c <Encoder::run_offset_calibration()+0x2a8>
 800f4d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800f4d4:	b11f      	cbz	r7, 800f4de <Encoder::run_offset_calibration()+0x17a>
 800f4d6:	f1b8 0f00 	cmp.w	r8, #0
 800f4da:	d000      	beq.n	800f4de <Encoder::run_offset_calibration()+0x17a>
 800f4dc:	b918      	cbnz	r0, 800f4e6 <Encoder::run_offset_calibration()+0x182>
 800f4de:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f4e0:	781b      	ldrb	r3, [r3, #0]
 800f4e2:	2b01      	cmp	r3, #1
 800f4e4:	d13d      	bne.n	800f562 <Encoder::run_offset_calibration()+0x1fe>
 800f4e6:	68eb      	ldr	r3, [r5, #12]
 800f4e8:	edd3 7a07 	vldr	s15, [r3, #28]
 800f4ec:	eeb0 0a69 	vmov.f32	s0, s19
 800f4f0:	eea7 0aea 	vfms.f32	s0, s15, s21
 800f4f4:	ee67 7a8a 	vmul.f32	s15, s15, s20
 800f4f8:	eea7 0a27 	vfma.f32	s0, s14, s15
 800f4fc:	f013 fc78 	bl	8022df0 <fmodf>
 800f500:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800f504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f508:	bf48      	it	mi
 800f50a:	ee30 0a0b 	vaddmi.f32	s0, s0, s22
 800f50e:	ee30 8a69 	vsub.f32	s16, s0, s19
 800f512:	eeb0 0a48 	vmov.f32	s0, s16
 800f516:	f7fc fac9 	bl	800baac <our_arm_cos_f32>
 800f51a:	eef0 7a40 	vmov.f32	s15, s0
 800f51e:	eeb0 0a48 	vmov.f32	s0, s16
 800f522:	ee28 8aa7 	vmul.f32	s16, s17, s15
 800f526:	f7fc fa75 	bl	800ba14 <our_arm_sin_f32>
 800f52a:	692b      	ldr	r3, [r5, #16]
 800f52c:	ee68 0a80 	vmul.f32	s1, s17, s0
 800f530:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f532:	eeb0 0a48 	vmov.f32	s0, s16
 800f536:	f7ff f9ed 	bl	800e914 <Motor::enqueue_voltage_timings(float, float)>
 800f53a:	2105      	movs	r1, #5
 800f53c:	2800      	cmp	r0, #0
 800f53e:	d1a0      	bne.n	800f482 <Encoder::run_offset_calibration()+0x11e>
 800f540:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800f542:	3301      	adds	r3, #1
 800f544:	4620      	mov	r0, r4
 800f546:	67a3      	str	r3, [r4, #120]	@ 0x78
 800f548:	f7fd fd46 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f54c:	b948      	cbnz	r0, 800f562 <Encoder::run_offset_calibration()+0x1fe>
 800f54e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800f550:	f7fc fb66 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800f554:	f7fc ff50 	bl	800c3f8 <update_brake_current>
 800f558:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f55c:	2108      	movs	r1, #8
 800f55e:	f7ff fd8b 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f562:	692c      	ldr	r4, [r5, #16]
 800f564:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 800f566:	2a00      	cmp	r2, #0
 800f568:	f040 80ef 	bne.w	800f74a <Encoder::run_offset_calibration()+0x3e6>
 800f56c:	9901      	ldr	r1, [sp, #4]
 800f56e:	69ab      	ldr	r3, [r5, #24]
 800f570:	3108      	adds	r1, #8
 800f572:	428b      	cmp	r3, r1
 800f574:	f300 80f2 	bgt.w	800f75c <Encoder::run_offset_calibration()+0x3f8>
 800f578:	9901      	ldr	r1, [sp, #4]
 800f57a:	3908      	subs	r1, #8
 800f57c:	428b      	cmp	r3, r1
 800f57e:	f280 810e 	bge.w	800f79e <Encoder::run_offset_calibration()+0x43a>
 800f582:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800f584:	6a12      	ldr	r2, [r2, #32]
 800f586:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800f58a:	61d1      	str	r1, [r2, #28]
 800f58c:	6852      	ldr	r2, [r2, #4]
 800f58e:	9901      	ldr	r1, [sp, #4]
 800f590:	ed9f 5a1d 	vldr	s10, [pc, #116]	@ 800f608 <Encoder::run_offset_calibration()+0x2a4>
 800f594:	1a5b      	subs	r3, r3, r1
 800f596:	0052      	lsls	r2, r2, #1
 800f598:	2b00      	cmp	r3, #0
 800f59a:	ee07 2a90 	vmov	s15, r2
 800f59e:	bfb8      	it	lt
 800f5a0:	425b      	neglt	r3, r3
 800f5a2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800f5a6:	ee07 3a90 	vmov	s15, r3
 800f5aa:	68eb      	ldr	r3, [r5, #12]
 800f5ac:	ed93 6a02 	vldr	s12, [r3, #8]
 800f5b0:	edd3 6a07 	vldr	s13, [r3, #28]
 800f5b4:	edd3 5a06 	vldr	s11, [r3, #24]
 800f5b8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800f5bc:	ee66 6a85 	vmul.f32	s13, s13, s10
 800f5c0:	ee87 5a06 	vdiv.f32	s10, s14, s12
 800f5c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f5c8:	ee86 7a85 	vdiv.f32	s14, s13, s10
 800f5cc:	edc5 7a0f 	vstr	s15, [r5, #60]	@ 0x3c
 800f5d0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f5d4:	eef0 7ae7 	vabs.f32	s15, s15
 800f5d8:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f5dc:	eef4 6ae5 	vcmpe.f32	s13, s11
 800f5e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f5e4:	f300 80cc 	bgt.w	800f780 <Encoder::run_offset_calibration()+0x41c>
 800f5e8:	ed9f 9a06 	vldr	s18, [pc, #24]	@ 800f604 <Encoder::run_offset_calibration()+0x2a0>
 800f5ec:	eddf aa07 	vldr	s21, [pc, #28]	@ 800f60c <Encoder::run_offset_calibration()+0x2a8>
 800f5f0:	eef6 9a00 	vmov.f32	s19, #96	@ 0x3f000000  0.5
 800f5f4:	f04f 0b00 	mov.w	fp, #0
 800f5f8:	e01e      	b.n	800f638 <Encoder::run_offset_calibration()+0x2d4>
 800f5fa:	bf00      	nop
 800f5fc:	00000000 	.word	0x00000000
 800f600:	45fa0000 	.word	0x45fa0000
 800f604:	40490fdb 	.word	0x40490fdb
 800f608:	3ea2f983 	.word	0x3ea2f983
 800f60c:	40c90fdb 	.word	0x40c90fdb
 800f610:	692b      	ldr	r3, [r5, #16]
 800f612:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f614:	f7fe ff7c 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800f618:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800f61a:	1c5a      	adds	r2, r3, #1
 800f61c:	69ab      	ldr	r3, [r5, #24]
 800f61e:	67a2      	str	r2, [r4, #120]	@ 0x78
 800f620:	199e      	adds	r6, r3, r6
 800f622:	4620      	mov	r0, r4
 800f624:	eb4a 7ae3 	adc.w	sl, sl, r3, asr #31
 800f628:	f10b 0b01 	add.w	fp, fp, #1
 800f62c:	f7fd fcd4 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f630:	2800      	cmp	r0, #0
 800f632:	d053      	beq.n	800f6dc <Encoder::run_offset_calibration()+0x378>
 800f634:	45d9      	cmp	r9, fp
 800f636:	dd5b      	ble.n	800f6f0 <Encoder::run_offset_calibration()+0x38c>
 800f638:	f894 3066 	ldrb.w	r3, [r4, #102]	@ 0x66
 800f63c:	4620      	mov	r0, r4
 800f63e:	2b00      	cmp	r3, #0
 800f640:	d156      	bne.n	800f6f0 <Encoder::run_offset_calibration()+0x38c>
 800f642:	f7fd fddd 	bl	800d200 <Axis::do_checks()>
 800f646:	4607      	mov	r7, r0
 800f648:	4620      	mov	r0, r4
 800f64a:	f7fd fe4b 	bl	800d2e4 <Axis::do_updates()>
 800f64e:	4680      	mov	r8, r0
 800f650:	4620      	mov	r0, r4
 800f652:	f7fd fe6d 	bl	800d330 <Axis::watchdog_check()>
 800f656:	ee07 ba90 	vmov	s15, fp
 800f65a:	ed5f 0a14 	vldr	s1, [pc, #-80]	@ 800f60c <Encoder::run_offset_calibration()+0x2a8>
 800f65e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800f662:	b11f      	cbz	r7, 800f66c <Encoder::run_offset_calibration()+0x308>
 800f664:	f1b8 0f00 	cmp.w	r8, #0
 800f668:	d000      	beq.n	800f66c <Encoder::run_offset_calibration()+0x308>
 800f66a:	b918      	cbnz	r0, 800f674 <Encoder::run_offset_calibration()+0x310>
 800f66c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800f66e:	781b      	ldrb	r3, [r3, #0]
 800f670:	2b01      	cmp	r3, #1
 800f672:	d13d      	bne.n	800f6f0 <Encoder::run_offset_calibration()+0x38c>
 800f674:	68eb      	ldr	r3, [r5, #12]
 800f676:	edd3 7a07 	vldr	s15, [r3, #28]
 800f67a:	eeb0 0a49 	vmov.f32	s0, s18
 800f67e:	eea7 0aa9 	vfma.f32	s0, s15, s19
 800f682:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 800f686:	eea7 0a8a 	vfma.f32	s0, s15, s20
 800f68a:	f013 fbb1 	bl	8022df0 <fmodf>
 800f68e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800f692:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f696:	bf48      	it	mi
 800f698:	ee30 0a2a 	vaddmi.f32	s0, s0, s21
 800f69c:	ee30 8a49 	vsub.f32	s16, s0, s18
 800f6a0:	eeb0 0a48 	vmov.f32	s0, s16
 800f6a4:	f7fc fa02 	bl	800baac <our_arm_cos_f32>
 800f6a8:	eef0 7a40 	vmov.f32	s15, s0
 800f6ac:	eeb0 0a48 	vmov.f32	s0, s16
 800f6b0:	ee28 8aa7 	vmul.f32	s16, s17, s15
 800f6b4:	f7fc f9ae 	bl	800ba14 <our_arm_sin_f32>
 800f6b8:	692b      	ldr	r3, [r5, #16]
 800f6ba:	ee68 0a80 	vmul.f32	s1, s17, s0
 800f6be:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f6c0:	eeb0 0a48 	vmov.f32	s0, s16
 800f6c4:	f7ff f926 	bl	800e914 <Motor::enqueue_voltage_timings(float, float)>
 800f6c8:	2105      	movs	r1, #5
 800f6ca:	2800      	cmp	r0, #0
 800f6cc:	d1a0      	bne.n	800f610 <Encoder::run_offset_calibration()+0x2ac>
 800f6ce:	6fa3      	ldr	r3, [r4, #120]	@ 0x78
 800f6d0:	3301      	adds	r3, #1
 800f6d2:	67a3      	str	r3, [r4, #120]	@ 0x78
 800f6d4:	4620      	mov	r0, r4
 800f6d6:	f7fd fc7f 	bl	800cfd8 <Axis::wait_for_current_meas()>
 800f6da:	b948      	cbnz	r0, 800f6f0 <Encoder::run_offset_calibration()+0x38c>
 800f6dc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
 800f6de:	f7fc fa9f 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 800f6e2:	f7fc fe89 	bl	800c3f8 <update_brake_current>
 800f6e6:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f6ea:	2108      	movs	r1, #8
 800f6ec:	f7ff fcc4 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f6f0:	692b      	ldr	r3, [r5, #16]
 800f6f2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f6f4:	bb4b      	cbnz	r3, 800f74a <Encoder::run_offset_calibration()+0x3e6>
 800f6f6:	ea4f 0449 	mov.w	r4, r9, lsl #1
 800f6fa:	4622      	mov	r2, r4
 800f6fc:	f349 7380 	sbfx	r3, r9, #30, #1
 800f700:	4651      	mov	r1, sl
 800f702:	4630      	mov	r0, r6
 800f704:	f7f1 fab0 	bl	8000c68 <__aeabi_ldivmod>
 800f708:	ee07 4a90 	vmov	s15, r4
 800f70c:	fb09 f900 	mul.w	r9, r9, r0
 800f710:	eba6 0949 	sub.w	r9, r6, r9, lsl #1
 800f714:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800f718:	ee07 9a90 	vmov	s15, r9
 800f71c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f720:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800f724:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800f728:	68e9      	ldr	r1, [r5, #12]
 800f72a:	2201      	movs	r2, #1
 800f72c:	4603      	mov	r3, r0
 800f72e:	4610      	mov	r0, r2
 800f730:	60cb      	str	r3, [r1, #12]
 800f732:	ee76 7a86 	vadd.f32	s15, s13, s12
 800f736:	edc1 7a04 	vstr	s15, [r1, #16]
 800f73a:	75ea      	strb	r2, [r5, #23]
 800f73c:	b003      	add	sp, #12
 800f73e:	ecbd 8b08 	vpop	{d8-d11}
 800f742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f746:	2a02      	cmp	r2, #2
 800f748:	d005      	beq.n	800f756 <Encoder::run_offset_calibration()+0x3f2>
 800f74a:	2000      	movs	r0, #0
 800f74c:	b003      	add	sp, #12
 800f74e:	ecbd 8b08 	vpop	{d8-d11}
 800f752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f756:	edd3 8a02 	vldr	s17, [r3, #8]
 800f75a:	e624      	b.n	800f3a6 <Encoder::run_offset_calibration()+0x42>
 800f75c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800f75e:	6a12      	ldr	r2, [r2, #32]
 800f760:	2101      	movs	r1, #1
 800f762:	61d1      	str	r1, [r2, #28]
 800f764:	e712      	b.n	800f58c <Encoder::run_offset_calibration()+0x228>
 800f766:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800f76a:	2120      	movs	r1, #32
 800f76c:	3014      	adds	r0, #20
 800f76e:	f7ff fc7f 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f772:	6928      	ldr	r0, [r5, #16]
 800f774:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f778:	3050      	adds	r0, #80	@ 0x50
 800f77a:	f7ff fc7d 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f77e:	e7e4      	b.n	800f74a <Encoder::run_offset_calibration()+0x3e6>
 800f780:	2300      	movs	r3, #0
 800f782:	f8a5 3058 	strh.w	r3, [r5, #88]	@ 0x58
 800f786:	2102      	movs	r1, #2
 800f788:	f105 0014 	add.w	r0, r5, #20
 800f78c:	f7ff fc70 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f790:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f794:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800f798:	f7ff fc6e 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f79c:	e7d5      	b.n	800f74a <Encoder::run_offset_calibration()+0x3e6>
 800f79e:	f8a5 2058 	strh.w	r2, [r5, #88]	@ 0x58
 800f7a2:	2104      	movs	r1, #4
 800f7a4:	e7f0      	b.n	800f788 <Encoder::run_offset_calibration()+0x424>
 800f7a6:	bf00      	nop

0800f7a8 <Encoder::sample_now()>:
 800f7a8:	f8b0 306e 	ldrh.w	r3, [r0, #110]	@ 0x6e
 800f7ac:	2b02      	cmp	r3, #2
 800f7ae:	b510      	push	{r4, lr}
 800f7b0:	4604      	mov	r4, r0
 800f7b2:	d023      	beq.n	800f7fc <Encoder::sample_now()+0x54>
 800f7b4:	d801      	bhi.n	800f7ba <Encoder::sample_now()+0x12>
 800f7b6:	b15b      	cbz	r3, 800f7d0 <Encoder::sample_now()+0x28>
 800f7b8:	bd10      	pop	{r4, pc}
 800f7ba:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800f7be:	2b03      	cmp	r3, #3
 800f7c0:	d80d      	bhi.n	800f7de <Encoder::sample_now()+0x36>
 800f7c2:	6903      	ldr	r3, [r0, #16]
 800f7c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7c8:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f7ca:	210a      	movs	r1, #10
 800f7cc:	f7fe bea0 	b.w	800e510 <Motor::log_timing(TimingLog_t)>
 800f7d0:	6883      	ldr	r3, [r0, #8]
 800f7d2:	681b      	ldr	r3, [r3, #0]
 800f7d4:	681b      	ldr	r3, [r3, #0]
 800f7d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f7d8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 800f7dc:	bd10      	pop	{r4, pc}
 800f7de:	2300      	movs	r3, #0
 800f7e0:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800f7e4:	2108      	movs	r1, #8
 800f7e6:	3014      	adds	r0, #20
 800f7e8:	f7ff fc42 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f7ec:	6920      	ldr	r0, [r4, #16]
 800f7ee:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f7f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7f6:	3050      	adds	r0, #80	@ 0x50
 800f7f8:	f7ff bc3e 	b.w	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f7fc:	68c3      	ldr	r3, [r0, #12]
 800f7fe:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800f800:	2b06      	cmp	r3, #6
 800f802:	d02c      	beq.n	800f85e <Encoder::sample_now()+0xb6>
 800f804:	2b08      	cmp	r3, #8
 800f806:	d02a      	beq.n	800f85e <Encoder::sample_now()+0xb6>
 800f808:	2b05      	cmp	r3, #5
 800f80a:	d039      	beq.n	800f880 <Encoder::sample_now()+0xd8>
 800f80c:	3b02      	subs	r3, #2
 800f80e:	b29b      	uxth	r3, r3
 800f810:	2b06      	cmp	r3, #6
 800f812:	d938      	bls.n	800f886 <Encoder::sample_now()+0xde>
 800f814:	4821      	ldr	r0, [pc, #132]	@ (800f89c <Encoder::sample_now()+0xf4>)
 800f816:	2101      	movs	r1, #1
 800f818:	f7fc fd04 	bl	800c224 <get_adc_voltage>
 800f81c:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 800f8a0 <Encoder::sample_now()+0xf8>
 800f820:	68e3      	ldr	r3, [r4, #12]
 800f822:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 800f826:	eee0 7a07 	vfma.f32	s15, s0, s14
 800f82a:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800f82c:	2b06      	cmp	r3, #6
 800f82e:	edc4 7a18 	vstr	s15, [r4, #96]	@ 0x60
 800f832:	d01e      	beq.n	800f872 <Encoder::sample_now()+0xca>
 800f834:	2b08      	cmp	r3, #8
 800f836:	d01c      	beq.n	800f872 <Encoder::sample_now()+0xca>
 800f838:	2b05      	cmp	r3, #5
 800f83a:	d017      	beq.n	800f86c <Encoder::sample_now()+0xc4>
 800f83c:	3b02      	subs	r3, #2
 800f83e:	b29b      	uxth	r3, r3
 800f840:	2b06      	cmp	r3, #6
 800f842:	d925      	bls.n	800f890 <Encoder::sample_now()+0xe8>
 800f844:	4815      	ldr	r0, [pc, #84]	@ (800f89c <Encoder::sample_now()+0xf4>)
 800f846:	2101      	movs	r1, #1
 800f848:	f7fc fcec 	bl	800c224 <get_adc_voltage>
 800f84c:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 800f8a0 <Encoder::sample_now()+0xf8>
 800f850:	eefe 7a00 	vmov.f32	s15, #224	@ 0xbf000000 -0.5
 800f854:	eee0 7a07 	vfma.f32	s15, s0, s14
 800f858:	edc4 7a19 	vstr	s15, [r4, #100]	@ 0x64
 800f85c:	bd10      	pop	{r4, pc}
 800f85e:	3b02      	subs	r3, #2
 800f860:	4a10      	ldr	r2, [pc, #64]	@ (800f8a4 <Encoder::sample_now()+0xfc>)
 800f862:	4811      	ldr	r0, [pc, #68]	@ (800f8a8 <Encoder::sample_now()+0x100>)
 800f864:	b29b      	uxth	r3, r3
 800f866:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800f86a:	e7d5      	b.n	800f818 <Encoder::sample_now()+0x70>
 800f86c:	480f      	ldr	r0, [pc, #60]	@ (800f8ac <Encoder::sample_now()+0x104>)
 800f86e:	2110      	movs	r1, #16
 800f870:	e7ea      	b.n	800f848 <Encoder::sample_now()+0xa0>
 800f872:	3b02      	subs	r3, #2
 800f874:	4a0b      	ldr	r2, [pc, #44]	@ (800f8a4 <Encoder::sample_now()+0xfc>)
 800f876:	480c      	ldr	r0, [pc, #48]	@ (800f8a8 <Encoder::sample_now()+0x100>)
 800f878:	b29b      	uxth	r3, r3
 800f87a:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800f87e:	e7e3      	b.n	800f848 <Encoder::sample_now()+0xa0>
 800f880:	480a      	ldr	r0, [pc, #40]	@ (800f8ac <Encoder::sample_now()+0x104>)
 800f882:	2110      	movs	r1, #16
 800f884:	e7c8      	b.n	800f818 <Encoder::sample_now()+0x70>
 800f886:	4a07      	ldr	r2, [pc, #28]	@ (800f8a4 <Encoder::sample_now()+0xfc>)
 800f888:	4804      	ldr	r0, [pc, #16]	@ (800f89c <Encoder::sample_now()+0xf4>)
 800f88a:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800f88e:	e7c3      	b.n	800f818 <Encoder::sample_now()+0x70>
 800f890:	4a04      	ldr	r2, [pc, #16]	@ (800f8a4 <Encoder::sample_now()+0xfc>)
 800f892:	4802      	ldr	r0, [pc, #8]	@ (800f89c <Encoder::sample_now()+0xf4>)
 800f894:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 800f898:	e7d6      	b.n	800f848 <Encoder::sample_now()+0xa0>
 800f89a:	bf00      	nop
 800f89c:	40020000 	.word	0x40020000
 800f8a0:	3e9b26ca 	.word	0x3e9b26ca
 800f8a4:	0802ae48 	.word	0x0802ae48
 800f8a8:	40020400 	.word	0x40020400
 800f8ac:	40020800 	.word	0x40020800

0800f8b0 <Encoder::abs_spi_init()>:
 800f8b0:	b538      	push	{r3, r4, r5, lr}
 800f8b2:	f8b0 306e 	ldrh.w	r3, [r0, #110]	@ 0x6e
 800f8b6:	f413 7280 	ands.w	r2, r3, #256	@ 0x100
 800f8ba:	d024      	beq.n	800f906 <Encoder::abs_spi_init()+0x56>
 800f8bc:	6882      	ldr	r2, [r0, #8]
 800f8be:	f5a3 7381 	sub.w	r3, r3, #258	@ 0x102
 800f8c2:	fab3 f383 	clz	r3, r3
 800f8c6:	6a54      	ldr	r4, [r2, #36]	@ 0x24
 800f8c8:	095b      	lsrs	r3, r3, #5
 800f8ca:	005b      	lsls	r3, r3, #1
 800f8cc:	2200      	movs	r2, #0
 800f8ce:	6123      	str	r3, [r4, #16]
 800f8d0:	2501      	movs	r5, #1
 800f8d2:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800f8d6:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800f8da:	e9c4 2102 	strd	r2, r1, [r4, #8]
 800f8de:	e9c4 5305 	strd	r5, r3, [r4, #20]
 800f8e2:	2120      	movs	r1, #32
 800f8e4:	230a      	movs	r3, #10
 800f8e6:	f44f 7082 	mov.w	r0, #260	@ 0x104
 800f8ea:	e9c4 1207 	strd	r1, r2, [r4, #28]
 800f8ee:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
 800f8f2:	6060      	str	r0, [r4, #4]
 800f8f4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800f8f6:	4620      	mov	r0, r4
 800f8f8:	f7f3 fa48 	bl	8002d8c <HAL_SPI_DeInit>
 800f8fc:	4620      	mov	r0, r4
 800f8fe:	f7f3 fa05 	bl	8002d0c <HAL_SPI_Init>
 800f902:	4628      	mov	r0, r5
 800f904:	bd38      	pop	{r3, r4, r5, pc}
 800f906:	4610      	mov	r0, r2
 800f908:	bd38      	pop	{r3, r4, r5, pc}
 800f90a:	bf00      	nop

0800f90c <Encoder::abs_spi_start_transaction()>:
 800f90c:	b538      	push	{r3, r4, r5, lr}
 800f90e:	f8b0 306e 	ldrh.w	r3, [r0, #110]	@ 0x6e
 800f912:	05db      	lsls	r3, r3, #23
 800f914:	d401      	bmi.n	800f91a <Encoder::abs_spi_start_transaction()+0xe>
 800f916:	2001      	movs	r0, #1
 800f918:	bd38      	pop	{r3, r4, r5, pc}
 800f91a:	6903      	ldr	r3, [r0, #16]
 800f91c:	4604      	mov	r4, r0
 800f91e:	2109      	movs	r1, #9
 800f920:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f922:	f7fe fdf5 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800f926:	68a3      	ldr	r3, [r4, #8]
 800f928:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f92a:	f893 2051 	ldrb.w	r2, [r3, #81]	@ 0x51
 800f92e:	2a01      	cmp	r2, #1
 800f930:	b2d5      	uxtb	r5, r2
 800f932:	d010      	beq.n	800f956 <Encoder::abs_spi_start_transaction()+0x4a>
 800f934:	2200      	movs	r2, #0
 800f936:	f104 0014 	add.w	r0, r4, #20
 800f93a:	f8a4 2058 	strh.w	r2, [r4, #88]	@ 0x58
 800f93e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f942:	f7ff fb95 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f946:	6920      	ldr	r0, [r4, #16]
 800f948:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f94c:	3050      	adds	r0, #80	@ 0x50
 800f94e:	f7ff fb93 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f952:	4610      	mov	r0, r2
 800f954:	bd38      	pop	{r3, r4, r5, pc}
 800f956:	f8b4 1074 	ldrh.w	r1, [r4, #116]	@ 0x74
 800f95a:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800f95c:	2200      	movs	r2, #0
 800f95e:	f7fa fdb5 	bl	800a4cc <HAL_GPIO_WritePin>
 800f962:	68a2      	ldr	r2, [r4, #8]
 800f964:	462b      	mov	r3, r5
 800f966:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 800f968:	f104 0168 	add.w	r1, r4, #104	@ 0x68
 800f96c:	f104 026a 	add.w	r2, r4, #106	@ 0x6a
 800f970:	f7f3 fc3e 	bl	80031f0 <HAL_SPI_TransmitReceive_DMA>
 800f974:	e7cf      	b.n	800f916 <Encoder::abs_spi_start_transaction()+0xa>
 800f976:	bf00      	nop

0800f978 <Encoder::abs_spi_cb()>:
 800f978:	b510      	push	{r4, lr}
 800f97a:	4604      	mov	r4, r0
 800f97c:	f8b0 1074 	ldrh.w	r1, [r0, #116]	@ 0x74
 800f980:	6f00      	ldr	r0, [r0, #112]	@ 0x70
 800f982:	2201      	movs	r2, #1
 800f984:	f7fa fda2 	bl	800a4cc <HAL_GPIO_WritePin>
 800f988:	6923      	ldr	r3, [r4, #16]
 800f98a:	210b      	movs	r1, #11
 800f98c:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 800f98e:	f7fe fdbf 	bl	800e510 <Motor::log_timing(TimingLog_t)>
 800f992:	f8b4 306e 	ldrh.w	r3, [r4, #110]	@ 0x6e
 800f996:	f240 1201 	movw	r2, #257	@ 0x101
 800f99a:	4293      	cmp	r3, r2
 800f99c:	d022      	beq.n	800f9e4 <Encoder::abs_spi_cb()+0x6c>
 800f99e:	f240 1203 	movw	r2, #259	@ 0x103
 800f9a2:	4293      	cmp	r3, r2
 800f9a4:	d012      	beq.n	800f9cc <Encoder::abs_spi_cb()+0x54>
 800f9a6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800f9aa:	d02c      	beq.n	800fa06 <Encoder::abs_spi_cb()+0x8e>
 800f9ac:	2300      	movs	r3, #0
 800f9ae:	f104 0014 	add.w	r0, r4, #20
 800f9b2:	f8a4 3058 	strh.w	r3, [r4, #88]	@ 0x58
 800f9b6:	2108      	movs	r1, #8
 800f9b8:	f7ff fb5a 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800f9bc:	6920      	ldr	r0, [r4, #16]
 800f9be:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800f9c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f9c6:	3050      	adds	r0, #80	@ 0x50
 800f9c8:	f7ff bb56 	b.w	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800f9cc:	f8b4 306a 	ldrh.w	r3, [r4, #106]	@ 0x6a
 800f9d0:	089b      	lsrs	r3, r3, #2
 800f9d2:	68e1      	ldr	r1, [r4, #12]
 800f9d4:	78c9      	ldrb	r1, [r1, #3]
 800f9d6:	6423      	str	r3, [r4, #64]	@ 0x40
 800f9d8:	2201      	movs	r2, #1
 800f9da:	f884 206c 	strb.w	r2, [r4, #108]	@ 0x6c
 800f9de:	b101      	cbz	r1, 800f9e2 <Encoder::abs_spi_cb()+0x6a>
 800f9e0:	75e2      	strb	r2, [r4, #23]
 800f9e2:	bd10      	pop	{r4, pc}
 800f9e4:	f8b4 306a 	ldrh.w	r3, [r4, #106]	@ 0x6a
 800f9e8:	ea83 2213 	eor.w	r2, r3, r3, lsr #8
 800f9ec:	ea82 1212 	eor.w	r2, r2, r2, lsr #4
 800f9f0:	ea82 0292 	eor.w	r2, r2, r2, lsr #2
 800f9f4:	ea82 0252 	eor.w	r2, r2, r2, lsr #1
 800f9f8:	07d0      	lsls	r0, r2, #31
 800f9fa:	d4f2      	bmi.n	800f9e2 <Encoder::abs_spi_cb()+0x6a>
 800f9fc:	0459      	lsls	r1, r3, #17
 800f9fe:	d4f0      	bmi.n	800f9e2 <Encoder::abs_spi_cb()+0x6a>
 800fa00:	f3c3 030d 	ubfx	r3, r3, #0, #14
 800fa04:	e7e5      	b.n	800f9d2 <Encoder::abs_spi_cb()+0x5a>
 800fa06:	f8b4 306a 	ldrh.w	r3, [r4, #106]	@ 0x6a
 800fa0a:	ea83 2213 	eor.w	r2, r3, r3, lsr #8
 800fa0e:	ea82 1212 	eor.w	r2, r2, r2, lsr #4
 800fa12:	ea82 0292 	eor.w	r2, r2, r2, lsr #2
 800fa16:	43d2      	mvns	r2, r2
 800fa18:	0792      	lsls	r2, r2, #30
 800fa1a:	d1e2      	bne.n	800f9e2 <Encoder::abs_spi_cb()+0x6a>
 800fa1c:	f3c3 030d 	ubfx	r3, r3, #0, #14
 800fa20:	e7d7      	b.n	800f9d2 <Encoder::abs_spi_cb()+0x5a>
 800fa22:	bf00      	nop

0800fa24 <Encoder::abs_spi_cs_pin_init()>:
 800fa24:	b530      	push	{r4, r5, lr}
 800fa26:	68c3      	ldr	r3, [r0, #12]
 800fa28:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800fa2a:	2b06      	cmp	r3, #6
 800fa2c:	b087      	sub	sp, #28
 800fa2e:	4604      	mov	r4, r0
 800fa30:	d028      	beq.n	800fa84 <Encoder::abs_spi_cs_pin_init()+0x60>
 800fa32:	2b08      	cmp	r3, #8
 800fa34:	d026      	beq.n	800fa84 <Encoder::abs_spi_cs_pin_init()+0x60>
 800fa36:	2b05      	cmp	r3, #5
 800fa38:	d008      	beq.n	800fa4c <Encoder::abs_spi_cs_pin_init()+0x28>
 800fa3a:	3b02      	subs	r3, #2
 800fa3c:	b29b      	uxth	r3, r3
 800fa3e:	4818      	ldr	r0, [pc, #96]	@ (800faa0 <Encoder::abs_spi_cs_pin_init()+0x7c>)
 800fa40:	6720      	str	r0, [r4, #112]	@ 0x70
 800fa42:	2b06      	cmp	r3, #6
 800fa44:	d927      	bls.n	800fa96 <Encoder::abs_spi_cs_pin_init()+0x72>
 800fa46:	2101      	movs	r1, #1
 800fa48:	460b      	mov	r3, r1
 800fa4a:	e003      	b.n	800fa54 <Encoder::abs_spi_cs_pin_init()+0x30>
 800fa4c:	4815      	ldr	r0, [pc, #84]	@ (800faa4 <Encoder::abs_spi_cs_pin_init()+0x80>)
 800fa4e:	6720      	str	r0, [r4, #112]	@ 0x70
 800fa50:	2110      	movs	r1, #16
 800fa52:	460b      	mov	r3, r1
 800fa54:	f8a4 3074 	strh.w	r3, [r4, #116]	@ 0x74
 800fa58:	f7fa fc80 	bl	800a35c <HAL_GPIO_DeInit>
 800fa5c:	f8b4 2074 	ldrh.w	r2, [r4, #116]	@ 0x74
 800fa60:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800fa62:	2501      	movs	r5, #1
 800fa64:	2300      	movs	r3, #0
 800fa66:	a901      	add	r1, sp, #4
 800fa68:	e9cd 2501 	strd	r2, r5, [sp, #4]
 800fa6c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 800fa70:	f7fa fb52 	bl	800a118 <HAL_GPIO_Init>
 800fa74:	f8b4 1074 	ldrh.w	r1, [r4, #116]	@ 0x74
 800fa78:	6f20      	ldr	r0, [r4, #112]	@ 0x70
 800fa7a:	462a      	mov	r2, r5
 800fa7c:	f7fa fd26 	bl	800a4cc <HAL_GPIO_WritePin>
 800fa80:	b007      	add	sp, #28
 800fa82:	bd30      	pop	{r4, r5, pc}
 800fa84:	3b02      	subs	r3, #2
 800fa86:	4a08      	ldr	r2, [pc, #32]	@ (800faa8 <Encoder::abs_spi_cs_pin_init()+0x84>)
 800fa88:	4808      	ldr	r0, [pc, #32]	@ (800faac <Encoder::abs_spi_cs_pin_init()+0x88>)
 800fa8a:	6720      	str	r0, [r4, #112]	@ 0x70
 800fa8c:	b29b      	uxth	r3, r3
 800fa8e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800fa92:	4619      	mov	r1, r3
 800fa94:	e7de      	b.n	800fa54 <Encoder::abs_spi_cs_pin_init()+0x30>
 800fa96:	4a04      	ldr	r2, [pc, #16]	@ (800faa8 <Encoder::abs_spi_cs_pin_init()+0x84>)
 800fa98:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800fa9c:	4619      	mov	r1, r3
 800fa9e:	e7d9      	b.n	800fa54 <Encoder::abs_spi_cs_pin_init()+0x30>
 800faa0:	40020000 	.word	0x40020000
 800faa4:	40020800 	.word	0x40020800
 800faa8:	0802ae48 	.word	0x0802ae48
 800faac:	40020400 	.word	0x40020400

0800fab0 <Encoder::setup()>:
 800fab0:	6883      	ldr	r3, [r0, #8]
 800fab2:	b510      	push	{r4, lr}
 800fab4:	2118      	movs	r1, #24
 800fab6:	4604      	mov	r4, r0
 800fab8:	6818      	ldr	r0, [r3, #0]
 800faba:	f7f9 fcb7 	bl	800942c <HAL_TIM_Encoder_Start>
 800fabe:	2100      	movs	r1, #0
 800fac0:	4620      	mov	r0, r4
 800fac2:	f7ff fb8f 	bl	800f1e4 <Encoder::set_idx_subscribe(bool)>
 800fac6:	68e3      	ldr	r3, [r4, #12]
 800fac8:	881b      	ldrh	r3, [r3, #0]
 800faca:	f8a4 306e 	strh.w	r3, [r4, #110]	@ 0x6e
 800face:	05db      	lsls	r3, r3, #23
 800fad0:	d400      	bmi.n	800fad4 <Encoder::setup()+0x24>
 800fad2:	bd10      	pop	{r4, pc}
 800fad4:	4620      	mov	r0, r4
 800fad6:	f7ff ffa5 	bl	800fa24 <Encoder::abs_spi_cs_pin_init()>
 800fada:	4620      	mov	r0, r4
 800fadc:	f7ff fee8 	bl	800f8b0 <Encoder::abs_spi_init()>
 800fae0:	6923      	ldr	r3, [r4, #16]
 800fae2:	699a      	ldr	r2, [r3, #24]
 800fae4:	68d3      	ldr	r3, [r2, #12]
 800fae6:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
 800faea:	f893 3878 	ldrb.w	r3, [r3, #2168]	@ 0x878
 800faee:	2b00      	cmp	r3, #0
 800faf0:	d0ef      	beq.n	800fad2 <Encoder::setup()+0x22>
 800faf2:	2301      	movs	r3, #1
 800faf4:	f882 3056 	strb.w	r3, [r2, #86]	@ 0x56
 800faf8:	bd10      	pop	{r4, pc}
 800fafa:	bf00      	nop

0800fafc <Encoder::update()>:
 800fafc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fb00:	f8b0 306e 	ldrh.w	r3, [r0, #110]	@ 0x6e
 800fb04:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800fb06:	2b02      	cmp	r3, #2
 800fb08:	ed2d 8b08 	vpush	{d8-d11}
 800fb0c:	4604      	mov	r4, r0
 800fb0e:	f000 8154 	beq.w	800fdba <Encoder::update()+0x2be>
 800fb12:	d810      	bhi.n	800fb36 <Encoder::update()+0x3a>
 800fb14:	2b00      	cmp	r3, #0
 800fb16:	f000 8172 	beq.w	800fdfe <Encoder::update()+0x302>
 800fb1a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 800fb1e:	3b01      	subs	r3, #1
 800fb20:	2b05      	cmp	r3, #5
 800fb22:	f200 81e7 	bhi.w	800fef4 <Encoder::update()+0x3f8>
 800fb26:	e8df f013 	tbh	[pc, r3, lsl #1]
 800fb2a:	01c4      	.short	0x01c4
 800fb2c:	01c601b2 	.word	0x01c601b2
 800fb30:	01ca01c8 	.word	0x01ca01c8
 800fb34:	01c2      	.short	0x01c2
 800fb36:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800fb3a:	2b03      	cmp	r3, #3
 800fb3c:	f200 812a 	bhi.w	800fd94 <Encoder::update()+0x298>
 800fb40:	f890 306c 	ldrb.w	r3, [r0, #108]	@ 0x6c
 800fb44:	edd0 7a11 	vldr	s15, [r0, #68]	@ 0x44
 800fb48:	2b00      	cmp	r3, #0
 800fb4a:	f000 816a 	beq.w	800fe22 <Encoder::update()+0x326>
 800fb4e:	ed9f 7add 	vldr	s14, [pc, #884]	@ 800fec4 <Encoder::update()+0x3c8>
 800fb52:	ee67 7a87 	vmul.f32	s15, s15, s14
 800fb56:	edc0 7a11 	vstr	s15, [r0, #68]	@ 0x44
 800fb5a:	68e2      	ldr	r2, [r4, #12]
 800fb5c:	69e0      	ldr	r0, [r4, #28]
 800fb5e:	6891      	ldr	r1, [r2, #8]
 800fb60:	2300      	movs	r3, #0
 800fb62:	f884 306c 	strb.w	r3, [r4, #108]	@ 0x6c
 800fb66:	1a28      	subs	r0, r5, r0
 800fb68:	f7fb ff28 	bl	800b9bc <mod>
 800fb6c:	68e2      	ldr	r2, [r4, #12]
 800fb6e:	69a3      	ldr	r3, [r4, #24]
 800fb70:	6891      	ldr	r1, [r2, #8]
 800fb72:	eb01 72d1 	add.w	r2, r1, r1, lsr #31
 800fb76:	ebb0 0f62 	cmp.w	r0, r2, asr #1
 800fb7a:	4606      	mov	r6, r0
 800fb7c:	bfc8      	it	gt
 800fb7e:	1a46      	subgt	r6, r0, r1
 800fb80:	4433      	add	r3, r6
 800fb82:	69e0      	ldr	r0, [r4, #28]
 800fb84:	61a3      	str	r3, [r4, #24]
 800fb86:	4430      	add	r0, r6
 800fb88:	61e0      	str	r0, [r4, #28]
 800fb8a:	f7fb ff17 	bl	800b9bc <mod>
 800fb8e:	eddf 7ace 	vldr	s15, [pc, #824]	@ 800fec8 <Encoder::update()+0x3cc>
 800fb92:	ed94 9a0c 	vldr	s18, [r4, #48]	@ 0x30
 800fb96:	ed94 8a0a 	vldr	s16, [r4, #40]	@ 0x28
 800fb9a:	f8b4 306e 	ldrh.w	r3, [r4, #110]	@ 0x6e
 800fb9e:	edd4 aa0b 	vldr	s21, [r4, #44]	@ 0x2c
 800fba2:	eea9 8a27 	vfma.f32	s16, s18, s15
 800fba6:	f413 7f80 	tst.w	r3, #256	@ 0x100
 800fbaa:	bf08      	it	eq
 800fbac:	4605      	moveq	r5, r0
 800fbae:	61e5      	str	r5, [r4, #28]
 800fbb0:	eeb0 0a48 	vmov.f32	s0, s16
 800fbb4:	eee9 aa27 	vfma.f32	s21, s18, s15
 800fbb8:	f013 f982 	bl	8022ec0 <floorf>
 800fbbc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800fbc0:	69a3      	ldr	r3, [r4, #24]
 800fbc2:	ee17 2a90 	vmov	r2, s15
 800fbc6:	1a9b      	subs	r3, r3, r2
 800fbc8:	ee07 3a90 	vmov	s15, r3
 800fbcc:	eeb0 0a6a 	vmov.f32	s0, s21
 800fbd0:	eeb8 aae7 	vcvt.f32.s32	s20, s15
 800fbd4:	f013 f974 	bl	8022ec0 <floorf>
 800fbd8:	68e7      	ldr	r7, [r4, #12]
 800fbda:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800fbde:	edd7 7a02 	vldr	s15, [r7, #8]
 800fbe2:	ee10 3a10 	vmov	r3, s0
 800fbe6:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800fbea:	1aeb      	subs	r3, r5, r3
 800fbec:	eef6 8a00 	vmov.f32	s17, #96	@ 0x3f000000  0.5
 800fbf0:	ee00 3a10 	vmov	s0, r3
 800fbf4:	ee69 8aa8 	vmul.f32	s17, s19, s17
 800fbf8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800fbfc:	ee38 baa8 	vadd.f32	s22, s17, s17
 800fc00:	ee30 0a28 	vadd.f32	s0, s0, s17
 800fc04:	eef0 0a4b 	vmov.f32	s1, s22
 800fc08:	f013 f8f2 	bl	8022df0 <fmodf>
 800fc0c:	ed9f 7aae 	vldr	s14, [pc, #696]	@ 800fec8 <Encoder::update()+0x3cc>
 800fc10:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800fc14:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fc18:	ee67 7a87 	vmul.f32	s15, s15, s14
 800fc1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc20:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800fc24:	bf48      	it	mi
 800fc26:	ee30 0a0b 	vaddmi.f32	s0, s0, s22
 800fc2a:	eef0 0a69 	vmov.f32	s1, s19
 800fc2e:	ee70 8a68 	vsub.f32	s17, s0, s17
 800fc32:	eeb0 0a6a 	vmov.f32	s0, s21
 800fc36:	eea7 0aa8 	vfma.f32	s0, s15, s17
 800fc3a:	ed84 8a0a 	vstr	s16, [r4, #40]	@ 0x28
 800fc3e:	f013 f8d7 	bl	8022df0 <fmodf>
 800fc42:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 800fc46:	ed9f 7aa0 	vldr	s14, [pc, #640]	@ 800fec8 <Encoder::update()+0x3cc>
 800fc4a:	eddf 6aa0 	vldr	s13, [pc, #640]	@ 800fecc <Encoder::update()+0x3d0>
 800fc4e:	ee27 7a87 	vmul.f32	s14, s15, s14
 800fc52:	eeb7 aa00 	vmov.f32	s20, #112	@ 0x3f800000  1.0
 800fc56:	eea7 9a28 	vfma.f32	s18, s14, s17
 800fc5a:	eeca 8a29 	vdiv.f32	s17, s20, s19
 800fc5e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800fc62:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fc66:	eeb0 7ac9 	vabs.f32	s14, s18
 800fc6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc6e:	eef4 7ac7 	vcmpe.f32	s15, s14
 800fc72:	bf48      	it	mi
 800fc74:	ee30 0a29 	vaddmi.f32	s0, s0, s19
 800fc78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc7c:	bfc8      	it	gt
 800fc7e:	ed9f 9a94 	vldrgt	s18, [pc, #592]	@ 800fed0 <Encoder::update()+0x3d4>
 800fc82:	edd4 7a14 	vldr	s15, [r4, #80]	@ 0x50
 800fc86:	ed84 0a0b 	vstr	s0, [r4, #44]	@ 0x2c
 800fc8a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800fc8e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800fc92:	ee68 6a89 	vmul.f32	s13, s17, s18
 800fc96:	ee68 7a80 	vmul.f32	s15, s17, s0
 800fc9a:	ee28 8a28 	vmul.f32	s16, s16, s17
 800fc9e:	ee37 0a27 	vadd.f32	s0, s14, s15
 800fca2:	eef0 0a4a 	vmov.f32	s1, s20
 800fca6:	ed84 8a12 	vstr	s16, [r4, #72]	@ 0x48
 800fcaa:	edc4 6a13 	vstr	s13, [r4, #76]	@ 0x4c
 800fcae:	edc4 7a14 	vstr	s15, [r4, #80]	@ 0x50
 800fcb2:	ed84 9a0c 	vstr	s18, [r4, #48]	@ 0x30
 800fcb6:	bfcc      	ite	gt
 800fcb8:	f04f 0901 	movgt.w	r9, #1
 800fcbc:	f04f 0900 	movle.w	r9, #0
 800fcc0:	f013 f896 	bl	8022df0 <fmodf>
 800fcc4:	f8d4 8010 	ldr.w	r8, [r4, #16]
 800fcc8:	edd4 7a15 	vldr	s15, [r4, #84]	@ 0x54
 800fccc:	f8d8 3018 	ldr.w	r3, [r8, #24]
 800fcd0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fcd4:	68db      	ldr	r3, [r3, #12]
 800fcd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fcda:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800fcde:	ed93 8a09 	vldr	s16, [r3, #36]	@ 0x24
 800fce2:	bf48      	it	mi
 800fce4:	ee30 0a0a 	vaddmi.f32	s0, s0, s20
 800fce8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800fcec:	eef0 0a48 	vmov.f32	s1, s16
 800fcf0:	ee37 0a80 	vadd.f32	s0, s15, s0
 800fcf4:	f013 f87c 	bl	8022df0 <fmodf>
 800fcf8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fcfc:	68fb      	ldr	r3, [r7, #12]
 800fcfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fd02:	bf48      	it	mi
 800fd04:	ee30 0a08 	vaddmi.f32	s0, s0, s16
 800fd08:	1aeb      	subs	r3, r5, r3
 800fd0a:	ee07 3a90 	vmov	s15, r3
 800fd0e:	ed84 0a15 	vstr	s0, [r4, #84]	@ 0x54
 800fd12:	f1b9 0f00 	cmp.w	r9, #0
 800fd16:	d102      	bne.n	800fd1e <Encoder::update()+0x222>
 800fd18:	7d3b      	ldrb	r3, [r7, #20]
 800fd1a:	2b00      	cmp	r3, #0
 800fd1c:	d178      	bne.n	800fe10 <Encoder::update()+0x314>
 800fd1e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800fd22:	eef0 6a47 	vmov.f32	s13, s14
 800fd26:	ed84 7a08 	vstr	s14, [r4, #32]
 800fd2a:	f8d8 3024 	ldr.w	r3, [r8, #36]	@ 0x24
 800fd2e:	ed97 6a04 	vldr	s12, [r7, #16]
 800fd32:	6a1b      	ldr	r3, [r3, #32]
 800fd34:	ed9f 0a67 	vldr	s0, [pc, #412]	@ 800fed4 <Encoder::update()+0x3d8>
 800fd38:	685b      	ldr	r3, [r3, #4]
 800fd3a:	ed9f 8a67 	vldr	s16, [pc, #412]	@ 800fed8 <Encoder::update()+0x3dc>
 800fd3e:	005b      	lsls	r3, r3, #1
 800fd40:	ee07 3a10 	vmov	s14, r3
 800fd44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd48:	ee68 8a80 	vmul.f32	s17, s17, s0
 800fd4c:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800fd50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fd54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd58:	ee27 7a28 	vmul.f32	s14, s14, s17
 800fd5c:	eef0 0a48 	vmov.f32	s1, s16
 800fd60:	eea7 0a87 	vfma.f32	s0, s15, s14
 800fd64:	f013 f844 	bl	8022df0 <fmodf>
 800fd68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fd6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fd70:	bf48      	it	mi
 800fd72:	ee30 0a08 	vaddmi.f32	s0, s0, s16
 800fd76:	ecbd 8b08 	vpop	{d8-d11}
 800fd7a:	eddf 7a56 	vldr	s15, [pc, #344]	@ 800fed4 <Encoder::update()+0x3d8>
 800fd7e:	ee30 0a67 	vsub.f32	s0, s0, s15
 800fd82:	f240 1301 	movw	r3, #257	@ 0x101
 800fd86:	2001      	movs	r0, #1
 800fd88:	f8a4 3058 	strh.w	r3, [r4, #88]	@ 0x58
 800fd8c:	ed84 0a09 	vstr	s0, [r4, #36]	@ 0x24
 800fd90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fd94:	2300      	movs	r3, #0
 800fd96:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800fd9a:	2108      	movs	r1, #8
 800fd9c:	f104 0014 	add.w	r0, r4, #20
 800fda0:	f7ff f966 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800fda4:	6920      	ldr	r0, [r4, #16]
 800fda6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800fdaa:	3050      	adds	r0, #80	@ 0x50
 800fdac:	f7ff f964 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800fdb0:	ecbd 8b08 	vpop	{d8-d11}
 800fdb4:	2000      	movs	r0, #0
 800fdb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fdba:	edd0 0a19 	vldr	s1, [r0, #100]	@ 0x64
 800fdbe:	ed90 0a18 	vldr	s0, [r0, #96]	@ 0x60
 800fdc2:	f7fb fd93 	bl	800b8ec <fast_atan2>
 800fdc6:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800fedc <Encoder::update()+0x3e0>
 800fdca:	69e3      	ldr	r3, [r4, #28]
 800fdcc:	ee20 0a27 	vmul.f32	s0, s0, s15
 800fdd0:	f641 018b 	movw	r1, #6283	@ 0x188b
 800fdd4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800fdd8:	ee17 0a90 	vmov	r0, s15
 800fddc:	1ac0      	subs	r0, r0, r3
 800fdde:	f7fb fded 	bl	800b9bc <mod>
 800fde2:	68e1      	ldr	r1, [r4, #12]
 800fde4:	69a3      	ldr	r3, [r4, #24]
 800fde6:	6889      	ldr	r1, [r1, #8]
 800fde8:	f640 4245 	movw	r2, #3141	@ 0xc45
 800fdec:	4290      	cmp	r0, r2
 800fdee:	4606      	mov	r6, r0
 800fdf0:	f77f aec6 	ble.w	800fb80 <Encoder::update()+0x84>
 800fdf4:	f5a0 56c4 	sub.w	r6, r0, #6272	@ 0x1880
 800fdf8:	3e0b      	subs	r6, #11
 800fdfa:	4433      	add	r3, r6
 800fdfc:	e6c1      	b.n	800fb82 <Encoder::update()+0x86>
 800fdfe:	6983      	ldr	r3, [r0, #24]
 800fe00:	f8b0 605a 	ldrh.w	r6, [r0, #90]	@ 0x5a
 800fe04:	68c2      	ldr	r2, [r0, #12]
 800fe06:	1af6      	subs	r6, r6, r3
 800fe08:	b236      	sxth	r6, r6
 800fe0a:	6891      	ldr	r1, [r2, #8]
 800fe0c:	4433      	add	r3, r6
 800fe0e:	e6b8      	b.n	800fb82 <Encoder::update()+0x86>
 800fe10:	2e00      	cmp	r6, #0
 800fe12:	dd25      	ble.n	800fe60 <Encoder::update()+0x364>
 800fe14:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 800fed0 <Encoder::update()+0x3d4>
 800fe18:	eef0 6a47 	vmov.f32	s13, s14
 800fe1c:	ed84 7a08 	vstr	s14, [r4, #32]
 800fe20:	e783      	b.n	800fd2a <Encoder::update()+0x22e>
 800fe22:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fe26:	ee37 7a67 	vsub.f32	s14, s14, s15
 800fe2a:	ed9f 6a27 	vldr	s12, [pc, #156]	@ 800fec8 <Encoder::update()+0x3cc>
 800fe2e:	eddf 6a2c 	vldr	s13, [pc, #176]	@ 800fee0 <Encoder::update()+0x3e4>
 800fe32:	eee7 7a06 	vfma.f32	s15, s14, s12
 800fe36:	eef4 7ae6 	vcmpe.f32	s15, s13
 800fe3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe3e:	edc0 7a11 	vstr	s15, [r0, #68]	@ 0x44
 800fe42:	f77f ae8a 	ble.w	800fb5a <Encoder::update()+0x5e>
 800fe46:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800fe4a:	2180      	movs	r1, #128	@ 0x80
 800fe4c:	3014      	adds	r0, #20
 800fe4e:	f7ff f90f 	bl	800f070 <operator|=(ODriveIntf::EncoderIntf::Error&, ODriveIntf::EncoderIntf::Error) [clone .isra.0]>
 800fe52:	6920      	ldr	r0, [r4, #16]
 800fe54:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800fe58:	3050      	adds	r0, #80	@ 0x50
 800fe5a:	f7ff f90d 	bl	800f078 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 800fe5e:	e67c      	b.n	800fb5a <Encoder::update()+0x5e>
 800fe60:	d111      	bne.n	800fe86 <Encoder::update()+0x38a>
 800fe62:	ed9f 6a19 	vldr	s12, [pc, #100]	@ 800fec8 <Encoder::update()+0x3cc>
 800fe66:	edd4 6a08 	vldr	s13, [r4, #32]
 800fe6a:	eee9 6a06 	vfma.f32	s13, s18, s12
 800fe6e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800fe72:	eef4 6ac7 	vcmpe.f32	s13, s14
 800fe76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe7a:	dd33      	ble.n	800fee4 <Encoder::update()+0x3e8>
 800fe7c:	ed84 7a08 	vstr	s14, [r4, #32]
 800fe80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800fe84:	e751      	b.n	800fd2a <Encoder::update()+0x22e>
 800fe86:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800fe8a:	6223      	str	r3, [r4, #32]
 800fe8c:	e7f8      	b.n	800fe80 <Encoder::update()+0x384>
 800fe8e:	2302      	movs	r3, #2
 800fe90:	69e0      	ldr	r0, [r4, #28]
 800fe92:	2106      	movs	r1, #6
 800fe94:	1a18      	subs	r0, r3, r0
 800fe96:	f7fb fd91 	bl	800b9bc <mod>
 800fe9a:	68e2      	ldr	r2, [r4, #12]
 800fe9c:	69a3      	ldr	r3, [r4, #24]
 800fe9e:	6891      	ldr	r1, [r2, #8]
 800fea0:	2803      	cmp	r0, #3
 800fea2:	4606      	mov	r6, r0
 800fea4:	f77f ae6c 	ble.w	800fb80 <Encoder::update()+0x84>
 800fea8:	1f86      	subs	r6, r0, #6
 800feaa:	4433      	add	r3, r6
 800feac:	e669      	b.n	800fb82 <Encoder::update()+0x86>
 800feae:	2303      	movs	r3, #3
 800feb0:	e7ee      	b.n	800fe90 <Encoder::update()+0x394>
 800feb2:	2300      	movs	r3, #0
 800feb4:	e7ec      	b.n	800fe90 <Encoder::update()+0x394>
 800feb6:	2301      	movs	r3, #1
 800feb8:	e7ea      	b.n	800fe90 <Encoder::update()+0x394>
 800feba:	2304      	movs	r3, #4
 800febc:	e7e8      	b.n	800fe90 <Encoder::update()+0x394>
 800febe:	2305      	movs	r3, #5
 800fec0:	e7e6      	b.n	800fe90 <Encoder::update()+0x394>
 800fec2:	bf00      	nop
 800fec4:	3f7ff7cf 	.word	0x3f7ff7cf
 800fec8:	3903126f 	.word	0x3903126f
 800fecc:	3883126f 	.word	0x3883126f
 800fed0:	00000000 	.word	0x00000000
 800fed4:	40490fdb 	.word	0x40490fdb
 800fed8:	40c90fdb 	.word	0x40c90fdb
 800fedc:	447a0000 	.word	0x447a0000
 800fee0:	3ba3d70a 	.word	0x3ba3d70a
 800fee4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800fee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800feec:	edc4 6a08 	vstr	s13, [r4, #32]
 800fef0:	d490      	bmi.n	800fe14 <Encoder::update()+0x318>
 800fef2:	e71a      	b.n	800fd2a <Encoder::update()+0x22e>
 800fef4:	68c2      	ldr	r2, [r0, #12]
 800fef6:	f892 302a 	ldrb.w	r3, [r2, #42]	@ 0x2a
 800fefa:	b11b      	cbz	r3, 800ff04 <Encoder::update()+0x408>
 800fefc:	6983      	ldr	r3, [r0, #24]
 800fefe:	6891      	ldr	r1, [r2, #8]
 800ff00:	2600      	movs	r6, #0
 800ff02:	e63e      	b.n	800fb82 <Encoder::update()+0x86>
 800ff04:	f8a0 3058 	strh.w	r3, [r0, #88]	@ 0x58
 800ff08:	2110      	movs	r1, #16
 800ff0a:	e747      	b.n	800fd9c <Encoder::update()+0x2a0>

0800ff0c <Endstop::update()>:
 800ff0c:	b538      	push	{r3, r4, r5, lr}
 800ff0e:	7f03      	ldrb	r3, [r0, #28]
 800ff10:	4604      	mov	r4, r0
 800ff12:	b183      	cbz	r3, 800ff36 <Endstop::update()+0x2a>
 800ff14:	ed90 7a04 	vldr	s14, [r0, #16]
 800ff18:	edd0 6a06 	vldr	s13, [r0, #24]
 800ff1c:	edd0 7a05 	vldr	s15, [r0, #20]
 800ff20:	ee37 7a26 	vadd.f32	s14, s14, s13
 800ff24:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff2c:	bfd8      	it	le
 800ff2e:	eef0 7a47 	vmovle.f32	s15, s14
 800ff32:	edc0 7a04 	vstr	s15, [r0, #16]
 800ff36:	6822      	ldr	r2, [r4, #0]
 800ff38:	7a93      	ldrb	r3, [r2, #10]
 800ff3a:	b333      	cbz	r3, 800ff8a <Endstop::update()+0x7e>
 800ff3c:	8912      	ldrh	r2, [r2, #8]
 800ff3e:	7a65      	ldrb	r5, [r4, #9]
 800ff40:	1e93      	subs	r3, r2, #2
 800ff42:	b29b      	uxth	r3, r3
 800ff44:	2b06      	cmp	r3, #6
 800ff46:	d922      	bls.n	800ff8e <Endstop::update()+0x82>
 800ff48:	4818      	ldr	r0, [pc, #96]	@ (800ffac <Endstop::update()+0xa0>)
 800ff4a:	2101      	movs	r1, #1
 800ff4c:	f7fa fab8 	bl	800a4c0 <HAL_GPIO_ReadPin>
 800ff50:	1e03      	subs	r3, r0, #0
 800ff52:	bf18      	it	ne
 800ff54:	2301      	movne	r3, #1
 800ff56:	42ab      	cmp	r3, r5
 800ff58:	bf17      	itett	ne
 800ff5a:	ed9f 7a15 	vldrne	s14, [pc, #84]	@ 800ffb0 <Endstop::update()+0xa4>
 800ff5e:	edd4 7a04 	vldreq	s15, [r4, #16]
 800ff62:	ed84 7a04 	vstrne	s14, [r4, #16]
 800ff66:	eef0 7a47 	vmovne.f32	s15, s14
 800ff6a:	ed94 7a05 	vldr	s14, [r4, #20]
 800ff6e:	7263      	strb	r3, [r4, #9]
 800ff70:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff78:	d806      	bhi.n	800ff88 <Endstop::update()+0x7c>
 800ff7a:	6823      	ldr	r3, [r4, #0]
 800ff7c:	7adb      	ldrb	r3, [r3, #11]
 800ff7e:	2800      	cmp	r0, #0
 800ff80:	bf08      	it	eq
 800ff82:	f083 0301 	eoreq.w	r3, r3, #1
 800ff86:	7223      	strb	r3, [r4, #8]
 800ff88:	bd38      	pop	{r3, r4, r5, pc}
 800ff8a:	7223      	strb	r3, [r4, #8]
 800ff8c:	bd38      	pop	{r3, r4, r5, pc}
 800ff8e:	4909      	ldr	r1, [pc, #36]	@ (800ffb4 <Endstop::update()+0xa8>)
 800ff90:	2a06      	cmp	r2, #6
 800ff92:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
 800ff96:	d005      	beq.n	800ffa4 <Endstop::update()+0x98>
 800ff98:	2a08      	cmp	r2, #8
 800ff9a:	d003      	beq.n	800ffa4 <Endstop::update()+0x98>
 800ff9c:	2a05      	cmp	r2, #5
 800ff9e:	d103      	bne.n	800ffa8 <Endstop::update()+0x9c>
 800ffa0:	4805      	ldr	r0, [pc, #20]	@ (800ffb8 <Endstop::update()+0xac>)
 800ffa2:	e7d3      	b.n	800ff4c <Endstop::update()+0x40>
 800ffa4:	4805      	ldr	r0, [pc, #20]	@ (800ffbc <Endstop::update()+0xb0>)
 800ffa6:	e7d1      	b.n	800ff4c <Endstop::update()+0x40>
 800ffa8:	4800      	ldr	r0, [pc, #0]	@ (800ffac <Endstop::update()+0xa0>)
 800ffaa:	e7cf      	b.n	800ff4c <Endstop::update()+0x40>
 800ffac:	40020000 	.word	0x40020000
 800ffb0:	00000000 	.word	0x00000000
 800ffb4:	0802aea0 	.word	0x0802aea0
 800ffb8:	40020800 	.word	0x40020800
 800ffbc:	40020400 	.word	0x40020400

0800ffc0 <Endstop::get_state()>:
 800ffc0:	7a00      	ldrb	r0, [r0, #8]
 800ffc2:	4770      	bx	lr

0800ffc4 <Endstop::set_enabled(bool)>:
 800ffc4:	6803      	ldr	r3, [r0, #0]
 800ffc6:	891b      	ldrh	r3, [r3, #8]
 800ffc8:	2200      	movs	r2, #0
 800ffca:	6102      	str	r2, [r0, #16]
 800ffcc:	b163      	cbz	r3, 800ffe8 <Endstop::set_enabled(bool)+0x24>
 800ffce:	b570      	push	{r4, r5, r6, lr}
 800ffd0:	1e9a      	subs	r2, r3, #2
 800ffd2:	b292      	uxth	r2, r2
 800ffd4:	2a06      	cmp	r2, #6
 800ffd6:	b086      	sub	sp, #24
 800ffd8:	4604      	mov	r4, r0
 800ffda:	d906      	bls.n	800ffea <Endstop::set_enabled(bool)+0x26>
 800ffdc:	4e15      	ldr	r6, [pc, #84]	@ (8010034 <Endstop::set_enabled(bool)+0x70>)
 800ffde:	2501      	movs	r5, #1
 800ffe0:	b979      	cbnz	r1, 8010002 <Endstop::set_enabled(bool)+0x3e>
 800ffe2:	7721      	strb	r1, [r4, #28]
 800ffe4:	b006      	add	sp, #24
 800ffe6:	bd70      	pop	{r4, r5, r6, pc}
 800ffe8:	4770      	bx	lr
 800ffea:	4813      	ldr	r0, [pc, #76]	@ (8010038 <Endstop::set_enabled(bool)+0x74>)
 800ffec:	2b06      	cmp	r3, #6
 800ffee:	f830 5012 	ldrh.w	r5, [r0, r2, lsl #1]
 800fff2:	d01a      	beq.n	801002a <Endstop::set_enabled(bool)+0x66>
 800fff4:	2b08      	cmp	r3, #8
 800fff6:	d018      	beq.n	801002a <Endstop::set_enabled(bool)+0x66>
 800fff8:	2b05      	cmp	r3, #5
 800fffa:	d118      	bne.n	801002e <Endstop::set_enabled(bool)+0x6a>
 800fffc:	4e0f      	ldr	r6, [pc, #60]	@ (801003c <Endstop::set_enabled(bool)+0x78>)
 800fffe:	2900      	cmp	r1, #0
 8010000:	d0ef      	beq.n	800ffe2 <Endstop::set_enabled(bool)+0x1e>
 8010002:	4629      	mov	r1, r5
 8010004:	4630      	mov	r0, r6
 8010006:	f7fa f9a9 	bl	800a35c <HAL_GPIO_DeInit>
 801000a:	6823      	ldr	r3, [r4, #0]
 801000c:	9501      	str	r5, [sp, #4]
 801000e:	7b1b      	ldrb	r3, [r3, #12]
 8010010:	2200      	movs	r2, #0
 8010012:	f1c3 0302 	rsb	r3, r3, #2
 8010016:	4630      	mov	r0, r6
 8010018:	a901      	add	r1, sp, #4
 801001a:	9303      	str	r3, [sp, #12]
 801001c:	9202      	str	r2, [sp, #8]
 801001e:	f7fa f87b 	bl	800a118 <HAL_GPIO_Init>
 8010022:	2301      	movs	r3, #1
 8010024:	7723      	strb	r3, [r4, #28]
 8010026:	b006      	add	sp, #24
 8010028:	bd70      	pop	{r4, r5, r6, pc}
 801002a:	4e05      	ldr	r6, [pc, #20]	@ (8010040 <Endstop::set_enabled(bool)+0x7c>)
 801002c:	e7d8      	b.n	800ffe0 <Endstop::set_enabled(bool)+0x1c>
 801002e:	4e01      	ldr	r6, [pc, #4]	@ (8010034 <Endstop::set_enabled(bool)+0x70>)
 8010030:	e7d6      	b.n	800ffe0 <Endstop::set_enabled(bool)+0x1c>
 8010032:	bf00      	nop
 8010034:	40020000 	.word	0x40020000
 8010038:	0802aea0 	.word	0x0802aea0
 801003c:	40020800 	.word	0x40020800
 8010040:	40020400 	.word	0x40020400

08010044 <Endstop::update_config()>:
 8010044:	6803      	ldr	r3, [r0, #0]
 8010046:	b510      	push	{r4, lr}
 8010048:	4604      	mov	r4, r0
 801004a:	7a99      	ldrb	r1, [r3, #10]
 801004c:	f7ff ffba 	bl	800ffc4 <Endstop::set_enabled(bool)>
 8010050:	6823      	ldr	r3, [r4, #0]
 8010052:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8010068 <Endstop::update_config()+0x24>
 8010056:	edd3 7a01 	vldr	s15, [r3, #4]
 801005a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801005e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010062:	edc4 7a06 	vstr	s15, [r4, #24]
 8010066:	bd10      	pop	{r4, pc}
 8010068:	3a83126f 	.word	0x3a83126f

0801006c <Endstop::Endstop(Endstop::Config_t&)>:
 801006c:	b510      	push	{r4, lr}
 801006e:	2300      	movs	r3, #0
 8010070:	2200      	movs	r2, #0
 8010072:	4604      	mov	r4, r0
 8010074:	6001      	str	r1, [r0, #0]
 8010076:	6042      	str	r2, [r0, #4]
 8010078:	7a89      	ldrb	r1, [r1, #10]
 801007a:	8102      	strh	r2, [r0, #8]
 801007c:	60c3      	str	r3, [r0, #12]
 801007e:	6103      	str	r3, [r0, #16]
 8010080:	6143      	str	r3, [r0, #20]
 8010082:	6183      	str	r3, [r0, #24]
 8010084:	7702      	strb	r2, [r0, #28]
 8010086:	f7ff ff9d 	bl	800ffc4 <Endstop::set_enabled(bool)>
 801008a:	4b02      	ldr	r3, [pc, #8]	@ (8010094 <Endstop::Endstop(Endstop::Config_t&)+0x28>)
 801008c:	61a3      	str	r3, [r4, #24]
 801008e:	4620      	mov	r0, r4
 8010090:	bd10      	pop	{r4, pc}
 8010092:	bf00      	nop
 8010094:	3903126f 	.word	0x3903126f

08010098 <Controller::move_incremental(float, bool)>:
 8010098:	b149      	cbz	r1, 80100ae <Controller::move_incremental(float, bool)+0x16>
 801009a:	edd0 7a10 	vldr	s15, [r0, #64]	@ 0x40
 801009e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80100a2:	2301      	movs	r3, #1
 80100a4:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 80100a8:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
 80100ac:	4770      	bx	lr
 80100ae:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 80100b2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80100b6:	2301      	movs	r3, #1
 80100b8:	ed80 0a10 	vstr	s0, [r0, #64]	@ 0x40
 80100bc:	f880 3054 	strb.w	r3, [r0, #84]	@ 0x54
 80100c0:	4770      	bx	lr
 80100c2:	bf00      	nop

080100c4 <Controller::start_anticogging_calibration()>:
 80100c4:	6903      	ldr	r3, [r0, #16]
 80100c6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80100c8:	b92b      	cbnz	r3, 80100d6 <Controller::start_anticogging_calibration()+0x12>
 80100ca:	68c3      	ldr	r3, [r0, #12]
 80100cc:	f503 5340 	add.w	r3, r3, #12288	@ 0x3000
 80100d0:	2201      	movs	r2, #1
 80100d2:	f883 2879 	strb.w	r2, [r3, #2169]	@ 0x879
 80100d6:	4770      	bx	lr

080100d8 <operator|=(ODriveIntf::ControllerIntf::Error&, ODriveIntf::ControllerIntf::Error) [clone .isra.0]>:
 80100d8:	7803      	ldrb	r3, [r0, #0]
 80100da:	4319      	orrs	r1, r3
 80100dc:	7001      	strb	r1, [r0, #0]
 80100de:	4770      	bx	lr

080100e0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 80100e0:	6803      	ldr	r3, [r0, #0]
 80100e2:	430b      	orrs	r3, r1
 80100e4:	6003      	str	r3, [r0, #0]
 80100e6:	4770      	bx	lr

080100e8 <Controller::Controller(Controller::Config_t&)>:
 80100e8:	ed91 7a0b 	vldr	s14, [r1, #44]	@ 0x2c
 80100ec:	eddf 7a1d 	vldr	s15, [pc, #116]	@ 8010164 <Controller::Controller(Controller::Config_t&)+0x7c>
 80100f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80100f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80100f8:	bfd8      	it	le
 80100fa:	eef0 7a47 	vmovle.f32	s15, s14
 80100fe:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8010102:	eef5 6a00 	vmov.f32	s13, #80	@ 0x3e800000  0.250
 8010106:	ee27 7aa7 	vmul.f32	s14, s15, s15
 801010a:	b410      	push	{r4}
 801010c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8010110:	f04f 0c00 	mov.w	ip, #0
 8010114:	2200      	movs	r2, #0
 8010116:	4c14      	ldr	r4, [pc, #80]	@ (8010168 <Controller::Controller(Controller::Config_t&)+0x80>)
 8010118:	60c1      	str	r1, [r0, #12]
 801011a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801011e:	6004      	str	r4, [r0, #0]
 8010120:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010124:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8010128:	e9c0 220a 	strd	r2, r2, [r0, #40]	@ 0x28
 801012c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010130:	6102      	str	r2, [r0, #16]
 8010132:	7502      	strb	r2, [r0, #20]
 8010134:	f8c0 c030 	str.w	ip, [r0, #48]	@ 0x30
 8010138:	f8c0 c034 	str.w	ip, [r0, #52]	@ 0x34
 801013c:	f8c0 c038 	str.w	ip, [r0, #56]	@ 0x38
 8010140:	f8c0 c03c 	str.w	ip, [r0, #60]	@ 0x3c
 8010144:	f8c0 c040 	str.w	ip, [r0, #64]	@ 0x40
 8010148:	f8c0 c044 	str.w	ip, [r0, #68]	@ 0x44
 801014c:	f8c0 c048 	str.w	ip, [r0, #72]	@ 0x48
 8010150:	f8a0 1054 	strh.w	r1, [r0, #84]	@ 0x54
 8010154:	f880 2056 	strb.w	r2, [r0, #86]	@ 0x56
 8010158:	edc0 7a14 	vstr	s15, [r0, #80]	@ 0x50
 801015c:	ed80 7a13 	vstr	s14, [r0, #76]	@ 0x4c
 8010160:	4770      	bx	lr
 8010162:	bf00      	nop
 8010164:	44fa0000 	.word	0x44fa0000
 8010168:	0802aefc 	.word	0x0802aefc

0801016c <Controller::reset()>:
 801016c:	2300      	movs	r3, #0
 801016e:	6303      	str	r3, [r0, #48]	@ 0x30
 8010170:	6343      	str	r3, [r0, #52]	@ 0x34
 8010172:	6383      	str	r3, [r0, #56]	@ 0x38
 8010174:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8010176:	4770      	bx	lr

08010178 <Controller::select_encoder(unsigned int)>:
 8010178:	2901      	cmp	r1, #1
 801017a:	b510      	push	{r4, lr}
 801017c:	4602      	mov	r2, r0
 801017e:	d90b      	bls.n	8010198 <Controller::select_encoder(unsigned int)+0x20>
 8010180:	2110      	movs	r1, #16
 8010182:	3014      	adds	r0, #20
 8010184:	f7ff ffa8 	bl	80100d8 <operator|=(ODriveIntf::ControllerIntf::Error&, ODriveIntf::ControllerIntf::Error) [clone .isra.0]>
 8010188:	6910      	ldr	r0, [r2, #16]
 801018a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 801018e:	3050      	adds	r0, #80	@ 0x50
 8010190:	f7ff ffa6 	bl	80100e0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 8010194:	2000      	movs	r0, #0
 8010196:	bd10      	pop	{r4, pc}
 8010198:	480b      	ldr	r0, [pc, #44]	@ (80101c8 <Controller::select_encoder(unsigned int)+0x50>)
 801019a:	68d3      	ldr	r3, [r2, #12]
 801019c:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80101a0:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 80101a4:	6903      	ldr	r3, [r0, #16]
 80101a6:	62d1      	str	r1, [r2, #44]	@ 0x2c
 80101a8:	f103 0454 	add.w	r4, r3, #84	@ 0x54
 80101ac:	f103 0158 	add.w	r1, r3, #88	@ 0x58
 80101b0:	61d4      	str	r4, [r2, #28]
 80101b2:	6211      	str	r1, [r2, #32]
 80101b4:	f103 0448 	add.w	r4, r3, #72	@ 0x48
 80101b8:	f103 014c 	add.w	r1, r3, #76	@ 0x4c
 80101bc:	3359      	adds	r3, #89	@ 0x59
 80101be:	e9c2 1309 	strd	r1, r3, [r2, #36]	@ 0x24
 80101c2:	2001      	movs	r0, #1
 80101c4:	6194      	str	r4, [r2, #24]
 80101c6:	bd10      	pop	{r4, pc}
 80101c8:	200019cc 	.word	0x200019cc

080101cc <Controller::move_to_pos(float)>:
 80101cc:	6903      	ldr	r3, [r0, #16]
 80101ce:	ed90 1a0d 	vldr	s2, [r0, #52]	@ 0x34
 80101d2:	edd0 0a0c 	vldr	s1, [r0, #48]	@ 0x30
 80101d6:	b510      	push	{r4, lr}
 80101d8:	4604      	mov	r4, r0
 80101da:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 80101dc:	6843      	ldr	r3, [r0, #4]
 80101de:	edd3 2a02 	vldr	s5, [r3, #8]
 80101e2:	ed93 2a01 	vldr	s4, [r3, #4]
 80101e6:	edd3 1a00 	vldr	s3, [r3]
 80101ea:	f000 fc93 	bl	8010b14 <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)>
 80101ee:	6922      	ldr	r2, [r4, #16]
 80101f0:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 80101f2:	2100      	movs	r1, #0
 80101f4:	2300      	movs	r3, #0
 80101f6:	6351      	str	r1, [r2, #52]	@ 0x34
 80101f8:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 80101fc:	bd10      	pop	{r4, pc}
 80101fe:	bf00      	nop

08010200 <Controller::anticogging_calibration(float, float)>:
 8010200:	e9d0 1203 	ldrd	r1, r2, [r0, #12]
 8010204:	6912      	ldr	r2, [r2, #16]
 8010206:	4603      	mov	r3, r0
 8010208:	68d0      	ldr	r0, [r2, #12]
 801020a:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 801020e:	ed90 7a02 	vldr	s14, [r0, #8]
 8010212:	f501 5c40 	add.w	ip, r1, #12288	@ 0x3000
 8010216:	f60c 027c 	addw	r2, ip, #2172	@ 0x87c
 801021a:	ed92 6a00 	vldr	s12, [r2]
 801021e:	6b4a      	ldr	r2, [r1, #52]	@ 0x34
 8010220:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010224:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8010228:	eec6 6a07 	vdiv.f32	s13, s12, s14
 801022c:	b410      	push	{r4}
 801022e:	eeb0 0ac0 	vabs.f32	s0, s0
 8010232:	eef4 6ac0 	vcmpe.f32	s13, s0
 8010236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801023a:	db0c      	blt.n	8010256 <Controller::anticogging_calibration(float, float)+0x56>
 801023c:	f501 5062 	add.w	r0, r1, #14464	@ 0x3880
 8010240:	edd0 6a00 	vldr	s13, [r0]
 8010244:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8010248:	eef0 0ae0 	vabs.f32	s1, s1
 801024c:	eef4 7ae0 	vcmpe.f32	s15, s1
 8010250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010254:	dc2a      	bgt.n	80102ac <Controller::anticogging_calibration(float, float)+0xac>
 8010256:	f5b2 6f61 	cmp.w	r2, #3600	@ 0xe10
 801025a:	d215      	bcs.n	8010288 <Controller::anticogging_calibration(float, float)+0x88>
 801025c:	ee07 2a90 	vmov	s15, r2
 8010260:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 80102c8 <Controller::anticogging_calibration(float, float)+0xc8>
 8010264:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010268:	2200      	movs	r2, #0
 801026a:	ee67 7a87 	vmul.f32	s15, s15, s14
 801026e:	2003      	movs	r0, #3
 8010270:	2401      	movs	r4, #1
 8010272:	7008      	strb	r0, [r1, #0]
 8010274:	2000      	movs	r0, #0
 8010276:	f883 4054 	strb.w	r4, [r3, #84]	@ 0x54
 801027a:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
 801027e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010282:	645a      	str	r2, [r3, #68]	@ 0x44
 8010284:	649a      	str	r2, [r3, #72]	@ 0x48
 8010286:	4770      	bx	lr
 8010288:	2203      	movs	r2, #3
 801028a:	700a      	strb	r2, [r1, #0]
 801028c:	2400      	movs	r4, #0
 801028e:	2200      	movs	r2, #0
 8010290:	2001      	movs	r0, #1
 8010292:	634c      	str	r4, [r1, #52]	@ 0x34
 8010294:	641a      	str	r2, [r3, #64]	@ 0x40
 8010296:	645a      	str	r2, [r3, #68]	@ 0x44
 8010298:	649a      	str	r2, [r3, #72]	@ 0x48
 801029a:	f883 0054 	strb.w	r0, [r3, #84]	@ 0x54
 801029e:	f883 0056 	strb.w	r0, [r3, #86]	@ 0x56
 80102a2:	f88c 4879 	strb.w	r4, [ip, #2169]	@ 0x879
 80102a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80102aa:	4770      	bx	lr
 80102ac:	f5b2 6f61 	cmp.w	r2, #3600	@ 0xe10
 80102b0:	4610      	mov	r0, r2
 80102b2:	bf28      	it	cs
 80102b4:	f44f 6061 	movcs.w	r0, #3600	@ 0xe10
 80102b8:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 80102bc:	6b9c      	ldr	r4, [r3, #56]	@ 0x38
 80102be:	3201      	adds	r2, #1
 80102c0:	634a      	str	r2, [r1, #52]	@ 0x34
 80102c2:	6384      	str	r4, [r0, #56]	@ 0x38
 80102c4:	e7c7      	b.n	8010256 <Controller::anticogging_calibration(float, float)+0x56>
 80102c6:	bf00      	nop
 80102c8:	3991a2b4 	.word	0x3991a2b4

080102cc <Controller::update_filter_gains()>:
 80102cc:	68c3      	ldr	r3, [r0, #12]
 80102ce:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8010300 <Controller::update_filter_gains()+0x34>
 80102d2:	ed93 7a0b 	vldr	s14, [r3, #44]	@ 0x2c
 80102d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80102da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80102de:	bfd8      	it	le
 80102e0:	eef0 7a47 	vmovle.f32	s15, s14
 80102e4:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80102e8:	eef5 6a00 	vmov.f32	s13, #80	@ 0x3e800000  0.250
 80102ec:	ee27 7aa7 	vmul.f32	s14, s15, s15
 80102f0:	edc0 7a14 	vstr	s15, [r0, #80]	@ 0x50
 80102f4:	ee67 7a26 	vmul.f32	s15, s14, s13
 80102f8:	edc0 7a13 	vstr	s15, [r0, #76]	@ 0x4c
 80102fc:	4770      	bx	lr
 80102fe:	bf00      	nop
 8010300:	44fa0000 	.word	0x44fa0000

08010304 <Controller::update(float*)>:
 8010304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010308:	ed2d 8b06 	vpush	{d8-d10}
 801030c:	f8d0 8020 	ldr.w	r8, [r0, #32]
 8010310:	b085      	sub	sp, #20
 8010312:	4604      	mov	r4, r0
 8010314:	4689      	mov	r9, r1
 8010316:	f1b8 0f00 	cmp.w	r8, #0
 801031a:	d059      	beq.n	80103d0 <Controller::update(float*)+0xcc>
 801031c:	f898 3000 	ldrb.w	r3, [r8]
 8010320:	bb63      	cbnz	r3, 801037c <Controller::update(float*)+0x78>
 8010322:	469a      	mov	sl, r3
 8010324:	4698      	mov	r8, r3
 8010326:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8010328:	b116      	cbz	r6, 8010330 <Controller::update(float*)+0x2c>
 801032a:	7836      	ldrb	r6, [r6, #0]
 801032c:	b106      	cbz	r6, 8010330 <Controller::update(float*)+0x2c>
 801032e:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 8010330:	eddf 7aca 	vldr	s15, [pc, #808]	@ 801065c <Controller::update(float*)+0x358>
 8010334:	e9d4 5b03 	ldrd	r5, fp, [r4, #12]
 8010338:	f8db 3010 	ldr.w	r3, [fp, #16]
 801033c:	f505 5740 	add.w	r7, r5, #12288	@ 0x3000
 8010340:	ed93 0a12 	vldr	s0, [r3, #72]	@ 0x48
 8010344:	f897 2879 	ldrb.w	r2, [r7, #2169]	@ 0x879
 8010348:	ee20 9a27 	vmul.f32	s18, s0, s15
 801034c:	b1f2      	cbz	r2, 801038c <Controller::update(float*)+0x88>
 801034e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010352:	b112      	cbz	r2, 801035a <Controller::update(float*)+0x56>
 8010354:	f893 2059 	ldrb.w	r2, [r3, #89]	@ 0x59
 8010358:	b99a      	cbnz	r2, 8010382 <Controller::update(float*)+0x7e>
 801035a:	2120      	movs	r1, #32
 801035c:	f104 0014 	add.w	r0, r4, #20
 8010360:	f7ff feba 	bl	80100d8 <operator|=(ODriveIntf::ControllerIntf::Error&, ODriveIntf::ControllerIntf::Error) [clone .isra.0]>
 8010364:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8010368:	f10b 0050 	add.w	r0, fp, #80	@ 0x50
 801036c:	f7ff feb8 	bl	80100e0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 8010370:	2000      	movs	r0, #0
 8010372:	b005      	add	sp, #20
 8010374:	ecbd 8b06 	vpop	{d8-d10}
 8010378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801037c:	e9d0 a806 	ldrd	sl, r8, [r0, #24]
 8010380:	e7d1      	b.n	8010326 <Controller::update(float*)+0x22>
 8010382:	edd3 0a13 	vldr	s1, [r3, #76]	@ 0x4c
 8010386:	4620      	mov	r0, r4
 8010388:	f7ff ff3a 	bl	8010200 <Controller::anticogging_calibration(float, float)>
 801038c:	f895 3020 	ldrb.w	r3, [r5, #32]
 8010390:	b183      	cbz	r3, 80103b4 <Controller::update(float*)+0xb0>
 8010392:	ed95 8a09 	vldr	s16, [r5, #36]	@ 0x24
 8010396:	ed94 0a10 	vldr	s0, [r4, #64]	@ 0x40
 801039a:	eef0 0a48 	vmov.f32	s1, s16
 801039e:	f012 fd27 	bl	8022df0 <fmodf>
 80103a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80103a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80103aa:	bf48      	it	mi
 80103ac:	ee30 0a08 	vaddmi.f32	s0, s0, s16
 80103b0:	ed84 0a10 	vstr	s0, [r4, #64]	@ 0x40
 80103b4:	786b      	ldrb	r3, [r5, #1]
 80103b6:	2b07      	cmp	r3, #7
 80103b8:	f200 81c2 	bhi.w	8010740 <Controller::update(float*)+0x43c>
 80103bc:	e8df f013 	tbh	[pc, r3, lsl #1]
 80103c0:	01b001bb 	.word	0x01b001bb
 80103c4:	015a0181 	.word	0x015a0181
 80103c8:	00d401c0 	.word	0x00d401c0
 80103cc:	000a00ad 	.word	0x000a00ad
 80103d0:	46c2      	mov	sl, r8
 80103d2:	e7a8      	b.n	8010326 <Controller::update(float*)+0x22>
 80103d4:	f897 3894 	ldrb.w	r3, [r7, #2196]	@ 0x894
 80103d8:	2b01      	cmp	r3, #1
 80103da:	f200 8255 	bhi.w	8010888 <Controller::update(float*)+0x584>
 80103de:	4aa0      	ldr	r2, [pc, #640]	@ (8010660 <Controller::update(float*)+0x35c>)
 80103e0:	f895 b000 	ldrb.w	fp, [r5]
 80103e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80103e8:	691b      	ldr	r3, [r3, #16]
 80103ea:	f607 0798 	addw	r7, r7, #2200	@ 0x898
 80103ee:	ed97 8a00 	vldr	s16, [r7]
 80103f2:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 80103f6:	ed93 7a13 	vldr	s14, [r3, #76]	@ 0x4c
 80103fa:	ee67 7a88 	vmul.f32	s15, s15, s16
 80103fe:	ee28 8a07 	vmul.f32	s16, s16, s14
 8010402:	edc4 7a0c 	vstr	s15, [r4, #48]	@ 0x30
 8010406:	ed84 8a0d 	vstr	s16, [r4, #52]	@ 0x34
 801040a:	f1bb 0f02 	cmp.w	fp, #2
 801040e:	f200 80d5 	bhi.w	80105bc <Controller::update(float*)+0x2b8>
 8010412:	eef7 9a00 	vmov.f32	s19, #112	@ 0x3f800000  1.0
 8010416:	f505 5740 	add.w	r7, r5, #12288	@ 0x3000
 801041a:	f897 3891 	ldrb.w	r3, [r7, #2193]	@ 0x891
 801041e:	edd5 7a04 	vldr	s15, [r5, #16]
 8010422:	b18b      	cbz	r3, 8010448 <Controller::update(float*)+0x144>
 8010424:	eeb1 7a67 	vneg.f32	s14, s15
 8010428:	eeb4 7ac8 	vcmpe.f32	s14, s16
 801042c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010430:	bfd8      	it	le
 8010432:	eeb0 7a48 	vmovle.f32	s14, s16
 8010436:	eef4 7ac7 	vcmpe.f32	s15, s14
 801043a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801043e:	bf54      	ite	pl
 8010440:	eeb0 8a47 	vmovpl.f32	s16, s14
 8010444:	eeb0 8a67 	vmovmi.f32	s16, s15
 8010448:	f897 3892 	ldrb.w	r3, [r7, #2194]	@ 0x892
 801044c:	b183      	cbz	r3, 8010470 <Controller::update(float*)+0x16c>
 801044e:	2e00      	cmp	r6, #0
 8010450:	f000 81ba 	beq.w	80107c8 <Controller::update(float*)+0x4c4>
 8010454:	edd5 6a05 	vldr	s13, [r5, #20]
 8010458:	ed96 7a00 	vldr	s14, [r6]
 801045c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010460:	eeb0 7ac7 	vabs.f32	s14, s14
 8010464:	eef4 7ac7 	vcmpe.f32	s15, s14
 8010468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801046c:	f100 81f8 	bmi.w	8010860 <Controller::update(float*)+0x55c>
 8010470:	6923      	ldr	r3, [r4, #16]
 8010472:	ed95 aa02 	vldr	s20, [r5, #8]
 8010476:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8010478:	edd5 aa03 	vldr	s21, [r5, #12]
 801047c:	6a13      	ldr	r3, [r2, #32]
 801047e:	f893 1020 	ldrb.w	r1, [r3, #32]
 8010482:	2903      	cmp	r1, #3
 8010484:	f000 81ac 	beq.w	80107e0 <Controller::update(float*)+0x4dc>
 8010488:	f894 3056 	ldrb.w	r3, [r4, #86]	@ 0x56
 801048c:	edd4 8a0f 	vldr	s17, [r4, #60]	@ 0x3c
 8010490:	b123      	cbz	r3, 801049c <Controller::update(float*)+0x198>
 8010492:	f897 3888 	ldrb.w	r3, [r7, #2184]	@ 0x888
 8010496:	2b00      	cmp	r3, #0
 8010498:	f040 81c9 	bne.w	801082e <Controller::update(float*)+0x52a>
 801049c:	f1bb 0f01 	cmp.w	fp, #1
 80104a0:	f240 816e 	bls.w	8010780 <Controller::update(float*)+0x47c>
 80104a4:	2e00      	cmp	r6, #0
 80104a6:	f000 818f 	beq.w	80107c8 <Controller::update(float*)+0x4c4>
 80104aa:	ed96 7a00 	vldr	s14, [r6]
 80104ae:	edd4 7a0e 	vldr	s15, [r4, #56]	@ 0x38
 80104b2:	ee38 8a47 	vsub.f32	s16, s16, s14
 80104b6:	ee29 7a88 	vmul.f32	s14, s19, s16
 80104ba:	eeea 7a07 	vfma.f32	s15, s20, s14
 80104be:	ee78 8aa7 	vadd.f32	s17, s17, s15
 80104c2:	6923      	ldr	r3, [r4, #16]
 80104c4:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 80104c6:	f7fd ffdb 	bl	800e480 <Motor::max_available_torque()>
 80104ca:	68e3      	ldr	r3, [r4, #12]
 80104cc:	eef4 8ac0 	vcmpe.f32	s17, s0
 80104d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80104d4:	781b      	ldrb	r3, [r3, #0]
 80104d6:	eef1 7a40 	vneg.f32	s15, s0
 80104da:	f340 8139 	ble.w	8010750 <Controller::update(float*)+0x44c>
 80104de:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80104e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80104e6:	f100 812d 	bmi.w	8010744 <Controller::update(float*)+0x440>
 80104ea:	2b01      	cmp	r3, #1
 80104ec:	eef0 7a40 	vmov.f32	s15, s0
 80104f0:	f240 812b 	bls.w	801074a <Controller::update(float*)+0x446>
 80104f4:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 80104f8:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 8010664 <Controller::update(float*)+0x360>
 80104fc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8010500:	ed84 7a0e 	vstr	s14, [r4, #56]	@ 0x38
 8010504:	f1b9 0f00 	cmp.w	r9, #0
 8010508:	d001      	beq.n	801050e <Controller::update(float*)+0x20a>
 801050a:	edc9 7a00 	vstr	s15, [r9]
 801050e:	2001      	movs	r0, #1
 8010510:	b005      	add	sp, #20
 8010512:	ecbd 8b06 	vpop	{d8-d10}
 8010516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801051a:	edd5 7a07 	vldr	s15, [r5, #28]
 801051e:	ed9f 7a54 	vldr	s14, [pc, #336]	@ 8010670 <Controller::update(float*)+0x36c>
 8010522:	ed94 6a0f 	vldr	s12, [r4, #60]	@ 0x3c
 8010526:	edd4 6a12 	vldr	s13, [r4, #72]	@ 0x48
 801052a:	ed94 8a0d 	vldr	s16, [r4, #52]	@ 0x34
 801052e:	f895 b000 	ldrb.w	fp, [r5]
 8010532:	ee67 7a87 	vmul.f32	s15, s15, s14
 8010536:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801053a:	eef0 7ae7 	vabs.f32	s15, s15
 801053e:	eeb1 7a67 	vneg.f32	s14, s15
 8010542:	eef4 6ac7 	vcmpe.f32	s13, s14
 8010546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801054a:	bf58      	it	pl
 801054c:	eeb0 7a66 	vmovpl.f32	s14, s13
 8010550:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010558:	bfd8      	it	le
 801055a:	eef0 7a47 	vmovle.f32	s15, s14
 801055e:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010562:	edc4 7a0f 	vstr	s15, [r4, #60]	@ 0x3c
 8010566:	e750      	b.n	801040a <Controller::update(float*)+0x106>
 8010568:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801056c:	2b00      	cmp	r3, #0
 801056e:	f040 8182 	bne.w	8010876 <Controller::update(float*)+0x572>
 8010572:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 8010576:	2b00      	cmp	r3, #0
 8010578:	f040 8174 	bne.w	8010864 <Controller::update(float*)+0x560>
 801057c:	6923      	ldr	r3, [r4, #16]
 801057e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
 8010580:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 8010584:	edd0 7a0b 	vldr	s15, [r0, #44]	@ 0x2c
 8010588:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801058c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010590:	f340 817c 	ble.w	801088c <Controller::update(float*)+0x588>
 8010594:	eddf 7a35 	vldr	s15, [pc, #212]	@ 801066c <Controller::update(float*)+0x368>
 8010598:	ed94 9a10 	vldr	s18, [r4, #64]	@ 0x40
 801059c:	68e5      	ldr	r5, [r4, #12]
 801059e:	f04f 0b03 	mov.w	fp, #3
 80105a2:	2301      	movs	r3, #1
 80105a4:	f885 b000 	strb.w	fp, [r5]
 80105a8:	eeb0 8a67 	vmov.f32	s16, s15
 80105ac:	ed84 9a0c 	vstr	s18, [r4, #48]	@ 0x30
 80105b0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80105b4:	edc4 7a0f 	vstr	s15, [r4, #60]	@ 0x3c
 80105b8:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 80105bc:	f895 3020 	ldrb.w	r3, [r5, #32]
 80105c0:	2b00      	cmp	r3, #0
 80105c2:	f000 8127 	beq.w	8010814 <Controller::update(float*)+0x510>
 80105c6:	f1b8 0f00 	cmp.w	r8, #0
 80105ca:	f000 80fd 	beq.w	80107c8 <Controller::update(float*)+0x4c4>
 80105ce:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80105d0:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 80105d4:	edd7 8a00 	vldr	s17, [r7]
 80105d8:	eef0 0a68 	vmov.f32	s1, s17
 80105dc:	f012 fc08 	bl	8022df0 <fmodf>
 80105e0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80105e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80105e8:	bf48      	it	mi
 80105ea:	ee30 0a28 	vaddmi.f32	s0, s0, s17
 80105ee:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80105f2:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 80105f6:	edd7 8a00 	vldr	s17, [r7]
 80105fa:	edd8 7a00 	vldr	s15, [r8]
 80105fe:	ee68 8a87 	vmul.f32	s17, s17, s14
 8010602:	ee78 9aa8 	vadd.f32	s19, s17, s17
 8010606:	ee78 7ae7 	vsub.f32	s15, s17, s15
 801060a:	eef0 0a69 	vmov.f32	s1, s19
 801060e:	ee37 0a80 	vadd.f32	s0, s15, s0
 8010612:	f012 fbed 	bl	8022df0 <fmodf>
 8010616:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801061a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801061e:	bf48      	it	mi
 8010620:	ee30 0a29 	vaddmi.f32	s0, s0, s19
 8010624:	ee30 0a68 	vsub.f32	s0, s0, s17
 8010628:	f505 5740 	add.w	r7, r5, #12288	@ 0x3000
 801062c:	edd5 7a01 	vldr	s15, [r5, #4]
 8010630:	f897 3890 	ldrb.w	r3, [r7, #2192]	@ 0x890
 8010634:	eea7 8a80 	vfma.f32	s16, s15, s0
 8010638:	2b00      	cmp	r3, #0
 801063a:	f000 809e 	beq.w	801077a <Controller::update(float*)+0x476>
 801063e:	f607 038c 	addw	r3, r7, #2188	@ 0x88c
 8010642:	edd3 7a00 	vldr	s15, [r3]
 8010646:	eeb0 0ac0 	vabs.f32	s0, s0
 801064a:	eef4 7ac0 	vcmpe.f32	s15, s0
 801064e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010652:	f2c0 8092 	blt.w	801077a <Controller::update(float*)+0x476>
 8010656:	eec0 9a27 	vdiv.f32	s19, s0, s15
 801065a:	e6de      	b.n	801041a <Controller::update(float*)+0x116>
 801065c:	45610000 	.word	0x45610000
 8010660:	200019cc 	.word	0x200019cc
 8010664:	3f7d70a4 	.word	0x3f7d70a4
 8010668:	45f9ffff 	.word	0x45f9ffff
 801066c:	00000000 	.word	0x00000000
 8010670:	3903126f 	.word	0x3903126f
 8010674:	ed94 8a0d 	vldr	s16, [r4, #52]	@ 0x34
 8010678:	edd4 7a11 	vldr	s15, [r4, #68]	@ 0x44
 801067c:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8010680:	ed94 6a14 	vldr	s12, [r4, #80]	@ 0x50
 8010684:	edd4 6a10 	vldr	s13, [r4, #64]	@ 0x40
 8010688:	edd4 5a13 	vldr	s11, [r4, #76]	@ 0x4c
 801068c:	f895 b000 	ldrb.w	fp, [r5]
 8010690:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8010694:	ee76 6ac7 	vsub.f32	s13, s13, s14
 8010698:	ee67 7a86 	vmul.f32	s15, s15, s12
 801069c:	ed1f 6a0c 	vldr	s12, [pc, #-48]	@ 8010670 <Controller::update(float*)+0x36c>
 80106a0:	eee5 7aa6 	vfma.f32	s15, s11, s13
 80106a4:	edd5 6a0a 	vldr	s13, [r5, #40]	@ 0x28
 80106a8:	eea7 8a86 	vfma.f32	s16, s15, s12
 80106ac:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80106b0:	eea8 7a06 	vfma.f32	s14, s16, s12
 80106b4:	edc4 7a0f 	vstr	s15, [r4, #60]	@ 0x3c
 80106b8:	ed84 8a0d 	vstr	s16, [r4, #52]	@ 0x34
 80106bc:	ed84 7a0c 	vstr	s14, [r4, #48]	@ 0x30
 80106c0:	e6a3      	b.n	801040a <Controller::update(float*)+0x106>
 80106c2:	edd5 7a06 	vldr	s15, [r5, #24]
 80106c6:	ed1f 7a16 	vldr	s14, [pc, #-88]	@ 8010670 <Controller::update(float*)+0x36c>
 80106ca:	ed94 8a0d 	vldr	s16, [r4, #52]	@ 0x34
 80106ce:	ed1f 6a1a 	vldr	s12, [pc, #-104]	@ 8010668 <Controller::update(float*)+0x364>
 80106d2:	f895 b000 	ldrb.w	fp, [r5]
 80106d6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80106da:	ed94 7a11 	vldr	s14, [r4, #68]	@ 0x44
 80106de:	eef0 7ae7 	vabs.f32	s15, s15
 80106e2:	ee37 7a48 	vsub.f32	s14, s14, s16
 80106e6:	eef1 6a67 	vneg.f32	s13, s15
 80106ea:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80106ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106f2:	bf58      	it	pl
 80106f4:	eef0 6a47 	vmovpl.f32	s13, s14
 80106f8:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80106fc:	eef4 7ae6 	vcmpe.f32	s15, s13
 8010700:	ee27 7a06 	vmul.f32	s14, s14, s12
 8010704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010708:	bf58      	it	pl
 801070a:	eef0 7a66 	vmovpl.f32	s15, s13
 801070e:	ee38 8a27 	vadd.f32	s16, s16, s15
 8010712:	ee67 7a27 	vmul.f32	s15, s14, s15
 8010716:	ed84 8a0d 	vstr	s16, [r4, #52]	@ 0x34
 801071a:	edc4 7a0f 	vstr	s15, [r4, #60]	@ 0x3c
 801071e:	e674      	b.n	801040a <Controller::update(float*)+0x106>
 8010720:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010722:	ed94 8a11 	vldr	s16, [r4, #68]	@ 0x44
 8010726:	6323      	str	r3, [r4, #48]	@ 0x30
 8010728:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
 801072a:	f895 b000 	ldrb.w	fp, [r5]
 801072e:	ed84 8a0d 	vstr	s16, [r4, #52]	@ 0x34
 8010732:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8010734:	e669      	b.n	801040a <Controller::update(float*)+0x106>
 8010736:	ed94 8a0d 	vldr	s16, [r4, #52]	@ 0x34
 801073a:	f895 b000 	ldrb.w	fp, [r5]
 801073e:	e664      	b.n	801040a <Controller::update(float*)+0x106>
 8010740:	2102      	movs	r1, #2
 8010742:	e60b      	b.n	801035c <Controller::update(float*)+0x58>
 8010744:	2b01      	cmp	r3, #1
 8010746:	f63f aed5 	bhi.w	80104f4 <Controller::update(float*)+0x1f0>
 801074a:	ed1f 7a38 	vldr	s14, [pc, #-224]	@ 801066c <Controller::update(float*)+0x368>
 801074e:	e6d7      	b.n	8010500 <Controller::update(float*)+0x1fc>
 8010750:	eef4 8ae7 	vcmpe.f32	s17, s15
 8010754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010758:	d4f4      	bmi.n	8010744 <Controller::update(float*)+0x440>
 801075a:	2b01      	cmp	r3, #1
 801075c:	f240 8088 	bls.w	8010870 <Controller::update(float*)+0x56c>
 8010760:	ed5f 7a3d 	vldr	s15, [pc, #-244]	@ 8010670 <Controller::update(float*)+0x36c>
 8010764:	ed94 7a0e 	vldr	s14, [r4, #56]	@ 0x38
 8010768:	ee69 9aa7 	vmul.f32	s19, s19, s15
 801076c:	eef0 7a68 	vmov.f32	s15, s17
 8010770:	ee69 9aaa 	vmul.f32	s19, s19, s21
 8010774:	eea9 7a88 	vfma.f32	s14, s19, s16
 8010778:	e6c2      	b.n	8010500 <Controller::update(float*)+0x1fc>
 801077a:	eef7 9a00 	vmov.f32	s19, #112	@ 0x3f800000  1.0
 801077e:	e64c      	b.n	801041a <Controller::update(float*)+0x116>
 8010780:	f505 5340 	add.w	r3, r5, #12288	@ 0x3000
 8010784:	f893 3893 	ldrb.w	r3, [r3, #2195]	@ 0x893
 8010788:	2b00      	cmp	r3, #0
 801078a:	d04d      	beq.n	8010828 <Controller::update(float*)+0x524>
 801078c:	b1e6      	cbz	r6, 80107c8 <Controller::update(float*)+0x4c4>
 801078e:	edd5 7a04 	vldr	s15, [r5, #16]
 8010792:	edd6 6a00 	vldr	s13, [r6]
 8010796:	ed1f 8a4b 	vldr	s16, [pc, #-300]	@ 801066c <Controller::update(float*)+0x368>
 801079a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801079e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80107a2:	ee2a 7a47 	vnmul.f32	s14, s20, s14
 80107a6:	ee67 7a8a 	vmul.f32	s15, s15, s20
 80107aa:	eef4 8ac7 	vcmpe.f32	s17, s14
 80107ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107b2:	bf48      	it	mi
 80107b4:	eef0 8a47 	vmovmi.f32	s17, s14
 80107b8:	eef4 7ae8 	vcmpe.f32	s15, s17
 80107bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107c0:	bf48      	it	mi
 80107c2:	eef0 8a67 	vmovmi.f32	s17, s15
 80107c6:	e67c      	b.n	80104c2 <Controller::update(float*)+0x1be>
 80107c8:	2120      	movs	r1, #32
 80107ca:	f104 0014 	add.w	r0, r4, #20
 80107ce:	f7ff fc83 	bl	80100d8 <operator|=(ODriveIntf::ControllerIntf::Error&, ODriveIntf::ControllerIntf::Error) [clone .isra.0]>
 80107d2:	6920      	ldr	r0, [r4, #16]
 80107d4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80107d8:	3050      	adds	r0, #80	@ 0x50
 80107da:	f7ff fc81 	bl	80100e0 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 80107de:	e5c7      	b.n	8010370 <Controller::update(float*)+0x6c>
 80107e0:	edd2 7a2d 	vldr	s15, [r2, #180]	@ 0xb4
 80107e4:	ed93 7a11 	vldr	s14, [r3, #68]	@ 0x44
 80107e8:	eef0 6ae7 	vabs.f32	s13, s15
 80107ec:	eef4 6ac7 	vcmpe.f32	s13, s14
 80107f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107f4:	d509      	bpl.n	801080a <Controller::update(float*)+0x506>
 80107f6:	ee17 3a90 	vmov	r3, s15
 80107fa:	eeb0 7ac7 	vabs.f32	s14, s14
 80107fe:	2b00      	cmp	r3, #0
 8010800:	bfb8      	it	lt
 8010802:	eeb1 7a47 	vneglt.f32	s14, s14
 8010806:	eef0 7a47 	vmov.f32	s15, s14
 801080a:	ee8a aa27 	vdiv.f32	s20, s20, s15
 801080e:	eeca aaa7 	vdiv.f32	s21, s21, s15
 8010812:	e639      	b.n	8010488 <Controller::update(float*)+0x184>
 8010814:	f1ba 0f00 	cmp.w	sl, #0
 8010818:	d0d6      	beq.n	80107c8 <Controller::update(float*)+0x4c4>
 801081a:	edda 7a00 	vldr	s15, [sl]
 801081e:	ed94 0a0c 	vldr	s0, [r4, #48]	@ 0x30
 8010822:	ee30 0a67 	vsub.f32	s0, s0, s15
 8010826:	e6ff      	b.n	8010628 <Controller::update(float*)+0x324>
 8010828:	ed1f 8a70 	vldr	s16, [pc, #-448]	@ 801066c <Controller::update(float*)+0x368>
 801082c:	e649      	b.n	80104c2 <Controller::update(float*)+0x1be>
 801082e:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8010832:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8010836:	ee17 0a90 	vmov	r0, s15
 801083a:	f7fb f8bf 	bl	800b9bc <mod>
 801083e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8010842:	f5b0 6f61 	cmp.w	r0, #3600	@ 0xe10
 8010846:	bfa8      	it	ge
 8010848:	f44f 6061 	movge.w	r0, #3600	@ 0xe10
 801084c:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8010850:	edd0 7a0e 	vldr	s15, [r0, #56]	@ 0x38
 8010854:	68e5      	ldr	r5, [r4, #12]
 8010856:	ee78 8aa7 	vadd.f32	s17, s17, s15
 801085a:	f895 b000 	ldrb.w	fp, [r5]
 801085e:	e61d      	b.n	801049c <Controller::update(float*)+0x198>
 8010860:	2101      	movs	r1, #1
 8010862:	e7b2      	b.n	80107ca <Controller::update(float*)+0x4c6>
 8010864:	68e5      	ldr	r5, [r4, #12]
 8010866:	ed94 8a0d 	vldr	s16, [r4, #52]	@ 0x34
 801086a:	f895 b000 	ldrb.w	fp, [r5]
 801086e:	e5cc      	b.n	801040a <Controller::update(float*)+0x106>
 8010870:	eef0 7a68 	vmov.f32	s15, s17
 8010874:	e769      	b.n	801074a <Controller::update(float*)+0x446>
 8010876:	ed94 0a10 	vldr	s0, [r4, #64]	@ 0x40
 801087a:	4620      	mov	r0, r4
 801087c:	f7ff fca6 	bl	80101cc <Controller::move_to_pos(float)>
 8010880:	2300      	movs	r3, #0
 8010882:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010886:	e674      	b.n	8010572 <Controller::update(float*)+0x26e>
 8010888:	2108      	movs	r1, #8
 801088a:	e567      	b.n	801035c <Controller::update(float*)+0x58>
 801088c:	f000 fa04 	bl	8010c98 <TrapezoidalTrajectory::eval(float)>
 8010890:	6923      	ldr	r3, [r4, #16]
 8010892:	68e5      	ldr	r5, [r4, #12]
 8010894:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010896:	ed1f 7a8a 	vldr	s14, [pc, #-552]	@ 8010670 <Controller::update(float*)+0x36c>
 801089a:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 801089e:	ed8d 1a03 	vstr	s2, [sp, #12]
 80108a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80108a6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80108aa:	ed84 0a0c 	vstr	s0, [r4, #48]	@ 0x30
 80108ae:	ee21 1a07 	vmul.f32	s2, s2, s14
 80108b2:	edc4 0a0d 	vstr	s1, [r4, #52]	@ 0x34
 80108b6:	ed84 1a0f 	vstr	s2, [r4, #60]	@ 0x3c
 80108ba:	f895 b000 	ldrb.w	fp, [r5]
 80108be:	ed8d 0a01 	vstr	s0, [sp, #4]
 80108c2:	eeb0 9a40 	vmov.f32	s18, s0
 80108c6:	eeb0 8a60 	vmov.f32	s16, s1
 80108ca:	edcd 0a02 	vstr	s1, [sp, #8]
 80108ce:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34
 80108d2:	e59a      	b.n	801040a <Controller::update(float*)+0x106>

080108d4 <operator|=(ODriveIntf::SensorlessEstimatorIntf::Error&, ODriveIntf::SensorlessEstimatorIntf::Error) [clone .isra.0]>:
 80108d4:	7803      	ldrb	r3, [r0, #0]
 80108d6:	4319      	orrs	r1, r3
 80108d8:	7001      	strb	r1, [r0, #0]
 80108da:	4770      	bx	lr

080108dc <SensorlessEstimator::SensorlessEstimator(SensorlessEstimator::Config_t&)>:
 80108dc:	b410      	push	{r4}
 80108de:	2200      	movs	r2, #0
 80108e0:	2400      	movs	r4, #0
 80108e2:	e9c0 4100 	strd	r4, r1, [r0]
 80108e6:	7204      	strb	r4, [r0, #8]
 80108e8:	7704      	strb	r4, [r0, #28]
 80108ea:	f880 4030 	strb.w	r4, [r0, #48]	@ 0x30
 80108ee:	60c2      	str	r2, [r0, #12]
 80108f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108f4:	6102      	str	r2, [r0, #16]
 80108f6:	6142      	str	r2, [r0, #20]
 80108f8:	6182      	str	r2, [r0, #24]
 80108fa:	6202      	str	r2, [r0, #32]
 80108fc:	6242      	str	r2, [r0, #36]	@ 0x24
 80108fe:	6282      	str	r2, [r0, #40]	@ 0x28
 8010900:	62c2      	str	r2, [r0, #44]	@ 0x2c
 8010902:	4770      	bx	lr

08010904 <SensorlessEstimator::update()>:
 8010904:	e9d0 3200 	ldrd	r3, r2, [r0]
 8010908:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801090a:	ed90 5a0a 	vldr	s10, [r0, #40]	@ 0x28
 801090e:	6a19      	ldr	r1, [r3, #32]
 8010910:	edd3 6a1b 	vldr	s13, [r3, #108]	@ 0x6c
 8010914:	ed93 7a1a 	vldr	s14, [r3, #104]	@ 0x68
 8010918:	ed91 6a07 	vldr	s12, [r1, #28]
 801091c:	ed91 3a05 	vldr	s6, [r1, #20]
 8010920:	edd2 7a02 	vldr	s15, [r2, #8]
 8010924:	edd2 4a00 	vldr	s9, [r2]
 8010928:	edd0 0a08 	vldr	s1, [r0, #32]
 801092c:	edd0 5a0b 	vldr	s11, [r0, #44]	@ 0x2c
 8010930:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 8010934:	ee37 4a26 	vadd.f32	s8, s14, s13
 8010938:	eef8 3ac6 	vcvt.f32.s32	s7, s12
 801093c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8010940:	eea3 5a04 	vfma.f32	s10, s6, s8
 8010944:	b510      	push	{r4, lr}
 8010946:	ed9f 6a6b 	vldr	s12, [pc, #428]	@ 8010af4 <SensorlessEstimator::update()+0x1f0>
 801094a:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 801094e:	ee27 7a23 	vmul.f32	s14, s14, s7
 8010952:	ee64 4aa6 	vmul.f32	s9, s9, s13
 8010956:	ee67 7aa7 	vmul.f32	s15, s15, s15
 801095a:	eddf 6a67 	vldr	s13, [pc, #412]	@ 8010af8 <SensorlessEstimator::update()+0x1f4>
 801095e:	ee27 7a06 	vmul.f32	s14, s14, s12
 8010962:	ee84 6aa7 	vdiv.f32	s12, s9, s15
 8010966:	4604      	mov	r4, r0
 8010968:	edd1 4a04 	vldr	s9, [r1, #16]
 801096c:	eee5 0a26 	vfma.f32	s1, s10, s13
 8010970:	eee7 5a43 	vfms.f32	s11, s14, s6
 8010974:	ed2d 8b08 	vpush	{d8-d11}
 8010978:	ee64 aa64 	vnmul.f32	s21, s8, s9
 801097c:	eea5 0aa6 	vfma.f32	s0, s11, s13
 8010980:	ee27 8a24 	vmul.f32	s16, s14, s9
 8010984:	ee30 7aea 	vsub.f32	s14, s1, s21
 8010988:	ee70 5a48 	vsub.f32	s11, s0, s16
 801098c:	eee7 7a47 	vfms.f32	s15, s14, s14
 8010990:	edd2 8a01 	vldr	s17, [r2, #4]
 8010994:	eee5 7ae5 	vfms.f32	s15, s11, s11
 8010998:	ee25 5aa6 	vmul.f32	s10, s11, s13
 801099c:	ee66 7a27 	vmul.f32	s15, s12, s15
 80109a0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80109a4:	ee78 8aa8 	vadd.f32	s17, s17, s17
 80109a8:	edd3 5a25 	vldr	s11, [r3, #148]	@ 0x94
 80109ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80109b0:	6283      	str	r3, [r0, #40]	@ 0x28
 80109b2:	eee7 0a27 	vfma.f32	s1, s14, s15
 80109b6:	eea5 0a27 	vfma.f32	s0, s10, s15
 80109ba:	ee28 baa6 	vmul.f32	s22, s17, s13
 80109be:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80109c2:	ee25 6aa3 	vmul.f32	s12, s11, s7
 80109c6:	eeb4 ba67 	vcmp.f32	s22, s15
 80109ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80109ce:	edc0 0a08 	vstr	s1, [r0, #32]
 80109d2:	ed80 0a09 	vstr	s0, [r0, #36]	@ 0x24
 80109d6:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80109da:	f140 8082 	bpl.w	8010ae2 <SensorlessEstimator::update()+0x1de>
 80109de:	ed9f 7a47 	vldr	s14, [pc, #284]	@ 8010afc <SensorlessEstimator::update()+0x1f8>
 80109e2:	edd0 7a06 	vldr	s15, [r0, #24]
 80109e6:	ed9f aa46 	vldr	s20, [pc, #280]	@ 8010b00 <SensorlessEstimator::update()+0x1fc>
 80109ea:	eeb0 9a40 	vmov.f32	s18, s0
 80109ee:	ed90 0a04 	vldr	s0, [r0, #16]
 80109f2:	ee30 0a07 	vadd.f32	s0, s0, s14
 80109f6:	eef0 9a60 	vmov.f32	s19, s1
 80109fa:	eea7 0aa6 	vfma.f32	s0, s15, s13
 80109fe:	eef0 0a4a 	vmov.f32	s1, s20
 8010a02:	f012 f9f5 	bl	8022df0 <fmodf>
 8010a06:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8010a0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a0e:	bf48      	it	mi
 8010a10:	ee30 0a0a 	vaddmi.f32	s0, s0, s20
 8010a14:	ed9f aa39 	vldr	s20, [pc, #228]	@ 8010afc <SensorlessEstimator::update()+0x1f8>
 8010a18:	ee70 7a4a 	vsub.f32	s15, s0, s20
 8010a1c:	ee79 0aea 	vsub.f32	s1, s19, s21
 8010a20:	ee39 0a48 	vsub.f32	s0, s18, s16
 8010a24:	edc4 7a04 	vstr	s15, [r4, #16]
 8010a28:	f7fa ff60 	bl	800b8ec <fast_atan2>
 8010a2c:	ed94 9a04 	vldr	s18, [r4, #16]
 8010a30:	ed9f 8a33 	vldr	s16, [pc, #204]	@ 8010b00 <SensorlessEstimator::update()+0x1fc>
 8010a34:	eddf 9a32 	vldr	s19, [pc, #200]	@ 8010b00 <SensorlessEstimator::update()+0x1fc>
 8010a38:	eef0 7a40 	vmov.f32	s15, s0
 8010a3c:	ee3a 0a49 	vsub.f32	s0, s20, s18
 8010a40:	eef0 0a48 	vmov.f32	s1, s16
 8010a44:	ee30 0a27 	vadd.f32	s0, s0, s15
 8010a48:	edc4 7a03 	vstr	s15, [r4, #12]
 8010a4c:	f012 f9d0 	bl	8022df0 <fmodf>
 8010a50:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8010a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010a58:	bf48      	it	mi
 8010a5a:	ee30 0a08 	vaddmi.f32	s0, s0, s16
 8010a5e:	eddf 7a27 	vldr	s15, [pc, #156]	@ 8010afc <SensorlessEstimator::update()+0x1f8>
 8010a62:	ee30 8a67 	vsub.f32	s16, s0, s15
 8010a66:	ee39 0a27 	vadd.f32	s0, s18, s15
 8010a6a:	eef0 0a69 	vmov.f32	s1, s19
 8010a6e:	eeab 0a08 	vfma.f32	s0, s22, s16
 8010a72:	f012 f9bd 	bl	8022df0 <fmodf>
 8010a76:	6823      	ldr	r3, [r4, #0]
 8010a78:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 8010b04 <SensorlessEstimator::update()+0x200>
 8010a7c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010a7e:	edd4 7a06 	vldr	s15, [r4, #24]
 8010a82:	6a1b      	ldr	r3, [r3, #32]
 8010a84:	ed9f 6a20 	vldr	s12, [pc, #128]	@ 8010b08 <SensorlessEstimator::update()+0x204>
 8010a88:	edd3 6a01 	vldr	s13, [r3, #4]
 8010a8c:	ee68 8aa8 	vmul.f32	s17, s17, s17
 8010a90:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010a94:	ee68 8a87 	vmul.f32	s17, s17, s14
 8010a98:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8010a9c:	eee8 7a28 	vfma.f32	s15, s16, s17
 8010aa0:	2001      	movs	r0, #1
 8010aa2:	7720      	strb	r0, [r4, #28]
 8010aa4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8010aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010aac:	eef4 6ac7 	vcmpe.f32	s13, s14
 8010ab0:	bf48      	it	mi
 8010ab2:	ee30 0a29 	vaddmi.f32	s0, s0, s19
 8010ab6:	ee27 6a86 	vmul.f32	s12, s15, s12
 8010aba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010abe:	bf58      	it	pl
 8010ac0:	eeb0 7a66 	vmovpl.f32	s14, s13
 8010ac4:	eec6 6a07 	vdiv.f32	s13, s12, s14
 8010ac8:	ecbd 8b08 	vpop	{d8-d11}
 8010acc:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8010afc <SensorlessEstimator::update()+0x1f8>
 8010ad0:	edc4 7a06 	vstr	s15, [r4, #24]
 8010ad4:	ee30 0a47 	vsub.f32	s0, s0, s14
 8010ad8:	edc4 6a05 	vstr	s13, [r4, #20]
 8010adc:	ed84 0a04 	vstr	s0, [r4, #16]
 8010ae0:	bd10      	pop	{r4, pc}
 8010ae2:	3008      	adds	r0, #8
 8010ae4:	2101      	movs	r1, #1
 8010ae6:	f7ff fef5 	bl	80108d4 <operator|=(ODriveIntf::SensorlessEstimatorIntf::Error&, ODriveIntf::SensorlessEstimatorIntf::Error) [clone .isra.0]>
 8010aea:	ecbd 8b08 	vpop	{d8-d11}
 8010aee:	2000      	movs	r0, #0
 8010af0:	7720      	strb	r0, [r4, #28]
 8010af2:	bd10      	pop	{r4, pc}
 8010af4:	3f13cd3a 	.word	0x3f13cd3a
 8010af8:	3903126f 	.word	0x3903126f
 8010afc:	40490fdb 	.word	0x40490fdb
 8010b00:	40c90fdb 	.word	0x40c90fdb
 8010b04:	3803126f 	.word	0x3803126f
 8010b08:	3e22f983 	.word	0x3e22f983

08010b0c <TrapezoidalTrajectory::TrapezoidalTrajectory(TrapezoidalTrajectory::Config_t&)>:
 8010b0c:	2200      	movs	r2, #0
 8010b0e:	e9c0 2100 	strd	r2, r1, [r0]
 8010b12:	4770      	bx	lr

08010b14 <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)>:
 8010b14:	ee21 4a01 	vmul.f32	s8, s2, s2
 8010b18:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8010b1c:	ee24 7a07 	vmul.f32	s14, s8, s14
 8010b20:	ee11 3a10 	vmov	r3, s2
 8010b24:	eec7 7a22 	vdiv.f32	s15, s14, s5
 8010b28:	2b00      	cmp	r3, #0
 8010b2a:	b510      	push	{r4, lr}
 8010b2c:	4604      	mov	r4, r0
 8010b2e:	ee70 5a60 	vsub.f32	s11, s0, s1
 8010b32:	eef0 7ae7 	vabs.f32	s15, s15
 8010b36:	bfb8      	it	lt
 8010b38:	eef1 7a67 	vneglt.f32	s15, s15
 8010b3c:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8010b40:	ed2d 8b08 	vpush	{d8-d11}
 8010b44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b4c:	eef0 8a41 	vmov.f32	s17, s2
 8010b50:	eeb0 9a62 	vmov.f32	s18, s5
 8010b54:	eeb0 aa40 	vmov.f32	s20, s0
 8010b58:	eef0 9a60 	vmov.f32	s19, s1
 8010b5c:	eeb0 8a42 	vmov.f32	s16, s4
 8010b60:	f100 808a 	bmi.w	8010c78 <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)+0x164>
 8010b64:	eef0 3a65 	vmov.f32	s7, s11
 8010b68:	eef0 7a41 	vmov.f32	s15, s2
 8010b6c:	eef0 6a61 	vmov.f32	s13, s3
 8010b70:	eeb7 ba00 	vmov.f32	s22, #112	@ 0x3f800000  1.0
 8010b74:	eef4 1ae7 	vcmpe.f32	s3, s15
 8010b78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010b7c:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8010b80:	ee36 6ae8 	vsub.f32	s12, s13, s17
 8010b84:	ed84 8a05 	vstr	s16, [r4, #20]
 8010b88:	bf48      	it	mi
 8010b8a:	eeb1 8a48 	vnegmi.f32	s16, s16
 8010b8e:	eec6 7a08 	vdiv.f32	s15, s12, s16
 8010b92:	ee78 4aa6 	vadd.f32	s9, s17, s13
 8010b96:	ee27 6a26 	vmul.f32	s12, s14, s13
 8010b9a:	eeb6 3a00 	vmov.f32	s6, #96	@ 0x3f000000  0.5
 8010b9e:	eea7 6aa4 	vfma.f32	s12, s15, s9
 8010ba2:	eeb1 5a49 	vneg.f32	s10, s18
 8010ba6:	ee26 6a03 	vmul.f32	s12, s12, s6
 8010baa:	bf48      	it	mi
 8010bac:	ed84 8a05 	vstrmi	s16, [r4, #20]
 8010bb0:	ee66 4a0b 	vmul.f32	s9, s12, s22
 8010bb4:	ed84 5a07 	vstr	s10, [r4, #28]
 8010bb8:	eef4 4ae3 	vcmpe.f32	s9, s7
 8010bbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010bc0:	edc4 6a06 	vstr	s13, [r4, #24]
 8010bc4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010bc8:	edc4 7a08 	vstr	s15, [r4, #32]
 8010bcc:	dd4f      	ble.n	8010c6e <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)+0x15a>
 8010bce:	ee75 5aa5 	vadd.f32	s11, s11, s11
 8010bd2:	eddf aa30 	vldr	s21, [pc, #192]	@ 8010c94 <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)+0x180>
 8010bd6:	eea5 4a88 	vfma.f32	s8, s11, s16
 8010bda:	ee35 0a48 	vsub.f32	s0, s10, s16
 8010bde:	ee25 5a04 	vmul.f32	s10, s10, s8
 8010be2:	eef0 0a6a 	vmov.f32	s1, s21
 8010be6:	ee85 0a00 	vdiv.f32	s0, s10, s0
 8010bea:	f012 f925 	bl	8022e38 <fmaxf>
 8010bee:	eef1 6ac0 	vsqrt.f32	s13, s0
 8010bf2:	eeb0 6a6a 	vmov.f32	s12, s21
 8010bf6:	ee66 6a8b 	vmul.f32	s13, s13, s22
 8010bfa:	ee76 5ae8 	vsub.f32	s11, s13, s17
 8010bfe:	ee86 7a89 	vdiv.f32	s14, s13, s18
 8010c02:	eec5 7a88 	vdiv.f32	s15, s11, s16
 8010c06:	edc4 6a06 	vstr	s13, [r4, #24]
 8010c0a:	eef4 7aea 	vcmpe.f32	s15, s21
 8010c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c12:	eeb4 7aea 	vcmpe.f32	s14, s21
 8010c16:	bfd8      	it	le
 8010c18:	eef0 7a6a 	vmovle.f32	s15, s21
 8010c1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c20:	bfd8      	it	le
 8010c22:	eeb0 7a6a 	vmovle.f32	s14, s21
 8010c26:	edc4 7a08 	vstr	s15, [r4, #32]
 8010c2a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010c2e:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8010c32:	ee28 8a26 	vmul.f32	s16, s16, s13
 8010c36:	eef0 5a68 	vmov.f32	s11, s17
 8010c3a:	ee76 6a27 	vadd.f32	s13, s12, s15
 8010c3e:	eee8 5a27 	vfma.f32	s11, s16, s15
 8010c42:	2001      	movs	r0, #1
 8010c44:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010c48:	edc4 9a02 	vstr	s19, [r4, #8]
 8010c4c:	ed84 7a0b 	vstr	s14, [r4, #44]	@ 0x2c
 8010c50:	ed84 aa03 	vstr	s20, [r4, #12]
 8010c54:	eeb0 7a69 	vmov.f32	s14, s19
 8010c58:	edc4 8a04 	vstr	s17, [r4, #16]
 8010c5c:	ecbd 8b08 	vpop	{d8-d11}
 8010c60:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8010c64:	ed84 6a09 	vstr	s12, [r4, #36]	@ 0x24
 8010c68:	ed84 7a0c 	vstr	s14, [r4, #48]	@ 0x30
 8010c6c:	bd10      	pop	{r4, pc}
 8010c6e:	ee75 5ac6 	vsub.f32	s11, s11, s12
 8010c72:	ee85 6aa6 	vdiv.f32	s12, s11, s13
 8010c76:	e7da      	b.n	8010c2e <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)+0x11a>
 8010c78:	ee70 3ac0 	vsub.f32	s7, s1, s0
 8010c7c:	eeb1 8a42 	vneg.f32	s16, s4
 8010c80:	eeb1 9a62 	vneg.f32	s18, s5
 8010c84:	eef1 6a61 	vneg.f32	s13, s3
 8010c88:	eef1 7a41 	vneg.f32	s15, s2
 8010c8c:	eebf ba00 	vmov.f32	s22, #240	@ 0xbf800000 -1.0
 8010c90:	e770      	b.n	8010b74 <TrapezoidalTrajectory::planTrapezoidal(float, float, float, float, float, float)+0x60>
 8010c92:	bf00      	nop
 8010c94:	00000000 	.word	0x00000000

08010c98 <TrapezoidalTrajectory::eval(float)>:
 8010c98:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8010c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ca0:	b088      	sub	sp, #32
 8010ca2:	d43d      	bmi.n	8010d20 <TrapezoidalTrajectory::eval(float)+0x88>
 8010ca4:	edd0 7a08 	vldr	s15, [r0, #32]
 8010ca8:	eef4 7ac0 	vcmpe.f32	s15, s0
 8010cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cb0:	dd15      	ble.n	8010cde <TrapezoidalTrajectory::eval(float)+0x46>
 8010cb2:	ed90 1a05 	vldr	s2, [r0, #20]
 8010cb6:	edd0 0a04 	vldr	s1, [r0, #16]
 8010cba:	ed90 7a02 	vldr	s14, [r0, #8]
 8010cbe:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010cc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010cc6:	eef0 6a60 	vmov.f32	s13, s1
 8010cca:	eee0 6a27 	vfma.f32	s13, s0, s15
 8010cce:	eee1 0a00 	vfma.f32	s1, s2, s0
 8010cd2:	eea0 7a26 	vfma.f32	s14, s0, s13
 8010cd6:	eeb0 0a47 	vmov.f32	s0, s14
 8010cda:	b008      	add	sp, #32
 8010cdc:	4770      	bx	lr
 8010cde:	edd0 6a09 	vldr	s13, [r0, #36]	@ 0x24
 8010ce2:	ee77 6aa6 	vadd.f32	s13, s15, s13
 8010ce6:	eef4 6ac0 	vcmpe.f32	s13, s0
 8010cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cee:	dc21      	bgt.n	8010d34 <TrapezoidalTrajectory::eval(float)+0x9c>
 8010cf0:	edd0 7a0b 	vldr	s15, [r0, #44]	@ 0x2c
 8010cf4:	eef4 7ac0 	vcmpe.f32	s15, s0
 8010cf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010cfc:	dd28      	ble.n	8010d50 <TrapezoidalTrajectory::eval(float)+0xb8>
 8010cfe:	ed90 1a07 	vldr	s2, [r0, #28]
 8010d02:	ed90 7a03 	vldr	s14, [r0, #12]
 8010d06:	eef6 6a00 	vmov.f32	s13, #96	@ 0x3f000000  0.5
 8010d0a:	ee70 7a67 	vsub.f32	s15, s0, s15
 8010d0e:	ee61 6a26 	vmul.f32	s13, s2, s13
 8010d12:	ee61 0a27 	vmul.f32	s1, s2, s15
 8010d16:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010d1a:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8010d1e:	e7da      	b.n	8010cd6 <TrapezoidalTrajectory::eval(float)+0x3e>
 8010d20:	ed90 7a02 	vldr	s14, [r0, #8]
 8010d24:	edd0 0a04 	vldr	s1, [r0, #16]
 8010d28:	ed9f 1a0d 	vldr	s2, [pc, #52]	@ 8010d60 <TrapezoidalTrajectory::eval(float)+0xc8>
 8010d2c:	eeb0 0a47 	vmov.f32	s0, s14
 8010d30:	b008      	add	sp, #32
 8010d32:	4770      	bx	lr
 8010d34:	edd0 0a06 	vldr	s1, [r0, #24]
 8010d38:	ed90 7a0c 	vldr	s14, [r0, #48]	@ 0x30
 8010d3c:	ed9f 1a08 	vldr	s2, [pc, #32]	@ 8010d60 <TrapezoidalTrajectory::eval(float)+0xc8>
 8010d40:	ee70 7a67 	vsub.f32	s15, s0, s15
 8010d44:	eea0 7aa7 	vfma.f32	s14, s1, s15
 8010d48:	eeb0 0a47 	vmov.f32	s0, s14
 8010d4c:	b008      	add	sp, #32
 8010d4e:	4770      	bx	lr
 8010d50:	d8c1      	bhi.n	8010cd6 <TrapezoidalTrajectory::eval(float)+0x3e>
 8010d52:	ed9f 1a03 	vldr	s2, [pc, #12]	@ 8010d60 <TrapezoidalTrajectory::eval(float)+0xc8>
 8010d56:	ed90 7a03 	vldr	s14, [r0, #12]
 8010d5a:	eef0 0a41 	vmov.f32	s1, s2
 8010d5e:	e7ba      	b.n	8010cd6 <TrapezoidalTrajectory::eval(float)+0x3e>
 8010d60:	00000000 	.word	0x00000000

08010d64 <NVIC_SystemReset>:
 8010d64:	f3bf 8f4f 	dsb	sy
 8010d68:	4905      	ldr	r1, [pc, #20]	@ (8010d80 <NVIC_SystemReset+0x1c>)
 8010d6a:	4b06      	ldr	r3, [pc, #24]	@ (8010d84 <NVIC_SystemReset+0x20>)
 8010d6c:	68ca      	ldr	r2, [r1, #12]
 8010d6e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8010d72:	4313      	orrs	r3, r2
 8010d74:	60cb      	str	r3, [r1, #12]
 8010d76:	f3bf 8f4f 	dsb	sy
 8010d7a:	bf00      	nop
 8010d7c:	e7fd      	b.n	8010d7a <NVIC_SystemReset+0x16>
 8010d7e:	bf00      	nop
 8010d80:	e000ed00 	.word	0xe000ed00
 8010d84:	05fa0004 	.word	0x05fa0004

08010d88 <ODrive::reboot()>:
 8010d88:	b508      	push	{r3, lr}
 8010d8a:	f7ff ffeb 	bl	8010d64 <NVIC_SystemReset>
 8010d8e:	bf00      	nop

08010d90 <ODrive::get_oscilloscope_val(unsigned long)>:
 8010d90:	4b02      	ldr	r3, [pc, #8]	@ (8010d9c <ODrive::get_oscilloscope_val(unsigned long)+0xc>)
 8010d92:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8010d96:	ed93 0a00 	vldr	s0, [r3]
 8010d9a:	4770      	bx	lr
 8010d9c:	20008e54 	.word	0x20008e54

08010da0 <ODrive::test_function(long)>:
 8010da0:	4b02      	ldr	r3, [pc, #8]	@ (8010dac <ODrive::test_function(long)+0xc>)
 8010da2:	681a      	ldr	r2, [r3, #0]
 8010da4:	1888      	adds	r0, r1, r2
 8010da6:	6018      	str	r0, [r3, #0]
 8010da8:	4770      	bx	lr
 8010daa:	bf00      	nop
 8010dac:	20008c64 	.word	0x20008c64

08010db0 <ODrive::erase_configuration()>:
 8010db0:	b508      	push	{r3, lr}
 8010db2:	f7fb ff03 	bl	800cbbc <NVM_erase>
 8010db6:	f7ff ffd5 	bl	8010d64 <NVIC_SystemReset>
 8010dba:	bf00      	nop

08010dbc <ODrive::get_adc_voltage(unsigned long)>:
 8010dbc:	b289      	uxth	r1, r1
 8010dbe:	2906      	cmp	r1, #6
 8010dc0:	d00f      	beq.n	8010de2 <ODrive::get_adc_voltage(unsigned long)+0x26>
 8010dc2:	2908      	cmp	r1, #8
 8010dc4:	d00d      	beq.n	8010de2 <ODrive::get_adc_voltage(unsigned long)+0x26>
 8010dc6:	2905      	cmp	r1, #5
 8010dc8:	d007      	beq.n	8010dda <ODrive::get_adc_voltage(unsigned long)+0x1e>
 8010dca:	3902      	subs	r1, #2
 8010dcc:	b289      	uxth	r1, r1
 8010dce:	2906      	cmp	r1, #6
 8010dd0:	d90f      	bls.n	8010df2 <ODrive::get_adc_voltage(unsigned long)+0x36>
 8010dd2:	480a      	ldr	r0, [pc, #40]	@ (8010dfc <ODrive::get_adc_voltage(unsigned long)+0x40>)
 8010dd4:	2101      	movs	r1, #1
 8010dd6:	f7fb ba25 	b.w	800c224 <get_adc_voltage>
 8010dda:	4809      	ldr	r0, [pc, #36]	@ (8010e00 <ODrive::get_adc_voltage(unsigned long)+0x44>)
 8010ddc:	2110      	movs	r1, #16
 8010dde:	f7fb ba21 	b.w	800c224 <get_adc_voltage>
 8010de2:	3902      	subs	r1, #2
 8010de4:	4b07      	ldr	r3, [pc, #28]	@ (8010e04 <ODrive::get_adc_voltage(unsigned long)+0x48>)
 8010de6:	4808      	ldr	r0, [pc, #32]	@ (8010e08 <ODrive::get_adc_voltage(unsigned long)+0x4c>)
 8010de8:	b289      	uxth	r1, r1
 8010dea:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8010dee:	f7fb ba19 	b.w	800c224 <get_adc_voltage>
 8010df2:	4b04      	ldr	r3, [pc, #16]	@ (8010e04 <ODrive::get_adc_voltage(unsigned long)+0x48>)
 8010df4:	4801      	ldr	r0, [pc, #4]	@ (8010dfc <ODrive::get_adc_voltage(unsigned long)+0x40>)
 8010df6:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8010dfa:	e7f0      	b.n	8010dde <ODrive::get_adc_voltage(unsigned long)+0x22>
 8010dfc:	40020000 	.word	0x40020000
 8010e00:	40020800 	.word	0x40020800
 8010e04:	0802af04 	.word	0x0802af04
 8010e08:	40020400 	.word	0x40020400

08010e0c <ODrive::enter_dfu_mode()>:
 8010e0c:	b508      	push	{r3, lr}
 8010e0e:	f890 3030 	ldrb.w	r3, [r0, #48]	@ 0x30
 8010e12:	2b03      	cmp	r3, #3
 8010e14:	d000      	beq.n	8010e18 <ODrive::enter_dfu_mode()+0xc>
 8010e16:	bd08      	pop	{r3, pc}
 8010e18:	f890 3031 	ldrb.w	r3, [r0, #49]	@ 0x31
 8010e1c:	2b04      	cmp	r3, #4
 8010e1e:	d9fa      	bls.n	8010e16 <ODrive::enter_dfu_mode()+0xa>
 8010e20:	b672      	cpsid	i
 8010e22:	4b02      	ldr	r3, [pc, #8]	@ (8010e2c <ODrive::enter_dfu_mode()+0x20>)
 8010e24:	4a02      	ldr	r2, [pc, #8]	@ (8010e30 <ODrive::enter_dfu_mode()+0x24>)
 8010e26:	601a      	str	r2, [r3, #0]
 8010e28:	f7ff ff9c 	bl	8010d64 <NVIC_SystemReset>
 8010e2c:	2000d6cc 	.word	0x2000d6cc
 8010e30:	deadbeef 	.word	0xdeadbeef

08010e34 <construct_objects>:
 8010e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e38:	4eb8      	ldr	r6, [pc, #736]	@ (801111c <construct_objects+0x2e8>)
 8010e3a:	f896 3095 	ldrb.w	r3, [r6, #149]	@ 0x95
 8010e3e:	b09b      	sub	sp, #108	@ 0x6c
 8010e40:	2b00      	cmp	r3, #0
 8010e42:	f000 8124 	beq.w	801108e <construct_objects+0x25a>
 8010e46:	ac14      	add	r4, sp, #80	@ 0x50
 8010e48:	2204      	movs	r2, #4
 8010e4a:	2300      	movs	r3, #0
 8010e4c:	2501      	movs	r5, #1
 8010e4e:	48b4      	ldr	r0, [pc, #720]	@ (8011120 <construct_objects+0x2ec>)
 8010e50:	9516      	str	r5, [sp, #88]	@ 0x58
 8010e52:	4621      	mov	r1, r4
 8010e54:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
 8010e58:	f04f 0808 	mov.w	r8, #8
 8010e5c:	f7f9 f95c 	bl	800a118 <HAL_GPIO_Init>
 8010e60:	48af      	ldr	r0, [pc, #700]	@ (8011120 <construct_objects+0x2ec>)
 8010e62:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8010e66:	4621      	mov	r1, r4
 8010e68:	f7f9 f956 	bl	800a118 <HAL_GPIO_Init>
 8010e6c:	2710      	movs	r7, #16
 8010e6e:	4621      	mov	r1, r4
 8010e70:	48ac      	ldr	r0, [pc, #688]	@ (8011124 <construct_objects+0x2f0>)
 8010e72:	9714      	str	r7, [sp, #80]	@ 0x50
 8010e74:	f7f9 f950 	bl	800a118 <HAL_GPIO_Init>
 8010e78:	4628      	mov	r0, r5
 8010e7a:	4dab      	ldr	r5, [pc, #684]	@ (8011128 <construct_objects+0x2f4>)
 8010e7c:	f7f6 fdd4 	bl	8007a28 <osDelay>
 8010e80:	2368      	movs	r3, #104	@ 0x68
 8010e82:	2104      	movs	r1, #4
 8010e84:	48a6      	ldr	r0, [pc, #664]	@ (8011120 <construct_objects+0x2ec>)
 8010e86:	702b      	strb	r3, [r5, #0]
 8010e88:	f7f9 fb1a 	bl	800a4c0 <HAL_GPIO_ReadPin>
 8010e8c:	782b      	ldrb	r3, [r5, #0]
 8010e8e:	4641      	mov	r1, r8
 8010e90:	2800      	cmp	r0, #0
 8010e92:	bf18      	it	ne
 8010e94:	f043 0301 	orrne.w	r3, r3, #1
 8010e98:	48a1      	ldr	r0, [pc, #644]	@ (8011120 <construct_objects+0x2ec>)
 8010e9a:	702b      	strb	r3, [r5, #0]
 8010e9c:	f7f9 fb10 	bl	800a4c0 <HAL_GPIO_ReadPin>
 8010ea0:	782b      	ldrb	r3, [r5, #0]
 8010ea2:	3800      	subs	r0, #0
 8010ea4:	bf18      	it	ne
 8010ea6:	2001      	movne	r0, #1
 8010ea8:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8010eac:	4639      	mov	r1, r7
 8010eae:	489d      	ldr	r0, [pc, #628]	@ (8011124 <construct_objects+0x2f0>)
 8010eb0:	702b      	strb	r3, [r5, #0]
 8010eb2:	f7f9 fb05 	bl	800a4c0 <HAL_GPIO_ReadPin>
 8010eb6:	1e03      	subs	r3, r0, #0
 8010eb8:	7828      	ldrb	r0, [r5, #0]
 8010eba:	bf18      	it	ne
 8010ebc:	2301      	movne	r3, #1
 8010ebe:	ea40 0083 	orr.w	r0, r0, r3, lsl #2
 8010ec2:	7028      	strb	r0, [r5, #0]
 8010ec4:	f7fa f974 	bl	800b1b0 <MX_I2C1_Init>
 8010ec8:	4898      	ldr	r0, [pc, #608]	@ (801112c <construct_objects+0x2f8>)
 8010eca:	f7f5 feff 	bl	8006ccc <HAL_UART_DeInit>
 8010ece:	4897      	ldr	r0, [pc, #604]	@ (801112c <construct_objects+0x2f8>)
 8010ed0:	f8d6 317c 	ldr.w	r3, [r6, #380]	@ 0x17c
 8010ed4:	6043      	str	r3, [r0, #4]
 8010ed6:	2601      	movs	r6, #1
 8010ed8:	f7f5 fec8 	bl	8006c6c <HAL_UART_Init>
 8010edc:	2703      	movs	r7, #3
 8010ede:	2300      	movs	r3, #0
 8010ee0:	488f      	ldr	r0, [pc, #572]	@ (8011120 <construct_objects+0x2ec>)
 8010ee2:	9316      	str	r3, [sp, #88]	@ 0x58
 8010ee4:	4621      	mov	r1, r4
 8010ee6:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8010eea:	f7f9 f915 	bl	800a118 <HAL_GPIO_Init>
 8010eee:	2302      	movs	r3, #2
 8010ef0:	488b      	ldr	r0, [pc, #556]	@ (8011120 <construct_objects+0x2ec>)
 8010ef2:	9314      	str	r3, [sp, #80]	@ 0x50
 8010ef4:	4621      	mov	r1, r4
 8010ef6:	f7f9 f90f 	bl	800a118 <HAL_GPIO_Init>
 8010efa:	2304      	movs	r3, #4
 8010efc:	4888      	ldr	r0, [pc, #544]	@ (8011120 <construct_objects+0x2ec>)
 8010efe:	9314      	str	r3, [sp, #80]	@ 0x50
 8010f00:	4621      	mov	r1, r4
 8010f02:	f7f9 f909 	bl	800a118 <HAL_GPIO_Init>
 8010f06:	2308      	movs	r3, #8
 8010f08:	4885      	ldr	r0, [pc, #532]	@ (8011120 <construct_objects+0x2ec>)
 8010f0a:	9314      	str	r3, [sp, #80]	@ 0x50
 8010f0c:	4621      	mov	r1, r4
 8010f0e:	f7f9 f903 	bl	800a118 <HAL_GPIO_Init>
 8010f12:	2310      	movs	r3, #16
 8010f14:	4621      	mov	r1, r4
 8010f16:	4883      	ldr	r0, [pc, #524]	@ (8011124 <construct_objects+0x2f0>)
 8010f18:	9314      	str	r3, [sp, #80]	@ 0x50
 8010f1a:	f7f9 f8fd 	bl	800a118 <HAL_GPIO_Init>
 8010f1e:	201c      	movs	r0, #28
 8010f20:	f011 fc05 	bl	802272e <operator new(unsigned int)>
 8010f24:	4a82      	ldr	r2, [pc, #520]	@ (8011130 <construct_objects+0x2fc>)
 8010f26:	4983      	ldr	r1, [pc, #524]	@ (8011134 <construct_objects+0x300>)
 8010f28:	4605      	mov	r5, r0
 8010f2a:	f010 fb6f 	bl	802160c <ODriveCAN::ODriveCAN(ODriveCAN::Config_t&, __CAN_HandleTypeDef*)>
 8010f2e:	4b82      	ldr	r3, [pc, #520]	@ (8011138 <construct_objects+0x304>)
 8010f30:	4a82      	ldr	r2, [pc, #520]	@ (801113c <construct_objects+0x308>)
 8010f32:	f8df b234 	ldr.w	fp, [pc, #564]	@ 8011168 <construct_objects+0x334>
 8010f36:	601d      	str	r5, [r3, #0]
 8010f38:	4b81      	ldr	r3, [pc, #516]	@ (8011140 <construct_objects+0x30c>)
 8010f3a:	920a      	str	r2, [sp, #40]	@ 0x28
 8010f3c:	4c81      	ldr	r4, [pc, #516]	@ (8011144 <construct_objects+0x310>)
 8010f3e:	4a82      	ldr	r2, [pc, #520]	@ (8011148 <construct_objects+0x314>)
 8010f40:	4f82      	ldr	r7, [pc, #520]	@ (801114c <construct_objects+0x318>)
 8010f42:	f8df a228 	ldr.w	sl, [pc, #552]	@ 801116c <construct_objects+0x338>
 8010f46:	920b      	str	r2, [sp, #44]	@ 0x2c
 8010f48:	46d8      	mov	r8, fp
 8010f4a:	2600      	movs	r6, #0
 8010f4c:	469b      	mov	fp, r3
 8010f4e:	2080      	movs	r0, #128	@ 0x80
 8010f50:	f011 fbed 	bl	802272e <operator new(unsigned int)>
 8010f54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010f56:	900c      	str	r0, [sp, #48]	@ 0x30
 8010f58:	463b      	mov	r3, r7
 8010f5a:	f104 0108 	add.w	r1, r4, #8
 8010f5e:	f7fe f88f 	bl	800f080 <Encoder::Encoder(EncoderHardwareConfig_t const&, Encoder::Config_t&, Motor::Config_t const&)>
 8010f62:	2034      	movs	r0, #52	@ 0x34
 8010f64:	f011 fbe3 	bl	802272e <operator new(unsigned int)>
 8010f68:	4275      	negs	r5, r6
 8010f6a:	4b79      	ldr	r3, [pc, #484]	@ (8011150 <construct_objects+0x31c>)
 8010f6c:	9012      	str	r0, [sp, #72]	@ 0x48
 8010f6e:	f005 090c 	and.w	r9, r5, #12
 8010f72:	eb03 0109 	add.w	r1, r3, r9
 8010f76:	f7ff fcb1 	bl	80108dc <SensorlessEstimator::SensorlessEstimator(SensorlessEstimator::Config_t&)>
 8010f7a:	2058      	movs	r0, #88	@ 0x58
 8010f7c:	f011 fbd7 	bl	802272e <operator new(unsigned int)>
 8010f80:	f643 03a4 	movw	r3, #14500	@ 0x38a4
 8010f84:	ea05 0103 	and.w	r1, r5, r3
 8010f88:	4d72      	ldr	r5, [pc, #456]	@ (8011154 <construct_objects+0x320>)
 8010f8a:	9111      	str	r1, [sp, #68]	@ 0x44
 8010f8c:	1869      	adds	r1, r5, r1
 8010f8e:	900d      	str	r0, [sp, #52]	@ 0x34
 8010f90:	f7ff f8aa 	bl	80100e8 <Controller::Controller(Controller::Config_t&)>
 8010f94:	202c      	movs	r0, #44	@ 0x2c
 8010f96:	f011 fbca 	bl	802272e <operator new(unsigned int)>
 8010f9a:	4d6f      	ldr	r5, [pc, #444]	@ (8011158 <construct_objects+0x324>)
 8010f9c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8010f9e:	eb05 0209 	add.w	r2, r5, r9
 8010fa2:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8010fa6:	f7fd ffdb 	bl	800ef60 <OnboardThermistorCurrentLimiter::OnboardThermistorCurrentLimiter(ThermistorHardwareConfig_t const&, OnboardThermistorCurrentLimiter::Config_t&)>
 8010faa:	202c      	movs	r0, #44	@ 0x2c
 8010fac:	f011 fbbf 	bl	802272e <operator new(unsigned int)>
 8010fb0:	4659      	mov	r1, fp
 8010fb2:	900e      	str	r0, [sp, #56]	@ 0x38
 8010fb4:	f7fe f824 	bl	800f000 <OffboardThermistorCurrentLimiter::OffboardThermistorCurrentLimiter(OffboardThermistorCurrentLimiter::Config_t&)>
 8010fb8:	20ec      	movs	r0, #236	@ 0xec
 8010fba:	f011 fbb8 	bl	802272e <operator new(unsigned int)>
 8010fbe:	463b      	mov	r3, r7
 8010fc0:	f104 0248 	add.w	r2, r4, #72	@ 0x48
 8010fc4:	f104 0130 	add.w	r1, r4, #48	@ 0x30
 8010fc8:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010fca:	f7fd f8c7 	bl	800e15c <Motor::Motor(MotorHardwareConfig_t const&, GateDriverHardwareConfig_t const&, Motor::Config_t&)>
 8010fce:	2038      	movs	r0, #56	@ 0x38
 8010fd0:	f011 fbad 	bl	802272e <operator new(unsigned int)>
 8010fd4:	4961      	ldr	r1, [pc, #388]	@ (801115c <construct_objects+0x328>)
 8010fd6:	4449      	add	r1, r9
 8010fd8:	4605      	mov	r5, r0
 8010fda:	f7ff fd97 	bl	8010b0c <TrapezoidalTrajectory::TrapezoidalTrajectory(TrapezoidalTrajectory::Config_t&)>
 8010fde:	2020      	movs	r0, #32
 8010fe0:	f011 fba5 	bl	802272e <operator new(unsigned int)>
 8010fe4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8010fe6:	9010      	str	r0, [sp, #64]	@ 0x40
 8010fe8:	f7ff f840 	bl	801006c <Endstop::Endstop(Endstop::Config_t&)>
 8010fec:	2020      	movs	r0, #32
 8010fee:	f011 fb9e 	bl	802272e <operator new(unsigned int)>
 8010ff2:	4641      	mov	r1, r8
 8010ff4:	4681      	mov	r9, r0
 8010ff6:	f7ff f839 	bl	801006c <Endstop::Endstop(Endstop::Config_t&)>
 8010ffa:	208c      	movs	r0, #140	@ 0x8c
 8010ffc:	f011 fb97 	bl	802272e <operator new(unsigned int)>
 8011000:	9506      	str	r5, [sp, #24]
 8011002:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011004:	9503      	str	r5, [sp, #12]
 8011006:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8011008:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801100a:	9501      	str	r5, [sp, #4]
 801100c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801100e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011010:	9307      	str	r3, [sp, #28]
 8011012:	9505      	str	r5, [sp, #20]
 8011014:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8011016:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8011018:	9504      	str	r5, [sp, #16]
 801101a:	9302      	str	r3, [sp, #8]
 801101c:	9200      	str	r2, [sp, #0]
 801101e:	f8cd 9020 	str.w	r9, [sp, #32]
 8011022:	4653      	mov	r3, sl
 8011024:	4622      	mov	r2, r4
 8011026:	4631      	mov	r1, r6
 8011028:	4605      	mov	r5, r0
 801102a:	f7fc f847 	bl	800d0bc <Axis::Axis(int, AxisHardwareConfig_t const&, Axis::Config_t&, Encoder&, SensorlessEstimator&, Controller&, OnboardThermistorCurrentLimiter&, OffboardThermistorCurrentLimiter&, Motor&, TrapezoidalTrajectory&, Endstop&, Endstop&)>
 801102e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8011030:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011032:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8011034:	634a      	str	r2, [r1, #52]	@ 0x34
 8011036:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011038:	f8cb 0020 	str.w	r0, [fp, #32]
 801103c:	65ba      	str	r2, [r7, #88]	@ 0x58
 801103e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8011040:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011042:	6103      	str	r3, [r0, #16]
 8011044:	460a      	mov	r2, r1
 8011046:	3238      	adds	r2, #56	@ 0x38
 8011048:	4b45      	ldr	r3, [pc, #276]	@ (8011160 <construct_objects+0x32c>)
 801104a:	920a      	str	r2, [sp, #40]	@ 0x28
 801104c:	4602      	mov	r2, r0
 801104e:	3214      	adds	r2, #20
 8011050:	f843 5026 	str.w	r5, [r3, r6, lsl #2]
 8011054:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8011056:	920b      	str	r2, [sp, #44]	@ 0x2c
 8011058:	1c73      	adds	r3, r6, #1
 801105a:	4a42      	ldr	r2, [pc, #264]	@ (8011164 <construct_objects+0x330>)
 801105c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801105e:	f8c8 9010 	str.w	r9, [r8, #16]
 8011062:	2b02      	cmp	r3, #2
 8011064:	f8ca 507c 	str.w	r5, [sl, #124]	@ 0x7c
 8011068:	5050      	str	r0, [r2, r1]
 801106a:	f104 0464 	add.w	r4, r4, #100	@ 0x64
 801106e:	f107 075c 	add.w	r7, r7, #92	@ 0x5c
 8011072:	f10b 0b24 	add.w	fp, fp, #36	@ 0x24
 8011076:	f108 0814 	add.w	r8, r8, #20
 801107a:	f10a 0a80 	add.w	sl, sl, #128	@ 0x80
 801107e:	f04f 0601 	mov.w	r6, #1
 8011082:	f47f af64 	bne.w	8010f4e <construct_objects+0x11a>
 8011086:	2000      	movs	r0, #0
 8011088:	b01b      	add	sp, #108	@ 0x6c
 801108a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801108e:	f7f5 f947 	bl	8006320 <MX_CAN1_Init>
 8011092:	ac14      	add	r4, sp, #80	@ 0x50
 8011094:	e718      	b.n	8010ec8 <construct_objects+0x94>
 8011096:	211c      	movs	r1, #28
 8011098:	4628      	mov	r0, r5
 801109a:	f010 fef3 	bl	8021e84 <operator delete(void*, unsigned int)>
 801109e:	f010 fff3 	bl	8022088 <__cxa_end_cleanup>
 80110a2:	218c      	movs	r1, #140	@ 0x8c
 80110a4:	4628      	mov	r0, r5
 80110a6:	f010 feed 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110aa:	f010 ffed 	bl	8022088 <__cxa_end_cleanup>
 80110ae:	2120      	movs	r1, #32
 80110b0:	4648      	mov	r0, r9
 80110b2:	f010 fee7 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110b6:	f010 ffe7 	bl	8022088 <__cxa_end_cleanup>
 80110ba:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80110bc:	2120      	movs	r1, #32
 80110be:	f010 fee1 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110c2:	f010 ffe1 	bl	8022088 <__cxa_end_cleanup>
 80110c6:	2138      	movs	r1, #56	@ 0x38
 80110c8:	4628      	mov	r0, r5
 80110ca:	f010 fedb 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110ce:	f010 ffdb 	bl	8022088 <__cxa_end_cleanup>
 80110d2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80110d4:	21ec      	movs	r1, #236	@ 0xec
 80110d6:	f010 fed5 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110da:	f010 ffd5 	bl	8022088 <__cxa_end_cleanup>
 80110de:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80110e0:	212c      	movs	r1, #44	@ 0x2c
 80110e2:	f010 fecf 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110e6:	f010 ffcf 	bl	8022088 <__cxa_end_cleanup>
 80110ea:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80110ec:	212c      	movs	r1, #44	@ 0x2c
 80110ee:	f010 fec9 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110f2:	f010 ffc9 	bl	8022088 <__cxa_end_cleanup>
 80110f6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80110f8:	2158      	movs	r1, #88	@ 0x58
 80110fa:	f010 fec3 	bl	8021e84 <operator delete(void*, unsigned int)>
 80110fe:	f010 ffc3 	bl	8022088 <__cxa_end_cleanup>
 8011102:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8011104:	2134      	movs	r1, #52	@ 0x34
 8011106:	f010 febd 	bl	8021e84 <operator delete(void*, unsigned int)>
 801110a:	f010 ffbd 	bl	8022088 <__cxa_end_cleanup>
 801110e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8011110:	2180      	movs	r1, #128	@ 0x80
 8011112:	f010 feb7 	bl	8021e84 <operator delete(void*, unsigned int)>
 8011116:	f010 ffb7 	bl	8022088 <__cxa_end_cleanup>
 801111a:	bf00      	nop
 801111c:	20001840 	.word	0x20001840
 8011120:	40020000 	.word	0x40020000
 8011124:	40020800 	.word	0x40020800
 8011128:	2000d54c 	.word	0x2000d54c
 801112c:	20000de0 	.word	0x20000de0
 8011130:	2000149c 	.word	0x2000149c
 8011134:	200003f4 	.word	0x200003f4
 8011138:	200019c8 	.word	0x200019c8
 801113c:	20000384 	.word	0x20000384
 8011140:	20001ad4 	.word	0x20001ad4
 8011144:	0802af64 	.word	0x0802af64
 8011148:	2000025c 	.word	0x2000025c
 801114c:	200002b4 	.word	0x200002b4
 8011150:	2000036c 	.word	0x2000036c
 8011154:	20001b1c 	.word	0x20001b1c
 8011158:	2000029c 	.word	0x2000029c
 801115c:	20000284 	.word	0x20000284
 8011160:	200019cc 	.word	0x200019cc
 8011164:	200053bc 	.word	0x200053bc
 8011168:	20000234 	.word	0x20000234
 801116c:	200019d4 	.word	0x200019d4

08011170 <vApplicationStackOverflowHook>:
 8011170:	b510      	push	{r4, lr}
 8011172:	4c06      	ldr	r4, [pc, #24]	@ (801118c <vApplicationStackOverflowHook+0x1c>)
 8011174:	6823      	ldr	r3, [r4, #0]
 8011176:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8011178:	f7fa fd52 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 801117c:	6863      	ldr	r3, [r4, #4]
 801117e:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 8011180:	f7fa fd4e 	bl	800bc20 <safety_critical_disarm_motor_pwm>
 8011184:	f7fa fdb4 	bl	800bcf0 <safety_critical_disarm_brake_resistor>
 8011188:	e7fe      	b.n	8011188 <vApplicationStackOverflowHook+0x18>
 801118a:	bf00      	nop
 801118c:	200019cc 	.word	0x200019cc

08011190 <vApplicationIdleHook>:
 8011190:	b570      	push	{r4, r5, r6, lr}
 8011192:	4c33      	ldr	r4, [pc, #204]	@ (8011260 <vApplicationIdleHook+0xd0>)
 8011194:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8011198:	b903      	cbnz	r3, 801119c <vApplicationIdleHook+0xc>
 801119a:	bd70      	pop	{r4, r5, r6, pc}
 801119c:	f7f7 fb24 	bl	80087e8 <xTaskGetTickCount>
 80111a0:	6460      	str	r0, [r4, #68]	@ 0x44
 80111a2:	f7f3 fc51 	bl	8004a48 <xPortGetMinimumEverFreeHeapSize>
 80111a6:	4b2f      	ldr	r3, [pc, #188]	@ (8011264 <vApplicationIdleHook+0xd4>)
 80111a8:	64a0      	str	r0, [r4, #72]	@ 0x48
 80111aa:	6818      	ldr	r0, [r3, #0]
 80111ac:	4d2e      	ldr	r5, [pc, #184]	@ (8011268 <vApplicationIdleHook+0xd8>)
 80111ae:	4e2f      	ldr	r6, [pc, #188]	@ (801126c <vApplicationIdleHook+0xdc>)
 80111b0:	f7f7 fdfe 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111b4:	682b      	ldr	r3, [r5, #0]
 80111b6:	0080      	lsls	r0, r0, #2
 80111b8:	6560      	str	r0, [r4, #84]	@ 0x54
 80111ba:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80111bc:	f7f7 fdf8 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111c0:	686b      	ldr	r3, [r5, #4]
 80111c2:	0080      	lsls	r0, r0, #2
 80111c4:	64e0      	str	r0, [r4, #76]	@ 0x4c
 80111c6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80111c8:	f7f7 fdf2 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111cc:	4a28      	ldr	r2, [pc, #160]	@ (8011270 <vApplicationIdleHook+0xe0>)
 80111ce:	0083      	lsls	r3, r0, #2
 80111d0:	6810      	ldr	r0, [r2, #0]
 80111d2:	6523      	str	r3, [r4, #80]	@ 0x50
 80111d4:	f7f7 fdec 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111d8:	4a26      	ldr	r2, [pc, #152]	@ (8011274 <vApplicationIdleHook+0xe4>)
 80111da:	0083      	lsls	r3, r0, #2
 80111dc:	6810      	ldr	r0, [r2, #0]
 80111de:	65a3      	str	r3, [r4, #88]	@ 0x58
 80111e0:	f7f7 fde6 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111e4:	4a24      	ldr	r2, [pc, #144]	@ (8011278 <vApplicationIdleHook+0xe8>)
 80111e6:	0083      	lsls	r3, r0, #2
 80111e8:	6810      	ldr	r0, [r2, #0]
 80111ea:	65e3      	str	r3, [r4, #92]	@ 0x5c
 80111ec:	f7f7 fde0 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111f0:	4a22      	ldr	r2, [pc, #136]	@ (801127c <vApplicationIdleHook+0xec>)
 80111f2:	0083      	lsls	r3, r0, #2
 80111f4:	6810      	ldr	r0, [r2, #0]
 80111f6:	6623      	str	r3, [r4, #96]	@ 0x60
 80111f8:	f7f7 fdda 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 80111fc:	6833      	ldr	r3, [r6, #0]
 80111fe:	0080      	lsls	r0, r0, #2
 8011200:	6660      	str	r0, [r4, #100]	@ 0x64
 8011202:	6898      	ldr	r0, [r3, #8]
 8011204:	f7f7 fdd4 	bl	8008db0 <uxTaskGetStackHighWaterMark>
 8011208:	6833      	ldr	r3, [r6, #0]
 801120a:	e9d5 1200 	ldrd	r1, r2, [r5]
 801120e:	68db      	ldr	r3, [r3, #12]
 8011210:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8011212:	6d65      	ldr	r5, [r4, #84]	@ 0x54
 8011214:	0080      	lsls	r0, r0, #2
 8011216:	1a1b      	subs	r3, r3, r0
 8011218:	66a0      	str	r0, [r4, #104]	@ 0x68
 801121a:	6c88      	ldr	r0, [r1, #72]	@ 0x48
 801121c:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 801121e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
 8011222:	4b17      	ldr	r3, [pc, #92]	@ (8011280 <vApplicationIdleHook+0xf0>)
 8011224:	1a40      	subs	r0, r0, r1
 8011226:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8011228:	681b      	ldr	r3, [r3, #0]
 801122a:	1a52      	subs	r2, r2, r1
 801122c:	4915      	ldr	r1, [pc, #84]	@ (8011284 <vApplicationIdleHook+0xf4>)
 801122e:	1b5b      	subs	r3, r3, r5
 8011230:	e9c4 021b 	strd	r0, r2, [r4, #108]	@ 0x6c
 8011234:	6809      	ldr	r1, [r1, #0]
 8011236:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8011238:	6763      	str	r3, [r4, #116]	@ 0x74
 801123a:	4b13      	ldr	r3, [pc, #76]	@ (8011288 <vApplicationIdleHook+0xf8>)
 801123c:	4a13      	ldr	r2, [pc, #76]	@ (801128c <vApplicationIdleHook+0xfc>)
 801123e:	681b      	ldr	r3, [r3, #0]
 8011240:	4d13      	ldr	r5, [pc, #76]	@ (8011290 <vApplicationIdleHook+0x100>)
 8011242:	6812      	ldr	r2, [r2, #0]
 8011244:	1a08      	subs	r0, r1, r0
 8011246:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
 8011248:	1a59      	subs	r1, r3, r1
 801124a:	e9c4 011e 	strd	r0, r1, [r4, #120]	@ 0x78
 801124e:	e9d4 0118 	ldrd	r0, r1, [r4, #96]	@ 0x60
 8011252:	682b      	ldr	r3, [r5, #0]
 8011254:	1a12      	subs	r2, r2, r0
 8011256:	1a5b      	subs	r3, r3, r1
 8011258:	e9c4 2320 	strd	r2, r3, [r4, #128]	@ 0x80
 801125c:	bd70      	pop	{r4, r5, r6, pc}
 801125e:	bf00      	nop
 8011260:	20001840 	.word	0x20001840
 8011264:	2000ce58 	.word	0x2000ce58
 8011268:	200019cc 	.word	0x200019cc
 801126c:	200019c8 	.word	0x200019c8
 8011270:	2000d41c 	.word	0x2000d41c
 8011274:	2000d37c 	.word	0x2000d37c
 8011278:	200007f8 	.word	0x200007f8
 801127c:	200007f4 	.word	0x200007f4
 8011280:	08035518 	.word	0x08035518
 8011284:	08036e70 	.word	0x08036e70
 8011288:	08036df4 	.word	0x08036df4
 801128c:	0802abd0 	.word	0x0802abd0
 8011290:	0802abcc 	.word	0x0802abcc

08011294 <odrive_main>:
 8011294:	b538      	push	{r3, r4, r5, lr}
 8011296:	4d23      	ldr	r5, [pc, #140]	@ (8011324 <odrive_main+0x90>)
 8011298:	f7fa feac 	bl	800bff4 <start_general_purpose_adc>
 801129c:	f895 3094 	ldrb.w	r3, [r5, #148]	@ 0x94
 80112a0:	2b00      	cmp	r3, #0
 80112a2:	d135      	bne.n	8011310 <odrive_main+0x7c>
 80112a4:	4c20      	ldr	r4, [pc, #128]	@ (8011328 <odrive_main+0x94>)
 80112a6:	f002 fecf 	bl	8014048 <init_communication>
 80112aa:	f7fb fa93 	bl	800c7d4 <pwm_in_init>
 80112ae:	6823      	ldr	r3, [r4, #0]
 80112b0:	6918      	ldr	r0, [r3, #16]
 80112b2:	68c3      	ldr	r3, [r0, #12]
 80112b4:	881b      	ldrh	r3, [r3, #0]
 80112b6:	05da      	lsls	r2, r3, #23
 80112b8:	d430      	bmi.n	801131c <odrive_main+0x88>
 80112ba:	6863      	ldr	r3, [r4, #4]
 80112bc:	6918      	ldr	r0, [r3, #16]
 80112be:	68c3      	ldr	r3, [r0, #12]
 80112c0:	881b      	ldrh	r3, [r3, #0]
 80112c2:	05db      	lsls	r3, r3, #23
 80112c4:	d427      	bmi.n	8011316 <odrive_main+0x82>
 80112c6:	6823      	ldr	r3, [r4, #0]
 80112c8:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 80112ca:	f7fc ffe5 	bl	800e298 <Motor::DRV8301_setup()>
 80112ce:	6823      	ldr	r3, [r4, #0]
 80112d0:	6918      	ldr	r0, [r3, #16]
 80112d2:	f7fe fbed 	bl	800fab0 <Encoder::setup()>
 80112d6:	6863      	ldr	r3, [r4, #4]
 80112d8:	6918      	ldr	r0, [r3, #16]
 80112da:	f7fe fbe9 	bl	800fab0 <Encoder::setup()>
 80112de:	6820      	ldr	r0, [r4, #0]
 80112e0:	f7fb fe4e 	bl	800cf80 <Axis::setup()>
 80112e4:	6860      	ldr	r0, [r4, #4]
 80112e6:	f7fb fe4b 	bl	800cf80 <Axis::setup()>
 80112ea:	f7fa fdd3 	bl	800be94 <start_adc_pwm>
 80112ee:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 80112f2:	f7f6 fb99 	bl	8007a28 <osDelay>
 80112f6:	6820      	ldr	r0, [r4, #0]
 80112f8:	f7fb fe44 	bl	800cf84 <Axis::start_thread()>
 80112fc:	6860      	ldr	r0, [r4, #4]
 80112fe:	f7fb fe41 	bl	800cf84 <Axis::start_thread()>
 8011302:	f7fb fb25 	bl	800c950 <start_analog_thread>
 8011306:	2301      	movs	r3, #1
 8011308:	2000      	movs	r0, #0
 801130a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
 801130e:	bd38      	pop	{r3, r4, r5, pc}
 8011310:	f7f7 f824 	bl	800835c <SetGPIO12toUART>
 8011314:	e7c6      	b.n	80112a4 <odrive_main+0x10>
 8011316:	f7fe fb85 	bl	800fa24 <Encoder::abs_spi_cs_pin_init()>
 801131a:	e7d4      	b.n	80112c6 <odrive_main+0x32>
 801131c:	f7fe fb82 	bl	800fa24 <Encoder::abs_spi_cs_pin_init()>
 8011320:	e7cb      	b.n	80112ba <odrive_main+0x26>
 8011322:	bf00      	nop
 8011324:	20001840 	.word	0x20001840
 8011328:	200019cc 	.word	0x200019cc

0801132c <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])>:
 801132c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011330:	b085      	sub	sp, #20
 8011332:	460c      	mov	r4, r1
 8011334:	461e      	mov	r6, r3
 8011336:	e9dd 890f 	ldrd	r8, r9, [sp, #60]	@ 0x3c
 801133a:	e9dd ab11 	ldrd	sl, fp, [sp, #68]	@ 0x44
 801133e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8011340:	9001      	str	r0, [sp, #4]
 8011342:	4615      	mov	r5, r2
 8011344:	f7fb fc58 	bl	800cbf8 <NVM_get_max_write_length>
 8011348:	f247 5345 	movw	r3, #30021	@ 0x7545
 801134c:	4298      	cmp	r0, r3
 801134e:	9901      	ldr	r1, [sp, #4]
 8011350:	f240 81cf 	bls.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011354:	f247 5046 	movw	r0, #30022	@ 0x7546
 8011358:	9101      	str	r1, [sp, #4]
 801135a:	f7fb fc87 	bl	800cc6c <NVM_start_write>
 801135e:	2800      	cmp	r0, #0
 8011360:	f040 81c7 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011364:	f64a 33cc 	movw	r3, #43980	@ 0xabcc
 8011368:	9901      	ldr	r1, [sp, #4]
 801136a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801136e:	22ec      	movs	r2, #236	@ 0xec
 8011370:	f7fb fcaa 	bl	800ccc8 <NVM_write>
 8011374:	2800      	cmp	r0, #0
 8011376:	f040 81bc 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 801137a:	9901      	ldr	r1, [sp, #4]
 801137c:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 8011380:	f101 0eec 	add.w	lr, r1, #236	@ 0xec
 8011384:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011388:	f811 3b01 	ldrb.w	r3, [r1], #1
 801138c:	ea8c 2c03 	eor.w	ip, ip, r3, lsl #8
 8011390:	2308      	movs	r3, #8
 8011392:	fa0f f28c 	sxth.w	r2, ip
 8011396:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801139a:	2a00      	cmp	r2, #0
 801139c:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 80113a0:	fa1f fc8c 	uxth.w	ip, ip
 80113a4:	bfb8      	it	lt
 80113a6:	ea8c 0c00 	eorlt.w	ip, ip, r0
 80113aa:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 80113ae:	d1f0      	bne.n	8011392 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x66>
 80113b0:	458e      	cmp	lr, r1
 80113b2:	d1e9      	bne.n	8011388 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x5c>
 80113b4:	2208      	movs	r2, #8
 80113b6:	4621      	mov	r1, r4
 80113b8:	20ec      	movs	r0, #236	@ 0xec
 80113ba:	f8ad c00e 	strh.w	ip, [sp, #14]
 80113be:	f7fb fc83 	bl	800ccc8 <NVM_write>
 80113c2:	2800      	cmp	r0, #0
 80113c4:	f040 8195 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80113c8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80113cc:	f104 0c08 	add.w	ip, r4, #8
 80113d0:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80113d4:	f814 2b01 	ldrb.w	r2, [r4], #1
 80113d8:	ea83 2302 	eor.w	r3, r3, r2, lsl #8
 80113dc:	2208      	movs	r2, #8
 80113de:	b219      	sxth	r1, r3
 80113e0:	005b      	lsls	r3, r3, #1
 80113e2:	2900      	cmp	r1, #0
 80113e4:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80113e8:	b29b      	uxth	r3, r3
 80113ea:	bfb8      	it	lt
 80113ec:	4043      	eorlt	r3, r0
 80113ee:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80113f2:	d1f4      	bne.n	80113de <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0xb2>
 80113f4:	4564      	cmp	r4, ip
 80113f6:	d1ed      	bne.n	80113d4 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0xa8>
 80113f8:	2270      	movs	r2, #112	@ 0x70
 80113fa:	4629      	mov	r1, r5
 80113fc:	20f4      	movs	r0, #244	@ 0xf4
 80113fe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011402:	f7fb fc61 	bl	800ccc8 <NVM_write>
 8011406:	2800      	cmp	r0, #0
 8011408:	f040 8173 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 801140c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011410:	f105 0470 	add.w	r4, r5, #112	@ 0x70
 8011414:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011418:	f815 2b01 	ldrb.w	r2, [r5], #1
 801141c:	ea83 2302 	eor.w	r3, r3, r2, lsl #8
 8011420:	2208      	movs	r2, #8
 8011422:	b219      	sxth	r1, r3
 8011424:	005b      	lsls	r3, r3, #1
 8011426:	2900      	cmp	r1, #0
 8011428:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 801142c:	b29b      	uxth	r3, r3
 801142e:	bfb8      	it	lt
 8011430:	4043      	eorlt	r3, r0
 8011432:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011436:	d1f4      	bne.n	8011422 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0xf6>
 8011438:	42a5      	cmp	r5, r4
 801143a:	d1ed      	bne.n	8011418 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0xec>
 801143c:	2218      	movs	r2, #24
 801143e:	4631      	mov	r1, r6
 8011440:	f44f 70b2 	mov.w	r0, #356	@ 0x164
 8011444:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011448:	f7fb fc3e 	bl	800ccc8 <NVM_write>
 801144c:	2800      	cmp	r0, #0
 801144e:	f040 8150 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011452:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011456:	f106 0418 	add.w	r4, r6, #24
 801145a:	f643 5065 	movw	r0, #15717	@ 0x3d65
 801145e:	f816 2b01 	ldrb.w	r2, [r6], #1
 8011462:	ea83 2302 	eor.w	r3, r3, r2, lsl #8
 8011466:	2208      	movs	r2, #8
 8011468:	b219      	sxth	r1, r3
 801146a:	005b      	lsls	r3, r3, #1
 801146c:	2900      	cmp	r1, #0
 801146e:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011472:	b29b      	uxth	r3, r3
 8011474:	bfb8      	it	lt
 8011476:	4043      	eorlt	r3, r0
 8011478:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801147c:	d1f4      	bne.n	8011468 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x13c>
 801147e:	42a6      	cmp	r6, r4
 8011480:	d1ed      	bne.n	801145e <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x132>
 8011482:	f247 1248 	movw	r2, #29000	@ 0x7148
 8011486:	4639      	mov	r1, r7
 8011488:	f44f 70be 	mov.w	r0, #380	@ 0x17c
 801148c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011490:	f7fb fc1a 	bl	800ccc8 <NVM_write>
 8011494:	2800      	cmp	r0, #0
 8011496:	f040 812c 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 801149a:	f507 44e2 	add.w	r4, r7, #28928	@ 0x7100
 801149e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80114a2:	3448      	adds	r4, #72	@ 0x48
 80114a4:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80114a8:	f817 2b01 	ldrb.w	r2, [r7], #1
 80114ac:	ea83 2302 	eor.w	r3, r3, r2, lsl #8
 80114b0:	2208      	movs	r2, #8
 80114b2:	b219      	sxth	r1, r3
 80114b4:	005b      	lsls	r3, r3, #1
 80114b6:	2900      	cmp	r1, #0
 80114b8:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80114bc:	b29b      	uxth	r3, r3
 80114be:	bfb8      	it	lt
 80114c0:	4043      	eorlt	r3, r0
 80114c2:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80114c6:	d1f4      	bne.n	80114b2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x186>
 80114c8:	42a7      	cmp	r7, r4
 80114ca:	d1ed      	bne.n	80114a8 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x17c>
 80114cc:	22b8      	movs	r2, #184	@ 0xb8
 80114ce:	4641      	mov	r1, r8
 80114d0:	f247 20c4 	movw	r0, #29380	@ 0x72c4
 80114d4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80114d8:	f7fb fbf6 	bl	800ccc8 <NVM_write>
 80114dc:	2800      	cmp	r0, #0
 80114de:	f040 8108 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80114e2:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80114e6:	f108 04b8 	add.w	r4, r8, #184	@ 0xb8
 80114ea:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80114ee:	f818 1b01 	ldrb.w	r1, [r8], #1
 80114f2:	2208      	movs	r2, #8
 80114f4:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 80114f8:	b219      	sxth	r1, r3
 80114fa:	005b      	lsls	r3, r3, #1
 80114fc:	2900      	cmp	r1, #0
 80114fe:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011502:	b29b      	uxth	r3, r3
 8011504:	bfb8      	it	lt
 8011506:	4043      	eorlt	r3, r0
 8011508:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801150c:	d1f4      	bne.n	80114f8 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x1cc>
 801150e:	45a0      	cmp	r8, r4
 8011510:	d1ed      	bne.n	80114ee <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x1c2>
 8011512:	2218      	movs	r2, #24
 8011514:	4649      	mov	r1, r9
 8011516:	f247 307c 	movw	r0, #29564	@ 0x737c
 801151a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801151e:	f7fb fbd3 	bl	800ccc8 <NVM_write>
 8011522:	2800      	cmp	r0, #0
 8011524:	f040 80e5 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011528:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801152c:	f109 0418 	add.w	r4, r9, #24
 8011530:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011534:	f819 1b01 	ldrb.w	r1, [r9], #1
 8011538:	2208      	movs	r2, #8
 801153a:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 801153e:	b219      	sxth	r1, r3
 8011540:	005b      	lsls	r3, r3, #1
 8011542:	2900      	cmp	r1, #0
 8011544:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011548:	b29b      	uxth	r3, r3
 801154a:	bfb8      	it	lt
 801154c:	4043      	eorlt	r3, r0
 801154e:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011552:	d1f4      	bne.n	801153e <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x212>
 8011554:	45a1      	cmp	r9, r4
 8011556:	d1ed      	bne.n	8011534 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x208>
 8011558:	2248      	movs	r2, #72	@ 0x48
 801155a:	4651      	mov	r1, sl
 801155c:	f247 3094 	movw	r0, #29588	@ 0x7394
 8011560:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011564:	f7fb fbb0 	bl	800ccc8 <NVM_write>
 8011568:	2800      	cmp	r0, #0
 801156a:	f040 80c2 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 801156e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011572:	f10a 0448 	add.w	r4, sl, #72	@ 0x48
 8011576:	f643 5065 	movw	r0, #15717	@ 0x3d65
 801157a:	f81a 1b01 	ldrb.w	r1, [sl], #1
 801157e:	2208      	movs	r2, #8
 8011580:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 8011584:	b219      	sxth	r1, r3
 8011586:	005b      	lsls	r3, r3, #1
 8011588:	2900      	cmp	r1, #0
 801158a:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 801158e:	b29b      	uxth	r3, r3
 8011590:	bfb8      	it	lt
 8011592:	4043      	eorlt	r3, r0
 8011594:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011598:	d1f4      	bne.n	8011584 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x258>
 801159a:	45a2      	cmp	sl, r4
 801159c:	d1ed      	bne.n	801157a <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x24e>
 801159e:	2218      	movs	r2, #24
 80115a0:	4659      	mov	r1, fp
 80115a2:	f247 30dc 	movw	r0, #29660	@ 0x73dc
 80115a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80115aa:	f7fb fb8d 	bl	800ccc8 <NVM_write>
 80115ae:	2800      	cmp	r0, #0
 80115b0:	f040 809f 	bne.w	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80115b4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80115b8:	f10b 0418 	add.w	r4, fp, #24
 80115bc:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80115c0:	f81b 1b01 	ldrb.w	r1, [fp], #1
 80115c4:	2208      	movs	r2, #8
 80115c6:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 80115ca:	b219      	sxth	r1, r3
 80115cc:	005b      	lsls	r3, r3, #1
 80115ce:	2900      	cmp	r1, #0
 80115d0:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80115d4:	b29b      	uxth	r3, r3
 80115d6:	bfb8      	it	lt
 80115d8:	4043      	eorlt	r3, r0
 80115da:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80115de:	d1f4      	bne.n	80115ca <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x29e>
 80115e0:	45a3      	cmp	fp, r4
 80115e2:	d1ed      	bne.n	80115c0 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x294>
 80115e4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80115e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80115ea:	2228      	movs	r2, #40	@ 0x28
 80115ec:	f247 30f4 	movw	r0, #29684	@ 0x73f4
 80115f0:	f7fb fb6a 	bl	800ccc8 <NVM_write>
 80115f4:	2800      	cmp	r0, #0
 80115f6:	d17c      	bne.n	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80115f8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80115fa:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80115fe:	f102 0428 	add.w	r4, r2, #40	@ 0x28
 8011602:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011606:	4615      	mov	r5, r2
 8011608:	f815 1b01 	ldrb.w	r1, [r5], #1
 801160c:	2208      	movs	r2, #8
 801160e:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 8011612:	b219      	sxth	r1, r3
 8011614:	005b      	lsls	r3, r3, #1
 8011616:	2900      	cmp	r1, #0
 8011618:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 801161c:	b29b      	uxth	r3, r3
 801161e:	bfb8      	it	lt
 8011620:	4043      	eorlt	r3, r0
 8011622:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011626:	d1f4      	bne.n	8011612 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x2e6>
 8011628:	42a5      	cmp	r5, r4
 801162a:	d1ed      	bne.n	8011608 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x2dc>
 801162c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801162e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011632:	2228      	movs	r2, #40	@ 0x28
 8011634:	f247 401c 	movw	r0, #29724	@ 0x741c
 8011638:	f7fb fb46 	bl	800ccc8 <NVM_write>
 801163c:	2800      	cmp	r0, #0
 801163e:	d158      	bne.n	80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011640:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8011642:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011646:	f102 0428 	add.w	r4, r2, #40	@ 0x28
 801164a:	f643 5065 	movw	r0, #15717	@ 0x3d65
 801164e:	4615      	mov	r5, r2
 8011650:	f815 1b01 	ldrb.w	r1, [r5], #1
 8011654:	2208      	movs	r2, #8
 8011656:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 801165a:	b219      	sxth	r1, r3
 801165c:	005b      	lsls	r3, r3, #1
 801165e:	2900      	cmp	r1, #0
 8011660:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011664:	b29b      	uxth	r3, r3
 8011666:	bfb8      	it	lt
 8011668:	4043      	eorlt	r3, r0
 801166a:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801166e:	d1f4      	bne.n	801165a <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x32e>
 8011670:	42a5      	cmp	r5, r4
 8011672:	d1ed      	bne.n	8011650 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x324>
 8011674:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8011676:	f8ad 300e 	strh.w	r3, [sp, #14]
 801167a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801167e:	f247 4044 	movw	r0, #29764	@ 0x7444
 8011682:	f7fb fb21 	bl	800ccc8 <NVM_write>
 8011686:	bba0      	cbnz	r0, 80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 8011688:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801168a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801168e:	f502 7480 	add.w	r4, r2, #256	@ 0x100
 8011692:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011696:	4615      	mov	r5, r2
 8011698:	f815 1b01 	ldrb.w	r1, [r5], #1
 801169c:	2208      	movs	r2, #8
 801169e:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 80116a2:	b219      	sxth	r1, r3
 80116a4:	005b      	lsls	r3, r3, #1
 80116a6:	2900      	cmp	r1, #0
 80116a8:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80116ac:	b29b      	uxth	r3, r3
 80116ae:	bfb8      	it	lt
 80116b0:	4043      	eorlt	r3, r0
 80116b2:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80116b6:	d1f4      	bne.n	80116a2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x376>
 80116b8:	42a5      	cmp	r5, r4
 80116ba:	d1ed      	bne.n	8011698 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x36c>
 80116bc:	2201      	movs	r2, #1
 80116be:	f10d 010f 	add.w	r1, sp, #15
 80116c2:	f247 5044 	movw	r0, #30020	@ 0x7544
 80116c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80116ca:	f7fb fafd 	bl	800ccc8 <NVM_write>
 80116ce:	b980      	cbnz	r0, 80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80116d0:	2201      	movs	r2, #1
 80116d2:	f10d 010e 	add.w	r1, sp, #14
 80116d6:	f247 5045 	movw	r0, #30021	@ 0x7545
 80116da:	f7fb faf5 	bl	800ccc8 <NVM_write>
 80116de:	b940      	cbnz	r0, 80116f2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])+0x3c6>
 80116e0:	f7fb fb76 	bl	800cdd0 <NVM_commit>
 80116e4:	3800      	subs	r0, #0
 80116e6:	bf18      	it	ne
 80116e8:	2001      	movne	r0, #1
 80116ea:	4240      	negs	r0, r0
 80116ec:	b005      	add	sp, #20
 80116ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116f2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80116f6:	b005      	add	sp, #20
 80116f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116fc <ODrive::save_configuration()>:
 80116fc:	b510      	push	{r4, lr}
 80116fe:	4a13      	ldr	r2, [pc, #76]	@ (801174c <ODrive::save_configuration()+0x50>)
 8011700:	4c13      	ldr	r4, [pc, #76]	@ (8011750 <ODrive::save_configuration()+0x54>)
 8011702:	4814      	ldr	r0, [pc, #80]	@ (8011754 <ODrive::save_configuration()+0x58>)
 8011704:	4b14      	ldr	r3, [pc, #80]	@ (8011758 <ODrive::save_configuration()+0x5c>)
 8011706:	4915      	ldr	r1, [pc, #84]	@ (801175c <ODrive::save_configuration()+0x60>)
 8011708:	b088      	sub	sp, #32
 801170a:	e9cd 2406 	strd	r2, r4, [sp, #24]
 801170e:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8011712:	4a13      	ldr	r2, [pc, #76]	@ (8011760 <ODrive::save_configuration()+0x64>)
 8011714:	4813      	ldr	r0, [pc, #76]	@ (8011764 <ODrive::save_configuration()+0x68>)
 8011716:	4c14      	ldr	r4, [pc, #80]	@ (8011768 <ODrive::save_configuration()+0x6c>)
 8011718:	4b14      	ldr	r3, [pc, #80]	@ (801176c <ODrive::save_configuration()+0x70>)
 801171a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801171e:	e9cd 0400 	strd	r0, r4, [sp]
 8011722:	4a13      	ldr	r2, [pc, #76]	@ (8011770 <ODrive::save_configuration()+0x74>)
 8011724:	4913      	ldr	r1, [pc, #76]	@ (8011774 <ODrive::save_configuration()+0x78>)
 8011726:	4814      	ldr	r0, [pc, #80]	@ (8011778 <ODrive::save_configuration()+0x7c>)
 8011728:	f7ff fe00 	bl	801132c <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_store_config(BoardConfig_t const*, ODriveCAN::Config_t const*, Encoder::Config_t const (*) [2], SensorlessEstimator::Config_t const (*) [2], Controller::Config_t const (*) [2], Motor::Config_t const (*) [2], OnboardThermistorCurrentLimiter::Config_t const (*) [2], OffboardThermistorCurrentLimiter::Config_t const (*) [2], TrapezoidalTrajectory::Config_t const (*) [2], Endstop::Config_t const (*) [2], Endstop::Config_t const (*) [2], Axis::Config_t const (*) [2])>
 801172c:	b928      	cbnz	r0, 801173a <ODrive::save_configuration()+0x3e>
 801172e:	4b13      	ldr	r3, [pc, #76]	@ (801177c <ODrive::save_configuration()+0x80>)
 8011730:	2201      	movs	r2, #1
 8011732:	f883 2180 	strb.w	r2, [r3, #384]	@ 0x180
 8011736:	b008      	add	sp, #32
 8011738:	bd10      	pop	{r4, pc}
 801173a:	4811      	ldr	r0, [pc, #68]	@ (8011780 <ODrive::save_configuration()+0x84>)
 801173c:	f012 fe26 	bl	802438c <puts>
 8011740:	2005      	movs	r0, #5
 8011742:	b008      	add	sp, #32
 8011744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011748:	f7f6 b96e 	b.w	8007a28 <osDelay>
 801174c:	20000234 	.word	0x20000234
 8011750:	200019d4 	.word	0x200019d4
 8011754:	2000025c 	.word	0x2000025c
 8011758:	20000284 	.word	0x20000284
 801175c:	20001ad4 	.word	0x20001ad4
 8011760:	2000029c 	.word	0x2000029c
 8011764:	20001b1c 	.word	0x20001b1c
 8011768:	200002b4 	.word	0x200002b4
 801176c:	2000036c 	.word	0x2000036c
 8011770:	20000384 	.word	0x20000384
 8011774:	200003f4 	.word	0x200003f4
 8011778:	200018d4 	.word	0x200018d4
 801177c:	20001840 	.word	0x20001840
 8011780:	08029710 	.word	0x08029710

08011784 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])>:
 8011784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011788:	b085      	sub	sp, #20
 801178a:	460d      	mov	r5, r1
 801178c:	4616      	mov	r6, r2
 801178e:	e9dd 9a0f 	ldrd	r9, sl, [sp, #60]	@ 0x3c
 8011792:	f8dd 8038 	ldr.w	r8, [sp, #56]	@ 0x38
 8011796:	9001      	str	r0, [sp, #4]
 8011798:	461f      	mov	r7, r3
 801179a:	e9dd b311 	ldrd	fp, r3, [sp, #68]	@ 0x44
 801179e:	f7fb fa25 	bl	800cbec <NVM_get_max_read_length>
 80117a2:	f247 5245 	movw	r2, #30021	@ 0x7545
 80117a6:	4290      	cmp	r0, r2
 80117a8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80117aa:	9901      	ldr	r1, [sp, #4]
 80117ac:	f240 81db 	bls.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 80117b0:	f64a 34cc 	movw	r4, #43980	@ 0xabcc
 80117b4:	22ec      	movs	r2, #236	@ 0xec
 80117b6:	2000      	movs	r0, #0
 80117b8:	9312      	str	r3, [sp, #72]	@ 0x48
 80117ba:	f8ad 400e 	strh.w	r4, [sp, #14]
 80117be:	9101      	str	r1, [sp, #4]
 80117c0:	f7fb fa2c 	bl	800cc1c <NVM_read>
 80117c4:	2800      	cmp	r0, #0
 80117c6:	f040 81ce 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 80117ca:	9901      	ldr	r1, [sp, #4]
 80117cc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80117ce:	f101 0eec 	add.w	lr, r1, #236	@ 0xec
 80117d2:	f643 5c65 	movw	ip, #15717	@ 0x3d65
 80117d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80117da:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 80117de:	2208      	movs	r2, #8
 80117e0:	b220      	sxth	r0, r4
 80117e2:	0064      	lsls	r4, r4, #1
 80117e4:	2800      	cmp	r0, #0
 80117e6:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80117ea:	b2a4      	uxth	r4, r4
 80117ec:	bfb8      	it	lt
 80117ee:	ea84 040c 	eorlt.w	r4, r4, ip
 80117f2:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80117f6:	d1f3      	bne.n	80117e0 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x5c>
 80117f8:	458e      	cmp	lr, r1
 80117fa:	d1ec      	bne.n	80117d6 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x52>
 80117fc:	2208      	movs	r2, #8
 80117fe:	4629      	mov	r1, r5
 8011800:	20ec      	movs	r0, #236	@ 0xec
 8011802:	9312      	str	r3, [sp, #72]	@ 0x48
 8011804:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011808:	f7fb fa08 	bl	800cc1c <NVM_read>
 801180c:	2800      	cmp	r0, #0
 801180e:	f040 81aa 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011812:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011814:	f105 0c08 	add.w	ip, r5, #8
 8011818:	f643 5065 	movw	r0, #15717	@ 0x3d65
 801181c:	f815 2b01 	ldrb.w	r2, [r5], #1
 8011820:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 8011824:	2208      	movs	r2, #8
 8011826:	b221      	sxth	r1, r4
 8011828:	0064      	lsls	r4, r4, #1
 801182a:	2900      	cmp	r1, #0
 801182c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011830:	b2a4      	uxth	r4, r4
 8011832:	bfb8      	it	lt
 8011834:	4044      	eorlt	r4, r0
 8011836:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801183a:	d1f4      	bne.n	8011826 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0xa2>
 801183c:	45ac      	cmp	ip, r5
 801183e:	d1ed      	bne.n	801181c <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x98>
 8011840:	2270      	movs	r2, #112	@ 0x70
 8011842:	4631      	mov	r1, r6
 8011844:	20f4      	movs	r0, #244	@ 0xf4
 8011846:	9312      	str	r3, [sp, #72]	@ 0x48
 8011848:	f8ad 400e 	strh.w	r4, [sp, #14]
 801184c:	f7fb f9e6 	bl	800cc1c <NVM_read>
 8011850:	2800      	cmp	r0, #0
 8011852:	f040 8188 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011856:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011858:	f106 0570 	add.w	r5, r6, #112	@ 0x70
 801185c:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011860:	f816 2b01 	ldrb.w	r2, [r6], #1
 8011864:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 8011868:	2208      	movs	r2, #8
 801186a:	b221      	sxth	r1, r4
 801186c:	0064      	lsls	r4, r4, #1
 801186e:	2900      	cmp	r1, #0
 8011870:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011874:	b2a4      	uxth	r4, r4
 8011876:	bfb8      	it	lt
 8011878:	4044      	eorlt	r4, r0
 801187a:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801187e:	d1f4      	bne.n	801186a <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0xe6>
 8011880:	42b5      	cmp	r5, r6
 8011882:	d1ed      	bne.n	8011860 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0xdc>
 8011884:	2218      	movs	r2, #24
 8011886:	4639      	mov	r1, r7
 8011888:	f44f 70b2 	mov.w	r0, #356	@ 0x164
 801188c:	9312      	str	r3, [sp, #72]	@ 0x48
 801188e:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011892:	f7fb f9c3 	bl	800cc1c <NVM_read>
 8011896:	2800      	cmp	r0, #0
 8011898:	f040 8165 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 801189c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801189e:	f107 0518 	add.w	r5, r7, #24
 80118a2:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80118a6:	f817 2b01 	ldrb.w	r2, [r7], #1
 80118aa:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 80118ae:	2208      	movs	r2, #8
 80118b0:	b221      	sxth	r1, r4
 80118b2:	0064      	lsls	r4, r4, #1
 80118b4:	2900      	cmp	r1, #0
 80118b6:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80118ba:	b2a4      	uxth	r4, r4
 80118bc:	bfb8      	it	lt
 80118be:	4044      	eorlt	r4, r0
 80118c0:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80118c4:	d1f4      	bne.n	80118b0 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x12c>
 80118c6:	42bd      	cmp	r5, r7
 80118c8:	d1ed      	bne.n	80118a6 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x122>
 80118ca:	f247 1248 	movw	r2, #29000	@ 0x7148
 80118ce:	4641      	mov	r1, r8
 80118d0:	f44f 70be 	mov.w	r0, #380	@ 0x17c
 80118d4:	9312      	str	r3, [sp, #72]	@ 0x48
 80118d6:	f8ad 400e 	strh.w	r4, [sp, #14]
 80118da:	f7fb f99f 	bl	800cc1c <NVM_read>
 80118de:	2800      	cmp	r0, #0
 80118e0:	f040 8141 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 80118e4:	f508 45e2 	add.w	r5, r8, #28928	@ 0x7100
 80118e8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80118ea:	3548      	adds	r5, #72	@ 0x48
 80118ec:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80118f0:	f818 2b01 	ldrb.w	r2, [r8], #1
 80118f4:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 80118f8:	2208      	movs	r2, #8
 80118fa:	b221      	sxth	r1, r4
 80118fc:	0064      	lsls	r4, r4, #1
 80118fe:	2900      	cmp	r1, #0
 8011900:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011904:	b2a4      	uxth	r4, r4
 8011906:	bfb8      	it	lt
 8011908:	4044      	eorlt	r4, r0
 801190a:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801190e:	d1f4      	bne.n	80118fa <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x176>
 8011910:	45a8      	cmp	r8, r5
 8011912:	d1ed      	bne.n	80118f0 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x16c>
 8011914:	22b8      	movs	r2, #184	@ 0xb8
 8011916:	4649      	mov	r1, r9
 8011918:	f247 20c4 	movw	r0, #29380	@ 0x72c4
 801191c:	9312      	str	r3, [sp, #72]	@ 0x48
 801191e:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011922:	f7fb f97b 	bl	800cc1c <NVM_read>
 8011926:	2800      	cmp	r0, #0
 8011928:	f040 811d 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 801192c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801192e:	f109 05b8 	add.w	r5, r9, #184	@ 0xb8
 8011932:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011936:	f819 1b01 	ldrb.w	r1, [r9], #1
 801193a:	2208      	movs	r2, #8
 801193c:	ea84 2401 	eor.w	r4, r4, r1, lsl #8
 8011940:	b221      	sxth	r1, r4
 8011942:	0064      	lsls	r4, r4, #1
 8011944:	2900      	cmp	r1, #0
 8011946:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 801194a:	b2a4      	uxth	r4, r4
 801194c:	bfb8      	it	lt
 801194e:	4044      	eorlt	r4, r0
 8011950:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011954:	d1f4      	bne.n	8011940 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x1bc>
 8011956:	45a9      	cmp	r9, r5
 8011958:	d1ed      	bne.n	8011936 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x1b2>
 801195a:	2218      	movs	r2, #24
 801195c:	4651      	mov	r1, sl
 801195e:	f247 307c 	movw	r0, #29564	@ 0x737c
 8011962:	9312      	str	r3, [sp, #72]	@ 0x48
 8011964:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011968:	f7fb f958 	bl	800cc1c <NVM_read>
 801196c:	2800      	cmp	r0, #0
 801196e:	f040 80fa 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011972:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011974:	f10a 0518 	add.w	r5, sl, #24
 8011978:	f643 5065 	movw	r0, #15717	@ 0x3d65
 801197c:	f81a 1b01 	ldrb.w	r1, [sl], #1
 8011980:	2208      	movs	r2, #8
 8011982:	ea84 2401 	eor.w	r4, r4, r1, lsl #8
 8011986:	b221      	sxth	r1, r4
 8011988:	0064      	lsls	r4, r4, #1
 801198a:	2900      	cmp	r1, #0
 801198c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011990:	b2a4      	uxth	r4, r4
 8011992:	bfb8      	it	lt
 8011994:	4044      	eorlt	r4, r0
 8011996:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 801199a:	d1f4      	bne.n	8011986 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x202>
 801199c:	45aa      	cmp	sl, r5
 801199e:	d1ed      	bne.n	801197c <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x1f8>
 80119a0:	2248      	movs	r2, #72	@ 0x48
 80119a2:	4659      	mov	r1, fp
 80119a4:	f247 3094 	movw	r0, #29588	@ 0x7394
 80119a8:	9312      	str	r3, [sp, #72]	@ 0x48
 80119aa:	f8ad 400e 	strh.w	r4, [sp, #14]
 80119ae:	f7fb f935 	bl	800cc1c <NVM_read>
 80119b2:	2800      	cmp	r0, #0
 80119b4:	f040 80d7 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 80119b8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80119ba:	f10b 0548 	add.w	r5, fp, #72	@ 0x48
 80119be:	f643 5065 	movw	r0, #15717	@ 0x3d65
 80119c2:	f81b 1b01 	ldrb.w	r1, [fp], #1
 80119c6:	2208      	movs	r2, #8
 80119c8:	ea84 2401 	eor.w	r4, r4, r1, lsl #8
 80119cc:	b221      	sxth	r1, r4
 80119ce:	0064      	lsls	r4, r4, #1
 80119d0:	2900      	cmp	r1, #0
 80119d2:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 80119d6:	b2a4      	uxth	r4, r4
 80119d8:	bfb8      	it	lt
 80119da:	4044      	eorlt	r4, r0
 80119dc:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 80119e0:	d1f4      	bne.n	80119cc <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x248>
 80119e2:	45ab      	cmp	fp, r5
 80119e4:	d1ed      	bne.n	80119c2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x23e>
 80119e6:	2218      	movs	r2, #24
 80119e8:	4619      	mov	r1, r3
 80119ea:	f247 30dc 	movw	r0, #29660	@ 0x73dc
 80119ee:	f8ad 400e 	strh.w	r4, [sp, #14]
 80119f2:	9312      	str	r3, [sp, #72]	@ 0x48
 80119f4:	f7fb f912 	bl	800cc1c <NVM_read>
 80119f8:	2800      	cmp	r0, #0
 80119fa:	f040 80b4 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 80119fe:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011a00:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011a04:	f103 0518 	add.w	r5, r3, #24
 8011a08:	f813 1b01 	ldrb.w	r1, [r3], #1
 8011a0c:	2208      	movs	r2, #8
 8011a0e:	ea84 2401 	eor.w	r4, r4, r1, lsl #8
 8011a12:	b221      	sxth	r1, r4
 8011a14:	0064      	lsls	r4, r4, #1
 8011a16:	2900      	cmp	r1, #0
 8011a18:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011a1c:	b2a4      	uxth	r4, r4
 8011a1e:	bfb8      	it	lt
 8011a20:	4044      	eorlt	r4, r0
 8011a22:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011a26:	d1f4      	bne.n	8011a12 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x28e>
 8011a28:	42ab      	cmp	r3, r5
 8011a2a:	d1ed      	bne.n	8011a08 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x284>
 8011a2c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8011a2e:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011a32:	2228      	movs	r2, #40	@ 0x28
 8011a34:	f247 30f4 	movw	r0, #29684	@ 0x73f4
 8011a38:	f7fb f8f0 	bl	800cc1c <NVM_read>
 8011a3c:	2800      	cmp	r0, #0
 8011a3e:	f040 8092 	bne.w	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011a42:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8011a44:	f643 5165 	movw	r1, #15717	@ 0x3d65
 8011a48:	f103 0028 	add.w	r0, r3, #40	@ 0x28
 8011a4c:	461d      	mov	r5, r3
 8011a4e:	f815 2b01 	ldrb.w	r2, [r5], #1
 8011a52:	2308      	movs	r3, #8
 8011a54:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 8011a58:	b222      	sxth	r2, r4
 8011a5a:	0064      	lsls	r4, r4, #1
 8011a5c:	2a00      	cmp	r2, #0
 8011a5e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8011a62:	b2a4      	uxth	r4, r4
 8011a64:	bfb8      	it	lt
 8011a66:	404c      	eorlt	r4, r1
 8011a68:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 8011a6c:	d1f4      	bne.n	8011a58 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x2d4>
 8011a6e:	4285      	cmp	r5, r0
 8011a70:	d1ed      	bne.n	8011a4e <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x2ca>
 8011a72:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8011a74:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011a78:	2228      	movs	r2, #40	@ 0x28
 8011a7a:	f247 401c 	movw	r0, #29724	@ 0x741c
 8011a7e:	f7fb f8cd 	bl	800cc1c <NVM_read>
 8011a82:	2800      	cmp	r0, #0
 8011a84:	d16f      	bne.n	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011a86:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8011a88:	f643 5165 	movw	r1, #15717	@ 0x3d65
 8011a8c:	f103 0028 	add.w	r0, r3, #40	@ 0x28
 8011a90:	461d      	mov	r5, r3
 8011a92:	f815 2b01 	ldrb.w	r2, [r5], #1
 8011a96:	2308      	movs	r3, #8
 8011a98:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 8011a9c:	b222      	sxth	r2, r4
 8011a9e:	0064      	lsls	r4, r4, #1
 8011aa0:	2a00      	cmp	r2, #0
 8011aa2:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8011aa6:	b2a4      	uxth	r4, r4
 8011aa8:	bfb8      	it	lt
 8011aaa:	404c      	eorlt	r4, r1
 8011aac:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 8011ab0:	d1f4      	bne.n	8011a9c <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x318>
 8011ab2:	4285      	cmp	r5, r0
 8011ab4:	d1ed      	bne.n	8011a92 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x30e>
 8011ab6:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8011ab8:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011abc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8011ac0:	f247 4044 	movw	r0, #29764	@ 0x7444
 8011ac4:	f7fb f8aa 	bl	800cc1c <NVM_read>
 8011ac8:	2800      	cmp	r0, #0
 8011aca:	d14c      	bne.n	8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011acc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8011ace:	f643 5165 	movw	r1, #15717	@ 0x3d65
 8011ad2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8011ad6:	461d      	mov	r5, r3
 8011ad8:	f815 2b01 	ldrb.w	r2, [r5], #1
 8011adc:	2308      	movs	r3, #8
 8011ade:	ea84 2402 	eor.w	r4, r4, r2, lsl #8
 8011ae2:	b222      	sxth	r2, r4
 8011ae4:	0064      	lsls	r4, r4, #1
 8011ae6:	2a00      	cmp	r2, #0
 8011ae8:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8011aec:	b2a4      	uxth	r4, r4
 8011aee:	bfb8      	it	lt
 8011af0:	404c      	eorlt	r4, r1
 8011af2:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 8011af6:	d1f4      	bne.n	8011ae2 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x35e>
 8011af8:	4285      	cmp	r5, r0
 8011afa:	d1ed      	bne.n	8011ad8 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x354>
 8011afc:	2202      	movs	r2, #2
 8011afe:	f10d 010e 	add.w	r1, sp, #14
 8011b02:	f247 5044 	movw	r0, #30020	@ 0x7544
 8011b06:	f8ad 400e 	strh.w	r4, [sp, #14]
 8011b0a:	f7fb f887 	bl	800cc1c <NVM_read>
 8011b0e:	bb50      	cbnz	r0, 8011b66 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3e2>
 8011b10:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8011b14:	2208      	movs	r2, #8
 8011b16:	ea84 2303 	eor.w	r3, r4, r3, lsl #8
 8011b1a:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011b1e:	b219      	sxth	r1, r3
 8011b20:	005b      	lsls	r3, r3, #1
 8011b22:	2900      	cmp	r1, #0
 8011b24:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011b28:	b29b      	uxth	r3, r3
 8011b2a:	bfb8      	it	lt
 8011b2c:	4043      	eorlt	r3, r0
 8011b2e:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011b32:	d1f4      	bne.n	8011b1e <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x39a>
 8011b34:	f89d 100f 	ldrb.w	r1, [sp, #15]
 8011b38:	2208      	movs	r2, #8
 8011b3a:	ea83 2301 	eor.w	r3, r3, r1, lsl #8
 8011b3e:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8011b42:	b219      	sxth	r1, r3
 8011b44:	005b      	lsls	r3, r3, #1
 8011b46:	2900      	cmp	r1, #0
 8011b48:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8011b4c:	b29b      	uxth	r3, r3
 8011b4e:	bfb8      	it	lt
 8011b50:	4043      	eorlt	r3, r0
 8011b52:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8011b56:	d1f4      	bne.n	8011b42 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])+0x3be>
 8011b58:	3b00      	subs	r3, #0
 8011b5a:	bf18      	it	ne
 8011b5c:	2301      	movne	r3, #1
 8011b5e:	4258      	negs	r0, r3
 8011b60:	b005      	add	sp, #20
 8011b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b66:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8011b6a:	b005      	add	sp, #20
 8011b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011b70 <load_configuration>:
 8011b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b74:	ed2d 8b08 	vpush	{d8-d11}
 8011b78:	f5ad 5d63 	sub.w	sp, sp, #14528	@ 0x38c0
 8011b7c:	b08d      	sub	sp, #52	@ 0x34
 8011b7e:	f7fa ffe3 	bl	800cb48 <NVM_init>
 8011b82:	2800      	cmp	r0, #0
 8011b84:	f000 81da 	beq.w	8011f3c <load_configuration+0x3cc>
 8011b88:	4bc3      	ldr	r3, [pc, #780]	@ (8011e98 <load_configuration+0x328>)
 8011b8a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8011b8c:	4bc3      	ldr	r3, [pc, #780]	@ (8011e9c <load_configuration+0x32c>)
 8011b8e:	9310      	str	r3, [sp, #64]	@ 0x40
 8011b90:	4bc3      	ldr	r3, [pc, #780]	@ (8011ea0 <load_configuration+0x330>)
 8011b92:	9311      	str	r3, [sp, #68]	@ 0x44
 8011b94:	ac13      	add	r4, sp, #76	@ 0x4c
 8011b96:	2500      	movs	r5, #0
 8011b98:	f50d 630f 	add.w	r3, sp, #2288	@ 0x8f0
 8011b9c:	f6a3 007c 	subw	r0, r3, #2172	@ 0x87c
 8011ba0:	2260      	movs	r2, #96	@ 0x60
 8011ba2:	4629      	mov	r1, r5
 8011ba4:	e9c4 5500 	strd	r5, r5, [r4]
 8011ba8:	6165      	str	r5, [r4, #20]
 8011baa:	f012 fd7c 	bl	80246a6 <memset>
 8011bae:	2260      	movs	r2, #96	@ 0x60
 8011bb0:	4629      	mov	r1, r5
 8011bb2:	a835      	add	r0, sp, #212	@ 0xd4
 8011bb4:	f012 fd77 	bl	80246a6 <memset>
 8011bb8:	4bba      	ldr	r3, [pc, #744]	@ (8011ea4 <load_configuration+0x334>)
 8011bba:	6123      	str	r3, [r4, #16]
 8011bbc:	61a3      	str	r3, [r4, #24]
 8011bbe:	61e3      	str	r3, [r4, #28]
 8011bc0:	f04f 43ff 	mov.w	r3, #2139095040	@ 0x7f800000
 8011bc4:	6223      	str	r3, [r4, #32]
 8011bc6:	4bb8      	ldr	r3, [pc, #736]	@ (8011ea8 <load_configuration+0x338>)
 8011bc8:	6263      	str	r3, [r4, #36]	@ 0x24
 8011bca:	2301      	movs	r3, #1
 8011bcc:	7023      	strb	r3, [r4, #0]
 8011bce:	70a3      	strb	r3, [r4, #2]
 8011bd0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8011bd4:	60a3      	str	r3, [r4, #8]
 8011bd6:	f04f 4382 	mov.w	r3, #1090519040	@ 0x41000000
 8011bda:	60e3      	str	r3, [r4, #12]
 8011bdc:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8011be0:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
 8011be4:	22ec      	movs	r2, #236	@ 0xec
 8011be6:	48b1      	ldr	r0, [pc, #708]	@ (8011eac <load_configuration+0x33c>)
 8011be8:	f8df 8330 	ldr.w	r8, [pc, #816]	@ 8011f1c <load_configuration+0x3ac>
 8011bec:	ed9f bab0 	vldr	s22, [pc, #704]	@ 8011eb0 <load_configuration+0x340>
 8011bf0:	eddf aab0 	vldr	s21, [pc, #704]	@ 8011eb4 <load_configuration+0x344>
 8011bf4:	ed9f aab0 	vldr	s20, [pc, #704]	@ 8011eb8 <load_configuration+0x348>
 8011bf8:	eddf 8ab0 	vldr	s17, [pc, #704]	@ 8011ebc <load_configuration+0x34c>
 8011bfc:	eddf 9ab0 	vldr	s19, [pc, #704]	@ 8011ec0 <load_configuration+0x350>
 8011c00:	4621      	mov	r1, r4
 8011c02:	f012 fe42 	bl	802488a <memcpy>
 8011c06:	4baf      	ldr	r3, [pc, #700]	@ (8011ec4 <load_configuration+0x354>)
 8011c08:	4aaf      	ldr	r2, [pc, #700]	@ (8011ec8 <load_configuration+0x358>)
 8011c0a:	711d      	strb	r5, [r3, #4]
 8011c0c:	601a      	str	r2, [r3, #0]
 8011c0e:	4baf      	ldr	r3, [pc, #700]	@ (8011ecc <load_configuration+0x35c>)
 8011c10:	930d      	str	r3, [sp, #52]	@ 0x34
 8011c12:	4baf      	ldr	r3, [pc, #700]	@ (8011ed0 <load_configuration+0x360>)
 8011c14:	9309      	str	r3, [sp, #36]	@ 0x24
 8011c16:	4baf      	ldr	r3, [pc, #700]	@ (8011ed4 <load_configuration+0x364>)
 8011c18:	930c      	str	r3, [sp, #48]	@ 0x30
 8011c1a:	4baf      	ldr	r3, [pc, #700]	@ (8011ed8 <load_configuration+0x368>)
 8011c1c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8011c1e:	4baf      	ldr	r3, [pc, #700]	@ (8011edc <load_configuration+0x36c>)
 8011c20:	930a      	str	r3, [sp, #40]	@ 0x28
 8011c22:	4baf      	ldr	r3, [pc, #700]	@ (8011ee0 <load_configuration+0x370>)
 8011c24:	930e      	str	r3, [sp, #56]	@ 0x38
 8011c26:	46a9      	mov	r9, r5
 8011c28:	ac13      	add	r4, sp, #76	@ 0x4c
 8011c2a:	2238      	movs	r2, #56	@ 0x38
 8011c2c:	2100      	movs	r1, #0
 8011c2e:	4620      	mov	r0, r4
 8011c30:	f012 fd39 	bl	80246a6 <memset>
 8011c34:	4bab      	ldr	r3, [pc, #684]	@ (8011ee4 <load_configuration+0x374>)
 8011c36:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8011c38:	2601      	movs	r6, #1
 8011c3a:	2504      	movs	r5, #4
 8011c3c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8011c40:	8625      	strh	r5, [r4, #48]	@ 0x30
 8011c42:	ed84 aa08 	vstr	s20, [r4, #32]
 8011c46:	edc4 8a09 	vstr	s17, [r4, #36]	@ 0x24
 8011c4a:	7126      	strb	r6, [r4, #4]
 8011c4c:	7526      	strb	r6, [r4, #20]
 8011c4e:	ed84 ba06 	vstr	s22, [r4, #24]
 8011c52:	edc4 aa07 	vstr	s21, [r4, #28]
 8011c56:	60a3      	str	r3, [r4, #8]
 8011c58:	46a4      	mov	ip, r4
 8011c5a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011c5e:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8011c60:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 8011f20 <load_configuration+0x3b0>
 8011c64:	f8df b2bc 	ldr.w	fp, [pc, #700]	@ 8011f24 <load_configuration+0x3b4>
 8011c68:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011c6a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011c6e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011c70:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011c74:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011c76:	e89c 0003 	ldmia.w	ip, {r0, r1}
 8011c7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011c7c:	e887 0003 	stmia.w	r7, {r0, r1}
 8011c80:	edc3 8a00 	vstr	s17, [r3]
 8011c84:	edc3 8a01 	vstr	s17, [r3, #4]
 8011c88:	edc3 9a02 	vstr	s19, [r3, #8]
 8011c8c:	f643 02a4 	movw	r2, #14500	@ 0x38a4
 8011c90:	2100      	movs	r1, #0
 8011c92:	4620      	mov	r0, r4
 8011c94:	f012 fd07 	bl	80246a6 <memset>
 8011c98:	4b93      	ldr	r3, [pc, #588]	@ (8011ee8 <load_configuration+0x378>)
 8011c9a:	60a3      	str	r3, [r4, #8]
 8011c9c:	f504 5340 	add.w	r3, r4, #12288	@ 0x3000
 8011ca0:	4a92      	ldr	r2, [pc, #584]	@ (8011eec <load_configuration+0x37c>)
 8011ca2:	f883 6888 	strb.w	r6, [r3, #2184]	@ 0x888
 8011ca6:	60e2      	str	r2, [r4, #12]
 8011ca8:	4a91      	ldr	r2, [pc, #580]	@ (8011ef0 <load_configuration+0x380>)
 8011caa:	6162      	str	r2, [r4, #20]
 8011cac:	4a91      	ldr	r2, [pc, #580]	@ (8011ef4 <load_configuration+0x384>)
 8011cae:	61e2      	str	r2, [r4, #28]
 8011cb0:	f04f 577e 	mov.w	r7, #1065353216	@ 0x3f800000
 8011cb4:	eeb0 8a00 	vmov.f32	s16, #0	@ 0x40000000  2.0
 8011cb8:	4a8f      	ldr	r2, [pc, #572]	@ (8011ef8 <load_configuration+0x388>)
 8011cba:	61a7      	str	r7, [r4, #24]
 8011cbc:	6267      	str	r7, [r4, #36]	@ 0x24
 8011cbe:	ed84 8a04 	vstr	s16, [r4, #16]
 8011cc2:	ed84 8a0b 	vstr	s16, [r4, #44]	@ 0x2c
 8011cc6:	f8c3 2891 	str.w	r2, [r3, #2193]	@ 0x891
 8011cca:	f240 1203 	movw	r2, #259	@ 0x103
 8011cce:	8022      	strh	r2, [r4, #0]
 8011cd0:	f04f 527a 	mov.w	r2, #1048576000	@ 0x3e800000
 8011cd4:	6322      	str	r2, [r4, #48]	@ 0x30
 8011cd6:	f603 027c 	addw	r2, r3, #2172	@ 0x87c
 8011cda:	eeb3 9a04 	vmov.f32	s18, #52	@ 0x41a00000  20.0
 8011cde:	ed84 9a01 	vstr	s18, [r4, #4]
 8011ce2:	6017      	str	r7, [r2, #0]
 8011ce4:	f504 5262 	add.w	r2, r4, #14464	@ 0x3880
 8011ce8:	4621      	mov	r1, r4
 8011cea:	6017      	str	r7, [r2, #0]
 8011cec:	f603 0284 	addw	r2, r3, #2180	@ 0x884
 8011cf0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8011cf2:	6017      	str	r7, [r2, #0]
 8011cf4:	f603 028c 	addw	r2, r3, #2188	@ 0x88c
 8011cf8:	f108 080c 	add.w	r8, r8, #12
 8011cfc:	f8c2 a000 	str.w	sl, [r2]
 8011d00:	f603 0298 	addw	r2, r3, #2200	@ 0x898
 8011d04:	6017      	str	r7, [r2, #0]
 8011d06:	22ff      	movs	r2, #255	@ 0xff
 8011d08:	f883 289c 	strb.w	r2, [r3, #2204]	@ 0x89c
 8011d0c:	f643 02a4 	movw	r2, #14500	@ 0x38a4
 8011d10:	f012 fdbb 	bl	802488a <memcpy>
 8011d14:	225c      	movs	r2, #92	@ 0x5c
 8011d16:	2100      	movs	r1, #0
 8011d18:	4620      	mov	r0, r4
 8011d1a:	f012 fcc4 	bl	80246a6 <memset>
 8011d1e:	4b77      	ldr	r3, [pc, #476]	@ (8011efc <load_configuration+0x38c>)
 8011d20:	61a3      	str	r3, [r4, #24]
 8011d22:	f04f 43ff 	mov.w	r3, #2139095040	@ 0x7f800000
 8011d26:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8011d28:	4b75      	ldr	r3, [pc, #468]	@ (8011f00 <load_configuration+0x390>)
 8011d2a:	6323      	str	r3, [r4, #48]	@ 0x30
 8011d2c:	4b75      	ldr	r3, [pc, #468]	@ (8011f04 <load_configuration+0x394>)
 8011d2e:	6423      	str	r3, [r4, #64]	@ 0x40
 8011d30:	2307      	movs	r3, #7
 8011d32:	6567      	str	r7, [r4, #84]	@ 0x54
 8011d34:	6063      	str	r3, [r4, #4]
 8011d36:	4f74      	ldr	r7, [pc, #464]	@ (8011f08 <load_configuration+0x398>)
 8011d38:	f8c4 a008 	str.w	sl, [r4, #8]
 8011d3c:	f04f 4382 	mov.w	r3, #1090519040	@ 0x41000000
 8011d40:	62a3      	str	r3, [r4, #40]	@ 0x28
 8011d42:	f8c4 a024 	str.w	sl, [r4, #36]	@ 0x24
 8011d46:	f8c4 a044 	str.w	sl, [r4, #68]	@ 0x44
 8011d4a:	f8c4 a048 	str.w	sl, [r4, #72]	@ 0x48
 8011d4e:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
 8011d52:	f8c4 b038 	str.w	fp, [r4, #56]	@ 0x38
 8011d56:	63e7      	str	r7, [r4, #60]	@ 0x3c
 8011d58:	225c      	movs	r2, #92	@ 0x5c
 8011d5a:	4621      	mov	r1, r4
 8011d5c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8011d5e:	ed84 8a03 	vstr	s16, [r4, #12]
 8011d62:	edc4 8a0d 	vstr	s17, [r4, #52]	@ 0x34
 8011d66:	f012 fd90 	bl	802488a <memcpy>
 8011d6a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8011d6c:	2224      	movs	r2, #36	@ 0x24
 8011d6e:	f8c1 b000 	str.w	fp, [r1]
 8011d72:	604f      	str	r7, [r1, #4]
 8011d74:	720e      	strb	r6, [r1, #8]
 8011d76:	4620      	mov	r0, r4
 8011d78:	2100      	movs	r1, #0
 8011d7a:	f012 fc94 	bl	80246a6 <memset>
 8011d7e:	8225      	strh	r5, [r4, #16]
 8011d80:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8011d82:	61a7      	str	r7, [r4, #24]
 8011d84:	f1c9 0500 	rsb	r5, r9, #0
 8011d88:	f8c4 b014 	str.w	fp, [r4, #20]
 8011d8c:	f04f 537c 	mov.w	r3, #1056964608	@ 0x3f000000
 8011d90:	f005 0724 	and.w	r7, r5, #36	@ 0x24
 8011d94:	46a4      	mov	ip, r4
 8011d96:	f848 3c08 	str.w	r3, [r8, #-8]
 8011d9a:	f848 3c04 	str.w	r3, [r8, #-4]
 8011d9e:	4407      	add	r7, r0
 8011da0:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011da4:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011da6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011daa:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011dac:	ed08 8a03 	vstr	s16, [r8, #-12]
 8011db0:	f8dc 3000 	ldr.w	r3, [ip]
 8011db4:	603b      	str	r3, [r7, #0]
 8011db6:	2280      	movs	r2, #128	@ 0x80
 8011db8:	2100      	movs	r1, #0
 8011dba:	4620      	mov	r0, r4
 8011dbc:	f012 fc73 	bl	80246a6 <memset>
 8011dc0:	a819      	add	r0, sp, #100	@ 0x64
 8011dc2:	f7fb f8a5 	bl	800cf10 <Axis::default_calibration()>
 8011dc6:	a820      	add	r0, sp, #128	@ 0x80
 8011dc8:	f7fb f8bc 	bl	800cf44 <Axis::default_sensorless()>
 8011dcc:	f04f 536a 	mov.w	r3, #981467136	@ 0x3a800000
 8011dd0:	60a3      	str	r3, [r4, #8]
 8011dd2:	4b4e      	ldr	r3, [pc, #312]	@ (8011f0c <load_configuration+0x39c>)
 8011dd4:	6563      	str	r3, [r4, #84]	@ 0x54
 8011dd6:	4b4e      	ldr	r3, [pc, #312]	@ (8011f10 <load_configuration+0x3a0>)
 8011dd8:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
 8011ddc:	65a3      	str	r3, [r4, #88]	@ 0x58
 8011dde:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8011de2:	4b4c      	ldr	r3, [pc, #304]	@ (8011f14 <load_configuration+0x3a4>)
 8011de4:	6623      	str	r3, [r4, #96]	@ 0x60
 8011de6:	2164      	movs	r1, #100	@ 0x64
 8011de8:	230a      	movs	r3, #10
 8011dea:	2280      	movs	r2, #128	@ 0x80
 8011dec:	e9c4 131d 	strd	r1, r3, [r4, #116]	@ 0x74
 8011df0:	f8c4 b064 	str.w	fp, [r4, #100]	@ 0x64
 8011df4:	4621      	mov	r1, r4
 8011df6:	4650      	mov	r0, sl
 8011df8:	ed84 9a17 	vstr	s18, [r4, #92]	@ 0x5c
 8011dfc:	f012 fd45 	bl	802488a <memcpy>
 8011e00:	4b45      	ldr	r3, [pc, #276]	@ (8011f18 <load_configuration+0x3a8>)
 8011e02:	f005 0064 	and.w	r0, r5, #100	@ 0x64
 8011e06:	4418      	add	r0, r3
 8011e08:	4651      	mov	r1, sl
 8011e0a:	f7fb f8f5 	bl	800cff8 <Axis::load_default_step_dir_pin_config(AxisHardwareConfig_t const&, Axis::Config_t*)>
 8011e0e:	4651      	mov	r1, sl
 8011e10:	f8c4 9000 	str.w	r9, [r4]
 8011e14:	4620      	mov	r0, r4
 8011e16:	f7fb f8f3 	bl	800d000 <Axis::load_default_can_id(int const&, Axis::Config_t&)>
 8011e1a:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8011e1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011e1e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8011e20:	3738      	adds	r7, #56	@ 0x38
 8011e22:	970d      	str	r7, [sp, #52]	@ 0x34
 8011e24:	f102 070c 	add.w	r7, r2, #12
 8011e28:	9709      	str	r7, [sp, #36]	@ 0x24
 8011e2a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8011e2c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8011e2e:	375c      	adds	r7, #92	@ 0x5c
 8011e30:	970b      	str	r7, [sp, #44]	@ 0x2c
 8011e32:	f102 070c 	add.w	r7, r2, #12
 8011e36:	4652      	mov	r2, sl
 8011e38:	3280      	adds	r2, #128	@ 0x80
 8011e3a:	920e      	str	r2, [sp, #56]	@ 0x38
 8011e3c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8011e3e:	970a      	str	r7, [sp, #40]	@ 0x28
 8011e40:	2300      	movs	r3, #0
 8011e42:	f005 0514 	and.w	r5, r5, #20
 8011e46:	60e3      	str	r3, [r4, #12]
 8011e48:	6023      	str	r3, [r4, #0]
 8011e4a:	60a3      	str	r3, [r4, #8]
 8011e4c:	194f      	adds	r7, r1, r5
 8011e4e:	f502 5340 	add.w	r3, r2, #12288	@ 0x3000
 8011e52:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8011e54:	7326      	strb	r6, [r4, #12]
 8011e56:	f04f 0a32 	mov.w	sl, #50	@ 0x32
 8011e5a:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8011e5e:	f8c4 a004 	str.w	sl, [r4, #4]
 8011e62:	3224      	adds	r2, #36	@ 0x24
 8011e64:	46a4      	mov	ip, r4
 8011e66:	f883 989c 	strb.w	r9, [r3, #2204]	@ 0x89c
 8011e6a:	440d      	add	r5, r1
 8011e6c:	920c      	str	r2, [sp, #48]	@ 0x30
 8011e6e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8011e72:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 8011e74:	2300      	movs	r3, #0
 8011e76:	60e3      	str	r3, [r4, #12]
 8011e78:	46a6      	mov	lr, r4
 8011e7a:	7326      	strb	r6, [r4, #12]
 8011e7c:	603b      	str	r3, [r7, #0]
 8011e7e:	461f      	mov	r7, r3
 8011e80:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011e84:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8011e86:	eb09 0b06 	add.w	fp, r9, r6
 8011e8a:	f1bb 0f02 	cmp.w	fp, #2
 8011e8e:	46b1      	mov	r9, r6
 8011e90:	602f      	str	r7, [r5, #0]
 8011e92:	f47f aec9 	bne.w	8011c28 <load_configuration+0xb8>
 8011e96:	e047      	b.n	8011f28 <load_configuration+0x3b8>
 8011e98:	20000234 	.word	0x20000234
 8011e9c:	2000025c 	.word	0x2000025c
 8011ea0:	20001ad4 	.word	0x20001ad4
 8011ea4:	426fae15 	.word	0x426fae15
 8011ea8:	b58637bd 	.word	0xb58637bd
 8011eac:	200018d4 	.word	0x200018d4
 8011eb0:	3ca3d70a 	.word	0x3ca3d70a
 8011eb4:	42490fdb 	.word	0x42490fdb
 8011eb8:	41490fdb 	.word	0x41490fdb
 8011ebc:	447a0000 	.word	0x447a0000
 8011ec0:	3acf1801 	.word	0x3acf1801
 8011ec4:	200003f4 	.word	0x200003f4
 8011ec8:	0003d090 	.word	0x0003d090
 8011ecc:	20000384 	.word	0x20000384
 8011ed0:	2000036c 	.word	0x2000036c
 8011ed4:	20001b1c 	.word	0x20001b1c
 8011ed8:	200002b4 	.word	0x200002b4
 8011edc:	2000029c 	.word	0x2000029c
 8011ee0:	200019d4 	.word	0x200019d4
 8011ee4:	00030001 	.word	0x00030001
 8011ee8:	3e2aaaab 	.word	0x3e2aaaab
 8011eec:	3eaaaaab 	.word	0x3eaaaaab
 8011ef0:	3f99999a 	.word	0x3f99999a
 8011ef4:	3c23d70a 	.word	0x3c23d70a
 8011ef8:	ff010101 	.word	0xff010101
 8011efc:	3d23d70a 	.word	0x3d23d70a
 8011f00:	42700000 	.word	0x42700000
 8011f04:	416b4bc7 	.word	0x416b4bc7
 8011f08:	42f00000 	.word	0x42f00000
 8011f0c:	3ecccccd 	.word	0x3ecccccd
 8011f10:	40490fdb 	.word	0x40490fdb
 8011f14:	42200000 	.word	0x42200000
 8011f18:	0802af64 	.word	0x0802af64
 8011f1c:	20000284 	.word	0x20000284
 8011f20:	41200000 	.word	0x41200000
 8011f24:	42c80000 	.word	0x42c80000
 8011f28:	4b18      	ldr	r3, [pc, #96]	@ (8011f8c <load_configuration+0x41c>)
 8011f2a:	f893 0180 	ldrb.w	r0, [r3, #384]	@ 0x180
 8011f2e:	f50d 5d63 	add.w	sp, sp, #14528	@ 0x38c0
 8011f32:	b00d      	add	sp, #52	@ 0x34
 8011f34:	ecbd 8b08 	vpop	{d8-d11}
 8011f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f3c:	4914      	ldr	r1, [pc, #80]	@ (8011f90 <load_configuration+0x420>)
 8011f3e:	4a15      	ldr	r2, [pc, #84]	@ (8011f94 <load_configuration+0x424>)
 8011f40:	4815      	ldr	r0, [pc, #84]	@ (8011f98 <load_configuration+0x428>)
 8011f42:	4b16      	ldr	r3, [pc, #88]	@ (8011f9c <load_configuration+0x42c>)
 8011f44:	4c16      	ldr	r4, [pc, #88]	@ (8011fa0 <load_configuration+0x430>)
 8011f46:	910f      	str	r1, [sp, #60]	@ 0x3c
 8011f48:	e9cd 1206 	strd	r1, r2, [sp, #24]
 8011f4c:	4a15      	ldr	r2, [pc, #84]	@ (8011fa4 <load_configuration+0x434>)
 8011f4e:	9010      	str	r0, [sp, #64]	@ 0x40
 8011f50:	e9cd 3004 	strd	r3, r0, [sp, #16]
 8011f54:	e9cd 2402 	strd	r2, r4, [sp, #8]
 8011f58:	4b13      	ldr	r3, [pc, #76]	@ (8011fa8 <load_configuration+0x438>)
 8011f5a:	4a14      	ldr	r2, [pc, #80]	@ (8011fac <load_configuration+0x43c>)
 8011f5c:	9301      	str	r3, [sp, #4]
 8011f5e:	9200      	str	r2, [sp, #0]
 8011f60:	4b13      	ldr	r3, [pc, #76]	@ (8011fb0 <load_configuration+0x440>)
 8011f62:	4a14      	ldr	r2, [pc, #80]	@ (8011fb4 <load_configuration+0x444>)
 8011f64:	4914      	ldr	r1, [pc, #80]	@ (8011fb8 <load_configuration+0x448>)
 8011f66:	4815      	ldr	r0, [pc, #84]	@ (8011fbc <load_configuration+0x44c>)
 8011f68:	9411      	str	r4, [sp, #68]	@ 0x44
 8011f6a:	f7ff fc0b 	bl	8011784 <Config<BoardConfig_t, ODriveCAN::Config_t, Encoder::Config_t [2], SensorlessEstimator::Config_t [2], Controller::Config_t [2], Motor::Config_t [2], OnboardThermistorCurrentLimiter::Config_t [2], OffboardThermistorCurrentLimiter::Config_t [2], TrapezoidalTrajectory::Config_t [2], Endstop::Config_t [2], Endstop::Config_t [2], Axis::Config_t [2]>::safe_load_config(BoardConfig_t*, ODriveCAN::Config_t*, Encoder::Config_t (*) [2], SensorlessEstimator::Config_t (*) [2], Controller::Config_t (*) [2], Motor::Config_t (*) [2], OnboardThermistorCurrentLimiter::Config_t (*) [2], OffboardThermistorCurrentLimiter::Config_t (*) [2], TrapezoidalTrajectory::Config_t (*) [2], Endstop::Config_t (*) [2], Endstop::Config_t (*) [2], Axis::Config_t (*) [2])>
 8011f6e:	2800      	cmp	r0, #0
 8011f70:	f47f ae10 	bne.w	8011b94 <load_configuration+0x24>
 8011f74:	4b05      	ldr	r3, [pc, #20]	@ (8011f8c <load_configuration+0x41c>)
 8011f76:	2001      	movs	r0, #1
 8011f78:	f883 0180 	strb.w	r0, [r3, #384]	@ 0x180
 8011f7c:	f50d 5d63 	add.w	sp, sp, #14528	@ 0x38c0
 8011f80:	b00d      	add	sp, #52	@ 0x34
 8011f82:	ecbd 8b08 	vpop	{d8-d11}
 8011f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f8a:	bf00      	nop
 8011f8c:	20001840 	.word	0x20001840
 8011f90:	20000234 	.word	0x20000234
 8011f94:	200019d4 	.word	0x200019d4
 8011f98:	2000025c 	.word	0x2000025c
 8011f9c:	20000284 	.word	0x20000284
 8011fa0:	20001ad4 	.word	0x20001ad4
 8011fa4:	2000029c 	.word	0x2000029c
 8011fa8:	200002b4 	.word	0x200002b4
 8011fac:	20001b1c 	.word	0x20001b1c
 8011fb0:	2000036c 	.word	0x2000036c
 8011fb4:	20000384 	.word	0x20000384
 8011fb8:	200003f4 	.word	0x200003f4
 8011fbc:	200018d4 	.word	0x200018d4

08011fc0 <_GLOBAL__sub_I_hw_configs>:
 8011fc0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fc4:	4a80      	ldr	r2, [pc, #512]	@ (80121c8 <_GLOBAL__sub_I_hw_configs+0x208>)
 8011fc6:	4b81      	ldr	r3, [pc, #516]	@ (80121cc <_GLOBAL__sub_I_hw_configs+0x20c>)
 8011fc8:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 801223c <_GLOBAL__sub_I_hw_configs+0x27c>
 8011fcc:	eddf 7a80 	vldr	s15, [pc, #512]	@ 80121d0 <_GLOBAL__sub_I_hw_configs+0x210>
 8011fd0:	f8df b26c 	ldr.w	fp, [pc, #620]	@ 8012240 <_GLOBAL__sub_I_hw_configs+0x280>
 8011fd4:	f8df a26c 	ldr.w	sl, [pc, #620]	@ 8012244 <_GLOBAL__sub_I_hw_configs+0x284>
 8011fd8:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 8012248 <_GLOBAL__sub_I_hw_configs+0x288>
 8011fdc:	4f7d      	ldr	r7, [pc, #500]	@ (80121d4 <_GLOBAL__sub_I_hw_configs+0x214>)
 8011fde:	f240 1e03 	movw	lr, #259	@ 0x103
 8011fe2:	eeb3 7a04 	vmov.f32	s14, #52	@ 0x41a00000  20.0
 8011fe6:	f04f 0c00 	mov.w	ip, #0
 8011fea:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 8011fee:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8011ff2:	2500      	movs	r5, #0
 8011ff4:	f04f 567a 	mov.w	r6, #1048576000	@ 0x3e800000
 8011ff8:	6199      	str	r1, [r3, #24]
 8011ffa:	6259      	str	r1, [r3, #36]	@ 0x24
 8011ffc:	f8a3 e000 	strh.w	lr, [r3]
 8012000:	ed83 7a01 	vstr	s14, [r3, #4]
 8012004:	edc3 7a02 	vstr	s15, [r3, #8]
 8012008:	f8c3 b00c 	str.w	fp, [r3, #12]
 801200c:	611c      	str	r4, [r3, #16]
 801200e:	f8c3 a014 	str.w	sl, [r3, #20]
 8012012:	f8c3 901c 	str.w	r9, [r3, #28]
 8012016:	f8c3 c028 	str.w	ip, [r3, #40]	@ 0x28
 801201a:	62dc      	str	r4, [r3, #44]	@ 0x2c
 801201c:	f883 5020 	strb.w	r5, [r3, #32]
 8012020:	635d      	str	r5, [r3, #52]	@ 0x34
 8012022:	631e      	str	r6, [r3, #48]	@ 0x30
 8012024:	f643 00a4 	movw	r0, #14500	@ 0x38a4
 8012028:	f842 1c28 	str.w	r1, [r2, #-40]
 801202c:	f842 1c24 	str.w	r1, [r2, #-36]
 8012030:	f842 1c20 	str.w	r1, [r2, #-32]
 8012034:	f842 1c0c 	str.w	r1, [r2, #-12]
 8012038:	21ff      	movs	r1, #255	@ 0xff
 801203a:	f802 1c10 	strb.w	r1, [r2, #-16]
 801203e:	f802 1c08 	strb.w	r1, [r2, #-8]
 8012042:	4403      	add	r3, r0
 8012044:	2101      	movs	r1, #1
 8012046:	f802 1c1c 	strb.w	r1, [r2, #-28]
 801204a:	4543      	cmp	r3, r8
 801204c:	4962      	ldr	r1, [pc, #392]	@ (80121d8 <_GLOBAL__sub_I_hw_configs+0x218>)
 801204e:	f822 5c2c 	strh.w	r5, [r2, #-44]
 8012052:	f842 7c14 	str.w	r7, [r2, #-20]
 8012056:	f842 1c18 	str.w	r1, [r2, #-24]
 801205a:	4402      	add	r2, r0
 801205c:	d1c7      	bne.n	8011fee <_GLOBAL__sub_I_hw_configs+0x2e>
 801205e:	4b5f      	ldr	r3, [pc, #380]	@ (80121dc <_GLOBAL__sub_I_hw_configs+0x21c>)
 8012060:	4c5f      	ldr	r4, [pc, #380]	@ (80121e0 <_GLOBAL__sub_I_hw_configs+0x220>)
 8012062:	4e60      	ldr	r6, [pc, #384]	@ (80121e4 <_GLOBAL__sub_I_hw_configs+0x224>)
 8012064:	4a60      	ldr	r2, [pc, #384]	@ (80121e8 <_GLOBAL__sub_I_hw_configs+0x228>)
 8012066:	f8df a1e4 	ldr.w	sl, [pc, #484]	@ 801224c <_GLOBAL__sub_I_hw_configs+0x28c>
 801206a:	f8df 91e4 	ldr.w	r9, [pc, #484]	@ 8012250 <_GLOBAL__sub_I_hw_configs+0x290>
 801206e:	f8df 81e4 	ldr.w	r8, [pc, #484]	@ 8012254 <_GLOBAL__sub_I_hw_configs+0x294>
 8012072:	615e      	str	r6, [r3, #20]
 8012074:	2104      	movs	r1, #4
 8012076:	8219      	strh	r1, [r3, #16]
 8012078:	8699      	strh	r1, [r3, #52]	@ 0x34
 801207a:	619a      	str	r2, [r3, #24]
 801207c:	771d      	strb	r5, [r3, #28]
 801207e:	639e      	str	r6, [r3, #56]	@ 0x38
 8012080:	63da      	str	r2, [r3, #60]	@ 0x3c
 8012082:	f883 5040 	strb.w	r5, [r3, #64]	@ 0x40
 8012086:	f04f 5b6a 	mov.w	fp, #981467136	@ 0x3a800000
 801208a:	f504 7780 	add.w	r7, r4, #256	@ 0x100
 801208e:	2280      	movs	r2, #128	@ 0x80
 8012090:	2100      	movs	r1, #0
 8012092:	4620      	mov	r0, r4
 8012094:	f012 fb07 	bl	80246a6 <memset>
 8012098:	f104 0018 	add.w	r0, r4, #24
 801209c:	f8c4 b008 	str.w	fp, [r4, #8]
 80120a0:	f7fa ff36 	bl	800cf10 <Axis::default_calibration()>
 80120a4:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 80120a8:	f7fa ff4c 	bl	800cf44 <Axis::default_sensorless()>
 80120ac:	4a4a      	ldr	r2, [pc, #296]	@ (80121d8 <_GLOBAL__sub_I_hw_configs+0x218>)
 80120ae:	4b4f      	ldr	r3, [pc, #316]	@ (80121ec <_GLOBAL__sub_I_hw_configs+0x22c>)
 80120b0:	6522      	str	r2, [r4, #80]	@ 0x50
 80120b2:	65e3      	str	r3, [r4, #92]	@ 0x5c
 80120b4:	2264      	movs	r2, #100	@ 0x64
 80120b6:	230a      	movs	r3, #10
 80120b8:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
 80120bc:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
 80120c0:	f8c4 8060 	str.w	r8, [r4, #96]	@ 0x60
 80120c4:	6666      	str	r6, [r4, #100]	@ 0x64
 80120c6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80120ca:	f884 506a 	strb.w	r5, [r4, #106]	@ 0x6a
 80120ce:	66e5      	str	r5, [r4, #108]	@ 0x6c
 80120d0:	f884 5070 	strb.w	r5, [r4, #112]	@ 0x70
 80120d4:	67e5      	str	r5, [r4, #124]	@ 0x7c
 80120d6:	e9c4 231d 	strd	r2, r3, [r4, #116]	@ 0x74
 80120da:	3480      	adds	r4, #128	@ 0x80
 80120dc:	42bc      	cmp	r4, r7
 80120de:	d1d6      	bne.n	801208e <_GLOBAL__sub_I_hw_configs+0xce>
 80120e0:	4c43      	ldr	r4, [pc, #268]	@ (80121f0 <_GLOBAL__sub_I_hw_configs+0x230>)
 80120e2:	f44f 72c4 	mov.w	r2, #392	@ 0x188
 80120e6:	2100      	movs	r1, #0
 80120e8:	4620      	mov	r0, r4
 80120ea:	f012 fadc 	bl	80246a6 <memset>
 80120ee:	4a41      	ldr	r2, [pc, #260]	@ (80121f4 <_GLOBAL__sub_I_hw_configs+0x234>)
 80120f0:	4b41      	ldr	r3, [pc, #260]	@ (80121f8 <_GLOBAL__sub_I_hw_configs+0x238>)
 80120f2:	6022      	str	r2, [r4, #0]
 80120f4:	781a      	ldrb	r2, [r3, #0]
 80120f6:	4841      	ldr	r0, [pc, #260]	@ (80121fc <_GLOBAL__sub_I_hw_configs+0x23c>)
 80120f8:	4941      	ldr	r1, [pc, #260]	@ (8012200 <_GLOBAL__sub_I_hw_configs+0x240>)
 80120fa:	2afe      	cmp	r2, #254	@ 0xfe
 80120fc:	e9c4 0107 	strd	r0, r1, [r4, #28]
 8012100:	4940      	ldr	r1, [pc, #256]	@ (8012204 <_GLOBAL__sub_I_hw_configs+0x244>)
 8012102:	62a1      	str	r1, [r4, #40]	@ 0x28
 8012104:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 8012108:	6260      	str	r0, [r4, #36]	@ 0x24
 801210a:	d053      	beq.n	80121b4 <_GLOBAL__sub_I_hw_configs+0x1f4>
 801210c:	2a00      	cmp	r2, #0
 801210e:	d04d      	beq.n	80121ac <_GLOBAL__sub_I_hw_configs+0x1ec>
 8012110:	f240 6303 	movw	r3, #1539	@ 0x603
 8012114:	8623      	strh	r3, [r4, #48]	@ 0x30
 8012116:	2238      	movs	r2, #56	@ 0x38
 8012118:	4b3b      	ldr	r3, [pc, #236]	@ (8012208 <_GLOBAL__sub_I_hw_configs+0x248>)
 801211a:	493c      	ldr	r1, [pc, #240]	@ (801220c <_GLOBAL__sub_I_hw_configs+0x24c>)
 801211c:	781d      	ldrb	r5, [r3, #0]
 801211e:	483c      	ldr	r0, [pc, #240]	@ (8012210 <_GLOBAL__sub_I_hw_configs+0x250>)
 8012120:	2300      	movs	r3, #0
 8012122:	f362 0307 	bfi	r3, r2, #0, #8
 8012126:	780a      	ldrb	r2, [r1, #0]
 8012128:	493a      	ldr	r1, [pc, #232]	@ (8012214 <_GLOBAL__sub_I_hw_configs+0x254>)
 801212a:	7800      	ldrb	r0, [r0, #0]
 801212c:	7809      	ldrb	r1, [r1, #0]
 801212e:	f884 1036 	strb.w	r1, [r4, #54]	@ 0x36
 8012132:	4939      	ldr	r1, [pc, #228]	@ (8012218 <_GLOBAL__sub_I_hw_configs+0x258>)
 8012134:	63e1      	str	r1, [r4, #60]	@ 0x3c
 8012136:	4939      	ldr	r1, [pc, #228]	@ (801221c <_GLOBAL__sub_I_hw_configs+0x25c>)
 8012138:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
 801213c:	f365 230f 	bfi	r3, r5, #8, #8
 8012140:	4937      	ldr	r1, [pc, #220]	@ (8012220 <_GLOBAL__sub_I_hw_configs+0x260>)
 8012142:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
 8012146:	f360 4317 	bfi	r3, r0, #16, #8
 801214a:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 801214e:	f04f 40ff 	mov.w	r0, #2139095040	@ 0x7f800000
 8012152:	f362 631f 	bfi	r3, r2, #24, #8
 8012156:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
 801215a:	2201      	movs	r2, #1
 801215c:	4831      	ldr	r0, [pc, #196]	@ (8012224 <_GLOBAL__sub_I_hw_configs+0x264>)
 801215e:	f8c4 109c 	str.w	r1, [r4, #156]	@ 0x9c
 8012162:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 8012166:	4d30      	ldr	r5, [pc, #192]	@ (8012228 <_GLOBAL__sub_I_hw_configs+0x268>)
 8012168:	63a0      	str	r0, [r4, #56]	@ 0x38
 801216a:	f8c4 3032 	str.w	r3, [r4, #50]	@ 0x32
 801216e:	f884 2094 	strb.w	r2, [r4, #148]	@ 0x94
 8012172:	4b2e      	ldr	r3, [pc, #184]	@ (801222c <_GLOBAL__sub_I_hw_configs+0x26c>)
 8012174:	f884 2096 	strb.w	r2, [r4, #150]	@ 0x96
 8012178:	f8c4 10a0 	str.w	r1, [r4, #160]	@ 0xa0
 801217c:	2260      	movs	r2, #96	@ 0x60
 801217e:	2100      	movs	r1, #0
 8012180:	482b      	ldr	r0, [pc, #172]	@ (8012230 <_GLOBAL__sub_I_hw_configs+0x270>)
 8012182:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8012186:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 801218a:	f8c4 50ac 	str.w	r5, [r4, #172]	@ 0xac
 801218e:	f8c4 50b0 	str.w	r5, [r4, #176]	@ 0xb0
 8012192:	f012 fa88 	bl	80246a6 <memset>
 8012196:	4827      	ldr	r0, [pc, #156]	@ (8012234 <_GLOBAL__sub_I_hw_configs+0x274>)
 8012198:	2260      	movs	r2, #96	@ 0x60
 801219a:	2100      	movs	r1, #0
 801219c:	f012 fa83 	bl	80246a6 <memset>
 80121a0:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 80121a4:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
 80121a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121ac:	7c1b      	ldrb	r3, [r3, #16]
 80121ae:	2bfe      	cmp	r3, #254	@ 0xfe
 80121b0:	d1ae      	bne.n	8012110 <_GLOBAL__sub_I_hw_configs+0x150>
 80121b2:	4b21      	ldr	r3, [pc, #132]	@ (8012238 <_GLOBAL__sub_I_hw_configs+0x278>)
 80121b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80121b6:	78da      	ldrb	r2, [r3, #3]
 80121b8:	f884 2030 	strb.w	r2, [r4, #48]	@ 0x30
 80121bc:	791a      	ldrb	r2, [r3, #4]
 80121be:	f884 2031 	strb.w	r2, [r4, #49]	@ 0x31
 80121c2:	795a      	ldrb	r2, [r3, #5]
 80121c4:	e7a8      	b.n	8012118 <_GLOBAL__sub_I_hw_configs+0x158>
 80121c6:	bf00      	nop
 80121c8:	200053c0 	.word	0x200053c0
 80121cc:	20001b1c 	.word	0x20001b1c
 80121d0:	3e2aaaab 	.word	0x3e2aaaab
 80121d4:	01010100 	.word	0x01010100
 80121d8:	41200000 	.word	0x41200000
 80121dc:	20001ad4 	.word	0x20001ad4
 80121e0:	200019d4 	.word	0x200019d4
 80121e4:	42c80000 	.word	0x42c80000
 80121e8:	42f00000 	.word	0x42f00000
 80121ec:	41a00000 	.word	0x41a00000
 80121f0:	20001840 	.word	0x20001840
 80121f4:	0802af48 	.word	0x0802af48
 80121f8:	1fff7800 	.word	0x1fff7800
 80121fc:	20000200 	.word	0x20000200
 8012200:	20001830 	.word	0x20001830
 8012204:	2000ce70 	.word	0x2000ce70
 8012208:	08036f87 	.word	0x08036f87
 801220c:	08036f85 	.word	0x08036f85
 8012210:	08036f86 	.word	0x08036f86
 8012214:	08036f84 	.word	0x08036f84
 8012218:	2000182c 	.word	0x2000182c
 801221c:	2000d410 	.word	0x2000d410
 8012220:	2000d54c 	.word	0x2000d54c
 8012224:	2000182d 	.word	0x2000182d
 8012228:	426fae15 	.word	0x426fae15
 801222c:	b58637bd 	.word	0xb58637bd
 8012230:	200018fc 	.word	0x200018fc
 8012234:	2000195c 	.word	0x2000195c
 8012238:	1fff7810 	.word	0x1fff7810
 801223c:	20008c64 	.word	0x20008c64
 8012240:	3eaaaaab 	.word	0x3eaaaaab
 8012244:	3f99999a 	.word	0x3f99999a
 8012248:	3c23d70a 	.word	0x3c23d70a
 801224c:	3ecccccd 	.word	0x3ecccccd
 8012250:	40490fdb 	.word	0x40490fdb
 8012254:	42200000 	.word	0x42200000

08012258 <CANSimple::get_motor_error_callback(Axis*, can_Message_t&) [clone .part.0]>:
 8012258:	4b10      	ldr	r3, [pc, #64]	@ (801229c <CANSimple::get_motor_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x44>)
 801225a:	b500      	push	{lr}
 801225c:	4686      	mov	lr, r0
 801225e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8012260:	b085      	sub	sp, #20
 8012262:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8012266:	f8de 100c 	ldr.w	r1, [lr, #12]
 801226a:	f8de 2024 	ldr.w	r2, [lr, #36]	@ 0x24
 801226e:	6ecb      	ldr	r3, [r1, #108]	@ 0x6c
 8012270:	f8b2 2064 	ldrh.w	r2, [r2, #100]	@ 0x64
 8012274:	f891 e070 	ldrb.w	lr, [r1, #112]	@ 0x70
 8012278:	f88d e004 	strb.w	lr, [sp, #4]
 801227c:	015b      	lsls	r3, r3, #5
 801227e:	3303      	adds	r3, #3
 8012280:	9300      	str	r3, [sp, #0]
 8012282:	4b07      	ldr	r3, [pc, #28]	@ (80122a0 <CANSimple::get_motor_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x48>)
 8012284:	f88d 2007 	strb.w	r2, [sp, #7]
 8012288:	0a10      	lsrs	r0, r2, #8
 801228a:	f88d 0008 	strb.w	r0, [sp, #8]
 801228e:	4669      	mov	r1, sp
 8012290:	6818      	ldr	r0, [r3, #0]
 8012292:	f00f fa13 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012296:	b005      	add	sp, #20
 8012298:	f85d fb04 	ldr.w	pc, [sp], #4
 801229c:	08029528 	.word	0x08029528
 80122a0:	200019c8 	.word	0x200019c8

080122a4 <CANSimple::get_encoder_error_callback(Axis*, can_Message_t&) [clone .part.0]>:
 80122a4:	4b0f      	ldr	r3, [pc, #60]	@ (80122e4 <CANSimple::get_encoder_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x40>)
 80122a6:	b500      	push	{lr}
 80122a8:	4686      	mov	lr, r0
 80122aa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80122ac:	b085      	sub	sp, #20
 80122ae:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80122b2:	e9de 2103 	ldrd	r2, r1, [lr, #12]
 80122b6:	6ed3      	ldr	r3, [r2, #108]	@ 0x6c
 80122b8:	f892 e070 	ldrb.w	lr, [r2, #112]	@ 0x70
 80122bc:	8a8a      	ldrh	r2, [r1, #20]
 80122be:	f88d e004 	strb.w	lr, [sp, #4]
 80122c2:	015b      	lsls	r3, r3, #5
 80122c4:	3304      	adds	r3, #4
 80122c6:	9300      	str	r3, [sp, #0]
 80122c8:	4b07      	ldr	r3, [pc, #28]	@ (80122e8 <CANSimple::get_encoder_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x44>)
 80122ca:	f88d 2007 	strb.w	r2, [sp, #7]
 80122ce:	0a10      	lsrs	r0, r2, #8
 80122d0:	f88d 0008 	strb.w	r0, [sp, #8]
 80122d4:	4669      	mov	r1, sp
 80122d6:	6818      	ldr	r0, [r3, #0]
 80122d8:	f00f f9f0 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 80122dc:	b005      	add	sp, #20
 80122de:	f85d fb04 	ldr.w	pc, [sp], #4
 80122e2:	bf00      	nop
 80122e4:	08029528 	.word	0x08029528
 80122e8:	200019c8 	.word	0x200019c8

080122ec <CANSimple::get_sensorless_error_callback(Axis*, can_Message_t&) [clone .part.0]>:
 80122ec:	4b0e      	ldr	r3, [pc, #56]	@ (8012328 <CANSimple::get_sensorless_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x3c>)
 80122ee:	b500      	push	{lr}
 80122f0:	4686      	mov	lr, r0
 80122f2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80122f4:	b085      	sub	sp, #20
 80122f6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80122fa:	f8de 200c 	ldr.w	r2, [lr, #12]
 80122fe:	f8de 0014 	ldr.w	r0, [lr, #20]
 8012302:	6ed3      	ldr	r3, [r2, #108]	@ 0x6c
 8012304:	4909      	ldr	r1, [pc, #36]	@ (801232c <CANSimple::get_sensorless_error_callback(Axis*, can_Message_t&) [clone .part.0]+0x40>)
 8012306:	f892 e070 	ldrb.w	lr, [r2, #112]	@ 0x70
 801230a:	7a02      	ldrb	r2, [r0, #8]
 801230c:	6808      	ldr	r0, [r1, #0]
 801230e:	f88d e004 	strb.w	lr, [sp, #4]
 8012312:	015b      	lsls	r3, r3, #5
 8012314:	3305      	adds	r3, #5
 8012316:	4669      	mov	r1, sp
 8012318:	9300      	str	r3, [sp, #0]
 801231a:	f88d 2007 	strb.w	r2, [sp, #7]
 801231e:	f00f f9cd 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012322:	b005      	add	sp, #20
 8012324:	f85d fb04 	ldr.w	pc, [sp], #4
 8012328:	08029528 	.word	0x08029528
 801232c:	200019c8 	.word	0x200019c8

08012330 <CANSimple::get_sensorless_estimates_callback(Axis*, can_Message_t&) [clone .part.0]>:
 8012330:	4b1a      	ldr	r3, [pc, #104]	@ (801239c <CANSimple::get_sensorless_estimates_callback(Axis*, can_Message_t&) [clone .part.0]+0x6c>)
 8012332:	b500      	push	{lr}
 8012334:	4686      	mov	lr, r0
 8012336:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8012338:	b085      	sub	sp, #20
 801233a:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 801233e:	f8de 200c 	ldr.w	r2, [lr, #12]
 8012342:	f8de 3014 	ldr.w	r3, [lr, #20]
 8012346:	6ed0      	ldr	r0, [r2, #108]	@ 0x6c
 8012348:	f892 e070 	ldrb.w	lr, [r2, #112]	@ 0x70
 801234c:	691a      	ldr	r2, [r3, #16]
 801234e:	695b      	ldr	r3, [r3, #20]
 8012350:	f88d 2007 	strb.w	r2, [sp, #7]
 8012354:	0140      	lsls	r0, r0, #5
 8012356:	3015      	adds	r0, #21
 8012358:	9000      	str	r0, [sp, #0]
 801235a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801235e:	4810      	ldr	r0, [pc, #64]	@ (80123a0 <CANSimple::get_sensorless_estimates_callback(Axis*, can_Message_t&) [clone .part.0]+0x70>)
 8012360:	f88d c008 	strb.w	ip, [sp, #8]
 8012364:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8012368:	0e12      	lsrs	r2, r2, #24
 801236a:	f88d 300b 	strb.w	r3, [sp, #11]
 801236e:	f88d c009 	strb.w	ip, [sp, #9]
 8012372:	f88d 200a 	strb.w	r2, [sp, #10]
 8012376:	ea4f 2c13 	mov.w	ip, r3, lsr #8
 801237a:	0c1a      	lsrs	r2, r3, #16
 801237c:	4669      	mov	r1, sp
 801237e:	0e1b      	lsrs	r3, r3, #24
 8012380:	6800      	ldr	r0, [r0, #0]
 8012382:	f88d e004 	strb.w	lr, [sp, #4]
 8012386:	f88d c00c 	strb.w	ip, [sp, #12]
 801238a:	f88d 200d 	strb.w	r2, [sp, #13]
 801238e:	f88d 300e 	strb.w	r3, [sp, #14]
 8012392:	f00f f993 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012396:	b005      	add	sp, #20
 8012398:	f85d fb04 	ldr.w	pc, [sp], #4
 801239c:	08029528 	.word	0x08029528
 80123a0:	200019c8 	.word	0x200019c8

080123a4 <CANSimple::get_encoder_count_callback(Axis*, can_Message_t&) [clone .part.0]>:
 80123a4:	4b0f      	ldr	r3, [pc, #60]	@ (80123e4 <CANSimple::get_encoder_count_callback(Axis*, can_Message_t&) [clone .part.0]+0x40>)
 80123a6:	b500      	push	{lr}
 80123a8:	4686      	mov	lr, r0
 80123aa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80123ac:	b085      	sub	sp, #20
 80123ae:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80123b2:	e9de 1203 	ldrd	r1, r2, [lr, #12]
 80123b6:	f891 e070 	ldrb.w	lr, [r1, #112]	@ 0x70
 80123ba:	6ecb      	ldr	r3, [r1, #108]	@ 0x6c
 80123bc:	69d1      	ldr	r1, [r2, #28]
 80123be:	f8cd 100b 	str.w	r1, [sp, #11]
 80123c2:	4909      	ldr	r1, [pc, #36]	@ (80123e8 <CANSimple::get_encoder_count_callback(Axis*, can_Message_t&) [clone .part.0]+0x44>)
 80123c4:	6992      	ldr	r2, [r2, #24]
 80123c6:	6808      	ldr	r0, [r1, #0]
 80123c8:	f8cd 2007 	str.w	r2, [sp, #7]
 80123cc:	015b      	lsls	r3, r3, #5
 80123ce:	330a      	adds	r3, #10
 80123d0:	4669      	mov	r1, sp
 80123d2:	9300      	str	r3, [sp, #0]
 80123d4:	f88d e004 	strb.w	lr, [sp, #4]
 80123d8:	f00f f970 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 80123dc:	b005      	add	sp, #20
 80123de:	f85d fb04 	ldr.w	pc, [sp], #4
 80123e2:	bf00      	nop
 80123e4:	08029528 	.word	0x08029528
 80123e8:	200019c8 	.word	0x200019c8

080123ec <CANSimple::get_iq_callback(Axis*, can_Message_t&) [clone .part.0]>:
 80123ec:	4b1c      	ldr	r3, [pc, #112]	@ (8012460 <CANSimple::get_iq_callback(Axis*, can_Message_t&) [clone .part.0]+0x74>)
 80123ee:	b500      	push	{lr}
 80123f0:	4686      	mov	lr, r0
 80123f2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80123f4:	b085      	sub	sp, #20
 80123f6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80123fa:	f8de 000c 	ldr.w	r0, [lr, #12]
 80123fe:	f8de 3024 	ldr.w	r3, [lr, #36]	@ 0x24
 8012402:	6ec1      	ldr	r1, [r0, #108]	@ 0x6c
 8012404:	f8d3 209c 	ldr.w	r2, [r3, #156]	@ 0x9c
 8012408:	f890 e070 	ldrb.w	lr, [r0, #112]	@ 0x70
 801240c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8012410:	f88d 2007 	strb.w	r2, [sp, #7]
 8012414:	0149      	lsls	r1, r1, #5
 8012416:	f101 0014 	add.w	r0, r1, #20
 801241a:	9000      	str	r0, [sp, #0]
 801241c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8012420:	4810      	ldr	r0, [pc, #64]	@ (8012464 <CANSimple::get_iq_callback(Axis*, can_Message_t&) [clone .part.0]+0x78>)
 8012422:	f88d c008 	strb.w	ip, [sp, #8]
 8012426:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801242a:	0e12      	lsrs	r2, r2, #24
 801242c:	f88d 300b 	strb.w	r3, [sp, #11]
 8012430:	f88d c009 	strb.w	ip, [sp, #9]
 8012434:	f88d 200a 	strb.w	r2, [sp, #10]
 8012438:	ea4f 2c13 	mov.w	ip, r3, lsr #8
 801243c:	0c1a      	lsrs	r2, r3, #16
 801243e:	4669      	mov	r1, sp
 8012440:	0e1b      	lsrs	r3, r3, #24
 8012442:	6800      	ldr	r0, [r0, #0]
 8012444:	f88d e004 	strb.w	lr, [sp, #4]
 8012448:	f88d c00c 	strb.w	ip, [sp, #12]
 801244c:	f88d 200d 	strb.w	r2, [sp, #13]
 8012450:	f88d 300e 	strb.w	r3, [sp, #14]
 8012454:	f00f f932 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012458:	b005      	add	sp, #20
 801245a:	f85d fb04 	ldr.w	pc, [sp], #4
 801245e:	bf00      	nop
 8012460:	08029528 	.word	0x08029528
 8012464:	200019c8 	.word	0x200019c8

08012468 <CANSimple::get_vbus_voltage_callback(Axis*, can_Message_t&) [clone .part.0]>:
 8012468:	4b0c      	ldr	r3, [pc, #48]	@ (801249c <CANSimple::get_vbus_voltage_callback(Axis*, can_Message_t&) [clone .part.0]+0x34>)
 801246a:	b510      	push	{r4, lr}
 801246c:	68c4      	ldr	r4, [r0, #12]
 801246e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8012470:	b084      	sub	sp, #16
 8012472:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8012476:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8012478:	4909      	ldr	r1, [pc, #36]	@ (80124a0 <CANSimple::get_vbus_voltage_callback(Axis*, can_Message_t&) [clone .part.0]+0x38>)
 801247a:	4a0a      	ldr	r2, [pc, #40]	@ (80124a4 <CANSimple::get_vbus_voltage_callback(Axis*, can_Message_t&) [clone .part.0]+0x3c>)
 801247c:	f894 4070 	ldrb.w	r4, [r4, #112]	@ 0x70
 8012480:	6812      	ldr	r2, [r2, #0]
 8012482:	6808      	ldr	r0, [r1, #0]
 8012484:	f88d 4004 	strb.w	r4, [sp, #4]
 8012488:	015b      	lsls	r3, r3, #5
 801248a:	3317      	adds	r3, #23
 801248c:	4669      	mov	r1, sp
 801248e:	9300      	str	r3, [sp, #0]
 8012490:	f8cd 2007 	str.w	r2, [sp, #7]
 8012494:	f00f f912 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012498:	b004      	add	sp, #16
 801249a:	bd10      	pop	{r4, pc}
 801249c:	08029528 	.word	0x08029528
 80124a0:	200019c8 	.word	0x200019c8
 80124a4:	20000200 	.word	0x20000200

080124a8 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>:
 80124a8:	6803      	ldr	r3, [r0, #0]
 80124aa:	430b      	orrs	r3, r1
 80124ac:	6003      	str	r3, [r0, #0]
 80124ae:	4770      	bx	lr

080124b0 <CANSimple::get_encoder_estimates_callback(Axis*)>:
 80124b0:	4b1a      	ldr	r3, [pc, #104]	@ (801251c <CANSimple::get_encoder_estimates_callback(Axis*)+0x6c>)
 80124b2:	b500      	push	{lr}
 80124b4:	4686      	mov	lr, r0
 80124b6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80124b8:	b085      	sub	sp, #20
 80124ba:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80124be:	e9de 0303 	ldrd	r0, r3, [lr, #12]
 80124c2:	6ec1      	ldr	r1, [r0, #108]	@ 0x6c
 80124c4:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80124c6:	f890 e070 	ldrb.w	lr, [r0, #112]	@ 0x70
 80124ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80124cc:	f88d 2007 	strb.w	r2, [sp, #7]
 80124d0:	0149      	lsls	r1, r1, #5
 80124d2:	f101 0009 	add.w	r0, r1, #9
 80124d6:	9000      	str	r0, [sp, #0]
 80124d8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80124dc:	4810      	ldr	r0, [pc, #64]	@ (8012520 <CANSimple::get_encoder_estimates_callback(Axis*)+0x70>)
 80124de:	f88d c008 	strb.w	ip, [sp, #8]
 80124e2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80124e6:	0e12      	lsrs	r2, r2, #24
 80124e8:	f88d 300b 	strb.w	r3, [sp, #11]
 80124ec:	f88d c009 	strb.w	ip, [sp, #9]
 80124f0:	f88d 200a 	strb.w	r2, [sp, #10]
 80124f4:	ea4f 2c13 	mov.w	ip, r3, lsr #8
 80124f8:	0c1a      	lsrs	r2, r3, #16
 80124fa:	4669      	mov	r1, sp
 80124fc:	0e1b      	lsrs	r3, r3, #24
 80124fe:	6800      	ldr	r0, [r0, #0]
 8012500:	f88d e004 	strb.w	lr, [sp, #4]
 8012504:	f88d c00c 	strb.w	ip, [sp, #12]
 8012508:	f88d 200d 	strb.w	r2, [sp, #13]
 801250c:	f88d 300e 	strb.w	r3, [sp, #14]
 8012510:	f00f f8d4 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 8012514:	b005      	add	sp, #20
 8012516:	f85d fb04 	ldr.w	pc, [sp], #4
 801251a:	bf00      	nop
 801251c:	08029528 	.word	0x08029528
 8012520:	200019c8 	.word	0x200019c8

08012524 <CANSimple::set_input_pos_callback(Axis*, can_Message_t&)>:
 8012524:	b530      	push	{r4, r5, lr}
 8012526:	6984      	ldr	r4, [r0, #24]
 8012528:	f8d1 3007 	ldr.w	r3, [r1, #7]
 801252c:	ed9f 7a13 	vldr	s14, [pc, #76]	@ 801257c <CANSimple::set_input_pos_callback(Axis*, can_Message_t&)+0x58>
 8012530:	b085      	sub	sp, #20
 8012532:	6423      	str	r3, [r4, #64]	@ 0x40
 8012534:	468c      	mov	ip, r1
 8012536:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 8012538:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 801253c:	f8dd 300b 	ldr.w	r3, [sp, #11]
 8012540:	b21b      	sxth	r3, r3
 8012542:	ee07 3a90 	vmov	s15, r3
 8012546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801254a:	2501      	movs	r5, #1
 801254c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012550:	46ee      	mov	lr, sp
 8012552:	edc4 7a11 	vstr	s15, [r4, #68]	@ 0x44
 8012556:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 801255a:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 801255e:	f8dd 300b 	ldr.w	r3, [sp, #11]
 8012562:	f884 5054 	strb.w	r5, [r4, #84]	@ 0x54
 8012566:	141b      	asrs	r3, r3, #16
 8012568:	ee07 3a90 	vmov	s15, r3
 801256c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012570:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012574:	edc4 7a12 	vstr	s15, [r4, #72]	@ 0x48
 8012578:	b005      	add	sp, #20
 801257a:	bd30      	pop	{r4, r5, pc}
 801257c:	3a83126f 	.word	0x3a83126f

08012580 <CANSimple::handle_can_message(can_Message_t&)>:
 8012580:	4b91      	ldr	r3, [pc, #580]	@ (80127c8 <CANSimple::handle_can_message(can_Message_t&)+0x248>)
 8012582:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012586:	e9d3 6100 	ldrd	r6, r1, [r3]
 801258a:	68f3      	ldr	r3, [r6, #12]
 801258c:	6804      	ldr	r4, [r0, #0]
 801258e:	68ca      	ldr	r2, [r1, #12]
 8012590:	4605      	mov	r5, r0
 8012592:	6ed8      	ldr	r0, [r3, #108]	@ 0x6c
 8012594:	6ed7      	ldr	r7, [r2, #108]	@ 0x6c
 8012596:	ebb0 1f54 	cmp.w	r0, r4, lsr #5
 801259a:	ea4f 1c54 	mov.w	ip, r4, lsr #5
 801259e:	d043      	beq.n	8012628 <CANSimple::handle_can_message(can_Message_t&)+0xa8>
 80125a0:	4567      	cmp	r7, ip
 80125a2:	d001      	beq.n	80125a8 <CANSimple::handle_can_message(can_Message_t&)+0x28>
 80125a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125a8:	7928      	ldrb	r0, [r5, #4]
 80125aa:	f892 3070 	ldrb.w	r3, [r2, #112]	@ 0x70
 80125ae:	4298      	cmp	r0, r3
 80125b0:	d1f8      	bne.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80125b2:	460e      	mov	r6, r1
 80125b4:	6833      	ldr	r3, [r6, #0]
 80125b6:	f004 041f 	and.w	r4, r4, #31
 80125ba:	681b      	ldr	r3, [r3, #0]
 80125bc:	4630      	mov	r0, r6
 80125be:	3c02      	subs	r4, #2
 80125c0:	4798      	blx	r3
 80125c2:	2c16      	cmp	r4, #22
 80125c4:	d8ee      	bhi.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80125c6:	a301      	add	r3, pc, #4	@ (adr r3, 80125cc <CANSimple::handle_can_message(can_Message_t&)+0x4c>)
 80125c8:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
 80125cc:	08012795 	.word	0x08012795
 80125d0:	08012783 	.word	0x08012783
 80125d4:	08012771 	.word	0x08012771
 80125d8:	0801275f 	.word	0x0801275f
 80125dc:	08012755 	.word	0x08012755
 80125e0:	0801274b 	.word	0x0801274b
 80125e4:	080125a5 	.word	0x080125a5
 80125e8:	08012741 	.word	0x08012741
 80125ec:	0801272f 	.word	0x0801272f
 80125f0:	0801271d 	.word	0x0801271d
 80125f4:	08012711 	.word	0x08012711
 80125f8:	08012701 	.word	0x08012701
 80125fc:	080126f7 	.word	0x080126f7
 8012600:	080126eb 	.word	0x080126eb
 8012604:	080126df 	.word	0x080126df
 8012608:	080126d3 	.word	0x080126d3
 801260c:	080126c1 	.word	0x080126c1
 8012610:	080126b5 	.word	0x080126b5
 8012614:	080126a3 	.word	0x080126a3
 8012618:	08012693 	.word	0x08012693
 801261c:	080127a5 	.word	0x080127a5
 8012620:	08012683 	.word	0x08012683
 8012624:	0801265b 	.word	0x0801265b
 8012628:	f893 0070 	ldrb.w	r0, [r3, #112]	@ 0x70
 801262c:	792b      	ldrb	r3, [r5, #4]
 801262e:	4298      	cmp	r0, r3
 8012630:	d006      	beq.n	8012640 <CANSimple::handle_can_message(can_Message_t&)+0xc0>
 8012632:	4567      	cmp	r7, ip
 8012634:	d1b6      	bne.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012636:	f892 2070 	ldrb.w	r2, [r2, #112]	@ 0x70
 801263a:	429a      	cmp	r2, r3
 801263c:	d1b2      	bne.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 801263e:	e7b8      	b.n	80125b2 <CANSimple::handle_can_message(can_Message_t&)+0x32>
 8012640:	4567      	cmp	r7, ip
 8012642:	d1b7      	bne.n	80125b4 <CANSimple::handle_can_message(can_Message_t&)+0x34>
 8012644:	f892 3070 	ldrb.w	r3, [r2, #112]	@ 0x70
 8012648:	4283      	cmp	r3, r0
 801264a:	d1b3      	bne.n	80125b4 <CANSimple::handle_can_message(can_Message_t&)+0x34>
 801264c:	4b5f      	ldr	r3, [pc, #380]	@ (80127cc <CANSimple::handle_can_message(can_Message_t&)+0x24c>)
 801264e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012652:	6818      	ldr	r0, [r3, #0]
 8012654:	2101      	movs	r1, #1
 8012656:	f00f b8d9 	b.w	802180c <ODriveCAN::set_error(ODriveIntf::CanIntf::Error)>
 801265a:	6833      	ldr	r3, [r6, #0]
 801265c:	4a5c      	ldr	r2, [pc, #368]	@ (80127d0 <CANSimple::handle_can_message(can_Message_t&)+0x250>)
 801265e:	685b      	ldr	r3, [r3, #4]
 8012660:	4293      	cmp	r3, r2
 8012662:	f040 80ac 	bne.w	80127be <CANSimple::handle_can_message(can_Message_t&)+0x23e>
 8012666:	e9d6 0105 	ldrd	r0, r1, [r6, #20]
 801266a:	6a74      	ldr	r4, [r6, #36]	@ 0x24
 801266c:	6932      	ldr	r2, [r6, #16]
 801266e:	2300      	movs	r3, #0
 8012670:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 8012674:	750b      	strb	r3, [r1, #20]
 8012676:	2100      	movs	r1, #0
 8012678:	7203      	strb	r3, [r0, #8]
 801267a:	8293      	strh	r3, [r2, #20]
 801267c:	6451      	str	r1, [r2, #68]	@ 0x44
 801267e:	6533      	str	r3, [r6, #80]	@ 0x50
 8012680:	e790      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012682:	796b      	ldrb	r3, [r5, #5]
 8012684:	2b00      	cmp	r3, #0
 8012686:	d08d      	beq.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012688:	4630      	mov	r0, r6
 801268a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801268e:	f7ff beeb 	b.w	8012468 <CANSimple::get_vbus_voltage_callback(Axis*, can_Message_t&) [clone .part.0]>
 8012692:	796b      	ldrb	r3, [r5, #5]
 8012694:	2b00      	cmp	r3, #0
 8012696:	d085      	beq.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012698:	4630      	mov	r0, r6
 801269a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801269e:	f7ff be47 	b.w	8012330 <CANSimple::get_sensorless_estimates_callback(Axis*, can_Message_t&) [clone .part.0]>
 80126a2:	796b      	ldrb	r3, [r5, #5]
 80126a4:	2b00      	cmp	r3, #0
 80126a6:	f43f af7d 	beq.w	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80126aa:	4630      	mov	r0, r6
 80126ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80126b0:	f7ff be9c 	b.w	80123ec <CANSimple::get_iq_callback(Axis*, can_Message_t&) [clone .part.0]>
 80126b4:	69b3      	ldr	r3, [r6, #24]
 80126b6:	f8d5 2007 	ldr.w	r2, [r5, #7]
 80126ba:	68db      	ldr	r3, [r3, #12]
 80126bc:	629a      	str	r2, [r3, #40]	@ 0x28
 80126be:	e771      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80126c0:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 80126c2:	f8d5 2007 	ldr.w	r2, [r5, #7]
 80126c6:	685b      	ldr	r3, [r3, #4]
 80126c8:	605a      	str	r2, [r3, #4]
 80126ca:	f8d5 200b 	ldr.w	r2, [r5, #11]
 80126ce:	609a      	str	r2, [r3, #8]
 80126d0:	e768      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80126d2:	6ab3      	ldr	r3, [r6, #40]	@ 0x28
 80126d4:	f8d5 2007 	ldr.w	r2, [r5, #7]
 80126d8:	685b      	ldr	r3, [r3, #4]
 80126da:	601a      	str	r2, [r3, #0]
 80126dc:	e762      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80126de:	69b0      	ldr	r0, [r6, #24]
 80126e0:	6803      	ldr	r3, [r0, #0]
 80126e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80126e6:	685b      	ldr	r3, [r3, #4]
 80126e8:	4718      	bx	r3
 80126ea:	69b3      	ldr	r3, [r6, #24]
 80126ec:	f8d5 2007 	ldr.w	r2, [r5, #7]
 80126f0:	68db      	ldr	r3, [r3, #12]
 80126f2:	611a      	str	r2, [r3, #16]
 80126f4:	e756      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 80126f6:	69b3      	ldr	r3, [r6, #24]
 80126f8:	f8d5 2007 	ldr.w	r2, [r5, #7]
 80126fc:	649a      	str	r2, [r3, #72]	@ 0x48
 80126fe:	e751      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012700:	69b3      	ldr	r3, [r6, #24]
 8012702:	f8d5 2007 	ldr.w	r2, [r5, #7]
 8012706:	645a      	str	r2, [r3, #68]	@ 0x44
 8012708:	f8d5 200b 	ldr.w	r2, [r5, #11]
 801270c:	649a      	str	r2, [r3, #72]	@ 0x48
 801270e:	e749      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012710:	4629      	mov	r1, r5
 8012712:	4630      	mov	r0, r6
 8012714:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012718:	f7ff bf04 	b.w	8012524 <CANSimple::set_input_pos_callback(Axis*, can_Message_t&)>
 801271c:	69b3      	ldr	r3, [r6, #24]
 801271e:	f8d5 2007 	ldr.w	r2, [r5, #7]
 8012722:	68db      	ldr	r3, [r3, #12]
 8012724:	701a      	strb	r2, [r3, #0]
 8012726:	f8d5 200b 	ldr.w	r2, [r5, #11]
 801272a:	705a      	strb	r2, [r3, #1]
 801272c:	e73a      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 801272e:	796b      	ldrb	r3, [r5, #5]
 8012730:	2b00      	cmp	r3, #0
 8012732:	f43f af37 	beq.w	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012736:	4630      	mov	r0, r6
 8012738:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801273c:	f7ff be32 	b.w	80123a4 <CANSimple::get_encoder_count_callback(Axis*, can_Message_t&) [clone .part.0]>
 8012740:	4630      	mov	r0, r6
 8012742:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012746:	f7ff beb3 	b.w	80124b0 <CANSimple::get_encoder_estimates_callback(Axis*)>
 801274a:	f8d5 3007 	ldr.w	r3, [r5, #7]
 801274e:	f886 3066 	strb.w	r3, [r6, #102]	@ 0x66
 8012752:	e727      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012754:	68f3      	ldr	r3, [r6, #12]
 8012756:	f8d5 2007 	ldr.w	r2, [r5, #7]
 801275a:	66da      	str	r2, [r3, #108]	@ 0x6c
 801275c:	e722      	b.n	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 801275e:	796b      	ldrb	r3, [r5, #5]
 8012760:	2b00      	cmp	r3, #0
 8012762:	f43f af1f 	beq.w	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012766:	4630      	mov	r0, r6
 8012768:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801276c:	f7ff bdbe 	b.w	80122ec <CANSimple::get_sensorless_error_callback(Axis*, can_Message_t&) [clone .part.0]>
 8012770:	796b      	ldrb	r3, [r5, #5]
 8012772:	2b00      	cmp	r3, #0
 8012774:	f43f af16 	beq.w	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 8012778:	4630      	mov	r0, r6
 801277a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801277e:	f7ff bd91 	b.w	80122a4 <CANSimple::get_encoder_error_callback(Axis*, can_Message_t&) [clone .part.0]>
 8012782:	796b      	ldrb	r3, [r5, #5]
 8012784:	2b00      	cmp	r3, #0
 8012786:	f43f af0d 	beq.w	80125a4 <CANSimple::handle_can_message(can_Message_t&)+0x24>
 801278a:	4630      	mov	r0, r6
 801278c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012790:	f7ff bd62 	b.w	8012258 <CANSimple::get_motor_error_callback(Axis*, can_Message_t&) [clone .part.0]>
 8012794:	f106 0050 	add.w	r0, r6, #80	@ 0x50
 8012798:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 801279c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80127a0:	f7ff be82 	b.w	80124a8 <operator|=(ODriveIntf::AxisIntf::Error&, ODriveIntf::AxisIntf::Error) [clone .isra.0]>
 80127a4:	f3bf 8f4f 	dsb	sy
 80127a8:	490a      	ldr	r1, [pc, #40]	@ (80127d4 <CANSimple::handle_can_message(can_Message_t&)+0x254>)
 80127aa:	4b0b      	ldr	r3, [pc, #44]	@ (80127d8 <CANSimple::handle_can_message(can_Message_t&)+0x258>)
 80127ac:	68ca      	ldr	r2, [r1, #12]
 80127ae:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 80127b2:	4313      	orrs	r3, r2
 80127b4:	60cb      	str	r3, [r1, #12]
 80127b6:	f3bf 8f4f 	dsb	sy
 80127ba:	bf00      	nop
 80127bc:	e7fd      	b.n	80127ba <CANSimple::handle_can_message(can_Message_t&)+0x23a>
 80127be:	4630      	mov	r0, r6
 80127c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80127c4:	4718      	bx	r3
 80127c6:	bf00      	nop
 80127c8:	200019cc 	.word	0x200019cc
 80127cc:	200019c8 	.word	0x200019c8
 80127d0:	0800ce51 	.word	0x0800ce51
 80127d4:	e000ed00 	.word	0xe000ed00
 80127d8:	05fa0004 	.word	0x05fa0004

080127dc <CANSimple::send_heartbeat(Axis*)>:
 80127dc:	4b10      	ldr	r3, [pc, #64]	@ (8012820 <CANSimple::send_heartbeat(Axis*)+0x44>)
 80127de:	b500      	push	{lr}
 80127e0:	4686      	mov	lr, r0
 80127e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80127e4:	b085      	sub	sp, #20
 80127e6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80127ea:	f8de 200c 	ldr.w	r2, [lr, #12]
 80127ee:	f8de 1050 	ldr.w	r1, [lr, #80]	@ 0x50
 80127f2:	6ed3      	ldr	r3, [r2, #108]	@ 0x6c
 80127f4:	f8de 0074 	ldr.w	r0, [lr, #116]	@ 0x74
 80127f8:	f8cd 1007 	str.w	r1, [sp, #7]
 80127fc:	4909      	ldr	r1, [pc, #36]	@ (8012824 <CANSimple::send_heartbeat(Axis*)+0x48>)
 80127fe:	f892 e070 	ldrb.w	lr, [r2, #112]	@ 0x70
 8012802:	7802      	ldrb	r2, [r0, #0]
 8012804:	6808      	ldr	r0, [r1, #0]
 8012806:	f88d e004 	strb.w	lr, [sp, #4]
 801280a:	015b      	lsls	r3, r3, #5
 801280c:	3301      	adds	r3, #1
 801280e:	4669      	mov	r1, sp
 8012810:	9300      	str	r3, [sp, #0]
 8012812:	f88d 200b 	strb.w	r2, [sp, #11]
 8012816:	f00e ff51 	bl	80216bc <ODriveCAN::write(can_Message_t&)>
 801281a:	b005      	add	sp, #20
 801281c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012820:	08029528 	.word	0x08029528
 8012824:	200019c8 	.word	0x200019c8

08012828 <StringConvertibleTypeInfo::get_string(Introspectable const&, char*, unsigned int) const>:
 8012828:	2000      	movs	r0, #0
 801282a:	4770      	bx	lr

0801282c <StringConvertibleTypeInfo::set_string(Introspectable const&, char*, unsigned int) const>:
 801282c:	2000      	movs	r0, #0
 801282e:	4770      	bx	lr

08012830 <FloatSettableTypeInfo::set_float(Introspectable const&, float) const>:
 8012830:	2000      	movs	r0, #0
 8012832:	4770      	bx	lr

08012834 <Property<float const>::Property(float const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012834:	ed90 0a00 	vldr	s0, [r0]
 8012838:	4770      	bx	lr
 801283a:	bf00      	nop

0801283c <Property<float>::Property(float*)::{lambda(void*)#1}::_FUN(void*)>:
 801283c:	ed90 0a00 	vldr	s0, [r0]
 8012840:	4770      	bx	lr
 8012842:	bf00      	nop

08012844 <Property<float>::Property(float*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 8012844:	ed80 0a00 	vstr	s0, [r0]
 8012848:	4770      	bx	lr
 801284a:	bf00      	nop

0801284c <Property<unsigned long long const>::Property(unsigned long long const*)::{lambda(void*)#1}::_FUN(void*)>:
 801284c:	e9d0 0100 	ldrd	r0, r1, [r0]
 8012850:	4770      	bx	lr
 8012852:	bf00      	nop

08012854 <Property<unsigned char const>::Property(unsigned char const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012854:	7800      	ldrb	r0, [r0, #0]
 8012856:	4770      	bx	lr

08012858 <Property<bool const>::Property(bool const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012858:	7800      	ldrb	r0, [r0, #0]
 801285a:	4770      	bx	lr

0801285c <Property<bool>::Property(bool*)::{lambda(void*)#1}::_FUN(void*)>:
 801285c:	7800      	ldrb	r0, [r0, #0]
 801285e:	4770      	bx	lr

08012860 <Property<bool>::Property(bool*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 8012860:	7001      	strb	r1, [r0, #0]
 8012862:	4770      	bx	lr

08012864 <Property<unsigned long const>::Property(unsigned long const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012864:	6800      	ldr	r0, [r0, #0]
 8012866:	4770      	bx	lr

08012868 <Property<unsigned long>::Property(unsigned long*)::{lambda(void*)#1}::_FUN(void*)>:
 8012868:	6800      	ldr	r0, [r0, #0]
 801286a:	4770      	bx	lr

0801286c <Property<unsigned long>::Property(unsigned long*)::{lambda(void*, unsigned long)#2}::_FUN(void*, unsigned long)>:
 801286c:	6001      	str	r1, [r0, #0]
 801286e:	4770      	bx	lr

08012870 <Property<endpoint_ref_t>::Property(endpoint_ref_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8012870:	6800      	ldr	r0, [r0, #0]
 8012872:	b082      	sub	sp, #8
 8012874:	b002      	add	sp, #8
 8012876:	4770      	bx	lr

08012878 <Property<endpoint_ref_t>::Property(endpoint_ref_t*)::{lambda(void*, endpoint_ref_t)#2}::_FUN(void*, endpoint_ref_t)>:
 8012878:	b082      	sub	sp, #8
 801287a:	6001      	str	r1, [r0, #0]
 801287c:	b002      	add	sp, #8
 801287e:	4770      	bx	lr

08012880 <Property<ODriveIntf::AxisIntf::Error>::Property(ODriveIntf::AxisIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 8012880:	6800      	ldr	r0, [r0, #0]
 8012882:	4770      	bx	lr

08012884 <Property<ODriveIntf::AxisIntf::Error>::Property(ODriveIntf::AxisIntf::Error*)::{lambda(void*, ODriveIntf::AxisIntf::Error)#2}::_FUN(void*, ODriveIntf::AxisIntf::Error)>:
 8012884:	6001      	str	r1, [r0, #0]
 8012886:	4770      	bx	lr

08012888 <Property<ODriveIntf::AxisIntf::AxisState const>::Property(ODriveIntf::AxisIntf::AxisState const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012888:	7800      	ldrb	r0, [r0, #0]
 801288a:	4770      	bx	lr

0801288c <Property<ODriveIntf::AxisIntf::AxisState>::Property(ODriveIntf::AxisIntf::AxisState*)::{lambda(void*)#1}::_FUN(void*)>:
 801288c:	7800      	ldrb	r0, [r0, #0]
 801288e:	4770      	bx	lr

08012890 <Property<ODriveIntf::AxisIntf::AxisState>::Property(ODriveIntf::AxisIntf::AxisState*)::{lambda(void*, ODriveIntf::AxisIntf::AxisState)#2}::_FUN(void*, ODriveIntf::AxisIntf::AxisState)>:
 8012890:	7001      	strb	r1, [r0, #0]
 8012892:	4770      	bx	lr

08012894 <Property<ODriveIntf::AxisIntf::LockinState const>::Property(ODriveIntf::AxisIntf::LockinState const*)::{lambda(void*)#1}::_FUN(void*)>:
 8012894:	7800      	ldrb	r0, [r0, #0]
 8012896:	4770      	bx	lr

08012898 <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::Property(ODriveIntf::ThermistorCurrentLimiterIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 8012898:	7800      	ldrb	r0, [r0, #0]
 801289a:	4770      	bx	lr

0801289c <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::Property(ODriveIntf::ThermistorCurrentLimiterIntf::Error*)::{lambda(void*, ODriveIntf::ThermistorCurrentLimiterIntf::Error)#2}::_FUN(void*, ODriveIntf::ThermistorCurrentLimiterIntf::Error)>:
 801289c:	7001      	strb	r1, [r0, #0]
 801289e:	4770      	bx	lr

080128a0 <Property<ODriveIntf::MotorIntf::Error>::Property(ODriveIntf::MotorIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 80128a0:	8800      	ldrh	r0, [r0, #0]
 80128a2:	4770      	bx	lr

080128a4 <Property<ODriveIntf::MotorIntf::Error>::Property(ODriveIntf::MotorIntf::Error*)::{lambda(void*, ODriveIntf::MotorIntf::Error)#2}::_FUN(void*, ODriveIntf::MotorIntf::Error)>:
 80128a4:	8001      	strh	r1, [r0, #0]
 80128a6:	4770      	bx	lr

080128a8 <Property<ODriveIntf::MotorIntf::ArmedState const>::Property(ODriveIntf::MotorIntf::ArmedState const*)::{lambda(void*)#1}::_FUN(void*)>:
 80128a8:	7800      	ldrb	r0, [r0, #0]
 80128aa:	4770      	bx	lr

080128ac <Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const>::Property(ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const*)::{lambda(void*)#1}::_FUN(void*)>:
 80128ac:	8800      	ldrh	r0, [r0, #0]
 80128ae:	4770      	bx	lr

080128b0 <Property<unsigned short const>::Property(unsigned short const*)::{lambda(void*)#1}::_FUN(void*)>:
 80128b0:	8800      	ldrh	r0, [r0, #0]
 80128b2:	4770      	bx	lr

080128b4 <Property<long>::Property(long*)::{lambda(void*)#1}::_FUN(void*)>:
 80128b4:	6800      	ldr	r0, [r0, #0]
 80128b6:	4770      	bx	lr

080128b8 <Property<long>::Property(long*)::{lambda(void*, long)#2}::_FUN(void*, long)>:
 80128b8:	6001      	str	r1, [r0, #0]
 80128ba:	4770      	bx	lr

080128bc <Property<ODriveIntf::MotorIntf::MotorType>::Property(ODriveIntf::MotorIntf::MotorType*)::{lambda(void*)#1}::_FUN(void*)>:
 80128bc:	7800      	ldrb	r0, [r0, #0]
 80128be:	4770      	bx	lr

080128c0 <Property<ODriveIntf::MotorIntf::MotorType>::Property(ODriveIntf::MotorIntf::MotorType*)::{lambda(void*, ODriveIntf::MotorIntf::MotorType)#2}::_FUN(void*, ODriveIntf::MotorIntf::MotorType)>:
 80128c0:	7001      	strb	r1, [r0, #0]
 80128c2:	4770      	bx	lr

080128c4 <Property<ODriveIntf::ControllerIntf::Error>::Property(ODriveIntf::ControllerIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 80128c4:	7800      	ldrb	r0, [r0, #0]
 80128c6:	4770      	bx	lr

080128c8 <Property<ODriveIntf::ControllerIntf::Error>::Property(ODriveIntf::ControllerIntf::Error*)::{lambda(void*, ODriveIntf::ControllerIntf::Error)#2}::_FUN(void*, ODriveIntf::ControllerIntf::Error)>:
 80128c8:	7001      	strb	r1, [r0, #0]
 80128ca:	4770      	bx	lr

080128cc <Property<ODriveIntf::ControllerIntf::ControlMode>::Property(ODriveIntf::ControllerIntf::ControlMode*)::{lambda(void*)#1}::_FUN(void*)>:
 80128cc:	7800      	ldrb	r0, [r0, #0]
 80128ce:	4770      	bx	lr

080128d0 <Property<ODriveIntf::ControllerIntf::ControlMode>::Property(ODriveIntf::ControllerIntf::ControlMode*)::{lambda(void*, ODriveIntf::ControllerIntf::ControlMode)#2}::_FUN(void*, ODriveIntf::ControllerIntf::ControlMode)>:
 80128d0:	7001      	strb	r1, [r0, #0]
 80128d2:	4770      	bx	lr

080128d4 <Property<ODriveIntf::ControllerIntf::InputMode>::Property(ODriveIntf::ControllerIntf::InputMode*)::{lambda(void*)#1}::_FUN(void*)>:
 80128d4:	7800      	ldrb	r0, [r0, #0]
 80128d6:	4770      	bx	lr

080128d8 <Property<ODriveIntf::ControllerIntf::InputMode>::Property(ODriveIntf::ControllerIntf::InputMode*)::{lambda(void*, ODriveIntf::ControllerIntf::InputMode)#2}::_FUN(void*, ODriveIntf::ControllerIntf::InputMode)>:
 80128d8:	7001      	strb	r1, [r0, #0]
 80128da:	4770      	bx	lr

080128dc <Property<unsigned char>::Property(unsigned char*)::{lambda(void*)#1}::_FUN(void*)>:
 80128dc:	7800      	ldrb	r0, [r0, #0]
 80128de:	4770      	bx	lr

080128e0 <Property<unsigned char>::Property(unsigned char*)::{lambda(void*, unsigned char)#2}::_FUN(void*, unsigned char)>:
 80128e0:	7001      	strb	r1, [r0, #0]
 80128e2:	4770      	bx	lr

080128e4 <Property<ODriveIntf::EncoderIntf::Error>::Property(ODriveIntf::EncoderIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 80128e4:	8800      	ldrh	r0, [r0, #0]
 80128e6:	4770      	bx	lr

080128e8 <Property<ODriveIntf::EncoderIntf::Error>::Property(ODriveIntf::EncoderIntf::Error*)::{lambda(void*, ODriveIntf::EncoderIntf::Error)#2}::_FUN(void*, ODriveIntf::EncoderIntf::Error)>:
 80128e8:	8001      	strh	r1, [r0, #0]
 80128ea:	4770      	bx	lr

080128ec <Property<long const>::Property(long const*)::{lambda(void*)#1}::_FUN(void*)>:
 80128ec:	6800      	ldr	r0, [r0, #0]
 80128ee:	4770      	bx	lr

080128f0 <Property<ODriveIntf::EncoderIntf::Mode>::Property(ODriveIntf::EncoderIntf::Mode*)::{lambda(void*)#1}::_FUN(void*)>:
 80128f0:	8800      	ldrh	r0, [r0, #0]
 80128f2:	4770      	bx	lr

080128f4 <Property<ODriveIntf::EncoderIntf::Mode>::Property(ODriveIntf::EncoderIntf::Mode*)::{lambda(void*, ODriveIntf::EncoderIntf::Mode)#2}::_FUN(void*, ODriveIntf::EncoderIntf::Mode)>:
 80128f4:	8001      	strh	r1, [r0, #0]
 80128f6:	4770      	bx	lr

080128f8 <Property<unsigned short>::Property(unsigned short*)::{lambda(void*)#1}::_FUN(void*)>:
 80128f8:	8800      	ldrh	r0, [r0, #0]
 80128fa:	4770      	bx	lr

080128fc <Property<unsigned short>::Property(unsigned short*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 80128fc:	8001      	strh	r1, [r0, #0]
 80128fe:	4770      	bx	lr

08012900 <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::Property(ODriveIntf::SensorlessEstimatorIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 8012900:	7800      	ldrb	r0, [r0, #0]
 8012902:	4770      	bx	lr

08012904 <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::Property(ODriveIntf::SensorlessEstimatorIntf::Error*)::{lambda(void*, ODriveIntf::SensorlessEstimatorIntf::Error)#2}::_FUN(void*, ODriveIntf::SensorlessEstimatorIntf::Error)>:
 8012904:	7001      	strb	r1, [r0, #0]
 8012906:	4770      	bx	lr

08012908 <Property<ODriveIntf::CanIntf::Error>::Property(ODriveIntf::CanIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>:
 8012908:	7800      	ldrb	r0, [r0, #0]
 801290a:	4770      	bx	lr

0801290c <Property<ODriveIntf::CanIntf::Error>::Property(ODriveIntf::CanIntf::Error*)::{lambda(void*, ODriveIntf::CanIntf::Error)#2}::_FUN(void*, ODriveIntf::CanIntf::Error)>:
 801290c:	7001      	strb	r1, [r0, #0]
 801290e:	4770      	bx	lr

08012910 <Property<ODriveIntf::CanIntf::Protocol>::Property(ODriveIntf::CanIntf::Protocol*)::{lambda(void*)#1}::_FUN(void*)>:
 8012910:	7800      	ldrb	r0, [r0, #0]
 8012912:	4770      	bx	lr

08012914 <Property<ODriveIntf::CanIntf::Protocol>::Property(ODriveIntf::CanIntf::Protocol*)::{lambda(void*, ODriveIntf::CanIntf::Protocol)#2}::_FUN(void*, ODriveIntf::CanIntf::Protocol)>:
 8012914:	7001      	strb	r1, [r0, #0]
 8012916:	4770      	bx	lr

08012918 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012918:	b082      	sub	sp, #8
 801291a:	b510      	push	{r4, lr}
 801291c:	a902      	add	r1, sp, #8
 801291e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012922:	4604      	mov	r4, r0
 8012924:	2210      	movs	r2, #16
 8012926:	2100      	movs	r1, #0
 8012928:	f011 febd 	bl	80246a6 <memset>
 801292c:	4620      	mov	r0, r4
 801292e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012932:	b002      	add	sp, #8
 8012934:	4770      	bx	lr
 8012936:	bf00      	nop

08012938 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012938:	f1a1 0108 	sub.w	r1, r1, #8
 801293c:	e7ec      	b.n	8012918 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801293e:	bf00      	nop

08012940 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012940:	b082      	sub	sp, #8
 8012942:	b510      	push	{r4, lr}
 8012944:	a902      	add	r1, sp, #8
 8012946:	e881 000c 	stmia.w	r1, {r2, r3}
 801294a:	4604      	mov	r4, r0
 801294c:	2210      	movs	r2, #16
 801294e:	2100      	movs	r1, #0
 8012950:	f011 fea9 	bl	80246a6 <memset>
 8012954:	4620      	mov	r0, r4
 8012956:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801295a:	b002      	add	sp, #8
 801295c:	4770      	bx	lr
 801295e:	bf00      	nop

08012960 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012960:	f1a1 0108 	sub.w	r1, r1, #8
 8012964:	e7ec      	b.n	8012940 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012966:	bf00      	nop

08012968 <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012968:	b082      	sub	sp, #8
 801296a:	b510      	push	{r4, lr}
 801296c:	a902      	add	r1, sp, #8
 801296e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012972:	4604      	mov	r4, r0
 8012974:	2210      	movs	r2, #16
 8012976:	2100      	movs	r1, #0
 8012978:	f011 fe95 	bl	80246a6 <memset>
 801297c:	4620      	mov	r0, r4
 801297e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012982:	b002      	add	sp, #8
 8012984:	4770      	bx	lr
 8012986:	bf00      	nop

08012988 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012988:	f1a1 0108 	sub.w	r1, r1, #8
 801298c:	e7ec      	b.n	8012968 <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801298e:	bf00      	nop

08012990 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012990:	b082      	sub	sp, #8
 8012992:	b510      	push	{r4, lr}
 8012994:	a902      	add	r1, sp, #8
 8012996:	e881 000c 	stmia.w	r1, {r2, r3}
 801299a:	4604      	mov	r4, r0
 801299c:	2210      	movs	r2, #16
 801299e:	2100      	movs	r1, #0
 80129a0:	f011 fe81 	bl	80246a6 <memset>
 80129a4:	4620      	mov	r0, r4
 80129a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80129aa:	b002      	add	sp, #8
 80129ac:	4770      	bx	lr
 80129ae:	bf00      	nop

080129b0 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 80129b0:	f1a1 0108 	sub.w	r1, r1, #8
 80129b4:	e7ec      	b.n	8012990 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 80129b6:	bf00      	nop

080129b8 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 80129b8:	b082      	sub	sp, #8
 80129ba:	b510      	push	{r4, lr}
 80129bc:	a902      	add	r1, sp, #8
 80129be:	e881 000c 	stmia.w	r1, {r2, r3}
 80129c2:	4604      	mov	r4, r0
 80129c4:	2210      	movs	r2, #16
 80129c6:	2100      	movs	r1, #0
 80129c8:	f011 fe6d 	bl	80246a6 <memset>
 80129cc:	4620      	mov	r0, r4
 80129ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80129d2:	b002      	add	sp, #8
 80129d4:	4770      	bx	lr
 80129d6:	bf00      	nop

080129d8 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 80129d8:	f1a1 0108 	sub.w	r1, r1, #8
 80129dc:	e7ec      	b.n	80129b8 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 80129de:	bf00      	nop

080129e0 <FibrePropertyTypeInfo<Property<unsigned char> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 80129e0:	b082      	sub	sp, #8
 80129e2:	b510      	push	{r4, lr}
 80129e4:	a902      	add	r1, sp, #8
 80129e6:	e881 000c 	stmia.w	r1, {r2, r3}
 80129ea:	4604      	mov	r4, r0
 80129ec:	2210      	movs	r2, #16
 80129ee:	2100      	movs	r1, #0
 80129f0:	f011 fe59 	bl	80246a6 <memset>
 80129f4:	4620      	mov	r0, r4
 80129f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80129fa:	b002      	add	sp, #8
 80129fc:	4770      	bx	lr
 80129fe:	bf00      	nop

08012a00 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned char> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a00:	f1a1 0108 	sub.w	r1, r1, #8
 8012a04:	e7ec      	b.n	80129e0 <FibrePropertyTypeInfo<Property<unsigned char> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012a06:	bf00      	nop

08012a08 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a08:	b082      	sub	sp, #8
 8012a0a:	b510      	push	{r4, lr}
 8012a0c:	a902      	add	r1, sp, #8
 8012a0e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012a12:	4604      	mov	r4, r0
 8012a14:	2210      	movs	r2, #16
 8012a16:	2100      	movs	r1, #0
 8012a18:	f011 fe45 	bl	80246a6 <memset>
 8012a1c:	4620      	mov	r0, r4
 8012a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a22:	b002      	add	sp, #8
 8012a24:	4770      	bx	lr
 8012a26:	bf00      	nop

08012a28 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a28:	f1a1 0108 	sub.w	r1, r1, #8
 8012a2c:	e7ec      	b.n	8012a08 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012a2e:	bf00      	nop

08012a30 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a30:	b082      	sub	sp, #8
 8012a32:	b510      	push	{r4, lr}
 8012a34:	a902      	add	r1, sp, #8
 8012a36:	e881 000c 	stmia.w	r1, {r2, r3}
 8012a3a:	4604      	mov	r4, r0
 8012a3c:	2210      	movs	r2, #16
 8012a3e:	2100      	movs	r1, #0
 8012a40:	f011 fe31 	bl	80246a6 <memset>
 8012a44:	4620      	mov	r0, r4
 8012a46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a4a:	b002      	add	sp, #8
 8012a4c:	4770      	bx	lr
 8012a4e:	bf00      	nop

08012a50 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a50:	f1a1 0108 	sub.w	r1, r1, #8
 8012a54:	e7ec      	b.n	8012a30 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012a56:	bf00      	nop

08012a58 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a58:	b082      	sub	sp, #8
 8012a5a:	b510      	push	{r4, lr}
 8012a5c:	a902      	add	r1, sp, #8
 8012a5e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012a62:	4604      	mov	r4, r0
 8012a64:	2210      	movs	r2, #16
 8012a66:	2100      	movs	r1, #0
 8012a68:	f011 fe1d 	bl	80246a6 <memset>
 8012a6c:	4620      	mov	r0, r4
 8012a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a72:	b002      	add	sp, #8
 8012a74:	4770      	bx	lr
 8012a76:	bf00      	nop

08012a78 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a78:	f1a1 0108 	sub.w	r1, r1, #8
 8012a7c:	e7ec      	b.n	8012a58 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012a7e:	bf00      	nop

08012a80 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012a80:	b082      	sub	sp, #8
 8012a82:	b510      	push	{r4, lr}
 8012a84:	a902      	add	r1, sp, #8
 8012a86:	e881 000c 	stmia.w	r1, {r2, r3}
 8012a8a:	4604      	mov	r4, r0
 8012a8c:	2210      	movs	r2, #16
 8012a8e:	2100      	movs	r1, #0
 8012a90:	f011 fe09 	bl	80246a6 <memset>
 8012a94:	4620      	mov	r0, r4
 8012a96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a9a:	b002      	add	sp, #8
 8012a9c:	4770      	bx	lr
 8012a9e:	bf00      	nop

08012aa0 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012aa0:	f1a1 0108 	sub.w	r1, r1, #8
 8012aa4:	e7ec      	b.n	8012a80 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012aa6:	bf00      	nop

08012aa8 <FibrePropertyTypeInfo<Property<long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012aa8:	b082      	sub	sp, #8
 8012aaa:	b510      	push	{r4, lr}
 8012aac:	a902      	add	r1, sp, #8
 8012aae:	e881 000c 	stmia.w	r1, {r2, r3}
 8012ab2:	4604      	mov	r4, r0
 8012ab4:	2210      	movs	r2, #16
 8012ab6:	2100      	movs	r1, #0
 8012ab8:	f011 fdf5 	bl	80246a6 <memset>
 8012abc:	4620      	mov	r0, r4
 8012abe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ac2:	b002      	add	sp, #8
 8012ac4:	4770      	bx	lr
 8012ac6:	bf00      	nop

08012ac8 <non-virtual thunk to FibrePropertyTypeInfo<Property<long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012ac8:	f1a1 0108 	sub.w	r1, r1, #8
 8012acc:	e7ec      	b.n	8012aa8 <FibrePropertyTypeInfo<Property<long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012ace:	bf00      	nop

08012ad0 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012ad0:	b082      	sub	sp, #8
 8012ad2:	b510      	push	{r4, lr}
 8012ad4:	a902      	add	r1, sp, #8
 8012ad6:	e881 000c 	stmia.w	r1, {r2, r3}
 8012ada:	4604      	mov	r4, r0
 8012adc:	2210      	movs	r2, #16
 8012ade:	2100      	movs	r1, #0
 8012ae0:	f011 fde1 	bl	80246a6 <memset>
 8012ae4:	4620      	mov	r0, r4
 8012ae6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012aea:	b002      	add	sp, #8
 8012aec:	4770      	bx	lr
 8012aee:	bf00      	nop

08012af0 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012af0:	f1a1 0108 	sub.w	r1, r1, #8
 8012af4:	e7ec      	b.n	8012ad0 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012af6:	bf00      	nop

08012af8 <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012af8:	b082      	sub	sp, #8
 8012afa:	b510      	push	{r4, lr}
 8012afc:	a902      	add	r1, sp, #8
 8012afe:	e881 000c 	stmia.w	r1, {r2, r3}
 8012b02:	4604      	mov	r4, r0
 8012b04:	2210      	movs	r2, #16
 8012b06:	2100      	movs	r1, #0
 8012b08:	f011 fdcd 	bl	80246a6 <memset>
 8012b0c:	4620      	mov	r0, r4
 8012b0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b12:	b002      	add	sp, #8
 8012b14:	4770      	bx	lr
 8012b16:	bf00      	nop

08012b18 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b18:	f1a1 0108 	sub.w	r1, r1, #8
 8012b1c:	e7ec      	b.n	8012af8 <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012b1e:	bf00      	nop

08012b20 <FibrePropertyTypeInfo<Property<unsigned short> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b20:	b082      	sub	sp, #8
 8012b22:	b510      	push	{r4, lr}
 8012b24:	a902      	add	r1, sp, #8
 8012b26:	e881 000c 	stmia.w	r1, {r2, r3}
 8012b2a:	4604      	mov	r4, r0
 8012b2c:	2210      	movs	r2, #16
 8012b2e:	2100      	movs	r1, #0
 8012b30:	f011 fdb9 	bl	80246a6 <memset>
 8012b34:	4620      	mov	r0, r4
 8012b36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b3a:	b002      	add	sp, #8
 8012b3c:	4770      	bx	lr
 8012b3e:	bf00      	nop

08012b40 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned short> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b40:	f1a1 0108 	sub.w	r1, r1, #8
 8012b44:	e7ec      	b.n	8012b20 <FibrePropertyTypeInfo<Property<unsigned short> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012b46:	bf00      	nop

08012b48 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b48:	b082      	sub	sp, #8
 8012b4a:	b510      	push	{r4, lr}
 8012b4c:	a902      	add	r1, sp, #8
 8012b4e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012b52:	4604      	mov	r4, r0
 8012b54:	2210      	movs	r2, #16
 8012b56:	2100      	movs	r1, #0
 8012b58:	f011 fda5 	bl	80246a6 <memset>
 8012b5c:	4620      	mov	r0, r4
 8012b5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b62:	b002      	add	sp, #8
 8012b64:	4770      	bx	lr
 8012b66:	bf00      	nop

08012b68 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b68:	f1a1 0108 	sub.w	r1, r1, #8
 8012b6c:	e7ec      	b.n	8012b48 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012b6e:	bf00      	nop

08012b70 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b70:	b082      	sub	sp, #8
 8012b72:	b510      	push	{r4, lr}
 8012b74:	a902      	add	r1, sp, #8
 8012b76:	e881 000c 	stmia.w	r1, {r2, r3}
 8012b7a:	4604      	mov	r4, r0
 8012b7c:	2210      	movs	r2, #16
 8012b7e:	2100      	movs	r1, #0
 8012b80:	f011 fd91 	bl	80246a6 <memset>
 8012b84:	4620      	mov	r0, r4
 8012b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b8a:	b002      	add	sp, #8
 8012b8c:	4770      	bx	lr
 8012b8e:	bf00      	nop

08012b90 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b90:	f1a1 0108 	sub.w	r1, r1, #8
 8012b94:	e7ec      	b.n	8012b70 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012b96:	bf00      	nop

08012b98 <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::set_float(Introspectable const&, float) const>:
 8012b98:	2000      	movs	r0, #0
 8012b9a:	4770      	bx	lr

08012b9c <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012b9c:	b082      	sub	sp, #8
 8012b9e:	b510      	push	{r4, lr}
 8012ba0:	a902      	add	r1, sp, #8
 8012ba2:	e881 000c 	stmia.w	r1, {r2, r3}
 8012ba6:	4604      	mov	r4, r0
 8012ba8:	2210      	movs	r2, #16
 8012baa:	2100      	movs	r1, #0
 8012bac:	f011 fd7b 	bl	80246a6 <memset>
 8012bb0:	4620      	mov	r0, r4
 8012bb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bb6:	b002      	add	sp, #8
 8012bb8:	4770      	bx	lr
 8012bba:	bf00      	nop

08012bbc <non-virtual thunk to FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012bbc:	f1a1 0108 	sub.w	r1, r1, #8
 8012bc0:	e7ec      	b.n	8012b9c <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012bc2:	bf00      	nop

08012bc4 <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8012bc4:	2000      	movs	r0, #0
 8012bc6:	4770      	bx	lr

08012bc8 <non-virtual thunk to FibrePropertyTypeInfo<Property<endpoint_ref_t> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8012bc8:	f1a0 0004 	sub.w	r0, r0, #4
 8012bcc:	e7fa      	b.n	8012bc4 <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::set_string(Introspectable const&, char*, unsigned int) const>
 8012bce:	bf00      	nop

08012bd0 <FibrePropertyTypeInfo<Property<unsigned long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012bd0:	b082      	sub	sp, #8
 8012bd2:	b510      	push	{r4, lr}
 8012bd4:	a902      	add	r1, sp, #8
 8012bd6:	e881 000c 	stmia.w	r1, {r2, r3}
 8012bda:	4604      	mov	r4, r0
 8012bdc:	2210      	movs	r2, #16
 8012bde:	2100      	movs	r1, #0
 8012be0:	f011 fd61 	bl	80246a6 <memset>
 8012be4:	4620      	mov	r0, r4
 8012be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bea:	b002      	add	sp, #8
 8012bec:	4770      	bx	lr
 8012bee:	bf00      	nop

08012bf0 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012bf0:	f1a1 0108 	sub.w	r1, r1, #8
 8012bf4:	e7ec      	b.n	8012bd0 <FibrePropertyTypeInfo<Property<unsigned long> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012bf6:	bf00      	nop

08012bf8 <FibrePropertyTypeInfo<Property<bool> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012bf8:	b082      	sub	sp, #8
 8012bfa:	b510      	push	{r4, lr}
 8012bfc:	a902      	add	r1, sp, #8
 8012bfe:	e881 000c 	stmia.w	r1, {r2, r3}
 8012c02:	4604      	mov	r4, r0
 8012c04:	2210      	movs	r2, #16
 8012c06:	2100      	movs	r1, #0
 8012c08:	f011 fd4d 	bl	80246a6 <memset>
 8012c0c:	4620      	mov	r0, r4
 8012c0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c12:	b002      	add	sp, #8
 8012c14:	4770      	bx	lr
 8012c16:	bf00      	nop

08012c18 <non-virtual thunk to FibrePropertyTypeInfo<Property<bool> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012c18:	f1a1 0108 	sub.w	r1, r1, #8
 8012c1c:	e7ec      	b.n	8012bf8 <FibrePropertyTypeInfo<Property<bool> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012c1e:	bf00      	nop

08012c20 <FibrePropertyTypeInfo<Property<float> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012c20:	b082      	sub	sp, #8
 8012c22:	b510      	push	{r4, lr}
 8012c24:	a902      	add	r1, sp, #8
 8012c26:	e881 000c 	stmia.w	r1, {r2, r3}
 8012c2a:	4604      	mov	r4, r0
 8012c2c:	2210      	movs	r2, #16
 8012c2e:	2100      	movs	r1, #0
 8012c30:	f011 fd39 	bl	80246a6 <memset>
 8012c34:	4620      	mov	r0, r4
 8012c36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c3a:	b002      	add	sp, #8
 8012c3c:	4770      	bx	lr
 8012c3e:	bf00      	nop

08012c40 <non-virtual thunk to FibrePropertyTypeInfo<Property<float> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 8012c40:	f1a1 0108 	sub.w	r1, r1, #8
 8012c44:	e7ec      	b.n	8012c20 <FibrePropertyTypeInfo<Property<float> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 8012c46:	bf00      	nop

08012c48 <communication_task>:
 8012c48:	b508      	push	{r3, lr}
 8012c4a:	4b0b      	ldr	r3, [pc, #44]	@ (8012c78 <communication_task+0x30>)
 8012c4c:	2201      	movs	r2, #1
 8012c4e:	701a      	strb	r2, [r3, #0]
 8012c50:	f00e fb3e 	bl	80212d0 <start_uart_server>
 8012c54:	f00e fc58 	bl	8021508 <start_usb_server>
 8012c58:	4b08      	ldr	r3, [pc, #32]	@ (8012c7c <communication_task+0x34>)
 8012c5a:	f893 3095 	ldrb.w	r3, [r3, #149]	@ 0x95
 8012c5e:	b133      	cbz	r3, 8012c6e <communication_task+0x26>
 8012c60:	f00e fe42 	bl	80218e8 <start_i2c_server>
 8012c64:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8012c68:	f7f4 fede 	bl	8007a28 <osDelay>
 8012c6c:	e7fa      	b.n	8012c64 <communication_task+0x1c>
 8012c6e:	4b04      	ldr	r3, [pc, #16]	@ (8012c80 <communication_task+0x38>)
 8012c70:	6818      	ldr	r0, [r3, #0]
 8012c72:	f00e fcdf 	bl	8021634 <ODriveCAN::start_can_server()>
 8012c76:	e7f5      	b.n	8012c64 <communication_task+0x1c>
 8012c78:	2000ce54 	.word	0x2000ce54
 8012c7c:	20001840 	.word	0x20001840
 8012c80:	200019c8 	.word	0x200019c8

08012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>:
 8012c84:	b510      	push	{r4, lr}
 8012c86:	b082      	sub	sp, #8
 8012c88:	460c      	mov	r4, r1
 8012c8a:	aa01      	add	r2, sp, #4
 8012c8c:	4905      	ldr	r1, [pc, #20]	@ (8012ca4 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]+0x20>)
 8012c8e:	f011 fbdd 	bl	802444c <siscanf>
 8012c92:	2801      	cmp	r0, #1
 8012c94:	bf06      	itte	eq
 8012c96:	f89d 3004 	ldrbeq.w	r3, [sp, #4]
 8012c9a:	7023      	strbeq	r3, [r4, #0]
 8012c9c:	2000      	movne	r0, #0
 8012c9e:	b002      	add	sp, #8
 8012ca0:	bd10      	pop	{r4, pc}
 8012ca2:	bf00      	nop
 8012ca4:	08029730 	.word	0x08029730

08012ca8 <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]>:
 8012ca8:	b430      	push	{r4, r5}
 8012caa:	4c0c      	ldr	r4, [pc, #48]	@ (8012cdc <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]+0x34>)
 8012cac:	4d0c      	ldr	r5, [pc, #48]	@ (8012ce0 <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]+0x38>)
 8012cae:	f643 5165 	movw	r1, #15717	@ 0x3d65
 8012cb2:	f814 2b01 	ldrb.w	r2, [r4], #1
 8012cb6:	2308      	movs	r3, #8
 8012cb8:	ea80 2002 	eor.w	r0, r0, r2, lsl #8
 8012cbc:	b202      	sxth	r2, r0
 8012cbe:	0040      	lsls	r0, r0, #1
 8012cc0:	2a00      	cmp	r2, #0
 8012cc2:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8012cc6:	b280      	uxth	r0, r0
 8012cc8:	bfb8      	it	lt
 8012cca:	4048      	eorlt	r0, r1
 8012ccc:	f013 03ff 	ands.w	r3, r3, #255	@ 0xff
 8012cd0:	d1f4      	bne.n	8012cbc <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]+0x14>
 8012cd2:	42ac      	cmp	r4, r5
 8012cd4:	d1ed      	bne.n	8012cb2 <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]+0xa>
 8012cd6:	bc30      	pop	{r4, r5}
 8012cd8:	4770      	bx	lr
 8012cda:	bf00      	nop
 8012cdc:	0802bf7c 	.word	0x0802bf7c
 8012ce0:	08035515 	.word	0x08035515

08012ce4 <FibrePropertyTypeInfo<Property<float> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012ce4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ce6:	461d      	mov	r5, r3
 8012ce8:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012cec:	4614      	mov	r4, r2
 8012cee:	4798      	blx	r3
 8012cf0:	ee10 0a10 	vmov	r0, s0
 8012cf4:	f7ed fc18 	bl	8000528 <__aeabi_f2d>
 8012cf8:	4a04      	ldr	r2, [pc, #16]	@ (8012d0c <FibrePropertyTypeInfo<Property<float> >::get_string(Introspectable const&, char*, unsigned int) const+0x28>)
 8012cfa:	e9cd 0100 	strd	r0, r1, [sp]
 8012cfe:	4629      	mov	r1, r5
 8012d00:	4620      	mov	r0, r4
 8012d02:	f011 fb4b 	bl	802439c <sniprintf>
 8012d06:	2001      	movs	r0, #1
 8012d08:	b003      	add	sp, #12
 8012d0a:	bd30      	pop	{r4, r5, pc}
 8012d0c:	0802b03c 	.word	0x0802b03c

08012d10 <non-virtual thunk to FibrePropertyTypeInfo<Property<float> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d10:	f1a0 0004 	sub.w	r0, r0, #4
 8012d14:	e7e6      	b.n	8012ce4 <FibrePropertyTypeInfo<Property<float> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012d16:	bf00      	nop

08012d18 <FibrePropertyTypeInfo<Property<bool> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d18:	b510      	push	{r4, lr}
 8012d1a:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012d1e:	4614      	mov	r4, r2
 8012d20:	4798      	blx	r3
 8012d22:	2300      	movs	r3, #0
 8012d24:	3030      	adds	r0, #48	@ 0x30
 8012d26:	7020      	strb	r0, [r4, #0]
 8012d28:	7063      	strb	r3, [r4, #1]
 8012d2a:	2001      	movs	r0, #1
 8012d2c:	bd10      	pop	{r4, pc}
 8012d2e:	bf00      	nop

08012d30 <non-virtual thunk to FibrePropertyTypeInfo<Property<bool> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d30:	f1a0 0004 	sub.w	r0, r0, #4
 8012d34:	e7f0      	b.n	8012d18 <FibrePropertyTypeInfo<Property<bool> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012d36:	bf00      	nop

08012d38 <FibrePropertyTypeInfo<Property<unsigned long> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d38:	b570      	push	{r4, r5, r6, lr}
 8012d3a:	461e      	mov	r6, r3
 8012d3c:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012d40:	4615      	mov	r5, r2
 8012d42:	4798      	blx	r3
 8012d44:	4a03      	ldr	r2, [pc, #12]	@ (8012d54 <FibrePropertyTypeInfo<Property<unsigned long> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012d46:	4603      	mov	r3, r0
 8012d48:	4631      	mov	r1, r6
 8012d4a:	4628      	mov	r0, r5
 8012d4c:	f011 fb26 	bl	802439c <sniprintf>
 8012d50:	2001      	movs	r0, #1
 8012d52:	bd70      	pop	{r4, r5, r6, pc}
 8012d54:	0802b03f 	.word	0x0802b03f

08012d58 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned long> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d58:	f1a0 0004 	sub.w	r0, r0, #4
 8012d5c:	e7ec      	b.n	8012d38 <FibrePropertyTypeInfo<Property<unsigned long> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012d5e:	bf00      	nop

08012d60 <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d60:	b508      	push	{r3, lr}
 8012d62:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012d66:	4798      	blx	r3
 8012d68:	2000      	movs	r0, #0
 8012d6a:	bd08      	pop	{r3, pc}

08012d6c <non-virtual thunk to FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d6c:	f1a0 0004 	sub.w	r0, r0, #4
 8012d70:	e7f6      	b.n	8012d60 <FibrePropertyTypeInfo<Property<endpoint_ref_t> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012d72:	bf00      	nop

08012d74 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d74:	b570      	push	{r4, r5, r6, lr}
 8012d76:	461e      	mov	r6, r3
 8012d78:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012d7c:	4615      	mov	r5, r2
 8012d7e:	4798      	blx	r3
 8012d80:	4a03      	ldr	r2, [pc, #12]	@ (8012d90 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012d82:	4603      	mov	r3, r0
 8012d84:	4631      	mov	r1, r6
 8012d86:	4628      	mov	r0, r5
 8012d88:	f011 fb08 	bl	802439c <sniprintf>
 8012d8c:	2001      	movs	r0, #1
 8012d8e:	bd70      	pop	{r4, r5, r6, pc}
 8012d90:	0802b043 	.word	0x0802b043

08012d94 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d94:	f1a0 0004 	sub.w	r0, r0, #4
 8012d98:	e7ec      	b.n	8012d74 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012d9a:	bf00      	nop

08012d9c <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012d9c:	b570      	push	{r4, r5, r6, lr}
 8012d9e:	461e      	mov	r6, r3
 8012da0:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012da4:	4615      	mov	r5, r2
 8012da6:	4798      	blx	r3
 8012da8:	4a03      	ldr	r2, [pc, #12]	@ (8012db8 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012daa:	4603      	mov	r3, r0
 8012dac:	4631      	mov	r1, r6
 8012dae:	4628      	mov	r0, r5
 8012db0:	f011 faf4 	bl	802439c <sniprintf>
 8012db4:	2001      	movs	r0, #1
 8012db6:	bd70      	pop	{r4, r5, r6, pc}
 8012db8:	0802b047 	.word	0x0802b047

08012dbc <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012dbc:	f1a0 0004 	sub.w	r0, r0, #4
 8012dc0:	e7ec      	b.n	8012d9c <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012dc2:	bf00      	nop

08012dc4 <FibrePropertyTypeInfo<Property<unsigned short> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012dc4:	b570      	push	{r4, r5, r6, lr}
 8012dc6:	461e      	mov	r6, r3
 8012dc8:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012dcc:	4615      	mov	r5, r2
 8012dce:	4798      	blx	r3
 8012dd0:	4a03      	ldr	r2, [pc, #12]	@ (8012de0 <FibrePropertyTypeInfo<Property<unsigned short> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012dd2:	4603      	mov	r3, r0
 8012dd4:	4631      	mov	r1, r6
 8012dd6:	4628      	mov	r0, r5
 8012dd8:	f011 fae0 	bl	802439c <sniprintf>
 8012ddc:	2001      	movs	r0, #1
 8012dde:	bd70      	pop	{r4, r5, r6, pc}
 8012de0:	0802b04a 	.word	0x0802b04a

08012de4 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned short> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012de4:	f1a0 0004 	sub.w	r0, r0, #4
 8012de8:	e7ec      	b.n	8012dc4 <FibrePropertyTypeInfo<Property<unsigned short> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012dea:	bf00      	nop

08012dec <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012dec:	b570      	push	{r4, r5, r6, lr}
 8012dee:	461e      	mov	r6, r3
 8012df0:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012df4:	4615      	mov	r5, r2
 8012df6:	4798      	blx	r3
 8012df8:	4a03      	ldr	r2, [pc, #12]	@ (8012e08 <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012dfa:	4603      	mov	r3, r0
 8012dfc:	4631      	mov	r1, r6
 8012dfe:	4628      	mov	r0, r5
 8012e00:	f011 facc 	bl	802439c <sniprintf>
 8012e04:	2001      	movs	r0, #1
 8012e06:	bd70      	pop	{r4, r5, r6, pc}
 8012e08:	0802b047 	.word	0x0802b047

08012e0c <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e0c:	f1a0 0004 	sub.w	r0, r0, #4
 8012e10:	e7ec      	b.n	8012dec <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012e12:	bf00      	nop

08012e14 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e14:	b570      	push	{r4, r5, r6, lr}
 8012e16:	461e      	mov	r6, r3
 8012e18:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012e1c:	4615      	mov	r5, r2
 8012e1e:	4798      	blx	r3
 8012e20:	4a03      	ldr	r2, [pc, #12]	@ (8012e30 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012e22:	4603      	mov	r3, r0
 8012e24:	4631      	mov	r1, r6
 8012e26:	4628      	mov	r0, r5
 8012e28:	f011 fab8 	bl	802439c <sniprintf>
 8012e2c:	2001      	movs	r0, #1
 8012e2e:	bd70      	pop	{r4, r5, r6, pc}
 8012e30:	0802b04a 	.word	0x0802b04a

08012e34 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e34:	f1a0 0004 	sub.w	r0, r0, #4
 8012e38:	e7ec      	b.n	8012e14 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012e3a:	bf00      	nop

08012e3c <FibrePropertyTypeInfo<Property<long> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e3c:	b570      	push	{r4, r5, r6, lr}
 8012e3e:	461e      	mov	r6, r3
 8012e40:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012e44:	4615      	mov	r5, r2
 8012e46:	4798      	blx	r3
 8012e48:	4a03      	ldr	r2, [pc, #12]	@ (8012e58 <FibrePropertyTypeInfo<Property<long> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012e4a:	4603      	mov	r3, r0
 8012e4c:	4631      	mov	r1, r6
 8012e4e:	4628      	mov	r0, r5
 8012e50:	f011 faa4 	bl	802439c <sniprintf>
 8012e54:	2001      	movs	r0, #1
 8012e56:	bd70      	pop	{r4, r5, r6, pc}
 8012e58:	0802b144 	.word	0x0802b144

08012e5c <non-virtual thunk to FibrePropertyTypeInfo<Property<long> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e5c:	f1a0 0004 	sub.w	r0, r0, #4
 8012e60:	e7ec      	b.n	8012e3c <FibrePropertyTypeInfo<Property<long> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012e62:	bf00      	nop

08012e64 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e64:	b570      	push	{r4, r5, r6, lr}
 8012e66:	461e      	mov	r6, r3
 8012e68:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012e6c:	4615      	mov	r5, r2
 8012e6e:	4798      	blx	r3
 8012e70:	4a03      	ldr	r2, [pc, #12]	@ (8012e80 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012e72:	4603      	mov	r3, r0
 8012e74:	4631      	mov	r1, r6
 8012e76:	4628      	mov	r0, r5
 8012e78:	f011 fa90 	bl	802439c <sniprintf>
 8012e7c:	2001      	movs	r0, #1
 8012e7e:	bd70      	pop	{r4, r5, r6, pc}
 8012e80:	0802b047 	.word	0x0802b047

08012e84 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e84:	f1a0 0004 	sub.w	r0, r0, #4
 8012e88:	e7ec      	b.n	8012e64 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012e8a:	bf00      	nop

08012e8c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012e8c:	b570      	push	{r4, r5, r6, lr}
 8012e8e:	461e      	mov	r6, r3
 8012e90:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012e94:	4615      	mov	r5, r2
 8012e96:	4798      	blx	r3
 8012e98:	4a03      	ldr	r2, [pc, #12]	@ (8012ea8 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012e9a:	4603      	mov	r3, r0
 8012e9c:	4631      	mov	r1, r6
 8012e9e:	4628      	mov	r0, r5
 8012ea0:	f011 fa7c 	bl	802439c <sniprintf>
 8012ea4:	2001      	movs	r0, #1
 8012ea6:	bd70      	pop	{r4, r5, r6, pc}
 8012ea8:	0802b047 	.word	0x0802b047

08012eac <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012eac:	f1a0 0004 	sub.w	r0, r0, #4
 8012eb0:	e7ec      	b.n	8012e8c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012eb2:	bf00      	nop

08012eb4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012eb4:	b570      	push	{r4, r5, r6, lr}
 8012eb6:	461e      	mov	r6, r3
 8012eb8:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012ebc:	4615      	mov	r5, r2
 8012ebe:	4798      	blx	r3
 8012ec0:	4a03      	ldr	r2, [pc, #12]	@ (8012ed0 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012ec2:	4603      	mov	r3, r0
 8012ec4:	4631      	mov	r1, r6
 8012ec6:	4628      	mov	r0, r5
 8012ec8:	f011 fa68 	bl	802439c <sniprintf>
 8012ecc:	2001      	movs	r0, #1
 8012ece:	bd70      	pop	{r4, r5, r6, pc}
 8012ed0:	0802b047 	.word	0x0802b047

08012ed4 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012ed4:	f1a0 0004 	sub.w	r0, r0, #4
 8012ed8:	e7ec      	b.n	8012eb4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012eda:	bf00      	nop

08012edc <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012edc:	b570      	push	{r4, r5, r6, lr}
 8012ede:	461e      	mov	r6, r3
 8012ee0:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012ee4:	4615      	mov	r5, r2
 8012ee6:	4798      	blx	r3
 8012ee8:	4a03      	ldr	r2, [pc, #12]	@ (8012ef8 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012eea:	4603      	mov	r3, r0
 8012eec:	4631      	mov	r1, r6
 8012eee:	4628      	mov	r0, r5
 8012ef0:	f011 fa54 	bl	802439c <sniprintf>
 8012ef4:	2001      	movs	r0, #1
 8012ef6:	bd70      	pop	{r4, r5, r6, pc}
 8012ef8:	0802b047 	.word	0x0802b047

08012efc <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012efc:	f1a0 0004 	sub.w	r0, r0, #4
 8012f00:	e7ec      	b.n	8012edc <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012f02:	bf00      	nop

08012f04 <FibrePropertyTypeInfo<Property<unsigned char> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f04:	b570      	push	{r4, r5, r6, lr}
 8012f06:	461e      	mov	r6, r3
 8012f08:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012f0c:	4615      	mov	r5, r2
 8012f0e:	4798      	blx	r3
 8012f10:	4a03      	ldr	r2, [pc, #12]	@ (8012f20 <FibrePropertyTypeInfo<Property<unsigned char> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012f12:	4603      	mov	r3, r0
 8012f14:	4631      	mov	r1, r6
 8012f16:	4628      	mov	r0, r5
 8012f18:	f011 fa40 	bl	802439c <sniprintf>
 8012f1c:	2001      	movs	r0, #1
 8012f1e:	bd70      	pop	{r4, r5, r6, pc}
 8012f20:	0802b047 	.word	0x0802b047

08012f24 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned char> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f24:	f1a0 0004 	sub.w	r0, r0, #4
 8012f28:	e7ec      	b.n	8012f04 <FibrePropertyTypeInfo<Property<unsigned char> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012f2a:	bf00      	nop

08012f2c <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f2c:	b570      	push	{r4, r5, r6, lr}
 8012f2e:	461e      	mov	r6, r3
 8012f30:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012f34:	4615      	mov	r5, r2
 8012f36:	4798      	blx	r3
 8012f38:	4a03      	ldr	r2, [pc, #12]	@ (8012f48 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012f3a:	4603      	mov	r3, r0
 8012f3c:	4631      	mov	r1, r6
 8012f3e:	4628      	mov	r0, r5
 8012f40:	f011 fa2c 	bl	802439c <sniprintf>
 8012f44:	2001      	movs	r0, #1
 8012f46:	bd70      	pop	{r4, r5, r6, pc}
 8012f48:	0802b04a 	.word	0x0802b04a

08012f4c <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f4c:	f1a0 0004 	sub.w	r0, r0, #4
 8012f50:	e7ec      	b.n	8012f2c <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012f52:	bf00      	nop

08012f54 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f54:	b570      	push	{r4, r5, r6, lr}
 8012f56:	461e      	mov	r6, r3
 8012f58:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012f5c:	4615      	mov	r5, r2
 8012f5e:	4798      	blx	r3
 8012f60:	4a03      	ldr	r2, [pc, #12]	@ (8012f70 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012f62:	4603      	mov	r3, r0
 8012f64:	4631      	mov	r1, r6
 8012f66:	4628      	mov	r0, r5
 8012f68:	f011 fa18 	bl	802439c <sniprintf>
 8012f6c:	2001      	movs	r0, #1
 8012f6e:	bd70      	pop	{r4, r5, r6, pc}
 8012f70:	0802b04a 	.word	0x0802b04a

08012f74 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f74:	f1a0 0004 	sub.w	r0, r0, #4
 8012f78:	e7ec      	b.n	8012f54 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012f7a:	bf00      	nop

08012f7c <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f7c:	b570      	push	{r4, r5, r6, lr}
 8012f7e:	461e      	mov	r6, r3
 8012f80:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012f84:	4615      	mov	r5, r2
 8012f86:	4798      	blx	r3
 8012f88:	4a03      	ldr	r2, [pc, #12]	@ (8012f98 <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012f8a:	4603      	mov	r3, r0
 8012f8c:	4631      	mov	r1, r6
 8012f8e:	4628      	mov	r0, r5
 8012f90:	f011 fa04 	bl	802439c <sniprintf>
 8012f94:	2001      	movs	r0, #1
 8012f96:	bd70      	pop	{r4, r5, r6, pc}
 8012f98:	0802b047 	.word	0x0802b047

08012f9c <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012f9c:	f1a0 0004 	sub.w	r0, r0, #4
 8012fa0:	e7ec      	b.n	8012f7c <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012fa2:	bf00      	nop

08012fa4 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012fa4:	b570      	push	{r4, r5, r6, lr}
 8012fa6:	461e      	mov	r6, r3
 8012fa8:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012fac:	4615      	mov	r5, r2
 8012fae:	4798      	blx	r3
 8012fb0:	4a03      	ldr	r2, [pc, #12]	@ (8012fc0 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012fb2:	4603      	mov	r3, r0
 8012fb4:	4631      	mov	r1, r6
 8012fb6:	4628      	mov	r0, r5
 8012fb8:	f011 f9f0 	bl	802439c <sniprintf>
 8012fbc:	2001      	movs	r0, #1
 8012fbe:	bd70      	pop	{r4, r5, r6, pc}
 8012fc0:	0802b047 	.word	0x0802b047

08012fc4 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012fc4:	f1a0 0004 	sub.w	r0, r0, #4
 8012fc8:	e7ec      	b.n	8012fa4 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012fca:	bf00      	nop

08012fcc <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012fcc:	b570      	push	{r4, r5, r6, lr}
 8012fce:	461e      	mov	r6, r3
 8012fd0:	e9d1 0300 	ldrd	r0, r3, [r1]
 8012fd4:	4615      	mov	r5, r2
 8012fd6:	4798      	blx	r3
 8012fd8:	4a03      	ldr	r2, [pc, #12]	@ (8012fe8 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 8012fda:	4603      	mov	r3, r0
 8012fdc:	4631      	mov	r1, r6
 8012fde:	4628      	mov	r0, r5
 8012fe0:	f011 f9dc 	bl	802439c <sniprintf>
 8012fe4:	2001      	movs	r0, #1
 8012fe6:	bd70      	pop	{r4, r5, r6, pc}
 8012fe8:	0802b047 	.word	0x0802b047

08012fec <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_string(Introspectable const&, char*, unsigned int) const>:
 8012fec:	f1a0 0004 	sub.w	r0, r0, #4
 8012ff0:	e7ec      	b.n	8012fcc <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::get_string(Introspectable const&, char*, unsigned int) const>
 8012ff2:	bf00      	nop

08012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>:
 8012ff4:	b510      	push	{r4, lr}
 8012ff6:	4604      	mov	r4, r0
 8012ff8:	f00f ffac 	bl	8022f54 <roundf>
 8012ffc:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 8013000:	ee17 3a90 	vmov	r3, s15
 8013004:	7023      	strb	r3, [r4, #0]
 8013006:	bd10      	pop	{r4, pc}

08013008 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013008:	6840      	ldr	r0, [r0, #4]
 801300a:	4770      	bx	lr

0801300c <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 801300c:	f7ff bffc 	b.w	8013008 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013010 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013010:	7a80      	ldrb	r0, [r0, #10]
 8013012:	4770      	bx	lr

08013014 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013014:	f7ff bffc 	b.w	8013010 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013018 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013018:	8900      	ldrh	r0, [r0, #8]
 801301a:	4770      	bx	lr

0801301c <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 801301c:	f7ff bffc 	b.w	8013018 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013020 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013020:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 8013024:	4770      	bx	lr
	...

08013028 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013028:	f7ff bffa 	b.w	8013020 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801302c <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801302c:	78c0      	ldrb	r0, [r0, #3]
 801302e:	4770      	bx	lr

08013030 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013030:	f7ff bffc 	b.w	801302c <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013034 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013034:	8d80      	ldrh	r0, [r0, #44]	@ 0x2c
 8013036:	4770      	bx	lr

08013038 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013038:	f7ff bffc 	b.w	8013034 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801303c <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801303c:	f890 0028 	ldrb.w	r0, [r0, #40]	@ 0x28
 8013040:	4770      	bx	lr
	...

08013044 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013044:	f7ff bffa 	b.w	801303c <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013048 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013048:	7880      	ldrb	r0, [r0, #2]
 801304a:	4770      	bx	lr

0801304c <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 801304c:	f7ff bffc 	b.w	8013048 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013050 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013050:	ed90 0a0b 	vldr	s0, [r0, #44]	@ 0x2c
 8013054:	4770      	bx	lr
	...

08013058 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013058:	f7ff bffa 	b.w	8013050 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801305c <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801305c:	ed90 0a10 	vldr	s0, [r0, #64]	@ 0x40
 8013060:	4770      	bx	lr
	...

08013064 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013064:	f7ff bffa 	b.w	801305c <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013068 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013068:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 801306c:	4770      	bx	lr
	...

08013070 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013070:	f7ff bffa 	b.w	8013068 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013074 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013074:	ed90 0a05 	vldr	s0, [r0, #20]
 8013078:	4770      	bx	lr
	...

0801307c <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 801307c:	f7ff bffa 	b.w	8013074 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013080 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013080:	ed90 0a04 	vldr	s0, [r0, #16]
 8013084:	4770      	bx	lr
	...

08013088 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013088:	f7ff bffa 	b.w	8013080 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801308c <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801308c:	7800      	ldrb	r0, [r0, #0]
 801308e:	4770      	bx	lr

08013090 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013090:	f7ff bffc 	b.w	801308c <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013094 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013094:	8a00      	ldrh	r0, [r0, #16]
 8013096:	4770      	bx	lr

08013098 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 8013098:	f7ff bffc 	b.w	8013094 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801309c <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801309c:	8a80      	ldrh	r0, [r0, #20]
 801309e:	4770      	bx	lr

080130a0 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 80130a0:	f7ff bffc 	b.w	801309c <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080130a4 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80130a4:	8a40      	ldrh	r0, [r0, #18]
 80130a6:	4770      	bx	lr

080130a8 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::_FUN(void*)>:
 80130a8:	f7ff bffc 	b.w	80130a4 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080130ac <FibrePropertyTypeInfo<Property<unsigned short> >::set_float(Introspectable const&, float) const>:
 80130ac:	b510      	push	{r4, lr}
 80130ae:	ed2d 8b02 	vpush	{d8}
 80130b2:	460c      	mov	r4, r1
 80130b4:	f00f ff4e 	bl	8022f54 <roundf>
 80130b8:	e9d4 0300 	ldrd	r0, r3, [r4]
 80130bc:	eeb0 8a40 	vmov.f32	s16, s0
 80130c0:	4798      	blx	r3
 80130c2:	eebc 0ac8 	vcvt.u32.f32	s0, s16
 80130c6:	6820      	ldr	r0, [r4, #0]
 80130c8:	68a3      	ldr	r3, [r4, #8]
 80130ca:	ee10 2a10 	vmov	r2, s0
 80130ce:	b291      	uxth	r1, r2
 80130d0:	4798      	blx	r3
 80130d2:	ecbd 8b02 	vpop	{d8}
 80130d6:	2001      	movs	r0, #1
 80130d8:	bd10      	pop	{r4, pc}

080130da <FibrePropertyTypeInfo<Property<long> >::set_float(Introspectable const&, float) const>:
 80130da:	b510      	push	{r4, lr}
 80130dc:	ed2d 8b02 	vpush	{d8}
 80130e0:	460c      	mov	r4, r1
 80130e2:	f00f ff37 	bl	8022f54 <roundf>
 80130e6:	e9d4 0300 	ldrd	r0, r3, [r4]
 80130ea:	eeb0 8a40 	vmov.f32	s16, s0
 80130ee:	4798      	blx	r3
 80130f0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80130f4:	6820      	ldr	r0, [r4, #0]
 80130f6:	68a3      	ldr	r3, [r4, #8]
 80130f8:	ee17 1a90 	vmov	r1, s15
 80130fc:	4798      	blx	r3
 80130fe:	ecbd 8b02 	vpop	{d8}
 8013102:	2001      	movs	r0, #1
 8013104:	bd10      	pop	{r4, pc}

08013106 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_float(Introspectable const&, float) const>:
 8013106:	b510      	push	{r4, lr}
 8013108:	ed2d 8b02 	vpush	{d8}
 801310c:	460c      	mov	r4, r1
 801310e:	f00f ff21 	bl	8022f54 <roundf>
 8013112:	e9d4 0300 	ldrd	r0, r3, [r4]
 8013116:	eeb0 8a40 	vmov.f32	s16, s0
 801311a:	4798      	blx	r3
 801311c:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8013120:	6820      	ldr	r0, [r4, #0]
 8013122:	68a3      	ldr	r3, [r4, #8]
 8013124:	ee17 1a90 	vmov	r1, s15
 8013128:	4798      	blx	r3
 801312a:	ecbd 8b02 	vpop	{d8}
 801312e:	2001      	movs	r0, #1
 8013130:	bd10      	pop	{r4, pc}

08013132 <FibrePropertyTypeInfo<Property<unsigned long> >::set_float(Introspectable const&, float) const>:
 8013132:	b510      	push	{r4, lr}
 8013134:	ed2d 8b02 	vpush	{d8}
 8013138:	460c      	mov	r4, r1
 801313a:	f00f ff0b 	bl	8022f54 <roundf>
 801313e:	e9d4 0300 	ldrd	r0, r3, [r4]
 8013142:	eeb0 8a40 	vmov.f32	s16, s0
 8013146:	4798      	blx	r3
 8013148:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 801314c:	6820      	ldr	r0, [r4, #0]
 801314e:	68a3      	ldr	r3, [r4, #8]
 8013150:	ee17 1a90 	vmov	r1, s15
 8013154:	4798      	blx	r3
 8013156:	ecbd 8b02 	vpop	{d8}
 801315a:	2001      	movs	r0, #1
 801315c:	bd10      	pop	{r4, pc}

0801315e <FibrePropertyTypeInfo<Property<float> >::set_float(Introspectable const&, float) const>:
 801315e:	b510      	push	{r4, lr}
 8013160:	460c      	mov	r4, r1
 8013162:	ed2d 8b02 	vpush	{d8}
 8013166:	e9d1 0300 	ldrd	r0, r3, [r1]
 801316a:	eeb0 8a40 	vmov.f32	s16, s0
 801316e:	4798      	blx	r3
 8013170:	6820      	ldr	r0, [r4, #0]
 8013172:	68a3      	ldr	r3, [r4, #8]
 8013174:	eeb0 0a48 	vmov.f32	s0, s16
 8013178:	4798      	blx	r3
 801317a:	ecbd 8b02 	vpop	{d8}
 801317e:	2001      	movs	r0, #1
 8013180:	bd10      	pop	{r4, pc}

08013182 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013182:	6840      	ldr	r0, [r0, #4]
 8013184:	4770      	bx	lr
	...

08013188 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013188:	f7ff bffb 	b.w	8013182 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801318c <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801318c:	7a80      	ldrb	r0, [r0, #10]
 801318e:	4770      	bx	lr

08013190 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013190:	f7ff bffc 	b.w	801318c <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013194 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013194:	8900      	ldrh	r0, [r0, #8]
 8013196:	4770      	bx	lr

08013198 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013198:	f7ff bffc 	b.w	8013194 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

0801319c <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 801319c:	ed90 0a09 	vldr	s0, [r0, #36]	@ 0x24
 80131a0:	4770      	bx	lr
	...

080131a4 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131a4:	f7ff bffa 	b.w	801319c <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131a8 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131a8:	78c0      	ldrb	r0, [r0, #3]
 80131aa:	4770      	bx	lr

080131ac <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131ac:	f7ff bffc 	b.w	80131a8 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131b0 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131b0:	8d80      	ldrh	r0, [r0, #44]	@ 0x2c
 80131b2:	4770      	bx	lr

080131b4 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131b4:	f7ff bffc 	b.w	80131b0 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131b8 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131b8:	f890 0028 	ldrb.w	r0, [r0, #40]	@ 0x28
 80131bc:	4770      	bx	lr
	...

080131c0 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131c0:	f7ff bffa 	b.w	80131b8 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131c4 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131c4:	7880      	ldrb	r0, [r0, #2]
 80131c6:	4770      	bx	lr

080131c8 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131c8:	f7ff bffc 	b.w	80131c4 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131cc <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131cc:	ed90 0a0b 	vldr	s0, [r0, #44]	@ 0x2c
 80131d0:	4770      	bx	lr
	...

080131d4 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131d4:	f7ff bffa 	b.w	80131cc <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131d8 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131d8:	ed90 0a10 	vldr	s0, [r0, #64]	@ 0x40
 80131dc:	4770      	bx	lr
	...

080131e0 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*)#1}::_FUN(void*)>:
 80131e0:	f7ff bffa 	b.w	80131d8 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131e4 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131e4:	ed90 0a0d 	vldr	s0, [r0, #52]	@ 0x34
 80131e8:	4770      	bx	lr
	...

080131ec <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131ec:	f7ff bffa 	b.w	80131e4 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131f0 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131f0:	ed90 0a05 	vldr	s0, [r0, #20]
 80131f4:	4770      	bx	lr
	...

080131f8 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 80131f8:	f7ff bffa 	b.w	80131f0 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

080131fc <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 80131fc:	ed90 0a04 	vldr	s0, [r0, #16]
 8013200:	4770      	bx	lr
	...

08013204 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013204:	f7ff bffa 	b.w	80131fc <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013208 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013208:	7800      	ldrb	r0, [r0, #0]
 801320a:	4770      	bx	lr

0801320c <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 801320c:	f7ff bffc 	b.w	8013208 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013210 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013210:	8a00      	ldrh	r0, [r0, #16]
 8013212:	4770      	bx	lr

08013214 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013214:	f7ff bffc 	b.w	8013210 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013218 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013218:	8a80      	ldrh	r0, [r0, #20]
 801321a:	4770      	bx	lr

0801321c <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 801321c:	f7ff bffc 	b.w	8013218 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013220 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>:
 8013220:	8a40      	ldrh	r0, [r0, #18]
 8013222:	4770      	bx	lr

08013224 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::_FUN(void*)>:
 8013224:	f7ff bffc 	b.w	8013220 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*)#1}::operator()(void*) const [clone .isra.0]>

08013228 <fibre_property_uint8_readonly_read(std::optional<Property<unsigned char const> >, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 8013228:	b538      	push	{r3, r4, r5, lr}
 801322a:	b13a      	cbz	r2, 801323c <fibre_property_uint8_readonly_read(std::optional<Property<unsigned char const> >, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x14>
 801322c:	461d      	mov	r5, r3
 801322e:	4614      	mov	r4, r2
 8013230:	4788      	blx	r1
 8013232:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013236:	b123      	cbz	r3, 8013242 <fibre_property_uint8_readonly_read(std::optional<Property<unsigned char const> >, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x1a>
 8013238:	4293      	cmp	r3, r2
 801323a:	d802      	bhi.n	8013242 <fibre_property_uint8_readonly_read(std::optional<Property<unsigned char const> >, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x1a>
 801323c:	2400      	movs	r4, #0
 801323e:	4620      	mov	r0, r4
 8013240:	bd38      	pop	{r3, r4, r5, pc}
 8013242:	7010      	strb	r0, [r2, #0]
 8013244:	682b      	ldr	r3, [r5, #0]
 8013246:	3301      	adds	r3, #1
 8013248:	602b      	str	r3, [r5, #0]
 801324a:	4620      	mov	r0, r4
 801324c:	bd38      	pop	{r3, r4, r5, pc}
 801324e:	bf00      	nop

08013250 <fibre_property_bool_readonly_read(std::optional<Property<bool const> >, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 8013250:	b538      	push	{r3, r4, r5, lr}
 8013252:	b13a      	cbz	r2, 8013264 <fibre_property_bool_readonly_read(std::optional<Property<bool const> >, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x14>
 8013254:	461d      	mov	r5, r3
 8013256:	4614      	mov	r4, r2
 8013258:	4788      	blx	r1
 801325a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801325e:	b123      	cbz	r3, 801326a <fibre_property_bool_readonly_read(std::optional<Property<bool const> >, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x1a>
 8013260:	4293      	cmp	r3, r2
 8013262:	d802      	bhi.n	801326a <fibre_property_bool_readonly_read(std::optional<Property<bool const> >, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x1a>
 8013264:	2400      	movs	r4, #0
 8013266:	4620      	mov	r0, r4
 8013268:	bd38      	pop	{r3, r4, r5, pc}
 801326a:	7010      	strb	r0, [r2, #0]
 801326c:	682b      	ldr	r3, [r5, #0]
 801326e:	3301      	adds	r3, #1
 8013270:	602b      	str	r3, [r5, #0]
 8013272:	4620      	mov	r0, r4
 8013274:	bd38      	pop	{r3, r4, r5, pc}
 8013276:	bf00      	nop

08013278 <odrive_axis_clear_errors(std::optional<ODriveIntf::AxisIntf*>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 8013278:	6802      	ldr	r2, [r0, #0]
 801327a:	490c      	ldr	r1, [pc, #48]	@ (80132ac <odrive_axis_clear_errors(std::optional<ODriveIntf::AxisIntf*>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x34>)
 801327c:	6852      	ldr	r2, [r2, #4]
 801327e:	428a      	cmp	r2, r1
 8013280:	b538      	push	{r3, r4, r5, lr}
 8013282:	d10f      	bne.n	80132a4 <odrive_axis_clear_errors(std::optional<ODriveIntf::AxisIntf*>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x2c>
 8013284:	4603      	mov	r3, r0
 8013286:	e9d0 4005 	ldrd	r4, r0, [r0, #20]
 801328a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801328c:	6919      	ldr	r1, [r3, #16]
 801328e:	2200      	movs	r2, #0
 8013290:	f8a5 2064 	strh.w	r2, [r5, #100]	@ 0x64
 8013294:	7502      	strb	r2, [r0, #20]
 8013296:	2000      	movs	r0, #0
 8013298:	7222      	strb	r2, [r4, #8]
 801329a:	6448      	str	r0, [r1, #68]	@ 0x44
 801329c:	828a      	strh	r2, [r1, #20]
 801329e:	2001      	movs	r0, #1
 80132a0:	651a      	str	r2, [r3, #80]	@ 0x50
 80132a2:	bd38      	pop	{r3, r4, r5, pc}
 80132a4:	4790      	blx	r2
 80132a6:	2001      	movs	r0, #1
 80132a8:	bd38      	pop	{r3, r4, r5, pc}
 80132aa:	bf00      	nop
 80132ac:	0800ce51 	.word	0x0800ce51

080132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 80132b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132b4:	b084      	sub	sp, #16
 80132b6:	ac04      	add	r4, sp, #16
 80132b8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80132bc:	f89d 400c 	ldrb.w	r4, [sp, #12]
 80132c0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80132c2:	b194      	cbz	r4, 80132ea <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x3a>
 80132c4:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 80132c8:	e9dd 7200 	ldrd	r7, r2, [sp]
 80132cc:	b193      	cbz	r3, 80132f4 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x44>
 80132ce:	4638      	mov	r0, r7
 80132d0:	f89d 8028 	ldrb.w	r8, [sp, #40]	@ 0x28
 80132d4:	4790      	blx	r2
 80132d6:	4606      	mov	r6, r0
 80132d8:	9b02      	ldr	r3, [sp, #8]
 80132da:	4641      	mov	r1, r8
 80132dc:	4638      	mov	r0, r7
 80132de:	4798      	blx	r3
 80132e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80132e4:	b1d3      	cbz	r3, 801331c <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6c>
 80132e6:	4293      	cmp	r3, r2
 80132e8:	d818      	bhi.n	801331c <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6c>
 80132ea:	2400      	movs	r4, #0
 80132ec:	4620      	mov	r0, r4
 80132ee:	b004      	add	sp, #16
 80132f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80132f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80132f8:	681b      	ldr	r3, [r3, #0]
 80132fa:	6849      	ldr	r1, [r1, #4]
 80132fc:	428b      	cmp	r3, r1
 80132fe:	d015      	beq.n	801332c <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7c>
 8013300:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8013302:	1c59      	adds	r1, r3, #1
 8013304:	6001      	str	r1, [r0, #0]
 8013306:	f893 8000 	ldrb.w	r8, [r3]
 801330a:	4638      	mov	r0, r7
 801330c:	f1b8 0800 	subs.w	r8, r8, #0
 8013310:	bf18      	it	ne
 8013312:	f04f 0801 	movne.w	r8, #1
 8013316:	4790      	blx	r2
 8013318:	4606      	mov	r6, r0
 801331a:	e7dd      	b.n	80132d8 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x28>
 801331c:	7016      	strb	r6, [r2, #0]
 801331e:	682b      	ldr	r3, [r5, #0]
 8013320:	4620      	mov	r0, r4
 8013322:	3301      	adds	r3, #1
 8013324:	602b      	str	r3, [r5, #0]
 8013326:	b004      	add	sp, #16
 8013328:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801332c:	4638      	mov	r0, r7
 801332e:	4790      	blx	r2
 8013330:	4606      	mov	r6, r0
 8013332:	e7d5      	b.n	80132e0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x30>

08013334 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013338:	b084      	sub	sp, #16
 801333a:	ac04      	add	r4, sp, #16
 801333c:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013340:	f89d 400c 	ldrb.w	r4, [sp, #12]
 8013344:	e9dd 350b 	ldrd	r3, r5, [sp, #44]	@ 0x2c
 8013348:	b174      	cbz	r4, 8013368 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 801334a:	e9dd 7600 	ldrd	r7, r6, [sp]
 801334e:	6859      	ldr	r1, [r3, #4]
 8013350:	681a      	ldr	r2, [r3, #0]
 8013352:	4638      	mov	r0, r7
 8013354:	b169      	cbz	r1, 8013372 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x3e>
 8013356:	4291      	cmp	r1, r2
 8013358:	d80b      	bhi.n	8013372 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x3e>
 801335a:	47b0      	blx	r6
 801335c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013360:	4606      	mov	r6, r0
 8013362:	b19b      	cbz	r3, 801338c <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013364:	4293      	cmp	r3, r2
 8013366:	d811      	bhi.n	801338c <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013368:	2400      	movs	r4, #0
 801336a:	4620      	mov	r0, r4
 801336c:	b004      	add	sp, #16
 801336e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013372:	f812 8b01 	ldrb.w	r8, [r2], #1
 8013376:	601a      	str	r2, [r3, #0]
 8013378:	47b0      	blx	r6
 801337a:	9b02      	ldr	r3, [sp, #8]
 801337c:	4606      	mov	r6, r0
 801337e:	4641      	mov	r1, r8
 8013380:	4638      	mov	r0, r7
 8013382:	4798      	blx	r3
 8013384:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013388:	2b00      	cmp	r3, #0
 801338a:	d1eb      	bne.n	8013364 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x30>
 801338c:	7016      	strb	r6, [r2, #0]
 801338e:	682b      	ldr	r3, [r5, #0]
 8013390:	4620      	mov	r0, r4
 8013392:	3301      	adds	r3, #1
 8013394:	602b      	str	r3, [r5, #0]
 8013396:	b004      	add	sp, #16
 8013398:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801339c <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 801339c:	b530      	push	{r4, r5, lr}
 801339e:	4615      	mov	r5, r2
 80133a0:	b083      	sub	sp, #12
 80133a2:	b1ba      	cbz	r2, 80133d4 <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x38>
 80133a4:	461c      	mov	r4, r3
 80133a6:	4788      	blx	r1
 80133a8:	e9d4 1300 	ldrd	r1, r3, [r4]
 80133ac:	ed8d 0a01 	vstr	s0, [sp, #4]
 80133b0:	9801      	ldr	r0, [sp, #4]
 80133b2:	f04f 0c00 	mov.w	ip, #0
 80133b6:	fa20 f20c 	lsr.w	r2, r0, ip
 80133ba:	f10c 0c08 	add.w	ip, ip, #8
 80133be:	b10b      	cbz	r3, 80133c4 <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x28>
 80133c0:	4299      	cmp	r1, r3
 80133c2:	d20a      	bcs.n	80133da <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x3e>
 80133c4:	700a      	strb	r2, [r1, #0]
 80133c6:	6821      	ldr	r1, [r4, #0]
 80133c8:	f1bc 0f20 	cmp.w	ip, #32
 80133cc:	f101 0101 	add.w	r1, r1, #1
 80133d0:	6021      	str	r1, [r4, #0]
 80133d2:	d1f0      	bne.n	80133b6 <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x1a>
 80133d4:	4628      	mov	r0, r5
 80133d6:	b003      	add	sp, #12
 80133d8:	bd30      	pop	{r4, r5, pc}
 80133da:	2500      	movs	r5, #0
 80133dc:	e7fa      	b.n	80133d4 <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x38>
 80133de:	bf00      	nop

080133e0 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 80133e0:	b538      	push	{r3, r4, r5, lr}
 80133e2:	4615      	mov	r5, r2
 80133e4:	b1a2      	cbz	r2, 8013410 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x30>
 80133e6:	461c      	mov	r4, r3
 80133e8:	4788      	blx	r1
 80133ea:	e9d4 1300 	ldrd	r1, r3, [r4]
 80133ee:	f04f 0c00 	mov.w	ip, #0
 80133f2:	fa20 f20c 	lsr.w	r2, r0, ip
 80133f6:	f10c 0c08 	add.w	ip, ip, #8
 80133fa:	b10b      	cbz	r3, 8013400 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x20>
 80133fc:	4299      	cmp	r1, r3
 80133fe:	d209      	bcs.n	8013414 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x34>
 8013400:	700a      	strb	r2, [r1, #0]
 8013402:	6821      	ldr	r1, [r4, #0]
 8013404:	f1bc 0f20 	cmp.w	ip, #32
 8013408:	f101 0101 	add.w	r1, r1, #1
 801340c:	6021      	str	r1, [r4, #0]
 801340e:	d1f0      	bne.n	80133f2 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x12>
 8013410:	4628      	mov	r0, r5
 8013412:	bd38      	pop	{r3, r4, r5, pc}
 8013414:	2500      	movs	r5, #0
 8013416:	e7fb      	b.n	8013410 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]+0x30>

08013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801341c:	b084      	sub	sp, #16
 801341e:	ac04      	add	r4, sp, #16
 8013420:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013424:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013428:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801342a:	2e00      	cmp	r6, #0
 801342c:	d039      	beq.n	80134a2 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 801342e:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8013432:	e9dd 7200 	ldrd	r7, r2, [sp]
 8013436:	b1eb      	cbz	r3, 8013474 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5c>
 8013438:	4638      	mov	r0, r7
 801343a:	f8bd 8028 	ldrh.w	r8, [sp, #40]	@ 0x28
 801343e:	4790      	blx	r2
 8013440:	4605      	mov	r5, r0
 8013442:	9b02      	ldr	r3, [sp, #8]
 8013444:	4641      	mov	r1, r8
 8013446:	4638      	mov	r0, r7
 8013448:	4798      	blx	r3
 801344a:	e9d4 3200 	ldrd	r3, r2, [r4]
 801344e:	2a00      	cmp	r2, #0
 8013450:	d032      	beq.n	80134b8 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xa0>
 8013452:	429a      	cmp	r2, r3
 8013454:	d925      	bls.n	80134a2 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 8013456:	701d      	strb	r5, [r3, #0]
 8013458:	6823      	ldr	r3, [r4, #0]
 801345a:	3301      	adds	r3, #1
 801345c:	429a      	cmp	r2, r3
 801345e:	6023      	str	r3, [r4, #0]
 8013460:	d91f      	bls.n	80134a2 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 8013462:	122d      	asrs	r5, r5, #8
 8013464:	701d      	strb	r5, [r3, #0]
 8013466:	6823      	ldr	r3, [r4, #0]
 8013468:	4630      	mov	r0, r6
 801346a:	3301      	adds	r3, #1
 801346c:	6023      	str	r3, [r4, #0]
 801346e:	b004      	add	sp, #16
 8013470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013474:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013476:	e9d3 1000 	ldrd	r1, r0, [r3]
 801347a:	b1b8      	cbz	r0, 80134ac <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x94>
 801347c:	4288      	cmp	r0, r1
 801347e:	d920      	bls.n	80134c2 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xaa>
 8013480:	460b      	mov	r3, r1
 8013482:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8013484:	f813 8b01 	ldrb.w	r8, [r3], #1
 8013488:	602b      	str	r3, [r5, #0]
 801348a:	4298      	cmp	r0, r3
 801348c:	d919      	bls.n	80134c2 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xaa>
 801348e:	781b      	ldrb	r3, [r3, #0]
 8013490:	ea48 2803 	orr.w	r8, r8, r3, lsl #8
 8013494:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013496:	3102      	adds	r1, #2
 8013498:	6019      	str	r1, [r3, #0]
 801349a:	4638      	mov	r0, r7
 801349c:	4790      	blx	r2
 801349e:	4605      	mov	r5, r0
 80134a0:	e7cf      	b.n	8013442 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2a>
 80134a2:	2600      	movs	r6, #0
 80134a4:	4630      	mov	r0, r6
 80134a6:	b004      	add	sp, #16
 80134a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80134ac:	460b      	mov	r3, r1
 80134ae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80134b0:	f813 8b01 	ldrb.w	r8, [r3], #1
 80134b4:	6003      	str	r3, [r0, #0]
 80134b6:	e7ea      	b.n	801348e <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x76>
 80134b8:	701d      	strb	r5, [r3, #0]
 80134ba:	6823      	ldr	r3, [r4, #0]
 80134bc:	3301      	adds	r3, #1
 80134be:	6023      	str	r3, [r4, #0]
 80134c0:	e7cf      	b.n	8013462 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4a>
 80134c2:	4638      	mov	r0, r7
 80134c4:	4790      	blx	r2
 80134c6:	4605      	mov	r5, r0
 80134c8:	e7bf      	b.n	801344a <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x32>
 80134ca:	bf00      	nop

080134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 80134cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134d0:	b084      	sub	sp, #16
 80134d2:	ac04      	add	r4, sp, #16
 80134d4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80134d8:	f89d 600c 	ldrb.w	r6, [sp, #12]
 80134dc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80134de:	b1ee      	cbz	r6, 801351c <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 80134e0:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 80134e4:	468c      	mov	ip, r1
 80134e6:	4607      	mov	r7, r0
 80134e8:	b1e3      	cbz	r3, 8013524 <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 80134ea:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80134ee:	47e0      	blx	ip
 80134f0:	4605      	mov	r5, r0
 80134f2:	9b02      	ldr	r3, [sp, #8]
 80134f4:	4641      	mov	r1, r8
 80134f6:	4638      	mov	r0, r7
 80134f8:	4798      	blx	r3
 80134fa:	e9d4 3100 	ldrd	r3, r1, [r4]
 80134fe:	2200      	movs	r2, #0
 8013500:	fa25 fc02 	lsr.w	ip, r5, r2
 8013504:	3208      	adds	r2, #8
 8013506:	b109      	cbz	r1, 801350c <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x40>
 8013508:	4299      	cmp	r1, r3
 801350a:	d920      	bls.n	801354e <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 801350c:	f883 c000 	strb.w	ip, [r3]
 8013510:	6823      	ldr	r3, [r4, #0]
 8013512:	2a20      	cmp	r2, #32
 8013514:	f103 0301 	add.w	r3, r3, #1
 8013518:	6023      	str	r3, [r4, #0]
 801351a:	d1f1      	bne.n	8013500 <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 801351c:	4630      	mov	r0, r6
 801351e:	b004      	add	sp, #16
 8013520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013524:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013526:	e9d2 2500 	ldrd	r2, r5, [r2]
 801352a:	4698      	mov	r8, r3
 801352c:	b10d      	cbz	r5, 8013532 <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x66>
 801352e:	4295      	cmp	r5, r2
 8013530:	d90f      	bls.n	8013552 <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x86>
 8013532:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013536:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013538:	4098      	lsls	r0, r3
 801353a:	3308      	adds	r3, #8
 801353c:	2b20      	cmp	r3, #32
 801353e:	600a      	str	r2, [r1, #0]
 8013540:	ea48 0800 	orr.w	r8, r8, r0
 8013544:	d1f2      	bne.n	801352c <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x60>
 8013546:	4638      	mov	r0, r7
 8013548:	47e0      	blx	ip
 801354a:	4605      	mov	r5, r0
 801354c:	e7d1      	b.n	80134f2 <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x26>
 801354e:	2600      	movs	r6, #0
 8013550:	e7e4      	b.n	801351c <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013552:	4638      	mov	r0, r7
 8013554:	47e0      	blx	ip
 8013556:	4605      	mov	r5, r0
 8013558:	e7cf      	b.n	80134fa <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2e>
 801355a:	bf00      	nop

0801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 801355c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013560:	ed2d 8b02 	vpush	{d8}
 8013564:	b084      	sub	sp, #16
 8013566:	ac04      	add	r4, sp, #16
 8013568:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801356c:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013570:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8013572:	b1fe      	cbz	r6, 80135b4 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013574:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8013578:	4688      	mov	r8, r1
 801357a:	4607      	mov	r7, r0
 801357c:	b303      	cbz	r3, 80135c0 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x64>
 801357e:	ed9d 8a0c 	vldr	s16, [sp, #48]	@ 0x30
 8013582:	4788      	blx	r1
 8013584:	ee10 5a10 	vmov	r5, s0
 8013588:	9b02      	ldr	r3, [sp, #8]
 801358a:	eeb0 0a48 	vmov.f32	s0, s16
 801358e:	4638      	mov	r0, r7
 8013590:	4798      	blx	r3
 8013592:	e9d4 3000 	ldrd	r3, r0, [r4]
 8013596:	4629      	mov	r1, r5
 8013598:	2200      	movs	r2, #0
 801359a:	fa21 f502 	lsr.w	r5, r1, r2
 801359e:	3208      	adds	r2, #8
 80135a0:	b108      	cbz	r0, 80135a6 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4a>
 80135a2:	4298      	cmp	r0, r3
 80135a4:	d929      	bls.n	80135fa <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x9e>
 80135a6:	701d      	strb	r5, [r3, #0]
 80135a8:	6823      	ldr	r3, [r4, #0]
 80135aa:	2a20      	cmp	r2, #32
 80135ac:	f103 0301 	add.w	r3, r3, #1
 80135b0:	6023      	str	r3, [r4, #0]
 80135b2:	d1f2      	bne.n	801359a <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x3e>
 80135b4:	4630      	mov	r0, r6
 80135b6:	b004      	add	sp, #16
 80135b8:	ecbd 8b02 	vpop	{d8}
 80135bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80135c2:	e9d2 2000 	ldrd	r2, r0, [r2]
 80135c6:	469c      	mov	ip, r3
 80135c8:	b108      	cbz	r0, 80135ce <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x72>
 80135ca:	4290      	cmp	r0, r2
 80135cc:	d910      	bls.n	80135f0 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x94>
 80135ce:	f812 1b01 	ldrb.w	r1, [r2], #1
 80135d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80135d4:	4099      	lsls	r1, r3
 80135d6:	3308      	adds	r3, #8
 80135d8:	2b20      	cmp	r3, #32
 80135da:	602a      	str	r2, [r5, #0]
 80135dc:	ea4c 0c01 	orr.w	ip, ip, r1
 80135e0:	d1f2      	bne.n	80135c8 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6c>
 80135e2:	4638      	mov	r0, r7
 80135e4:	ee08 ca10 	vmov	s16, ip
 80135e8:	47c0      	blx	r8
 80135ea:	ee10 5a10 	vmov	r5, s0
 80135ee:	e7cb      	b.n	8013588 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2c>
 80135f0:	4638      	mov	r0, r7
 80135f2:	47c0      	blx	r8
 80135f4:	ee10 5a10 	vmov	r5, s0
 80135f8:	e7cb      	b.n	8013592 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x36>
 80135fa:	2600      	movs	r6, #0
 80135fc:	e7da      	b.n	80135b4 <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 80135fe:	bf00      	nop

08013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013600:	b570      	push	{r4, r5, r6, lr}
 8013602:	b086      	sub	sp, #24
 8013604:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8013608:	f89d 500c 	ldrb.w	r5, [sp, #12]
 801360c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8013610:	2d00      	cmp	r5, #0
 8013612:	d036      	beq.n	8013682 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 8013614:	f89d 202c 	ldrb.w	r2, [sp, #44]	@ 0x2c
 8013618:	2a00      	cmp	r2, #0
 801361a:	d036      	beq.n	801368a <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 801361c:	9e00      	ldr	r6, [sp, #0]
 801361e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8013620:	9b01      	ldr	r3, [sp, #4]
 8013622:	9004      	str	r0, [sp, #16]
 8013624:	4630      	mov	r0, r6
 8013626:	4798      	blx	r3
 8013628:	9b02      	ldr	r3, [sp, #8]
 801362a:	9005      	str	r0, [sp, #20]
 801362c:	9904      	ldr	r1, [sp, #16]
 801362e:	4630      	mov	r0, r6
 8013630:	4798      	blx	r3
 8013632:	6861      	ldr	r1, [r4, #4]
 8013634:	f8bd 0014 	ldrh.w	r0, [sp, #20]
 8013638:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801363c:	6823      	ldr	r3, [r4, #0]
 801363e:	2900      	cmp	r1, #0
 8013640:	d054      	beq.n	80136ec <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xec>
 8013642:	4299      	cmp	r1, r3
 8013644:	d91d      	bls.n	8013682 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 8013646:	701a      	strb	r2, [r3, #0]
 8013648:	6823      	ldr	r3, [r4, #0]
 801364a:	3301      	adds	r3, #1
 801364c:	428b      	cmp	r3, r1
 801364e:	6023      	str	r3, [r4, #0]
 8013650:	d217      	bcs.n	8013682 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 8013652:	1212      	asrs	r2, r2, #8
 8013654:	701a      	strb	r2, [r3, #0]
 8013656:	6822      	ldr	r2, [r4, #0]
 8013658:	6863      	ldr	r3, [r4, #4]
 801365a:	1c51      	adds	r1, r2, #1
 801365c:	6021      	str	r1, [r4, #0]
 801365e:	2b00      	cmp	r3, #0
 8013660:	d04e      	beq.n	8013700 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x100>
 8013662:	428b      	cmp	r3, r1
 8013664:	d90d      	bls.n	8013682 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 8013666:	7050      	strb	r0, [r2, #1]
 8013668:	6822      	ldr	r2, [r4, #0]
 801366a:	3201      	adds	r2, #1
 801366c:	4293      	cmp	r3, r2
 801366e:	6022      	str	r2, [r4, #0]
 8013670:	d907      	bls.n	8013682 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x82>
 8013672:	1200      	asrs	r0, r0, #8
 8013674:	7010      	strb	r0, [r2, #0]
 8013676:	6823      	ldr	r3, [r4, #0]
 8013678:	4628      	mov	r0, r5
 801367a:	3301      	adds	r3, #1
 801367c:	6023      	str	r3, [r4, #0]
 801367e:	b006      	add	sp, #24
 8013680:	bd70      	pop	{r4, r5, r6, pc}
 8013682:	2500      	movs	r5, #0
 8013684:	4628      	mov	r0, r5
 8013686:	b006      	add	sp, #24
 8013688:	bd70      	pop	{r4, r5, r6, pc}
 801368a:	e9d3 2100 	ldrd	r2, r1, [r3]
 801368e:	b1f1      	cbz	r1, 80136ce <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xce>
 8013690:	4291      	cmp	r1, r2
 8013692:	d930      	bls.n	80136f6 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xf6>
 8013694:	4610      	mov	r0, r2
 8013696:	f810 6b01 	ldrb.w	r6, [r0], #1
 801369a:	6018      	str	r0, [r3, #0]
 801369c:	4281      	cmp	r1, r0
 801369e:	d92a      	bls.n	80136f6 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xf6>
 80136a0:	7850      	ldrb	r0, [r2, #1]
 80136a2:	ea46 2c00 	orr.w	ip, r6, r0, lsl #8
 80136a6:	1c90      	adds	r0, r2, #2
 80136a8:	4281      	cmp	r1, r0
 80136aa:	6018      	str	r0, [r3, #0]
 80136ac:	d923      	bls.n	80136f6 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xf6>
 80136ae:	1cd0      	adds	r0, r2, #3
 80136b0:	4281      	cmp	r1, r0
 80136b2:	7896      	ldrb	r6, [r2, #2]
 80136b4:	6018      	str	r0, [r3, #0]
 80136b6:	d91e      	bls.n	80136f6 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xf6>
 80136b8:	78d1      	ldrb	r1, [r2, #3]
 80136ba:	3204      	adds	r2, #4
 80136bc:	601a      	str	r2, [r3, #0]
 80136be:	ea46 2301 	orr.w	r3, r6, r1, lsl #8
 80136c2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80136c6:	9e00      	ldr	r6, [sp, #0]
 80136c8:	f8ad c02a 	strh.w	ip, [sp, #42]	@ 0x2a
 80136cc:	e7a7      	b.n	801361e <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 80136ce:	4611      	mov	r1, r2
 80136d0:	1c90      	adds	r0, r2, #2
 80136d2:	f811 6b01 	ldrb.w	r6, [r1], #1
 80136d6:	6019      	str	r1, [r3, #0]
 80136d8:	7851      	ldrb	r1, [r2, #1]
 80136da:	6018      	str	r0, [r3, #0]
 80136dc:	ea46 2c01 	orr.w	ip, r6, r1, lsl #8
 80136e0:	1cd1      	adds	r1, r2, #3
 80136e2:	7896      	ldrb	r6, [r2, #2]
 80136e4:	6019      	str	r1, [r3, #0]
 80136e6:	78d1      	ldrb	r1, [r2, #3]
 80136e8:	3204      	adds	r2, #4
 80136ea:	e7e7      	b.n	80136bc <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0xbc>
 80136ec:	701a      	strb	r2, [r3, #0]
 80136ee:	6823      	ldr	r3, [r4, #0]
 80136f0:	3301      	adds	r3, #1
 80136f2:	6023      	str	r3, [r4, #0]
 80136f4:	e7ad      	b.n	8013652 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x52>
 80136f6:	e9dd 0300 	ldrd	r0, r3, [sp]
 80136fa:	4798      	blx	r3
 80136fc:	9005      	str	r0, [sp, #20]
 80136fe:	e798      	b.n	8013632 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x32>
 8013700:	7050      	strb	r0, [r2, #1]
 8013702:	6822      	ldr	r2, [r4, #0]
 8013704:	3201      	adds	r2, #1
 8013706:	6022      	str	r2, [r4, #0]
 8013708:	e7b3      	b.n	8013672 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x72>
 801370a:	bf00      	nop

0801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 801370c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013710:	b084      	sub	sp, #16
 8013712:	ac04      	add	r4, sp, #16
 8013714:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013718:	f89d 600c 	ldrb.w	r6, [sp, #12]
 801371c:	e9dd 740c 	ldrd	r7, r4, [sp, #48]	@ 0x30
 8013720:	b346      	cbz	r6, 8013774 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013722:	e9d7 2100 	ldrd	r2, r1, [r7]
 8013726:	2300      	movs	r3, #0
 8013728:	461d      	mov	r5, r3
 801372a:	b109      	cbz	r1, 8013730 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 801372c:	4291      	cmp	r1, r2
 801372e:	d925      	bls.n	801377c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013730:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013734:	603a      	str	r2, [r7, #0]
 8013736:	4098      	lsls	r0, r3
 8013738:	3308      	adds	r3, #8
 801373a:	2b20      	cmp	r3, #32
 801373c:	ea45 0500 	orr.w	r5, r5, r0
 8013740:	d1f3      	bne.n	801372a <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013742:	e9dd 8300 	ldrd	r8, r3, [sp]
 8013746:	4640      	mov	r0, r8
 8013748:	4798      	blx	r3
 801374a:	9b02      	ldr	r3, [sp, #8]
 801374c:	4607      	mov	r7, r0
 801374e:	4629      	mov	r1, r5
 8013750:	4640      	mov	r0, r8
 8013752:	4798      	blx	r3
 8013754:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013758:	2200      	movs	r2, #0
 801375a:	fa47 f502 	asr.w	r5, r7, r2
 801375e:	3208      	adds	r2, #8
 8013760:	b109      	cbz	r1, 8013766 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013762:	4299      	cmp	r1, r3
 8013764:	d90f      	bls.n	8013786 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 8013766:	701d      	strb	r5, [r3, #0]
 8013768:	6823      	ldr	r3, [r4, #0]
 801376a:	2a20      	cmp	r2, #32
 801376c:	f103 0301 	add.w	r3, r3, #1
 8013770:	6023      	str	r3, [r4, #0]
 8013772:	d1f2      	bne.n	801375a <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013774:	4630      	mov	r0, r6
 8013776:	b004      	add	sp, #16
 8013778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801377c:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013780:	4798      	blx	r3
 8013782:	4607      	mov	r7, r0
 8013784:	e7e6      	b.n	8013754 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 8013786:	2600      	movs	r6, #0
 8013788:	e7f4      	b.n	8013774 <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 801378a:	bf00      	nop

0801378c <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 801378c:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8013790:	b084      	sub	sp, #16
 8013792:	ac04      	add	r4, sp, #16
 8013794:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013798:	f89d 600c 	ldrb.w	r6, [sp, #12]
 801379c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801379e:	b1ee      	cbz	r6, 80137dc <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 80137a0:	f89d 302c 	ldrb.w	r3, [sp, #44]	@ 0x2c
 80137a4:	460d      	mov	r5, r1
 80137a6:	4607      	mov	r7, r0
 80137a8:	b1e3      	cbz	r3, 80137e4 <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 80137aa:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80137ae:	4788      	blx	r1
 80137b0:	4605      	mov	r5, r0
 80137b2:	9b02      	ldr	r3, [sp, #8]
 80137b4:	4649      	mov	r1, r9
 80137b6:	4638      	mov	r0, r7
 80137b8:	4798      	blx	r3
 80137ba:	e9d4 3100 	ldrd	r3, r1, [r4]
 80137be:	2200      	movs	r2, #0
 80137c0:	fa45 fc02 	asr.w	ip, r5, r2
 80137c4:	3208      	adds	r2, #8
 80137c6:	b109      	cbz	r1, 80137cc <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x40>
 80137c8:	4299      	cmp	r1, r3
 80137ca:	d927      	bls.n	801381c <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x90>
 80137cc:	f883 c000 	strb.w	ip, [r3]
 80137d0:	6823      	ldr	r3, [r4, #0]
 80137d2:	2a20      	cmp	r2, #32
 80137d4:	f103 0301 	add.w	r3, r3, #1
 80137d8:	6023      	str	r3, [r4, #0]
 80137da:	d1f1      	bne.n	80137c0 <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 80137dc:	4630      	mov	r0, r6
 80137de:	b004      	add	sp, #16
 80137e0:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80137e4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80137e6:	e9d2 2c00 	ldrd	r2, ip, [r2]
 80137ea:	469e      	mov	lr, r3
 80137ec:	f1bc 0f00 	cmp.w	ip, #0
 80137f0:	d001      	beq.n	80137f6 <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6a>
 80137f2:	4594      	cmp	ip, r2
 80137f4:	d90e      	bls.n	8013814 <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x88>
 80137f6:	f812 0b01 	ldrb.w	r0, [r2], #1
 80137fa:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80137fc:	4098      	lsls	r0, r3
 80137fe:	3308      	adds	r3, #8
 8013800:	2b20      	cmp	r3, #32
 8013802:	600a      	str	r2, [r1, #0]
 8013804:	ea4e 0e00 	orr.w	lr, lr, r0
 8013808:	d1f0      	bne.n	80137ec <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x60>
 801380a:	4638      	mov	r0, r7
 801380c:	46f1      	mov	r9, lr
 801380e:	47a8      	blx	r5
 8013810:	4605      	mov	r5, r0
 8013812:	e7ce      	b.n	80137b2 <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x26>
 8013814:	4638      	mov	r0, r7
 8013816:	47a8      	blx	r5
 8013818:	4605      	mov	r5, r0
 801381a:	e7ce      	b.n	80137ba <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2e>
 801381c:	2600      	movs	r6, #0
 801381e:	e7dd      	b.n	80137dc <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>

08013820 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013824:	b084      	sub	sp, #16
 8013826:	ac04      	add	r4, sp, #16
 8013828:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801382c:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013830:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 8013834:	b346      	cbz	r6, 8013888 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013836:	e9d7 2100 	ldrd	r2, r1, [r7]
 801383a:	2300      	movs	r3, #0
 801383c:	461d      	mov	r5, r3
 801383e:	b109      	cbz	r1, 8013844 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 8013840:	4291      	cmp	r1, r2
 8013842:	d925      	bls.n	8013890 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013844:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013848:	603a      	str	r2, [r7, #0]
 801384a:	4098      	lsls	r0, r3
 801384c:	3308      	adds	r3, #8
 801384e:	2b20      	cmp	r3, #32
 8013850:	ea45 0500 	orr.w	r5, r5, r0
 8013854:	d1f3      	bne.n	801383e <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013856:	e9dd 8300 	ldrd	r8, r3, [sp]
 801385a:	4640      	mov	r0, r8
 801385c:	4798      	blx	r3
 801385e:	9b02      	ldr	r3, [sp, #8]
 8013860:	4607      	mov	r7, r0
 8013862:	b2a9      	uxth	r1, r5
 8013864:	4640      	mov	r0, r8
 8013866:	4798      	blx	r3
 8013868:	e9d4 3100 	ldrd	r3, r1, [r4]
 801386c:	2200      	movs	r2, #0
 801386e:	fa47 f002 	asr.w	r0, r7, r2
 8013872:	3208      	adds	r2, #8
 8013874:	b109      	cbz	r1, 801387a <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013876:	4299      	cmp	r1, r3
 8013878:	d90f      	bls.n	801389a <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 801387a:	7018      	strb	r0, [r3, #0]
 801387c:	6823      	ldr	r3, [r4, #0]
 801387e:	2a20      	cmp	r2, #32
 8013880:	f103 0301 	add.w	r3, r3, #1
 8013884:	6023      	str	r3, [r4, #0]
 8013886:	d1f2      	bne.n	801386e <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013888:	4630      	mov	r0, r6
 801388a:	b004      	add	sp, #16
 801388c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013890:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013894:	4798      	blx	r3
 8013896:	4607      	mov	r7, r0
 8013898:	e7e6      	b.n	8013868 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 801389a:	2600      	movs	r6, #0
 801389c:	e7f4      	b.n	8013888 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 801389e:	bf00      	nop

080138a0 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 80138a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80138a4:	b084      	sub	sp, #16
 80138a6:	ac04      	add	r4, sp, #16
 80138a8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80138ac:	f89d 600c 	ldrb.w	r6, [sp, #12]
 80138b0:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 80138b4:	b346      	cbz	r6, 8013908 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 80138b6:	e9d7 2100 	ldrd	r2, r1, [r7]
 80138ba:	2300      	movs	r3, #0
 80138bc:	461d      	mov	r5, r3
 80138be:	b109      	cbz	r1, 80138c4 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 80138c0:	4291      	cmp	r1, r2
 80138c2:	d925      	bls.n	8013910 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 80138c4:	f812 0b01 	ldrb.w	r0, [r2], #1
 80138c8:	603a      	str	r2, [r7, #0]
 80138ca:	4098      	lsls	r0, r3
 80138cc:	3308      	adds	r3, #8
 80138ce:	2b20      	cmp	r3, #32
 80138d0:	ea45 0500 	orr.w	r5, r5, r0
 80138d4:	d1f3      	bne.n	80138be <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 80138d6:	e9dd 8300 	ldrd	r8, r3, [sp]
 80138da:	4640      	mov	r0, r8
 80138dc:	4798      	blx	r3
 80138de:	9b02      	ldr	r3, [sp, #8]
 80138e0:	4607      	mov	r7, r0
 80138e2:	b2e9      	uxtb	r1, r5
 80138e4:	4640      	mov	r0, r8
 80138e6:	4798      	blx	r3
 80138e8:	e9d4 3100 	ldrd	r3, r1, [r4]
 80138ec:	2200      	movs	r2, #0
 80138ee:	fa47 f002 	asr.w	r0, r7, r2
 80138f2:	3208      	adds	r2, #8
 80138f4:	b109      	cbz	r1, 80138fa <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 80138f6:	4299      	cmp	r1, r3
 80138f8:	d90f      	bls.n	801391a <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 80138fa:	7018      	strb	r0, [r3, #0]
 80138fc:	6823      	ldr	r3, [r4, #0]
 80138fe:	2a20      	cmp	r2, #32
 8013900:	f103 0301 	add.w	r3, r3, #1
 8013904:	6023      	str	r3, [r4, #0]
 8013906:	d1f2      	bne.n	80138ee <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013908:	4630      	mov	r0, r6
 801390a:	b004      	add	sp, #16
 801390c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013910:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013914:	4798      	blx	r3
 8013916:	4607      	mov	r7, r0
 8013918:	e7e6      	b.n	80138e8 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 801391a:	2600      	movs	r6, #0
 801391c:	e7f4      	b.n	8013908 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 801391e:	bf00      	nop

08013920 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013924:	b084      	sub	sp, #16
 8013926:	ac04      	add	r4, sp, #16
 8013928:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801392c:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013930:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 8013934:	b346      	cbz	r6, 8013988 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013936:	e9d7 2100 	ldrd	r2, r1, [r7]
 801393a:	2300      	movs	r3, #0
 801393c:	461d      	mov	r5, r3
 801393e:	b109      	cbz	r1, 8013944 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 8013940:	4291      	cmp	r1, r2
 8013942:	d925      	bls.n	8013990 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013944:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013948:	603a      	str	r2, [r7, #0]
 801394a:	4098      	lsls	r0, r3
 801394c:	3308      	adds	r3, #8
 801394e:	2b20      	cmp	r3, #32
 8013950:	ea45 0500 	orr.w	r5, r5, r0
 8013954:	d1f3      	bne.n	801393e <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013956:	e9dd 8300 	ldrd	r8, r3, [sp]
 801395a:	4640      	mov	r0, r8
 801395c:	4798      	blx	r3
 801395e:	9b02      	ldr	r3, [sp, #8]
 8013960:	4607      	mov	r7, r0
 8013962:	b2e9      	uxtb	r1, r5
 8013964:	4640      	mov	r0, r8
 8013966:	4798      	blx	r3
 8013968:	e9d4 3100 	ldrd	r3, r1, [r4]
 801396c:	2200      	movs	r2, #0
 801396e:	fa47 f002 	asr.w	r0, r7, r2
 8013972:	3208      	adds	r2, #8
 8013974:	b109      	cbz	r1, 801397a <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013976:	4299      	cmp	r1, r3
 8013978:	d90f      	bls.n	801399a <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 801397a:	7018      	strb	r0, [r3, #0]
 801397c:	6823      	ldr	r3, [r4, #0]
 801397e:	2a20      	cmp	r2, #32
 8013980:	f103 0301 	add.w	r3, r3, #1
 8013984:	6023      	str	r3, [r4, #0]
 8013986:	d1f2      	bne.n	801396e <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013988:	4630      	mov	r0, r6
 801398a:	b004      	add	sp, #16
 801398c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013990:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013994:	4798      	blx	r3
 8013996:	4607      	mov	r7, r0
 8013998:	e7e6      	b.n	8013968 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 801399a:	2600      	movs	r6, #0
 801399c:	e7f4      	b.n	8013988 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 801399e:	bf00      	nop

080139a0 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 80139a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80139a4:	b084      	sub	sp, #16
 80139a6:	ac04      	add	r4, sp, #16
 80139a8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80139ac:	f89d 600c 	ldrb.w	r6, [sp, #12]
 80139b0:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 80139b4:	b346      	cbz	r6, 8013a08 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 80139b6:	e9d7 2100 	ldrd	r2, r1, [r7]
 80139ba:	2300      	movs	r3, #0
 80139bc:	461d      	mov	r5, r3
 80139be:	b109      	cbz	r1, 80139c4 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 80139c0:	4291      	cmp	r1, r2
 80139c2:	d925      	bls.n	8013a10 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 80139c4:	f812 0b01 	ldrb.w	r0, [r2], #1
 80139c8:	603a      	str	r2, [r7, #0]
 80139ca:	4098      	lsls	r0, r3
 80139cc:	3308      	adds	r3, #8
 80139ce:	2b20      	cmp	r3, #32
 80139d0:	ea45 0500 	orr.w	r5, r5, r0
 80139d4:	d1f3      	bne.n	80139be <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 80139d6:	e9dd 8300 	ldrd	r8, r3, [sp]
 80139da:	4640      	mov	r0, r8
 80139dc:	4798      	blx	r3
 80139de:	9b02      	ldr	r3, [sp, #8]
 80139e0:	4607      	mov	r7, r0
 80139e2:	b2e9      	uxtb	r1, r5
 80139e4:	4640      	mov	r0, r8
 80139e6:	4798      	blx	r3
 80139e8:	e9d4 3100 	ldrd	r3, r1, [r4]
 80139ec:	2200      	movs	r2, #0
 80139ee:	fa47 f002 	asr.w	r0, r7, r2
 80139f2:	3208      	adds	r2, #8
 80139f4:	b109      	cbz	r1, 80139fa <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 80139f6:	4299      	cmp	r1, r3
 80139f8:	d90f      	bls.n	8013a1a <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 80139fa:	7018      	strb	r0, [r3, #0]
 80139fc:	6823      	ldr	r3, [r4, #0]
 80139fe:	2a20      	cmp	r2, #32
 8013a00:	f103 0301 	add.w	r3, r3, #1
 8013a04:	6023      	str	r3, [r4, #0]
 8013a06:	d1f2      	bne.n	80139ee <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013a08:	4630      	mov	r0, r6
 8013a0a:	b004      	add	sp, #16
 8013a0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a10:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013a14:	4798      	blx	r3
 8013a16:	4607      	mov	r7, r0
 8013a18:	e7e6      	b.n	80139e8 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 8013a1a:	2600      	movs	r6, #0
 8013a1c:	e7f4      	b.n	8013a08 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013a1e:	bf00      	nop

08013a20 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a24:	b084      	sub	sp, #16
 8013a26:	ac04      	add	r4, sp, #16
 8013a28:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013a2c:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013a30:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 8013a34:	b346      	cbz	r6, 8013a88 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013a36:	e9d7 2100 	ldrd	r2, r1, [r7]
 8013a3a:	2300      	movs	r3, #0
 8013a3c:	461d      	mov	r5, r3
 8013a3e:	b109      	cbz	r1, 8013a44 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 8013a40:	4291      	cmp	r1, r2
 8013a42:	d925      	bls.n	8013a90 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013a44:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013a48:	603a      	str	r2, [r7, #0]
 8013a4a:	4098      	lsls	r0, r3
 8013a4c:	3308      	adds	r3, #8
 8013a4e:	2b20      	cmp	r3, #32
 8013a50:	ea45 0500 	orr.w	r5, r5, r0
 8013a54:	d1f3      	bne.n	8013a3e <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013a56:	e9dd 8300 	ldrd	r8, r3, [sp]
 8013a5a:	4640      	mov	r0, r8
 8013a5c:	4798      	blx	r3
 8013a5e:	9b02      	ldr	r3, [sp, #8]
 8013a60:	4607      	mov	r7, r0
 8013a62:	b2e9      	uxtb	r1, r5
 8013a64:	4640      	mov	r0, r8
 8013a66:	4798      	blx	r3
 8013a68:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013a6c:	2200      	movs	r2, #0
 8013a6e:	fa47 f002 	asr.w	r0, r7, r2
 8013a72:	3208      	adds	r2, #8
 8013a74:	b109      	cbz	r1, 8013a7a <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013a76:	4299      	cmp	r1, r3
 8013a78:	d90f      	bls.n	8013a9a <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 8013a7a:	7018      	strb	r0, [r3, #0]
 8013a7c:	6823      	ldr	r3, [r4, #0]
 8013a7e:	2a20      	cmp	r2, #32
 8013a80:	f103 0301 	add.w	r3, r3, #1
 8013a84:	6023      	str	r3, [r4, #0]
 8013a86:	d1f2      	bne.n	8013a6e <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013a88:	4630      	mov	r0, r6
 8013a8a:	b004      	add	sp, #16
 8013a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a90:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013a94:	4798      	blx	r3
 8013a96:	4607      	mov	r7, r0
 8013a98:	e7e6      	b.n	8013a68 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 8013a9a:	2600      	movs	r6, #0
 8013a9c:	e7f4      	b.n	8013a88 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013a9e:	bf00      	nop

08013aa0 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013aa4:	b084      	sub	sp, #16
 8013aa6:	ac04      	add	r4, sp, #16
 8013aa8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013aac:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013ab0:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 8013ab4:	b346      	cbz	r6, 8013b08 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013ab6:	e9d7 2100 	ldrd	r2, r1, [r7]
 8013aba:	2300      	movs	r3, #0
 8013abc:	461d      	mov	r5, r3
 8013abe:	b109      	cbz	r1, 8013ac4 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 8013ac0:	4291      	cmp	r1, r2
 8013ac2:	d925      	bls.n	8013b10 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013ac4:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013ac8:	603a      	str	r2, [r7, #0]
 8013aca:	4098      	lsls	r0, r3
 8013acc:	3308      	adds	r3, #8
 8013ace:	2b20      	cmp	r3, #32
 8013ad0:	ea45 0500 	orr.w	r5, r5, r0
 8013ad4:	d1f3      	bne.n	8013abe <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013ad6:	e9dd 8300 	ldrd	r8, r3, [sp]
 8013ada:	4640      	mov	r0, r8
 8013adc:	4798      	blx	r3
 8013ade:	9b02      	ldr	r3, [sp, #8]
 8013ae0:	4607      	mov	r7, r0
 8013ae2:	b2a9      	uxth	r1, r5
 8013ae4:	4640      	mov	r0, r8
 8013ae6:	4798      	blx	r3
 8013ae8:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013aec:	2200      	movs	r2, #0
 8013aee:	fa47 f002 	asr.w	r0, r7, r2
 8013af2:	3208      	adds	r2, #8
 8013af4:	b109      	cbz	r1, 8013afa <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013af6:	4299      	cmp	r1, r3
 8013af8:	d90f      	bls.n	8013b1a <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 8013afa:	7018      	strb	r0, [r3, #0]
 8013afc:	6823      	ldr	r3, [r4, #0]
 8013afe:	2a20      	cmp	r2, #32
 8013b00:	f103 0301 	add.w	r3, r3, #1
 8013b04:	6023      	str	r3, [r4, #0]
 8013b06:	d1f2      	bne.n	8013aee <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013b08:	4630      	mov	r0, r6
 8013b0a:	b004      	add	sp, #16
 8013b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b10:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013b14:	4798      	blx	r3
 8013b16:	4607      	mov	r7, r0
 8013b18:	e7e6      	b.n	8013ae8 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 8013b1a:	2600      	movs	r6, #0
 8013b1c:	e7f4      	b.n	8013b08 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013b1e:	bf00      	nop

08013b20 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b24:	b084      	sub	sp, #16
 8013b26:	ac04      	add	r4, sp, #16
 8013b28:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013b2c:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013b30:	e9dd 740b 	ldrd	r7, r4, [sp, #44]	@ 0x2c
 8013b34:	b346      	cbz	r6, 8013b88 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013b36:	e9d7 2100 	ldrd	r2, r1, [r7]
 8013b3a:	2300      	movs	r3, #0
 8013b3c:	461d      	mov	r5, r3
 8013b3e:	b109      	cbz	r1, 8013b44 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x24>
 8013b40:	4291      	cmp	r1, r2
 8013b42:	d925      	bls.n	8013b90 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x70>
 8013b44:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013b48:	603a      	str	r2, [r7, #0]
 8013b4a:	4098      	lsls	r0, r3
 8013b4c:	3308      	adds	r3, #8
 8013b4e:	2b20      	cmp	r3, #32
 8013b50:	ea45 0500 	orr.w	r5, r5, r0
 8013b54:	d1f3      	bne.n	8013b3e <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x1e>
 8013b56:	e9dd 8300 	ldrd	r8, r3, [sp]
 8013b5a:	4640      	mov	r0, r8
 8013b5c:	4798      	blx	r3
 8013b5e:	9b02      	ldr	r3, [sp, #8]
 8013b60:	4607      	mov	r7, r0
 8013b62:	b2e9      	uxtb	r1, r5
 8013b64:	4640      	mov	r0, r8
 8013b66:	4798      	blx	r3
 8013b68:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013b6c:	2200      	movs	r2, #0
 8013b6e:	fa47 f002 	asr.w	r0, r7, r2
 8013b72:	3208      	adds	r2, #8
 8013b74:	b109      	cbz	r1, 8013b7a <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x5a>
 8013b76:	4299      	cmp	r1, r3
 8013b78:	d90f      	bls.n	8013b9a <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x7a>
 8013b7a:	7018      	strb	r0, [r3, #0]
 8013b7c:	6823      	ldr	r3, [r4, #0]
 8013b7e:	2a20      	cmp	r2, #32
 8013b80:	f103 0301 	add.w	r3, r3, #1
 8013b84:	6023      	str	r3, [r4, #0]
 8013b86:	d1f2      	bne.n	8013b6e <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x4e>
 8013b88:	4630      	mov	r0, r6
 8013b8a:	b004      	add	sp, #16
 8013b8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b90:	e9dd 0300 	ldrd	r0, r3, [sp]
 8013b94:	4798      	blx	r3
 8013b96:	4607      	mov	r7, r0
 8013b98:	e7e6      	b.n	8013b68 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x48>
 8013b9a:	2600      	movs	r6, #0
 8013b9c:	e7f4      	b.n	8013b88 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x68>
 8013b9e:	bf00      	nop

08013ba0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013ba0:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8013ba4:	b084      	sub	sp, #16
 8013ba6:	ac04      	add	r4, sp, #16
 8013ba8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013bac:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013bb0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013bb2:	b1ee      	cbz	r6, 8013bf0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013bb4:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8013bb8:	460d      	mov	r5, r1
 8013bba:	4607      	mov	r7, r0
 8013bbc:	b1e3      	cbz	r3, 8013bf8 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013bbe:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8013bc2:	4788      	blx	r1
 8013bc4:	4605      	mov	r5, r0
 8013bc6:	9b02      	ldr	r3, [sp, #8]
 8013bc8:	4649      	mov	r1, r9
 8013bca:	4638      	mov	r0, r7
 8013bcc:	4798      	blx	r3
 8013bce:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013bd2:	2200      	movs	r2, #0
 8013bd4:	fa45 fc02 	asr.w	ip, r5, r2
 8013bd8:	3208      	adds	r2, #8
 8013bda:	b109      	cbz	r1, 8013be0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x40>
 8013bdc:	4299      	cmp	r1, r3
 8013bde:	d928      	bls.n	8013c32 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x92>
 8013be0:	f883 c000 	strb.w	ip, [r3]
 8013be4:	6823      	ldr	r3, [r4, #0]
 8013be6:	2a20      	cmp	r2, #32
 8013be8:	f103 0301 	add.w	r3, r3, #1
 8013bec:	6023      	str	r3, [r4, #0]
 8013bee:	d1f1      	bne.n	8013bd4 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 8013bf0:	4630      	mov	r0, r6
 8013bf2:	b004      	add	sp, #16
 8013bf4:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8013bf8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013bfa:	e9d2 2c00 	ldrd	r2, ip, [r2]
 8013bfe:	469e      	mov	lr, r3
 8013c00:	f1bc 0f00 	cmp.w	ip, #0
 8013c04:	d001      	beq.n	8013c0a <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6a>
 8013c06:	4594      	cmp	ip, r2
 8013c08:	d90f      	bls.n	8013c2a <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 8013c0a:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013c0e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013c10:	4098      	lsls	r0, r3
 8013c12:	3308      	adds	r3, #8
 8013c14:	2b20      	cmp	r3, #32
 8013c16:	600a      	str	r2, [r1, #0]
 8013c18:	ea4e 0e00 	orr.w	lr, lr, r0
 8013c1c:	d1f0      	bne.n	8013c00 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x60>
 8013c1e:	4638      	mov	r0, r7
 8013c20:	fa1f f98e 	uxth.w	r9, lr
 8013c24:	47a8      	blx	r5
 8013c26:	4605      	mov	r5, r0
 8013c28:	e7cd      	b.n	8013bc6 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x26>
 8013c2a:	4638      	mov	r0, r7
 8013c2c:	47a8      	blx	r5
 8013c2e:	4605      	mov	r5, r0
 8013c30:	e7cd      	b.n	8013bce <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2e>
 8013c32:	2600      	movs	r6, #0
 8013c34:	e7dc      	b.n	8013bf0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013c36:	bf00      	nop

08013c38 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013c38:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8013c3c:	b084      	sub	sp, #16
 8013c3e:	ac04      	add	r4, sp, #16
 8013c40:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013c44:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013c48:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013c4a:	b1ee      	cbz	r6, 8013c88 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013c4c:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8013c50:	460d      	mov	r5, r1
 8013c52:	4607      	mov	r7, r0
 8013c54:	b1e3      	cbz	r3, 8013c90 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013c56:	f89d 9028 	ldrb.w	r9, [sp, #40]	@ 0x28
 8013c5a:	4788      	blx	r1
 8013c5c:	4605      	mov	r5, r0
 8013c5e:	9b02      	ldr	r3, [sp, #8]
 8013c60:	4649      	mov	r1, r9
 8013c62:	4638      	mov	r0, r7
 8013c64:	4798      	blx	r3
 8013c66:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013c6a:	2200      	movs	r2, #0
 8013c6c:	fa45 fc02 	asr.w	ip, r5, r2
 8013c70:	3208      	adds	r2, #8
 8013c72:	b109      	cbz	r1, 8013c78 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x40>
 8013c74:	4299      	cmp	r1, r3
 8013c76:	d928      	bls.n	8013cca <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x92>
 8013c78:	f883 c000 	strb.w	ip, [r3]
 8013c7c:	6823      	ldr	r3, [r4, #0]
 8013c7e:	2a20      	cmp	r2, #32
 8013c80:	f103 0301 	add.w	r3, r3, #1
 8013c84:	6023      	str	r3, [r4, #0]
 8013c86:	d1f1      	bne.n	8013c6c <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 8013c88:	4630      	mov	r0, r6
 8013c8a:	b004      	add	sp, #16
 8013c8c:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8013c90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013c92:	e9d2 2c00 	ldrd	r2, ip, [r2]
 8013c96:	469e      	mov	lr, r3
 8013c98:	f1bc 0f00 	cmp.w	ip, #0
 8013c9c:	d001      	beq.n	8013ca2 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6a>
 8013c9e:	4594      	cmp	ip, r2
 8013ca0:	d90f      	bls.n	8013cc2 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 8013ca2:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013ca6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013ca8:	4098      	lsls	r0, r3
 8013caa:	3308      	adds	r3, #8
 8013cac:	2b20      	cmp	r3, #32
 8013cae:	600a      	str	r2, [r1, #0]
 8013cb0:	ea4e 0e00 	orr.w	lr, lr, r0
 8013cb4:	d1f0      	bne.n	8013c98 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x60>
 8013cb6:	4638      	mov	r0, r7
 8013cb8:	fa5f f98e 	uxtb.w	r9, lr
 8013cbc:	47a8      	blx	r5
 8013cbe:	4605      	mov	r5, r0
 8013cc0:	e7cd      	b.n	8013c5e <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x26>
 8013cc2:	4638      	mov	r0, r7
 8013cc4:	47a8      	blx	r5
 8013cc6:	4605      	mov	r5, r0
 8013cc8:	e7cd      	b.n	8013c66 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2e>
 8013cca:	2600      	movs	r6, #0
 8013ccc:	e7dc      	b.n	8013c88 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013cce:	bf00      	nop

08013cd0 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>:
 8013cd0:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 8013cd4:	b084      	sub	sp, #16
 8013cd6:	ac04      	add	r4, sp, #16
 8013cd8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8013cdc:	f89d 600c 	ldrb.w	r6, [sp, #12]
 8013ce0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013ce2:	b1ee      	cbz	r6, 8013d20 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013ce4:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8013ce8:	460d      	mov	r5, r1
 8013cea:	4607      	mov	r7, r0
 8013cec:	b1e3      	cbz	r3, 8013d28 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x58>
 8013cee:	f89d 9028 	ldrb.w	r9, [sp, #40]	@ 0x28
 8013cf2:	4788      	blx	r1
 8013cf4:	4605      	mov	r5, r0
 8013cf6:	9b02      	ldr	r3, [sp, #8]
 8013cf8:	4649      	mov	r1, r9
 8013cfa:	4638      	mov	r0, r7
 8013cfc:	4798      	blx	r3
 8013cfe:	e9d4 3100 	ldrd	r3, r1, [r4]
 8013d02:	2200      	movs	r2, #0
 8013d04:	fa45 fc02 	asr.w	ip, r5, r2
 8013d08:	3208      	adds	r2, #8
 8013d0a:	b109      	cbz	r1, 8013d10 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x40>
 8013d0c:	4299      	cmp	r1, r3
 8013d0e:	d928      	bls.n	8013d62 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x92>
 8013d10:	f883 c000 	strb.w	ip, [r3]
 8013d14:	6823      	ldr	r3, [r4, #0]
 8013d16:	2a20      	cmp	r2, #32
 8013d18:	f103 0301 	add.w	r3, r3, #1
 8013d1c:	6023      	str	r3, [r4, #0]
 8013d1e:	d1f1      	bne.n	8013d04 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x34>
 8013d20:	4630      	mov	r0, r6
 8013d22:	b004      	add	sp, #16
 8013d24:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 8013d28:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013d2a:	e9d2 2c00 	ldrd	r2, ip, [r2]
 8013d2e:	469e      	mov	lr, r3
 8013d30:	f1bc 0f00 	cmp.w	ip, #0
 8013d34:	d001      	beq.n	8013d3a <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x6a>
 8013d36:	4594      	cmp	ip, r2
 8013d38:	d90f      	bls.n	8013d5a <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x8a>
 8013d3a:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013d3e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013d40:	4098      	lsls	r0, r3
 8013d42:	3308      	adds	r3, #8
 8013d44:	2b20      	cmp	r3, #32
 8013d46:	600a      	str	r2, [r1, #0]
 8013d48:	ea4e 0e00 	orr.w	lr, lr, r0
 8013d4c:	d1f0      	bne.n	8013d30 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x60>
 8013d4e:	4638      	mov	r0, r7
 8013d50:	fa5f f98e 	uxtb.w	r9, lr
 8013d54:	47a8      	blx	r5
 8013d56:	4605      	mov	r5, r0
 8013d58:	e7cd      	b.n	8013cf6 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x26>
 8013d5a:	4638      	mov	r0, r7
 8013d5c:	47a8      	blx	r5
 8013d5e:	4605      	mov	r5, r0
 8013d60:	e7cd      	b.n	8013cfe <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x2e>
 8013d62:	2600      	movs	r6, #0
 8013d64:	e7dc      	b.n	8013d20 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]+0x50>
 8013d66:	bf00      	nop

08013d68 <FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013d68:	b530      	push	{r4, r5, lr}
 8013d6a:	ed2d 8b02 	vpush	{d8}
 8013d6e:	b083      	sub	sp, #12
 8013d70:	4610      	mov	r0, r2
 8013d72:	460d      	mov	r5, r1
 8013d74:	aa01      	add	r2, sp, #4
 8013d76:	490b      	ldr	r1, [pc, #44]	@ (8013da4 <FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const+0x3c>)
 8013d78:	f010 fb68 	bl	802444c <siscanf>
 8013d7c:	2801      	cmp	r0, #1
 8013d7e:	d10c      	bne.n	8013d9a <FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const+0x32>
 8013d80:	ed9d 8a01 	vldr	s16, [sp, #4]
 8013d84:	4604      	mov	r4, r0
 8013d86:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013d8a:	4798      	blx	r3
 8013d8c:	6828      	ldr	r0, [r5, #0]
 8013d8e:	68ab      	ldr	r3, [r5, #8]
 8013d90:	eeb0 0a48 	vmov.f32	s0, s16
 8013d94:	4798      	blx	r3
 8013d96:	4620      	mov	r0, r4
 8013d98:	e000      	b.n	8013d9c <FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const+0x34>
 8013d9a:	2000      	movs	r0, #0
 8013d9c:	b003      	add	sp, #12
 8013d9e:	ecbd 8b02 	vpop	{d8}
 8013da2:	bd30      	pop	{r4, r5, pc}
 8013da4:	0802b03c 	.word	0x0802b03c

08013da8 <non-virtual thunk to FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013da8:	f1a0 0004 	sub.w	r0, r0, #4
 8013dac:	e7dc      	b.n	8013d68 <FibrePropertyTypeInfo<Property<float> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013dae:	bf00      	nop

08013db0 <FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013db0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013db2:	4610      	mov	r0, r2
 8013db4:	460d      	mov	r5, r1
 8013db6:	aa01      	add	r2, sp, #4
 8013db8:	4909      	ldr	r1, [pc, #36]	@ (8013de0 <FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013dba:	f010 fb47 	bl	802444c <siscanf>
 8013dbe:	2801      	cmp	r0, #1
 8013dc0:	d001      	beq.n	8013dc6 <FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013dc2:	2000      	movs	r0, #0
 8013dc4:	e009      	b.n	8013dda <FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const+0x2a>
 8013dc6:	9e01      	ldr	r6, [sp, #4]
 8013dc8:	4604      	mov	r4, r0
 8013dca:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013dce:	4798      	blx	r3
 8013dd0:	6828      	ldr	r0, [r5, #0]
 8013dd2:	68ab      	ldr	r3, [r5, #8]
 8013dd4:	4631      	mov	r1, r6
 8013dd6:	4798      	blx	r3
 8013dd8:	4620      	mov	r0, r4
 8013dda:	b002      	add	sp, #8
 8013ddc:	bd70      	pop	{r4, r5, r6, pc}
 8013dde:	bf00      	nop
 8013de0:	0802b03f 	.word	0x0802b03f

08013de4 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013de4:	f1a0 0004 	sub.w	r0, r0, #4
 8013de8:	e7e2      	b.n	8013db0 <FibrePropertyTypeInfo<Property<unsigned long> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013dea:	bf00      	nop

08013dec <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013dec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013dee:	4610      	mov	r0, r2
 8013df0:	460d      	mov	r5, r1
 8013df2:	aa01      	add	r2, sp, #4
 8013df4:	4909      	ldr	r1, [pc, #36]	@ (8013e1c <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013df6:	f010 fb29 	bl	802444c <siscanf>
 8013dfa:	2801      	cmp	r0, #1
 8013dfc:	d001      	beq.n	8013e02 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013dfe:	2000      	movs	r0, #0
 8013e00:	e009      	b.n	8013e16 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x2a>
 8013e02:	9e01      	ldr	r6, [sp, #4]
 8013e04:	4604      	mov	r4, r0
 8013e06:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013e0a:	4798      	blx	r3
 8013e0c:	6828      	ldr	r0, [r5, #0]
 8013e0e:	68ab      	ldr	r3, [r5, #8]
 8013e10:	4631      	mov	r1, r6
 8013e12:	4798      	blx	r3
 8013e14:	4620      	mov	r0, r4
 8013e16:	b002      	add	sp, #8
 8013e18:	bd70      	pop	{r4, r5, r6, pc}
 8013e1a:	bf00      	nop
 8013e1c:	0802b043 	.word	0x0802b043

08013e20 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013e20:	f1a0 0004 	sub.w	r0, r0, #4
 8013e24:	e7e2      	b.n	8013dec <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013e26:	bf00      	nop

08013e28 <FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013e28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013e2a:	4610      	mov	r0, r2
 8013e2c:	460d      	mov	r5, r1
 8013e2e:	aa01      	add	r2, sp, #4
 8013e30:	4909      	ldr	r1, [pc, #36]	@ (8013e58 <FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013e32:	f010 fb0b 	bl	802444c <siscanf>
 8013e36:	2801      	cmp	r0, #1
 8013e38:	d001      	beq.n	8013e3e <FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013e3a:	2000      	movs	r0, #0
 8013e3c:	e009      	b.n	8013e52 <FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const+0x2a>
 8013e3e:	9e01      	ldr	r6, [sp, #4]
 8013e40:	4604      	mov	r4, r0
 8013e42:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013e46:	4798      	blx	r3
 8013e48:	6828      	ldr	r0, [r5, #0]
 8013e4a:	68ab      	ldr	r3, [r5, #8]
 8013e4c:	4631      	mov	r1, r6
 8013e4e:	4798      	blx	r3
 8013e50:	4620      	mov	r0, r4
 8013e52:	b002      	add	sp, #8
 8013e54:	bd70      	pop	{r4, r5, r6, pc}
 8013e56:	bf00      	nop
 8013e58:	0802b144 	.word	0x0802b144

08013e5c <non-virtual thunk to FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013e5c:	f1a0 0004 	sub.w	r0, r0, #4
 8013e60:	e7e2      	b.n	8013e28 <FibrePropertyTypeInfo<Property<long> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013e62:	bf00      	nop

08013e64 <FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013e64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013e66:	4610      	mov	r0, r2
 8013e68:	460d      	mov	r5, r1
 8013e6a:	aa01      	add	r2, sp, #4
 8013e6c:	4909      	ldr	r1, [pc, #36]	@ (8013e94 <FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013e6e:	f010 faed 	bl	802444c <siscanf>
 8013e72:	2801      	cmp	r0, #1
 8013e74:	d001      	beq.n	8013e7a <FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013e76:	2000      	movs	r0, #0
 8013e78:	e00a      	b.n	8013e90 <FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const+0x2c>
 8013e7a:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013e7e:	4604      	mov	r4, r0
 8013e80:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013e84:	4798      	blx	r3
 8013e86:	6828      	ldr	r0, [r5, #0]
 8013e88:	68ab      	ldr	r3, [r5, #8]
 8013e8a:	4631      	mov	r1, r6
 8013e8c:	4798      	blx	r3
 8013e8e:	4620      	mov	r0, r4
 8013e90:	b002      	add	sp, #8
 8013e92:	bd70      	pop	{r4, r5, r6, pc}
 8013e94:	0802b04a 	.word	0x0802b04a

08013e98 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013e98:	f1a0 0004 	sub.w	r0, r0, #4
 8013e9c:	e7e2      	b.n	8013e64 <FibrePropertyTypeInfo<Property<unsigned short> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013e9e:	bf00      	nop

08013ea0 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_float(Introspectable const&, float) const>:
 8013ea0:	b510      	push	{r4, lr}
 8013ea2:	ed2d 8b02 	vpush	{d8}
 8013ea6:	460c      	mov	r4, r1
 8013ea8:	f00f f854 	bl	8022f54 <roundf>
 8013eac:	e9d4 0300 	ldrd	r0, r3, [r4]
 8013eb0:	eeb0 8a40 	vmov.f32	s16, s0
 8013eb4:	4798      	blx	r3
 8013eb6:	eebc 0ac8 	vcvt.u32.f32	s0, s16
 8013eba:	6820      	ldr	r0, [r4, #0]
 8013ebc:	68a3      	ldr	r3, [r4, #8]
 8013ebe:	ee10 2a10 	vmov	r2, s0
 8013ec2:	b291      	uxth	r1, r2
 8013ec4:	4798      	blx	r3
 8013ec6:	ecbd 8b02 	vpop	{d8}
 8013eca:	2001      	movs	r0, #1
 8013ecc:	bd10      	pop	{r4, pc}

08013ece <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_float(Introspectable const&, float) const>:
 8013ece:	b510      	push	{r4, lr}
 8013ed0:	ed2d 8b02 	vpush	{d8}
 8013ed4:	460c      	mov	r4, r1
 8013ed6:	f00f f83d 	bl	8022f54 <roundf>
 8013eda:	e9d4 0300 	ldrd	r0, r3, [r4]
 8013ede:	eeb0 8a40 	vmov.f32	s16, s0
 8013ee2:	4798      	blx	r3
 8013ee4:	eebc 0ac8 	vcvt.u32.f32	s0, s16
 8013ee8:	6820      	ldr	r0, [r4, #0]
 8013eea:	68a3      	ldr	r3, [r4, #8]
 8013eec:	ee10 2a10 	vmov	r2, s0
 8013ef0:	b291      	uxth	r1, r2
 8013ef2:	4798      	blx	r3
 8013ef4:	ecbd 8b02 	vpop	{d8}
 8013ef8:	2001      	movs	r0, #1
 8013efa:	bd10      	pop	{r4, pc}

08013efc <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_float(Introspectable const&, float) const>:
 8013efc:	b510      	push	{r4, lr}
 8013efe:	ed2d 8b02 	vpush	{d8}
 8013f02:	460c      	mov	r4, r1
 8013f04:	f00f f826 	bl	8022f54 <roundf>
 8013f08:	e9d4 0300 	ldrd	r0, r3, [r4]
 8013f0c:	eeb0 8a40 	vmov.f32	s16, s0
 8013f10:	4798      	blx	r3
 8013f12:	eebc 0ac8 	vcvt.u32.f32	s0, s16
 8013f16:	6820      	ldr	r0, [r4, #0]
 8013f18:	68a3      	ldr	r3, [r4, #8]
 8013f1a:	ee10 2a10 	vmov	r2, s0
 8013f1e:	b291      	uxth	r1, r2
 8013f20:	4798      	blx	r3
 8013f22:	ecbd 8b02 	vpop	{d8}
 8013f26:	2001      	movs	r0, #1
 8013f28:	bd10      	pop	{r4, pc}
	...

08013f2c <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013f2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013f2e:	4610      	mov	r0, r2
 8013f30:	460d      	mov	r5, r1
 8013f32:	aa01      	add	r2, sp, #4
 8013f34:	4909      	ldr	r1, [pc, #36]	@ (8013f5c <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013f36:	f010 fa89 	bl	802444c <siscanf>
 8013f3a:	2801      	cmp	r0, #1
 8013f3c:	d001      	beq.n	8013f42 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013f3e:	2000      	movs	r0, #0
 8013f40:	e00a      	b.n	8013f58 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const+0x2c>
 8013f42:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013f46:	4604      	mov	r4, r0
 8013f48:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013f4c:	4798      	blx	r3
 8013f4e:	6828      	ldr	r0, [r5, #0]
 8013f50:	68ab      	ldr	r3, [r5, #8]
 8013f52:	4631      	mov	r1, r6
 8013f54:	4798      	blx	r3
 8013f56:	4620      	mov	r0, r4
 8013f58:	b002      	add	sp, #8
 8013f5a:	bd70      	pop	{r4, r5, r6, pc}
 8013f5c:	0802b04a 	.word	0x0802b04a

08013f60 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013f60:	f1a0 0004 	sub.w	r0, r0, #4
 8013f64:	e7e2      	b.n	8013f2c <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Mode> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013f66:	bf00      	nop

08013f68 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013f68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013f6a:	4610      	mov	r0, r2
 8013f6c:	460d      	mov	r5, r1
 8013f6e:	aa01      	add	r2, sp, #4
 8013f70:	4909      	ldr	r1, [pc, #36]	@ (8013f98 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013f72:	f010 fa6b 	bl	802444c <siscanf>
 8013f76:	2801      	cmp	r0, #1
 8013f78:	d001      	beq.n	8013f7e <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013f7a:	2000      	movs	r0, #0
 8013f7c:	e00a      	b.n	8013f94 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x2c>
 8013f7e:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013f82:	4604      	mov	r4, r0
 8013f84:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013f88:	4798      	blx	r3
 8013f8a:	6828      	ldr	r0, [r5, #0]
 8013f8c:	68ab      	ldr	r3, [r5, #8]
 8013f8e:	4631      	mov	r1, r6
 8013f90:	4798      	blx	r3
 8013f92:	4620      	mov	r0, r4
 8013f94:	b002      	add	sp, #8
 8013f96:	bd70      	pop	{r4, r5, r6, pc}
 8013f98:	0802b04a 	.word	0x0802b04a

08013f9c <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013f9c:	f1a0 0004 	sub.w	r0, r0, #4
 8013fa0:	e7e2      	b.n	8013f68 <FibrePropertyTypeInfo<Property<ODriveIntf::EncoderIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013fa2:	bf00      	nop

08013fa4 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013fa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013fa6:	4610      	mov	r0, r2
 8013fa8:	460d      	mov	r5, r1
 8013faa:	aa01      	add	r2, sp, #4
 8013fac:	4909      	ldr	r1, [pc, #36]	@ (8013fd4 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x30>)
 8013fae:	f010 fa4d 	bl	802444c <siscanf>
 8013fb2:	2801      	cmp	r0, #1
 8013fb4:	d001      	beq.n	8013fba <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 8013fb6:	2000      	movs	r0, #0
 8013fb8:	e00a      	b.n	8013fd0 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x2c>
 8013fba:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013fbe:	4604      	mov	r4, r0
 8013fc0:	e9d5 0300 	ldrd	r0, r3, [r5]
 8013fc4:	4798      	blx	r3
 8013fc6:	6828      	ldr	r0, [r5, #0]
 8013fc8:	68ab      	ldr	r3, [r5, #8]
 8013fca:	4631      	mov	r1, r6
 8013fcc:	4798      	blx	r3
 8013fce:	4620      	mov	r0, r4
 8013fd0:	b002      	add	sp, #8
 8013fd2:	bd70      	pop	{r4, r5, r6, pc}
 8013fd4:	0802b04a 	.word	0x0802b04a

08013fd8 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 8013fd8:	f1a0 0004 	sub.w	r0, r0, #4
 8013fdc:	e7e2      	b.n	8013fa4 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 8013fde:	bf00      	nop

08013fe0 <odrive_controller_move_incremental(std::optional<ODriveIntf::ControllerIntf*>, std::optional<float>, std::optional<bool>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 8013fe0:	b500      	push	{lr}
 8013fe2:	b085      	sub	sp, #20
 8013fe4:	f10d 0c10 	add.w	ip, sp, #16
 8013fe8:	e90c 0006 	stmdb	ip, {r1, r2}
 8013fec:	6802      	ldr	r2, [r0, #0]
 8013fee:	ed9d 0a02 	vldr	s0, [sp, #8]
 8013ff2:	6812      	ldr	r2, [r2, #0]
 8013ff4:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013ff8:	b2d9      	uxtb	r1, r3
 8013ffa:	4790      	blx	r2
 8013ffc:	2001      	movs	r0, #1
 8013ffe:	b005      	add	sp, #20
 8014000:	f85d fb04 	ldr.w	pc, [sp], #4

08014004 <odrive_encoder_set_linear_count(std::optional<ODriveIntf::EncoderIntf*>, std::optional<long>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>:
 8014004:	b508      	push	{r3, lr}
 8014006:	6803      	ldr	r3, [r0, #0]
 8014008:	681b      	ldr	r3, [r3, #0]
 801400a:	4798      	blx	r3
 801400c:	2001      	movs	r0, #1
 801400e:	bd08      	pop	{r3, pc}

08014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>:
 8014010:	e9d1 2300 	ldrd	r2, r3, [r1]
 8014014:	b11b      	cbz	r3, 801401e <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)+0xe>
 8014016:	4293      	cmp	r3, r2
 8014018:	d801      	bhi.n	801401e <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)+0xe>
 801401a:	2000      	movs	r0, #0
 801401c:	4770      	bx	lr
 801401e:	7010      	strb	r0, [r2, #0]
 8014020:	680b      	ldr	r3, [r1, #0]
 8014022:	2001      	movs	r0, #1
 8014024:	4403      	add	r3, r0
 8014026:	600b      	str	r3, [r1, #0]
 8014028:	4770      	bx	lr
 801402a:	bf00      	nop

0801402c <fibre::Codec<unsigned char, void>::encode(unsigned char, fibre::generic_bufptr_t<unsigned char>*)>:
 801402c:	e9d1 2300 	ldrd	r2, r3, [r1]
 8014030:	b11b      	cbz	r3, 801403a <fibre::Codec<unsigned char, void>::encode(unsigned char, fibre::generic_bufptr_t<unsigned char>*)+0xe>
 8014032:	4293      	cmp	r3, r2
 8014034:	d801      	bhi.n	801403a <fibre::Codec<unsigned char, void>::encode(unsigned char, fibre::generic_bufptr_t<unsigned char>*)+0xe>
 8014036:	2000      	movs	r0, #0
 8014038:	4770      	bx	lr
 801403a:	7010      	strb	r0, [r2, #0]
 801403c:	680b      	ldr	r3, [r1, #0]
 801403e:	2001      	movs	r0, #1
 8014040:	4403      	add	r3, r0
 8014042:	600b      	str	r3, [r1, #0]
 8014044:	4770      	bx	lr
 8014046:	bf00      	nop

08014048 <init_communication>:
 8014048:	b530      	push	{r4, r5, lr}
 801404a:	4d0d      	ldr	r5, [pc, #52]	@ (8014080 <init_communication+0x38>)
 801404c:	480d      	ldr	r0, [pc, #52]	@ (8014084 <init_communication+0x3c>)
 801404e:	b087      	sub	sp, #28
 8014050:	f010 f99c 	bl	802438c <puts>
 8014054:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014056:	ac01      	add	r4, sp, #4
 8014058:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801405a:	682b      	ldr	r3, [r5, #0]
 801405c:	6023      	str	r3, [r4, #0]
 801405e:	2100      	movs	r1, #0
 8014060:	4c09      	ldr	r4, [pc, #36]	@ (8014088 <init_communication+0x40>)
 8014062:	a801      	add	r0, sp, #4
 8014064:	f7f3 fcc4 	bl	80079f0 <osThreadCreate>
 8014068:	4a08      	ldr	r2, [pc, #32]	@ (801408c <init_communication+0x44>)
 801406a:	7823      	ldrb	r3, [r4, #0]
 801406c:	6010      	str	r0, [r2, #0]
 801406e:	b92b      	cbnz	r3, 801407c <init_communication+0x34>
 8014070:	2001      	movs	r0, #1
 8014072:	f7f3 fcd9 	bl	8007a28 <osDelay>
 8014076:	7823      	ldrb	r3, [r4, #0]
 8014078:	2b00      	cmp	r3, #0
 801407a:	d0f9      	beq.n	8014070 <init_communication+0x28>
 801407c:	b007      	add	sp, #28
 801407e:	bd30      	pop	{r4, r5, pc}
 8014080:	08029538 	.word	0x08029538
 8014084:	08029738 	.word	0x08029738
 8014088:	2000ce54 	.word	0x2000ce54
 801408c:	2000ce58 	.word	0x2000ce58

08014090 <_write>:
 8014090:	4610      	mov	r0, r2
 8014092:	4770      	bx	lr

08014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>:
 8014094:	b510      	push	{r4, lr}
 8014096:	4c02      	ldr	r4, [pc, #8]	@ (80140a0 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)+0xc>)
 8014098:	6082      	str	r2, [r0, #8]
 801409a:	e9c0 4100 	strd	r4, r1, [r0]
 801409e:	bd10      	pop	{r4, pc}
 80140a0:	0802bb48 	.word	0x0802bb48

080140a4 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 80140a4:	6fc8      	ldr	r0, [r1, #124]	@ 0x7c
 80140a6:	824a      	strh	r2, [r1, #18]
 80140a8:	f7f8 bfae 	b.w	800d008 <Axis::decode_step_dir_pins()>

080140ac <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 80140ac:	b508      	push	{r3, lr}
 80140ae:	460a      	mov	r2, r1
 80140b0:	4601      	mov	r1, r0
 80140b2:	2000      	movs	r0, #0
 80140b4:	f7ff fff6 	bl	80140a4 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 80140b8:	bd08      	pop	{r3, pc}
 80140ba:	bf00      	nop

080140bc <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 80140bc:	6fc8      	ldr	r0, [r1, #124]	@ 0x7c
 80140be:	828a      	strh	r2, [r1, #20]
 80140c0:	f7f8 bfa2 	b.w	800d008 <Axis::decode_step_dir_pins()>

080140c4 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 80140c4:	b508      	push	{r3, lr}
 80140c6:	460a      	mov	r2, r1
 80140c8:	4601      	mov	r1, r0
 80140ca:	2000      	movs	r0, #0
 80140cc:	f7ff fff6 	bl	80140bc <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 80140d0:	bd08      	pop	{r3, pc}
 80140d2:	bf00      	nop

080140d4 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 80140d4:	6a08      	ldr	r0, [r1, #32]
 80140d6:	820a      	strh	r2, [r1, #16]
 80140d8:	f7fa bf60 	b.w	800ef9c <OffboardThermistorCurrentLimiter::decode_pin()>

080140dc <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 80140dc:	b508      	push	{r3, lr}
 80140de:	460a      	mov	r2, r1
 80140e0:	4601      	mov	r1, r0
 80140e2:	2000      	movs	r0, #0
 80140e4:	f7ff fff6 	bl	80140d4 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 80140e8:	bd08      	pop	{r3, pc}
 80140ea:	bf00      	nop

080140ec <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 80140ec:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
 80140ee:	700a      	strb	r2, [r1, #0]
 80140f0:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 80140f4:	b90a      	cbnz	r2, 80140fa <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const+0xe>
 80140f6:	6a1a      	ldr	r2, [r3, #32]
 80140f8:	7812      	ldrb	r2, [r2, #0]
 80140fa:	f883 2067 	strb.w	r2, [r3, #103]	@ 0x67
 80140fe:	4770      	bx	lr

08014100 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 8014100:	b508      	push	{r3, lr}
 8014102:	460a      	mov	r2, r1
 8014104:	4601      	mov	r1, r0
 8014106:	2000      	movs	r0, #0
 8014108:	f7ff fff0 	bl	80140ec <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801410c:	bd08      	pop	{r3, pc}
 801410e:	bf00      	nop

08014110 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 8014110:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 8014112:	ed81 0a04 	vstr	s0, [r1, #16]
 8014116:	f7fa b8ad 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

0801411c <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801411c:	b508      	push	{r3, lr}
 801411e:	4601      	mov	r1, r0
 8014120:	2000      	movs	r0, #0
 8014122:	f7ff fff5 	bl	8014110 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 8014126:	bd08      	pop	{r3, pc}

08014128 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 8014128:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 801412a:	ed81 0a05 	vstr	s0, [r1, #20]
 801412e:	f7fa b8a1 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

08014134 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 8014134:	b508      	push	{r3, lr}
 8014136:	4601      	mov	r1, r0
 8014138:	2000      	movs	r0, #0
 801413a:	f7ff fff5 	bl	8014128 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801413e:	bd08      	pop	{r3, pc}

08014140 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 8014140:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 8014142:	ed81 0a0d 	vstr	s0, [r1, #52]	@ 0x34
 8014146:	f7fa b895 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

0801414c <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801414c:	b508      	push	{r3, lr}
 801414e:	4601      	mov	r1, r0
 8014150:	2000      	movs	r0, #0
 8014152:	f7ff fff5 	bl	8014140 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 8014156:	bd08      	pop	{r3, pc}

08014158 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 8014158:	2301      	movs	r3, #1
 801415a:	ed81 0a10 	vstr	s0, [r1, #64]	@ 0x40
 801415e:	f881 3054 	strb.w	r3, [r1, #84]	@ 0x54
 8014162:	4770      	bx	lr

08014164 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 8014164:	b508      	push	{r3, lr}
 8014166:	4601      	mov	r1, r0
 8014168:	2000      	movs	r0, #0
 801416a:	f7ff fff5 	bl	8014158 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801416e:	bd08      	pop	{r3, pc}

08014170 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 8014170:	ed81 0a0b 	vstr	s0, [r1, #44]	@ 0x2c
 8014174:	f501 5140 	add.w	r1, r1, #12288	@ 0x3000
 8014178:	f8d1 08a0 	ldr.w	r0, [r1, #2208]	@ 0x8a0
 801417c:	f7fc b8a6 	b.w	80102cc <Controller::update_filter_gains()>

08014180 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 8014180:	b508      	push	{r3, lr}
 8014182:	4601      	mov	r1, r0
 8014184:	2000      	movs	r0, #0
 8014186:	f7ff fff3 	bl	8014170 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801418a:	bd08      	pop	{r3, pc}

0801418c <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801418c:	460b      	mov	r3, r1
 801418e:	708a      	strb	r2, [r1, #2]
 8014190:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8014192:	2100      	movs	r1, #0
 8014194:	f7fb b826 	b.w	800f1e4 <Encoder::set_idx_subscribe(bool)>

08014198 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 8014198:	b508      	push	{r3, lr}
 801419a:	460a      	mov	r2, r1
 801419c:	4601      	mov	r1, r0
 801419e:	2000      	movs	r0, #0
 80141a0:	f7ff fff4 	bl	801418c <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 80141a4:	bd08      	pop	{r3, pc}
 80141a6:	bf00      	nop

080141a8 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 80141a8:	460b      	mov	r3, r1
 80141aa:	f881 2028 	strb.w	r2, [r1, #40]	@ 0x28
 80141ae:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 80141b0:	2100      	movs	r1, #0
 80141b2:	f7fb b817 	b.w	800f1e4 <Encoder::set_idx_subscribe(bool)>
	...

080141b8 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 80141b8:	b508      	push	{r3, lr}
 80141ba:	460a      	mov	r2, r1
 80141bc:	4601      	mov	r1, r0
 80141be:	2000      	movs	r0, #0
 80141c0:	f7ff fff2 	bl	80141a8 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 80141c4:	bd08      	pop	{r3, pc}
 80141c6:	bf00      	nop

080141c8 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 80141c8:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 80141ca:	858a      	strh	r2, [r1, #44]	@ 0x2c
 80141cc:	f7fb bc2a 	b.w	800fa24 <Encoder::abs_spi_cs_pin_init()>

080141d0 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 80141d0:	b508      	push	{r3, lr}
 80141d2:	460a      	mov	r2, r1
 80141d4:	4601      	mov	r1, r0
 80141d6:	2000      	movs	r0, #0
 80141d8:	f7ff fff6 	bl	80141c8 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 80141dc:	bd08      	pop	{r3, pc}
 80141de:	bf00      	nop

080141e0 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 80141e0:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 80141e2:	70ca      	strb	r2, [r1, #3]
 80141e4:	f7fb b84a 	b.w	800f27c <Encoder::check_pre_calibrated()>

080141e8 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 80141e8:	b508      	push	{r3, lr}
 80141ea:	460a      	mov	r2, r1
 80141ec:	4601      	mov	r1, r0
 80141ee:	2000      	movs	r0, #0
 80141f0:	f7ff fff6 	bl	80141e0 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 80141f4:	bd08      	pop	{r3, pc}
 80141f6:	bf00      	nop

080141f8 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 80141f8:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 80141fa:	ed81 0a09 	vstr	s0, [r1, #36]	@ 0x24
 80141fe:	f7fb b80f 	b.w	800f220 <Encoder::update_pll_gains()>
	...

08014204 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 8014204:	b508      	push	{r3, lr}
 8014206:	4601      	mov	r1, r0
 8014208:	2000      	movs	r0, #0
 801420a:	f7ff fff5 	bl	80141f8 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801420e:	bd08      	pop	{r3, pc}

08014210 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 8014210:	6908      	ldr	r0, [r1, #16]
 8014212:	810a      	strh	r2, [r1, #8]
 8014214:	f7fb bf16 	b.w	8010044 <Endstop::update_config()>

08014218 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 8014218:	b508      	push	{r3, lr}
 801421a:	460a      	mov	r2, r1
 801421c:	4601      	mov	r1, r0
 801421e:	2000      	movs	r0, #0
 8014220:	f7ff fff6 	bl	8014210 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 8014224:	bd08      	pop	{r3, pc}
 8014226:	bf00      	nop

08014228 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 8014228:	6908      	ldr	r0, [r1, #16]
 801422a:	728a      	strb	r2, [r1, #10]
 801422c:	f7fb bf0a 	b.w	8010044 <Endstop::update_config()>

08014230 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 8014230:	b508      	push	{r3, lr}
 8014232:	460a      	mov	r2, r1
 8014234:	4601      	mov	r1, r0
 8014236:	2000      	movs	r0, #0
 8014238:	f7ff fff6 	bl	8014228 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801423c:	bd08      	pop	{r3, pc}
 801423e:	bf00      	nop

08014240 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned long)#2}::operator()(void*, unsigned long) const>:
 8014240:	6908      	ldr	r0, [r1, #16]
 8014242:	604a      	str	r2, [r1, #4]
 8014244:	f7fb befe 	b.w	8010044 <Endstop::update_config()>

08014248 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned long)#2}::_FUN(void*, unsigned long)>:
 8014248:	b508      	push	{r3, lr}
 801424a:	460a      	mov	r2, r1
 801424c:	4601      	mov	r1, r0
 801424e:	2000      	movs	r0, #0
 8014250:	f7ff fff6 	bl	8014240 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*)::{lambda(void*, unsigned long)#2}::operator()(void*, unsigned long) const>
 8014254:	bd08      	pop	{r3, pc}
 8014256:	bf00      	nop

08014258 <fibre::is_endpoint_ref_valid(endpoint_ref_t)>:
 8014258:	4b09      	ldr	r3, [pc, #36]	@ (8014280 <fibre::is_endpoint_ref_valid(endpoint_ref_t)+0x28>)
 801425a:	b082      	sub	sp, #8
 801425c:	881b      	ldrh	r3, [r3, #0]
 801425e:	9001      	str	r0, [sp, #4]
 8014260:	b280      	uxth	r0, r0
 8014262:	4298      	cmp	r0, r3
 8014264:	d108      	bne.n	8014278 <fibre::is_endpoint_ref_valid(endpoint_ref_t)+0x20>
 8014266:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801426a:	f240 2325 	movw	r3, #549	@ 0x225
 801426e:	4298      	cmp	r0, r3
 8014270:	bf8c      	ite	hi
 8014272:	2000      	movhi	r0, #0
 8014274:	2001      	movls	r0, #1
 8014276:	e000      	b.n	801427a <fibre::is_endpoint_ref_valid(endpoint_ref_t)+0x22>
 8014278:	2000      	movs	r0, #0
 801427a:	b002      	add	sp, #8
 801427c:	4770      	bx	lr
 801427e:	bf00      	nop
 8014280:	20008e4c 	.word	0x20008e4c

08014284 <fibre::set_endpoint_from_float(endpoint_ref_t, float)>:
 8014284:	b500      	push	{lr}
 8014286:	ed2d 8b02 	vpush	{d8}
 801428a:	4b05      	ldr	r3, [pc, #20]	@ (80142a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1c>)
 801428c:	b089      	sub	sp, #36	@ 0x24
 801428e:	881b      	ldrh	r3, [r3, #0]
 8014290:	9001      	str	r0, [sp, #4]
 8014292:	b280      	uxth	r0, r0
 8014294:	4298      	cmp	r0, r3
 8014296:	d005      	beq.n	80142a4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x20>
 8014298:	2000      	movs	r0, #0
 801429a:	f003 b895 	b.w	80173c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3144>
 801429e:	bf00      	nop
 80142a0:	20008e4c 	.word	0x20008e4c
 80142a4:	2300      	movs	r3, #0
 80142a6:	9307      	str	r3, [sp, #28]
 80142a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80142ac:	f240 221d 	movw	r2, #541	@ 0x21d
 80142b0:	3b03      	subs	r3, #3
 80142b2:	eeb0 8a40 	vmov.f32	s16, s0
 80142b6:	4293      	cmp	r3, r2
 80142b8:	f203 8073 	bhi.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80142bc:	e8df f013 	tbh	[pc, r3, lsl #1]
 80142c0:	1871021e 	.word	0x1871021e
 80142c4:	18711871 	.word	0x18711871
 80142c8:	18711871 	.word	0x18711871
 80142cc:	18711871 	.word	0x18711871
 80142d0:	18711871 	.word	0x18711871
 80142d4:	18710228 	.word	0x18710228
 80142d8:	18711871 	.word	0x18711871
 80142dc:	18711871 	.word	0x18711871
 80142e0:	18711871 	.word	0x18711871
 80142e4:	18711871 	.word	0x18711871
 80142e8:	18711871 	.word	0x18711871
 80142ec:	18711871 	.word	0x18711871
 80142f0:	18711871 	.word	0x18711871
 80142f4:	18711871 	.word	0x18711871
 80142f8:	18711871 	.word	0x18711871
 80142fc:	18711871 	.word	0x18711871
 8014300:	18711871 	.word	0x18711871
 8014304:	18711871 	.word	0x18711871
 8014308:	023d0233 	.word	0x023d0233
 801430c:	02510247 	.word	0x02510247
 8014310:	0265025b 	.word	0x0265025b
 8014314:	0279026f 	.word	0x0279026f
 8014318:	028d0283 	.word	0x028d0283
 801431c:	02a10297 	.word	0x02a10297
 8014320:	02b502ab 	.word	0x02b502ab
 8014324:	02c902bf 	.word	0x02c902bf
 8014328:	02dd02d3 	.word	0x02dd02d3
 801432c:	02f102e7 	.word	0x02f102e7
 8014330:	030502fb 	.word	0x030502fb
 8014334:	0319030f 	.word	0x0319030f
 8014338:	032d0323 	.word	0x032d0323
 801433c:	03920388 	.word	0x03920388
 8014340:	03a6039c 	.word	0x03a6039c
 8014344:	187103b0 	.word	0x187103b0
 8014348:	187103ba 	.word	0x187103ba
 801434c:	03c61871 	.word	0x03c61871
 8014350:	18711871 	.word	0x18711871
 8014354:	03de03d2 	.word	0x03de03d2
 8014358:	03f703ea 	.word	0x03f703ea
 801435c:	04110404 	.word	0x04110404
 8014360:	042b041e 	.word	0x042b041e
 8014364:	04450438 	.word	0x04450438
 8014368:	045f0452 	.word	0x045f0452
 801436c:	0478046c 	.word	0x0478046c
 8014370:	04910484 	.word	0x04910484
 8014374:	04df04d2 	.word	0x04df04d2
 8014378:	04f904ec 	.word	0x04f904ec
 801437c:	05130506 	.word	0x05130506
 8014380:	052d0520 	.word	0x052d0520
 8014384:	0547053a 	.word	0x0547053a
 8014388:	05610554 	.word	0x05610554
 801438c:	057b056e 	.word	0x057b056e
 8014390:	05950588 	.word	0x05950588
 8014394:	05af05a2 	.word	0x05af05a2
 8014398:	05c905bc 	.word	0x05c905bc
 801439c:	05e305d6 	.word	0x05e305d6
 80143a0:	06110604 	.word	0x06110604
 80143a4:	062b061e 	.word	0x062b061e
 80143a8:	06381871 	.word	0x06381871
 80143ac:	06530645 	.word	0x06530645
 80143b0:	18710661 	.word	0x18710661
 80143b4:	067b066e 	.word	0x067b066e
 80143b8:	06960688 	.word	0x06960688
 80143bc:	06b206a4 	.word	0x06b206a4
 80143c0:	06ce06c0 	.word	0x06ce06c0
 80143c4:	187106dc 	.word	0x187106dc
 80143c8:	18711871 	.word	0x18711871
 80143cc:	06e91871 	.word	0x06e91871
 80143d0:	070306f6 	.word	0x070306f6
 80143d4:	07101871 	.word	0x07101871
 80143d8:	07510744 	.word	0x07510744
 80143dc:	076b075e 	.word	0x076b075e
 80143e0:	07850778 	.word	0x07850778
 80143e4:	18710792 	.word	0x18710792
 80143e8:	07ac079f 	.word	0x07ac079f
 80143ec:	187107b9 	.word	0x187107b9
 80143f0:	07c61871 	.word	0x07c61871
 80143f4:	07d31871 	.word	0x07d31871
 80143f8:	18711871 	.word	0x18711871
 80143fc:	18711871 	.word	0x18711871
 8014400:	18711871 	.word	0x18711871
 8014404:	18711871 	.word	0x18711871
 8014408:	18711871 	.word	0x18711871
 801440c:	18711871 	.word	0x18711871
 8014410:	07e01871 	.word	0x07e01871
 8014414:	07fb07ed 	.word	0x07fb07ed
 8014418:	08170809 	.word	0x08170809
 801441c:	08310824 	.word	0x08310824
 8014420:	084d083f 	.word	0x084d083f
 8014424:	088c087e 	.word	0x088c087e
 8014428:	08a8089a 	.word	0x08a8089a
 801442c:	08c408b6 	.word	0x08c408b6
 8014430:	08df08d2 	.word	0x08df08d2
 8014434:	08fb08ed 	.word	0x08fb08ed
 8014438:	09170909 	.word	0x09170909
 801443c:	09330925 	.word	0x09330925
 8014440:	094c0940 	.word	0x094c0940
 8014444:	18710959 	.word	0x18710959
 8014448:	18711871 	.word	0x18711871
 801444c:	09661871 	.word	0x09661871
 8014450:	09800973 	.word	0x09800973
 8014454:	09bc09ac 	.word	0x09bc09ac
 8014458:	09dc09cc 	.word	0x09dc09cc
 801445c:	09f909ec 	.word	0x09f909ec
 8014460:	0a150a07 	.word	0x0a150a07
 8014464:	0a310a23 	.word	0x0a310a23
 8014468:	0a4d0a3f 	.word	0x0a4d0a3f
 801446c:	0a690a5b 	.word	0x0a690a5b
 8014470:	0a850a77 	.word	0x0a850a77
 8014474:	0aa10a93 	.word	0x0aa10a93
 8014478:	0ae20ab1 	.word	0x0ae20ab1
 801447c:	18710af2 	.word	0x18710af2
 8014480:	18710aff 	.word	0x18710aff
 8014484:	0b1f0b0f 	.word	0x0b1f0b0f
 8014488:	0b2e1871 	.word	0x0b2e1871
 801448c:	0b3e1871 	.word	0x0b3e1871
 8014490:	18710b4b 	.word	0x18710b4b
 8014494:	18710b58 	.word	0x18710b58
 8014498:	18711871 	.word	0x18711871
 801449c:	18711871 	.word	0x18711871
 80144a0:	18711871 	.word	0x18711871
 80144a4:	18711871 	.word	0x18711871
 80144a8:	18711871 	.word	0x18711871
 80144ac:	18711871 	.word	0x18711871
 80144b0:	18711871 	.word	0x18711871
 80144b4:	18710b65 	.word	0x18710b65
 80144b8:	0b7f0b72 	.word	0x0b7f0b72
 80144bc:	0b990b8c 	.word	0x0b990b8c
 80144c0:	0bb40ba6 	.word	0x0bb40ba6
 80144c4:	0bd00bc2 	.word	0x0bd00bc2
 80144c8:	0beb0bdd 	.word	0x0beb0bdd
 80144cc:	0c430c36 	.word	0x0c430c36
 80144d0:	0c5f0c51 	.word	0x0c5f0c51
 80144d4:	0c7b0c6d 	.word	0x0c7b0c6d
 80144d8:	0c970c89 	.word	0x0c970c89
 80144dc:	0ca51871 	.word	0x0ca51871
 80144e0:	0cbf0cb2 	.word	0x0cbf0cb2
 80144e4:	0cd90ccc 	.word	0x0cd90ccc
 80144e8:	0cf30ce6 	.word	0x0cf30ce6
 80144ec:	0d0f0d01 	.word	0x0d0f0d01
 80144f0:	0d2a0d1c 	.word	0x0d2a0d1c
 80144f4:	0d381871 	.word	0x0d381871
 80144f8:	0d7b0d6e 	.word	0x0d7b0d6e
 80144fc:	0d960d88 	.word	0x0d960d88
 8014500:	18710da4 	.word	0x18710da4
 8014504:	0dbe0db1 	.word	0x0dbe0db1
 8014508:	0dd80dcb 	.word	0x0dd80dcb
 801450c:	0df40de6 	.word	0x0df40de6
 8014510:	18711871 	.word	0x18711871
 8014514:	18710e01 	.word	0x18710e01
 8014518:	0e0d1871 	.word	0x0e0d1871
 801451c:	18711871 	.word	0x18711871
 8014520:	0e250e19 	.word	0x0e250e19
 8014524:	0e3e0e31 	.word	0x0e3e0e31
 8014528:	0e580e4b 	.word	0x0e580e4b
 801452c:	0e720e65 	.word	0x0e720e65
 8014530:	0eb70eaa 	.word	0x0eb70eaa
 8014534:	0ed10ec4 	.word	0x0ed10ec4
 8014538:	0eea0ede 	.word	0x0eea0ede
 801453c:	0f030ef6 	.word	0x0f030ef6
 8014540:	0f1d0f10 	.word	0x0f1d0f10
 8014544:	0f370f2a 	.word	0x0f370f2a
 8014548:	0f510f44 	.word	0x0f510f44
 801454c:	0f6b0f5e 	.word	0x0f6b0f5e
 8014550:	0f850f78 	.word	0x0f850f78
 8014554:	0f9f0f92 	.word	0x0f9f0f92
 8014558:	0fb90fac 	.word	0x0fb90fac
 801455c:	0feb0fde 	.word	0x0feb0fde
 8014560:	10050ff8 	.word	0x10050ff8
 8014564:	101f1012 	.word	0x101f1012
 8014568:	1039102c 	.word	0x1039102c
 801456c:	10531046 	.word	0x10531046
 8014570:	106d1060 	.word	0x106d1060
 8014574:	107a1871 	.word	0x107a1871
 8014578:	10951087 	.word	0x10951087
 801457c:	187110a3 	.word	0x187110a3
 8014580:	10bd10b0 	.word	0x10bd10b0
 8014584:	10d810ca 	.word	0x10d810ca
 8014588:	111410e6 	.word	0x111410e6
 801458c:	11301122 	.word	0x11301122
 8014590:	1871113e 	.word	0x1871113e
 8014594:	18711871 	.word	0x18711871
 8014598:	114b1871 	.word	0x114b1871
 801459c:	11651158 	.word	0x11651158
 80145a0:	11721871 	.word	0x11721871
 80145a4:	118c117f 	.word	0x118c117f
 80145a8:	11a61199 	.word	0x11a61199
 80145ac:	11c011b3 	.word	0x11c011b3
 80145b0:	187111cd 	.word	0x187111cd
 80145b4:	11e711da 	.word	0x11e711da
 80145b8:	187111f4 	.word	0x187111f4
 80145bc:	12011871 	.word	0x12011871
 80145c0:	120e1871 	.word	0x120e1871
 80145c4:	18711871 	.word	0x18711871
 80145c8:	18711871 	.word	0x18711871
 80145cc:	18711871 	.word	0x18711871
 80145d0:	18711871 	.word	0x18711871
 80145d4:	18711871 	.word	0x18711871
 80145d8:	18711871 	.word	0x18711871
 80145dc:	121b1871 	.word	0x121b1871
 80145e0:	124e1240 	.word	0x124e1240
 80145e4:	126a125c 	.word	0x126a125c
 80145e8:	12841277 	.word	0x12841277
 80145ec:	12a01292 	.word	0x12a01292
 80145f0:	12bc12ae 	.word	0x12bc12ae
 80145f4:	12d812ca 	.word	0x12d812ca
 80145f8:	12f412e6 	.word	0x12f412e6
 80145fc:	130f1302 	.word	0x130f1302
 8014600:	132b131d 	.word	0x132b131d
 8014604:	13471339 	.word	0x13471339
 8014608:	138a137c 	.word	0x138a137c
 801460c:	13a31397 	.word	0x13a31397
 8014610:	187113b0 	.word	0x187113b0
 8014614:	18711871 	.word	0x18711871
 8014618:	13bd1871 	.word	0x13bd1871
 801461c:	13d713ca 	.word	0x13d713ca
 8014620:	13f713e7 	.word	0x13f713e7
 8014624:	14171407 	.word	0x14171407
 8014628:	14341427 	.word	0x14341427
 801462c:	14501442 	.word	0x14501442
 8014630:	146c145e 	.word	0x146c145e
 8014634:	14861479 	.word	0x14861479
 8014638:	14c514b8 	.word	0x14c514b8
 801463c:	14df14d2 	.word	0x14df14d2
 8014640:	14f914ec 	.word	0x14f914ec
 8014644:	15171508 	.word	0x15171508
 8014648:	18711526 	.word	0x18711526
 801464c:	18711532 	.word	0x18711532
 8014650:	15501541 	.word	0x15501541
 8014654:	155e1871 	.word	0x155e1871
 8014658:	156d1871 	.word	0x156d1871
 801465c:	18711579 	.word	0x18711579
 8014660:	18711585 	.word	0x18711585
 8014664:	18711871 	.word	0x18711871
 8014668:	18711871 	.word	0x18711871
 801466c:	18711871 	.word	0x18711871
 8014670:	18711871 	.word	0x18711871
 8014674:	18711871 	.word	0x18711871
 8014678:	18711871 	.word	0x18711871
 801467c:	18711871 	.word	0x18711871
 8014680:	18711591 	.word	0x18711591
 8014684:	15a9159d 	.word	0x15a9159d
 8014688:	15f415b5 	.word	0x15f415b5
 801468c:	160d1600 	.word	0x160d1600
 8014690:	1627161a 	.word	0x1627161a
 8014694:	16401633 	.word	0x16401633
 8014698:	1659164d 	.word	0x1659164d
 801469c:	16731666 	.word	0x16731666
 80146a0:	168d1680 	.word	0x168d1680
 80146a4:	16a7169a 	.word	0x16a7169a
 80146a8:	16b41871 	.word	0x16b41871
 80146ac:	16cc16c0 	.word	0x16cc16c0
 80146b0:	16e416d8 	.word	0x16e416d8
 80146b4:	1728171c 	.word	0x1728171c
 80146b8:	17421735 	.word	0x17421735
 80146bc:	175b174e 	.word	0x175b174e
 80146c0:	17681871 	.word	0x17681871
 80146c4:	17801774 	.word	0x17801774
 80146c8:	1799178c 	.word	0x1799178c
 80146cc:	187117a6 	.word	0x187117a6
 80146d0:	17be17b2 	.word	0x17be17b2
 80146d4:	17d617ca 	.word	0x17d617ca
 80146d8:	17f017e3 	.word	0x17f017e3
 80146dc:	18711871 	.word	0x18711871
 80146e0:	187117fc 	.word	0x187117fc
 80146e4:	18711807 	.word	0x18711807
 80146e8:	184e1813 	.word	0x184e1813
 80146ec:	18571871 	.word	0x18571871
 80146f0:	18711871 	.word	0x18711871
 80146f4:	18711860 	.word	0x18711860
 80146f8:	18691871 	.word	0x18691871
 80146fc:	4b8c      	ldr	r3, [pc, #560]	@ (8014930 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6ac>)
 80146fe:	9303      	str	r3, [sp, #12]
 8014700:	4b8c      	ldr	r3, [pc, #560]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014702:	9304      	str	r3, [sp, #16]
 8014704:	4b8c      	ldr	r3, [pc, #560]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014706:	9305      	str	r3, [sp, #20]
 8014708:	4b8c      	ldr	r3, [pc, #560]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 801470a:	9307      	str	r3, [sp, #28]
 801470c:	f002 be49 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014710:	4b8b      	ldr	r3, [pc, #556]	@ (8014940 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6bc>)
 8014712:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8014714:	9303      	str	r3, [sp, #12]
 8014716:	4b8b      	ldr	r3, [pc, #556]	@ (8014944 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c0>)
 8014718:	9304      	str	r3, [sp, #16]
 801471a:	4b8b      	ldr	r3, [pc, #556]	@ (8014948 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c4>)
 801471c:	9305      	str	r3, [sp, #20]
 801471e:	4b8b      	ldr	r3, [pc, #556]	@ (801494c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c8>)
 8014720:	9307      	str	r3, [sp, #28]
 8014722:	f002 be3e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014726:	4b8a      	ldr	r3, [pc, #552]	@ (8014950 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6cc>)
 8014728:	9303      	str	r3, [sp, #12]
 801472a:	4b86      	ldr	r3, [pc, #536]	@ (8014944 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c0>)
 801472c:	9304      	str	r3, [sp, #16]
 801472e:	4b86      	ldr	r3, [pc, #536]	@ (8014948 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c4>)
 8014730:	9305      	str	r3, [sp, #20]
 8014732:	4b86      	ldr	r3, [pc, #536]	@ (801494c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c8>)
 8014734:	9307      	str	r3, [sp, #28]
 8014736:	f002 be34 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801473a:	4b86      	ldr	r3, [pc, #536]	@ (8014954 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6d0>)
 801473c:	9303      	str	r3, [sp, #12]
 801473e:	4b86      	ldr	r3, [pc, #536]	@ (8014958 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6d4>)
 8014740:	9304      	str	r3, [sp, #16]
 8014742:	4b86      	ldr	r3, [pc, #536]	@ (801495c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6d8>)
 8014744:	9305      	str	r3, [sp, #20]
 8014746:	4b86      	ldr	r3, [pc, #536]	@ (8014960 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6dc>)
 8014748:	9307      	str	r3, [sp, #28]
 801474a:	f002 be2a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801474e:	4b85      	ldr	r3, [pc, #532]	@ (8014964 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6e0>)
 8014750:	9303      	str	r3, [sp, #12]
 8014752:	4b7c      	ldr	r3, [pc, #496]	@ (8014944 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c0>)
 8014754:	9304      	str	r3, [sp, #16]
 8014756:	4b7c      	ldr	r3, [pc, #496]	@ (8014948 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c4>)
 8014758:	9305      	str	r3, [sp, #20]
 801475a:	4b7c      	ldr	r3, [pc, #496]	@ (801494c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c8>)
 801475c:	9307      	str	r3, [sp, #28]
 801475e:	f002 be20 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014762:	4b81      	ldr	r3, [pc, #516]	@ (8014968 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6e4>)
 8014764:	9303      	str	r3, [sp, #12]
 8014766:	4b77      	ldr	r3, [pc, #476]	@ (8014944 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c0>)
 8014768:	9304      	str	r3, [sp, #16]
 801476a:	4b77      	ldr	r3, [pc, #476]	@ (8014948 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c4>)
 801476c:	9305      	str	r3, [sp, #20]
 801476e:	4b77      	ldr	r3, [pc, #476]	@ (801494c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c8>)
 8014770:	9307      	str	r3, [sp, #28]
 8014772:	f002 be16 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014776:	4b7d      	ldr	r3, [pc, #500]	@ (801496c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6e8>)
 8014778:	9303      	str	r3, [sp, #12]
 801477a:	4b6e      	ldr	r3, [pc, #440]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 801477c:	9304      	str	r3, [sp, #16]
 801477e:	4b6e      	ldr	r3, [pc, #440]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014780:	9305      	str	r3, [sp, #20]
 8014782:	4b6e      	ldr	r3, [pc, #440]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014784:	9307      	str	r3, [sp, #28]
 8014786:	f002 be0c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801478a:	4b79      	ldr	r3, [pc, #484]	@ (8014970 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6ec>)
 801478c:	9303      	str	r3, [sp, #12]
 801478e:	4b69      	ldr	r3, [pc, #420]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014790:	9304      	str	r3, [sp, #16]
 8014792:	4b69      	ldr	r3, [pc, #420]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014794:	9305      	str	r3, [sp, #20]
 8014796:	4b69      	ldr	r3, [pc, #420]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014798:	9307      	str	r3, [sp, #28]
 801479a:	f002 be02 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801479e:	4b75      	ldr	r3, [pc, #468]	@ (8014974 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6f0>)
 80147a0:	9303      	str	r3, [sp, #12]
 80147a2:	4b64      	ldr	r3, [pc, #400]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80147a4:	9304      	str	r3, [sp, #16]
 80147a6:	4b64      	ldr	r3, [pc, #400]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80147a8:	9305      	str	r3, [sp, #20]
 80147aa:	4b64      	ldr	r3, [pc, #400]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80147ac:	9307      	str	r3, [sp, #28]
 80147ae:	f002 bdf8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80147b2:	4b71      	ldr	r3, [pc, #452]	@ (8014978 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6f4>)
 80147b4:	9303      	str	r3, [sp, #12]
 80147b6:	4b5f      	ldr	r3, [pc, #380]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80147b8:	9304      	str	r3, [sp, #16]
 80147ba:	4b5f      	ldr	r3, [pc, #380]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80147bc:	9305      	str	r3, [sp, #20]
 80147be:	4b5f      	ldr	r3, [pc, #380]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80147c0:	9307      	str	r3, [sp, #28]
 80147c2:	f002 bdee 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80147c6:	4b6d      	ldr	r3, [pc, #436]	@ (801497c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6f8>)
 80147c8:	9303      	str	r3, [sp, #12]
 80147ca:	4b5e      	ldr	r3, [pc, #376]	@ (8014944 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c0>)
 80147cc:	9304      	str	r3, [sp, #16]
 80147ce:	4b5e      	ldr	r3, [pc, #376]	@ (8014948 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c4>)
 80147d0:	9305      	str	r3, [sp, #20]
 80147d2:	4b5e      	ldr	r3, [pc, #376]	@ (801494c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6c8>)
 80147d4:	9307      	str	r3, [sp, #28]
 80147d6:	f002 bde4 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80147da:	4b69      	ldr	r3, [pc, #420]	@ (8014980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6fc>)
 80147dc:	9303      	str	r3, [sp, #12]
 80147de:	4b55      	ldr	r3, [pc, #340]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80147e0:	9304      	str	r3, [sp, #16]
 80147e2:	4b55      	ldr	r3, [pc, #340]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80147e4:	9305      	str	r3, [sp, #20]
 80147e6:	4b55      	ldr	r3, [pc, #340]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80147e8:	9307      	str	r3, [sp, #28]
 80147ea:	f002 bdda 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80147ee:	4b65      	ldr	r3, [pc, #404]	@ (8014984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x700>)
 80147f0:	9303      	str	r3, [sp, #12]
 80147f2:	4b50      	ldr	r3, [pc, #320]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80147f4:	9304      	str	r3, [sp, #16]
 80147f6:	4b50      	ldr	r3, [pc, #320]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80147f8:	9305      	str	r3, [sp, #20]
 80147fa:	4b50      	ldr	r3, [pc, #320]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80147fc:	9307      	str	r3, [sp, #28]
 80147fe:	f002 bdd0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014802:	4b61      	ldr	r3, [pc, #388]	@ (8014988 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x704>)
 8014804:	9303      	str	r3, [sp, #12]
 8014806:	4b4b      	ldr	r3, [pc, #300]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014808:	9304      	str	r3, [sp, #16]
 801480a:	4b4b      	ldr	r3, [pc, #300]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 801480c:	9305      	str	r3, [sp, #20]
 801480e:	4b4b      	ldr	r3, [pc, #300]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014810:	9307      	str	r3, [sp, #28]
 8014812:	f002 bdc6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014816:	4b5d      	ldr	r3, [pc, #372]	@ (801498c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x708>)
 8014818:	9303      	str	r3, [sp, #12]
 801481a:	4b46      	ldr	r3, [pc, #280]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 801481c:	9304      	str	r3, [sp, #16]
 801481e:	4b46      	ldr	r3, [pc, #280]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014820:	9305      	str	r3, [sp, #20]
 8014822:	4b46      	ldr	r3, [pc, #280]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014824:	9307      	str	r3, [sp, #28]
 8014826:	f002 bdbc 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801482a:	4b59      	ldr	r3, [pc, #356]	@ (8014990 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x70c>)
 801482c:	9303      	str	r3, [sp, #12]
 801482e:	4b59      	ldr	r3, [pc, #356]	@ (8014994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x710>)
 8014830:	9304      	str	r3, [sp, #16]
 8014832:	4b59      	ldr	r3, [pc, #356]	@ (8014998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x714>)
 8014834:	9305      	str	r3, [sp, #20]
 8014836:	4b59      	ldr	r3, [pc, #356]	@ (801499c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x718>)
 8014838:	9307      	str	r3, [sp, #28]
 801483a:	f002 bdb2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801483e:	4b58      	ldr	r3, [pc, #352]	@ (80149a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x71c>)
 8014840:	9303      	str	r3, [sp, #12]
 8014842:	4b3c      	ldr	r3, [pc, #240]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014844:	9304      	str	r3, [sp, #16]
 8014846:	4b3c      	ldr	r3, [pc, #240]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014848:	9305      	str	r3, [sp, #20]
 801484a:	4b3c      	ldr	r3, [pc, #240]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 801484c:	9307      	str	r3, [sp, #28]
 801484e:	f002 bda8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014852:	4b54      	ldr	r3, [pc, #336]	@ (80149a4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x720>)
 8014854:	9303      	str	r3, [sp, #12]
 8014856:	4b37      	ldr	r3, [pc, #220]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014858:	9304      	str	r3, [sp, #16]
 801485a:	4b37      	ldr	r3, [pc, #220]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 801485c:	9305      	str	r3, [sp, #20]
 801485e:	4b37      	ldr	r3, [pc, #220]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014860:	9307      	str	r3, [sp, #28]
 8014862:	f002 bd9e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014866:	4b50      	ldr	r3, [pc, #320]	@ (80149a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x724>)
 8014868:	9303      	str	r3, [sp, #12]
 801486a:	4b4a      	ldr	r3, [pc, #296]	@ (8014994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x710>)
 801486c:	9304      	str	r3, [sp, #16]
 801486e:	4b4a      	ldr	r3, [pc, #296]	@ (8014998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x714>)
 8014870:	9305      	str	r3, [sp, #20]
 8014872:	4b4a      	ldr	r3, [pc, #296]	@ (801499c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x718>)
 8014874:	9307      	str	r3, [sp, #28]
 8014876:	f002 bd94 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801487a:	4b4c      	ldr	r3, [pc, #304]	@ (80149ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x728>)
 801487c:	9303      	str	r3, [sp, #12]
 801487e:	4b2d      	ldr	r3, [pc, #180]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014880:	9304      	str	r3, [sp, #16]
 8014882:	4b2d      	ldr	r3, [pc, #180]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014884:	9305      	str	r3, [sp, #20]
 8014886:	4b2d      	ldr	r3, [pc, #180]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014888:	9307      	str	r3, [sp, #28]
 801488a:	f002 bd8a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801488e:	4b48      	ldr	r3, [pc, #288]	@ (80149b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x72c>)
 8014890:	9303      	str	r3, [sp, #12]
 8014892:	4b28      	ldr	r3, [pc, #160]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 8014894:	9304      	str	r3, [sp, #16]
 8014896:	4b28      	ldr	r3, [pc, #160]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014898:	9305      	str	r3, [sp, #20]
 801489a:	4b28      	ldr	r3, [pc, #160]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 801489c:	9307      	str	r3, [sp, #28]
 801489e:	f002 bd80 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80148a2:	4b44      	ldr	r3, [pc, #272]	@ (80149b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x730>)
 80148a4:	9303      	str	r3, [sp, #12]
 80148a6:	4b3b      	ldr	r3, [pc, #236]	@ (8014994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x710>)
 80148a8:	9304      	str	r3, [sp, #16]
 80148aa:	4b3b      	ldr	r3, [pc, #236]	@ (8014998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x714>)
 80148ac:	9305      	str	r3, [sp, #20]
 80148ae:	4b3b      	ldr	r3, [pc, #236]	@ (801499c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x718>)
 80148b0:	9307      	str	r3, [sp, #28]
 80148b2:	f002 bd76 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80148b6:	4b40      	ldr	r3, [pc, #256]	@ (80149b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x734>)
 80148b8:	9303      	str	r3, [sp, #12]
 80148ba:	4b1e      	ldr	r3, [pc, #120]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80148bc:	9304      	str	r3, [sp, #16]
 80148be:	4b1e      	ldr	r3, [pc, #120]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80148c0:	9305      	str	r3, [sp, #20]
 80148c2:	4b1e      	ldr	r3, [pc, #120]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80148c4:	9307      	str	r3, [sp, #28]
 80148c6:	f002 bd6c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80148ca:	4b3c      	ldr	r3, [pc, #240]	@ (80149bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x738>)
 80148cc:	9303      	str	r3, [sp, #12]
 80148ce:	4b19      	ldr	r3, [pc, #100]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80148d0:	9304      	str	r3, [sp, #16]
 80148d2:	4b19      	ldr	r3, [pc, #100]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80148d4:	9305      	str	r3, [sp, #20]
 80148d6:	4b19      	ldr	r3, [pc, #100]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 80148d8:	9307      	str	r3, [sp, #28]
 80148da:	f002 bd62 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80148de:	4b38      	ldr	r3, [pc, #224]	@ (80149c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x73c>)
 80148e0:	9303      	str	r3, [sp, #12]
 80148e2:	4b2c      	ldr	r3, [pc, #176]	@ (8014994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x710>)
 80148e4:	9304      	str	r3, [sp, #16]
 80148e6:	4b2c      	ldr	r3, [pc, #176]	@ (8014998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x714>)
 80148e8:	9305      	str	r3, [sp, #20]
 80148ea:	4b2c      	ldr	r3, [pc, #176]	@ (801499c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x718>)
 80148ec:	9307      	str	r3, [sp, #28]
 80148ee:	f002 bd58 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80148f2:	4b34      	ldr	r3, [pc, #208]	@ (80149c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x740>)
 80148f4:	9303      	str	r3, [sp, #12]
 80148f6:	4b0f      	ldr	r3, [pc, #60]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 80148f8:	9304      	str	r3, [sp, #16]
 80148fa:	4b0f      	ldr	r3, [pc, #60]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 80148fc:	9305      	str	r3, [sp, #20]
 80148fe:	4b0f      	ldr	r3, [pc, #60]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014900:	9307      	str	r3, [sp, #28]
 8014902:	f002 bd4e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014906:	4b30      	ldr	r3, [pc, #192]	@ (80149c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x744>)
 8014908:	9303      	str	r3, [sp, #12]
 801490a:	4b0a      	ldr	r3, [pc, #40]	@ (8014934 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b0>)
 801490c:	9304      	str	r3, [sp, #16]
 801490e:	4b0a      	ldr	r3, [pc, #40]	@ (8014938 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b4>)
 8014910:	9305      	str	r3, [sp, #20]
 8014912:	4b0a      	ldr	r3, [pc, #40]	@ (801493c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x6b8>)
 8014914:	9307      	str	r3, [sp, #28]
 8014916:	f002 bd44 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801491a:	4b2c      	ldr	r3, [pc, #176]	@ (80149cc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x748>)
 801491c:	9303      	str	r3, [sp, #12]
 801491e:	4b1d      	ldr	r3, [pc, #116]	@ (8014994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x710>)
 8014920:	9304      	str	r3, [sp, #16]
 8014922:	4b1d      	ldr	r3, [pc, #116]	@ (8014998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x714>)
 8014924:	9305      	str	r3, [sp, #20]
 8014926:	4b1d      	ldr	r3, [pc, #116]	@ (801499c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x718>)
 8014928:	9307      	str	r3, [sp, #28]
 801492a:	f002 bd3a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801492e:	bf00      	nop
 8014930:	20001864 	.word	0x20001864
 8014934:	0801283d 	.word	0x0801283d
 8014938:	08012845 	.word	0x08012845
 801493c:	20008e3c 	.word	0x20008e3c
 8014940:	20001840 	.word	0x20001840
 8014944:	0801285d 	.word	0x0801285d
 8014948:	08012861 	.word	0x08012861
 801494c:	20008e28 	.word	0x20008e28
 8014950:	200018d4 	.word	0x200018d4
 8014954:	200019bc 	.word	0x200019bc
 8014958:	08012869 	.word	0x08012869
 801495c:	0801286d 	.word	0x0801286d
 8014960:	20008e14 	.word	0x20008e14
 8014964:	200018d5 	.word	0x200018d5
 8014968:	200018d6 	.word	0x200018d6
 801496c:	200018d8 	.word	0x200018d8
 8014970:	200018dc 	.word	0x200018dc
 8014974:	200018e0 	.word	0x200018e0
 8014978:	200018e4 	.word	0x200018e4
 801497c:	200018e8 	.word	0x200018e8
 8014980:	200018ec 	.word	0x200018ec
 8014984:	200018f0 	.word	0x200018f0
 8014988:	200018f4 	.word	0x200018f4
 801498c:	200018f8 	.word	0x200018f8
 8014990:	200018fc 	.word	0x200018fc
 8014994:	08012871 	.word	0x08012871
 8014998:	08012879 	.word	0x08012879
 801499c:	20008e00 	.word	0x20008e00
 80149a0:	20001900 	.word	0x20001900
 80149a4:	20001904 	.word	0x20001904
 80149a8:	20001908 	.word	0x20001908
 80149ac:	2000190c 	.word	0x2000190c
 80149b0:	20001910 	.word	0x20001910
 80149b4:	20001914 	.word	0x20001914
 80149b8:	20001918 	.word	0x20001918
 80149bc:	2000191c 	.word	0x2000191c
 80149c0:	20001920 	.word	0x20001920
 80149c4:	20001924 	.word	0x20001924
 80149c8:	20001928 	.word	0x20001928
 80149cc:	20001974 	.word	0x20001974
 80149d0:	4b8a      	ldr	r3, [pc, #552]	@ (8014bfc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x978>)
 80149d2:	9303      	str	r3, [sp, #12]
 80149d4:	4b8a      	ldr	r3, [pc, #552]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 80149d6:	9304      	str	r3, [sp, #16]
 80149d8:	4b8a      	ldr	r3, [pc, #552]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 80149da:	9305      	str	r3, [sp, #20]
 80149dc:	4b8a      	ldr	r3, [pc, #552]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 80149de:	9307      	str	r3, [sp, #28]
 80149e0:	f002 bcdf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80149e4:	4b89      	ldr	r3, [pc, #548]	@ (8014c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x988>)
 80149e6:	9303      	str	r3, [sp, #12]
 80149e8:	4b85      	ldr	r3, [pc, #532]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 80149ea:	9304      	str	r3, [sp, #16]
 80149ec:	4b85      	ldr	r3, [pc, #532]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 80149ee:	9305      	str	r3, [sp, #20]
 80149f0:	4b85      	ldr	r3, [pc, #532]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 80149f2:	9307      	str	r3, [sp, #28]
 80149f4:	f002 bcd5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80149f8:	4b85      	ldr	r3, [pc, #532]	@ (8014c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x98c>)
 80149fa:	9303      	str	r3, [sp, #12]
 80149fc:	4b85      	ldr	r3, [pc, #532]	@ (8014c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x990>)
 80149fe:	9304      	str	r3, [sp, #16]
 8014a00:	4b85      	ldr	r3, [pc, #532]	@ (8014c18 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x994>)
 8014a02:	9305      	str	r3, [sp, #20]
 8014a04:	4b85      	ldr	r3, [pc, #532]	@ (8014c1c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x998>)
 8014a06:	9307      	str	r3, [sp, #28]
 8014a08:	f002 bccb 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a0c:	4b84      	ldr	r3, [pc, #528]	@ (8014c20 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x99c>)
 8014a0e:	9303      	str	r3, [sp, #12]
 8014a10:	4b7b      	ldr	r3, [pc, #492]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014a12:	9304      	str	r3, [sp, #16]
 8014a14:	4b7b      	ldr	r3, [pc, #492]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014a16:	9305      	str	r3, [sp, #20]
 8014a18:	4b7b      	ldr	r3, [pc, #492]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014a1a:	9307      	str	r3, [sp, #28]
 8014a1c:	f002 bcc1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a20:	4b80      	ldr	r3, [pc, #512]	@ (8014c24 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a0>)
 8014a22:	9303      	str	r3, [sp, #12]
 8014a24:	4b76      	ldr	r3, [pc, #472]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014a26:	9304      	str	r3, [sp, #16]
 8014a28:	4b76      	ldr	r3, [pc, #472]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014a2a:	9305      	str	r3, [sp, #20]
 8014a2c:	4b76      	ldr	r3, [pc, #472]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014a2e:	9307      	str	r3, [sp, #28]
 8014a30:	f002 bcb7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a34:	4b7c      	ldr	r3, [pc, #496]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014a36:	681b      	ldr	r3, [r3, #0]
 8014a38:	3350      	adds	r3, #80	@ 0x50
 8014a3a:	9303      	str	r3, [sp, #12]
 8014a3c:	4b7b      	ldr	r3, [pc, #492]	@ (8014c2c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a8>)
 8014a3e:	9304      	str	r3, [sp, #16]
 8014a40:	4b7b      	ldr	r3, [pc, #492]	@ (8014c30 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9ac>)
 8014a42:	9305      	str	r3, [sp, #20]
 8014a44:	4b7b      	ldr	r3, [pc, #492]	@ (8014c34 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9b0>)
 8014a46:	9307      	str	r3, [sp, #28]
 8014a48:	f002 bcab 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a4c:	4b76      	ldr	r3, [pc, #472]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014a4e:	681b      	ldr	r3, [r3, #0]
 8014a50:	3366      	adds	r3, #102	@ 0x66
 8014a52:	9303      	str	r3, [sp, #12]
 8014a54:	4b78      	ldr	r3, [pc, #480]	@ (8014c38 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9b4>)
 8014a56:	9304      	str	r3, [sp, #16]
 8014a58:	4b78      	ldr	r3, [pc, #480]	@ (8014c3c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9b8>)
 8014a5a:	9305      	str	r3, [sp, #20]
 8014a5c:	4b78      	ldr	r3, [pc, #480]	@ (8014c40 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9bc>)
 8014a5e:	9307      	str	r3, [sp, #28]
 8014a60:	f002 bc9f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a64:	4b70      	ldr	r3, [pc, #448]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014a66:	681b      	ldr	r3, [r3, #0]
 8014a68:	337d      	adds	r3, #125	@ 0x7d
 8014a6a:	9303      	str	r3, [sp, #12]
 8014a6c:	4b75      	ldr	r3, [pc, #468]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014a6e:	9304      	str	r3, [sp, #16]
 8014a70:	4b75      	ldr	r3, [pc, #468]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014a72:	9305      	str	r3, [sp, #20]
 8014a74:	4b75      	ldr	r3, [pc, #468]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014a76:	9307      	str	r3, [sp, #28]
 8014a78:	f002 bc93 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a7c:	4b6a      	ldr	r3, [pc, #424]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014a7e:	681b      	ldr	r3, [r3, #0]
 8014a80:	68db      	ldr	r3, [r3, #12]
 8014a82:	9303      	str	r3, [sp, #12]
 8014a84:	4b6f      	ldr	r3, [pc, #444]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014a86:	9304      	str	r3, [sp, #16]
 8014a88:	4b6f      	ldr	r3, [pc, #444]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014a8a:	9305      	str	r3, [sp, #20]
 8014a8c:	4b6f      	ldr	r3, [pc, #444]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014a8e:	9307      	str	r3, [sp, #28]
 8014a90:	f002 bc87 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014a94:	4b64      	ldr	r3, [pc, #400]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014a96:	681b      	ldr	r3, [r3, #0]
 8014a98:	68db      	ldr	r3, [r3, #12]
 8014a9a:	3301      	adds	r3, #1
 8014a9c:	9303      	str	r3, [sp, #12]
 8014a9e:	4b69      	ldr	r3, [pc, #420]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014aa0:	9304      	str	r3, [sp, #16]
 8014aa2:	4b69      	ldr	r3, [pc, #420]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014aa4:	9305      	str	r3, [sp, #20]
 8014aa6:	4b69      	ldr	r3, [pc, #420]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014aa8:	9307      	str	r3, [sp, #28]
 8014aaa:	f002 bc7a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014aae:	4b5e      	ldr	r3, [pc, #376]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014ab0:	681b      	ldr	r3, [r3, #0]
 8014ab2:	68db      	ldr	r3, [r3, #12]
 8014ab4:	3302      	adds	r3, #2
 8014ab6:	9303      	str	r3, [sp, #12]
 8014ab8:	4b62      	ldr	r3, [pc, #392]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014aba:	9304      	str	r3, [sp, #16]
 8014abc:	4b62      	ldr	r3, [pc, #392]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014abe:	9305      	str	r3, [sp, #20]
 8014ac0:	4b62      	ldr	r3, [pc, #392]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014ac2:	9307      	str	r3, [sp, #28]
 8014ac4:	f002 bc6d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ac8:	4b57      	ldr	r3, [pc, #348]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014aca:	681b      	ldr	r3, [r3, #0]
 8014acc:	68db      	ldr	r3, [r3, #12]
 8014ace:	3303      	adds	r3, #3
 8014ad0:	9303      	str	r3, [sp, #12]
 8014ad2:	4b5c      	ldr	r3, [pc, #368]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014ad4:	9304      	str	r3, [sp, #16]
 8014ad6:	4b5c      	ldr	r3, [pc, #368]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014ad8:	9305      	str	r3, [sp, #20]
 8014ada:	4b5c      	ldr	r3, [pc, #368]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014adc:	9307      	str	r3, [sp, #28]
 8014ade:	f002 bc60 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ae2:	4b51      	ldr	r3, [pc, #324]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014ae4:	681b      	ldr	r3, [r3, #0]
 8014ae6:	68db      	ldr	r3, [r3, #12]
 8014ae8:	3304      	adds	r3, #4
 8014aea:	9303      	str	r3, [sp, #12]
 8014aec:	4b55      	ldr	r3, [pc, #340]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014aee:	9304      	str	r3, [sp, #16]
 8014af0:	4b55      	ldr	r3, [pc, #340]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014af2:	9305      	str	r3, [sp, #20]
 8014af4:	4b55      	ldr	r3, [pc, #340]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014af6:	9307      	str	r3, [sp, #28]
 8014af8:	f002 bc53 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014afc:	4b4a      	ldr	r3, [pc, #296]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014afe:	681b      	ldr	r3, [r3, #0]
 8014b00:	68db      	ldr	r3, [r3, #12]
 8014b02:	3305      	adds	r3, #5
 8014b04:	9303      	str	r3, [sp, #12]
 8014b06:	4b4f      	ldr	r3, [pc, #316]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014b08:	9304      	str	r3, [sp, #16]
 8014b0a:	4b4f      	ldr	r3, [pc, #316]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014b0c:	9305      	str	r3, [sp, #20]
 8014b0e:	4b4f      	ldr	r3, [pc, #316]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014b10:	9307      	str	r3, [sp, #28]
 8014b12:	f002 bc46 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b16:	4b44      	ldr	r3, [pc, #272]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b18:	681b      	ldr	r3, [r3, #0]
 8014b1a:	68db      	ldr	r3, [r3, #12]
 8014b1c:	3306      	adds	r3, #6
 8014b1e:	9303      	str	r3, [sp, #12]
 8014b20:	4b48      	ldr	r3, [pc, #288]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014b22:	9304      	str	r3, [sp, #16]
 8014b24:	4b48      	ldr	r3, [pc, #288]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014b26:	9305      	str	r3, [sp, #20]
 8014b28:	4b48      	ldr	r3, [pc, #288]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014b2a:	9307      	str	r3, [sp, #28]
 8014b2c:	f002 bc39 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b30:	4b3d      	ldr	r3, [pc, #244]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b32:	681b      	ldr	r3, [r3, #0]
 8014b34:	68db      	ldr	r3, [r3, #12]
 8014b36:	3307      	adds	r3, #7
 8014b38:	9303      	str	r3, [sp, #12]
 8014b3a:	4b42      	ldr	r3, [pc, #264]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014b3c:	9304      	str	r3, [sp, #16]
 8014b3e:	4b42      	ldr	r3, [pc, #264]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014b40:	9305      	str	r3, [sp, #20]
 8014b42:	4b42      	ldr	r3, [pc, #264]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014b44:	9307      	str	r3, [sp, #28]
 8014b46:	f002 bc2c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b4a:	4b37      	ldr	r3, [pc, #220]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b4c:	681b      	ldr	r3, [r3, #0]
 8014b4e:	68db      	ldr	r3, [r3, #12]
 8014b50:	3308      	adds	r3, #8
 8014b52:	9303      	str	r3, [sp, #12]
 8014b54:	4b2a      	ldr	r3, [pc, #168]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014b56:	9304      	str	r3, [sp, #16]
 8014b58:	4b2a      	ldr	r3, [pc, #168]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014b5a:	9305      	str	r3, [sp, #20]
 8014b5c:	4b2a      	ldr	r3, [pc, #168]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014b5e:	9307      	str	r3, [sp, #28]
 8014b60:	f002 bc1f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b64:	4b30      	ldr	r3, [pc, #192]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b66:	681b      	ldr	r3, [r3, #0]
 8014b68:	68db      	ldr	r3, [r3, #12]
 8014b6a:	330c      	adds	r3, #12
 8014b6c:	9303      	str	r3, [sp, #12]
 8014b6e:	4b24      	ldr	r3, [pc, #144]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014b70:	9304      	str	r3, [sp, #16]
 8014b72:	4b24      	ldr	r3, [pc, #144]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014b74:	9305      	str	r3, [sp, #20]
 8014b76:	4b24      	ldr	r3, [pc, #144]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014b78:	9307      	str	r3, [sp, #28]
 8014b7a:	f002 bc12 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b7e:	4b2a      	ldr	r3, [pc, #168]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b80:	681b      	ldr	r3, [r3, #0]
 8014b82:	68db      	ldr	r3, [r3, #12]
 8014b84:	3310      	adds	r3, #16
 8014b86:	9303      	str	r3, [sp, #12]
 8014b88:	4b2e      	ldr	r3, [pc, #184]	@ (8014c44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c0>)
 8014b8a:	9304      	str	r3, [sp, #16]
 8014b8c:	4b2e      	ldr	r3, [pc, #184]	@ (8014c48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c4>)
 8014b8e:	9305      	str	r3, [sp, #20]
 8014b90:	4b2e      	ldr	r3, [pc, #184]	@ (8014c4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9c8>)
 8014b92:	9307      	str	r3, [sp, #28]
 8014b94:	f002 bc05 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014b98:	4b23      	ldr	r3, [pc, #140]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014b9a:	681b      	ldr	r3, [r3, #0]
 8014b9c:	68db      	ldr	r3, [r3, #12]
 8014b9e:	9303      	str	r3, [sp, #12]
 8014ba0:	4b2b      	ldr	r3, [pc, #172]	@ (8014c50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9cc>)
 8014ba2:	9304      	str	r3, [sp, #16]
 8014ba4:	4b2b      	ldr	r3, [pc, #172]	@ (8014c54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9d0>)
 8014ba6:	9305      	str	r3, [sp, #20]
 8014ba8:	4b2b      	ldr	r3, [pc, #172]	@ (8014c58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9d4>)
 8014baa:	9307      	str	r3, [sp, #28]
 8014bac:	f002 bbf9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014bb0:	4b1d      	ldr	r3, [pc, #116]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014bb2:	681b      	ldr	r3, [r3, #0]
 8014bb4:	68db      	ldr	r3, [r3, #12]
 8014bb6:	9303      	str	r3, [sp, #12]
 8014bb8:	4b28      	ldr	r3, [pc, #160]	@ (8014c5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9d8>)
 8014bba:	9304      	str	r3, [sp, #16]
 8014bbc:	4b28      	ldr	r3, [pc, #160]	@ (8014c60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9dc>)
 8014bbe:	9305      	str	r3, [sp, #20]
 8014bc0:	4b25      	ldr	r3, [pc, #148]	@ (8014c58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9d4>)
 8014bc2:	9307      	str	r3, [sp, #28]
 8014bc4:	f002 bbed 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014bc8:	4b17      	ldr	r3, [pc, #92]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014bca:	681b      	ldr	r3, [r3, #0]
 8014bcc:	68db      	ldr	r3, [r3, #12]
 8014bce:	3318      	adds	r3, #24
 8014bd0:	9303      	str	r3, [sp, #12]
 8014bd2:	4b0b      	ldr	r3, [pc, #44]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014bd4:	9304      	str	r3, [sp, #16]
 8014bd6:	4b0b      	ldr	r3, [pc, #44]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014bd8:	9305      	str	r3, [sp, #20]
 8014bda:	4b0b      	ldr	r3, [pc, #44]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014bdc:	9307      	str	r3, [sp, #28]
 8014bde:	f002 bbe0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014be2:	4b11      	ldr	r3, [pc, #68]	@ (8014c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x9a4>)
 8014be4:	681b      	ldr	r3, [r3, #0]
 8014be6:	68db      	ldr	r3, [r3, #12]
 8014be8:	331c      	adds	r3, #28
 8014bea:	9303      	str	r3, [sp, #12]
 8014bec:	4b04      	ldr	r3, [pc, #16]	@ (8014c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x97c>)
 8014bee:	9304      	str	r3, [sp, #16]
 8014bf0:	4b04      	ldr	r3, [pc, #16]	@ (8014c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x980>)
 8014bf2:	9305      	str	r3, [sp, #20]
 8014bf4:	4b04      	ldr	r3, [pc, #16]	@ (8014c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x984>)
 8014bf6:	9307      	str	r3, [sp, #28]
 8014bf8:	f002 bbd3 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014bfc:	20001978 	.word	0x20001978
 8014c00:	0801283d 	.word	0x0801283d
 8014c04:	08012845 	.word	0x08012845
 8014c08:	20008e3c 	.word	0x20008e3c
 8014c0c:	2000197c 	.word	0x2000197c
 8014c10:	20001980 	.word	0x20001980
 8014c14:	08012871 	.word	0x08012871
 8014c18:	08012879 	.word	0x08012879
 8014c1c:	20008e00 	.word	0x20008e00
 8014c20:	20001984 	.word	0x20001984
 8014c24:	20001988 	.word	0x20001988
 8014c28:	200019cc 	.word	0x200019cc
 8014c2c:	08012881 	.word	0x08012881
 8014c30:	08012885 	.word	0x08012885
 8014c34:	20008dec 	.word	0x20008dec
 8014c38:	0801288d 	.word	0x0801288d
 8014c3c:	08012891 	.word	0x08012891
 8014c40:	20008dd8 	.word	0x20008dd8
 8014c44:	0801285d 	.word	0x0801285d
 8014c48:	08012861 	.word	0x08012861
 8014c4c:	20008e28 	.word	0x20008e28
 8014c50:	080130a9 	.word	0x080130a9
 8014c54:	0801e135 	.word	0x0801e135
 8014c58:	20008dc4 	.word	0x20008dc4
 8014c5c:	080130a1 	.word	0x080130a1
 8014c60:	0801e14d 	.word	0x0801e14d
 8014c64:	4b8e      	ldr	r3, [pc, #568]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014c66:	681b      	ldr	r3, [r3, #0]
 8014c68:	68db      	ldr	r3, [r3, #12]
 8014c6a:	3320      	adds	r3, #32
 8014c6c:	9303      	str	r3, [sp, #12]
 8014c6e:	4b8d      	ldr	r3, [pc, #564]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014c70:	9304      	str	r3, [sp, #16]
 8014c72:	4b8d      	ldr	r3, [pc, #564]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014c74:	9305      	str	r3, [sp, #20]
 8014c76:	4b8d      	ldr	r3, [pc, #564]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014c78:	9307      	str	r3, [sp, #28]
 8014c7a:	f002 bb92 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014c7e:	4b88      	ldr	r3, [pc, #544]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014c80:	681b      	ldr	r3, [r3, #0]
 8014c82:	68db      	ldr	r3, [r3, #12]
 8014c84:	3324      	adds	r3, #36	@ 0x24
 8014c86:	9303      	str	r3, [sp, #12]
 8014c88:	4b86      	ldr	r3, [pc, #536]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014c8a:	9304      	str	r3, [sp, #16]
 8014c8c:	4b86      	ldr	r3, [pc, #536]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014c8e:	9305      	str	r3, [sp, #20]
 8014c90:	4b86      	ldr	r3, [pc, #536]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014c92:	9307      	str	r3, [sp, #28]
 8014c94:	f002 bb85 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014c98:	4b81      	ldr	r3, [pc, #516]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014c9a:	681b      	ldr	r3, [r3, #0]
 8014c9c:	68db      	ldr	r3, [r3, #12]
 8014c9e:	3328      	adds	r3, #40	@ 0x28
 8014ca0:	9303      	str	r3, [sp, #12]
 8014ca2:	4b80      	ldr	r3, [pc, #512]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014ca4:	9304      	str	r3, [sp, #16]
 8014ca6:	4b80      	ldr	r3, [pc, #512]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014ca8:	9305      	str	r3, [sp, #20]
 8014caa:	4b80      	ldr	r3, [pc, #512]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014cac:	9307      	str	r3, [sp, #28]
 8014cae:	f002 bb78 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014cb2:	4b7b      	ldr	r3, [pc, #492]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014cb4:	681b      	ldr	r3, [r3, #0]
 8014cb6:	68db      	ldr	r3, [r3, #12]
 8014cb8:	3334      	adds	r3, #52	@ 0x34
 8014cba:	9303      	str	r3, [sp, #12]
 8014cbc:	4b79      	ldr	r3, [pc, #484]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014cbe:	9304      	str	r3, [sp, #16]
 8014cc0:	4b79      	ldr	r3, [pc, #484]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014cc2:	9305      	str	r3, [sp, #20]
 8014cc4:	4b79      	ldr	r3, [pc, #484]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014cc6:	9307      	str	r3, [sp, #28]
 8014cc8:	f002 bb6b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ccc:	4b74      	ldr	r3, [pc, #464]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014cce:	681b      	ldr	r3, [r3, #0]
 8014cd0:	68db      	ldr	r3, [r3, #12]
 8014cd2:	3338      	adds	r3, #56	@ 0x38
 8014cd4:	9303      	str	r3, [sp, #12]
 8014cd6:	4b73      	ldr	r3, [pc, #460]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014cd8:	9304      	str	r3, [sp, #16]
 8014cda:	4b73      	ldr	r3, [pc, #460]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014cdc:	9305      	str	r3, [sp, #20]
 8014cde:	4b73      	ldr	r3, [pc, #460]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014ce0:	9307      	str	r3, [sp, #28]
 8014ce2:	f002 bb5e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ce6:	4b6e      	ldr	r3, [pc, #440]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014ce8:	681b      	ldr	r3, [r3, #0]
 8014cea:	68db      	ldr	r3, [r3, #12]
 8014cec:	333c      	adds	r3, #60	@ 0x3c
 8014cee:	9303      	str	r3, [sp, #12]
 8014cf0:	4b6c      	ldr	r3, [pc, #432]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014cf2:	9304      	str	r3, [sp, #16]
 8014cf4:	4b6c      	ldr	r3, [pc, #432]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014cf6:	9305      	str	r3, [sp, #20]
 8014cf8:	4b6c      	ldr	r3, [pc, #432]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014cfa:	9307      	str	r3, [sp, #28]
 8014cfc:	f002 bb51 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d00:	4b67      	ldr	r3, [pc, #412]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d02:	681b      	ldr	r3, [r3, #0]
 8014d04:	68db      	ldr	r3, [r3, #12]
 8014d06:	3340      	adds	r3, #64	@ 0x40
 8014d08:	9303      	str	r3, [sp, #12]
 8014d0a:	4b66      	ldr	r3, [pc, #408]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014d0c:	9304      	str	r3, [sp, #16]
 8014d0e:	4b66      	ldr	r3, [pc, #408]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014d10:	9305      	str	r3, [sp, #20]
 8014d12:	4b66      	ldr	r3, [pc, #408]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014d14:	9307      	str	r3, [sp, #28]
 8014d16:	f002 bb44 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d1a:	4b61      	ldr	r3, [pc, #388]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d1c:	681b      	ldr	r3, [r3, #0]
 8014d1e:	68db      	ldr	r3, [r3, #12]
 8014d20:	3344      	adds	r3, #68	@ 0x44
 8014d22:	9303      	str	r3, [sp, #12]
 8014d24:	4b5f      	ldr	r3, [pc, #380]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014d26:	9304      	str	r3, [sp, #16]
 8014d28:	4b5f      	ldr	r3, [pc, #380]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014d2a:	9305      	str	r3, [sp, #20]
 8014d2c:	4b5f      	ldr	r3, [pc, #380]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014d2e:	9307      	str	r3, [sp, #28]
 8014d30:	f002 bb37 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d34:	4b5a      	ldr	r3, [pc, #360]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d36:	681b      	ldr	r3, [r3, #0]
 8014d38:	68db      	ldr	r3, [r3, #12]
 8014d3a:	3348      	adds	r3, #72	@ 0x48
 8014d3c:	9303      	str	r3, [sp, #12]
 8014d3e:	4b59      	ldr	r3, [pc, #356]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014d40:	9304      	str	r3, [sp, #16]
 8014d42:	4b59      	ldr	r3, [pc, #356]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014d44:	9305      	str	r3, [sp, #20]
 8014d46:	4b59      	ldr	r3, [pc, #356]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014d48:	9307      	str	r3, [sp, #28]
 8014d4a:	f002 bb2a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d4e:	4b54      	ldr	r3, [pc, #336]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d50:	681b      	ldr	r3, [r3, #0]
 8014d52:	68db      	ldr	r3, [r3, #12]
 8014d54:	334c      	adds	r3, #76	@ 0x4c
 8014d56:	9303      	str	r3, [sp, #12]
 8014d58:	4b55      	ldr	r3, [pc, #340]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014d5a:	9304      	str	r3, [sp, #16]
 8014d5c:	4b55      	ldr	r3, [pc, #340]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014d5e:	9305      	str	r3, [sp, #20]
 8014d60:	4b55      	ldr	r3, [pc, #340]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014d62:	9307      	str	r3, [sp, #28]
 8014d64:	f002 bb1d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d68:	4b4d      	ldr	r3, [pc, #308]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d6a:	681b      	ldr	r3, [r3, #0]
 8014d6c:	68db      	ldr	r3, [r3, #12]
 8014d6e:	334d      	adds	r3, #77	@ 0x4d
 8014d70:	9303      	str	r3, [sp, #12]
 8014d72:	4b4f      	ldr	r3, [pc, #316]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014d74:	9304      	str	r3, [sp, #16]
 8014d76:	4b4f      	ldr	r3, [pc, #316]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014d78:	9305      	str	r3, [sp, #20]
 8014d7a:	4b4f      	ldr	r3, [pc, #316]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014d7c:	9307      	str	r3, [sp, #28]
 8014d7e:	f002 bb10 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d82:	4b47      	ldr	r3, [pc, #284]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d84:	681b      	ldr	r3, [r3, #0]
 8014d86:	68db      	ldr	r3, [r3, #12]
 8014d88:	334e      	adds	r3, #78	@ 0x4e
 8014d8a:	9303      	str	r3, [sp, #12]
 8014d8c:	4b48      	ldr	r3, [pc, #288]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014d8e:	9304      	str	r3, [sp, #16]
 8014d90:	4b48      	ldr	r3, [pc, #288]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014d92:	9305      	str	r3, [sp, #20]
 8014d94:	4b48      	ldr	r3, [pc, #288]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014d96:	9307      	str	r3, [sp, #28]
 8014d98:	f002 bb03 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014d9c:	4b40      	ldr	r3, [pc, #256]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014d9e:	681b      	ldr	r3, [r3, #0]
 8014da0:	68db      	ldr	r3, [r3, #12]
 8014da2:	3350      	adds	r3, #80	@ 0x50
 8014da4:	9303      	str	r3, [sp, #12]
 8014da6:	4b3f      	ldr	r3, [pc, #252]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014da8:	9304      	str	r3, [sp, #16]
 8014daa:	4b3f      	ldr	r3, [pc, #252]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014dac:	9305      	str	r3, [sp, #20]
 8014dae:	4b3f      	ldr	r3, [pc, #252]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014db0:	9307      	str	r3, [sp, #28]
 8014db2:	f002 baf6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014db6:	4b3a      	ldr	r3, [pc, #232]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014db8:	681b      	ldr	r3, [r3, #0]
 8014dba:	68db      	ldr	r3, [r3, #12]
 8014dbc:	3354      	adds	r3, #84	@ 0x54
 8014dbe:	9303      	str	r3, [sp, #12]
 8014dc0:	4b38      	ldr	r3, [pc, #224]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014dc2:	9304      	str	r3, [sp, #16]
 8014dc4:	4b38      	ldr	r3, [pc, #224]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014dc6:	9305      	str	r3, [sp, #20]
 8014dc8:	4b38      	ldr	r3, [pc, #224]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014dca:	9307      	str	r3, [sp, #28]
 8014dcc:	f002 bae9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014dd0:	4b33      	ldr	r3, [pc, #204]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014dd2:	681b      	ldr	r3, [r3, #0]
 8014dd4:	68db      	ldr	r3, [r3, #12]
 8014dd6:	3358      	adds	r3, #88	@ 0x58
 8014dd8:	9303      	str	r3, [sp, #12]
 8014dda:	4b32      	ldr	r3, [pc, #200]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014ddc:	9304      	str	r3, [sp, #16]
 8014dde:	4b32      	ldr	r3, [pc, #200]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014de0:	9305      	str	r3, [sp, #20]
 8014de2:	4b32      	ldr	r3, [pc, #200]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014de4:	9307      	str	r3, [sp, #28]
 8014de6:	f002 badc 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014dea:	4b2d      	ldr	r3, [pc, #180]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014dec:	681b      	ldr	r3, [r3, #0]
 8014dee:	68db      	ldr	r3, [r3, #12]
 8014df0:	335c      	adds	r3, #92	@ 0x5c
 8014df2:	9303      	str	r3, [sp, #12]
 8014df4:	4b2b      	ldr	r3, [pc, #172]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014df6:	9304      	str	r3, [sp, #16]
 8014df8:	4b2b      	ldr	r3, [pc, #172]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014dfa:	9305      	str	r3, [sp, #20]
 8014dfc:	4b2b      	ldr	r3, [pc, #172]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014dfe:	9307      	str	r3, [sp, #28]
 8014e00:	f002 bacf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e04:	4b26      	ldr	r3, [pc, #152]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e06:	681b      	ldr	r3, [r3, #0]
 8014e08:	68db      	ldr	r3, [r3, #12]
 8014e0a:	3360      	adds	r3, #96	@ 0x60
 8014e0c:	9303      	str	r3, [sp, #12]
 8014e0e:	4b25      	ldr	r3, [pc, #148]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014e10:	9304      	str	r3, [sp, #16]
 8014e12:	4b25      	ldr	r3, [pc, #148]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014e14:	9305      	str	r3, [sp, #20]
 8014e16:	4b25      	ldr	r3, [pc, #148]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014e18:	9307      	str	r3, [sp, #28]
 8014e1a:	f002 bac2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e1e:	4b20      	ldr	r3, [pc, #128]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e20:	681b      	ldr	r3, [r3, #0]
 8014e22:	68db      	ldr	r3, [r3, #12]
 8014e24:	3364      	adds	r3, #100	@ 0x64
 8014e26:	9303      	str	r3, [sp, #12]
 8014e28:	4b1e      	ldr	r3, [pc, #120]	@ (8014ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc20>)
 8014e2a:	9304      	str	r3, [sp, #16]
 8014e2c:	4b1e      	ldr	r3, [pc, #120]	@ (8014ea8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc24>)
 8014e2e:	9305      	str	r3, [sp, #20]
 8014e30:	4b1e      	ldr	r3, [pc, #120]	@ (8014eac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc28>)
 8014e32:	9307      	str	r3, [sp, #28]
 8014e34:	f002 bab5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e38:	4b19      	ldr	r3, [pc, #100]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e3a:	681b      	ldr	r3, [r3, #0]
 8014e3c:	68db      	ldr	r3, [r3, #12]
 8014e3e:	3368      	adds	r3, #104	@ 0x68
 8014e40:	9303      	str	r3, [sp, #12]
 8014e42:	4b1b      	ldr	r3, [pc, #108]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014e44:	9304      	str	r3, [sp, #16]
 8014e46:	4b1b      	ldr	r3, [pc, #108]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014e48:	9305      	str	r3, [sp, #20]
 8014e4a:	4b1b      	ldr	r3, [pc, #108]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014e4c:	9307      	str	r3, [sp, #28]
 8014e4e:	f002 baa8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e52:	4b13      	ldr	r3, [pc, #76]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e54:	681b      	ldr	r3, [r3, #0]
 8014e56:	68db      	ldr	r3, [r3, #12]
 8014e58:	3369      	adds	r3, #105	@ 0x69
 8014e5a:	9303      	str	r3, [sp, #12]
 8014e5c:	4b14      	ldr	r3, [pc, #80]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014e5e:	9304      	str	r3, [sp, #16]
 8014e60:	4b14      	ldr	r3, [pc, #80]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014e62:	9305      	str	r3, [sp, #20]
 8014e64:	4b14      	ldr	r3, [pc, #80]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014e66:	9307      	str	r3, [sp, #28]
 8014e68:	f002 ba9b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e6c:	4b0c      	ldr	r3, [pc, #48]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e6e:	681b      	ldr	r3, [r3, #0]
 8014e70:	68db      	ldr	r3, [r3, #12]
 8014e72:	336a      	adds	r3, #106	@ 0x6a
 8014e74:	9303      	str	r3, [sp, #12]
 8014e76:	4b0e      	ldr	r3, [pc, #56]	@ (8014eb0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc2c>)
 8014e78:	9304      	str	r3, [sp, #16]
 8014e7a:	4b0e      	ldr	r3, [pc, #56]	@ (8014eb4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc30>)
 8014e7c:	9305      	str	r3, [sp, #20]
 8014e7e:	4b0e      	ldr	r3, [pc, #56]	@ (8014eb8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc34>)
 8014e80:	9307      	str	r3, [sp, #28]
 8014e82:	f002 ba8e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014e86:	4b06      	ldr	r3, [pc, #24]	@ (8014ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc1c>)
 8014e88:	681b      	ldr	r3, [r3, #0]
 8014e8a:	68db      	ldr	r3, [r3, #12]
 8014e8c:	336c      	adds	r3, #108	@ 0x6c
 8014e8e:	9303      	str	r3, [sp, #12]
 8014e90:	4b0a      	ldr	r3, [pc, #40]	@ (8014ebc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc38>)
 8014e92:	9304      	str	r3, [sp, #16]
 8014e94:	4b0a      	ldr	r3, [pc, #40]	@ (8014ec0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc3c>)
 8014e96:	9305      	str	r3, [sp, #20]
 8014e98:	4b0a      	ldr	r3, [pc, #40]	@ (8014ec4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xc40>)
 8014e9a:	9307      	str	r3, [sp, #28]
 8014e9c:	f002 ba81 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ea0:	200019cc 	.word	0x200019cc
 8014ea4:	0801283d 	.word	0x0801283d
 8014ea8:	08012845 	.word	0x08012845
 8014eac:	20008e3c 	.word	0x20008e3c
 8014eb0:	0801285d 	.word	0x0801285d
 8014eb4:	08012861 	.word	0x08012861
 8014eb8:	20008e28 	.word	0x20008e28
 8014ebc:	08012869 	.word	0x08012869
 8014ec0:	0801286d 	.word	0x0801286d
 8014ec4:	20008e14 	.word	0x20008e14
 8014ec8:	4b8c      	ldr	r3, [pc, #560]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014eca:	681b      	ldr	r3, [r3, #0]
 8014ecc:	68db      	ldr	r3, [r3, #12]
 8014ece:	3370      	adds	r3, #112	@ 0x70
 8014ed0:	9303      	str	r3, [sp, #12]
 8014ed2:	4b8b      	ldr	r3, [pc, #556]	@ (8015100 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe7c>)
 8014ed4:	9304      	str	r3, [sp, #16]
 8014ed6:	4b8b      	ldr	r3, [pc, #556]	@ (8015104 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe80>)
 8014ed8:	9305      	str	r3, [sp, #20]
 8014eda:	4b8b      	ldr	r3, [pc, #556]	@ (8015108 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe84>)
 8014edc:	9307      	str	r3, [sp, #28]
 8014ede:	f002 ba60 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014ee2:	4b86      	ldr	r3, [pc, #536]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014ee4:	681b      	ldr	r3, [r3, #0]
 8014ee6:	68db      	ldr	r3, [r3, #12]
 8014ee8:	3374      	adds	r3, #116	@ 0x74
 8014eea:	9303      	str	r3, [sp, #12]
 8014eec:	4b87      	ldr	r3, [pc, #540]	@ (801510c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe88>)
 8014eee:	9304      	str	r3, [sp, #16]
 8014ef0:	4b87      	ldr	r3, [pc, #540]	@ (8015110 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe8c>)
 8014ef2:	9305      	str	r3, [sp, #20]
 8014ef4:	4b87      	ldr	r3, [pc, #540]	@ (8015114 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe90>)
 8014ef6:	9307      	str	r3, [sp, #28]
 8014ef8:	f002 ba53 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014efc:	4b7f      	ldr	r3, [pc, #508]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014efe:	681b      	ldr	r3, [r3, #0]
 8014f00:	68db      	ldr	r3, [r3, #12]
 8014f02:	3378      	adds	r3, #120	@ 0x78
 8014f04:	9303      	str	r3, [sp, #12]
 8014f06:	4b81      	ldr	r3, [pc, #516]	@ (801510c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe88>)
 8014f08:	9304      	str	r3, [sp, #16]
 8014f0a:	4b81      	ldr	r3, [pc, #516]	@ (8015110 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe8c>)
 8014f0c:	9305      	str	r3, [sp, #20]
 8014f0e:	4b81      	ldr	r3, [pc, #516]	@ (8015114 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe90>)
 8014f10:	9307      	str	r3, [sp, #28]
 8014f12:	f002 ba46 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f16:	4b79      	ldr	r3, [pc, #484]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f18:	681b      	ldr	r3, [r3, #0]
 8014f1a:	69db      	ldr	r3, [r3, #28]
 8014f1c:	3320      	adds	r3, #32
 8014f1e:	9303      	str	r3, [sp, #12]
 8014f20:	4b7d      	ldr	r3, [pc, #500]	@ (8015118 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe94>)
 8014f22:	9304      	str	r3, [sp, #16]
 8014f24:	4b7d      	ldr	r3, [pc, #500]	@ (801511c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe98>)
 8014f26:	9305      	str	r3, [sp, #20]
 8014f28:	4b7d      	ldr	r3, [pc, #500]	@ (8015120 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe9c>)
 8014f2a:	9307      	str	r3, [sp, #28]
 8014f2c:	f002 ba39 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f30:	4b72      	ldr	r3, [pc, #456]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f32:	681b      	ldr	r3, [r3, #0]
 8014f34:	69db      	ldr	r3, [r3, #28]
 8014f36:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014f38:	9303      	str	r3, [sp, #12]
 8014f3a:	4b7a      	ldr	r3, [pc, #488]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8014f3c:	9304      	str	r3, [sp, #16]
 8014f3e:	4b7a      	ldr	r3, [pc, #488]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8014f40:	9305      	str	r3, [sp, #20]
 8014f42:	4b7a      	ldr	r3, [pc, #488]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8014f44:	9307      	str	r3, [sp, #28]
 8014f46:	f002 ba2c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f4a:	4b6c      	ldr	r3, [pc, #432]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f4c:	681b      	ldr	r3, [r3, #0]
 8014f4e:	69db      	ldr	r3, [r3, #28]
 8014f50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014f52:	3304      	adds	r3, #4
 8014f54:	9303      	str	r3, [sp, #12]
 8014f56:	4b73      	ldr	r3, [pc, #460]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8014f58:	9304      	str	r3, [sp, #16]
 8014f5a:	4b73      	ldr	r3, [pc, #460]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8014f5c:	9305      	str	r3, [sp, #20]
 8014f5e:	4b73      	ldr	r3, [pc, #460]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8014f60:	9307      	str	r3, [sp, #28]
 8014f62:	f002 ba1e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f66:	4b65      	ldr	r3, [pc, #404]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f68:	681b      	ldr	r3, [r3, #0]
 8014f6a:	69db      	ldr	r3, [r3, #28]
 8014f6c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014f6e:	3308      	adds	r3, #8
 8014f70:	9303      	str	r3, [sp, #12]
 8014f72:	4b63      	ldr	r3, [pc, #396]	@ (8015100 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe7c>)
 8014f74:	9304      	str	r3, [sp, #16]
 8014f76:	4b63      	ldr	r3, [pc, #396]	@ (8015104 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe80>)
 8014f78:	9305      	str	r3, [sp, #20]
 8014f7a:	4b63      	ldr	r3, [pc, #396]	@ (8015108 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe84>)
 8014f7c:	9307      	str	r3, [sp, #28]
 8014f7e:	f002 ba10 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f82:	4b5e      	ldr	r3, [pc, #376]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f84:	681b      	ldr	r3, [r3, #0]
 8014f86:	6a1b      	ldr	r3, [r3, #32]
 8014f88:	3320      	adds	r3, #32
 8014f8a:	9303      	str	r3, [sp, #12]
 8014f8c:	4b62      	ldr	r3, [pc, #392]	@ (8015118 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe94>)
 8014f8e:	9304      	str	r3, [sp, #16]
 8014f90:	4b62      	ldr	r3, [pc, #392]	@ (801511c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe98>)
 8014f92:	9305      	str	r3, [sp, #20]
 8014f94:	4b62      	ldr	r3, [pc, #392]	@ (8015120 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe9c>)
 8014f96:	9307      	str	r3, [sp, #28]
 8014f98:	f002 ba03 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014f9c:	4b57      	ldr	r3, [pc, #348]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014f9e:	681b      	ldr	r3, [r3, #0]
 8014fa0:	6a1b      	ldr	r3, [r3, #32]
 8014fa2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014fa4:	9303      	str	r3, [sp, #12]
 8014fa6:	4b62      	ldr	r3, [pc, #392]	@ (8015130 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xeac>)
 8014fa8:	9304      	str	r3, [sp, #16]
 8014faa:	4b62      	ldr	r3, [pc, #392]	@ (8015134 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xeb0>)
 8014fac:	9305      	str	r3, [sp, #20]
 8014fae:	4b62      	ldr	r3, [pc, #392]	@ (8015138 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xeb4>)
 8014fb0:	9307      	str	r3, [sp, #28]
 8014fb2:	f002 b9f6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014fb6:	4b51      	ldr	r3, [pc, #324]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014fb8:	681b      	ldr	r3, [r3, #0]
 8014fba:	6a1b      	ldr	r3, [r3, #32]
 8014fbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014fbe:	9303      	str	r3, [sp, #12]
 8014fc0:	4b58      	ldr	r3, [pc, #352]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8014fc2:	9304      	str	r3, [sp, #16]
 8014fc4:	4b58      	ldr	r3, [pc, #352]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8014fc6:	9305      	str	r3, [sp, #20]
 8014fc8:	4b58      	ldr	r3, [pc, #352]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8014fca:	9307      	str	r3, [sp, #28]
 8014fcc:	f002 b9e9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014fd0:	4b4a      	ldr	r3, [pc, #296]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014fd2:	681b      	ldr	r3, [r3, #0]
 8014fd4:	6a1b      	ldr	r3, [r3, #32]
 8014fd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014fd8:	3304      	adds	r3, #4
 8014fda:	9303      	str	r3, [sp, #12]
 8014fdc:	4b51      	ldr	r3, [pc, #324]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8014fde:	9304      	str	r3, [sp, #16]
 8014fe0:	4b51      	ldr	r3, [pc, #324]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8014fe2:	9305      	str	r3, [sp, #20]
 8014fe4:	4b51      	ldr	r3, [pc, #324]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8014fe6:	9307      	str	r3, [sp, #28]
 8014fe8:	f002 b9db 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8014fec:	4b43      	ldr	r3, [pc, #268]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8014fee:	681b      	ldr	r3, [r3, #0]
 8014ff0:	6a1b      	ldr	r3, [r3, #32]
 8014ff2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8014ff4:	3308      	adds	r3, #8
 8014ff6:	9303      	str	r3, [sp, #12]
 8014ff8:	4b4a      	ldr	r3, [pc, #296]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8014ffa:	9304      	str	r3, [sp, #16]
 8014ffc:	4b4a      	ldr	r3, [pc, #296]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8014ffe:	9305      	str	r3, [sp, #20]
 8015000:	4b4a      	ldr	r3, [pc, #296]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8015002:	9307      	str	r3, [sp, #28]
 8015004:	f002 b9cd 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015008:	4b3c      	ldr	r3, [pc, #240]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 801500a:	681b      	ldr	r3, [r3, #0]
 801500c:	6a1b      	ldr	r3, [r3, #32]
 801500e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015010:	330c      	adds	r3, #12
 8015012:	9303      	str	r3, [sp, #12]
 8015014:	4b43      	ldr	r3, [pc, #268]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8015016:	9304      	str	r3, [sp, #16]
 8015018:	4b43      	ldr	r3, [pc, #268]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 801501a:	9305      	str	r3, [sp, #20]
 801501c:	4b43      	ldr	r3, [pc, #268]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 801501e:	9307      	str	r3, [sp, #28]
 8015020:	f002 b9bf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015024:	4b35      	ldr	r3, [pc, #212]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8015026:	681b      	ldr	r3, [r3, #0]
 8015028:	6a1b      	ldr	r3, [r3, #32]
 801502a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801502c:	3314      	adds	r3, #20
 801502e:	9303      	str	r3, [sp, #12]
 8015030:	4b3c      	ldr	r3, [pc, #240]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 8015032:	9304      	str	r3, [sp, #16]
 8015034:	4b3c      	ldr	r3, [pc, #240]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8015036:	9305      	str	r3, [sp, #20]
 8015038:	4b3c      	ldr	r3, [pc, #240]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 801503a:	9307      	str	r3, [sp, #28]
 801503c:	f002 b9b1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015040:	4b2e      	ldr	r3, [pc, #184]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8015042:	681b      	ldr	r3, [r3, #0]
 8015044:	6a1b      	ldr	r3, [r3, #32]
 8015046:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015048:	3318      	adds	r3, #24
 801504a:	9303      	str	r3, [sp, #12]
 801504c:	4b35      	ldr	r3, [pc, #212]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 801504e:	9304      	str	r3, [sp, #16]
 8015050:	4b35      	ldr	r3, [pc, #212]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 8015052:	9305      	str	r3, [sp, #20]
 8015054:	4b35      	ldr	r3, [pc, #212]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 8015056:	9307      	str	r3, [sp, #28]
 8015058:	f002 b9a3 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801505c:	4b27      	ldr	r3, [pc, #156]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 801505e:	681b      	ldr	r3, [r3, #0]
 8015060:	6a1b      	ldr	r3, [r3, #32]
 8015062:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015064:	331c      	adds	r3, #28
 8015066:	9303      	str	r3, [sp, #12]
 8015068:	4b25      	ldr	r3, [pc, #148]	@ (8015100 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe7c>)
 801506a:	9304      	str	r3, [sp, #16]
 801506c:	4b25      	ldr	r3, [pc, #148]	@ (8015104 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe80>)
 801506e:	9305      	str	r3, [sp, #20]
 8015070:	4b25      	ldr	r3, [pc, #148]	@ (8015108 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe84>)
 8015072:	9307      	str	r3, [sp, #28]
 8015074:	f002 b995 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015078:	4b20      	ldr	r3, [pc, #128]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 801507a:	681b      	ldr	r3, [r3, #0]
 801507c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801507e:	3364      	adds	r3, #100	@ 0x64
 8015080:	9303      	str	r3, [sp, #12]
 8015082:	4b2e      	ldr	r3, [pc, #184]	@ (801513c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xeb8>)
 8015084:	9304      	str	r3, [sp, #16]
 8015086:	4b2e      	ldr	r3, [pc, #184]	@ (8015140 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xebc>)
 8015088:	9305      	str	r3, [sp, #20]
 801508a:	4b2e      	ldr	r3, [pc, #184]	@ (8015144 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xec0>)
 801508c:	9307      	str	r3, [sp, #28]
 801508e:	f002 b988 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015092:	4b1a      	ldr	r3, [pc, #104]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 8015094:	681b      	ldr	r3, [r3, #0]
 8015096:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015098:	3370      	adds	r3, #112	@ 0x70
 801509a:	9303      	str	r3, [sp, #12]
 801509c:	4b21      	ldr	r3, [pc, #132]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 801509e:	9304      	str	r3, [sp, #16]
 80150a0:	4b21      	ldr	r3, [pc, #132]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 80150a2:	9305      	str	r3, [sp, #20]
 80150a4:	4b21      	ldr	r3, [pc, #132]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 80150a6:	9307      	str	r3, [sp, #28]
 80150a8:	f002 b97b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80150ac:	4b13      	ldr	r3, [pc, #76]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 80150ae:	681b      	ldr	r3, [r3, #0]
 80150b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80150b2:	3374      	adds	r3, #116	@ 0x74
 80150b4:	9303      	str	r3, [sp, #12]
 80150b6:	4b1b      	ldr	r3, [pc, #108]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 80150b8:	9304      	str	r3, [sp, #16]
 80150ba:	4b1b      	ldr	r3, [pc, #108]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 80150bc:	9305      	str	r3, [sp, #20]
 80150be:	4b1b      	ldr	r3, [pc, #108]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 80150c0:	9307      	str	r3, [sp, #28]
 80150c2:	f002 b96e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80150c6:	4b0d      	ldr	r3, [pc, #52]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 80150c8:	681b      	ldr	r3, [r3, #0]
 80150ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80150cc:	3378      	adds	r3, #120	@ 0x78
 80150ce:	9303      	str	r3, [sp, #12]
 80150d0:	4b14      	ldr	r3, [pc, #80]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 80150d2:	9304      	str	r3, [sp, #16]
 80150d4:	4b14      	ldr	r3, [pc, #80]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 80150d6:	9305      	str	r3, [sp, #20]
 80150d8:	4b14      	ldr	r3, [pc, #80]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 80150da:	9307      	str	r3, [sp, #28]
 80150dc:	f002 b961 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80150e0:	4b06      	ldr	r3, [pc, #24]	@ (80150fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xe78>)
 80150e2:	681b      	ldr	r3, [r3, #0]
 80150e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80150e6:	337c      	adds	r3, #124	@ 0x7c
 80150e8:	9303      	str	r3, [sp, #12]
 80150ea:	4b0e      	ldr	r3, [pc, #56]	@ (8015124 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea0>)
 80150ec:	9304      	str	r3, [sp, #16]
 80150ee:	4b0e      	ldr	r3, [pc, #56]	@ (8015128 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea4>)
 80150f0:	9305      	str	r3, [sp, #20]
 80150f2:	4b0e      	ldr	r3, [pc, #56]	@ (801512c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0xea8>)
 80150f4:	9307      	str	r3, [sp, #28]
 80150f6:	f002 b954 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80150fa:	bf00      	nop
 80150fc:	200019cc 	.word	0x200019cc
 8015100:	0801285d 	.word	0x0801285d
 8015104:	08012861 	.word	0x08012861
 8015108:	20008e28 	.word	0x20008e28
 801510c:	08012869 	.word	0x08012869
 8015110:	0801286d 	.word	0x0801286d
 8015114:	20008e14 	.word	0x20008e14
 8015118:	08012899 	.word	0x08012899
 801511c:	0801289d 	.word	0x0801289d
 8015120:	20008db0 	.word	0x20008db0
 8015124:	0801283d 	.word	0x0801283d
 8015128:	08012845 	.word	0x08012845
 801512c:	20008e3c 	.word	0x20008e3c
 8015130:	08013099 	.word	0x08013099
 8015134:	0801e165 	.word	0x0801e165
 8015138:	20008dc4 	.word	0x20008dc4
 801513c:	080128a1 	.word	0x080128a1
 8015140:	080128a5 	.word	0x080128a5
 8015144:	20008d9c 	.word	0x20008d9c
 8015148:	4b8b      	ldr	r3, [pc, #556]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801514a:	681b      	ldr	r3, [r3, #0]
 801514c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801514e:	3380      	adds	r3, #128	@ 0x80
 8015150:	9303      	str	r3, [sp, #12]
 8015152:	4b8a      	ldr	r3, [pc, #552]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015154:	9304      	str	r3, [sp, #16]
 8015156:	4b8a      	ldr	r3, [pc, #552]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015158:	9305      	str	r3, [sp, #20]
 801515a:	4b8a      	ldr	r3, [pc, #552]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 801515c:	9307      	str	r3, [sp, #28]
 801515e:	f002 b920 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015162:	4b85      	ldr	r3, [pc, #532]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015164:	681b      	ldr	r3, [r3, #0]
 8015166:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015168:	3384      	adds	r3, #132	@ 0x84
 801516a:	9303      	str	r3, [sp, #12]
 801516c:	4b83      	ldr	r3, [pc, #524]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 801516e:	9304      	str	r3, [sp, #16]
 8015170:	4b83      	ldr	r3, [pc, #524]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015172:	9305      	str	r3, [sp, #20]
 8015174:	4b83      	ldr	r3, [pc, #524]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015176:	9307      	str	r3, [sp, #28]
 8015178:	f002 b913 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801517c:	4b7e      	ldr	r3, [pc, #504]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801517e:	681b      	ldr	r3, [r3, #0]
 8015180:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015182:	3388      	adds	r3, #136	@ 0x88
 8015184:	9303      	str	r3, [sp, #12]
 8015186:	4b7d      	ldr	r3, [pc, #500]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015188:	9304      	str	r3, [sp, #16]
 801518a:	4b7d      	ldr	r3, [pc, #500]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 801518c:	9305      	str	r3, [sp, #20]
 801518e:	4b7d      	ldr	r3, [pc, #500]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015190:	9307      	str	r3, [sp, #28]
 8015192:	f002 b906 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015196:	4b78      	ldr	r3, [pc, #480]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015198:	681b      	ldr	r3, [r3, #0]
 801519a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801519c:	338c      	adds	r3, #140	@ 0x8c
 801519e:	9303      	str	r3, [sp, #12]
 80151a0:	4b76      	ldr	r3, [pc, #472]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80151a2:	9304      	str	r3, [sp, #16]
 80151a4:	4b76      	ldr	r3, [pc, #472]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80151a6:	9305      	str	r3, [sp, #20]
 80151a8:	4b76      	ldr	r3, [pc, #472]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80151aa:	9307      	str	r3, [sp, #28]
 80151ac:	f002 b8f9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80151b0:	4b71      	ldr	r3, [pc, #452]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80151b2:	681b      	ldr	r3, [r3, #0]
 80151b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80151b6:	3390      	adds	r3, #144	@ 0x90
 80151b8:	9303      	str	r3, [sp, #12]
 80151ba:	4b70      	ldr	r3, [pc, #448]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80151bc:	9304      	str	r3, [sp, #16]
 80151be:	4b70      	ldr	r3, [pc, #448]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80151c0:	9305      	str	r3, [sp, #20]
 80151c2:	4b70      	ldr	r3, [pc, #448]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80151c4:	9307      	str	r3, [sp, #28]
 80151c6:	f002 b8ec 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80151ca:	4b6b      	ldr	r3, [pc, #428]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80151cc:	681b      	ldr	r3, [r3, #0]
 80151ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80151d0:	3394      	adds	r3, #148	@ 0x94
 80151d2:	9303      	str	r3, [sp, #12]
 80151d4:	4b69      	ldr	r3, [pc, #420]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80151d6:	9304      	str	r3, [sp, #16]
 80151d8:	4b69      	ldr	r3, [pc, #420]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80151da:	9305      	str	r3, [sp, #20]
 80151dc:	4b69      	ldr	r3, [pc, #420]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80151de:	9307      	str	r3, [sp, #28]
 80151e0:	f002 b8df 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80151e4:	4b64      	ldr	r3, [pc, #400]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80151e6:	681b      	ldr	r3, [r3, #0]
 80151e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80151ea:	3398      	adds	r3, #152	@ 0x98
 80151ec:	9303      	str	r3, [sp, #12]
 80151ee:	4b63      	ldr	r3, [pc, #396]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80151f0:	9304      	str	r3, [sp, #16]
 80151f2:	4b63      	ldr	r3, [pc, #396]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80151f4:	9305      	str	r3, [sp, #20]
 80151f6:	4b63      	ldr	r3, [pc, #396]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80151f8:	9307      	str	r3, [sp, #28]
 80151fa:	f002 b8d2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80151fe:	4b5e      	ldr	r3, [pc, #376]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015200:	681b      	ldr	r3, [r3, #0]
 8015202:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015204:	33a0      	adds	r3, #160	@ 0xa0
 8015206:	9303      	str	r3, [sp, #12]
 8015208:	4b5c      	ldr	r3, [pc, #368]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 801520a:	9304      	str	r3, [sp, #16]
 801520c:	4b5c      	ldr	r3, [pc, #368]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 801520e:	9305      	str	r3, [sp, #20]
 8015210:	4b5c      	ldr	r3, [pc, #368]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015212:	9307      	str	r3, [sp, #28]
 8015214:	f002 b8c5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015218:	4b57      	ldr	r3, [pc, #348]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801521a:	681b      	ldr	r3, [r3, #0]
 801521c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801521e:	33a4      	adds	r3, #164	@ 0xa4
 8015220:	9303      	str	r3, [sp, #12]
 8015222:	4b56      	ldr	r3, [pc, #344]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015224:	9304      	str	r3, [sp, #16]
 8015226:	4b56      	ldr	r3, [pc, #344]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015228:	9305      	str	r3, [sp, #20]
 801522a:	4b56      	ldr	r3, [pc, #344]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 801522c:	9307      	str	r3, [sp, #28]
 801522e:	f002 b8b8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015232:	4b51      	ldr	r3, [pc, #324]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015234:	681b      	ldr	r3, [r3, #0]
 8015236:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015238:	33a8      	adds	r3, #168	@ 0xa8
 801523a:	9303      	str	r3, [sp, #12]
 801523c:	4b4f      	ldr	r3, [pc, #316]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 801523e:	9304      	str	r3, [sp, #16]
 8015240:	4b4f      	ldr	r3, [pc, #316]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015242:	9305      	str	r3, [sp, #20]
 8015244:	4b4f      	ldr	r3, [pc, #316]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015246:	9307      	str	r3, [sp, #28]
 8015248:	f002 b8ab 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801524c:	4b4a      	ldr	r3, [pc, #296]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801524e:	681b      	ldr	r3, [r3, #0]
 8015250:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015252:	33b4      	adds	r3, #180	@ 0xb4
 8015254:	9303      	str	r3, [sp, #12]
 8015256:	4b49      	ldr	r3, [pc, #292]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015258:	9304      	str	r3, [sp, #16]
 801525a:	4b49      	ldr	r3, [pc, #292]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 801525c:	9305      	str	r3, [sp, #20]
 801525e:	4b49      	ldr	r3, [pc, #292]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015260:	9307      	str	r3, [sp, #28]
 8015262:	f002 b89e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015266:	4b44      	ldr	r3, [pc, #272]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015268:	681b      	ldr	r3, [r3, #0]
 801526a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801526c:	33bc      	adds	r3, #188	@ 0xbc
 801526e:	9303      	str	r3, [sp, #12]
 8015270:	4b42      	ldr	r3, [pc, #264]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015272:	9304      	str	r3, [sp, #16]
 8015274:	4b42      	ldr	r3, [pc, #264]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015276:	9305      	str	r3, [sp, #20]
 8015278:	4b42      	ldr	r3, [pc, #264]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 801527a:	9307      	str	r3, [sp, #28]
 801527c:	f002 b891 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015280:	4b3d      	ldr	r3, [pc, #244]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015282:	681b      	ldr	r3, [r3, #0]
 8015284:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015286:	6a1b      	ldr	r3, [r3, #32]
 8015288:	9303      	str	r3, [sp, #12]
 801528a:	4b3f      	ldr	r3, [pc, #252]	@ (8015388 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1104>)
 801528c:	9304      	str	r3, [sp, #16]
 801528e:	4b3f      	ldr	r3, [pc, #252]	@ (801538c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1108>)
 8015290:	9305      	str	r3, [sp, #20]
 8015292:	4b3f      	ldr	r3, [pc, #252]	@ (8015390 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x110c>)
 8015294:	9307      	str	r3, [sp, #28]
 8015296:	f002 b884 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801529a:	4b37      	ldr	r3, [pc, #220]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801529c:	681b      	ldr	r3, [r3, #0]
 801529e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80152a0:	6a1b      	ldr	r3, [r3, #32]
 80152a2:	3304      	adds	r3, #4
 80152a4:	9303      	str	r3, [sp, #12]
 80152a6:	4b3b      	ldr	r3, [pc, #236]	@ (8015394 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1110>)
 80152a8:	9304      	str	r3, [sp, #16]
 80152aa:	4b3b      	ldr	r3, [pc, #236]	@ (8015398 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1114>)
 80152ac:	9305      	str	r3, [sp, #20]
 80152ae:	4b3b      	ldr	r3, [pc, #236]	@ (801539c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1118>)
 80152b0:	9307      	str	r3, [sp, #28]
 80152b2:	f002 b876 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80152b6:	4b30      	ldr	r3, [pc, #192]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80152b8:	681b      	ldr	r3, [r3, #0]
 80152ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80152bc:	6a1b      	ldr	r3, [r3, #32]
 80152be:	3308      	adds	r3, #8
 80152c0:	9303      	str	r3, [sp, #12]
 80152c2:	4b2e      	ldr	r3, [pc, #184]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80152c4:	9304      	str	r3, [sp, #16]
 80152c6:	4b2e      	ldr	r3, [pc, #184]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80152c8:	9305      	str	r3, [sp, #20]
 80152ca:	4b2e      	ldr	r3, [pc, #184]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80152cc:	9307      	str	r3, [sp, #28]
 80152ce:	f002 b868 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80152d2:	4b29      	ldr	r3, [pc, #164]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80152d4:	681b      	ldr	r3, [r3, #0]
 80152d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80152d8:	6a1b      	ldr	r3, [r3, #32]
 80152da:	330c      	adds	r3, #12
 80152dc:	9303      	str	r3, [sp, #12]
 80152de:	4b27      	ldr	r3, [pc, #156]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 80152e0:	9304      	str	r3, [sp, #16]
 80152e2:	4b27      	ldr	r3, [pc, #156]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 80152e4:	9305      	str	r3, [sp, #20]
 80152e6:	4b27      	ldr	r3, [pc, #156]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 80152e8:	9307      	str	r3, [sp, #28]
 80152ea:	f002 b85a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80152ee:	4b22      	ldr	r3, [pc, #136]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 80152f0:	681b      	ldr	r3, [r3, #0]
 80152f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80152f4:	6a1b      	ldr	r3, [r3, #32]
 80152f6:	9303      	str	r3, [sp, #12]
 80152f8:	4b29      	ldr	r3, [pc, #164]	@ (80153a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x111c>)
 80152fa:	9304      	str	r3, [sp, #16]
 80152fc:	4b29      	ldr	r3, [pc, #164]	@ (80153a4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1120>)
 80152fe:	9305      	str	r3, [sp, #20]
 8015300:	4b20      	ldr	r3, [pc, #128]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015302:	9307      	str	r3, [sp, #28]
 8015304:	f002 b84d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015308:	4b1b      	ldr	r3, [pc, #108]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801530a:	681b      	ldr	r3, [r3, #0]
 801530c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801530e:	6a1b      	ldr	r3, [r3, #32]
 8015310:	9303      	str	r3, [sp, #12]
 8015312:	4b25      	ldr	r3, [pc, #148]	@ (80153a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1124>)
 8015314:	9304      	str	r3, [sp, #16]
 8015316:	4b25      	ldr	r3, [pc, #148]	@ (80153ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1128>)
 8015318:	9305      	str	r3, [sp, #20]
 801531a:	4b1a      	ldr	r3, [pc, #104]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 801531c:	9307      	str	r3, [sp, #28]
 801531e:	f002 b840 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015322:	4b15      	ldr	r3, [pc, #84]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015324:	681b      	ldr	r3, [r3, #0]
 8015326:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015328:	6a1b      	ldr	r3, [r3, #32]
 801532a:	3318      	adds	r3, #24
 801532c:	9303      	str	r3, [sp, #12]
 801532e:	4b13      	ldr	r3, [pc, #76]	@ (801537c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f8>)
 8015330:	9304      	str	r3, [sp, #16]
 8015332:	4b13      	ldr	r3, [pc, #76]	@ (8015380 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10fc>)
 8015334:	9305      	str	r3, [sp, #20]
 8015336:	4b13      	ldr	r3, [pc, #76]	@ (8015384 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1100>)
 8015338:	9307      	str	r3, [sp, #28]
 801533a:	f002 b832 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801533e:	4b0e      	ldr	r3, [pc, #56]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 8015340:	681b      	ldr	r3, [r3, #0]
 8015342:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015344:	6a1b      	ldr	r3, [r3, #32]
 8015346:	331c      	adds	r3, #28
 8015348:	9303      	str	r3, [sp, #12]
 801534a:	4b12      	ldr	r3, [pc, #72]	@ (8015394 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1110>)
 801534c:	9304      	str	r3, [sp, #16]
 801534e:	4b12      	ldr	r3, [pc, #72]	@ (8015398 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1114>)
 8015350:	9305      	str	r3, [sp, #20]
 8015352:	4b12      	ldr	r3, [pc, #72]	@ (801539c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1118>)
 8015354:	9307      	str	r3, [sp, #28]
 8015356:	f002 b824 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801535a:	4b07      	ldr	r3, [pc, #28]	@ (8015378 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x10f4>)
 801535c:	681b      	ldr	r3, [r3, #0]
 801535e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015360:	6a1b      	ldr	r3, [r3, #32]
 8015362:	3320      	adds	r3, #32
 8015364:	9303      	str	r3, [sp, #12]
 8015366:	4b12      	ldr	r3, [pc, #72]	@ (80153b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x112c>)
 8015368:	9304      	str	r3, [sp, #16]
 801536a:	4b12      	ldr	r3, [pc, #72]	@ (80153b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1130>)
 801536c:	9305      	str	r3, [sp, #20]
 801536e:	4b12      	ldr	r3, [pc, #72]	@ (80153b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1134>)
 8015370:	9307      	str	r3, [sp, #28]
 8015372:	f002 b816 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015376:	bf00      	nop
 8015378:	200019cc 	.word	0x200019cc
 801537c:	0801283d 	.word	0x0801283d
 8015380:	08012845 	.word	0x08012845
 8015384:	20008e3c 	.word	0x20008e3c
 8015388:	08013091 	.word	0x08013091
 801538c:	0801e189 	.word	0x0801e189
 8015390:	20008e28 	.word	0x20008e28
 8015394:	080128b5 	.word	0x080128b5
 8015398:	080128b9 	.word	0x080128b9
 801539c:	20008d88 	.word	0x20008d88
 80153a0:	08013089 	.word	0x08013089
 80153a4:	0801e1a5 	.word	0x0801e1a5
 80153a8:	0801307d 	.word	0x0801307d
 80153ac:	0801e1bd 	.word	0x0801e1bd
 80153b0:	080128bd 	.word	0x080128bd
 80153b4:	080128c1 	.word	0x080128c1
 80153b8:	20008d74 	.word	0x20008d74
 80153bc:	4b88      	ldr	r3, [pc, #544]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80153be:	681b      	ldr	r3, [r3, #0]
 80153c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80153c2:	6a1b      	ldr	r3, [r3, #32]
 80153c4:	3324      	adds	r3, #36	@ 0x24
 80153c6:	9303      	str	r3, [sp, #12]
 80153c8:	4b86      	ldr	r3, [pc, #536]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80153ca:	9304      	str	r3, [sp, #16]
 80153cc:	4b86      	ldr	r3, [pc, #536]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 80153ce:	9305      	str	r3, [sp, #20]
 80153d0:	4b86      	ldr	r3, [pc, #536]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80153d2:	9307      	str	r3, [sp, #28]
 80153d4:	f001 bfe5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80153d8:	4b81      	ldr	r3, [pc, #516]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80153da:	681b      	ldr	r3, [r3, #0]
 80153dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80153de:	6a1b      	ldr	r3, [r3, #32]
 80153e0:	3328      	adds	r3, #40	@ 0x28
 80153e2:	9303      	str	r3, [sp, #12]
 80153e4:	4b7f      	ldr	r3, [pc, #508]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80153e6:	9304      	str	r3, [sp, #16]
 80153e8:	4b7f      	ldr	r3, [pc, #508]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 80153ea:	9305      	str	r3, [sp, #20]
 80153ec:	4b7f      	ldr	r3, [pc, #508]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80153ee:	9307      	str	r3, [sp, #28]
 80153f0:	f001 bfd7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80153f4:	4b7a      	ldr	r3, [pc, #488]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80153f6:	681b      	ldr	r3, [r3, #0]
 80153f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80153fa:	6a1b      	ldr	r3, [r3, #32]
 80153fc:	332c      	adds	r3, #44	@ 0x2c
 80153fe:	9303      	str	r3, [sp, #12]
 8015400:	4b78      	ldr	r3, [pc, #480]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 8015402:	9304      	str	r3, [sp, #16]
 8015404:	4b78      	ldr	r3, [pc, #480]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015406:	9305      	str	r3, [sp, #20]
 8015408:	4b78      	ldr	r3, [pc, #480]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 801540a:	9307      	str	r3, [sp, #28]
 801540c:	f001 bfc9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015410:	4b73      	ldr	r3, [pc, #460]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015412:	681b      	ldr	r3, [r3, #0]
 8015414:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015416:	6a1b      	ldr	r3, [r3, #32]
 8015418:	3338      	adds	r3, #56	@ 0x38
 801541a:	9303      	str	r3, [sp, #12]
 801541c:	4b71      	ldr	r3, [pc, #452]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 801541e:	9304      	str	r3, [sp, #16]
 8015420:	4b71      	ldr	r3, [pc, #452]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015422:	9305      	str	r3, [sp, #20]
 8015424:	4b71      	ldr	r3, [pc, #452]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015426:	9307      	str	r3, [sp, #28]
 8015428:	f001 bfbb 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801542c:	4b6c      	ldr	r3, [pc, #432]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801542e:	681b      	ldr	r3, [r3, #0]
 8015430:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015432:	6a1b      	ldr	r3, [r3, #32]
 8015434:	333c      	adds	r3, #60	@ 0x3c
 8015436:	9303      	str	r3, [sp, #12]
 8015438:	4b6a      	ldr	r3, [pc, #424]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 801543a:	9304      	str	r3, [sp, #16]
 801543c:	4b6a      	ldr	r3, [pc, #424]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 801543e:	9305      	str	r3, [sp, #20]
 8015440:	4b6a      	ldr	r3, [pc, #424]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015442:	9307      	str	r3, [sp, #28]
 8015444:	f001 bfad 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015448:	4b65      	ldr	r3, [pc, #404]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801544a:	681b      	ldr	r3, [r3, #0]
 801544c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801544e:	6a1b      	ldr	r3, [r3, #32]
 8015450:	3330      	adds	r3, #48	@ 0x30
 8015452:	9303      	str	r3, [sp, #12]
 8015454:	4b63      	ldr	r3, [pc, #396]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 8015456:	9304      	str	r3, [sp, #16]
 8015458:	4b63      	ldr	r3, [pc, #396]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 801545a:	9305      	str	r3, [sp, #20]
 801545c:	4b63      	ldr	r3, [pc, #396]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 801545e:	9307      	str	r3, [sp, #28]
 8015460:	f001 bf9f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015464:	4b5e      	ldr	r3, [pc, #376]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015466:	681b      	ldr	r3, [r3, #0]
 8015468:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801546a:	6a1b      	ldr	r3, [r3, #32]
 801546c:	9303      	str	r3, [sp, #12]
 801546e:	4b60      	ldr	r3, [pc, #384]	@ (80155f0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x136c>)
 8015470:	9304      	str	r3, [sp, #16]
 8015472:	4b60      	ldr	r3, [pc, #384]	@ (80155f4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1370>)
 8015474:	9305      	str	r3, [sp, #20]
 8015476:	4b5d      	ldr	r3, [pc, #372]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015478:	9307      	str	r3, [sp, #28]
 801547a:	f001 bf92 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801547e:	4b58      	ldr	r3, [pc, #352]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015480:	681b      	ldr	r3, [r3, #0]
 8015482:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015484:	6a1b      	ldr	r3, [r3, #32]
 8015486:	3340      	adds	r3, #64	@ 0x40
 8015488:	9303      	str	r3, [sp, #12]
 801548a:	4b56      	ldr	r3, [pc, #344]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 801548c:	9304      	str	r3, [sp, #16]
 801548e:	4b56      	ldr	r3, [pc, #344]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015490:	9305      	str	r3, [sp, #20]
 8015492:	4b56      	ldr	r3, [pc, #344]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015494:	9307      	str	r3, [sp, #28]
 8015496:	f001 bf84 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801549a:	4b51      	ldr	r3, [pc, #324]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801549c:	681b      	ldr	r3, [r3, #0]
 801549e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80154a0:	6a1b      	ldr	r3, [r3, #32]
 80154a2:	3344      	adds	r3, #68	@ 0x44
 80154a4:	9303      	str	r3, [sp, #12]
 80154a6:	4b4f      	ldr	r3, [pc, #316]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80154a8:	9304      	str	r3, [sp, #16]
 80154aa:	4b4f      	ldr	r3, [pc, #316]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 80154ac:	9305      	str	r3, [sp, #20]
 80154ae:	4b4f      	ldr	r3, [pc, #316]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80154b0:	9307      	str	r3, [sp, #28]
 80154b2:	f001 bf76 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80154b6:	4b4a      	ldr	r3, [pc, #296]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80154b8:	681b      	ldr	r3, [r3, #0]
 80154ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80154bc:	6a1b      	ldr	r3, [r3, #32]
 80154be:	3348      	adds	r3, #72	@ 0x48
 80154c0:	9303      	str	r3, [sp, #12]
 80154c2:	4b48      	ldr	r3, [pc, #288]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80154c4:	9304      	str	r3, [sp, #16]
 80154c6:	4b48      	ldr	r3, [pc, #288]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 80154c8:	9305      	str	r3, [sp, #20]
 80154ca:	4b48      	ldr	r3, [pc, #288]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80154cc:	9307      	str	r3, [sp, #28]
 80154ce:	f001 bf68 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80154d2:	4b43      	ldr	r3, [pc, #268]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80154d4:	681b      	ldr	r3, [r3, #0]
 80154d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80154d8:	6a1b      	ldr	r3, [r3, #32]
 80154da:	334c      	adds	r3, #76	@ 0x4c
 80154dc:	9303      	str	r3, [sp, #12]
 80154de:	4b46      	ldr	r3, [pc, #280]	@ (80155f8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1374>)
 80154e0:	9304      	str	r3, [sp, #16]
 80154e2:	4b46      	ldr	r3, [pc, #280]	@ (80155fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1378>)
 80154e4:	9305      	str	r3, [sp, #20]
 80154e6:	4b46      	ldr	r3, [pc, #280]	@ (8015600 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x137c>)
 80154e8:	9307      	str	r3, [sp, #28]
 80154ea:	f001 bf5a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80154ee:	4b3c      	ldr	r3, [pc, #240]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80154f0:	681b      	ldr	r3, [r3, #0]
 80154f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80154f4:	6a1b      	ldr	r3, [r3, #32]
 80154f6:	3350      	adds	r3, #80	@ 0x50
 80154f8:	9303      	str	r3, [sp, #12]
 80154fa:	4b3a      	ldr	r3, [pc, #232]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80154fc:	9304      	str	r3, [sp, #16]
 80154fe:	4b3a      	ldr	r3, [pc, #232]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015500:	9305      	str	r3, [sp, #20]
 8015502:	4b3a      	ldr	r3, [pc, #232]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015504:	9307      	str	r3, [sp, #28]
 8015506:	f001 bf4c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801550a:	4b35      	ldr	r3, [pc, #212]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801550c:	681b      	ldr	r3, [r3, #0]
 801550e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015510:	6a1b      	ldr	r3, [r3, #32]
 8015512:	3354      	adds	r3, #84	@ 0x54
 8015514:	9303      	str	r3, [sp, #12]
 8015516:	4b33      	ldr	r3, [pc, #204]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 8015518:	9304      	str	r3, [sp, #16]
 801551a:	4b33      	ldr	r3, [pc, #204]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 801551c:	9305      	str	r3, [sp, #20]
 801551e:	4b33      	ldr	r3, [pc, #204]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015520:	9307      	str	r3, [sp, #28]
 8015522:	f001 bf3e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015526:	4b2e      	ldr	r3, [pc, #184]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015528:	681b      	ldr	r3, [r3, #0]
 801552a:	699b      	ldr	r3, [r3, #24]
 801552c:	3314      	adds	r3, #20
 801552e:	9303      	str	r3, [sp, #12]
 8015530:	4b34      	ldr	r3, [pc, #208]	@ (8015604 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1380>)
 8015532:	9304      	str	r3, [sp, #16]
 8015534:	4b34      	ldr	r3, [pc, #208]	@ (8015608 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1384>)
 8015536:	9305      	str	r3, [sp, #20]
 8015538:	4b34      	ldr	r3, [pc, #208]	@ (801560c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1388>)
 801553a:	9307      	str	r3, [sp, #28]
 801553c:	f001 bf31 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015540:	4b27      	ldr	r3, [pc, #156]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015542:	681b      	ldr	r3, [r3, #0]
 8015544:	699b      	ldr	r3, [r3, #24]
 8015546:	9303      	str	r3, [sp, #12]
 8015548:	4b31      	ldr	r3, [pc, #196]	@ (8015610 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x138c>)
 801554a:	9304      	str	r3, [sp, #16]
 801554c:	4b31      	ldr	r3, [pc, #196]	@ (8015614 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1390>)
 801554e:	9305      	str	r3, [sp, #20]
 8015550:	4b26      	ldr	r3, [pc, #152]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015552:	9307      	str	r3, [sp, #28]
 8015554:	f001 bf25 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015558:	4b21      	ldr	r3, [pc, #132]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801555a:	681b      	ldr	r3, [r3, #0]
 801555c:	699b      	ldr	r3, [r3, #24]
 801555e:	3344      	adds	r3, #68	@ 0x44
 8015560:	9303      	str	r3, [sp, #12]
 8015562:	4b20      	ldr	r3, [pc, #128]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 8015564:	9304      	str	r3, [sp, #16]
 8015566:	4b20      	ldr	r3, [pc, #128]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015568:	9305      	str	r3, [sp, #20]
 801556a:	4b20      	ldr	r3, [pc, #128]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 801556c:	9307      	str	r3, [sp, #28]
 801556e:	f001 bf18 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015572:	4b1b      	ldr	r3, [pc, #108]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 8015574:	681b      	ldr	r3, [r3, #0]
 8015576:	699b      	ldr	r3, [r3, #24]
 8015578:	3348      	adds	r3, #72	@ 0x48
 801557a:	9303      	str	r3, [sp, #12]
 801557c:	4b19      	ldr	r3, [pc, #100]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 801557e:	9304      	str	r3, [sp, #16]
 8015580:	4b19      	ldr	r3, [pc, #100]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 8015582:	9305      	str	r3, [sp, #20]
 8015584:	4b19      	ldr	r3, [pc, #100]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 8015586:	9307      	str	r3, [sp, #28]
 8015588:	f001 bf0b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801558c:	4b14      	ldr	r3, [pc, #80]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 801558e:	681b      	ldr	r3, [r3, #0]
 8015590:	699b      	ldr	r3, [r3, #24]
 8015592:	3338      	adds	r3, #56	@ 0x38
 8015594:	9303      	str	r3, [sp, #12]
 8015596:	4b13      	ldr	r3, [pc, #76]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 8015598:	9304      	str	r3, [sp, #16]
 801559a:	4b13      	ldr	r3, [pc, #76]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 801559c:	9305      	str	r3, [sp, #20]
 801559e:	4b13      	ldr	r3, [pc, #76]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80155a0:	9307      	str	r3, [sp, #28]
 80155a2:	f001 befe 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80155a6:	4b0e      	ldr	r3, [pc, #56]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80155a8:	681b      	ldr	r3, [r3, #0]
 80155aa:	699b      	ldr	r3, [r3, #24]
 80155ac:	3356      	adds	r3, #86	@ 0x56
 80155ae:	9303      	str	r3, [sp, #12]
 80155b0:	4b11      	ldr	r3, [pc, #68]	@ (80155f8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1374>)
 80155b2:	9304      	str	r3, [sp, #16]
 80155b4:	4b11      	ldr	r3, [pc, #68]	@ (80155fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1378>)
 80155b6:	9305      	str	r3, [sp, #20]
 80155b8:	4b11      	ldr	r3, [pc, #68]	@ (8015600 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x137c>)
 80155ba:	9307      	str	r3, [sp, #28]
 80155bc:	f001 bef1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80155c0:	4b07      	ldr	r3, [pc, #28]	@ (80155e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x135c>)
 80155c2:	681b      	ldr	r3, [r3, #0]
 80155c4:	699b      	ldr	r3, [r3, #24]
 80155c6:	68db      	ldr	r3, [r3, #12]
 80155c8:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 80155cc:	330c      	adds	r3, #12
 80155ce:	9303      	str	r3, [sp, #12]
 80155d0:	4b04      	ldr	r3, [pc, #16]	@ (80155e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1360>)
 80155d2:	9304      	str	r3, [sp, #16]
 80155d4:	4b04      	ldr	r3, [pc, #16]	@ (80155e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1364>)
 80155d6:	9305      	str	r3, [sp, #20]
 80155d8:	4b04      	ldr	r3, [pc, #16]	@ (80155ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1368>)
 80155da:	9307      	str	r3, [sp, #28]
 80155dc:	f001 bee1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80155e0:	200019cc 	.word	0x200019cc
 80155e4:	0801283d 	.word	0x0801283d
 80155e8:	08012845 	.word	0x08012845
 80155ec:	20008e3c 	.word	0x20008e3c
 80155f0:	08013071 	.word	0x08013071
 80155f4:	0801e1d5 	.word	0x0801e1d5
 80155f8:	0801285d 	.word	0x0801285d
 80155fc:	08012861 	.word	0x08012861
 8015600:	20008e28 	.word	0x20008e28
 8015604:	080128c5 	.word	0x080128c5
 8015608:	080128c9 	.word	0x080128c9
 801560c:	20008d60 	.word	0x20008d60
 8015610:	08013065 	.word	0x08013065
 8015614:	0801e1ed 	.word	0x0801e1ed
 8015618:	4b8a      	ldr	r3, [pc, #552]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801561a:	681b      	ldr	r3, [r3, #0]
 801561c:	699b      	ldr	r3, [r3, #24]
 801561e:	68db      	ldr	r3, [r3, #12]
 8015620:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015624:	3311      	adds	r3, #17
 8015626:	9303      	str	r3, [sp, #12]
 8015628:	4b87      	ldr	r3, [pc, #540]	@ (8015848 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c4>)
 801562a:	9304      	str	r3, [sp, #16]
 801562c:	4b87      	ldr	r3, [pc, #540]	@ (801584c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c8>)
 801562e:	9305      	str	r3, [sp, #20]
 8015630:	4b87      	ldr	r3, [pc, #540]	@ (8015850 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15cc>)
 8015632:	9307      	str	r3, [sp, #28]
 8015634:	f001 beb5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015638:	4b82      	ldr	r3, [pc, #520]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801563a:	681b      	ldr	r3, [r3, #0]
 801563c:	699b      	ldr	r3, [r3, #24]
 801563e:	68db      	ldr	r3, [r3, #12]
 8015640:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015644:	3313      	adds	r3, #19
 8015646:	9303      	str	r3, [sp, #12]
 8015648:	4b7f      	ldr	r3, [pc, #508]	@ (8015848 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c4>)
 801564a:	9304      	str	r3, [sp, #16]
 801564c:	4b7f      	ldr	r3, [pc, #508]	@ (801584c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c8>)
 801564e:	9305      	str	r3, [sp, #20]
 8015650:	4b7f      	ldr	r3, [pc, #508]	@ (8015850 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15cc>)
 8015652:	9307      	str	r3, [sp, #28]
 8015654:	f001 bea5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015658:	4b7a      	ldr	r3, [pc, #488]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801565a:	681b      	ldr	r3, [r3, #0]
 801565c:	699b      	ldr	r3, [r3, #24]
 801565e:	68db      	ldr	r3, [r3, #12]
 8015660:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015664:	3310      	adds	r3, #16
 8015666:	9303      	str	r3, [sp, #12]
 8015668:	4b77      	ldr	r3, [pc, #476]	@ (8015848 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c4>)
 801566a:	9304      	str	r3, [sp, #16]
 801566c:	4b77      	ldr	r3, [pc, #476]	@ (801584c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c8>)
 801566e:	9305      	str	r3, [sp, #20]
 8015670:	4b77      	ldr	r3, [pc, #476]	@ (8015850 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15cc>)
 8015672:	9307      	str	r3, [sp, #28]
 8015674:	f001 be95 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015678:	4b72      	ldr	r3, [pc, #456]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801567a:	681b      	ldr	r3, [r3, #0]
 801567c:	699b      	ldr	r3, [r3, #24]
 801567e:	68db      	ldr	r3, [r3, #12]
 8015680:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015684:	3312      	adds	r3, #18
 8015686:	9303      	str	r3, [sp, #12]
 8015688:	4b6f      	ldr	r3, [pc, #444]	@ (8015848 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c4>)
 801568a:	9304      	str	r3, [sp, #16]
 801568c:	4b6f      	ldr	r3, [pc, #444]	@ (801584c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c8>)
 801568e:	9305      	str	r3, [sp, #20]
 8015690:	4b6f      	ldr	r3, [pc, #444]	@ (8015850 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15cc>)
 8015692:	9307      	str	r3, [sp, #28]
 8015694:	f001 be85 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015698:	4b6a      	ldr	r3, [pc, #424]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801569a:	681b      	ldr	r3, [r3, #0]
 801569c:	699b      	ldr	r3, [r3, #24]
 801569e:	68db      	ldr	r3, [r3, #12]
 80156a0:	9303      	str	r3, [sp, #12]
 80156a2:	4b6c      	ldr	r3, [pc, #432]	@ (8015854 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15d0>)
 80156a4:	9304      	str	r3, [sp, #16]
 80156a6:	4b6c      	ldr	r3, [pc, #432]	@ (8015858 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15d4>)
 80156a8:	9305      	str	r3, [sp, #20]
 80156aa:	4b6c      	ldr	r3, [pc, #432]	@ (801585c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15d8>)
 80156ac:	9307      	str	r3, [sp, #28]
 80156ae:	f001 be78 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80156b2:	4b64      	ldr	r3, [pc, #400]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80156b4:	681b      	ldr	r3, [r3, #0]
 80156b6:	699b      	ldr	r3, [r3, #24]
 80156b8:	68db      	ldr	r3, [r3, #12]
 80156ba:	3301      	adds	r3, #1
 80156bc:	9303      	str	r3, [sp, #12]
 80156be:	4b68      	ldr	r3, [pc, #416]	@ (8015860 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15dc>)
 80156c0:	9304      	str	r3, [sp, #16]
 80156c2:	4b68      	ldr	r3, [pc, #416]	@ (8015864 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e0>)
 80156c4:	9305      	str	r3, [sp, #20]
 80156c6:	4b68      	ldr	r3, [pc, #416]	@ (8015868 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e4>)
 80156c8:	9307      	str	r3, [sp, #28]
 80156ca:	f001 be6a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80156ce:	4b5d      	ldr	r3, [pc, #372]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80156d0:	681b      	ldr	r3, [r3, #0]
 80156d2:	699b      	ldr	r3, [r3, #24]
 80156d4:	68db      	ldr	r3, [r3, #12]
 80156d6:	3304      	adds	r3, #4
 80156d8:	9303      	str	r3, [sp, #12]
 80156da:	4b64      	ldr	r3, [pc, #400]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 80156dc:	9304      	str	r3, [sp, #16]
 80156de:	4b64      	ldr	r3, [pc, #400]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 80156e0:	9305      	str	r3, [sp, #20]
 80156e2:	4b64      	ldr	r3, [pc, #400]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 80156e4:	9307      	str	r3, [sp, #28]
 80156e6:	f001 be5c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80156ea:	4b56      	ldr	r3, [pc, #344]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80156ec:	681b      	ldr	r3, [r3, #0]
 80156ee:	699b      	ldr	r3, [r3, #24]
 80156f0:	68db      	ldr	r3, [r3, #12]
 80156f2:	3308      	adds	r3, #8
 80156f4:	9303      	str	r3, [sp, #12]
 80156f6:	4b5d      	ldr	r3, [pc, #372]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 80156f8:	9304      	str	r3, [sp, #16]
 80156fa:	4b5d      	ldr	r3, [pc, #372]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 80156fc:	9305      	str	r3, [sp, #20]
 80156fe:	4b5d      	ldr	r3, [pc, #372]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 8015700:	9307      	str	r3, [sp, #28]
 8015702:	f001 be4e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015706:	4b4f      	ldr	r3, [pc, #316]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015708:	681b      	ldr	r3, [r3, #0]
 801570a:	699b      	ldr	r3, [r3, #24]
 801570c:	68db      	ldr	r3, [r3, #12]
 801570e:	330c      	adds	r3, #12
 8015710:	9303      	str	r3, [sp, #12]
 8015712:	4b56      	ldr	r3, [pc, #344]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 8015714:	9304      	str	r3, [sp, #16]
 8015716:	4b56      	ldr	r3, [pc, #344]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 8015718:	9305      	str	r3, [sp, #20]
 801571a:	4b56      	ldr	r3, [pc, #344]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 801571c:	9307      	str	r3, [sp, #28]
 801571e:	f001 be40 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015722:	4b48      	ldr	r3, [pc, #288]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015724:	681b      	ldr	r3, [r3, #0]
 8015726:	699b      	ldr	r3, [r3, #24]
 8015728:	68db      	ldr	r3, [r3, #12]
 801572a:	3310      	adds	r3, #16
 801572c:	9303      	str	r3, [sp, #12]
 801572e:	4b4f      	ldr	r3, [pc, #316]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 8015730:	9304      	str	r3, [sp, #16]
 8015732:	4b4f      	ldr	r3, [pc, #316]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 8015734:	9305      	str	r3, [sp, #20]
 8015736:	4b4f      	ldr	r3, [pc, #316]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 8015738:	9307      	str	r3, [sp, #28]
 801573a:	f001 be32 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801573e:	4b41      	ldr	r3, [pc, #260]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015740:	681b      	ldr	r3, [r3, #0]
 8015742:	699b      	ldr	r3, [r3, #24]
 8015744:	68db      	ldr	r3, [r3, #12]
 8015746:	3314      	adds	r3, #20
 8015748:	9303      	str	r3, [sp, #12]
 801574a:	4b48      	ldr	r3, [pc, #288]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 801574c:	9304      	str	r3, [sp, #16]
 801574e:	4b48      	ldr	r3, [pc, #288]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 8015750:	9305      	str	r3, [sp, #20]
 8015752:	4b48      	ldr	r3, [pc, #288]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 8015754:	9307      	str	r3, [sp, #28]
 8015756:	f001 be24 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801575a:	4b3a      	ldr	r3, [pc, #232]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 801575c:	681b      	ldr	r3, [r3, #0]
 801575e:	699b      	ldr	r3, [r3, #24]
 8015760:	68db      	ldr	r3, [r3, #12]
 8015762:	3318      	adds	r3, #24
 8015764:	9303      	str	r3, [sp, #12]
 8015766:	4b41      	ldr	r3, [pc, #260]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 8015768:	9304      	str	r3, [sp, #16]
 801576a:	4b41      	ldr	r3, [pc, #260]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 801576c:	9305      	str	r3, [sp, #20]
 801576e:	4b41      	ldr	r3, [pc, #260]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 8015770:	9307      	str	r3, [sp, #28]
 8015772:	f001 be16 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015776:	4b33      	ldr	r3, [pc, #204]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015778:	681b      	ldr	r3, [r3, #0]
 801577a:	699b      	ldr	r3, [r3, #24]
 801577c:	68db      	ldr	r3, [r3, #12]
 801577e:	331c      	adds	r3, #28
 8015780:	9303      	str	r3, [sp, #12]
 8015782:	4b3a      	ldr	r3, [pc, #232]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 8015784:	9304      	str	r3, [sp, #16]
 8015786:	4b3a      	ldr	r3, [pc, #232]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 8015788:	9305      	str	r3, [sp, #20]
 801578a:	4b3a      	ldr	r3, [pc, #232]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 801578c:	9307      	str	r3, [sp, #28]
 801578e:	f001 be08 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015792:	4b2c      	ldr	r3, [pc, #176]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015794:	681b      	ldr	r3, [r3, #0]
 8015796:	699b      	ldr	r3, [r3, #24]
 8015798:	68db      	ldr	r3, [r3, #12]
 801579a:	3320      	adds	r3, #32
 801579c:	9303      	str	r3, [sp, #12]
 801579e:	4b2a      	ldr	r3, [pc, #168]	@ (8015848 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c4>)
 80157a0:	9304      	str	r3, [sp, #16]
 80157a2:	4b2a      	ldr	r3, [pc, #168]	@ (801584c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c8>)
 80157a4:	9305      	str	r3, [sp, #20]
 80157a6:	4b2a      	ldr	r3, [pc, #168]	@ (8015850 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15cc>)
 80157a8:	9307      	str	r3, [sp, #28]
 80157aa:	f001 bdfa 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80157ae:	4b25      	ldr	r3, [pc, #148]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80157b0:	681b      	ldr	r3, [r3, #0]
 80157b2:	699b      	ldr	r3, [r3, #24]
 80157b4:	68db      	ldr	r3, [r3, #12]
 80157b6:	3324      	adds	r3, #36	@ 0x24
 80157b8:	9303      	str	r3, [sp, #12]
 80157ba:	4b2c      	ldr	r3, [pc, #176]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 80157bc:	9304      	str	r3, [sp, #16]
 80157be:	4b2c      	ldr	r3, [pc, #176]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 80157c0:	9305      	str	r3, [sp, #20]
 80157c2:	4b2c      	ldr	r3, [pc, #176]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 80157c4:	9307      	str	r3, [sp, #28]
 80157c6:	f001 bdec 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80157ca:	4b1e      	ldr	r3, [pc, #120]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80157cc:	681b      	ldr	r3, [r3, #0]
 80157ce:	699b      	ldr	r3, [r3, #24]
 80157d0:	68db      	ldr	r3, [r3, #12]
 80157d2:	3330      	adds	r3, #48	@ 0x30
 80157d4:	9303      	str	r3, [sp, #12]
 80157d6:	4b25      	ldr	r3, [pc, #148]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 80157d8:	9304      	str	r3, [sp, #16]
 80157da:	4b25      	ldr	r3, [pc, #148]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 80157dc:	9305      	str	r3, [sp, #20]
 80157de:	4b25      	ldr	r3, [pc, #148]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 80157e0:	9307      	str	r3, [sp, #28]
 80157e2:	f001 bdde 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80157e6:	4b17      	ldr	r3, [pc, #92]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 80157e8:	681b      	ldr	r3, [r3, #0]
 80157ea:	699b      	ldr	r3, [r3, #24]
 80157ec:	68db      	ldr	r3, [r3, #12]
 80157ee:	3328      	adds	r3, #40	@ 0x28
 80157f0:	9303      	str	r3, [sp, #12]
 80157f2:	4b1e      	ldr	r3, [pc, #120]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 80157f4:	9304      	str	r3, [sp, #16]
 80157f6:	4b1e      	ldr	r3, [pc, #120]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 80157f8:	9305      	str	r3, [sp, #20]
 80157fa:	4b1e      	ldr	r3, [pc, #120]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 80157fc:	9307      	str	r3, [sp, #28]
 80157fe:	f001 bdd0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015802:	4b10      	ldr	r3, [pc, #64]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015804:	681b      	ldr	r3, [r3, #0]
 8015806:	699b      	ldr	r3, [r3, #24]
 8015808:	68db      	ldr	r3, [r3, #12]
 801580a:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 801580e:	3314      	adds	r3, #20
 8015810:	9303      	str	r3, [sp, #12]
 8015812:	4b19      	ldr	r3, [pc, #100]	@ (8015878 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f4>)
 8015814:	9304      	str	r3, [sp, #16]
 8015816:	4b19      	ldr	r3, [pc, #100]	@ (801587c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f8>)
 8015818:	9305      	str	r3, [sp, #20]
 801581a:	4b19      	ldr	r3, [pc, #100]	@ (8015880 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15fc>)
 801581c:	9307      	str	r3, [sp, #28]
 801581e:	f001 bdc0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015822:	4b08      	ldr	r3, [pc, #32]	@ (8015844 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15c0>)
 8015824:	681b      	ldr	r3, [r3, #0]
 8015826:	699b      	ldr	r3, [r3, #24]
 8015828:	68db      	ldr	r3, [r3, #12]
 801582a:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 801582e:	3318      	adds	r3, #24
 8015830:	9303      	str	r3, [sp, #12]
 8015832:	4b0e      	ldr	r3, [pc, #56]	@ (801586c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15e8>)
 8015834:	9304      	str	r3, [sp, #16]
 8015836:	4b0e      	ldr	r3, [pc, #56]	@ (8015870 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15ec>)
 8015838:	9305      	str	r3, [sp, #20]
 801583a:	4b0e      	ldr	r3, [pc, #56]	@ (8015874 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x15f0>)
 801583c:	9307      	str	r3, [sp, #28]
 801583e:	f001 bdb0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015842:	bf00      	nop
 8015844:	200019cc 	.word	0x200019cc
 8015848:	0801285d 	.word	0x0801285d
 801584c:	08012861 	.word	0x08012861
 8015850:	20008e28 	.word	0x20008e28
 8015854:	080128cd 	.word	0x080128cd
 8015858:	080128d1 	.word	0x080128d1
 801585c:	20008d4c 	.word	0x20008d4c
 8015860:	080128d5 	.word	0x080128d5
 8015864:	080128d9 	.word	0x080128d9
 8015868:	20008d38 	.word	0x20008d38
 801586c:	0801283d 	.word	0x0801283d
 8015870:	08012845 	.word	0x08012845
 8015874:	20008e3c 	.word	0x20008e3c
 8015878:	080128dd 	.word	0x080128dd
 801587c:	080128e1 	.word	0x080128e1
 8015880:	20008d24 	.word	0x20008d24
 8015884:	4b8b      	ldr	r3, [pc, #556]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015886:	681b      	ldr	r3, [r3, #0]
 8015888:	699b      	ldr	r3, [r3, #24]
 801588a:	68db      	ldr	r3, [r3, #12]
 801588c:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015890:	331c      	adds	r3, #28
 8015892:	9303      	str	r3, [sp, #12]
 8015894:	4b88      	ldr	r3, [pc, #544]	@ (8015ab8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1834>)
 8015896:	9304      	str	r3, [sp, #16]
 8015898:	4b88      	ldr	r3, [pc, #544]	@ (8015abc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1838>)
 801589a:	9305      	str	r3, [sp, #20]
 801589c:	4b88      	ldr	r3, [pc, #544]	@ (8015ac0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x183c>)
 801589e:	9307      	str	r3, [sp, #28]
 80158a0:	f001 bd7f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80158a4:	4b83      	ldr	r3, [pc, #524]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80158a6:	681b      	ldr	r3, [r3, #0]
 80158a8:	699b      	ldr	r3, [r3, #24]
 80158aa:	68db      	ldr	r3, [r3, #12]
 80158ac:	9303      	str	r3, [sp, #12]
 80158ae:	4b85      	ldr	r3, [pc, #532]	@ (8015ac4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1840>)
 80158b0:	9304      	str	r3, [sp, #16]
 80158b2:	4b85      	ldr	r3, [pc, #532]	@ (8015ac8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1844>)
 80158b4:	9305      	str	r3, [sp, #20]
 80158b6:	4b85      	ldr	r3, [pc, #532]	@ (8015acc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1848>)
 80158b8:	9307      	str	r3, [sp, #28]
 80158ba:	f001 bd72 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80158be:	4b7d      	ldr	r3, [pc, #500]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80158c0:	681b      	ldr	r3, [r3, #0]
 80158c2:	699b      	ldr	r3, [r3, #24]
 80158c4:	68db      	ldr	r3, [r3, #12]
 80158c6:	f503 5361 	add.w	r3, r3, #14400	@ 0x3840
 80158ca:	3338      	adds	r3, #56	@ 0x38
 80158cc:	9303      	str	r3, [sp, #12]
 80158ce:	4b80      	ldr	r3, [pc, #512]	@ (8015ad0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x184c>)
 80158d0:	9304      	str	r3, [sp, #16]
 80158d2:	4b80      	ldr	r3, [pc, #512]	@ (8015ad4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1850>)
 80158d4:	9305      	str	r3, [sp, #20]
 80158d6:	4b80      	ldr	r3, [pc, #512]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 80158d8:	9307      	str	r3, [sp, #28]
 80158da:	f001 bd62 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80158de:	4b75      	ldr	r3, [pc, #468]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80158e0:	681b      	ldr	r3, [r3, #0]
 80158e2:	699b      	ldr	r3, [r3, #24]
 80158e4:	68db      	ldr	r3, [r3, #12]
 80158e6:	f503 5361 	add.w	r3, r3, #14400	@ 0x3840
 80158ea:	333c      	adds	r3, #60	@ 0x3c
 80158ec:	9303      	str	r3, [sp, #12]
 80158ee:	4b7b      	ldr	r3, [pc, #492]	@ (8015adc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1858>)
 80158f0:	9304      	str	r3, [sp, #16]
 80158f2:	4b7b      	ldr	r3, [pc, #492]	@ (8015ae0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x185c>)
 80158f4:	9305      	str	r3, [sp, #20]
 80158f6:	4b75      	ldr	r3, [pc, #468]	@ (8015acc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1848>)
 80158f8:	9307      	str	r3, [sp, #28]
 80158fa:	f001 bd52 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80158fe:	4b6d      	ldr	r3, [pc, #436]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015900:	681b      	ldr	r3, [r3, #0]
 8015902:	699b      	ldr	r3, [r3, #24]
 8015904:	68db      	ldr	r3, [r3, #12]
 8015906:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 801590a:	9303      	str	r3, [sp, #12]
 801590c:	4b73      	ldr	r3, [pc, #460]	@ (8015adc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1858>)
 801590e:	9304      	str	r3, [sp, #16]
 8015910:	4b73      	ldr	r3, [pc, #460]	@ (8015ae0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x185c>)
 8015912:	9305      	str	r3, [sp, #20]
 8015914:	4b6d      	ldr	r3, [pc, #436]	@ (8015acc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1848>)
 8015916:	9307      	str	r3, [sp, #28]
 8015918:	f001 bd43 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801591c:	4b65      	ldr	r3, [pc, #404]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 801591e:	681b      	ldr	r3, [r3, #0]
 8015920:	699b      	ldr	r3, [r3, #24]
 8015922:	68db      	ldr	r3, [r3, #12]
 8015924:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8015928:	3308      	adds	r3, #8
 801592a:	9303      	str	r3, [sp, #12]
 801592c:	4b68      	ldr	r3, [pc, #416]	@ (8015ad0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x184c>)
 801592e:	9304      	str	r3, [sp, #16]
 8015930:	4b68      	ldr	r3, [pc, #416]	@ (8015ad4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1850>)
 8015932:	9305      	str	r3, [sp, #20]
 8015934:	4b68      	ldr	r3, [pc, #416]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 8015936:	9307      	str	r3, [sp, #28]
 8015938:	f001 bd33 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801593c:	4b5d      	ldr	r3, [pc, #372]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 801593e:	681b      	ldr	r3, [r3, #0]
 8015940:	699b      	ldr	r3, [r3, #24]
 8015942:	3304      	adds	r3, #4
 8015944:	9303      	str	r3, [sp, #12]
 8015946:	4b65      	ldr	r3, [pc, #404]	@ (8015adc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1858>)
 8015948:	9304      	str	r3, [sp, #16]
 801594a:	4b65      	ldr	r3, [pc, #404]	@ (8015ae0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x185c>)
 801594c:	9305      	str	r3, [sp, #20]
 801594e:	4b5f      	ldr	r3, [pc, #380]	@ (8015acc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1848>)
 8015950:	9307      	str	r3, [sp, #28]
 8015952:	f001 bd26 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015956:	4b57      	ldr	r3, [pc, #348]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015958:	681b      	ldr	r3, [r3, #0]
 801595a:	699b      	ldr	r3, [r3, #24]
 801595c:	3308      	adds	r3, #8
 801595e:	9303      	str	r3, [sp, #12]
 8015960:	4b5b      	ldr	r3, [pc, #364]	@ (8015ad0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x184c>)
 8015962:	9304      	str	r3, [sp, #16]
 8015964:	4b5b      	ldr	r3, [pc, #364]	@ (8015ad4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1850>)
 8015966:	9305      	str	r3, [sp, #20]
 8015968:	4b5b      	ldr	r3, [pc, #364]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 801596a:	9307      	str	r3, [sp, #28]
 801596c:	f001 bd19 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015970:	4b50      	ldr	r3, [pc, #320]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015972:	681b      	ldr	r3, [r3, #0]
 8015974:	691b      	ldr	r3, [r3, #16]
 8015976:	3314      	adds	r3, #20
 8015978:	9303      	str	r3, [sp, #12]
 801597a:	4b5a      	ldr	r3, [pc, #360]	@ (8015ae4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1860>)
 801597c:	9304      	str	r3, [sp, #16]
 801597e:	4b5a      	ldr	r3, [pc, #360]	@ (8015ae8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1864>)
 8015980:	9305      	str	r3, [sp, #20]
 8015982:	4b5a      	ldr	r3, [pc, #360]	@ (8015aec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1868>)
 8015984:	9307      	str	r3, [sp, #28]
 8015986:	f001 bd0c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801598a:	4b4a      	ldr	r3, [pc, #296]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 801598c:	681b      	ldr	r3, [r3, #0]
 801598e:	691b      	ldr	r3, [r3, #16]
 8015990:	3340      	adds	r3, #64	@ 0x40
 8015992:	9303      	str	r3, [sp, #12]
 8015994:	4b56      	ldr	r3, [pc, #344]	@ (8015af0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x186c>)
 8015996:	9304      	str	r3, [sp, #16]
 8015998:	4b56      	ldr	r3, [pc, #344]	@ (8015af4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1870>)
 801599a:	9305      	str	r3, [sp, #20]
 801599c:	4b56      	ldr	r3, [pc, #344]	@ (8015af8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1874>)
 801599e:	9307      	str	r3, [sp, #28]
 80159a0:	f001 bcff 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80159a4:	4b43      	ldr	r3, [pc, #268]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80159a6:	681b      	ldr	r3, [r3, #0]
 80159a8:	691b      	ldr	r3, [r3, #16]
 80159aa:	68db      	ldr	r3, [r3, #12]
 80159ac:	9303      	str	r3, [sp, #12]
 80159ae:	4b53      	ldr	r3, [pc, #332]	@ (8015afc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1878>)
 80159b0:	9304      	str	r3, [sp, #16]
 80159b2:	4b53      	ldr	r3, [pc, #332]	@ (8015b00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x187c>)
 80159b4:	9305      	str	r3, [sp, #20]
 80159b6:	4b53      	ldr	r3, [pc, #332]	@ (8015b04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1880>)
 80159b8:	9307      	str	r3, [sp, #28]
 80159ba:	f001 bcf2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80159be:	4b3d      	ldr	r3, [pc, #244]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80159c0:	681b      	ldr	r3, [r3, #0]
 80159c2:	691b      	ldr	r3, [r3, #16]
 80159c4:	68db      	ldr	r3, [r3, #12]
 80159c6:	9303      	str	r3, [sp, #12]
 80159c8:	4b4f      	ldr	r3, [pc, #316]	@ (8015b08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1884>)
 80159ca:	9304      	str	r3, [sp, #16]
 80159cc:	4b4f      	ldr	r3, [pc, #316]	@ (8015b0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1888>)
 80159ce:	9305      	str	r3, [sp, #20]
 80159d0:	4b41      	ldr	r3, [pc, #260]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 80159d2:	9307      	str	r3, [sp, #28]
 80159d4:	f001 bce5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80159d8:	4b36      	ldr	r3, [pc, #216]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80159da:	681b      	ldr	r3, [r3, #0]
 80159dc:	691b      	ldr	r3, [r3, #16]
 80159de:	68db      	ldr	r3, [r3, #12]
 80159e0:	9303      	str	r3, [sp, #12]
 80159e2:	4b4b      	ldr	r3, [pc, #300]	@ (8015b10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x188c>)
 80159e4:	9304      	str	r3, [sp, #16]
 80159e6:	4b4b      	ldr	r3, [pc, #300]	@ (8015b14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1890>)
 80159e8:	9305      	str	r3, [sp, #20]
 80159ea:	4b3b      	ldr	r3, [pc, #236]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 80159ec:	9307      	str	r3, [sp, #28]
 80159ee:	f001 bcd8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80159f2:	4b30      	ldr	r3, [pc, #192]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 80159f4:	681b      	ldr	r3, [r3, #0]
 80159f6:	691b      	ldr	r3, [r3, #16]
 80159f8:	68db      	ldr	r3, [r3, #12]
 80159fa:	9303      	str	r3, [sp, #12]
 80159fc:	4b46      	ldr	r3, [pc, #280]	@ (8015b18 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1894>)
 80159fe:	9304      	str	r3, [sp, #16]
 8015a00:	4b46      	ldr	r3, [pc, #280]	@ (8015b1c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1898>)
 8015a02:	9305      	str	r3, [sp, #20]
 8015a04:	4b46      	ldr	r3, [pc, #280]	@ (8015b20 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x189c>)
 8015a06:	9307      	str	r3, [sp, #28]
 8015a08:	f001 bccb 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a0c:	4b29      	ldr	r3, [pc, #164]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a0e:	681b      	ldr	r3, [r3, #0]
 8015a10:	691b      	ldr	r3, [r3, #16]
 8015a12:	68db      	ldr	r3, [r3, #12]
 8015a14:	3304      	adds	r3, #4
 8015a16:	9303      	str	r3, [sp, #12]
 8015a18:	4b2d      	ldr	r3, [pc, #180]	@ (8015ad0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x184c>)
 8015a1a:	9304      	str	r3, [sp, #16]
 8015a1c:	4b2d      	ldr	r3, [pc, #180]	@ (8015ad4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1850>)
 8015a1e:	9305      	str	r3, [sp, #20]
 8015a20:	4b2d      	ldr	r3, [pc, #180]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 8015a22:	9307      	str	r3, [sp, #28]
 8015a24:	f001 bcbd 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a28:	4b22      	ldr	r3, [pc, #136]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a2a:	681b      	ldr	r3, [r3, #0]
 8015a2c:	691b      	ldr	r3, [r3, #16]
 8015a2e:	68db      	ldr	r3, [r3, #12]
 8015a30:	3308      	adds	r3, #8
 8015a32:	9303      	str	r3, [sp, #12]
 8015a34:	4b2e      	ldr	r3, [pc, #184]	@ (8015af0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x186c>)
 8015a36:	9304      	str	r3, [sp, #16]
 8015a38:	4b2e      	ldr	r3, [pc, #184]	@ (8015af4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1870>)
 8015a3a:	9305      	str	r3, [sp, #20]
 8015a3c:	4b2e      	ldr	r3, [pc, #184]	@ (8015af8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1874>)
 8015a3e:	9307      	str	r3, [sp, #28]
 8015a40:	f001 bcaf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a44:	4b1b      	ldr	r3, [pc, #108]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a46:	681b      	ldr	r3, [r3, #0]
 8015a48:	691b      	ldr	r3, [r3, #16]
 8015a4a:	68db      	ldr	r3, [r3, #12]
 8015a4c:	330c      	adds	r3, #12
 8015a4e:	9303      	str	r3, [sp, #12]
 8015a50:	4b27      	ldr	r3, [pc, #156]	@ (8015af0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x186c>)
 8015a52:	9304      	str	r3, [sp, #16]
 8015a54:	4b27      	ldr	r3, [pc, #156]	@ (8015af4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1870>)
 8015a56:	9305      	str	r3, [sp, #20]
 8015a58:	4b27      	ldr	r3, [pc, #156]	@ (8015af8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1874>)
 8015a5a:	9307      	str	r3, [sp, #28]
 8015a5c:	f001 bca1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a60:	4b14      	ldr	r3, [pc, #80]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a62:	681b      	ldr	r3, [r3, #0]
 8015a64:	691b      	ldr	r3, [r3, #16]
 8015a66:	68db      	ldr	r3, [r3, #12]
 8015a68:	9303      	str	r3, [sp, #12]
 8015a6a:	4b2e      	ldr	r3, [pc, #184]	@ (8015b24 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x18a0>)
 8015a6c:	9304      	str	r3, [sp, #16]
 8015a6e:	4b2e      	ldr	r3, [pc, #184]	@ (8015b28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x18a4>)
 8015a70:	9305      	str	r3, [sp, #20]
 8015a72:	4b19      	ldr	r3, [pc, #100]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 8015a74:	9307      	str	r3, [sp, #28]
 8015a76:	f001 bc94 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a7a:	4b0e      	ldr	r3, [pc, #56]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a7c:	681b      	ldr	r3, [r3, #0]
 8015a7e:	691b      	ldr	r3, [r3, #16]
 8015a80:	68db      	ldr	r3, [r3, #12]
 8015a82:	3310      	adds	r3, #16
 8015a84:	9303      	str	r3, [sp, #12]
 8015a86:	4b15      	ldr	r3, [pc, #84]	@ (8015adc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1858>)
 8015a88:	9304      	str	r3, [sp, #16]
 8015a8a:	4b15      	ldr	r3, [pc, #84]	@ (8015ae0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x185c>)
 8015a8c:	9305      	str	r3, [sp, #20]
 8015a8e:	4b0f      	ldr	r3, [pc, #60]	@ (8015acc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1848>)
 8015a90:	9307      	str	r3, [sp, #28]
 8015a92:	f001 bc86 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015a96:	4b07      	ldr	r3, [pc, #28]	@ (8015ab4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1830>)
 8015a98:	681b      	ldr	r3, [r3, #0]
 8015a9a:	691b      	ldr	r3, [r3, #16]
 8015a9c:	68db      	ldr	r3, [r3, #12]
 8015a9e:	3314      	adds	r3, #20
 8015aa0:	9303      	str	r3, [sp, #12]
 8015aa2:	4b0b      	ldr	r3, [pc, #44]	@ (8015ad0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x184c>)
 8015aa4:	9304      	str	r3, [sp, #16]
 8015aa6:	4b0b      	ldr	r3, [pc, #44]	@ (8015ad4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1850>)
 8015aa8:	9305      	str	r3, [sp, #20]
 8015aaa:	4b0b      	ldr	r3, [pc, #44]	@ (8015ad8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1854>)
 8015aac:	9307      	str	r3, [sp, #28]
 8015aae:	f001 bc78 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015ab2:	bf00      	nop
 8015ab4:	200019cc 	.word	0x200019cc
 8015ab8:	080128dd 	.word	0x080128dd
 8015abc:	080128e1 	.word	0x080128e1
 8015ac0:	20008d24 	.word	0x20008d24
 8015ac4:	08013059 	.word	0x08013059
 8015ac8:	0801e209 	.word	0x0801e209
 8015acc:	20008e3c 	.word	0x20008e3c
 8015ad0:	0801285d 	.word	0x0801285d
 8015ad4:	08012861 	.word	0x08012861
 8015ad8:	20008e28 	.word	0x20008e28
 8015adc:	0801283d 	.word	0x0801283d
 8015ae0:	08012845 	.word	0x08012845
 8015ae4:	080128e5 	.word	0x080128e5
 8015ae8:	080128e9 	.word	0x080128e9
 8015aec:	20008d10 	.word	0x20008d10
 8015af0:	080128b5 	.word	0x080128b5
 8015af4:	080128b9 	.word	0x080128b9
 8015af8:	20008d88 	.word	0x20008d88
 8015afc:	080128f1 	.word	0x080128f1
 8015b00:	080128f5 	.word	0x080128f5
 8015b04:	20008cfc 	.word	0x20008cfc
 8015b08:	0801304d 	.word	0x0801304d
 8015b0c:	0801e221 	.word	0x0801e221
 8015b10:	08013045 	.word	0x08013045
 8015b14:	0801e241 	.word	0x0801e241
 8015b18:	08013039 	.word	0x08013039
 8015b1c:	0801e259 	.word	0x0801e259
 8015b20:	20008dc4 	.word	0x20008dc4
 8015b24:	08013031 	.word	0x08013031
 8015b28:	0801e271 	.word	0x0801e271
 8015b2c:	4b87      	ldr	r3, [pc, #540]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015b2e:	681b      	ldr	r3, [r3, #0]
 8015b30:	691b      	ldr	r3, [r3, #16]
 8015b32:	68db      	ldr	r3, [r3, #12]
 8015b34:	9303      	str	r3, [sp, #12]
 8015b36:	4b86      	ldr	r3, [pc, #536]	@ (8015d50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1acc>)
 8015b38:	9304      	str	r3, [sp, #16]
 8015b3a:	4b86      	ldr	r3, [pc, #536]	@ (8015d54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad0>)
 8015b3c:	9305      	str	r3, [sp, #20]
 8015b3e:	4b86      	ldr	r3, [pc, #536]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015b40:	9307      	str	r3, [sp, #28]
 8015b42:	f001 bc2e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015b46:	4b81      	ldr	r3, [pc, #516]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015b48:	681b      	ldr	r3, [r3, #0]
 8015b4a:	691b      	ldr	r3, [r3, #16]
 8015b4c:	68db      	ldr	r3, [r3, #12]
 8015b4e:	3318      	adds	r3, #24
 8015b50:	9303      	str	r3, [sp, #12]
 8015b52:	4b82      	ldr	r3, [pc, #520]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015b54:	9304      	str	r3, [sp, #16]
 8015b56:	4b82      	ldr	r3, [pc, #520]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015b58:	9305      	str	r3, [sp, #20]
 8015b5a:	4b7f      	ldr	r3, [pc, #508]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015b5c:	9307      	str	r3, [sp, #28]
 8015b5e:	f001 bc20 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015b62:	4b7a      	ldr	r3, [pc, #488]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015b64:	681b      	ldr	r3, [r3, #0]
 8015b66:	691b      	ldr	r3, [r3, #16]
 8015b68:	68db      	ldr	r3, [r3, #12]
 8015b6a:	331c      	adds	r3, #28
 8015b6c:	9303      	str	r3, [sp, #12]
 8015b6e:	4b7b      	ldr	r3, [pc, #492]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015b70:	9304      	str	r3, [sp, #16]
 8015b72:	4b7b      	ldr	r3, [pc, #492]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015b74:	9305      	str	r3, [sp, #20]
 8015b76:	4b78      	ldr	r3, [pc, #480]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015b78:	9307      	str	r3, [sp, #28]
 8015b7a:	f001 bc12 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015b7e:	4b73      	ldr	r3, [pc, #460]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015b80:	681b      	ldr	r3, [r3, #0]
 8015b82:	691b      	ldr	r3, [r3, #16]
 8015b84:	68db      	ldr	r3, [r3, #12]
 8015b86:	3320      	adds	r3, #32
 8015b88:	9303      	str	r3, [sp, #12]
 8015b8a:	4b74      	ldr	r3, [pc, #464]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015b8c:	9304      	str	r3, [sp, #16]
 8015b8e:	4b74      	ldr	r3, [pc, #464]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015b90:	9305      	str	r3, [sp, #20]
 8015b92:	4b71      	ldr	r3, [pc, #452]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015b94:	9307      	str	r3, [sp, #28]
 8015b96:	f001 bc04 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015b9a:	4b6c      	ldr	r3, [pc, #432]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015b9c:	681b      	ldr	r3, [r3, #0]
 8015b9e:	691b      	ldr	r3, [r3, #16]
 8015ba0:	68db      	ldr	r3, [r3, #12]
 8015ba2:	3329      	adds	r3, #41	@ 0x29
 8015ba4:	9303      	str	r3, [sp, #12]
 8015ba6:	4b6f      	ldr	r3, [pc, #444]	@ (8015d64 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae0>)
 8015ba8:	9304      	str	r3, [sp, #16]
 8015baa:	4b6f      	ldr	r3, [pc, #444]	@ (8015d68 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae4>)
 8015bac:	9305      	str	r3, [sp, #20]
 8015bae:	4b6f      	ldr	r3, [pc, #444]	@ (8015d6c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae8>)
 8015bb0:	9307      	str	r3, [sp, #28]
 8015bb2:	f001 bbf6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015bb6:	4b65      	ldr	r3, [pc, #404]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015bb8:	681b      	ldr	r3, [r3, #0]
 8015bba:	691b      	ldr	r3, [r3, #16]
 8015bbc:	68db      	ldr	r3, [r3, #12]
 8015bbe:	332a      	adds	r3, #42	@ 0x2a
 8015bc0:	9303      	str	r3, [sp, #12]
 8015bc2:	4b68      	ldr	r3, [pc, #416]	@ (8015d64 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae0>)
 8015bc4:	9304      	str	r3, [sp, #16]
 8015bc6:	4b68      	ldr	r3, [pc, #416]	@ (8015d68 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae4>)
 8015bc8:	9305      	str	r3, [sp, #20]
 8015bca:	4b68      	ldr	r3, [pc, #416]	@ (8015d6c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ae8>)
 8015bcc:	9307      	str	r3, [sp, #28]
 8015bce:	f001 bbe8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015bd2:	4b5e      	ldr	r3, [pc, #376]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015bd4:	681b      	ldr	r3, [r3, #0]
 8015bd6:	691b      	ldr	r3, [r3, #16]
 8015bd8:	68db      	ldr	r3, [r3, #12]
 8015bda:	332e      	adds	r3, #46	@ 0x2e
 8015bdc:	9303      	str	r3, [sp, #12]
 8015bde:	4b64      	ldr	r3, [pc, #400]	@ (8015d70 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1aec>)
 8015be0:	9304      	str	r3, [sp, #16]
 8015be2:	4b64      	ldr	r3, [pc, #400]	@ (8015d74 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af0>)
 8015be4:	9305      	str	r3, [sp, #20]
 8015be6:	4b64      	ldr	r3, [pc, #400]	@ (8015d78 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af4>)
 8015be8:	9307      	str	r3, [sp, #28]
 8015bea:	f001 bbda 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015bee:	4b57      	ldr	r3, [pc, #348]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015bf0:	681b      	ldr	r3, [r3, #0]
 8015bf2:	691b      	ldr	r3, [r3, #16]
 8015bf4:	68db      	ldr	r3, [r3, #12]
 8015bf6:	3330      	adds	r3, #48	@ 0x30
 8015bf8:	9303      	str	r3, [sp, #12]
 8015bfa:	4b5d      	ldr	r3, [pc, #372]	@ (8015d70 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1aec>)
 8015bfc:	9304      	str	r3, [sp, #16]
 8015bfe:	4b5d      	ldr	r3, [pc, #372]	@ (8015d74 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af0>)
 8015c00:	9305      	str	r3, [sp, #20]
 8015c02:	4b5d      	ldr	r3, [pc, #372]	@ (8015d78 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af4>)
 8015c04:	9307      	str	r3, [sp, #28]
 8015c06:	f001 bbcc 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c0a:	4b50      	ldr	r3, [pc, #320]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c0c:	681b      	ldr	r3, [r3, #0]
 8015c0e:	691b      	ldr	r3, [r3, #16]
 8015c10:	3304      	adds	r3, #4
 8015c12:	9303      	str	r3, [sp, #12]
 8015c14:	4b59      	ldr	r3, [pc, #356]	@ (8015d7c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af8>)
 8015c16:	9304      	str	r3, [sp, #16]
 8015c18:	4b59      	ldr	r3, [pc, #356]	@ (8015d80 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1afc>)
 8015c1a:	9305      	str	r3, [sp, #20]
 8015c1c:	4b59      	ldr	r3, [pc, #356]	@ (8015d84 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b00>)
 8015c1e:	9307      	str	r3, [sp, #28]
 8015c20:	f001 bbbf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c24:	4b49      	ldr	r3, [pc, #292]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c26:	681b      	ldr	r3, [r3, #0]
 8015c28:	695b      	ldr	r3, [r3, #20]
 8015c2a:	3308      	adds	r3, #8
 8015c2c:	9303      	str	r3, [sp, #12]
 8015c2e:	4b56      	ldr	r3, [pc, #344]	@ (8015d88 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b04>)
 8015c30:	9304      	str	r3, [sp, #16]
 8015c32:	4b56      	ldr	r3, [pc, #344]	@ (8015d8c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b08>)
 8015c34:	9305      	str	r3, [sp, #20]
 8015c36:	4b56      	ldr	r3, [pc, #344]	@ (8015d90 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b0c>)
 8015c38:	9307      	str	r3, [sp, #28]
 8015c3a:	f001 bbb2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c3e:	4b43      	ldr	r3, [pc, #268]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c40:	681b      	ldr	r3, [r3, #0]
 8015c42:	695b      	ldr	r3, [r3, #20]
 8015c44:	330c      	adds	r3, #12
 8015c46:	9303      	str	r3, [sp, #12]
 8015c48:	4b44      	ldr	r3, [pc, #272]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015c4a:	9304      	str	r3, [sp, #16]
 8015c4c:	4b44      	ldr	r3, [pc, #272]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015c4e:	9305      	str	r3, [sp, #20]
 8015c50:	4b41      	ldr	r3, [pc, #260]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015c52:	9307      	str	r3, [sp, #28]
 8015c54:	f001 bba5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c58:	4b3c      	ldr	r3, [pc, #240]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c5a:	681b      	ldr	r3, [r3, #0]
 8015c5c:	695b      	ldr	r3, [r3, #20]
 8015c5e:	3310      	adds	r3, #16
 8015c60:	9303      	str	r3, [sp, #12]
 8015c62:	4b3e      	ldr	r3, [pc, #248]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015c64:	9304      	str	r3, [sp, #16]
 8015c66:	4b3e      	ldr	r3, [pc, #248]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015c68:	9305      	str	r3, [sp, #20]
 8015c6a:	4b3b      	ldr	r3, [pc, #236]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015c6c:	9307      	str	r3, [sp, #28]
 8015c6e:	f001 bb98 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c72:	4b36      	ldr	r3, [pc, #216]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c74:	681b      	ldr	r3, [r3, #0]
 8015c76:	695b      	ldr	r3, [r3, #20]
 8015c78:	3314      	adds	r3, #20
 8015c7a:	9303      	str	r3, [sp, #12]
 8015c7c:	4b37      	ldr	r3, [pc, #220]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015c7e:	9304      	str	r3, [sp, #16]
 8015c80:	4b37      	ldr	r3, [pc, #220]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015c82:	9305      	str	r3, [sp, #20]
 8015c84:	4b34      	ldr	r3, [pc, #208]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015c86:	9307      	str	r3, [sp, #28]
 8015c88:	f001 bb8b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015c8c:	4b2f      	ldr	r3, [pc, #188]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015c8e:	681b      	ldr	r3, [r3, #0]
 8015c90:	695b      	ldr	r3, [r3, #20]
 8015c92:	685b      	ldr	r3, [r3, #4]
 8015c94:	9303      	str	r3, [sp, #12]
 8015c96:	4b31      	ldr	r3, [pc, #196]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015c98:	9304      	str	r3, [sp, #16]
 8015c9a:	4b31      	ldr	r3, [pc, #196]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015c9c:	9305      	str	r3, [sp, #20]
 8015c9e:	4b2e      	ldr	r3, [pc, #184]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015ca0:	9307      	str	r3, [sp, #28]
 8015ca2:	f001 bb7e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015ca6:	4b29      	ldr	r3, [pc, #164]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015ca8:	681b      	ldr	r3, [r3, #0]
 8015caa:	695b      	ldr	r3, [r3, #20]
 8015cac:	685b      	ldr	r3, [r3, #4]
 8015cae:	3304      	adds	r3, #4
 8015cb0:	9303      	str	r3, [sp, #12]
 8015cb2:	4b2a      	ldr	r3, [pc, #168]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015cb4:	9304      	str	r3, [sp, #16]
 8015cb6:	4b2a      	ldr	r3, [pc, #168]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015cb8:	9305      	str	r3, [sp, #20]
 8015cba:	4b27      	ldr	r3, [pc, #156]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015cbc:	9307      	str	r3, [sp, #28]
 8015cbe:	f001 bb70 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015cc2:	4b22      	ldr	r3, [pc, #136]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015cc4:	681b      	ldr	r3, [r3, #0]
 8015cc6:	695b      	ldr	r3, [r3, #20]
 8015cc8:	685b      	ldr	r3, [r3, #4]
 8015cca:	3308      	adds	r3, #8
 8015ccc:	9303      	str	r3, [sp, #12]
 8015cce:	4b23      	ldr	r3, [pc, #140]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015cd0:	9304      	str	r3, [sp, #16]
 8015cd2:	4b23      	ldr	r3, [pc, #140]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015cd4:	9305      	str	r3, [sp, #20]
 8015cd6:	4b20      	ldr	r3, [pc, #128]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015cd8:	9307      	str	r3, [sp, #28]
 8015cda:	f001 bb62 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015cde:	4b1b      	ldr	r3, [pc, #108]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015ce0:	681b      	ldr	r3, [r3, #0]
 8015ce2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015ce4:	685b      	ldr	r3, [r3, #4]
 8015ce6:	9303      	str	r3, [sp, #12]
 8015ce8:	4b1c      	ldr	r3, [pc, #112]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015cea:	9304      	str	r3, [sp, #16]
 8015cec:	4b1c      	ldr	r3, [pc, #112]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015cee:	9305      	str	r3, [sp, #20]
 8015cf0:	4b19      	ldr	r3, [pc, #100]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015cf2:	9307      	str	r3, [sp, #28]
 8015cf4:	f001 bb55 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015cf8:	4b14      	ldr	r3, [pc, #80]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015cfa:	681b      	ldr	r3, [r3, #0]
 8015cfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015cfe:	685b      	ldr	r3, [r3, #4]
 8015d00:	3304      	adds	r3, #4
 8015d02:	9303      	str	r3, [sp, #12]
 8015d04:	4b15      	ldr	r3, [pc, #84]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015d06:	9304      	str	r3, [sp, #16]
 8015d08:	4b15      	ldr	r3, [pc, #84]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015d0a:	9305      	str	r3, [sp, #20]
 8015d0c:	4b12      	ldr	r3, [pc, #72]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015d0e:	9307      	str	r3, [sp, #28]
 8015d10:	f001 bb47 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015d14:	4b0d      	ldr	r3, [pc, #52]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015d16:	681b      	ldr	r3, [r3, #0]
 8015d18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015d1a:	685b      	ldr	r3, [r3, #4]
 8015d1c:	3308      	adds	r3, #8
 8015d1e:	9303      	str	r3, [sp, #12]
 8015d20:	4b0e      	ldr	r3, [pc, #56]	@ (8015d5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad8>)
 8015d22:	9304      	str	r3, [sp, #16]
 8015d24:	4b0e      	ldr	r3, [pc, #56]	@ (8015d60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1adc>)
 8015d26:	9305      	str	r3, [sp, #20]
 8015d28:	4b0b      	ldr	r3, [pc, #44]	@ (8015d58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ad4>)
 8015d2a:	9307      	str	r3, [sp, #28]
 8015d2c:	f001 bb39 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015d30:	4b06      	ldr	r3, [pc, #24]	@ (8015d4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ac8>)
 8015d32:	681b      	ldr	r3, [r3, #0]
 8015d34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015d36:	681b      	ldr	r3, [r3, #0]
 8015d38:	9303      	str	r3, [sp, #12]
 8015d3a:	4b16      	ldr	r3, [pc, #88]	@ (8015d94 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b10>)
 8015d3c:	9304      	str	r3, [sp, #16]
 8015d3e:	4b16      	ldr	r3, [pc, #88]	@ (8015d98 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1b14>)
 8015d40:	9305      	str	r3, [sp, #20]
 8015d42:	4b0d      	ldr	r3, [pc, #52]	@ (8015d78 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1af4>)
 8015d44:	9307      	str	r3, [sp, #28]
 8015d46:	f001 bb2c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015d4a:	bf00      	nop
 8015d4c:	200019cc 	.word	0x200019cc
 8015d50:	08013029 	.word	0x08013029
 8015d54:	0801e28d 	.word	0x0801e28d
 8015d58:	20008e3c 	.word	0x20008e3c
 8015d5c:	0801283d 	.word	0x0801283d
 8015d60:	08012845 	.word	0x08012845
 8015d64:	0801285d 	.word	0x0801285d
 8015d68:	08012861 	.word	0x08012861
 8015d6c:	20008e28 	.word	0x20008e28
 8015d70:	080128f9 	.word	0x080128f9
 8015d74:	080128fd 	.word	0x080128fd
 8015d78:	20008dc4 	.word	0x20008dc4
 8015d7c:	080128b5 	.word	0x080128b5
 8015d80:	080128b9 	.word	0x080128b9
 8015d84:	20008d88 	.word	0x20008d88
 8015d88:	08012901 	.word	0x08012901
 8015d8c:	08012905 	.word	0x08012905
 8015d90:	20008ce8 	.word	0x20008ce8
 8015d94:	0801301d 	.word	0x0801301d
 8015d98:	0801e2a1 	.word	0x0801e2a1
 8015d9c:	4b88      	ldr	r3, [pc, #544]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015d9e:	681b      	ldr	r3, [r3, #0]
 8015da0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015da2:	681b      	ldr	r3, [r3, #0]
 8015da4:	9303      	str	r3, [sp, #12]
 8015da6:	4b87      	ldr	r3, [pc, #540]	@ (8015fc4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d40>)
 8015da8:	9304      	str	r3, [sp, #16]
 8015daa:	4b87      	ldr	r3, [pc, #540]	@ (8015fc8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d44>)
 8015dac:	9305      	str	r3, [sp, #20]
 8015dae:	4b87      	ldr	r3, [pc, #540]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015db0:	9307      	str	r3, [sp, #28]
 8015db2:	f001 baf6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015db6:	4b82      	ldr	r3, [pc, #520]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015db8:	681b      	ldr	r3, [r3, #0]
 8015dba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015dbc:	681b      	ldr	r3, [r3, #0]
 8015dbe:	9303      	str	r3, [sp, #12]
 8015dc0:	4b83      	ldr	r3, [pc, #524]	@ (8015fd0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d4c>)
 8015dc2:	9304      	str	r3, [sp, #16]
 8015dc4:	4b83      	ldr	r3, [pc, #524]	@ (8015fd4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d50>)
 8015dc6:	9305      	str	r3, [sp, #20]
 8015dc8:	4b83      	ldr	r3, [pc, #524]	@ (8015fd8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d54>)
 8015dca:	9307      	str	r3, [sp, #28]
 8015dcc:	f001 bae9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015dd0:	4b7b      	ldr	r3, [pc, #492]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015dd2:	681b      	ldr	r3, [r3, #0]
 8015dd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015dd6:	681b      	ldr	r3, [r3, #0]
 8015dd8:	330b      	adds	r3, #11
 8015dda:	9303      	str	r3, [sp, #12]
 8015ddc:	4b7f      	ldr	r3, [pc, #508]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015dde:	9304      	str	r3, [sp, #16]
 8015de0:	4b7f      	ldr	r3, [pc, #508]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015de2:	9305      	str	r3, [sp, #20]
 8015de4:	4b79      	ldr	r3, [pc, #484]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015de6:	9307      	str	r3, [sp, #28]
 8015de8:	f001 badb 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015dec:	4b74      	ldr	r3, [pc, #464]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015dee:	681b      	ldr	r3, [r3, #0]
 8015df0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015df2:	681b      	ldr	r3, [r3, #0]
 8015df4:	330c      	adds	r3, #12
 8015df6:	9303      	str	r3, [sp, #12]
 8015df8:	4b78      	ldr	r3, [pc, #480]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015dfa:	9304      	str	r3, [sp, #16]
 8015dfc:	4b78      	ldr	r3, [pc, #480]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015dfe:	9305      	str	r3, [sp, #20]
 8015e00:	4b72      	ldr	r3, [pc, #456]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015e02:	9307      	str	r3, [sp, #28]
 8015e04:	f001 bacd 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e08:	4b6d      	ldr	r3, [pc, #436]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e0a:	681b      	ldr	r3, [r3, #0]
 8015e0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015e0e:	681b      	ldr	r3, [r3, #0]
 8015e10:	9303      	str	r3, [sp, #12]
 8015e12:	4b74      	ldr	r3, [pc, #464]	@ (8015fe4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d60>)
 8015e14:	9304      	str	r3, [sp, #16]
 8015e16:	4b74      	ldr	r3, [pc, #464]	@ (8015fe8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d64>)
 8015e18:	9305      	str	r3, [sp, #20]
 8015e1a:	4b74      	ldr	r3, [pc, #464]	@ (8015fec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d68>)
 8015e1c:	9307      	str	r3, [sp, #28]
 8015e1e:	f001 bac0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e22:	4b67      	ldr	r3, [pc, #412]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e24:	681b      	ldr	r3, [r3, #0]
 8015e26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e28:	681b      	ldr	r3, [r3, #0]
 8015e2a:	9303      	str	r3, [sp, #12]
 8015e2c:	4b70      	ldr	r3, [pc, #448]	@ (8015ff0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d6c>)
 8015e2e:	9304      	str	r3, [sp, #16]
 8015e30:	4b70      	ldr	r3, [pc, #448]	@ (8015ff4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d70>)
 8015e32:	9305      	str	r3, [sp, #20]
 8015e34:	4b70      	ldr	r3, [pc, #448]	@ (8015ff8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d74>)
 8015e36:	9307      	str	r3, [sp, #28]
 8015e38:	f001 bab3 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e3c:	4b60      	ldr	r3, [pc, #384]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e3e:	681b      	ldr	r3, [r3, #0]
 8015e40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e42:	681b      	ldr	r3, [r3, #0]
 8015e44:	9303      	str	r3, [sp, #12]
 8015e46:	4b5f      	ldr	r3, [pc, #380]	@ (8015fc4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d40>)
 8015e48:	9304      	str	r3, [sp, #16]
 8015e4a:	4b5f      	ldr	r3, [pc, #380]	@ (8015fc8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d44>)
 8015e4c:	9305      	str	r3, [sp, #20]
 8015e4e:	4b5f      	ldr	r3, [pc, #380]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015e50:	9307      	str	r3, [sp, #28]
 8015e52:	f001 baa6 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e56:	4b5a      	ldr	r3, [pc, #360]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e58:	681b      	ldr	r3, [r3, #0]
 8015e5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e5c:	681b      	ldr	r3, [r3, #0]
 8015e5e:	9303      	str	r3, [sp, #12]
 8015e60:	4b5b      	ldr	r3, [pc, #364]	@ (8015fd0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d4c>)
 8015e62:	9304      	str	r3, [sp, #16]
 8015e64:	4b5b      	ldr	r3, [pc, #364]	@ (8015fd4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d50>)
 8015e66:	9305      	str	r3, [sp, #20]
 8015e68:	4b5b      	ldr	r3, [pc, #364]	@ (8015fd8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d54>)
 8015e6a:	9307      	str	r3, [sp, #28]
 8015e6c:	f001 ba99 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e70:	4b53      	ldr	r3, [pc, #332]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e72:	681b      	ldr	r3, [r3, #0]
 8015e74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e76:	681b      	ldr	r3, [r3, #0]
 8015e78:	330b      	adds	r3, #11
 8015e7a:	9303      	str	r3, [sp, #12]
 8015e7c:	4b57      	ldr	r3, [pc, #348]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015e7e:	9304      	str	r3, [sp, #16]
 8015e80:	4b57      	ldr	r3, [pc, #348]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015e82:	9305      	str	r3, [sp, #20]
 8015e84:	4b51      	ldr	r3, [pc, #324]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015e86:	9307      	str	r3, [sp, #28]
 8015e88:	f001 ba8b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015e8c:	4b4c      	ldr	r3, [pc, #304]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015e8e:	681b      	ldr	r3, [r3, #0]
 8015e90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e92:	681b      	ldr	r3, [r3, #0]
 8015e94:	330c      	adds	r3, #12
 8015e96:	9303      	str	r3, [sp, #12]
 8015e98:	4b50      	ldr	r3, [pc, #320]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015e9a:	9304      	str	r3, [sp, #16]
 8015e9c:	4b50      	ldr	r3, [pc, #320]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015e9e:	9305      	str	r3, [sp, #20]
 8015ea0:	4b4a      	ldr	r3, [pc, #296]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015ea2:	9307      	str	r3, [sp, #28]
 8015ea4:	f001 ba7d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015ea8:	4b45      	ldr	r3, [pc, #276]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015eaa:	681b      	ldr	r3, [r3, #0]
 8015eac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015eae:	681b      	ldr	r3, [r3, #0]
 8015eb0:	9303      	str	r3, [sp, #12]
 8015eb2:	4b4c      	ldr	r3, [pc, #304]	@ (8015fe4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d60>)
 8015eb4:	9304      	str	r3, [sp, #16]
 8015eb6:	4b4c      	ldr	r3, [pc, #304]	@ (8015fe8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d64>)
 8015eb8:	9305      	str	r3, [sp, #20]
 8015eba:	4b4c      	ldr	r3, [pc, #304]	@ (8015fec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d68>)
 8015ebc:	9307      	str	r3, [sp, #28]
 8015ebe:	f001 ba70 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015ec2:	4b3f      	ldr	r3, [pc, #252]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015ec4:	685b      	ldr	r3, [r3, #4]
 8015ec6:	3350      	adds	r3, #80	@ 0x50
 8015ec8:	9303      	str	r3, [sp, #12]
 8015eca:	4b4c      	ldr	r3, [pc, #304]	@ (8015ffc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d78>)
 8015ecc:	9304      	str	r3, [sp, #16]
 8015ece:	4b4c      	ldr	r3, [pc, #304]	@ (8016000 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d7c>)
 8015ed0:	9305      	str	r3, [sp, #20]
 8015ed2:	4b4c      	ldr	r3, [pc, #304]	@ (8016004 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d80>)
 8015ed4:	9307      	str	r3, [sp, #28]
 8015ed6:	f001 ba64 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015eda:	4b39      	ldr	r3, [pc, #228]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015edc:	685b      	ldr	r3, [r3, #4]
 8015ede:	3366      	adds	r3, #102	@ 0x66
 8015ee0:	9303      	str	r3, [sp, #12]
 8015ee2:	4b49      	ldr	r3, [pc, #292]	@ (8016008 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d84>)
 8015ee4:	9304      	str	r3, [sp, #16]
 8015ee6:	4b49      	ldr	r3, [pc, #292]	@ (801600c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d88>)
 8015ee8:	9305      	str	r3, [sp, #20]
 8015eea:	4b49      	ldr	r3, [pc, #292]	@ (8016010 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d8c>)
 8015eec:	9307      	str	r3, [sp, #28]
 8015eee:	f001 ba58 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015ef2:	4b33      	ldr	r3, [pc, #204]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015ef4:	685b      	ldr	r3, [r3, #4]
 8015ef6:	337d      	adds	r3, #125	@ 0x7d
 8015ef8:	9303      	str	r3, [sp, #12]
 8015efa:	4b38      	ldr	r3, [pc, #224]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015efc:	9304      	str	r3, [sp, #16]
 8015efe:	4b38      	ldr	r3, [pc, #224]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f00:	9305      	str	r3, [sp, #20]
 8015f02:	4b32      	ldr	r3, [pc, #200]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f04:	9307      	str	r3, [sp, #28]
 8015f06:	f001 ba4c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f0a:	4b2d      	ldr	r3, [pc, #180]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f0c:	685b      	ldr	r3, [r3, #4]
 8015f0e:	68db      	ldr	r3, [r3, #12]
 8015f10:	9303      	str	r3, [sp, #12]
 8015f12:	4b32      	ldr	r3, [pc, #200]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f14:	9304      	str	r3, [sp, #16]
 8015f16:	4b32      	ldr	r3, [pc, #200]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f18:	9305      	str	r3, [sp, #20]
 8015f1a:	4b2c      	ldr	r3, [pc, #176]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f1c:	9307      	str	r3, [sp, #28]
 8015f1e:	f001 ba40 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f22:	4b27      	ldr	r3, [pc, #156]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f24:	685b      	ldr	r3, [r3, #4]
 8015f26:	68db      	ldr	r3, [r3, #12]
 8015f28:	3301      	adds	r3, #1
 8015f2a:	9303      	str	r3, [sp, #12]
 8015f2c:	4b2b      	ldr	r3, [pc, #172]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f2e:	9304      	str	r3, [sp, #16]
 8015f30:	4b2b      	ldr	r3, [pc, #172]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f32:	9305      	str	r3, [sp, #20]
 8015f34:	4b25      	ldr	r3, [pc, #148]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f36:	9307      	str	r3, [sp, #28]
 8015f38:	f001 ba33 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f3c:	4b20      	ldr	r3, [pc, #128]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f3e:	685b      	ldr	r3, [r3, #4]
 8015f40:	68db      	ldr	r3, [r3, #12]
 8015f42:	3302      	adds	r3, #2
 8015f44:	9303      	str	r3, [sp, #12]
 8015f46:	4b25      	ldr	r3, [pc, #148]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f48:	9304      	str	r3, [sp, #16]
 8015f4a:	4b25      	ldr	r3, [pc, #148]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f4c:	9305      	str	r3, [sp, #20]
 8015f4e:	4b1f      	ldr	r3, [pc, #124]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f50:	9307      	str	r3, [sp, #28]
 8015f52:	f001 ba26 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f56:	4b1a      	ldr	r3, [pc, #104]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f58:	685b      	ldr	r3, [r3, #4]
 8015f5a:	68db      	ldr	r3, [r3, #12]
 8015f5c:	3303      	adds	r3, #3
 8015f5e:	9303      	str	r3, [sp, #12]
 8015f60:	4b1e      	ldr	r3, [pc, #120]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f62:	9304      	str	r3, [sp, #16]
 8015f64:	4b1e      	ldr	r3, [pc, #120]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f66:	9305      	str	r3, [sp, #20]
 8015f68:	4b18      	ldr	r3, [pc, #96]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f6a:	9307      	str	r3, [sp, #28]
 8015f6c:	f001 ba19 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f70:	4b13      	ldr	r3, [pc, #76]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f72:	685b      	ldr	r3, [r3, #4]
 8015f74:	68db      	ldr	r3, [r3, #12]
 8015f76:	3304      	adds	r3, #4
 8015f78:	9303      	str	r3, [sp, #12]
 8015f7a:	4b18      	ldr	r3, [pc, #96]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f7c:	9304      	str	r3, [sp, #16]
 8015f7e:	4b18      	ldr	r3, [pc, #96]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f80:	9305      	str	r3, [sp, #20]
 8015f82:	4b12      	ldr	r3, [pc, #72]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f84:	9307      	str	r3, [sp, #28]
 8015f86:	f001 ba0c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015f8a:	4b0d      	ldr	r3, [pc, #52]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015f8c:	685b      	ldr	r3, [r3, #4]
 8015f8e:	68db      	ldr	r3, [r3, #12]
 8015f90:	3305      	adds	r3, #5
 8015f92:	9303      	str	r3, [sp, #12]
 8015f94:	4b11      	ldr	r3, [pc, #68]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015f96:	9304      	str	r3, [sp, #16]
 8015f98:	4b11      	ldr	r3, [pc, #68]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015f9a:	9305      	str	r3, [sp, #20]
 8015f9c:	4b0b      	ldr	r3, [pc, #44]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015f9e:	9307      	str	r3, [sp, #28]
 8015fa0:	f001 b9ff 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015fa4:	4b06      	ldr	r3, [pc, #24]	@ (8015fc0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d3c>)
 8015fa6:	685b      	ldr	r3, [r3, #4]
 8015fa8:	68db      	ldr	r3, [r3, #12]
 8015faa:	3306      	adds	r3, #6
 8015fac:	9303      	str	r3, [sp, #12]
 8015fae:	4b0b      	ldr	r3, [pc, #44]	@ (8015fdc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d58>)
 8015fb0:	9304      	str	r3, [sp, #16]
 8015fb2:	4b0b      	ldr	r3, [pc, #44]	@ (8015fe0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d5c>)
 8015fb4:	9305      	str	r3, [sp, #20]
 8015fb6:	4b05      	ldr	r3, [pc, #20]	@ (8015fcc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1d48>)
 8015fb8:	9307      	str	r3, [sp, #28]
 8015fba:	f001 b9f2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8015fbe:	bf00      	nop
 8015fc0:	200019cc 	.word	0x200019cc
 8015fc4:	08013015 	.word	0x08013015
 8015fc8:	0801e2b9 	.word	0x0801e2b9
 8015fcc:	20008e28 	.word	0x20008e28
 8015fd0:	0801283d 	.word	0x0801283d
 8015fd4:	08012845 	.word	0x08012845
 8015fd8:	20008e3c 	.word	0x20008e3c
 8015fdc:	0801285d 	.word	0x0801285d
 8015fe0:	08012861 	.word	0x08012861
 8015fe4:	0801300d 	.word	0x0801300d
 8015fe8:	0801e2d1 	.word	0x0801e2d1
 8015fec:	20008e14 	.word	0x20008e14
 8015ff0:	0801301d 	.word	0x0801301d
 8015ff4:	0801e2a1 	.word	0x0801e2a1
 8015ff8:	20008dc4 	.word	0x20008dc4
 8015ffc:	08012881 	.word	0x08012881
 8016000:	08012885 	.word	0x08012885
 8016004:	20008dec 	.word	0x20008dec
 8016008:	0801288d 	.word	0x0801288d
 801600c:	08012891 	.word	0x08012891
 8016010:	20008dd8 	.word	0x20008dd8
 8016014:	4b8d      	ldr	r3, [pc, #564]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016016:	685b      	ldr	r3, [r3, #4]
 8016018:	68db      	ldr	r3, [r3, #12]
 801601a:	3307      	adds	r3, #7
 801601c:	9303      	str	r3, [sp, #12]
 801601e:	4b8c      	ldr	r3, [pc, #560]	@ (8016250 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fcc>)
 8016020:	9304      	str	r3, [sp, #16]
 8016022:	4b8c      	ldr	r3, [pc, #560]	@ (8016254 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd0>)
 8016024:	9305      	str	r3, [sp, #20]
 8016026:	4b8c      	ldr	r3, [pc, #560]	@ (8016258 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd4>)
 8016028:	9307      	str	r3, [sp, #28]
 801602a:	f001 b9ba 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801602e:	4b87      	ldr	r3, [pc, #540]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016030:	685b      	ldr	r3, [r3, #4]
 8016032:	68db      	ldr	r3, [r3, #12]
 8016034:	3308      	adds	r3, #8
 8016036:	9303      	str	r3, [sp, #12]
 8016038:	4b88      	ldr	r3, [pc, #544]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 801603a:	9304      	str	r3, [sp, #16]
 801603c:	4b88      	ldr	r3, [pc, #544]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 801603e:	9305      	str	r3, [sp, #20]
 8016040:	4b88      	ldr	r3, [pc, #544]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016042:	9307      	str	r3, [sp, #28]
 8016044:	f001 b9ad 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016048:	4b80      	ldr	r3, [pc, #512]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 801604a:	685b      	ldr	r3, [r3, #4]
 801604c:	68db      	ldr	r3, [r3, #12]
 801604e:	330c      	adds	r3, #12
 8016050:	9303      	str	r3, [sp, #12]
 8016052:	4b82      	ldr	r3, [pc, #520]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016054:	9304      	str	r3, [sp, #16]
 8016056:	4b82      	ldr	r3, [pc, #520]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016058:	9305      	str	r3, [sp, #20]
 801605a:	4b82      	ldr	r3, [pc, #520]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 801605c:	9307      	str	r3, [sp, #28]
 801605e:	f001 b9a0 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016062:	4b7a      	ldr	r3, [pc, #488]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016064:	685b      	ldr	r3, [r3, #4]
 8016066:	68db      	ldr	r3, [r3, #12]
 8016068:	3310      	adds	r3, #16
 801606a:	9303      	str	r3, [sp, #12]
 801606c:	4b78      	ldr	r3, [pc, #480]	@ (8016250 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fcc>)
 801606e:	9304      	str	r3, [sp, #16]
 8016070:	4b78      	ldr	r3, [pc, #480]	@ (8016254 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd0>)
 8016072:	9305      	str	r3, [sp, #20]
 8016074:	4b78      	ldr	r3, [pc, #480]	@ (8016258 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd4>)
 8016076:	9307      	str	r3, [sp, #28]
 8016078:	f001 b993 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801607c:	4b73      	ldr	r3, [pc, #460]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 801607e:	685b      	ldr	r3, [r3, #4]
 8016080:	68db      	ldr	r3, [r3, #12]
 8016082:	9303      	str	r3, [sp, #12]
 8016084:	4b78      	ldr	r3, [pc, #480]	@ (8016268 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe4>)
 8016086:	9304      	str	r3, [sp, #16]
 8016088:	4b78      	ldr	r3, [pc, #480]	@ (801626c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe8>)
 801608a:	9305      	str	r3, [sp, #20]
 801608c:	4b78      	ldr	r3, [pc, #480]	@ (8016270 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fec>)
 801608e:	9307      	str	r3, [sp, #28]
 8016090:	f001 b987 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016094:	4b6d      	ldr	r3, [pc, #436]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016096:	685b      	ldr	r3, [r3, #4]
 8016098:	68db      	ldr	r3, [r3, #12]
 801609a:	9303      	str	r3, [sp, #12]
 801609c:	4b75      	ldr	r3, [pc, #468]	@ (8016274 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ff0>)
 801609e:	9304      	str	r3, [sp, #16]
 80160a0:	4b75      	ldr	r3, [pc, #468]	@ (8016278 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1ff4>)
 80160a2:	9305      	str	r3, [sp, #20]
 80160a4:	4b72      	ldr	r3, [pc, #456]	@ (8016270 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fec>)
 80160a6:	9307      	str	r3, [sp, #28]
 80160a8:	f001 b97b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80160ac:	4b67      	ldr	r3, [pc, #412]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80160ae:	685b      	ldr	r3, [r3, #4]
 80160b0:	68db      	ldr	r3, [r3, #12]
 80160b2:	3318      	adds	r3, #24
 80160b4:	9303      	str	r3, [sp, #12]
 80160b6:	4b69      	ldr	r3, [pc, #420]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 80160b8:	9304      	str	r3, [sp, #16]
 80160ba:	4b69      	ldr	r3, [pc, #420]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 80160bc:	9305      	str	r3, [sp, #20]
 80160be:	4b69      	ldr	r3, [pc, #420]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 80160c0:	9307      	str	r3, [sp, #28]
 80160c2:	f001 b96e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80160c6:	4b61      	ldr	r3, [pc, #388]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80160c8:	685b      	ldr	r3, [r3, #4]
 80160ca:	68db      	ldr	r3, [r3, #12]
 80160cc:	331c      	adds	r3, #28
 80160ce:	9303      	str	r3, [sp, #12]
 80160d0:	4b62      	ldr	r3, [pc, #392]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 80160d2:	9304      	str	r3, [sp, #16]
 80160d4:	4b62      	ldr	r3, [pc, #392]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 80160d6:	9305      	str	r3, [sp, #20]
 80160d8:	4b62      	ldr	r3, [pc, #392]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 80160da:	9307      	str	r3, [sp, #28]
 80160dc:	f001 b961 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80160e0:	4b5a      	ldr	r3, [pc, #360]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80160e2:	685b      	ldr	r3, [r3, #4]
 80160e4:	68db      	ldr	r3, [r3, #12]
 80160e6:	3320      	adds	r3, #32
 80160e8:	9303      	str	r3, [sp, #12]
 80160ea:	4b5c      	ldr	r3, [pc, #368]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 80160ec:	9304      	str	r3, [sp, #16]
 80160ee:	4b5c      	ldr	r3, [pc, #368]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 80160f0:	9305      	str	r3, [sp, #20]
 80160f2:	4b5c      	ldr	r3, [pc, #368]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 80160f4:	9307      	str	r3, [sp, #28]
 80160f6:	f001 b954 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80160fa:	4b54      	ldr	r3, [pc, #336]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80160fc:	685b      	ldr	r3, [r3, #4]
 80160fe:	68db      	ldr	r3, [r3, #12]
 8016100:	3324      	adds	r3, #36	@ 0x24
 8016102:	9303      	str	r3, [sp, #12]
 8016104:	4b55      	ldr	r3, [pc, #340]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016106:	9304      	str	r3, [sp, #16]
 8016108:	4b55      	ldr	r3, [pc, #340]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 801610a:	9305      	str	r3, [sp, #20]
 801610c:	4b55      	ldr	r3, [pc, #340]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 801610e:	9307      	str	r3, [sp, #28]
 8016110:	f001 b947 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016114:	4b4d      	ldr	r3, [pc, #308]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016116:	685b      	ldr	r3, [r3, #4]
 8016118:	68db      	ldr	r3, [r3, #12]
 801611a:	3328      	adds	r3, #40	@ 0x28
 801611c:	9303      	str	r3, [sp, #12]
 801611e:	4b4f      	ldr	r3, [pc, #316]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016120:	9304      	str	r3, [sp, #16]
 8016122:	4b4f      	ldr	r3, [pc, #316]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016124:	9305      	str	r3, [sp, #20]
 8016126:	4b4f      	ldr	r3, [pc, #316]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016128:	9307      	str	r3, [sp, #28]
 801612a:	f001 b93a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801612e:	4b47      	ldr	r3, [pc, #284]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016130:	685b      	ldr	r3, [r3, #4]
 8016132:	68db      	ldr	r3, [r3, #12]
 8016134:	3334      	adds	r3, #52	@ 0x34
 8016136:	9303      	str	r3, [sp, #12]
 8016138:	4b48      	ldr	r3, [pc, #288]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 801613a:	9304      	str	r3, [sp, #16]
 801613c:	4b48      	ldr	r3, [pc, #288]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 801613e:	9305      	str	r3, [sp, #20]
 8016140:	4b48      	ldr	r3, [pc, #288]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016142:	9307      	str	r3, [sp, #28]
 8016144:	f001 b92d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016148:	4b40      	ldr	r3, [pc, #256]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 801614a:	685b      	ldr	r3, [r3, #4]
 801614c:	68db      	ldr	r3, [r3, #12]
 801614e:	3338      	adds	r3, #56	@ 0x38
 8016150:	9303      	str	r3, [sp, #12]
 8016152:	4b42      	ldr	r3, [pc, #264]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016154:	9304      	str	r3, [sp, #16]
 8016156:	4b42      	ldr	r3, [pc, #264]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016158:	9305      	str	r3, [sp, #20]
 801615a:	4b42      	ldr	r3, [pc, #264]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 801615c:	9307      	str	r3, [sp, #28]
 801615e:	f001 b920 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016162:	4b3a      	ldr	r3, [pc, #232]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016164:	685b      	ldr	r3, [r3, #4]
 8016166:	68db      	ldr	r3, [r3, #12]
 8016168:	333c      	adds	r3, #60	@ 0x3c
 801616a:	9303      	str	r3, [sp, #12]
 801616c:	4b3b      	ldr	r3, [pc, #236]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 801616e:	9304      	str	r3, [sp, #16]
 8016170:	4b3b      	ldr	r3, [pc, #236]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016172:	9305      	str	r3, [sp, #20]
 8016174:	4b3b      	ldr	r3, [pc, #236]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016176:	9307      	str	r3, [sp, #28]
 8016178:	f001 b913 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801617c:	4b33      	ldr	r3, [pc, #204]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 801617e:	685b      	ldr	r3, [r3, #4]
 8016180:	68db      	ldr	r3, [r3, #12]
 8016182:	3340      	adds	r3, #64	@ 0x40
 8016184:	9303      	str	r3, [sp, #12]
 8016186:	4b35      	ldr	r3, [pc, #212]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016188:	9304      	str	r3, [sp, #16]
 801618a:	4b35      	ldr	r3, [pc, #212]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 801618c:	9305      	str	r3, [sp, #20]
 801618e:	4b35      	ldr	r3, [pc, #212]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016190:	9307      	str	r3, [sp, #28]
 8016192:	f001 b906 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016196:	4b2d      	ldr	r3, [pc, #180]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016198:	685b      	ldr	r3, [r3, #4]
 801619a:	68db      	ldr	r3, [r3, #12]
 801619c:	3344      	adds	r3, #68	@ 0x44
 801619e:	9303      	str	r3, [sp, #12]
 80161a0:	4b2e      	ldr	r3, [pc, #184]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 80161a2:	9304      	str	r3, [sp, #16]
 80161a4:	4b2e      	ldr	r3, [pc, #184]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 80161a6:	9305      	str	r3, [sp, #20]
 80161a8:	4b2e      	ldr	r3, [pc, #184]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 80161aa:	9307      	str	r3, [sp, #28]
 80161ac:	f001 b8f9 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80161b0:	4b26      	ldr	r3, [pc, #152]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80161b2:	685b      	ldr	r3, [r3, #4]
 80161b4:	68db      	ldr	r3, [r3, #12]
 80161b6:	3348      	adds	r3, #72	@ 0x48
 80161b8:	9303      	str	r3, [sp, #12]
 80161ba:	4b28      	ldr	r3, [pc, #160]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 80161bc:	9304      	str	r3, [sp, #16]
 80161be:	4b28      	ldr	r3, [pc, #160]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 80161c0:	9305      	str	r3, [sp, #20]
 80161c2:	4b28      	ldr	r3, [pc, #160]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 80161c4:	9307      	str	r3, [sp, #28]
 80161c6:	f001 b8ec 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80161ca:	4b20      	ldr	r3, [pc, #128]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80161cc:	685b      	ldr	r3, [r3, #4]
 80161ce:	68db      	ldr	r3, [r3, #12]
 80161d0:	334c      	adds	r3, #76	@ 0x4c
 80161d2:	9303      	str	r3, [sp, #12]
 80161d4:	4b1e      	ldr	r3, [pc, #120]	@ (8016250 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fcc>)
 80161d6:	9304      	str	r3, [sp, #16]
 80161d8:	4b1e      	ldr	r3, [pc, #120]	@ (8016254 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd0>)
 80161da:	9305      	str	r3, [sp, #20]
 80161dc:	4b1e      	ldr	r3, [pc, #120]	@ (8016258 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd4>)
 80161de:	9307      	str	r3, [sp, #28]
 80161e0:	f001 b8df 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80161e4:	4b19      	ldr	r3, [pc, #100]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 80161e6:	685b      	ldr	r3, [r3, #4]
 80161e8:	68db      	ldr	r3, [r3, #12]
 80161ea:	334d      	adds	r3, #77	@ 0x4d
 80161ec:	9303      	str	r3, [sp, #12]
 80161ee:	4b18      	ldr	r3, [pc, #96]	@ (8016250 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fcc>)
 80161f0:	9304      	str	r3, [sp, #16]
 80161f2:	4b18      	ldr	r3, [pc, #96]	@ (8016254 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd0>)
 80161f4:	9305      	str	r3, [sp, #20]
 80161f6:	4b18      	ldr	r3, [pc, #96]	@ (8016258 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd4>)
 80161f8:	9307      	str	r3, [sp, #28]
 80161fa:	f001 b8d2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80161fe:	4b13      	ldr	r3, [pc, #76]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016200:	685b      	ldr	r3, [r3, #4]
 8016202:	68db      	ldr	r3, [r3, #12]
 8016204:	334e      	adds	r3, #78	@ 0x4e
 8016206:	9303      	str	r3, [sp, #12]
 8016208:	4b11      	ldr	r3, [pc, #68]	@ (8016250 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fcc>)
 801620a:	9304      	str	r3, [sp, #16]
 801620c:	4b11      	ldr	r3, [pc, #68]	@ (8016254 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd0>)
 801620e:	9305      	str	r3, [sp, #20]
 8016210:	4b11      	ldr	r3, [pc, #68]	@ (8016258 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd4>)
 8016212:	9307      	str	r3, [sp, #28]
 8016214:	f001 b8c5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016218:	4b0c      	ldr	r3, [pc, #48]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 801621a:	685b      	ldr	r3, [r3, #4]
 801621c:	68db      	ldr	r3, [r3, #12]
 801621e:	3350      	adds	r3, #80	@ 0x50
 8016220:	9303      	str	r3, [sp, #12]
 8016222:	4b0e      	ldr	r3, [pc, #56]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 8016224:	9304      	str	r3, [sp, #16]
 8016226:	4b0e      	ldr	r3, [pc, #56]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016228:	9305      	str	r3, [sp, #20]
 801622a:	4b0e      	ldr	r3, [pc, #56]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 801622c:	9307      	str	r3, [sp, #28]
 801622e:	f001 b8b8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016232:	4b06      	ldr	r3, [pc, #24]	@ (801624c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fc8>)
 8016234:	685b      	ldr	r3, [r3, #4]
 8016236:	68db      	ldr	r3, [r3, #12]
 8016238:	3354      	adds	r3, #84	@ 0x54
 801623a:	9303      	str	r3, [sp, #12]
 801623c:	4b07      	ldr	r3, [pc, #28]	@ (801625c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fd8>)
 801623e:	9304      	str	r3, [sp, #16]
 8016240:	4b07      	ldr	r3, [pc, #28]	@ (8016260 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fdc>)
 8016242:	9305      	str	r3, [sp, #20]
 8016244:	4b07      	ldr	r3, [pc, #28]	@ (8016264 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x1fe0>)
 8016246:	9307      	str	r3, [sp, #28]
 8016248:	f001 b8ab 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801624c:	200019cc 	.word	0x200019cc
 8016250:	0801285d 	.word	0x0801285d
 8016254:	08012861 	.word	0x08012861
 8016258:	20008e28 	.word	0x20008e28
 801625c:	0801283d 	.word	0x0801283d
 8016260:	08012845 	.word	0x08012845
 8016264:	20008e3c 	.word	0x20008e3c
 8016268:	080130a9 	.word	0x080130a9
 801626c:	0801e135 	.word	0x0801e135
 8016270:	20008dc4 	.word	0x20008dc4
 8016274:	080130a1 	.word	0x080130a1
 8016278:	0801e14d 	.word	0x0801e14d
 801627c:	4b8a      	ldr	r3, [pc, #552]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801627e:	685b      	ldr	r3, [r3, #4]
 8016280:	68db      	ldr	r3, [r3, #12]
 8016282:	3358      	adds	r3, #88	@ 0x58
 8016284:	9303      	str	r3, [sp, #12]
 8016286:	4b89      	ldr	r3, [pc, #548]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 8016288:	9304      	str	r3, [sp, #16]
 801628a:	4b89      	ldr	r3, [pc, #548]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 801628c:	9305      	str	r3, [sp, #20]
 801628e:	4b89      	ldr	r3, [pc, #548]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 8016290:	9307      	str	r3, [sp, #28]
 8016292:	f001 b886 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016296:	4b84      	ldr	r3, [pc, #528]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016298:	685b      	ldr	r3, [r3, #4]
 801629a:	68db      	ldr	r3, [r3, #12]
 801629c:	335c      	adds	r3, #92	@ 0x5c
 801629e:	9303      	str	r3, [sp, #12]
 80162a0:	4b82      	ldr	r3, [pc, #520]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 80162a2:	9304      	str	r3, [sp, #16]
 80162a4:	4b82      	ldr	r3, [pc, #520]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 80162a6:	9305      	str	r3, [sp, #20]
 80162a8:	4b82      	ldr	r3, [pc, #520]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80162aa:	9307      	str	r3, [sp, #28]
 80162ac:	f001 b879 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80162b0:	4b7d      	ldr	r3, [pc, #500]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80162b2:	685b      	ldr	r3, [r3, #4]
 80162b4:	68db      	ldr	r3, [r3, #12]
 80162b6:	3360      	adds	r3, #96	@ 0x60
 80162b8:	9303      	str	r3, [sp, #12]
 80162ba:	4b7c      	ldr	r3, [pc, #496]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 80162bc:	9304      	str	r3, [sp, #16]
 80162be:	4b7c      	ldr	r3, [pc, #496]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 80162c0:	9305      	str	r3, [sp, #20]
 80162c2:	4b7c      	ldr	r3, [pc, #496]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80162c4:	9307      	str	r3, [sp, #28]
 80162c6:	f001 b86c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80162ca:	4b77      	ldr	r3, [pc, #476]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80162cc:	685b      	ldr	r3, [r3, #4]
 80162ce:	68db      	ldr	r3, [r3, #12]
 80162d0:	3364      	adds	r3, #100	@ 0x64
 80162d2:	9303      	str	r3, [sp, #12]
 80162d4:	4b75      	ldr	r3, [pc, #468]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 80162d6:	9304      	str	r3, [sp, #16]
 80162d8:	4b75      	ldr	r3, [pc, #468]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 80162da:	9305      	str	r3, [sp, #20]
 80162dc:	4b75      	ldr	r3, [pc, #468]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80162de:	9307      	str	r3, [sp, #28]
 80162e0:	f001 b85f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80162e4:	4b70      	ldr	r3, [pc, #448]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80162e6:	685b      	ldr	r3, [r3, #4]
 80162e8:	68db      	ldr	r3, [r3, #12]
 80162ea:	3368      	adds	r3, #104	@ 0x68
 80162ec:	9303      	str	r3, [sp, #12]
 80162ee:	4b72      	ldr	r3, [pc, #456]	@ (80164b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2234>)
 80162f0:	9304      	str	r3, [sp, #16]
 80162f2:	4b72      	ldr	r3, [pc, #456]	@ (80164bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2238>)
 80162f4:	9305      	str	r3, [sp, #20]
 80162f6:	4b72      	ldr	r3, [pc, #456]	@ (80164c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x223c>)
 80162f8:	9307      	str	r3, [sp, #28]
 80162fa:	f001 b852 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80162fe:	4b6a      	ldr	r3, [pc, #424]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016300:	685b      	ldr	r3, [r3, #4]
 8016302:	68db      	ldr	r3, [r3, #12]
 8016304:	3369      	adds	r3, #105	@ 0x69
 8016306:	9303      	str	r3, [sp, #12]
 8016308:	4b6b      	ldr	r3, [pc, #428]	@ (80164b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2234>)
 801630a:	9304      	str	r3, [sp, #16]
 801630c:	4b6b      	ldr	r3, [pc, #428]	@ (80164bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2238>)
 801630e:	9305      	str	r3, [sp, #20]
 8016310:	4b6b      	ldr	r3, [pc, #428]	@ (80164c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x223c>)
 8016312:	9307      	str	r3, [sp, #28]
 8016314:	f001 b845 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016318:	4b63      	ldr	r3, [pc, #396]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801631a:	685b      	ldr	r3, [r3, #4]
 801631c:	68db      	ldr	r3, [r3, #12]
 801631e:	336a      	adds	r3, #106	@ 0x6a
 8016320:	9303      	str	r3, [sp, #12]
 8016322:	4b65      	ldr	r3, [pc, #404]	@ (80164b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2234>)
 8016324:	9304      	str	r3, [sp, #16]
 8016326:	4b65      	ldr	r3, [pc, #404]	@ (80164bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2238>)
 8016328:	9305      	str	r3, [sp, #20]
 801632a:	4b65      	ldr	r3, [pc, #404]	@ (80164c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x223c>)
 801632c:	9307      	str	r3, [sp, #28]
 801632e:	f001 b838 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016332:	4b5d      	ldr	r3, [pc, #372]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016334:	685b      	ldr	r3, [r3, #4]
 8016336:	68db      	ldr	r3, [r3, #12]
 8016338:	336c      	adds	r3, #108	@ 0x6c
 801633a:	9303      	str	r3, [sp, #12]
 801633c:	4b61      	ldr	r3, [pc, #388]	@ (80164c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2240>)
 801633e:	9304      	str	r3, [sp, #16]
 8016340:	4b61      	ldr	r3, [pc, #388]	@ (80164c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2244>)
 8016342:	9305      	str	r3, [sp, #20]
 8016344:	4b61      	ldr	r3, [pc, #388]	@ (80164cc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2248>)
 8016346:	9307      	str	r3, [sp, #28]
 8016348:	f001 b82b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801634c:	4b56      	ldr	r3, [pc, #344]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801634e:	685b      	ldr	r3, [r3, #4]
 8016350:	68db      	ldr	r3, [r3, #12]
 8016352:	3370      	adds	r3, #112	@ 0x70
 8016354:	9303      	str	r3, [sp, #12]
 8016356:	4b58      	ldr	r3, [pc, #352]	@ (80164b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2234>)
 8016358:	9304      	str	r3, [sp, #16]
 801635a:	4b58      	ldr	r3, [pc, #352]	@ (80164bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2238>)
 801635c:	9305      	str	r3, [sp, #20]
 801635e:	4b58      	ldr	r3, [pc, #352]	@ (80164c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x223c>)
 8016360:	9307      	str	r3, [sp, #28]
 8016362:	f001 b81e 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016366:	4b50      	ldr	r3, [pc, #320]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016368:	685b      	ldr	r3, [r3, #4]
 801636a:	68db      	ldr	r3, [r3, #12]
 801636c:	3374      	adds	r3, #116	@ 0x74
 801636e:	9303      	str	r3, [sp, #12]
 8016370:	4b54      	ldr	r3, [pc, #336]	@ (80164c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2240>)
 8016372:	9304      	str	r3, [sp, #16]
 8016374:	4b54      	ldr	r3, [pc, #336]	@ (80164c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2244>)
 8016376:	9305      	str	r3, [sp, #20]
 8016378:	4b54      	ldr	r3, [pc, #336]	@ (80164cc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2248>)
 801637a:	9307      	str	r3, [sp, #28]
 801637c:	f001 b811 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016380:	4b49      	ldr	r3, [pc, #292]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016382:	685b      	ldr	r3, [r3, #4]
 8016384:	68db      	ldr	r3, [r3, #12]
 8016386:	3378      	adds	r3, #120	@ 0x78
 8016388:	9303      	str	r3, [sp, #12]
 801638a:	4b4e      	ldr	r3, [pc, #312]	@ (80164c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2240>)
 801638c:	9304      	str	r3, [sp, #16]
 801638e:	4b4e      	ldr	r3, [pc, #312]	@ (80164c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2244>)
 8016390:	9305      	str	r3, [sp, #20]
 8016392:	4b4e      	ldr	r3, [pc, #312]	@ (80164cc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2248>)
 8016394:	9307      	str	r3, [sp, #28]
 8016396:	f001 b804 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801639a:	4b43      	ldr	r3, [pc, #268]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801639c:	685b      	ldr	r3, [r3, #4]
 801639e:	69db      	ldr	r3, [r3, #28]
 80163a0:	3320      	adds	r3, #32
 80163a2:	9303      	str	r3, [sp, #12]
 80163a4:	4b4a      	ldr	r3, [pc, #296]	@ (80164d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x224c>)
 80163a6:	9304      	str	r3, [sp, #16]
 80163a8:	4b4a      	ldr	r3, [pc, #296]	@ (80164d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2250>)
 80163aa:	9305      	str	r3, [sp, #20]
 80163ac:	4b4a      	ldr	r3, [pc, #296]	@ (80164d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2254>)
 80163ae:	9307      	str	r3, [sp, #28]
 80163b0:	f000 bff7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80163b4:	4b3c      	ldr	r3, [pc, #240]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80163b6:	685b      	ldr	r3, [r3, #4]
 80163b8:	69db      	ldr	r3, [r3, #28]
 80163ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80163bc:	9303      	str	r3, [sp, #12]
 80163be:	4b3b      	ldr	r3, [pc, #236]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 80163c0:	9304      	str	r3, [sp, #16]
 80163c2:	4b3b      	ldr	r3, [pc, #236]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 80163c4:	9305      	str	r3, [sp, #20]
 80163c6:	4b3b      	ldr	r3, [pc, #236]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80163c8:	9307      	str	r3, [sp, #28]
 80163ca:	f000 bfea 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80163ce:	4b36      	ldr	r3, [pc, #216]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80163d0:	685b      	ldr	r3, [r3, #4]
 80163d2:	69db      	ldr	r3, [r3, #28]
 80163d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80163d6:	3304      	adds	r3, #4
 80163d8:	9303      	str	r3, [sp, #12]
 80163da:	4b34      	ldr	r3, [pc, #208]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 80163dc:	9304      	str	r3, [sp, #16]
 80163de:	4b34      	ldr	r3, [pc, #208]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 80163e0:	9305      	str	r3, [sp, #20]
 80163e2:	4b34      	ldr	r3, [pc, #208]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80163e4:	9307      	str	r3, [sp, #28]
 80163e6:	f000 bfdc 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80163ea:	4b2f      	ldr	r3, [pc, #188]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 80163ec:	685b      	ldr	r3, [r3, #4]
 80163ee:	69db      	ldr	r3, [r3, #28]
 80163f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80163f2:	3308      	adds	r3, #8
 80163f4:	9303      	str	r3, [sp, #12]
 80163f6:	4b30      	ldr	r3, [pc, #192]	@ (80164b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2234>)
 80163f8:	9304      	str	r3, [sp, #16]
 80163fa:	4b30      	ldr	r3, [pc, #192]	@ (80164bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2238>)
 80163fc:	9305      	str	r3, [sp, #20]
 80163fe:	4b30      	ldr	r3, [pc, #192]	@ (80164c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x223c>)
 8016400:	9307      	str	r3, [sp, #28]
 8016402:	f000 bfce 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016406:	4b28      	ldr	r3, [pc, #160]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016408:	685b      	ldr	r3, [r3, #4]
 801640a:	6a1b      	ldr	r3, [r3, #32]
 801640c:	3320      	adds	r3, #32
 801640e:	9303      	str	r3, [sp, #12]
 8016410:	4b2f      	ldr	r3, [pc, #188]	@ (80164d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x224c>)
 8016412:	9304      	str	r3, [sp, #16]
 8016414:	4b2f      	ldr	r3, [pc, #188]	@ (80164d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2250>)
 8016416:	9305      	str	r3, [sp, #20]
 8016418:	4b2f      	ldr	r3, [pc, #188]	@ (80164d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2254>)
 801641a:	9307      	str	r3, [sp, #28]
 801641c:	f000 bfc1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016420:	4b21      	ldr	r3, [pc, #132]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016422:	685b      	ldr	r3, [r3, #4]
 8016424:	6a1b      	ldr	r3, [r3, #32]
 8016426:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016428:	9303      	str	r3, [sp, #12]
 801642a:	4b2c      	ldr	r3, [pc, #176]	@ (80164dc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2258>)
 801642c:	9304      	str	r3, [sp, #16]
 801642e:	4b2c      	ldr	r3, [pc, #176]	@ (80164e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x225c>)
 8016430:	9305      	str	r3, [sp, #20]
 8016432:	4b2c      	ldr	r3, [pc, #176]	@ (80164e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2260>)
 8016434:	9307      	str	r3, [sp, #28]
 8016436:	f000 bfb4 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801643a:	4b1b      	ldr	r3, [pc, #108]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801643c:	685b      	ldr	r3, [r3, #4]
 801643e:	6a1b      	ldr	r3, [r3, #32]
 8016440:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016442:	9303      	str	r3, [sp, #12]
 8016444:	4b19      	ldr	r3, [pc, #100]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 8016446:	9304      	str	r3, [sp, #16]
 8016448:	4b19      	ldr	r3, [pc, #100]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 801644a:	9305      	str	r3, [sp, #20]
 801644c:	4b19      	ldr	r3, [pc, #100]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 801644e:	9307      	str	r3, [sp, #28]
 8016450:	f000 bfa7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016454:	4b14      	ldr	r3, [pc, #80]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016456:	685b      	ldr	r3, [r3, #4]
 8016458:	6a1b      	ldr	r3, [r3, #32]
 801645a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801645c:	3304      	adds	r3, #4
 801645e:	9303      	str	r3, [sp, #12]
 8016460:	4b12      	ldr	r3, [pc, #72]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 8016462:	9304      	str	r3, [sp, #16]
 8016464:	4b12      	ldr	r3, [pc, #72]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 8016466:	9305      	str	r3, [sp, #20]
 8016468:	4b12      	ldr	r3, [pc, #72]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 801646a:	9307      	str	r3, [sp, #28]
 801646c:	f000 bf99 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016470:	4b0d      	ldr	r3, [pc, #52]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 8016472:	685b      	ldr	r3, [r3, #4]
 8016474:	6a1b      	ldr	r3, [r3, #32]
 8016476:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016478:	3308      	adds	r3, #8
 801647a:	9303      	str	r3, [sp, #12]
 801647c:	4b0b      	ldr	r3, [pc, #44]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 801647e:	9304      	str	r3, [sp, #16]
 8016480:	4b0b      	ldr	r3, [pc, #44]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 8016482:	9305      	str	r3, [sp, #20]
 8016484:	4b0b      	ldr	r3, [pc, #44]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 8016486:	9307      	str	r3, [sp, #28]
 8016488:	f000 bf8b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801648c:	4b06      	ldr	r3, [pc, #24]	@ (80164a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2224>)
 801648e:	685b      	ldr	r3, [r3, #4]
 8016490:	6a1b      	ldr	r3, [r3, #32]
 8016492:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016494:	330c      	adds	r3, #12
 8016496:	9303      	str	r3, [sp, #12]
 8016498:	4b04      	ldr	r3, [pc, #16]	@ (80164ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2228>)
 801649a:	9304      	str	r3, [sp, #16]
 801649c:	4b04      	ldr	r3, [pc, #16]	@ (80164b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x222c>)
 801649e:	9305      	str	r3, [sp, #20]
 80164a0:	4b04      	ldr	r3, [pc, #16]	@ (80164b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2230>)
 80164a2:	9307      	str	r3, [sp, #28]
 80164a4:	f000 bf7d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80164a8:	200019cc 	.word	0x200019cc
 80164ac:	0801283d 	.word	0x0801283d
 80164b0:	08012845 	.word	0x08012845
 80164b4:	20008e3c 	.word	0x20008e3c
 80164b8:	0801285d 	.word	0x0801285d
 80164bc:	08012861 	.word	0x08012861
 80164c0:	20008e28 	.word	0x20008e28
 80164c4:	08012869 	.word	0x08012869
 80164c8:	0801286d 	.word	0x0801286d
 80164cc:	20008e14 	.word	0x20008e14
 80164d0:	08012899 	.word	0x08012899
 80164d4:	0801289d 	.word	0x0801289d
 80164d8:	20008db0 	.word	0x20008db0
 80164dc:	08013099 	.word	0x08013099
 80164e0:	0801e165 	.word	0x0801e165
 80164e4:	20008dc4 	.word	0x20008dc4
 80164e8:	4b89      	ldr	r3, [pc, #548]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80164ea:	685b      	ldr	r3, [r3, #4]
 80164ec:	6a1b      	ldr	r3, [r3, #32]
 80164ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80164f0:	3314      	adds	r3, #20
 80164f2:	9303      	str	r3, [sp, #12]
 80164f4:	4b87      	ldr	r3, [pc, #540]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80164f6:	9304      	str	r3, [sp, #16]
 80164f8:	4b87      	ldr	r3, [pc, #540]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80164fa:	9305      	str	r3, [sp, #20]
 80164fc:	4b87      	ldr	r3, [pc, #540]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80164fe:	9307      	str	r3, [sp, #28]
 8016500:	f000 bf4f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016504:	4b82      	ldr	r3, [pc, #520]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016506:	685b      	ldr	r3, [r3, #4]
 8016508:	6a1b      	ldr	r3, [r3, #32]
 801650a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801650c:	3318      	adds	r3, #24
 801650e:	9303      	str	r3, [sp, #12]
 8016510:	4b80      	ldr	r3, [pc, #512]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016512:	9304      	str	r3, [sp, #16]
 8016514:	4b80      	ldr	r3, [pc, #512]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016516:	9305      	str	r3, [sp, #20]
 8016518:	4b80      	ldr	r3, [pc, #512]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 801651a:	9307      	str	r3, [sp, #28]
 801651c:	f000 bf41 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016520:	4b7b      	ldr	r3, [pc, #492]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016522:	685b      	ldr	r3, [r3, #4]
 8016524:	6a1b      	ldr	r3, [r3, #32]
 8016526:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016528:	331c      	adds	r3, #28
 801652a:	9303      	str	r3, [sp, #12]
 801652c:	4b7c      	ldr	r3, [pc, #496]	@ (8016720 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x249c>)
 801652e:	9304      	str	r3, [sp, #16]
 8016530:	4b7c      	ldr	r3, [pc, #496]	@ (8016724 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24a0>)
 8016532:	9305      	str	r3, [sp, #20]
 8016534:	4b7c      	ldr	r3, [pc, #496]	@ (8016728 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24a4>)
 8016536:	9307      	str	r3, [sp, #28]
 8016538:	f000 bf33 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801653c:	4b74      	ldr	r3, [pc, #464]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 801653e:	685b      	ldr	r3, [r3, #4]
 8016540:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016542:	3364      	adds	r3, #100	@ 0x64
 8016544:	9303      	str	r3, [sp, #12]
 8016546:	4b79      	ldr	r3, [pc, #484]	@ (801672c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24a8>)
 8016548:	9304      	str	r3, [sp, #16]
 801654a:	4b79      	ldr	r3, [pc, #484]	@ (8016730 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24ac>)
 801654c:	9305      	str	r3, [sp, #20]
 801654e:	4b79      	ldr	r3, [pc, #484]	@ (8016734 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24b0>)
 8016550:	9307      	str	r3, [sp, #28]
 8016552:	f000 bf26 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016556:	4b6e      	ldr	r3, [pc, #440]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016558:	685b      	ldr	r3, [r3, #4]
 801655a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801655c:	3370      	adds	r3, #112	@ 0x70
 801655e:	9303      	str	r3, [sp, #12]
 8016560:	4b6c      	ldr	r3, [pc, #432]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016562:	9304      	str	r3, [sp, #16]
 8016564:	4b6c      	ldr	r3, [pc, #432]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016566:	9305      	str	r3, [sp, #20]
 8016568:	4b6c      	ldr	r3, [pc, #432]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 801656a:	9307      	str	r3, [sp, #28]
 801656c:	f000 bf19 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016570:	4b67      	ldr	r3, [pc, #412]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016572:	685b      	ldr	r3, [r3, #4]
 8016574:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016576:	3374      	adds	r3, #116	@ 0x74
 8016578:	9303      	str	r3, [sp, #12]
 801657a:	4b66      	ldr	r3, [pc, #408]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 801657c:	9304      	str	r3, [sp, #16]
 801657e:	4b66      	ldr	r3, [pc, #408]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016580:	9305      	str	r3, [sp, #20]
 8016582:	4b66      	ldr	r3, [pc, #408]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 8016584:	9307      	str	r3, [sp, #28]
 8016586:	f000 bf0c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801658a:	4b61      	ldr	r3, [pc, #388]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 801658c:	685b      	ldr	r3, [r3, #4]
 801658e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016590:	3378      	adds	r3, #120	@ 0x78
 8016592:	9303      	str	r3, [sp, #12]
 8016594:	4b5f      	ldr	r3, [pc, #380]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016596:	9304      	str	r3, [sp, #16]
 8016598:	4b5f      	ldr	r3, [pc, #380]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 801659a:	9305      	str	r3, [sp, #20]
 801659c:	4b5f      	ldr	r3, [pc, #380]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 801659e:	9307      	str	r3, [sp, #28]
 80165a0:	f000 beff 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80165a4:	4b5a      	ldr	r3, [pc, #360]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80165a6:	685b      	ldr	r3, [r3, #4]
 80165a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80165aa:	337c      	adds	r3, #124	@ 0x7c
 80165ac:	9303      	str	r3, [sp, #12]
 80165ae:	4b59      	ldr	r3, [pc, #356]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80165b0:	9304      	str	r3, [sp, #16]
 80165b2:	4b59      	ldr	r3, [pc, #356]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80165b4:	9305      	str	r3, [sp, #20]
 80165b6:	4b59      	ldr	r3, [pc, #356]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80165b8:	9307      	str	r3, [sp, #28]
 80165ba:	f000 bef2 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80165be:	4b54      	ldr	r3, [pc, #336]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80165c0:	685b      	ldr	r3, [r3, #4]
 80165c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80165c4:	3380      	adds	r3, #128	@ 0x80
 80165c6:	9303      	str	r3, [sp, #12]
 80165c8:	4b52      	ldr	r3, [pc, #328]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80165ca:	9304      	str	r3, [sp, #16]
 80165cc:	4b52      	ldr	r3, [pc, #328]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80165ce:	9305      	str	r3, [sp, #20]
 80165d0:	4b52      	ldr	r3, [pc, #328]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80165d2:	9307      	str	r3, [sp, #28]
 80165d4:	f000 bee5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80165d8:	4b4d      	ldr	r3, [pc, #308]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80165da:	685b      	ldr	r3, [r3, #4]
 80165dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80165de:	3384      	adds	r3, #132	@ 0x84
 80165e0:	9303      	str	r3, [sp, #12]
 80165e2:	4b4c      	ldr	r3, [pc, #304]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80165e4:	9304      	str	r3, [sp, #16]
 80165e6:	4b4c      	ldr	r3, [pc, #304]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80165e8:	9305      	str	r3, [sp, #20]
 80165ea:	4b4c      	ldr	r3, [pc, #304]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80165ec:	9307      	str	r3, [sp, #28]
 80165ee:	f000 bed8 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80165f2:	4b47      	ldr	r3, [pc, #284]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80165f4:	685b      	ldr	r3, [r3, #4]
 80165f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80165f8:	3388      	adds	r3, #136	@ 0x88
 80165fa:	9303      	str	r3, [sp, #12]
 80165fc:	4b45      	ldr	r3, [pc, #276]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80165fe:	9304      	str	r3, [sp, #16]
 8016600:	4b45      	ldr	r3, [pc, #276]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016602:	9305      	str	r3, [sp, #20]
 8016604:	4b45      	ldr	r3, [pc, #276]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 8016606:	9307      	str	r3, [sp, #28]
 8016608:	f000 becb 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801660c:	4b40      	ldr	r3, [pc, #256]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 801660e:	685b      	ldr	r3, [r3, #4]
 8016610:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016612:	338c      	adds	r3, #140	@ 0x8c
 8016614:	9303      	str	r3, [sp, #12]
 8016616:	4b3f      	ldr	r3, [pc, #252]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016618:	9304      	str	r3, [sp, #16]
 801661a:	4b3f      	ldr	r3, [pc, #252]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 801661c:	9305      	str	r3, [sp, #20]
 801661e:	4b3f      	ldr	r3, [pc, #252]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 8016620:	9307      	str	r3, [sp, #28]
 8016622:	f000 bebe 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016626:	4b3a      	ldr	r3, [pc, #232]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016628:	685b      	ldr	r3, [r3, #4]
 801662a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801662c:	3390      	adds	r3, #144	@ 0x90
 801662e:	9303      	str	r3, [sp, #12]
 8016630:	4b38      	ldr	r3, [pc, #224]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016632:	9304      	str	r3, [sp, #16]
 8016634:	4b38      	ldr	r3, [pc, #224]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016636:	9305      	str	r3, [sp, #20]
 8016638:	4b38      	ldr	r3, [pc, #224]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 801663a:	9307      	str	r3, [sp, #28]
 801663c:	f000 beb1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016640:	4b33      	ldr	r3, [pc, #204]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016642:	685b      	ldr	r3, [r3, #4]
 8016644:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016646:	3394      	adds	r3, #148	@ 0x94
 8016648:	9303      	str	r3, [sp, #12]
 801664a:	4b32      	ldr	r3, [pc, #200]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 801664c:	9304      	str	r3, [sp, #16]
 801664e:	4b32      	ldr	r3, [pc, #200]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016650:	9305      	str	r3, [sp, #20]
 8016652:	4b32      	ldr	r3, [pc, #200]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 8016654:	9307      	str	r3, [sp, #28]
 8016656:	f000 bea4 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801665a:	4b2d      	ldr	r3, [pc, #180]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 801665c:	685b      	ldr	r3, [r3, #4]
 801665e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016660:	3398      	adds	r3, #152	@ 0x98
 8016662:	9303      	str	r3, [sp, #12]
 8016664:	4b2b      	ldr	r3, [pc, #172]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016666:	9304      	str	r3, [sp, #16]
 8016668:	4b2b      	ldr	r3, [pc, #172]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 801666a:	9305      	str	r3, [sp, #20]
 801666c:	4b2b      	ldr	r3, [pc, #172]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 801666e:	9307      	str	r3, [sp, #28]
 8016670:	f000 be97 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016674:	4b26      	ldr	r3, [pc, #152]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016676:	685b      	ldr	r3, [r3, #4]
 8016678:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801667a:	33a0      	adds	r3, #160	@ 0xa0
 801667c:	9303      	str	r3, [sp, #12]
 801667e:	4b25      	ldr	r3, [pc, #148]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 8016680:	9304      	str	r3, [sp, #16]
 8016682:	4b25      	ldr	r3, [pc, #148]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 8016684:	9305      	str	r3, [sp, #20]
 8016686:	4b25      	ldr	r3, [pc, #148]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 8016688:	9307      	str	r3, [sp, #28]
 801668a:	f000 be8a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801668e:	4b20      	ldr	r3, [pc, #128]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 8016690:	685b      	ldr	r3, [r3, #4]
 8016692:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016694:	33a4      	adds	r3, #164	@ 0xa4
 8016696:	9303      	str	r3, [sp, #12]
 8016698:	4b1e      	ldr	r3, [pc, #120]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 801669a:	9304      	str	r3, [sp, #16]
 801669c:	4b1e      	ldr	r3, [pc, #120]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 801669e:	9305      	str	r3, [sp, #20]
 80166a0:	4b1e      	ldr	r3, [pc, #120]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80166a2:	9307      	str	r3, [sp, #28]
 80166a4:	f000 be7d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80166a8:	4b19      	ldr	r3, [pc, #100]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80166aa:	685b      	ldr	r3, [r3, #4]
 80166ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80166ae:	33a8      	adds	r3, #168	@ 0xa8
 80166b0:	9303      	str	r3, [sp, #12]
 80166b2:	4b18      	ldr	r3, [pc, #96]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80166b4:	9304      	str	r3, [sp, #16]
 80166b6:	4b18      	ldr	r3, [pc, #96]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80166b8:	9305      	str	r3, [sp, #20]
 80166ba:	4b18      	ldr	r3, [pc, #96]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80166bc:	9307      	str	r3, [sp, #28]
 80166be:	f000 be70 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80166c2:	4b13      	ldr	r3, [pc, #76]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80166c4:	685b      	ldr	r3, [r3, #4]
 80166c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80166c8:	33b4      	adds	r3, #180	@ 0xb4
 80166ca:	9303      	str	r3, [sp, #12]
 80166cc:	4b11      	ldr	r3, [pc, #68]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80166ce:	9304      	str	r3, [sp, #16]
 80166d0:	4b11      	ldr	r3, [pc, #68]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80166d2:	9305      	str	r3, [sp, #20]
 80166d4:	4b11      	ldr	r3, [pc, #68]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80166d6:	9307      	str	r3, [sp, #28]
 80166d8:	f000 be63 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80166dc:	4b0c      	ldr	r3, [pc, #48]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80166de:	685b      	ldr	r3, [r3, #4]
 80166e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80166e2:	33bc      	adds	r3, #188	@ 0xbc
 80166e4:	9303      	str	r3, [sp, #12]
 80166e6:	4b0b      	ldr	r3, [pc, #44]	@ (8016714 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2490>)
 80166e8:	9304      	str	r3, [sp, #16]
 80166ea:	4b0b      	ldr	r3, [pc, #44]	@ (8016718 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2494>)
 80166ec:	9305      	str	r3, [sp, #20]
 80166ee:	4b0b      	ldr	r3, [pc, #44]	@ (801671c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2498>)
 80166f0:	9307      	str	r3, [sp, #28]
 80166f2:	f000 be56 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80166f6:	4b06      	ldr	r3, [pc, #24]	@ (8016710 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x248c>)
 80166f8:	685b      	ldr	r3, [r3, #4]
 80166fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80166fc:	6a1b      	ldr	r3, [r3, #32]
 80166fe:	9303      	str	r3, [sp, #12]
 8016700:	4b0d      	ldr	r3, [pc, #52]	@ (8016738 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24b4>)
 8016702:	9304      	str	r3, [sp, #16]
 8016704:	4b0d      	ldr	r3, [pc, #52]	@ (801673c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24b8>)
 8016706:	9305      	str	r3, [sp, #20]
 8016708:	4b07      	ldr	r3, [pc, #28]	@ (8016728 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x24a4>)
 801670a:	9307      	str	r3, [sp, #28]
 801670c:	f000 be49 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016710:	200019cc 	.word	0x200019cc
 8016714:	0801283d 	.word	0x0801283d
 8016718:	08012845 	.word	0x08012845
 801671c:	20008e3c 	.word	0x20008e3c
 8016720:	0801285d 	.word	0x0801285d
 8016724:	08012861 	.word	0x08012861
 8016728:	20008e28 	.word	0x20008e28
 801672c:	080128a1 	.word	0x080128a1
 8016730:	080128a5 	.word	0x080128a5
 8016734:	20008d9c 	.word	0x20008d9c
 8016738:	08013091 	.word	0x08013091
 801673c:	0801e189 	.word	0x0801e189
 8016740:	4b8a      	ldr	r3, [pc, #552]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016742:	685b      	ldr	r3, [r3, #4]
 8016744:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016746:	6a1b      	ldr	r3, [r3, #32]
 8016748:	3304      	adds	r3, #4
 801674a:	9303      	str	r3, [sp, #12]
 801674c:	4b88      	ldr	r3, [pc, #544]	@ (8016970 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26ec>)
 801674e:	9304      	str	r3, [sp, #16]
 8016750:	4b88      	ldr	r3, [pc, #544]	@ (8016974 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f0>)
 8016752:	9305      	str	r3, [sp, #20]
 8016754:	4b88      	ldr	r3, [pc, #544]	@ (8016978 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f4>)
 8016756:	9307      	str	r3, [sp, #28]
 8016758:	f000 be23 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801675c:	4b83      	ldr	r3, [pc, #524]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 801675e:	685b      	ldr	r3, [r3, #4]
 8016760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016762:	6a1b      	ldr	r3, [r3, #32]
 8016764:	3308      	adds	r3, #8
 8016766:	9303      	str	r3, [sp, #12]
 8016768:	4b84      	ldr	r3, [pc, #528]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 801676a:	9304      	str	r3, [sp, #16]
 801676c:	4b84      	ldr	r3, [pc, #528]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801676e:	9305      	str	r3, [sp, #20]
 8016770:	4b84      	ldr	r3, [pc, #528]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 8016772:	9307      	str	r3, [sp, #28]
 8016774:	f000 be15 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016778:	4b7c      	ldr	r3, [pc, #496]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 801677a:	685b      	ldr	r3, [r3, #4]
 801677c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801677e:	6a1b      	ldr	r3, [r3, #32]
 8016780:	330c      	adds	r3, #12
 8016782:	9303      	str	r3, [sp, #12]
 8016784:	4b7d      	ldr	r3, [pc, #500]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 8016786:	9304      	str	r3, [sp, #16]
 8016788:	4b7d      	ldr	r3, [pc, #500]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801678a:	9305      	str	r3, [sp, #20]
 801678c:	4b7d      	ldr	r3, [pc, #500]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 801678e:	9307      	str	r3, [sp, #28]
 8016790:	f000 be07 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016794:	4b75      	ldr	r3, [pc, #468]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016796:	685b      	ldr	r3, [r3, #4]
 8016798:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801679a:	6a1b      	ldr	r3, [r3, #32]
 801679c:	9303      	str	r3, [sp, #12]
 801679e:	4b7a      	ldr	r3, [pc, #488]	@ (8016988 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2704>)
 80167a0:	9304      	str	r3, [sp, #16]
 80167a2:	4b7a      	ldr	r3, [pc, #488]	@ (801698c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2708>)
 80167a4:	9305      	str	r3, [sp, #20]
 80167a6:	4b77      	ldr	r3, [pc, #476]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80167a8:	9307      	str	r3, [sp, #28]
 80167aa:	f000 bdfa 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80167ae:	4b6f      	ldr	r3, [pc, #444]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80167b0:	685b      	ldr	r3, [r3, #4]
 80167b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80167b4:	6a1b      	ldr	r3, [r3, #32]
 80167b6:	9303      	str	r3, [sp, #12]
 80167b8:	4b75      	ldr	r3, [pc, #468]	@ (8016990 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x270c>)
 80167ba:	9304      	str	r3, [sp, #16]
 80167bc:	4b75      	ldr	r3, [pc, #468]	@ (8016994 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2710>)
 80167be:	9305      	str	r3, [sp, #20]
 80167c0:	4b70      	ldr	r3, [pc, #448]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80167c2:	9307      	str	r3, [sp, #28]
 80167c4:	f000 bded 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80167c8:	4b68      	ldr	r3, [pc, #416]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80167ca:	685b      	ldr	r3, [r3, #4]
 80167cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80167ce:	6a1b      	ldr	r3, [r3, #32]
 80167d0:	3318      	adds	r3, #24
 80167d2:	9303      	str	r3, [sp, #12]
 80167d4:	4b69      	ldr	r3, [pc, #420]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 80167d6:	9304      	str	r3, [sp, #16]
 80167d8:	4b69      	ldr	r3, [pc, #420]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 80167da:	9305      	str	r3, [sp, #20]
 80167dc:	4b69      	ldr	r3, [pc, #420]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80167de:	9307      	str	r3, [sp, #28]
 80167e0:	f000 bddf 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80167e4:	4b61      	ldr	r3, [pc, #388]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80167e6:	685b      	ldr	r3, [r3, #4]
 80167e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80167ea:	6a1b      	ldr	r3, [r3, #32]
 80167ec:	331c      	adds	r3, #28
 80167ee:	9303      	str	r3, [sp, #12]
 80167f0:	4b5f      	ldr	r3, [pc, #380]	@ (8016970 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26ec>)
 80167f2:	9304      	str	r3, [sp, #16]
 80167f4:	4b5f      	ldr	r3, [pc, #380]	@ (8016974 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f0>)
 80167f6:	9305      	str	r3, [sp, #20]
 80167f8:	4b5f      	ldr	r3, [pc, #380]	@ (8016978 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f4>)
 80167fa:	9307      	str	r3, [sp, #28]
 80167fc:	f000 bdd1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016800:	4b5a      	ldr	r3, [pc, #360]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016802:	685b      	ldr	r3, [r3, #4]
 8016804:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016806:	6a1b      	ldr	r3, [r3, #32]
 8016808:	3320      	adds	r3, #32
 801680a:	9303      	str	r3, [sp, #12]
 801680c:	4b62      	ldr	r3, [pc, #392]	@ (8016998 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2714>)
 801680e:	9304      	str	r3, [sp, #16]
 8016810:	4b62      	ldr	r3, [pc, #392]	@ (801699c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2718>)
 8016812:	9305      	str	r3, [sp, #20]
 8016814:	4b62      	ldr	r3, [pc, #392]	@ (80169a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x271c>)
 8016816:	9307      	str	r3, [sp, #28]
 8016818:	f000 bdc3 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801681c:	4b53      	ldr	r3, [pc, #332]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 801681e:	685b      	ldr	r3, [r3, #4]
 8016820:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016822:	6a1b      	ldr	r3, [r3, #32]
 8016824:	3324      	adds	r3, #36	@ 0x24
 8016826:	9303      	str	r3, [sp, #12]
 8016828:	4b54      	ldr	r3, [pc, #336]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 801682a:	9304      	str	r3, [sp, #16]
 801682c:	4b54      	ldr	r3, [pc, #336]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801682e:	9305      	str	r3, [sp, #20]
 8016830:	4b54      	ldr	r3, [pc, #336]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 8016832:	9307      	str	r3, [sp, #28]
 8016834:	f000 bdb5 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016838:	4b4c      	ldr	r3, [pc, #304]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 801683a:	685b      	ldr	r3, [r3, #4]
 801683c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801683e:	6a1b      	ldr	r3, [r3, #32]
 8016840:	3328      	adds	r3, #40	@ 0x28
 8016842:	9303      	str	r3, [sp, #12]
 8016844:	4b4d      	ldr	r3, [pc, #308]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 8016846:	9304      	str	r3, [sp, #16]
 8016848:	4b4d      	ldr	r3, [pc, #308]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801684a:	9305      	str	r3, [sp, #20]
 801684c:	4b4d      	ldr	r3, [pc, #308]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 801684e:	9307      	str	r3, [sp, #28]
 8016850:	f000 bda7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016854:	4b45      	ldr	r3, [pc, #276]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016856:	685b      	ldr	r3, [r3, #4]
 8016858:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801685a:	6a1b      	ldr	r3, [r3, #32]
 801685c:	332c      	adds	r3, #44	@ 0x2c
 801685e:	9303      	str	r3, [sp, #12]
 8016860:	4b46      	ldr	r3, [pc, #280]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 8016862:	9304      	str	r3, [sp, #16]
 8016864:	4b46      	ldr	r3, [pc, #280]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 8016866:	9305      	str	r3, [sp, #20]
 8016868:	4b46      	ldr	r3, [pc, #280]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 801686a:	9307      	str	r3, [sp, #28]
 801686c:	f000 bd99 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016870:	4b3e      	ldr	r3, [pc, #248]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016872:	685b      	ldr	r3, [r3, #4]
 8016874:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016876:	6a1b      	ldr	r3, [r3, #32]
 8016878:	3338      	adds	r3, #56	@ 0x38
 801687a:	9303      	str	r3, [sp, #12]
 801687c:	4b3f      	ldr	r3, [pc, #252]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 801687e:	9304      	str	r3, [sp, #16]
 8016880:	4b3f      	ldr	r3, [pc, #252]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 8016882:	9305      	str	r3, [sp, #20]
 8016884:	4b3f      	ldr	r3, [pc, #252]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 8016886:	9307      	str	r3, [sp, #28]
 8016888:	f000 bd8b 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801688c:	4b37      	ldr	r3, [pc, #220]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 801688e:	685b      	ldr	r3, [r3, #4]
 8016890:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016892:	6a1b      	ldr	r3, [r3, #32]
 8016894:	333c      	adds	r3, #60	@ 0x3c
 8016896:	9303      	str	r3, [sp, #12]
 8016898:	4b38      	ldr	r3, [pc, #224]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 801689a:	9304      	str	r3, [sp, #16]
 801689c:	4b38      	ldr	r3, [pc, #224]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801689e:	9305      	str	r3, [sp, #20]
 80168a0:	4b38      	ldr	r3, [pc, #224]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80168a2:	9307      	str	r3, [sp, #28]
 80168a4:	f000 bd7d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80168a8:	4b30      	ldr	r3, [pc, #192]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80168aa:	685b      	ldr	r3, [r3, #4]
 80168ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80168ae:	6a1b      	ldr	r3, [r3, #32]
 80168b0:	3330      	adds	r3, #48	@ 0x30
 80168b2:	9303      	str	r3, [sp, #12]
 80168b4:	4b31      	ldr	r3, [pc, #196]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 80168b6:	9304      	str	r3, [sp, #16]
 80168b8:	4b31      	ldr	r3, [pc, #196]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 80168ba:	9305      	str	r3, [sp, #20]
 80168bc:	4b31      	ldr	r3, [pc, #196]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80168be:	9307      	str	r3, [sp, #28]
 80168c0:	f000 bd6f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80168c4:	4b29      	ldr	r3, [pc, #164]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80168c6:	685b      	ldr	r3, [r3, #4]
 80168c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80168ca:	6a1b      	ldr	r3, [r3, #32]
 80168cc:	9303      	str	r3, [sp, #12]
 80168ce:	4b35      	ldr	r3, [pc, #212]	@ (80169a4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2720>)
 80168d0:	9304      	str	r3, [sp, #16]
 80168d2:	4b35      	ldr	r3, [pc, #212]	@ (80169a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2724>)
 80168d4:	9305      	str	r3, [sp, #20]
 80168d6:	4b2b      	ldr	r3, [pc, #172]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80168d8:	9307      	str	r3, [sp, #28]
 80168da:	f000 bd62 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80168de:	4b23      	ldr	r3, [pc, #140]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80168e0:	685b      	ldr	r3, [r3, #4]
 80168e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80168e4:	6a1b      	ldr	r3, [r3, #32]
 80168e6:	3340      	adds	r3, #64	@ 0x40
 80168e8:	9303      	str	r3, [sp, #12]
 80168ea:	4b24      	ldr	r3, [pc, #144]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 80168ec:	9304      	str	r3, [sp, #16]
 80168ee:	4b24      	ldr	r3, [pc, #144]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 80168f0:	9305      	str	r3, [sp, #20]
 80168f2:	4b24      	ldr	r3, [pc, #144]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 80168f4:	9307      	str	r3, [sp, #28]
 80168f6:	f000 bd54 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80168fa:	4b1c      	ldr	r3, [pc, #112]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 80168fc:	685b      	ldr	r3, [r3, #4]
 80168fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016900:	6a1b      	ldr	r3, [r3, #32]
 8016902:	3344      	adds	r3, #68	@ 0x44
 8016904:	9303      	str	r3, [sp, #12]
 8016906:	4b1d      	ldr	r3, [pc, #116]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 8016908:	9304      	str	r3, [sp, #16]
 801690a:	4b1d      	ldr	r3, [pc, #116]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 801690c:	9305      	str	r3, [sp, #20]
 801690e:	4b1d      	ldr	r3, [pc, #116]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 8016910:	9307      	str	r3, [sp, #28]
 8016912:	f000 bd46 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016916:	4b15      	ldr	r3, [pc, #84]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016918:	685b      	ldr	r3, [r3, #4]
 801691a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801691c:	6a1b      	ldr	r3, [r3, #32]
 801691e:	3348      	adds	r3, #72	@ 0x48
 8016920:	9303      	str	r3, [sp, #12]
 8016922:	4b16      	ldr	r3, [pc, #88]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 8016924:	9304      	str	r3, [sp, #16]
 8016926:	4b16      	ldr	r3, [pc, #88]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 8016928:	9305      	str	r3, [sp, #20]
 801692a:	4b16      	ldr	r3, [pc, #88]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 801692c:	9307      	str	r3, [sp, #28]
 801692e:	f000 bd38 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016932:	4b0e      	ldr	r3, [pc, #56]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016934:	685b      	ldr	r3, [r3, #4]
 8016936:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016938:	6a1b      	ldr	r3, [r3, #32]
 801693a:	334c      	adds	r3, #76	@ 0x4c
 801693c:	9303      	str	r3, [sp, #12]
 801693e:	4b1b      	ldr	r3, [pc, #108]	@ (80169ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2728>)
 8016940:	9304      	str	r3, [sp, #16]
 8016942:	4b1b      	ldr	r3, [pc, #108]	@ (80169b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x272c>)
 8016944:	9305      	str	r3, [sp, #20]
 8016946:	4b1b      	ldr	r3, [pc, #108]	@ (80169b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2730>)
 8016948:	9307      	str	r3, [sp, #28]
 801694a:	f000 bd2a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801694e:	4b07      	ldr	r3, [pc, #28]	@ (801696c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26e8>)
 8016950:	685b      	ldr	r3, [r3, #4]
 8016952:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016954:	6a1b      	ldr	r3, [r3, #32]
 8016956:	3350      	adds	r3, #80	@ 0x50
 8016958:	9303      	str	r3, [sp, #12]
 801695a:	4b08      	ldr	r3, [pc, #32]	@ (801697c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26f8>)
 801695c:	9304      	str	r3, [sp, #16]
 801695e:	4b08      	ldr	r3, [pc, #32]	@ (8016980 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x26fc>)
 8016960:	9305      	str	r3, [sp, #20]
 8016962:	4b08      	ldr	r3, [pc, #32]	@ (8016984 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2700>)
 8016964:	9307      	str	r3, [sp, #28]
 8016966:	f000 bd1c 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801696a:	bf00      	nop
 801696c:	200019cc 	.word	0x200019cc
 8016970:	080128b5 	.word	0x080128b5
 8016974:	080128b9 	.word	0x080128b9
 8016978:	20008d88 	.word	0x20008d88
 801697c:	0801283d 	.word	0x0801283d
 8016980:	08012845 	.word	0x08012845
 8016984:	20008e3c 	.word	0x20008e3c
 8016988:	08013089 	.word	0x08013089
 801698c:	0801e1a5 	.word	0x0801e1a5
 8016990:	0801307d 	.word	0x0801307d
 8016994:	0801e1bd 	.word	0x0801e1bd
 8016998:	080128bd 	.word	0x080128bd
 801699c:	080128c1 	.word	0x080128c1
 80169a0:	20008d74 	.word	0x20008d74
 80169a4:	08013071 	.word	0x08013071
 80169a8:	0801e1d5 	.word	0x0801e1d5
 80169ac:	0801285d 	.word	0x0801285d
 80169b0:	08012861 	.word	0x08012861
 80169b4:	20008e28 	.word	0x20008e28
 80169b8:	4b8b      	ldr	r3, [pc, #556]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 80169ba:	685b      	ldr	r3, [r3, #4]
 80169bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80169be:	6a1b      	ldr	r3, [r3, #32]
 80169c0:	3354      	adds	r3, #84	@ 0x54
 80169c2:	9303      	str	r3, [sp, #12]
 80169c4:	4b89      	ldr	r3, [pc, #548]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 80169c6:	9304      	str	r3, [sp, #16]
 80169c8:	4b89      	ldr	r3, [pc, #548]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 80169ca:	9305      	str	r3, [sp, #20]
 80169cc:	4b89      	ldr	r3, [pc, #548]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 80169ce:	9307      	str	r3, [sp, #28]
 80169d0:	f000 bce7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80169d4:	4b84      	ldr	r3, [pc, #528]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 80169d6:	685b      	ldr	r3, [r3, #4]
 80169d8:	699b      	ldr	r3, [r3, #24]
 80169da:	3314      	adds	r3, #20
 80169dc:	9303      	str	r3, [sp, #12]
 80169de:	4b86      	ldr	r3, [pc, #536]	@ (8016bf8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2974>)
 80169e0:	9304      	str	r3, [sp, #16]
 80169e2:	4b86      	ldr	r3, [pc, #536]	@ (8016bfc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2978>)
 80169e4:	9305      	str	r3, [sp, #20]
 80169e6:	4b86      	ldr	r3, [pc, #536]	@ (8016c00 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x297c>)
 80169e8:	9307      	str	r3, [sp, #28]
 80169ea:	f000 bcda 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80169ee:	4b7e      	ldr	r3, [pc, #504]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 80169f0:	685b      	ldr	r3, [r3, #4]
 80169f2:	699b      	ldr	r3, [r3, #24]
 80169f4:	9303      	str	r3, [sp, #12]
 80169f6:	4b83      	ldr	r3, [pc, #524]	@ (8016c04 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2980>)
 80169f8:	9304      	str	r3, [sp, #16]
 80169fa:	4b83      	ldr	r3, [pc, #524]	@ (8016c08 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2984>)
 80169fc:	9305      	str	r3, [sp, #20]
 80169fe:	4b7d      	ldr	r3, [pc, #500]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016a00:	9307      	str	r3, [sp, #28]
 8016a02:	f000 bcce 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a06:	4b78      	ldr	r3, [pc, #480]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a08:	685b      	ldr	r3, [r3, #4]
 8016a0a:	699b      	ldr	r3, [r3, #24]
 8016a0c:	3344      	adds	r3, #68	@ 0x44
 8016a0e:	9303      	str	r3, [sp, #12]
 8016a10:	4b76      	ldr	r3, [pc, #472]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016a12:	9304      	str	r3, [sp, #16]
 8016a14:	4b76      	ldr	r3, [pc, #472]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016a16:	9305      	str	r3, [sp, #20]
 8016a18:	4b76      	ldr	r3, [pc, #472]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016a1a:	9307      	str	r3, [sp, #28]
 8016a1c:	f000 bcc1 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a20:	4b71      	ldr	r3, [pc, #452]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a22:	685b      	ldr	r3, [r3, #4]
 8016a24:	699b      	ldr	r3, [r3, #24]
 8016a26:	3348      	adds	r3, #72	@ 0x48
 8016a28:	9303      	str	r3, [sp, #12]
 8016a2a:	4b70      	ldr	r3, [pc, #448]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016a2c:	9304      	str	r3, [sp, #16]
 8016a2e:	4b70      	ldr	r3, [pc, #448]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016a30:	9305      	str	r3, [sp, #20]
 8016a32:	4b70      	ldr	r3, [pc, #448]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016a34:	9307      	str	r3, [sp, #28]
 8016a36:	f000 bcb4 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a3a:	4b6b      	ldr	r3, [pc, #428]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a3c:	685b      	ldr	r3, [r3, #4]
 8016a3e:	699b      	ldr	r3, [r3, #24]
 8016a40:	3338      	adds	r3, #56	@ 0x38
 8016a42:	9303      	str	r3, [sp, #12]
 8016a44:	4b69      	ldr	r3, [pc, #420]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016a46:	9304      	str	r3, [sp, #16]
 8016a48:	4b69      	ldr	r3, [pc, #420]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016a4a:	9305      	str	r3, [sp, #20]
 8016a4c:	4b69      	ldr	r3, [pc, #420]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016a4e:	9307      	str	r3, [sp, #28]
 8016a50:	f000 bca7 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a54:	4b64      	ldr	r3, [pc, #400]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a56:	685b      	ldr	r3, [r3, #4]
 8016a58:	699b      	ldr	r3, [r3, #24]
 8016a5a:	3356      	adds	r3, #86	@ 0x56
 8016a5c:	9303      	str	r3, [sp, #12]
 8016a5e:	4b6b      	ldr	r3, [pc, #428]	@ (8016c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2988>)
 8016a60:	9304      	str	r3, [sp, #16]
 8016a62:	4b6b      	ldr	r3, [pc, #428]	@ (8016c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x298c>)
 8016a64:	9305      	str	r3, [sp, #20]
 8016a66:	4b6b      	ldr	r3, [pc, #428]	@ (8016c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2990>)
 8016a68:	9307      	str	r3, [sp, #28]
 8016a6a:	f000 bc9a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a6e:	4b5e      	ldr	r3, [pc, #376]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a70:	685b      	ldr	r3, [r3, #4]
 8016a72:	699b      	ldr	r3, [r3, #24]
 8016a74:	68db      	ldr	r3, [r3, #12]
 8016a76:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016a7a:	330c      	adds	r3, #12
 8016a7c:	9303      	str	r3, [sp, #12]
 8016a7e:	4b5b      	ldr	r3, [pc, #364]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016a80:	9304      	str	r3, [sp, #16]
 8016a82:	4b5b      	ldr	r3, [pc, #364]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016a84:	9305      	str	r3, [sp, #20]
 8016a86:	4b5b      	ldr	r3, [pc, #364]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016a88:	9307      	str	r3, [sp, #28]
 8016a8a:	f000 bc8a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016a8e:	4b56      	ldr	r3, [pc, #344]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016a90:	685b      	ldr	r3, [r3, #4]
 8016a92:	699b      	ldr	r3, [r3, #24]
 8016a94:	68db      	ldr	r3, [r3, #12]
 8016a96:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016a9a:	3311      	adds	r3, #17
 8016a9c:	9303      	str	r3, [sp, #12]
 8016a9e:	4b5b      	ldr	r3, [pc, #364]	@ (8016c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2988>)
 8016aa0:	9304      	str	r3, [sp, #16]
 8016aa2:	4b5b      	ldr	r3, [pc, #364]	@ (8016c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x298c>)
 8016aa4:	9305      	str	r3, [sp, #20]
 8016aa6:	4b5b      	ldr	r3, [pc, #364]	@ (8016c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2990>)
 8016aa8:	9307      	str	r3, [sp, #28]
 8016aaa:	f000 bc7a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016aae:	4b4e      	ldr	r3, [pc, #312]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016ab0:	685b      	ldr	r3, [r3, #4]
 8016ab2:	699b      	ldr	r3, [r3, #24]
 8016ab4:	68db      	ldr	r3, [r3, #12]
 8016ab6:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016aba:	3313      	adds	r3, #19
 8016abc:	9303      	str	r3, [sp, #12]
 8016abe:	4b53      	ldr	r3, [pc, #332]	@ (8016c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2988>)
 8016ac0:	9304      	str	r3, [sp, #16]
 8016ac2:	4b53      	ldr	r3, [pc, #332]	@ (8016c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x298c>)
 8016ac4:	9305      	str	r3, [sp, #20]
 8016ac6:	4b53      	ldr	r3, [pc, #332]	@ (8016c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2990>)
 8016ac8:	9307      	str	r3, [sp, #28]
 8016aca:	f000 bc6a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016ace:	4b46      	ldr	r3, [pc, #280]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016ad0:	685b      	ldr	r3, [r3, #4]
 8016ad2:	699b      	ldr	r3, [r3, #24]
 8016ad4:	68db      	ldr	r3, [r3, #12]
 8016ad6:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016ada:	3310      	adds	r3, #16
 8016adc:	9303      	str	r3, [sp, #12]
 8016ade:	4b4b      	ldr	r3, [pc, #300]	@ (8016c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2988>)
 8016ae0:	9304      	str	r3, [sp, #16]
 8016ae2:	4b4b      	ldr	r3, [pc, #300]	@ (8016c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x298c>)
 8016ae4:	9305      	str	r3, [sp, #20]
 8016ae6:	4b4b      	ldr	r3, [pc, #300]	@ (8016c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2990>)
 8016ae8:	9307      	str	r3, [sp, #28]
 8016aea:	f000 bc5a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016aee:	4b3e      	ldr	r3, [pc, #248]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016af0:	685b      	ldr	r3, [r3, #4]
 8016af2:	699b      	ldr	r3, [r3, #24]
 8016af4:	68db      	ldr	r3, [r3, #12]
 8016af6:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016afa:	3312      	adds	r3, #18
 8016afc:	9303      	str	r3, [sp, #12]
 8016afe:	4b43      	ldr	r3, [pc, #268]	@ (8016c0c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2988>)
 8016b00:	9304      	str	r3, [sp, #16]
 8016b02:	4b43      	ldr	r3, [pc, #268]	@ (8016c10 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x298c>)
 8016b04:	9305      	str	r3, [sp, #20]
 8016b06:	4b43      	ldr	r3, [pc, #268]	@ (8016c14 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2990>)
 8016b08:	9307      	str	r3, [sp, #28]
 8016b0a:	f000 bc4a 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b0e:	4b36      	ldr	r3, [pc, #216]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b10:	685b      	ldr	r3, [r3, #4]
 8016b12:	699b      	ldr	r3, [r3, #24]
 8016b14:	68db      	ldr	r3, [r3, #12]
 8016b16:	9303      	str	r3, [sp, #12]
 8016b18:	4b3f      	ldr	r3, [pc, #252]	@ (8016c18 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2994>)
 8016b1a:	9304      	str	r3, [sp, #16]
 8016b1c:	4b3f      	ldr	r3, [pc, #252]	@ (8016c1c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2998>)
 8016b1e:	9305      	str	r3, [sp, #20]
 8016b20:	4b3f      	ldr	r3, [pc, #252]	@ (8016c20 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x299c>)
 8016b22:	9307      	str	r3, [sp, #28]
 8016b24:	f000 bc3d 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b28:	4b2f      	ldr	r3, [pc, #188]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b2a:	685b      	ldr	r3, [r3, #4]
 8016b2c:	699b      	ldr	r3, [r3, #24]
 8016b2e:	68db      	ldr	r3, [r3, #12]
 8016b30:	3301      	adds	r3, #1
 8016b32:	9303      	str	r3, [sp, #12]
 8016b34:	4b3b      	ldr	r3, [pc, #236]	@ (8016c24 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x29a0>)
 8016b36:	9304      	str	r3, [sp, #16]
 8016b38:	4b3b      	ldr	r3, [pc, #236]	@ (8016c28 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x29a4>)
 8016b3a:	9305      	str	r3, [sp, #20]
 8016b3c:	4b3b      	ldr	r3, [pc, #236]	@ (8016c2c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x29a8>)
 8016b3e:	9307      	str	r3, [sp, #28]
 8016b40:	f000 bc2f 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b44:	4b28      	ldr	r3, [pc, #160]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b46:	685b      	ldr	r3, [r3, #4]
 8016b48:	699b      	ldr	r3, [r3, #24]
 8016b4a:	68db      	ldr	r3, [r3, #12]
 8016b4c:	3304      	adds	r3, #4
 8016b4e:	9303      	str	r3, [sp, #12]
 8016b50:	4b26      	ldr	r3, [pc, #152]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016b52:	9304      	str	r3, [sp, #16]
 8016b54:	4b26      	ldr	r3, [pc, #152]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016b56:	9305      	str	r3, [sp, #20]
 8016b58:	4b26      	ldr	r3, [pc, #152]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016b5a:	9307      	str	r3, [sp, #28]
 8016b5c:	f000 bc21 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b60:	4b21      	ldr	r3, [pc, #132]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b62:	685b      	ldr	r3, [r3, #4]
 8016b64:	699b      	ldr	r3, [r3, #24]
 8016b66:	68db      	ldr	r3, [r3, #12]
 8016b68:	3308      	adds	r3, #8
 8016b6a:	9303      	str	r3, [sp, #12]
 8016b6c:	4b1f      	ldr	r3, [pc, #124]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016b6e:	9304      	str	r3, [sp, #16]
 8016b70:	4b1f      	ldr	r3, [pc, #124]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016b72:	9305      	str	r3, [sp, #20]
 8016b74:	4b1f      	ldr	r3, [pc, #124]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016b76:	9307      	str	r3, [sp, #28]
 8016b78:	f000 bc13 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b7c:	4b1a      	ldr	r3, [pc, #104]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b7e:	685b      	ldr	r3, [r3, #4]
 8016b80:	699b      	ldr	r3, [r3, #24]
 8016b82:	68db      	ldr	r3, [r3, #12]
 8016b84:	330c      	adds	r3, #12
 8016b86:	9303      	str	r3, [sp, #12]
 8016b88:	4b18      	ldr	r3, [pc, #96]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016b8a:	9304      	str	r3, [sp, #16]
 8016b8c:	4b18      	ldr	r3, [pc, #96]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016b8e:	9305      	str	r3, [sp, #20]
 8016b90:	4b18      	ldr	r3, [pc, #96]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016b92:	9307      	str	r3, [sp, #28]
 8016b94:	f000 bc05 	b.w	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016b98:	4b13      	ldr	r3, [pc, #76]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016b9a:	685b      	ldr	r3, [r3, #4]
 8016b9c:	699b      	ldr	r3, [r3, #24]
 8016b9e:	68db      	ldr	r3, [r3, #12]
 8016ba0:	3310      	adds	r3, #16
 8016ba2:	9303      	str	r3, [sp, #12]
 8016ba4:	4b11      	ldr	r3, [pc, #68]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016ba6:	9304      	str	r3, [sp, #16]
 8016ba8:	4b11      	ldr	r3, [pc, #68]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016baa:	9305      	str	r3, [sp, #20]
 8016bac:	4b11      	ldr	r3, [pc, #68]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016bae:	9307      	str	r3, [sp, #28]
 8016bb0:	e3f7      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016bb2:	4b0d      	ldr	r3, [pc, #52]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016bb4:	685b      	ldr	r3, [r3, #4]
 8016bb6:	699b      	ldr	r3, [r3, #24]
 8016bb8:	68db      	ldr	r3, [r3, #12]
 8016bba:	3314      	adds	r3, #20
 8016bbc:	9303      	str	r3, [sp, #12]
 8016bbe:	4b0b      	ldr	r3, [pc, #44]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016bc0:	9304      	str	r3, [sp, #16]
 8016bc2:	4b0b      	ldr	r3, [pc, #44]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016bc4:	9305      	str	r3, [sp, #20]
 8016bc6:	4b0b      	ldr	r3, [pc, #44]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016bc8:	9307      	str	r3, [sp, #28]
 8016bca:	e3ea      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016bcc:	4b06      	ldr	r3, [pc, #24]	@ (8016be8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2964>)
 8016bce:	685b      	ldr	r3, [r3, #4]
 8016bd0:	699b      	ldr	r3, [r3, #24]
 8016bd2:	68db      	ldr	r3, [r3, #12]
 8016bd4:	3318      	adds	r3, #24
 8016bd6:	9303      	str	r3, [sp, #12]
 8016bd8:	4b04      	ldr	r3, [pc, #16]	@ (8016bec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2968>)
 8016bda:	9304      	str	r3, [sp, #16]
 8016bdc:	4b04      	ldr	r3, [pc, #16]	@ (8016bf0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x296c>)
 8016bde:	9305      	str	r3, [sp, #20]
 8016be0:	4b04      	ldr	r3, [pc, #16]	@ (8016bf4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2970>)
 8016be2:	9307      	str	r3, [sp, #28]
 8016be4:	e3dd      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016be6:	bf00      	nop
 8016be8:	200019cc 	.word	0x200019cc
 8016bec:	0801283d 	.word	0x0801283d
 8016bf0:	08012845 	.word	0x08012845
 8016bf4:	20008e3c 	.word	0x20008e3c
 8016bf8:	080128c5 	.word	0x080128c5
 8016bfc:	080128c9 	.word	0x080128c9
 8016c00:	20008d60 	.word	0x20008d60
 8016c04:	08013065 	.word	0x08013065
 8016c08:	0801e1ed 	.word	0x0801e1ed
 8016c0c:	0801285d 	.word	0x0801285d
 8016c10:	08012861 	.word	0x08012861
 8016c14:	20008e28 	.word	0x20008e28
 8016c18:	080128cd 	.word	0x080128cd
 8016c1c:	080128d1 	.word	0x080128d1
 8016c20:	20008d4c 	.word	0x20008d4c
 8016c24:	080128d5 	.word	0x080128d5
 8016c28:	080128d9 	.word	0x080128d9
 8016c2c:	20008d38 	.word	0x20008d38
 8016c30:	4b84      	ldr	r3, [pc, #528]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016c32:	685b      	ldr	r3, [r3, #4]
 8016c34:	699b      	ldr	r3, [r3, #24]
 8016c36:	68db      	ldr	r3, [r3, #12]
 8016c38:	331c      	adds	r3, #28
 8016c3a:	9303      	str	r3, [sp, #12]
 8016c3c:	4b82      	ldr	r3, [pc, #520]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016c3e:	9304      	str	r3, [sp, #16]
 8016c40:	4b82      	ldr	r3, [pc, #520]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016c42:	9305      	str	r3, [sp, #20]
 8016c44:	4b82      	ldr	r3, [pc, #520]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016c46:	9307      	str	r3, [sp, #28]
 8016c48:	e3ab      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016c4a:	4b7e      	ldr	r3, [pc, #504]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016c4c:	685b      	ldr	r3, [r3, #4]
 8016c4e:	699b      	ldr	r3, [r3, #24]
 8016c50:	68db      	ldr	r3, [r3, #12]
 8016c52:	3320      	adds	r3, #32
 8016c54:	9303      	str	r3, [sp, #12]
 8016c56:	4b7f      	ldr	r3, [pc, #508]	@ (8016e54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd0>)
 8016c58:	9304      	str	r3, [sp, #16]
 8016c5a:	4b7f      	ldr	r3, [pc, #508]	@ (8016e58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd4>)
 8016c5c:	9305      	str	r3, [sp, #20]
 8016c5e:	4b7f      	ldr	r3, [pc, #508]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016c60:	9307      	str	r3, [sp, #28]
 8016c62:	e39e      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016c64:	4b77      	ldr	r3, [pc, #476]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016c66:	685b      	ldr	r3, [r3, #4]
 8016c68:	699b      	ldr	r3, [r3, #24]
 8016c6a:	68db      	ldr	r3, [r3, #12]
 8016c6c:	3324      	adds	r3, #36	@ 0x24
 8016c6e:	9303      	str	r3, [sp, #12]
 8016c70:	4b75      	ldr	r3, [pc, #468]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016c72:	9304      	str	r3, [sp, #16]
 8016c74:	4b75      	ldr	r3, [pc, #468]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016c76:	9305      	str	r3, [sp, #20]
 8016c78:	4b75      	ldr	r3, [pc, #468]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016c7a:	9307      	str	r3, [sp, #28]
 8016c7c:	e391      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016c7e:	4b71      	ldr	r3, [pc, #452]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016c80:	685b      	ldr	r3, [r3, #4]
 8016c82:	699b      	ldr	r3, [r3, #24]
 8016c84:	68db      	ldr	r3, [r3, #12]
 8016c86:	3330      	adds	r3, #48	@ 0x30
 8016c88:	9303      	str	r3, [sp, #12]
 8016c8a:	4b6f      	ldr	r3, [pc, #444]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016c8c:	9304      	str	r3, [sp, #16]
 8016c8e:	4b6f      	ldr	r3, [pc, #444]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016c90:	9305      	str	r3, [sp, #20]
 8016c92:	4b6f      	ldr	r3, [pc, #444]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016c94:	9307      	str	r3, [sp, #28]
 8016c96:	e384      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016c98:	4b6a      	ldr	r3, [pc, #424]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016c9a:	685b      	ldr	r3, [r3, #4]
 8016c9c:	699b      	ldr	r3, [r3, #24]
 8016c9e:	68db      	ldr	r3, [r3, #12]
 8016ca0:	3328      	adds	r3, #40	@ 0x28
 8016ca2:	9303      	str	r3, [sp, #12]
 8016ca4:	4b68      	ldr	r3, [pc, #416]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016ca6:	9304      	str	r3, [sp, #16]
 8016ca8:	4b68      	ldr	r3, [pc, #416]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016caa:	9305      	str	r3, [sp, #20]
 8016cac:	4b68      	ldr	r3, [pc, #416]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016cae:	9307      	str	r3, [sp, #28]
 8016cb0:	e377      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016cb2:	4b64      	ldr	r3, [pc, #400]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016cb4:	685b      	ldr	r3, [r3, #4]
 8016cb6:	699b      	ldr	r3, [r3, #24]
 8016cb8:	68db      	ldr	r3, [r3, #12]
 8016cba:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016cbe:	3314      	adds	r3, #20
 8016cc0:	9303      	str	r3, [sp, #12]
 8016cc2:	4b67      	ldr	r3, [pc, #412]	@ (8016e60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bdc>)
 8016cc4:	9304      	str	r3, [sp, #16]
 8016cc6:	4b67      	ldr	r3, [pc, #412]	@ (8016e64 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2be0>)
 8016cc8:	9305      	str	r3, [sp, #20]
 8016cca:	4b67      	ldr	r3, [pc, #412]	@ (8016e68 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2be4>)
 8016ccc:	9307      	str	r3, [sp, #28]
 8016cce:	e368      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016cd0:	4b5c      	ldr	r3, [pc, #368]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016cd2:	685b      	ldr	r3, [r3, #4]
 8016cd4:	699b      	ldr	r3, [r3, #24]
 8016cd6:	68db      	ldr	r3, [r3, #12]
 8016cd8:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016cdc:	3318      	adds	r3, #24
 8016cde:	9303      	str	r3, [sp, #12]
 8016ce0:	4b59      	ldr	r3, [pc, #356]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016ce2:	9304      	str	r3, [sp, #16]
 8016ce4:	4b59      	ldr	r3, [pc, #356]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016ce6:	9305      	str	r3, [sp, #20]
 8016ce8:	4b59      	ldr	r3, [pc, #356]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016cea:	9307      	str	r3, [sp, #28]
 8016cec:	e359      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016cee:	4b55      	ldr	r3, [pc, #340]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016cf0:	685b      	ldr	r3, [r3, #4]
 8016cf2:	699b      	ldr	r3, [r3, #24]
 8016cf4:	68db      	ldr	r3, [r3, #12]
 8016cf6:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016cfa:	331c      	adds	r3, #28
 8016cfc:	9303      	str	r3, [sp, #12]
 8016cfe:	4b58      	ldr	r3, [pc, #352]	@ (8016e60 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bdc>)
 8016d00:	9304      	str	r3, [sp, #16]
 8016d02:	4b58      	ldr	r3, [pc, #352]	@ (8016e64 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2be0>)
 8016d04:	9305      	str	r3, [sp, #20]
 8016d06:	4b58      	ldr	r3, [pc, #352]	@ (8016e68 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2be4>)
 8016d08:	9307      	str	r3, [sp, #28]
 8016d0a:	e34a      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d0c:	4b4d      	ldr	r3, [pc, #308]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d0e:	685b      	ldr	r3, [r3, #4]
 8016d10:	699b      	ldr	r3, [r3, #24]
 8016d12:	68db      	ldr	r3, [r3, #12]
 8016d14:	9303      	str	r3, [sp, #12]
 8016d16:	4b55      	ldr	r3, [pc, #340]	@ (8016e6c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2be8>)
 8016d18:	9304      	str	r3, [sp, #16]
 8016d1a:	4b55      	ldr	r3, [pc, #340]	@ (8016e70 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bec>)
 8016d1c:	9305      	str	r3, [sp, #20]
 8016d1e:	4b4c      	ldr	r3, [pc, #304]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016d20:	9307      	str	r3, [sp, #28]
 8016d22:	e33e      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d24:	4b47      	ldr	r3, [pc, #284]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d26:	685b      	ldr	r3, [r3, #4]
 8016d28:	699b      	ldr	r3, [r3, #24]
 8016d2a:	68db      	ldr	r3, [r3, #12]
 8016d2c:	f503 5361 	add.w	r3, r3, #14400	@ 0x3840
 8016d30:	3338      	adds	r3, #56	@ 0x38
 8016d32:	9303      	str	r3, [sp, #12]
 8016d34:	4b47      	ldr	r3, [pc, #284]	@ (8016e54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd0>)
 8016d36:	9304      	str	r3, [sp, #16]
 8016d38:	4b47      	ldr	r3, [pc, #284]	@ (8016e58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd4>)
 8016d3a:	9305      	str	r3, [sp, #20]
 8016d3c:	4b47      	ldr	r3, [pc, #284]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016d3e:	9307      	str	r3, [sp, #28]
 8016d40:	e32f      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d42:	4b40      	ldr	r3, [pc, #256]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d44:	685b      	ldr	r3, [r3, #4]
 8016d46:	699b      	ldr	r3, [r3, #24]
 8016d48:	68db      	ldr	r3, [r3, #12]
 8016d4a:	f503 5361 	add.w	r3, r3, #14400	@ 0x3840
 8016d4e:	333c      	adds	r3, #60	@ 0x3c
 8016d50:	9303      	str	r3, [sp, #12]
 8016d52:	4b3d      	ldr	r3, [pc, #244]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016d54:	9304      	str	r3, [sp, #16]
 8016d56:	4b3d      	ldr	r3, [pc, #244]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016d58:	9305      	str	r3, [sp, #20]
 8016d5a:	4b3d      	ldr	r3, [pc, #244]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016d5c:	9307      	str	r3, [sp, #28]
 8016d5e:	e320      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d60:	4b38      	ldr	r3, [pc, #224]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d62:	685b      	ldr	r3, [r3, #4]
 8016d64:	699b      	ldr	r3, [r3, #24]
 8016d66:	68db      	ldr	r3, [r3, #12]
 8016d68:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016d6c:	9303      	str	r3, [sp, #12]
 8016d6e:	4b36      	ldr	r3, [pc, #216]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016d70:	9304      	str	r3, [sp, #16]
 8016d72:	4b36      	ldr	r3, [pc, #216]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016d74:	9305      	str	r3, [sp, #20]
 8016d76:	4b36      	ldr	r3, [pc, #216]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016d78:	9307      	str	r3, [sp, #28]
 8016d7a:	e312      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d7c:	4b31      	ldr	r3, [pc, #196]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d7e:	685b      	ldr	r3, [r3, #4]
 8016d80:	699b      	ldr	r3, [r3, #24]
 8016d82:	68db      	ldr	r3, [r3, #12]
 8016d84:	f503 5362 	add.w	r3, r3, #14464	@ 0x3880
 8016d88:	3308      	adds	r3, #8
 8016d8a:	9303      	str	r3, [sp, #12]
 8016d8c:	4b31      	ldr	r3, [pc, #196]	@ (8016e54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd0>)
 8016d8e:	9304      	str	r3, [sp, #16]
 8016d90:	4b31      	ldr	r3, [pc, #196]	@ (8016e58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd4>)
 8016d92:	9305      	str	r3, [sp, #20]
 8016d94:	4b31      	ldr	r3, [pc, #196]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016d96:	9307      	str	r3, [sp, #28]
 8016d98:	e303      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016d9a:	4b2a      	ldr	r3, [pc, #168]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016d9c:	685b      	ldr	r3, [r3, #4]
 8016d9e:	699b      	ldr	r3, [r3, #24]
 8016da0:	3304      	adds	r3, #4
 8016da2:	9303      	str	r3, [sp, #12]
 8016da4:	4b28      	ldr	r3, [pc, #160]	@ (8016e48 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc4>)
 8016da6:	9304      	str	r3, [sp, #16]
 8016da8:	4b28      	ldr	r3, [pc, #160]	@ (8016e4c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc8>)
 8016daa:	9305      	str	r3, [sp, #20]
 8016dac:	4b28      	ldr	r3, [pc, #160]	@ (8016e50 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bcc>)
 8016dae:	9307      	str	r3, [sp, #28]
 8016db0:	e2f7      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016db2:	4b24      	ldr	r3, [pc, #144]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016db4:	685b      	ldr	r3, [r3, #4]
 8016db6:	699b      	ldr	r3, [r3, #24]
 8016db8:	3308      	adds	r3, #8
 8016dba:	9303      	str	r3, [sp, #12]
 8016dbc:	4b25      	ldr	r3, [pc, #148]	@ (8016e54 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd0>)
 8016dbe:	9304      	str	r3, [sp, #16]
 8016dc0:	4b25      	ldr	r3, [pc, #148]	@ (8016e58 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd4>)
 8016dc2:	9305      	str	r3, [sp, #20]
 8016dc4:	4b25      	ldr	r3, [pc, #148]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016dc6:	9307      	str	r3, [sp, #28]
 8016dc8:	e2eb      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016dca:	4b1e      	ldr	r3, [pc, #120]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016dcc:	685b      	ldr	r3, [r3, #4]
 8016dce:	691b      	ldr	r3, [r3, #16]
 8016dd0:	3314      	adds	r3, #20
 8016dd2:	9303      	str	r3, [sp, #12]
 8016dd4:	4b27      	ldr	r3, [pc, #156]	@ (8016e74 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bf0>)
 8016dd6:	9304      	str	r3, [sp, #16]
 8016dd8:	4b27      	ldr	r3, [pc, #156]	@ (8016e78 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bf4>)
 8016dda:	9305      	str	r3, [sp, #20]
 8016ddc:	4b27      	ldr	r3, [pc, #156]	@ (8016e7c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bf8>)
 8016dde:	9307      	str	r3, [sp, #28]
 8016de0:	e2df      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016de2:	4b18      	ldr	r3, [pc, #96]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016de4:	685b      	ldr	r3, [r3, #4]
 8016de6:	691b      	ldr	r3, [r3, #16]
 8016de8:	3340      	adds	r3, #64	@ 0x40
 8016dea:	9303      	str	r3, [sp, #12]
 8016dec:	4b24      	ldr	r3, [pc, #144]	@ (8016e80 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bfc>)
 8016dee:	9304      	str	r3, [sp, #16]
 8016df0:	4b24      	ldr	r3, [pc, #144]	@ (8016e84 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c00>)
 8016df2:	9305      	str	r3, [sp, #20]
 8016df4:	4b24      	ldr	r3, [pc, #144]	@ (8016e88 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c04>)
 8016df6:	9307      	str	r3, [sp, #28]
 8016df8:	e2d3      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016dfa:	4b12      	ldr	r3, [pc, #72]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016dfc:	685b      	ldr	r3, [r3, #4]
 8016dfe:	691b      	ldr	r3, [r3, #16]
 8016e00:	68db      	ldr	r3, [r3, #12]
 8016e02:	9303      	str	r3, [sp, #12]
 8016e04:	4b21      	ldr	r3, [pc, #132]	@ (8016e8c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c08>)
 8016e06:	9304      	str	r3, [sp, #16]
 8016e08:	4b21      	ldr	r3, [pc, #132]	@ (8016e90 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c0c>)
 8016e0a:	9305      	str	r3, [sp, #20]
 8016e0c:	4b21      	ldr	r3, [pc, #132]	@ (8016e94 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c10>)
 8016e0e:	9307      	str	r3, [sp, #28]
 8016e10:	e2c7      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016e12:	4b0c      	ldr	r3, [pc, #48]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016e14:	685b      	ldr	r3, [r3, #4]
 8016e16:	691b      	ldr	r3, [r3, #16]
 8016e18:	68db      	ldr	r3, [r3, #12]
 8016e1a:	9303      	str	r3, [sp, #12]
 8016e1c:	4b1e      	ldr	r3, [pc, #120]	@ (8016e98 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c14>)
 8016e1e:	9304      	str	r3, [sp, #16]
 8016e20:	4b1e      	ldr	r3, [pc, #120]	@ (8016e9c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c18>)
 8016e22:	9305      	str	r3, [sp, #20]
 8016e24:	4b0d      	ldr	r3, [pc, #52]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016e26:	9307      	str	r3, [sp, #28]
 8016e28:	e2bb      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016e2a:	4b06      	ldr	r3, [pc, #24]	@ (8016e44 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bc0>)
 8016e2c:	685b      	ldr	r3, [r3, #4]
 8016e2e:	691b      	ldr	r3, [r3, #16]
 8016e30:	68db      	ldr	r3, [r3, #12]
 8016e32:	9303      	str	r3, [sp, #12]
 8016e34:	4b1a      	ldr	r3, [pc, #104]	@ (8016ea0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c1c>)
 8016e36:	9304      	str	r3, [sp, #16]
 8016e38:	4b1a      	ldr	r3, [pc, #104]	@ (8016ea4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2c20>)
 8016e3a:	9305      	str	r3, [sp, #20]
 8016e3c:	4b07      	ldr	r3, [pc, #28]	@ (8016e5c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2bd8>)
 8016e3e:	9307      	str	r3, [sp, #28]
 8016e40:	e2af      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016e42:	bf00      	nop
 8016e44:	200019cc 	.word	0x200019cc
 8016e48:	0801283d 	.word	0x0801283d
 8016e4c:	08012845 	.word	0x08012845
 8016e50:	20008e3c 	.word	0x20008e3c
 8016e54:	0801285d 	.word	0x0801285d
 8016e58:	08012861 	.word	0x08012861
 8016e5c:	20008e28 	.word	0x20008e28
 8016e60:	080128dd 	.word	0x080128dd
 8016e64:	080128e1 	.word	0x080128e1
 8016e68:	20008d24 	.word	0x20008d24
 8016e6c:	08013059 	.word	0x08013059
 8016e70:	0801e209 	.word	0x0801e209
 8016e74:	080128e5 	.word	0x080128e5
 8016e78:	080128e9 	.word	0x080128e9
 8016e7c:	20008d10 	.word	0x20008d10
 8016e80:	080128b5 	.word	0x080128b5
 8016e84:	080128b9 	.word	0x080128b9
 8016e88:	20008d88 	.word	0x20008d88
 8016e8c:	080128f1 	.word	0x080128f1
 8016e90:	080128f5 	.word	0x080128f5
 8016e94:	20008cfc 	.word	0x20008cfc
 8016e98:	0801304d 	.word	0x0801304d
 8016e9c:	0801e221 	.word	0x0801e221
 8016ea0:	08013045 	.word	0x08013045
 8016ea4:	0801e241 	.word	0x0801e241
 8016ea8:	4b7d      	ldr	r3, [pc, #500]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016eaa:	685b      	ldr	r3, [r3, #4]
 8016eac:	691b      	ldr	r3, [r3, #16]
 8016eae:	68db      	ldr	r3, [r3, #12]
 8016eb0:	9303      	str	r3, [sp, #12]
 8016eb2:	4b7c      	ldr	r3, [pc, #496]	@ (80170a4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e20>)
 8016eb4:	9304      	str	r3, [sp, #16]
 8016eb6:	4b7c      	ldr	r3, [pc, #496]	@ (80170a8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e24>)
 8016eb8:	9305      	str	r3, [sp, #20]
 8016eba:	4b7c      	ldr	r3, [pc, #496]	@ (80170ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e28>)
 8016ebc:	9307      	str	r3, [sp, #28]
 8016ebe:	e270      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016ec0:	4b77      	ldr	r3, [pc, #476]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016ec2:	685b      	ldr	r3, [r3, #4]
 8016ec4:	691b      	ldr	r3, [r3, #16]
 8016ec6:	68db      	ldr	r3, [r3, #12]
 8016ec8:	3304      	adds	r3, #4
 8016eca:	9303      	str	r3, [sp, #12]
 8016ecc:	4b78      	ldr	r3, [pc, #480]	@ (80170b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e2c>)
 8016ece:	9304      	str	r3, [sp, #16]
 8016ed0:	4b78      	ldr	r3, [pc, #480]	@ (80170b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e30>)
 8016ed2:	9305      	str	r3, [sp, #20]
 8016ed4:	4b78      	ldr	r3, [pc, #480]	@ (80170b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e34>)
 8016ed6:	9307      	str	r3, [sp, #28]
 8016ed8:	e263      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016eda:	4b71      	ldr	r3, [pc, #452]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016edc:	685b      	ldr	r3, [r3, #4]
 8016ede:	691b      	ldr	r3, [r3, #16]
 8016ee0:	68db      	ldr	r3, [r3, #12]
 8016ee2:	3308      	adds	r3, #8
 8016ee4:	9303      	str	r3, [sp, #12]
 8016ee6:	4b75      	ldr	r3, [pc, #468]	@ (80170bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e38>)
 8016ee8:	9304      	str	r3, [sp, #16]
 8016eea:	4b75      	ldr	r3, [pc, #468]	@ (80170c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e3c>)
 8016eec:	9305      	str	r3, [sp, #20]
 8016eee:	4b75      	ldr	r3, [pc, #468]	@ (80170c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e40>)
 8016ef0:	9307      	str	r3, [sp, #28]
 8016ef2:	e256      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016ef4:	4b6a      	ldr	r3, [pc, #424]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016ef6:	685b      	ldr	r3, [r3, #4]
 8016ef8:	691b      	ldr	r3, [r3, #16]
 8016efa:	68db      	ldr	r3, [r3, #12]
 8016efc:	330c      	adds	r3, #12
 8016efe:	9303      	str	r3, [sp, #12]
 8016f00:	4b6e      	ldr	r3, [pc, #440]	@ (80170bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e38>)
 8016f02:	9304      	str	r3, [sp, #16]
 8016f04:	4b6e      	ldr	r3, [pc, #440]	@ (80170c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e3c>)
 8016f06:	9305      	str	r3, [sp, #20]
 8016f08:	4b6e      	ldr	r3, [pc, #440]	@ (80170c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e40>)
 8016f0a:	9307      	str	r3, [sp, #28]
 8016f0c:	e249      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f0e:	4b64      	ldr	r3, [pc, #400]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f10:	685b      	ldr	r3, [r3, #4]
 8016f12:	691b      	ldr	r3, [r3, #16]
 8016f14:	68db      	ldr	r3, [r3, #12]
 8016f16:	9303      	str	r3, [sp, #12]
 8016f18:	4b6b      	ldr	r3, [pc, #428]	@ (80170c8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e44>)
 8016f1a:	9304      	str	r3, [sp, #16]
 8016f1c:	4b6b      	ldr	r3, [pc, #428]	@ (80170cc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e48>)
 8016f1e:	9305      	str	r3, [sp, #20]
 8016f20:	4b65      	ldr	r3, [pc, #404]	@ (80170b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e34>)
 8016f22:	9307      	str	r3, [sp, #28]
 8016f24:	e23d      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f26:	4b5e      	ldr	r3, [pc, #376]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f28:	685b      	ldr	r3, [r3, #4]
 8016f2a:	691b      	ldr	r3, [r3, #16]
 8016f2c:	68db      	ldr	r3, [r3, #12]
 8016f2e:	3310      	adds	r3, #16
 8016f30:	9303      	str	r3, [sp, #12]
 8016f32:	4b67      	ldr	r3, [pc, #412]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8016f34:	9304      	str	r3, [sp, #16]
 8016f36:	4b67      	ldr	r3, [pc, #412]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8016f38:	9305      	str	r3, [sp, #20]
 8016f3a:	4b67      	ldr	r3, [pc, #412]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8016f3c:	9307      	str	r3, [sp, #28]
 8016f3e:	e230      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f40:	4b57      	ldr	r3, [pc, #348]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f42:	685b      	ldr	r3, [r3, #4]
 8016f44:	691b      	ldr	r3, [r3, #16]
 8016f46:	68db      	ldr	r3, [r3, #12]
 8016f48:	3314      	adds	r3, #20
 8016f4a:	9303      	str	r3, [sp, #12]
 8016f4c:	4b58      	ldr	r3, [pc, #352]	@ (80170b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e2c>)
 8016f4e:	9304      	str	r3, [sp, #16]
 8016f50:	4b58      	ldr	r3, [pc, #352]	@ (80170b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e30>)
 8016f52:	9305      	str	r3, [sp, #20]
 8016f54:	4b58      	ldr	r3, [pc, #352]	@ (80170b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e34>)
 8016f56:	9307      	str	r3, [sp, #28]
 8016f58:	e223      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f5a:	4b51      	ldr	r3, [pc, #324]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f5c:	685b      	ldr	r3, [r3, #4]
 8016f5e:	691b      	ldr	r3, [r3, #16]
 8016f60:	68db      	ldr	r3, [r3, #12]
 8016f62:	9303      	str	r3, [sp, #12]
 8016f64:	4b5d      	ldr	r3, [pc, #372]	@ (80170dc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e58>)
 8016f66:	9304      	str	r3, [sp, #16]
 8016f68:	4b5d      	ldr	r3, [pc, #372]	@ (80170e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e5c>)
 8016f6a:	9305      	str	r3, [sp, #20]
 8016f6c:	4b5a      	ldr	r3, [pc, #360]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8016f6e:	9307      	str	r3, [sp, #28]
 8016f70:	e217      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f72:	4b4b      	ldr	r3, [pc, #300]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f74:	685b      	ldr	r3, [r3, #4]
 8016f76:	691b      	ldr	r3, [r3, #16]
 8016f78:	68db      	ldr	r3, [r3, #12]
 8016f7a:	3318      	adds	r3, #24
 8016f7c:	9303      	str	r3, [sp, #12]
 8016f7e:	4b54      	ldr	r3, [pc, #336]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8016f80:	9304      	str	r3, [sp, #16]
 8016f82:	4b54      	ldr	r3, [pc, #336]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8016f84:	9305      	str	r3, [sp, #20]
 8016f86:	4b54      	ldr	r3, [pc, #336]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8016f88:	9307      	str	r3, [sp, #28]
 8016f8a:	e20a      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016f8c:	4b44      	ldr	r3, [pc, #272]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016f8e:	685b      	ldr	r3, [r3, #4]
 8016f90:	691b      	ldr	r3, [r3, #16]
 8016f92:	68db      	ldr	r3, [r3, #12]
 8016f94:	331c      	adds	r3, #28
 8016f96:	9303      	str	r3, [sp, #12]
 8016f98:	4b4d      	ldr	r3, [pc, #308]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8016f9a:	9304      	str	r3, [sp, #16]
 8016f9c:	4b4d      	ldr	r3, [pc, #308]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8016f9e:	9305      	str	r3, [sp, #20]
 8016fa0:	4b4d      	ldr	r3, [pc, #308]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8016fa2:	9307      	str	r3, [sp, #28]
 8016fa4:	e1fd      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016fa6:	4b3e      	ldr	r3, [pc, #248]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016fa8:	685b      	ldr	r3, [r3, #4]
 8016faa:	691b      	ldr	r3, [r3, #16]
 8016fac:	68db      	ldr	r3, [r3, #12]
 8016fae:	3320      	adds	r3, #32
 8016fb0:	9303      	str	r3, [sp, #12]
 8016fb2:	4b47      	ldr	r3, [pc, #284]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8016fb4:	9304      	str	r3, [sp, #16]
 8016fb6:	4b47      	ldr	r3, [pc, #284]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8016fb8:	9305      	str	r3, [sp, #20]
 8016fba:	4b47      	ldr	r3, [pc, #284]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8016fbc:	9307      	str	r3, [sp, #28]
 8016fbe:	e1f0      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016fc0:	4b37      	ldr	r3, [pc, #220]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016fc2:	685b      	ldr	r3, [r3, #4]
 8016fc4:	691b      	ldr	r3, [r3, #16]
 8016fc6:	68db      	ldr	r3, [r3, #12]
 8016fc8:	3329      	adds	r3, #41	@ 0x29
 8016fca:	9303      	str	r3, [sp, #12]
 8016fcc:	4b38      	ldr	r3, [pc, #224]	@ (80170b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e2c>)
 8016fce:	9304      	str	r3, [sp, #16]
 8016fd0:	4b38      	ldr	r3, [pc, #224]	@ (80170b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e30>)
 8016fd2:	9305      	str	r3, [sp, #20]
 8016fd4:	4b38      	ldr	r3, [pc, #224]	@ (80170b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e34>)
 8016fd6:	9307      	str	r3, [sp, #28]
 8016fd8:	e1e3      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016fda:	4b31      	ldr	r3, [pc, #196]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016fdc:	685b      	ldr	r3, [r3, #4]
 8016fde:	691b      	ldr	r3, [r3, #16]
 8016fe0:	68db      	ldr	r3, [r3, #12]
 8016fe2:	332a      	adds	r3, #42	@ 0x2a
 8016fe4:	9303      	str	r3, [sp, #12]
 8016fe6:	4b32      	ldr	r3, [pc, #200]	@ (80170b0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e2c>)
 8016fe8:	9304      	str	r3, [sp, #16]
 8016fea:	4b32      	ldr	r3, [pc, #200]	@ (80170b4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e30>)
 8016fec:	9305      	str	r3, [sp, #20]
 8016fee:	4b32      	ldr	r3, [pc, #200]	@ (80170b8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e34>)
 8016ff0:	9307      	str	r3, [sp, #28]
 8016ff2:	e1d6      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8016ff4:	4b2a      	ldr	r3, [pc, #168]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8016ff6:	685b      	ldr	r3, [r3, #4]
 8016ff8:	691b      	ldr	r3, [r3, #16]
 8016ffa:	68db      	ldr	r3, [r3, #12]
 8016ffc:	332e      	adds	r3, #46	@ 0x2e
 8016ffe:	9303      	str	r3, [sp, #12]
 8017000:	4b38      	ldr	r3, [pc, #224]	@ (80170e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e60>)
 8017002:	9304      	str	r3, [sp, #16]
 8017004:	4b38      	ldr	r3, [pc, #224]	@ (80170e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e64>)
 8017006:	9305      	str	r3, [sp, #20]
 8017008:	4b28      	ldr	r3, [pc, #160]	@ (80170ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e28>)
 801700a:	9307      	str	r3, [sp, #28]
 801700c:	e1c9      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801700e:	4b24      	ldr	r3, [pc, #144]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8017010:	685b      	ldr	r3, [r3, #4]
 8017012:	691b      	ldr	r3, [r3, #16]
 8017014:	68db      	ldr	r3, [r3, #12]
 8017016:	3330      	adds	r3, #48	@ 0x30
 8017018:	9303      	str	r3, [sp, #12]
 801701a:	4b32      	ldr	r3, [pc, #200]	@ (80170e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e60>)
 801701c:	9304      	str	r3, [sp, #16]
 801701e:	4b32      	ldr	r3, [pc, #200]	@ (80170e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e64>)
 8017020:	9305      	str	r3, [sp, #20]
 8017022:	4b22      	ldr	r3, [pc, #136]	@ (80170ac <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e28>)
 8017024:	9307      	str	r3, [sp, #28]
 8017026:	e1bc      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017028:	4b1d      	ldr	r3, [pc, #116]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 801702a:	685b      	ldr	r3, [r3, #4]
 801702c:	691b      	ldr	r3, [r3, #16]
 801702e:	3304      	adds	r3, #4
 8017030:	9303      	str	r3, [sp, #12]
 8017032:	4b22      	ldr	r3, [pc, #136]	@ (80170bc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e38>)
 8017034:	9304      	str	r3, [sp, #16]
 8017036:	4b22      	ldr	r3, [pc, #136]	@ (80170c0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e3c>)
 8017038:	9305      	str	r3, [sp, #20]
 801703a:	4b22      	ldr	r3, [pc, #136]	@ (80170c4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e40>)
 801703c:	9307      	str	r3, [sp, #28]
 801703e:	e1b0      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017040:	4b17      	ldr	r3, [pc, #92]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8017042:	685b      	ldr	r3, [r3, #4]
 8017044:	695b      	ldr	r3, [r3, #20]
 8017046:	3308      	adds	r3, #8
 8017048:	9303      	str	r3, [sp, #12]
 801704a:	4b28      	ldr	r3, [pc, #160]	@ (80170ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e68>)
 801704c:	9304      	str	r3, [sp, #16]
 801704e:	4b28      	ldr	r3, [pc, #160]	@ (80170f0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e6c>)
 8017050:	9305      	str	r3, [sp, #20]
 8017052:	4b28      	ldr	r3, [pc, #160]	@ (80170f4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e70>)
 8017054:	9307      	str	r3, [sp, #28]
 8017056:	e1a4      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017058:	4b11      	ldr	r3, [pc, #68]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 801705a:	685b      	ldr	r3, [r3, #4]
 801705c:	695b      	ldr	r3, [r3, #20]
 801705e:	330c      	adds	r3, #12
 8017060:	9303      	str	r3, [sp, #12]
 8017062:	4b1b      	ldr	r3, [pc, #108]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8017064:	9304      	str	r3, [sp, #16]
 8017066:	4b1b      	ldr	r3, [pc, #108]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8017068:	9305      	str	r3, [sp, #20]
 801706a:	4b1b      	ldr	r3, [pc, #108]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 801706c:	9307      	str	r3, [sp, #28]
 801706e:	e198      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017070:	4b0b      	ldr	r3, [pc, #44]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 8017072:	685b      	ldr	r3, [r3, #4]
 8017074:	695b      	ldr	r3, [r3, #20]
 8017076:	3310      	adds	r3, #16
 8017078:	9303      	str	r3, [sp, #12]
 801707a:	4b15      	ldr	r3, [pc, #84]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 801707c:	9304      	str	r3, [sp, #16]
 801707e:	4b15      	ldr	r3, [pc, #84]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8017080:	9305      	str	r3, [sp, #20]
 8017082:	4b15      	ldr	r3, [pc, #84]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 8017084:	9307      	str	r3, [sp, #28]
 8017086:	e18c      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017088:	4b05      	ldr	r3, [pc, #20]	@ (80170a0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e1c>)
 801708a:	685b      	ldr	r3, [r3, #4]
 801708c:	695b      	ldr	r3, [r3, #20]
 801708e:	3314      	adds	r3, #20
 8017090:	9303      	str	r3, [sp, #12]
 8017092:	4b0f      	ldr	r3, [pc, #60]	@ (80170d0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e4c>)
 8017094:	9304      	str	r3, [sp, #16]
 8017096:	4b0f      	ldr	r3, [pc, #60]	@ (80170d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e50>)
 8017098:	9305      	str	r3, [sp, #20]
 801709a:	4b0f      	ldr	r3, [pc, #60]	@ (80170d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x2e54>)
 801709c:	9307      	str	r3, [sp, #28]
 801709e:	e180      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80170a0:	200019cc 	.word	0x200019cc
 80170a4:	08013039 	.word	0x08013039
 80170a8:	0801e259 	.word	0x0801e259
 80170ac:	20008dc4 	.word	0x20008dc4
 80170b0:	0801285d 	.word	0x0801285d
 80170b4:	08012861 	.word	0x08012861
 80170b8:	20008e28 	.word	0x20008e28
 80170bc:	080128b5 	.word	0x080128b5
 80170c0:	080128b9 	.word	0x080128b9
 80170c4:	20008d88 	.word	0x20008d88
 80170c8:	08013031 	.word	0x08013031
 80170cc:	0801e271 	.word	0x0801e271
 80170d0:	0801283d 	.word	0x0801283d
 80170d4:	08012845 	.word	0x08012845
 80170d8:	20008e3c 	.word	0x20008e3c
 80170dc:	08013029 	.word	0x08013029
 80170e0:	0801e28d 	.word	0x0801e28d
 80170e4:	080128f9 	.word	0x080128f9
 80170e8:	080128fd 	.word	0x080128fd
 80170ec:	08012901 	.word	0x08012901
 80170f0:	08012905 	.word	0x08012905
 80170f4:	20008ce8 	.word	0x20008ce8
 80170f8:	4b80      	ldr	r3, [pc, #512]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80170fa:	685b      	ldr	r3, [r3, #4]
 80170fc:	695b      	ldr	r3, [r3, #20]
 80170fe:	685b      	ldr	r3, [r3, #4]
 8017100:	9303      	str	r3, [sp, #12]
 8017102:	4b7f      	ldr	r3, [pc, #508]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 8017104:	9304      	str	r3, [sp, #16]
 8017106:	4b7f      	ldr	r3, [pc, #508]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 8017108:	9305      	str	r3, [sp, #20]
 801710a:	4b7f      	ldr	r3, [pc, #508]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 801710c:	9307      	str	r3, [sp, #28]
 801710e:	e148      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017110:	4b7a      	ldr	r3, [pc, #488]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017112:	685b      	ldr	r3, [r3, #4]
 8017114:	695b      	ldr	r3, [r3, #20]
 8017116:	685b      	ldr	r3, [r3, #4]
 8017118:	3304      	adds	r3, #4
 801711a:	9303      	str	r3, [sp, #12]
 801711c:	4b78      	ldr	r3, [pc, #480]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 801711e:	9304      	str	r3, [sp, #16]
 8017120:	4b78      	ldr	r3, [pc, #480]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 8017122:	9305      	str	r3, [sp, #20]
 8017124:	4b78      	ldr	r3, [pc, #480]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 8017126:	9307      	str	r3, [sp, #28]
 8017128:	e13b      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801712a:	4b74      	ldr	r3, [pc, #464]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 801712c:	685b      	ldr	r3, [r3, #4]
 801712e:	695b      	ldr	r3, [r3, #20]
 8017130:	685b      	ldr	r3, [r3, #4]
 8017132:	3308      	adds	r3, #8
 8017134:	9303      	str	r3, [sp, #12]
 8017136:	4b72      	ldr	r3, [pc, #456]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 8017138:	9304      	str	r3, [sp, #16]
 801713a:	4b72      	ldr	r3, [pc, #456]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 801713c:	9305      	str	r3, [sp, #20]
 801713e:	4b72      	ldr	r3, [pc, #456]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 8017140:	9307      	str	r3, [sp, #28]
 8017142:	e12e      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017144:	4b6d      	ldr	r3, [pc, #436]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017146:	685b      	ldr	r3, [r3, #4]
 8017148:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801714a:	685b      	ldr	r3, [r3, #4]
 801714c:	9303      	str	r3, [sp, #12]
 801714e:	4b6c      	ldr	r3, [pc, #432]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 8017150:	9304      	str	r3, [sp, #16]
 8017152:	4b6c      	ldr	r3, [pc, #432]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 8017154:	9305      	str	r3, [sp, #20]
 8017156:	4b6c      	ldr	r3, [pc, #432]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 8017158:	9307      	str	r3, [sp, #28]
 801715a:	e122      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801715c:	4b67      	ldr	r3, [pc, #412]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 801715e:	685b      	ldr	r3, [r3, #4]
 8017160:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017162:	685b      	ldr	r3, [r3, #4]
 8017164:	3304      	adds	r3, #4
 8017166:	9303      	str	r3, [sp, #12]
 8017168:	4b65      	ldr	r3, [pc, #404]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 801716a:	9304      	str	r3, [sp, #16]
 801716c:	4b65      	ldr	r3, [pc, #404]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 801716e:	9305      	str	r3, [sp, #20]
 8017170:	4b65      	ldr	r3, [pc, #404]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 8017172:	9307      	str	r3, [sp, #28]
 8017174:	e115      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017176:	4b61      	ldr	r3, [pc, #388]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017178:	685b      	ldr	r3, [r3, #4]
 801717a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801717c:	685b      	ldr	r3, [r3, #4]
 801717e:	3308      	adds	r3, #8
 8017180:	9303      	str	r3, [sp, #12]
 8017182:	4b5f      	ldr	r3, [pc, #380]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 8017184:	9304      	str	r3, [sp, #16]
 8017186:	4b5f      	ldr	r3, [pc, #380]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 8017188:	9305      	str	r3, [sp, #20]
 801718a:	4b5f      	ldr	r3, [pc, #380]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 801718c:	9307      	str	r3, [sp, #28]
 801718e:	e108      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017190:	4b5a      	ldr	r3, [pc, #360]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017192:	685b      	ldr	r3, [r3, #4]
 8017194:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017196:	681b      	ldr	r3, [r3, #0]
 8017198:	9303      	str	r3, [sp, #12]
 801719a:	4b5c      	ldr	r3, [pc, #368]	@ (801730c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3088>)
 801719c:	9304      	str	r3, [sp, #16]
 801719e:	4b5c      	ldr	r3, [pc, #368]	@ (8017310 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x308c>)
 80171a0:	9305      	str	r3, [sp, #20]
 80171a2:	4b5c      	ldr	r3, [pc, #368]	@ (8017314 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3090>)
 80171a4:	9307      	str	r3, [sp, #28]
 80171a6:	e0fc      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80171a8:	4b54      	ldr	r3, [pc, #336]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80171aa:	685b      	ldr	r3, [r3, #4]
 80171ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80171ae:	681b      	ldr	r3, [r3, #0]
 80171b0:	9303      	str	r3, [sp, #12]
 80171b2:	4b59      	ldr	r3, [pc, #356]	@ (8017318 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3094>)
 80171b4:	9304      	str	r3, [sp, #16]
 80171b6:	4b59      	ldr	r3, [pc, #356]	@ (801731c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3098>)
 80171b8:	9305      	str	r3, [sp, #20]
 80171ba:	4b59      	ldr	r3, [pc, #356]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 80171bc:	9307      	str	r3, [sp, #28]
 80171be:	e0f0      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80171c0:	4b4e      	ldr	r3, [pc, #312]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80171c2:	685b      	ldr	r3, [r3, #4]
 80171c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80171c6:	681b      	ldr	r3, [r3, #0]
 80171c8:	9303      	str	r3, [sp, #12]
 80171ca:	4b4d      	ldr	r3, [pc, #308]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 80171cc:	9304      	str	r3, [sp, #16]
 80171ce:	4b4d      	ldr	r3, [pc, #308]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 80171d0:	9305      	str	r3, [sp, #20]
 80171d2:	4b4d      	ldr	r3, [pc, #308]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 80171d4:	9307      	str	r3, [sp, #28]
 80171d6:	e0e4      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80171d8:	4b48      	ldr	r3, [pc, #288]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80171da:	685b      	ldr	r3, [r3, #4]
 80171dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80171de:	681b      	ldr	r3, [r3, #0]
 80171e0:	330b      	adds	r3, #11
 80171e2:	9303      	str	r3, [sp, #12]
 80171e4:	4b4f      	ldr	r3, [pc, #316]	@ (8017324 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a0>)
 80171e6:	9304      	str	r3, [sp, #16]
 80171e8:	4b4f      	ldr	r3, [pc, #316]	@ (8017328 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a4>)
 80171ea:	9305      	str	r3, [sp, #20]
 80171ec:	4b4c      	ldr	r3, [pc, #304]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 80171ee:	9307      	str	r3, [sp, #28]
 80171f0:	e0d7      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80171f2:	4b42      	ldr	r3, [pc, #264]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80171f4:	685b      	ldr	r3, [r3, #4]
 80171f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80171f8:	681b      	ldr	r3, [r3, #0]
 80171fa:	330c      	adds	r3, #12
 80171fc:	9303      	str	r3, [sp, #12]
 80171fe:	4b49      	ldr	r3, [pc, #292]	@ (8017324 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a0>)
 8017200:	9304      	str	r3, [sp, #16]
 8017202:	4b49      	ldr	r3, [pc, #292]	@ (8017328 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a4>)
 8017204:	9305      	str	r3, [sp, #20]
 8017206:	4b46      	ldr	r3, [pc, #280]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 8017208:	9307      	str	r3, [sp, #28]
 801720a:	e0ca      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801720c:	4b3b      	ldr	r3, [pc, #236]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 801720e:	685b      	ldr	r3, [r3, #4]
 8017210:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017212:	681b      	ldr	r3, [r3, #0]
 8017214:	9303      	str	r3, [sp, #12]
 8017216:	4b45      	ldr	r3, [pc, #276]	@ (801732c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a8>)
 8017218:	9304      	str	r3, [sp, #16]
 801721a:	4b45      	ldr	r3, [pc, #276]	@ (8017330 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30ac>)
 801721c:	9305      	str	r3, [sp, #20]
 801721e:	4b45      	ldr	r3, [pc, #276]	@ (8017334 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b0>)
 8017220:	9307      	str	r3, [sp, #28]
 8017222:	e0be      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017224:	4b35      	ldr	r3, [pc, #212]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017226:	685b      	ldr	r3, [r3, #4]
 8017228:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801722a:	681b      	ldr	r3, [r3, #0]
 801722c:	9303      	str	r3, [sp, #12]
 801722e:	4b37      	ldr	r3, [pc, #220]	@ (801730c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3088>)
 8017230:	9304      	str	r3, [sp, #16]
 8017232:	4b37      	ldr	r3, [pc, #220]	@ (8017310 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x308c>)
 8017234:	9305      	str	r3, [sp, #20]
 8017236:	4b37      	ldr	r3, [pc, #220]	@ (8017314 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3090>)
 8017238:	9307      	str	r3, [sp, #28]
 801723a:	e0b2      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801723c:	4b2f      	ldr	r3, [pc, #188]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 801723e:	685b      	ldr	r3, [r3, #4]
 8017240:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017242:	681b      	ldr	r3, [r3, #0]
 8017244:	9303      	str	r3, [sp, #12]
 8017246:	4b34      	ldr	r3, [pc, #208]	@ (8017318 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3094>)
 8017248:	9304      	str	r3, [sp, #16]
 801724a:	4b34      	ldr	r3, [pc, #208]	@ (801731c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3098>)
 801724c:	9305      	str	r3, [sp, #20]
 801724e:	4b34      	ldr	r3, [pc, #208]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 8017250:	9307      	str	r3, [sp, #28]
 8017252:	e0a6      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017254:	4b29      	ldr	r3, [pc, #164]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017256:	685b      	ldr	r3, [r3, #4]
 8017258:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801725a:	681b      	ldr	r3, [r3, #0]
 801725c:	9303      	str	r3, [sp, #12]
 801725e:	4b28      	ldr	r3, [pc, #160]	@ (8017300 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x307c>)
 8017260:	9304      	str	r3, [sp, #16]
 8017262:	4b28      	ldr	r3, [pc, #160]	@ (8017304 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3080>)
 8017264:	9305      	str	r3, [sp, #20]
 8017266:	4b28      	ldr	r3, [pc, #160]	@ (8017308 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3084>)
 8017268:	9307      	str	r3, [sp, #28]
 801726a:	e09a      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801726c:	4b23      	ldr	r3, [pc, #140]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 801726e:	685b      	ldr	r3, [r3, #4]
 8017270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017272:	681b      	ldr	r3, [r3, #0]
 8017274:	330b      	adds	r3, #11
 8017276:	9303      	str	r3, [sp, #12]
 8017278:	4b2a      	ldr	r3, [pc, #168]	@ (8017324 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a0>)
 801727a:	9304      	str	r3, [sp, #16]
 801727c:	4b2a      	ldr	r3, [pc, #168]	@ (8017328 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a4>)
 801727e:	9305      	str	r3, [sp, #20]
 8017280:	4b27      	ldr	r3, [pc, #156]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 8017282:	9307      	str	r3, [sp, #28]
 8017284:	e08d      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017286:	4b1d      	ldr	r3, [pc, #116]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 8017288:	685b      	ldr	r3, [r3, #4]
 801728a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801728c:	681b      	ldr	r3, [r3, #0]
 801728e:	330c      	adds	r3, #12
 8017290:	9303      	str	r3, [sp, #12]
 8017292:	4b24      	ldr	r3, [pc, #144]	@ (8017324 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a0>)
 8017294:	9304      	str	r3, [sp, #16]
 8017296:	4b24      	ldr	r3, [pc, #144]	@ (8017328 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a4>)
 8017298:	9305      	str	r3, [sp, #20]
 801729a:	4b21      	ldr	r3, [pc, #132]	@ (8017320 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x309c>)
 801729c:	9307      	str	r3, [sp, #28]
 801729e:	e080      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80172a0:	4b16      	ldr	r3, [pc, #88]	@ (80172fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3078>)
 80172a2:	685b      	ldr	r3, [r3, #4]
 80172a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80172a6:	681b      	ldr	r3, [r3, #0]
 80172a8:	9303      	str	r3, [sp, #12]
 80172aa:	4b20      	ldr	r3, [pc, #128]	@ (801732c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30a8>)
 80172ac:	9304      	str	r3, [sp, #16]
 80172ae:	4b20      	ldr	r3, [pc, #128]	@ (8017330 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30ac>)
 80172b0:	9305      	str	r3, [sp, #20]
 80172b2:	4b20      	ldr	r3, [pc, #128]	@ (8017334 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b0>)
 80172b4:	9307      	str	r3, [sp, #28]
 80172b6:	e074      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80172b8:	4b1f      	ldr	r3, [pc, #124]	@ (8017338 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b4>)
 80172ba:	681b      	ldr	r3, [r3, #0]
 80172bc:	3310      	adds	r3, #16
 80172be:	9303      	str	r3, [sp, #12]
 80172c0:	4b1e      	ldr	r3, [pc, #120]	@ (801733c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b8>)
 80172c2:	9304      	str	r3, [sp, #16]
 80172c4:	4b1e      	ldr	r3, [pc, #120]	@ (8017340 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30bc>)
 80172c6:	9305      	str	r3, [sp, #20]
 80172c8:	4b1e      	ldr	r3, [pc, #120]	@ (8017344 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30c0>)
 80172ca:	9307      	str	r3, [sp, #28]
 80172cc:	e069      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80172ce:	4b1a      	ldr	r3, [pc, #104]	@ (8017338 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b4>)
 80172d0:	681b      	ldr	r3, [r3, #0]
 80172d2:	695b      	ldr	r3, [r3, #20]
 80172d4:	3304      	adds	r3, #4
 80172d6:	9303      	str	r3, [sp, #12]
 80172d8:	4b1b      	ldr	r3, [pc, #108]	@ (8017348 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30c4>)
 80172da:	9304      	str	r3, [sp, #16]
 80172dc:	4b1b      	ldr	r3, [pc, #108]	@ (801734c <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30c8>)
 80172de:	9305      	str	r3, [sp, #20]
 80172e0:	4b1b      	ldr	r3, [pc, #108]	@ (8017350 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30cc>)
 80172e2:	9307      	str	r3, [sp, #28]
 80172e4:	e05d      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80172e6:	4b14      	ldr	r3, [pc, #80]	@ (8017338 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b4>)
 80172e8:	681b      	ldr	r3, [r3, #0]
 80172ea:	3304      	adds	r3, #4
 80172ec:	9303      	str	r3, [sp, #12]
 80172ee:	4b19      	ldr	r3, [pc, #100]	@ (8017354 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30d0>)
 80172f0:	9304      	str	r3, [sp, #16]
 80172f2:	4b19      	ldr	r3, [pc, #100]	@ (8017358 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30d4>)
 80172f4:	9305      	str	r3, [sp, #20]
 80172f6:	4b0f      	ldr	r3, [pc, #60]	@ (8017334 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x30b0>)
 80172f8:	9307      	str	r3, [sp, #28]
 80172fa:	e052      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 80172fc:	200019cc 	.word	0x200019cc
 8017300:	0801283d 	.word	0x0801283d
 8017304:	08012845 	.word	0x08012845
 8017308:	20008e3c 	.word	0x20008e3c
 801730c:	0801301d 	.word	0x0801301d
 8017310:	0801e2a1 	.word	0x0801e2a1
 8017314:	20008dc4 	.word	0x20008dc4
 8017318:	08013015 	.word	0x08013015
 801731c:	0801e2b9 	.word	0x0801e2b9
 8017320:	20008e28 	.word	0x20008e28
 8017324:	0801285d 	.word	0x0801285d
 8017328:	08012861 	.word	0x08012861
 801732c:	0801300d 	.word	0x0801300d
 8017330:	0801e2d1 	.word	0x0801e2d1
 8017334:	20008e14 	.word	0x20008e14
 8017338:	200019c8 	.word	0x200019c8
 801733c:	08012909 	.word	0x08012909
 8017340:	0801290d 	.word	0x0801290d
 8017344:	20008cd4 	.word	0x20008cd4
 8017348:	08012911 	.word	0x08012911
 801734c:	08012915 	.word	0x08012915
 8017350:	20008cc0 	.word	0x20008cc0
 8017354:	08012869 	.word	0x08012869
 8017358:	0801286d 	.word	0x0801286d
 801735c:	4b1d      	ldr	r3, [pc, #116]	@ (80173d4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3150>)
 801735e:	9303      	str	r3, [sp, #12]
 8017360:	4b1d      	ldr	r3, [pc, #116]	@ (80173d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3154>)
 8017362:	9304      	str	r3, [sp, #16]
 8017364:	4b1d      	ldr	r3, [pc, #116]	@ (80173dc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3158>)
 8017366:	9305      	str	r3, [sp, #20]
 8017368:	4b1d      	ldr	r3, [pc, #116]	@ (80173e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x315c>)
 801736a:	9307      	str	r3, [sp, #28]
 801736c:	e019      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 801736e:	4b1d      	ldr	r3, [pc, #116]	@ (80173e4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3160>)
 8017370:	9303      	str	r3, [sp, #12]
 8017372:	4b1d      	ldr	r3, [pc, #116]	@ (80173e8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3164>)
 8017374:	9304      	str	r3, [sp, #16]
 8017376:	4b1d      	ldr	r3, [pc, #116]	@ (80173ec <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3168>)
 8017378:	9305      	str	r3, [sp, #20]
 801737a:	4b1d      	ldr	r3, [pc, #116]	@ (80173f0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x316c>)
 801737c:	9307      	str	r3, [sp, #28]
 801737e:	e010      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017380:	4b1c      	ldr	r3, [pc, #112]	@ (80173f4 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3170>)
 8017382:	9303      	str	r3, [sp, #12]
 8017384:	4b14      	ldr	r3, [pc, #80]	@ (80173d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3154>)
 8017386:	9304      	str	r3, [sp, #16]
 8017388:	4b14      	ldr	r3, [pc, #80]	@ (80173dc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3158>)
 801738a:	9305      	str	r3, [sp, #20]
 801738c:	4b14      	ldr	r3, [pc, #80]	@ (80173e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x315c>)
 801738e:	9307      	str	r3, [sp, #28]
 8017390:	e007      	b.n	80173a2 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x311e>
 8017392:	4b19      	ldr	r3, [pc, #100]	@ (80173f8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3174>)
 8017394:	9303      	str	r3, [sp, #12]
 8017396:	4b10      	ldr	r3, [pc, #64]	@ (80173d8 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3154>)
 8017398:	9304      	str	r3, [sp, #16]
 801739a:	4b10      	ldr	r3, [pc, #64]	@ (80173dc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3158>)
 801739c:	9305      	str	r3, [sp, #20]
 801739e:	4b10      	ldr	r3, [pc, #64]	@ (80173e0 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x315c>)
 80173a0:	9307      	str	r3, [sp, #28]
 80173a2:	9807      	ldr	r0, [sp, #28]
 80173a4:	2800      	cmp	r0, #0
 80173a6:	f43c af77 	beq.w	8014298 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x14>
 80173aa:	4a14      	ldr	r2, [pc, #80]	@ (80173fc <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x3178>)
 80173ac:	4914      	ldr	r1, [pc, #80]	@ (8017400 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x317c>)
 80173ae:	f06f 0301 	mvn.w	r3, #1
 80173b2:	f00a fd69 	bl	8021e88 <__dynamic_cast>
 80173b6:	2800      	cmp	r0, #0
 80173b8:	f43c af6e 	beq.w	8014298 <fibre::set_endpoint_from_float(endpoint_ref_t, float)+0x14>
 80173bc:	6803      	ldr	r3, [r0, #0]
 80173be:	eeb0 0a48 	vmov.f32	s0, s16
 80173c2:	681b      	ldr	r3, [r3, #0]
 80173c4:	a903      	add	r1, sp, #12
 80173c6:	4798      	blx	r3
 80173c8:	b009      	add	sp, #36	@ 0x24
 80173ca:	ecbd 8b02 	vpop	{d8}
 80173ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80173d2:	bf00      	nop
 80173d4:	200019c4 	.word	0x200019c4
 80173d8:	08012869 	.word	0x08012869
 80173dc:	0801286d 	.word	0x0801286d
 80173e0:	20008e14 	.word	0x20008e14
 80173e4:	20001844 	.word	0x20001844
 80173e8:	080128b5 	.word	0x080128b5
 80173ec:	080128b9 	.word	0x080128b9
 80173f0:	20008d88 	.word	0x20008d88
 80173f4:	2000184c 	.word	0x2000184c
 80173f8:	20001854 	.word	0x20001854
 80173fc:	0802b328 	.word	0x0802b328
 8017400:	0802b2e4 	.word	0x0802b2e4

08017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>:
 8017404:	680b      	ldr	r3, [r1, #0]
 8017406:	b172      	cbz	r2, 8017426 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)+0x22>
 8017408:	429a      	cmp	r2, r3
 801740a:	d911      	bls.n	8017430 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)+0x2c>
 801740c:	7018      	strb	r0, [r3, #0]
 801740e:	680b      	ldr	r3, [r1, #0]
 8017410:	3301      	adds	r3, #1
 8017412:	429a      	cmp	r2, r3
 8017414:	600b      	str	r3, [r1, #0]
 8017416:	d90b      	bls.n	8017430 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)+0x2c>
 8017418:	1200      	asrs	r0, r0, #8
 801741a:	7018      	strb	r0, [r3, #0]
 801741c:	680b      	ldr	r3, [r1, #0]
 801741e:	2001      	movs	r0, #1
 8017420:	4403      	add	r3, r0
 8017422:	600b      	str	r3, [r1, #0]
 8017424:	4770      	bx	lr
 8017426:	7018      	strb	r0, [r3, #0]
 8017428:	680b      	ldr	r3, [r1, #0]
 801742a:	3301      	adds	r3, #1
 801742c:	600b      	str	r3, [r1, #0]
 801742e:	e7f3      	b.n	8017418 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)+0x14>
 8017430:	2000      	movs	r0, #0
 8017432:	4770      	bx	lr

08017434 <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)>:
 8017434:	b430      	push	{r4, r5}
 8017436:	2300      	movs	r3, #0
 8017438:	680c      	ldr	r4, [r1, #0]
 801743a:	461d      	mov	r5, r3
 801743c:	b10a      	cbz	r2, 8017442 <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)+0xe>
 801743e:	42a2      	cmp	r2, r4
 8017440:	d90e      	bls.n	8017460 <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)+0x2c>
 8017442:	f814 cb01 	ldrb.w	ip, [r4], #1
 8017446:	600c      	str	r4, [r1, #0]
 8017448:	fa0c fc03 	lsl.w	ip, ip, r3
 801744c:	3308      	adds	r3, #8
 801744e:	2b20      	cmp	r3, #32
 8017450:	ea45 050c 	orr.w	r5, r5, ip
 8017454:	d1f2      	bne.n	801743c <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)+0x8>
 8017456:	2301      	movs	r3, #1
 8017458:	6005      	str	r5, [r0, #0]
 801745a:	7103      	strb	r3, [r0, #4]
 801745c:	bc30      	pop	{r4, r5}
 801745e:	4770      	bx	lr
 8017460:	2300      	movs	r3, #0
 8017462:	bc30      	pop	{r4, r5}
 8017464:	7103      	strb	r3, [r0, #4]
 8017466:	4770      	bx	lr

08017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>:
 8017468:	b500      	push	{lr}
 801746a:	680b      	ldr	r3, [r1, #0]
 801746c:	f04f 0c00 	mov.w	ip, #0
 8017470:	fa40 fe0c 	asr.w	lr, r0, ip
 8017474:	f10c 0c08 	add.w	ip, ip, #8
 8017478:	b10a      	cbz	r2, 801747e <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)+0x16>
 801747a:	429a      	cmp	r2, r3
 801747c:	d90b      	bls.n	8017496 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)+0x2e>
 801747e:	f883 e000 	strb.w	lr, [r3]
 8017482:	680b      	ldr	r3, [r1, #0]
 8017484:	f1bc 0f20 	cmp.w	ip, #32
 8017488:	f103 0301 	add.w	r3, r3, #1
 801748c:	600b      	str	r3, [r1, #0]
 801748e:	d1ef      	bne.n	8017470 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)+0x8>
 8017490:	2001      	movs	r0, #1
 8017492:	f85d fb04 	ldr.w	pc, [sp], #4
 8017496:	2000      	movs	r0, #0
 8017498:	f85d fb04 	ldr.w	pc, [sp], #4

0801749c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)>:
 801749c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801749e:	4613      	mov	r3, r2
 80174a0:	f240 2225 	movw	r2, #549	@ 0x225
 80174a4:	b08d      	sub	sp, #52	@ 0x34
 80174a6:	460c      	mov	r4, r1
 80174a8:	2700      	movs	r7, #0
 80174aa:	4290      	cmp	r0, r2
 80174ac:	f206 8336 	bhi.w	801db1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6680>
 80174b0:	e8df f010 	tbh	[pc, r0, lsl #1]
 80174b4:	022d0226 	.word	0x022d0226
 80174b8:	02390233 	.word	0x02390233
 80174bc:	02790252 	.word	0x02790252
 80174c0:	0285027d 	.word	0x0285027d
 80174c4:	028d0289 	.word	0x028d0289
 80174c8:	02950291 	.word	0x02950291
 80174cc:	029f0299 	.word	0x029f0299
 80174d0:	02bc02b7 	.word	0x02bc02b7
 80174d4:	02c602c1 	.word	0x02c602c1
 80174d8:	02d002cb 	.word	0x02d002cb
 80174dc:	02da02d5 	.word	0x02da02d5
 80174e0:	02e402df 	.word	0x02e402df
 80174e4:	02ee02e9 	.word	0x02ee02e9
 80174e8:	02f802f3 	.word	0x02f802f3
 80174ec:	030202fd 	.word	0x030202fd
 80174f0:	030c0307 	.word	0x030c0307
 80174f4:	03180311 	.word	0x03180311
 80174f8:	0320031c 	.word	0x0320031c
 80174fc:	032e0326 	.word	0x032e0326
 8017500:	033e0336 	.word	0x033e0336
 8017504:	036e0355 	.word	0x036e0355
 8017508:	03ee0385 	.word	0x03ee0385
 801750c:	04200407 	.word	0x04200407
 8017510:	04520439 	.word	0x04520439
 8017514:	04820469 	.word	0x04820469
 8017518:	04b4049b 	.word	0x04b4049b
 801751c:	04e704cd 	.word	0x04e704cd
 8017520:	05190500 	.word	0x05190500
 8017524:	054c0533 	.word	0x054c0533
 8017528:	05aa0590 	.word	0x05aa0590
 801752c:	05dc05c3 	.word	0x05dc05c3
 8017530:	060f05f6 	.word	0x060f05f6
 8017534:	06420628 	.word	0x06420628
 8017538:	0674065b 	.word	0x0674065b
 801753c:	06a7068e 	.word	0x06a7068e
 8017540:	06c506c0 	.word	0x06c506c0
 8017544:	06e706e0 	.word	0x06e706e0
 8017548:	070d06f4 	.word	0x070d06f4
 801754c:	074d0740 	.word	0x074d0740
 8017550:	077f0766 	.word	0x077f0766
 8017554:	07b30799 	.word	0x07b30799
 8017558:	07e707cd 	.word	0x07e707cd
 801755c:	081b0801 	.word	0x081b0801
 8017560:	08510835 	.word	0x08510835
 8017564:	0887086d 	.word	0x0887086d
 8017568:	08c8089e 	.word	0x08c8089e
 801756c:	090008e4 	.word	0x090008e4
 8017570:	0938091c 	.word	0x0938091c
 8017574:	09700954 	.word	0x09700954
 8017578:	09a8098c 	.word	0x09a8098c
 801757c:	09e009c4 	.word	0x09e009c4
 8017580:	0a1609fc 	.word	0x0a1609fc
 8017584:	0a540a3a 	.word	0x0a540a3a
 8017588:	0a8c0a70 	.word	0x0a8c0a70
 801758c:	0ac40aa8 	.word	0x0ac40aa8
 8017590:	0afc0ae0 	.word	0x0afc0ae0
 8017594:	0b300b16 	.word	0x0b300b16
 8017598:	0b660b4a 	.word	0x0b660b4a
 801759c:	0b9c0b80 	.word	0x0b9c0b80
 80175a0:	0be00bc6 	.word	0x0be00bc6
 80175a4:	0c000be4 	.word	0x0c000be4
 80175a8:	0c380c1d 	.word	0x0c380c1d
 80175ac:	0c560c52 	.word	0x0c560c52
 80175b0:	0c8a0c6e 	.word	0x0c8a0c6e
 80175b4:	0cc40ca7 	.word	0x0cc40ca7
 80175b8:	0cfe0ce1 	.word	0x0cfe0ce1
 80175bc:	0d480d1b 	.word	0x0d480d1b
 80175c0:	0d6e0d60 	.word	0x0d6e0d60
 80175c4:	0d7d0d79 	.word	0x0d7d0d79
 80175c8:	0d9d0d81 	.word	0x0d9d0d81
 80175cc:	0dd50db9 	.word	0x0dd50db9
 80175d0:	0df50dd9 	.word	0x0df50dd9
 80175d4:	0e2d0e11 	.word	0x0e2d0e11
 80175d8:	0e650e49 	.word	0x0e650e49
 80175dc:	0e9d0e81 	.word	0x0e9d0e81
 80175e0:	0eca0eb9 	.word	0x0eca0eb9
 80175e4:	0f020ee6 	.word	0x0f020ee6
 80175e8:	0f220f1e 	.word	0x0f220f1e
 80175ec:	0f420f26 	.word	0x0f420f26
 80175f0:	0f620f46 	.word	0x0f620f46
 80175f4:	0f780f6d 	.word	0x0f780f6d
 80175f8:	0f8e0f83 	.word	0x0f8e0f83
 80175fc:	0fa40f99 	.word	0x0fa40f99
 8017600:	0fba0faf 	.word	0x0fba0faf
 8017604:	0fd00fc5 	.word	0x0fd00fc5
 8017608:	0fe60fdb 	.word	0x0fe60fdb
 801760c:	100b0ff1 	.word	0x100b0ff1
 8017610:	10531036 	.word	0x10531036
 8017614:	108c1070 	.word	0x108c1070
 8017618:	10c510a8 	.word	0x10c510a8
 801761c:	10fd10e2 	.word	0x10fd10e2
 8017620:	1137111a 	.word	0x1137111a
 8017624:	11711154 	.word	0x11711154
 8017628:	11c2118e 	.word	0x11c2118e
 801762c:	11fb11de 	.word	0x11fb11de
 8017630:	12351218 	.word	0x12351218
 8017634:	126d1250 	.word	0x126d1250
 8017638:	12a4128a 	.word	0x12a4128a
 801763c:	12db12bf 	.word	0x12db12bf
 8017640:	12fb12f7 	.word	0x12fb12f7
 8017644:	130312ff 	.word	0x130312ff
 8017648:	1340130d 	.word	0x1340130d
 801764c:	1379135a 	.word	0x1379135a
 8017650:	13b31396 	.word	0x13b31396
 8017654:	13ed13d0 	.word	0x13ed13d0
 8017658:	14221407 	.word	0x14221407
 801765c:	145c143f 	.word	0x145c143f
 8017660:	14961479 	.word	0x14961479
 8017664:	14e314c6 	.word	0x14e314c6
 8017668:	151b1500 	.word	0x151b1500
 801766c:	15551538 	.word	0x15551538
 8017670:	158f1572 	.word	0x158f1572
 8017674:	15cb15ae 	.word	0x15cb15ae
 8017678:	15eb15e7 	.word	0x15eb15e7
 801767c:	16151608 	.word	0x16151608
 8017680:	16641646 	.word	0x16641646
 8017684:	16851668 	.word	0x16851668
 8017688:	16b7169b 	.word	0x16b7169b
 801768c:	16d516d1 	.word	0x16d516d1
 8017690:	16f616ed 	.word	0x16f616ed
 8017694:	170916ff 	.word	0x170916ff
 8017698:	17171713 	.word	0x17171713
 801769c:	171f171b 	.word	0x171f171b
 80176a0:	17271723 	.word	0x17271723
 80176a4:	172f172b 	.word	0x172f172b
 80176a8:	173d1739 	.word	0x173d1739
 80176ac:	17451741 	.word	0x17451741
 80176b0:	17651761 	.word	0x17651761
 80176b4:	1797177d 	.word	0x1797177d
 80176b8:	17e817d0 	.word	0x17e817d0
 80176bc:	18201803 	.word	0x18201803
 80176c0:	1857183d 	.word	0x1857183d
 80176c4:	188f1874 	.word	0x188f1874
 80176c8:	18c818ab 	.word	0x18c818ab
 80176cc:	190218e5 	.word	0x190218e5
 80176d0:	1952191d 	.word	0x1952191d
 80176d4:	1984196b 	.word	0x1984196b
 80176d8:	19a41988 	.word	0x19a41988
 80176dc:	19da19be 	.word	0x19da19be
 80176e0:	1a1219f6 	.word	0x1a1219f6
 80176e4:	1a4b1a2e 	.word	0x1a4b1a2e
 80176e8:	1a841a68 	.word	0x1a841a68
 80176ec:	1abe1aa1 	.word	0x1abe1aa1
 80176f0:	1af21ada 	.word	0x1af21ada
 80176f4:	1b281b0c 	.word	0x1b281b0c
 80176f8:	1b5e1b43 	.word	0x1b5e1b43
 80176fc:	1b831b7a 	.word	0x1b831b7a
 8017700:	1bb51b9b 	.word	0x1bb51b9b
 8017704:	1bec1bd1 	.word	0x1bec1bd1
 8017708:	1c231c07 	.word	0x1c231c07
 801770c:	1c2b1c27 	.word	0x1c2b1c27
 8017710:	1c691c60 	.word	0x1c691c60
 8017714:	1c8c1c73 	.word	0x1c8c1c73
 8017718:	1c9d1c93 	.word	0x1c9d1c93
 801771c:	1ccf1cb6 	.word	0x1ccf1cb6
 8017720:	1d031ce9 	.word	0x1d031ce9
 8017724:	1d371d1d 	.word	0x1d371d1d
 8017728:	1d6b1d51 	.word	0x1d6b1d51
 801772c:	1da11d85 	.word	0x1da11d85
 8017730:	1de81dbd 	.word	0x1de81dbd
 8017734:	1e161dff 	.word	0x1e161dff
 8017738:	1e4e1e32 	.word	0x1e4e1e32
 801773c:	1e861e6a 	.word	0x1e861e6a
 8017740:	1ebe1ea2 	.word	0x1ebe1ea2
 8017744:	1ef61eda 	.word	0x1ef61eda
 8017748:	1f2e1f12 	.word	0x1f2e1f12
 801774c:	1f721f58 	.word	0x1f721f58
 8017750:	1fa61f8c 	.word	0x1fa61f8c
 8017754:	1fde1fc2 	.word	0x1fde1fc2
 8017758:	20161ffa 	.word	0x20161ffa
 801775c:	204e2032 	.word	0x204e2032
 8017760:	20822068 	.word	0x20822068
 8017764:	20b8209c 	.word	0x20b8209c
 8017768:	20fc20e0 	.word	0x20fc20e0
 801776c:	21322118 	.word	0x21322118
 8017770:	21522136 	.word	0x21522136
 8017774:	218a216f 	.word	0x218a216f
 8017778:	21ac21a4 	.word	0x21ac21a4
 801777c:	21e021c4 	.word	0x21e021c4
 8017780:	221a21fd 	.word	0x221a21fd
 8017784:	226c2237 	.word	0x226c2237
 8017788:	22a42289 	.word	0x22a42289
 801778c:	22c722bc 	.word	0x22c722bc
 8017790:	22d922d1 	.word	0x22d922d1
 8017794:	22fd22e1 	.word	0x22fd22e1
 8017798:	23352319 	.word	0x23352319
 801779c:	2359233d 	.word	0x2359233d
 80177a0:	23912375 	.word	0x23912375
 80177a4:	23c923ad 	.word	0x23c923ad
 80177a8:	241223f6 	.word	0x241223f6
 80177ac:	2436242e 	.word	0x2436242e
 80177b0:	246e2452 	.word	0x246e2452
 80177b4:	2492248a 	.word	0x2492248a
 80177b8:	24b6249a 	.word	0x24b6249a
 80177bc:	24da24be 	.word	0x24da24be
 80177c0:	24f024e5 	.word	0x24f024e5
 80177c4:	250624fb 	.word	0x250624fb
 80177c8:	251c2511 	.word	0x251c2511
 80177cc:	25322527 	.word	0x25322527
 80177d0:	2548253d 	.word	0x2548253d
 80177d4:	255e2553 	.word	0x255e2553
 80177d8:	258c2572 	.word	0x258c2572
 80177dc:	25c625a9 	.word	0x25c625a9
 80177e0:	25ff25e3 	.word	0x25ff25e3
 80177e4:	2638261b 	.word	0x2638261b
 80177e8:	26702655 	.word	0x26702655
 80177ec:	26aa268d 	.word	0x26aa268d
 80177f0:	26fe26c7 	.word	0x26fe26c7
 80177f4:	2738271b 	.word	0x2738271b
 80177f8:	27712754 	.word	0x27712754
 80177fc:	27ab278e 	.word	0x27ab278e
 8017800:	27e327c6 	.word	0x27e327c6
 8017804:	281a2800 	.word	0x281a2800
 8017808:	28512835 	.word	0x28512835
 801780c:	2888286d 	.word	0x2888286d
 8017810:	28952890 	.word	0x28952890
 8017814:	28bb289f 	.word	0x28bb289f
 8017818:	28f428d5 	.word	0x28f428d5
 801781c:	292e2911 	.word	0x292e2911
 8017820:	2968294b 	.word	0x2968294b
 8017824:	299d2982 	.word	0x299d2982
 8017828:	29d729ba 	.word	0x29d729ba
 801782c:	2a252a08 	.word	0x2a252a08
 8017830:	2a5f2a42 	.word	0x2a5f2a42
 8017834:	2a972a7c 	.word	0x2a972a7c
 8017838:	2ad12ab4 	.word	0x2ad12ab4
 801783c:	2b0b2aee 	.word	0x2b0b2aee
 8017840:	2b472b2a 	.word	0x2b472b2a
 8017844:	2b802b63 	.word	0x2b802b63
 8017848:	2baa2b9d 	.word	0x2baa2b9d
 801784c:	2be72bc9 	.word	0x2be72bc9
 8017850:	2c0f2bf2 	.word	0x2c0f2bf2
 8017854:	2c2f2c13 	.word	0x2c2f2c13
 8017858:	2c502c49 	.word	0x2c502c49
 801785c:	2c712c68 	.word	0x2c712c68
 8017860:	2c842c7a 	.word	0x2c842c7a
 8017864:	2c962c8e 	.word	0x2c962c8e
 8017868:	2ca62c9e 	.word	0x2ca62c9e
 801786c:	2cb62cae 	.word	0x2cb62cae
 8017870:	2cc62cbe 	.word	0x2cc62cbe
 8017874:	2cd82cd0 	.word	0x2cd82cd0
 8017878:	2cf82ce0 	.word	0x2cf82ce0
 801787c:	2d1c2d14 	.word	0x2d1c2d14
 8017880:	2d4e2d34 	.word	0x2d4e2d34
 8017884:	2d802d68 	.word	0x2d802d68
 8017888:	2db82d9b 	.word	0x2db82d9b
 801788c:	2def2dd5 	.word	0x2def2dd5
 8017890:	2e272e0c 	.word	0x2e272e0c
 8017894:	2e882e43 	.word	0x2e882e43
 8017898:	2ec22ea5 	.word	0x2ec22ea5
 801789c:	2ef82edd 	.word	0x2ef82edd
 80178a0:	2f2a2f11 	.word	0x2f2a2f11
 80178a4:	2f4e2f33 	.word	0x2f4e2f33
 80178a8:	2f822f67 	.word	0x2f822f67
 80178ac:	2fb82f9d 	.word	0x2fb82f9d
 80178b0:	30062fd3 	.word	0x30062fd3
 80178b4:	303d3022 	.word	0x303d3022
 80178b8:	30753059 	.word	0x30753059
 80178bc:	3094307d 	.word	0x3094307d
 80178c0:	30c830ad 	.word	0x30c830ad
 80178c4:	30fc30e2 	.word	0x30fc30e2
 80178c8:	311f3117 	.word	0x311f3117
 80178cc:	31663136 	.word	0x31663136
 80178d0:	319b3181 	.word	0x319b3181
 80178d4:	31d031b5 	.word	0x31d031b5
 80178d8:	31db31d5 	.word	0x31db31d5
 80178dc:	320831fe 	.word	0x320831fe
 80178e0:	3233322b 	.word	0x3233322b
 80178e4:	3265324d 	.word	0x3265324d
 80178e8:	3286326e 	.word	0x3286326e
 80178ec:	3296328d 	.word	0x3296328d
 80178f0:	32b232ae 	.word	0x32b232ae
 80178f4:	331732ff 	.word	0x331732ff
 80178f8:	3324331f 	.word	0x3324331f
 80178fc:	332f3329 	.word	0x332f3329
 8017900:	4619      	mov	r1, r3
 8017902:	4620      	mov	r0, r4
 8017904:	b00d      	add	sp, #52	@ 0x34
 8017906:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801790a:	f00a b9f9 	b.w	8021d00 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)>
 801790e:	48b7      	ldr	r0, [pc, #732]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017910:	49b7      	ldr	r1, [pc, #732]	@ (8017bf0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x754>)
 8017912:	69c0      	ldr	r0, [r0, #28]
 8017914:	2201      	movs	r2, #1
 8017916:	f006 b8e7 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801791a:	48b4      	ldr	r0, [pc, #720]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 801791c:	49b4      	ldr	r1, [pc, #720]	@ (8017bf0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x754>)
 801791e:	6a00      	ldr	r0, [r0, #32]
 8017920:	2201      	movs	r2, #1
 8017922:	f006 b8e1 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 8017926:	4ab3      	ldr	r2, [pc, #716]	@ (8017bf4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x758>)
 8017928:	9208      	str	r2, [sp, #32]
 801792a:	4ab3      	ldr	r2, [pc, #716]	@ (8017bf8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x75c>)
 801792c:	9209      	str	r2, [sp, #36]	@ 0x24
 801792e:	4ab3      	ldr	r2, [pc, #716]	@ (8017bfc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x760>)
 8017930:	920a      	str	r2, [sp, #40]	@ 0x28
 8017932:	2201      	movs	r2, #1
 8017934:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017938:	2200      	movs	r2, #0
 801793a:	f88d 201c 	strb.w	r2, [sp, #28]
 801793e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017942:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017946:	e88d 0003 	stmia.w	sp, {r0, r1}
 801794a:	ab0c      	add	r3, sp, #48	@ 0x30
 801794c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017950:	f7fb fe04 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017954:	f006 b8e3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017958:	4aa4      	ldr	r2, [pc, #656]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 801795a:	9305      	str	r3, [sp, #20]
 801795c:	6a90      	ldr	r0, [r2, #40]	@ 0x28
 801795e:	f7fa ff75 	bl	801284c <Property<unsigned long long const>::Property(unsigned long long const*)::{lambda(void*)#1}::_FUN(void*)>
 8017962:	9b05      	ldr	r3, [sp, #20]
 8017964:	685f      	ldr	r7, [r3, #4]
 8017966:	2200      	movs	r2, #0
 8017968:	f8d3 c000 	ldr.w	ip, [r3]
 801796c:	b10f      	cbz	r7, 8017972 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4d6>
 801796e:	45bc      	cmp	ip, r7
 8017970:	d216      	bcs.n	80179a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x504>
 8017972:	f1c2 0620 	rsb	r6, r2, #32
 8017976:	f1a2 0520 	sub.w	r5, r2, #32
 801797a:	fa20 f402 	lsr.w	r4, r0, r2
 801797e:	fa01 f606 	lsl.w	r6, r1, r6
 8017982:	4334      	orrs	r4, r6
 8017984:	fa21 f505 	lsr.w	r5, r1, r5
 8017988:	432c      	orrs	r4, r5
 801798a:	f88c 4000 	strb.w	r4, [ip]
 801798e:	681c      	ldr	r4, [r3, #0]
 8017990:	3208      	adds	r2, #8
 8017992:	3401      	adds	r4, #1
 8017994:	2a40      	cmp	r2, #64	@ 0x40
 8017996:	601c      	str	r4, [r3, #0]
 8017998:	d1e6      	bne.n	8017968 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4cc>
 801799a:	2001      	movs	r0, #1
 801799c:	f006 b8bf 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80179a0:	2000      	movs	r0, #0
 80179a2:	f006 b8bc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80179a6:	4996      	ldr	r1, [pc, #600]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179a8:	4896      	ldr	r0, [pc, #600]	@ (8017c04 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x768>)
 80179aa:	2201      	movs	r2, #1
 80179ac:	e002      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179ae:	4994      	ldr	r1, [pc, #592]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179b0:	4895      	ldr	r0, [pc, #596]	@ (8017c08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x76c>)
 80179b2:	2201      	movs	r2, #1
 80179b4:	b00d      	add	sp, #52	@ 0x34
 80179b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80179ba:	f7fb bc35 	b.w	8013228 <fibre_property_uint8_readonly_read(std::optional<Property<unsigned char const> >, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 80179be:	4990      	ldr	r1, [pc, #576]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179c0:	4892      	ldr	r0, [pc, #584]	@ (8017c0c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x770>)
 80179c2:	2201      	movs	r2, #1
 80179c4:	e7f6      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179c6:	498e      	ldr	r1, [pc, #568]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179c8:	4891      	ldr	r0, [pc, #580]	@ (8017c10 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x774>)
 80179ca:	2201      	movs	r2, #1
 80179cc:	e7f2      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179ce:	498c      	ldr	r1, [pc, #560]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179d0:	4890      	ldr	r0, [pc, #576]	@ (8017c14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x778>)
 80179d2:	2201      	movs	r2, #1
 80179d4:	e7ee      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179d6:	498a      	ldr	r1, [pc, #552]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179d8:	488f      	ldr	r0, [pc, #572]	@ (8017c18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x77c>)
 80179da:	2201      	movs	r2, #1
 80179dc:	e7ea      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179de:	4988      	ldr	r1, [pc, #544]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 80179e0:	488e      	ldr	r0, [pc, #568]	@ (8017c1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x780>)
 80179e2:	2201      	movs	r2, #1
 80179e4:	e7e6      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 80179e6:	4881      	ldr	r0, [pc, #516]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 80179e8:	498d      	ldr	r1, [pc, #564]	@ (8017c20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x784>)
 80179ea:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 80179ec:	2201      	movs	r2, #1
 80179ee:	f001 bad5 	b.w	8018f9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1b00>
 80179f2:	4a7e      	ldr	r2, [pc, #504]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 80179f4:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80179f6:	9208      	str	r2, [sp, #32]
 80179f8:	4a8a      	ldr	r2, [pc, #552]	@ (8017c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x788>)
 80179fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80179fc:	4a8a      	ldr	r2, [pc, #552]	@ (8017c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x78c>)
 80179fe:	920a      	str	r2, [sp, #40]	@ 0x28
 8017a00:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8017a04:	2201      	movs	r2, #1
 8017a06:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017a0a:	2200      	movs	r2, #0
 8017a0c:	f8ad 2000 	strh.w	r2, [sp]
 8017a10:	ab0c      	add	r3, sp, #48	@ 0x30
 8017a12:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017a16:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017a1a:	f7fb fc49 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017a1e:	f006 b87e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017a22:	4982      	ldr	r1, [pc, #520]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a24:	4882      	ldr	r0, [pc, #520]	@ (8017c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x794>)
 8017a26:	2201      	movs	r2, #1
 8017a28:	f005 bf47 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a2c:	497f      	ldr	r1, [pc, #508]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a2e:	4881      	ldr	r0, [pc, #516]	@ (8017c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x798>)
 8017a30:	2201      	movs	r2, #1
 8017a32:	f005 bf42 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a36:	497d      	ldr	r1, [pc, #500]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a38:	487f      	ldr	r0, [pc, #508]	@ (8017c38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x79c>)
 8017a3a:	2201      	movs	r2, #1
 8017a3c:	f005 bf3d 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a40:	497a      	ldr	r1, [pc, #488]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a42:	487e      	ldr	r0, [pc, #504]	@ (8017c3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7a0>)
 8017a44:	2201      	movs	r2, #1
 8017a46:	f005 bf38 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a4a:	4978      	ldr	r1, [pc, #480]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a4c:	487c      	ldr	r0, [pc, #496]	@ (8017c40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7a4>)
 8017a4e:	2201      	movs	r2, #1
 8017a50:	f005 bf33 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a54:	4975      	ldr	r1, [pc, #468]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a56:	487b      	ldr	r0, [pc, #492]	@ (8017c44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7a8>)
 8017a58:	2201      	movs	r2, #1
 8017a5a:	f005 bf2e 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a5e:	4973      	ldr	r1, [pc, #460]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a60:	4879      	ldr	r0, [pc, #484]	@ (8017c48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7ac>)
 8017a62:	2201      	movs	r2, #1
 8017a64:	f005 bf29 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a68:	4970      	ldr	r1, [pc, #448]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a6a:	4878      	ldr	r0, [pc, #480]	@ (8017c4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7b0>)
 8017a6c:	2201      	movs	r2, #1
 8017a6e:	f005 bf24 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a72:	496e      	ldr	r1, [pc, #440]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a74:	4876      	ldr	r0, [pc, #472]	@ (8017c50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7b4>)
 8017a76:	2201      	movs	r2, #1
 8017a78:	f005 bf1f 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a7c:	496b      	ldr	r1, [pc, #428]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a7e:	4875      	ldr	r0, [pc, #468]	@ (8017c54 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7b8>)
 8017a80:	2201      	movs	r2, #1
 8017a82:	f005 bf1a 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a86:	4969      	ldr	r1, [pc, #420]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a88:	4873      	ldr	r0, [pc, #460]	@ (8017c58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7bc>)
 8017a8a:	2201      	movs	r2, #1
 8017a8c:	f005 bf15 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a90:	4966      	ldr	r1, [pc, #408]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a92:	4872      	ldr	r0, [pc, #456]	@ (8017c5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7c0>)
 8017a94:	2201      	movs	r2, #1
 8017a96:	f005 bf10 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017a9a:	4964      	ldr	r1, [pc, #400]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017a9c:	4870      	ldr	r0, [pc, #448]	@ (8017c60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7c4>)
 8017a9e:	2201      	movs	r2, #1
 8017aa0:	f005 bf0b 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017aa4:	4961      	ldr	r1, [pc, #388]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017aa6:	486f      	ldr	r0, [pc, #444]	@ (8017c64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7c8>)
 8017aa8:	2201      	movs	r2, #1
 8017aaa:	f005 bf06 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017aae:	495f      	ldr	r1, [pc, #380]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017ab0:	486d      	ldr	r0, [pc, #436]	@ (8017c68 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7cc>)
 8017ab2:	2201      	movs	r2, #1
 8017ab4:	f005 bf01 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017ab8:	495c      	ldr	r1, [pc, #368]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017aba:	486c      	ldr	r0, [pc, #432]	@ (8017c6c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7d0>)
 8017abc:	2201      	movs	r2, #1
 8017abe:	f005 befc 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017ac2:	495a      	ldr	r1, [pc, #360]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017ac4:	486a      	ldr	r0, [pc, #424]	@ (8017c70 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7d4>)
 8017ac6:	2201      	movs	r2, #1
 8017ac8:	f005 bef7 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017acc:	4957      	ldr	r1, [pc, #348]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017ace:	4869      	ldr	r0, [pc, #420]	@ (8017c74 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7d8>)
 8017ad0:	2201      	movs	r2, #1
 8017ad2:	f005 bef2 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017ad6:	4845      	ldr	r0, [pc, #276]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017ad8:	4954      	ldr	r1, [pc, #336]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017ada:	f8d0 008c 	ldr.w	r0, [r0, #140]	@ 0x8c
 8017ade:	2201      	movs	r2, #1
 8017ae0:	f005 beeb 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017ae4:	4a41      	ldr	r2, [pc, #260]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017ae6:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8017aea:	e00c      	b.n	8017b06 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a>
 8017aec:	4a3f      	ldr	r2, [pc, #252]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017aee:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8017af2:	e010      	b.n	8017b16 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x67a>
 8017af4:	483d      	ldr	r0, [pc, #244]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017af6:	4942      	ldr	r1, [pc, #264]	@ (8017c00 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x764>)
 8017af8:	f8d0 0090 	ldr.w	r0, [r0, #144]	@ 0x90
 8017afc:	2201      	movs	r2, #1
 8017afe:	e759      	b.n	80179b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x518>
 8017b00:	4a3a      	ldr	r2, [pc, #232]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017b02:	f8d2 0090 	ldr.w	r0, [r2, #144]	@ 0x90
 8017b06:	4949      	ldr	r1, [pc, #292]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017b08:	2201      	movs	r2, #1
 8017b0a:	3004      	adds	r0, #4
 8017b0c:	f005 bed5 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017b10:	4a36      	ldr	r2, [pc, #216]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017b12:	f8d2 0090 	ldr.w	r0, [r2, #144]	@ 0x90
 8017b16:	4945      	ldr	r1, [pc, #276]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017b18:	2201      	movs	r2, #1
 8017b1a:	3008      	adds	r0, #8
 8017b1c:	f005 becd 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017b20:	4a32      	ldr	r2, [pc, #200]	@ (8017bec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x750>)
 8017b22:	4942      	ldr	r1, [pc, #264]	@ (8017c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x790>)
 8017b24:	f8d2 0090 	ldr.w	r0, [r2, #144]	@ 0x90
 8017b28:	2201      	movs	r2, #1
 8017b2a:	300c      	adds	r0, #12
 8017b2c:	f005 bec5 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 8017b30:	4a51      	ldr	r2, [pc, #324]	@ (8017c78 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7dc>)
 8017b32:	9208      	str	r2, [sp, #32]
 8017b34:	4a3b      	ldr	r2, [pc, #236]	@ (8017c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x788>)
 8017b36:	9209      	str	r2, [sp, #36]	@ 0x24
 8017b38:	4a3b      	ldr	r2, [pc, #236]	@ (8017c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x78c>)
 8017b3a:	920a      	str	r2, [sp, #40]	@ 0x28
 8017b3c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8017b40:	2201      	movs	r2, #1
 8017b42:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017b46:	2200      	movs	r2, #0
 8017b48:	f8ad 2000 	strh.w	r2, [sp]
 8017b4c:	ab0c      	add	r3, sp, #48	@ 0x30
 8017b4e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017b52:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017b56:	f7fb fbab 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017b5a:	f005 bfe0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017b5e:	4a47      	ldr	r2, [pc, #284]	@ (8017c7c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7e0>)
 8017b60:	9208      	str	r2, [sp, #32]
 8017b62:	4a47      	ldr	r2, [pc, #284]	@ (8017c80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7e4>)
 8017b64:	9209      	str	r2, [sp, #36]	@ 0x24
 8017b66:	4a47      	ldr	r2, [pc, #284]	@ (8017c84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7e8>)
 8017b68:	920a      	str	r2, [sp, #40]	@ 0x28
 8017b6a:	2201      	movs	r2, #1
 8017b6c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017b70:	2200      	movs	r2, #0
 8017b72:	f88d 201c 	strb.w	r2, [sp, #28]
 8017b76:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017b7a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017b7e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017b82:	ab0c      	add	r3, sp, #48	@ 0x30
 8017b84:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017b88:	f7fb fca0 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017b8c:	f005 bfc7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017b90:	4a3d      	ldr	r2, [pc, #244]	@ (8017c88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7ec>)
 8017b92:	9208      	str	r2, [sp, #32]
 8017b94:	4a23      	ldr	r2, [pc, #140]	@ (8017c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x788>)
 8017b96:	9209      	str	r2, [sp, #36]	@ 0x24
 8017b98:	4a23      	ldr	r2, [pc, #140]	@ (8017c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x78c>)
 8017b9a:	920a      	str	r2, [sp, #40]	@ 0x28
 8017b9c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8017ba0:	2201      	movs	r2, #1
 8017ba2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017ba6:	2200      	movs	r2, #0
 8017ba8:	f8ad 2000 	strh.w	r2, [sp]
 8017bac:	ab0c      	add	r3, sp, #48	@ 0x30
 8017bae:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017bb2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017bb6:	f7fb fb7b 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017bba:	f005 bfb0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017bbe:	4a33      	ldr	r2, [pc, #204]	@ (8017c8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7f0>)
 8017bc0:	9208      	str	r2, [sp, #32]
 8017bc2:	4a18      	ldr	r2, [pc, #96]	@ (8017c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x788>)
 8017bc4:	9209      	str	r2, [sp, #36]	@ 0x24
 8017bc6:	4a18      	ldr	r2, [pc, #96]	@ (8017c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x78c>)
 8017bc8:	920a      	str	r2, [sp, #40]	@ 0x28
 8017bca:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8017bce:	2201      	movs	r2, #1
 8017bd0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017bd4:	2200      	movs	r2, #0
 8017bd6:	f8ad 2000 	strh.w	r2, [sp]
 8017bda:	ab0c      	add	r3, sp, #48	@ 0x30
 8017bdc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017be0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017be4:	f7fb fb64 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017be8:	f005 bf99 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017bec:	20001840 	.word	0x20001840
 8017bf0:	08012835 	.word	0x08012835
 8017bf4:	20001864 	.word	0x20001864
 8017bf8:	0801283d 	.word	0x0801283d
 8017bfc:	08012845 	.word	0x08012845
 8017c00:	08012855 	.word	0x08012855
 8017c04:	20001870 	.word	0x20001870
 8017c08:	20001871 	.word	0x20001871
 8017c0c:	20001872 	.word	0x20001872
 8017c10:	20001873 	.word	0x20001873
 8017c14:	20001874 	.word	0x20001874
 8017c18:	20001875 	.word	0x20001875
 8017c1c:	20001876 	.word	0x20001876
 8017c20:	08012859 	.word	0x08012859
 8017c24:	0801285d 	.word	0x0801285d
 8017c28:	08012861 	.word	0x08012861
 8017c2c:	08012865 	.word	0x08012865
 8017c30:	20001884 	.word	0x20001884
 8017c34:	20001888 	.word	0x20001888
 8017c38:	2000188c 	.word	0x2000188c
 8017c3c:	20001890 	.word	0x20001890
 8017c40:	20001894 	.word	0x20001894
 8017c44:	20001898 	.word	0x20001898
 8017c48:	2000189c 	.word	0x2000189c
 8017c4c:	200018a8 	.word	0x200018a8
 8017c50:	200018a0 	.word	0x200018a0
 8017c54:	200018a4 	.word	0x200018a4
 8017c58:	200018ac 	.word	0x200018ac
 8017c5c:	200018b0 	.word	0x200018b0
 8017c60:	200018b4 	.word	0x200018b4
 8017c64:	200018b8 	.word	0x200018b8
 8017c68:	200018bc 	.word	0x200018bc
 8017c6c:	200018c0 	.word	0x200018c0
 8017c70:	200018c4 	.word	0x200018c4
 8017c74:	200018c8 	.word	0x200018c8
 8017c78:	200018d4 	.word	0x200018d4
 8017c7c:	200019bc 	.word	0x200019bc
 8017c80:	08012869 	.word	0x08012869
 8017c84:	0801286d 	.word	0x0801286d
 8017c88:	200018d5 	.word	0x200018d5
 8017c8c:	200018d6 	.word	0x200018d6
 8017c90:	4abb      	ldr	r2, [pc, #748]	@ (8017f80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae4>)
 8017c92:	9208      	str	r2, [sp, #32]
 8017c94:	4abb      	ldr	r2, [pc, #748]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017c96:	9209      	str	r2, [sp, #36]	@ 0x24
 8017c98:	4abb      	ldr	r2, [pc, #748]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017c9a:	920a      	str	r2, [sp, #40]	@ 0x28
 8017c9c:	2201      	movs	r2, #1
 8017c9e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017ca2:	2200      	movs	r2, #0
 8017ca4:	f88d 201c 	strb.w	r2, [sp, #28]
 8017ca8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017cac:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017cb0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017cb4:	ab0c      	add	r3, sp, #48	@ 0x30
 8017cb6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017cba:	f7fb fc4f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017cbe:	f005 bf2e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017cc2:	4ab2      	ldr	r2, [pc, #712]	@ (8017f8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaf0>)
 8017cc4:	9208      	str	r2, [sp, #32]
 8017cc6:	4aaf      	ldr	r2, [pc, #700]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017cc8:	9209      	str	r2, [sp, #36]	@ 0x24
 8017cca:	4aaf      	ldr	r2, [pc, #700]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017ccc:	920a      	str	r2, [sp, #40]	@ 0x28
 8017cce:	2201      	movs	r2, #1
 8017cd0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017cd4:	2200      	movs	r2, #0
 8017cd6:	f88d 201c 	strb.w	r2, [sp, #28]
 8017cda:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017cde:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017ce2:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017ce6:	ab0c      	add	r3, sp, #48	@ 0x30
 8017ce8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017cec:	f7fb fc36 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017cf0:	f005 bf15 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017cf4:	4aa6      	ldr	r2, [pc, #664]	@ (8017f90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaf4>)
 8017cf6:	9208      	str	r2, [sp, #32]
 8017cf8:	4aa2      	ldr	r2, [pc, #648]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017cfa:	9209      	str	r2, [sp, #36]	@ 0x24
 8017cfc:	4aa2      	ldr	r2, [pc, #648]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017cfe:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d00:	2201      	movs	r2, #1
 8017d02:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017d06:	2200      	movs	r2, #0
 8017d08:	f88d 201c 	strb.w	r2, [sp, #28]
 8017d0c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017d10:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017d14:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017d18:	ab0c      	add	r3, sp, #48	@ 0x30
 8017d1a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017d1e:	f7fb fc1d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017d22:	f005 befc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017d26:	4a9b      	ldr	r2, [pc, #620]	@ (8017f94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaf8>)
 8017d28:	9208      	str	r2, [sp, #32]
 8017d2a:	4a96      	ldr	r2, [pc, #600]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017d2c:	9209      	str	r2, [sp, #36]	@ 0x24
 8017d2e:	4a96      	ldr	r2, [pc, #600]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017d30:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d32:	2201      	movs	r2, #1
 8017d34:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017d38:	2200      	movs	r2, #0
 8017d3a:	f88d 201c 	strb.w	r2, [sp, #28]
 8017d3e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017d42:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017d46:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017d4a:	ab0c      	add	r3, sp, #48	@ 0x30
 8017d4c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017d50:	f7fb fc04 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017d54:	f005 bee3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017d58:	4a8f      	ldr	r2, [pc, #572]	@ (8017f98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xafc>)
 8017d5a:	9208      	str	r2, [sp, #32]
 8017d5c:	4a8f      	ldr	r2, [pc, #572]	@ (8017f9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb00>)
 8017d5e:	9209      	str	r2, [sp, #36]	@ 0x24
 8017d60:	4a8f      	ldr	r2, [pc, #572]	@ (8017fa0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb04>)
 8017d62:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d64:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8017d68:	2201      	movs	r2, #1
 8017d6a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017d6e:	2200      	movs	r2, #0
 8017d70:	f8ad 2000 	strh.w	r2, [sp]
 8017d74:	ab0c      	add	r3, sp, #48	@ 0x30
 8017d76:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017d7a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017d7e:	f7fb fa97 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017d82:	f005 becc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017d86:	4a87      	ldr	r2, [pc, #540]	@ (8017fa4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb08>)
 8017d88:	9208      	str	r2, [sp, #32]
 8017d8a:	4a7e      	ldr	r2, [pc, #504]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017d8c:	9209      	str	r2, [sp, #36]	@ 0x24
 8017d8e:	4a7e      	ldr	r2, [pc, #504]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017d90:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d92:	2201      	movs	r2, #1
 8017d94:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017d98:	2200      	movs	r2, #0
 8017d9a:	f88d 201c 	strb.w	r2, [sp, #28]
 8017d9e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017da2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017da6:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017daa:	ab0c      	add	r3, sp, #48	@ 0x30
 8017dac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017db0:	f7fb fbd4 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017db4:	f005 beb3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017db8:	4a7b      	ldr	r2, [pc, #492]	@ (8017fa8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb0c>)
 8017dba:	9208      	str	r2, [sp, #32]
 8017dbc:	4a71      	ldr	r2, [pc, #452]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017dbe:	9209      	str	r2, [sp, #36]	@ 0x24
 8017dc0:	4a71      	ldr	r2, [pc, #452]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017dc2:	920a      	str	r2, [sp, #40]	@ 0x28
 8017dc4:	2201      	movs	r2, #1
 8017dc6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017dca:	2200      	movs	r2, #0
 8017dcc:	f88d 201c 	strb.w	r2, [sp, #28]
 8017dd0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017dd4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017dd8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017ddc:	ab0c      	add	r3, sp, #48	@ 0x30
 8017dde:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017de2:	f7fb fbbb 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017de6:	f005 be9a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017dea:	4a70      	ldr	r2, [pc, #448]	@ (8017fac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb10>)
 8017dec:	9208      	str	r2, [sp, #32]
 8017dee:	4a65      	ldr	r2, [pc, #404]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017df0:	9209      	str	r2, [sp, #36]	@ 0x24
 8017df2:	4a65      	ldr	r2, [pc, #404]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017df4:	920a      	str	r2, [sp, #40]	@ 0x28
 8017df6:	2201      	movs	r2, #1
 8017df8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017dfc:	2200      	movs	r2, #0
 8017dfe:	f88d 201c 	strb.w	r2, [sp, #28]
 8017e02:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017e06:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017e0a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017e0e:	ab0c      	add	r3, sp, #48	@ 0x30
 8017e10:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017e14:	f7fb fba2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017e18:	f005 be81 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017e1c:	4a64      	ldr	r2, [pc, #400]	@ (8017fb0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb14>)
 8017e1e:	9208      	str	r2, [sp, #32]
 8017e20:	4a58      	ldr	r2, [pc, #352]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017e22:	9209      	str	r2, [sp, #36]	@ 0x24
 8017e24:	4a58      	ldr	r2, [pc, #352]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017e26:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e28:	2201      	movs	r2, #1
 8017e2a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017e2e:	2200      	movs	r2, #0
 8017e30:	f88d 201c 	strb.w	r2, [sp, #28]
 8017e34:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017e38:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017e3c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017e40:	ab0c      	add	r3, sp, #48	@ 0x30
 8017e42:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017e46:	f7fb fb89 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017e4a:	f005 be68 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017e4e:	4a59      	ldr	r2, [pc, #356]	@ (8017fb4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb18>)
 8017e50:	9208      	str	r2, [sp, #32]
 8017e52:	4a59      	ldr	r2, [pc, #356]	@ (8017fb8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb1c>)
 8017e54:	9209      	str	r2, [sp, #36]	@ 0x24
 8017e56:	4a59      	ldr	r2, [pc, #356]	@ (8017fbc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb20>)
 8017e58:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e5a:	2201      	movs	r2, #1
 8017e5c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017e60:	2200      	movs	r2, #0
 8017e62:	f88d 201c 	strb.w	r2, [sp, #28]
 8017e66:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017e6a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017e6e:	9000      	str	r0, [sp, #0]
 8017e70:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017e74:	ab0c      	add	r3, sp, #48	@ 0x30
 8017e76:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017e7a:	f7fb fbc1 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017e7e:	f005 be4e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017e82:	4a4f      	ldr	r2, [pc, #316]	@ (8017fc0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb24>)
 8017e84:	9208      	str	r2, [sp, #32]
 8017e86:	4a3f      	ldr	r2, [pc, #252]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017e88:	9209      	str	r2, [sp, #36]	@ 0x24
 8017e8a:	4a3f      	ldr	r2, [pc, #252]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017e8c:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e8e:	2201      	movs	r2, #1
 8017e90:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017e94:	2200      	movs	r2, #0
 8017e96:	f88d 201c 	strb.w	r2, [sp, #28]
 8017e9a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017e9e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017ea2:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017ea6:	ab0c      	add	r3, sp, #48	@ 0x30
 8017ea8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017eac:	f7fb fb56 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017eb0:	f005 be35 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017eb4:	4a43      	ldr	r2, [pc, #268]	@ (8017fc4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb28>)
 8017eb6:	9208      	str	r2, [sp, #32]
 8017eb8:	4a32      	ldr	r2, [pc, #200]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017eba:	9209      	str	r2, [sp, #36]	@ 0x24
 8017ebc:	4a32      	ldr	r2, [pc, #200]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017ebe:	920a      	str	r2, [sp, #40]	@ 0x28
 8017ec0:	2201      	movs	r2, #1
 8017ec2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017ec6:	2200      	movs	r2, #0
 8017ec8:	f88d 201c 	strb.w	r2, [sp, #28]
 8017ecc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017ed0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017ed4:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017ed8:	ab0c      	add	r3, sp, #48	@ 0x30
 8017eda:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017ede:	f7fb fb3d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017ee2:	f005 be1c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017ee6:	4a38      	ldr	r2, [pc, #224]	@ (8017fc8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb2c>)
 8017ee8:	9208      	str	r2, [sp, #32]
 8017eea:	4a33      	ldr	r2, [pc, #204]	@ (8017fb8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb1c>)
 8017eec:	9209      	str	r2, [sp, #36]	@ 0x24
 8017eee:	4a33      	ldr	r2, [pc, #204]	@ (8017fbc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb20>)
 8017ef0:	920a      	str	r2, [sp, #40]	@ 0x28
 8017ef2:	2201      	movs	r2, #1
 8017ef4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017ef8:	2200      	movs	r2, #0
 8017efa:	f88d 201c 	strb.w	r2, [sp, #28]
 8017efe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017f02:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017f06:	9000      	str	r0, [sp, #0]
 8017f08:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017f0c:	ab0c      	add	r3, sp, #48	@ 0x30
 8017f0e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017f12:	f7fb fb75 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017f16:	f005 be02 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017f1a:	4a2c      	ldr	r2, [pc, #176]	@ (8017fcc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb30>)
 8017f1c:	9208      	str	r2, [sp, #32]
 8017f1e:	4a19      	ldr	r2, [pc, #100]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017f20:	9209      	str	r2, [sp, #36]	@ 0x24
 8017f22:	4a19      	ldr	r2, [pc, #100]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017f24:	920a      	str	r2, [sp, #40]	@ 0x28
 8017f26:	2201      	movs	r2, #1
 8017f28:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017f2c:	2200      	movs	r2, #0
 8017f2e:	f88d 201c 	strb.w	r2, [sp, #28]
 8017f32:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017f36:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017f3a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017f3e:	ab0c      	add	r3, sp, #48	@ 0x30
 8017f40:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017f44:	f7fb fb0a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017f48:	f005 bde9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017f4c:	4a20      	ldr	r2, [pc, #128]	@ (8017fd0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xb34>)
 8017f4e:	9208      	str	r2, [sp, #32]
 8017f50:	4a0c      	ldr	r2, [pc, #48]	@ (8017f84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xae8>)
 8017f52:	9209      	str	r2, [sp, #36]	@ 0x24
 8017f54:	4a0c      	ldr	r2, [pc, #48]	@ (8017f88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xaec>)
 8017f56:	920a      	str	r2, [sp, #40]	@ 0x28
 8017f58:	2201      	movs	r2, #1
 8017f5a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017f5e:	2200      	movs	r2, #0
 8017f60:	f88d 201c 	strb.w	r2, [sp, #28]
 8017f64:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017f68:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017f6c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8017f70:	ab0c      	add	r3, sp, #48	@ 0x30
 8017f72:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8017f76:	f7fb faf1 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8017f7a:	f005 bdd0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8017f7e:	bf00      	nop
 8017f80:	200018d8 	.word	0x200018d8
 8017f84:	0801283d 	.word	0x0801283d
 8017f88:	08012845 	.word	0x08012845
 8017f8c:	200018dc 	.word	0x200018dc
 8017f90:	200018e0 	.word	0x200018e0
 8017f94:	200018e4 	.word	0x200018e4
 8017f98:	200018e8 	.word	0x200018e8
 8017f9c:	0801285d 	.word	0x0801285d
 8017fa0:	08012861 	.word	0x08012861
 8017fa4:	200018ec 	.word	0x200018ec
 8017fa8:	200018f0 	.word	0x200018f0
 8017fac:	200018f4 	.word	0x200018f4
 8017fb0:	200018f8 	.word	0x200018f8
 8017fb4:	200018fc 	.word	0x200018fc
 8017fb8:	08012871 	.word	0x08012871
 8017fbc:	08012879 	.word	0x08012879
 8017fc0:	20001900 	.word	0x20001900
 8017fc4:	20001904 	.word	0x20001904
 8017fc8:	20001908 	.word	0x20001908
 8017fcc:	2000190c 	.word	0x2000190c
 8017fd0:	20001910 	.word	0x20001910
 8017fd4:	4ac0      	ldr	r2, [pc, #768]	@ (80182d8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe3c>)
 8017fd6:	9208      	str	r2, [sp, #32]
 8017fd8:	4ac0      	ldr	r2, [pc, #768]	@ (80182dc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe40>)
 8017fda:	9209      	str	r2, [sp, #36]	@ 0x24
 8017fdc:	4ac0      	ldr	r2, [pc, #768]	@ (80182e0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe44>)
 8017fde:	920a      	str	r2, [sp, #40]	@ 0x28
 8017fe0:	2201      	movs	r2, #1
 8017fe2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8017fe6:	2200      	movs	r2, #0
 8017fe8:	f88d 201c 	strb.w	r2, [sp, #28]
 8017fec:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8017ff0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8017ff4:	9000      	str	r0, [sp, #0]
 8017ff6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017ffa:	ab0c      	add	r3, sp, #48	@ 0x30
 8017ffc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018000:	f7fb fafe 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018004:	f005 bd8b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018008:	4ab6      	ldr	r2, [pc, #728]	@ (80182e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe48>)
 801800a:	9208      	str	r2, [sp, #32]
 801800c:	4ab6      	ldr	r2, [pc, #728]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 801800e:	9209      	str	r2, [sp, #36]	@ 0x24
 8018010:	4ab6      	ldr	r2, [pc, #728]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 8018012:	920a      	str	r2, [sp, #40]	@ 0x28
 8018014:	2201      	movs	r2, #1
 8018016:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801801a:	2200      	movs	r2, #0
 801801c:	f88d 201c 	strb.w	r2, [sp, #28]
 8018020:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018024:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018028:	e88d 0003 	stmia.w	sp, {r0, r1}
 801802c:	ab0c      	add	r3, sp, #48	@ 0x30
 801802e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018032:	f7fb fa93 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018036:	f005 bd72 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801803a:	4aad      	ldr	r2, [pc, #692]	@ (80182f0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe54>)
 801803c:	9208      	str	r2, [sp, #32]
 801803e:	4aaa      	ldr	r2, [pc, #680]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 8018040:	9209      	str	r2, [sp, #36]	@ 0x24
 8018042:	4aaa      	ldr	r2, [pc, #680]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 8018044:	920a      	str	r2, [sp, #40]	@ 0x28
 8018046:	2201      	movs	r2, #1
 8018048:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801804c:	2200      	movs	r2, #0
 801804e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018052:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018056:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801805a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801805e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018060:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018064:	f7fb fa7a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018068:	f005 bd59 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801806c:	4aa1      	ldr	r2, [pc, #644]	@ (80182f4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe58>)
 801806e:	9208      	str	r2, [sp, #32]
 8018070:	4a9a      	ldr	r2, [pc, #616]	@ (80182dc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe40>)
 8018072:	9209      	str	r2, [sp, #36]	@ 0x24
 8018074:	4a9a      	ldr	r2, [pc, #616]	@ (80182e0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe44>)
 8018076:	920a      	str	r2, [sp, #40]	@ 0x28
 8018078:	2201      	movs	r2, #1
 801807a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801807e:	2200      	movs	r2, #0
 8018080:	f88d 201c 	strb.w	r2, [sp, #28]
 8018084:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018088:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801808c:	9000      	str	r0, [sp, #0]
 801808e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018092:	ab0c      	add	r3, sp, #48	@ 0x30
 8018094:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018098:	f7fb fab2 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801809c:	f005 bd3f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80180a0:	4a95      	ldr	r2, [pc, #596]	@ (80182f8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe5c>)
 80180a2:	9208      	str	r2, [sp, #32]
 80180a4:	4a90      	ldr	r2, [pc, #576]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 80180a6:	9209      	str	r2, [sp, #36]	@ 0x24
 80180a8:	4a90      	ldr	r2, [pc, #576]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 80180aa:	920a      	str	r2, [sp, #40]	@ 0x28
 80180ac:	2201      	movs	r2, #1
 80180ae:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80180b2:	2200      	movs	r2, #0
 80180b4:	f88d 201c 	strb.w	r2, [sp, #28]
 80180b8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80180bc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80180c0:	e88d 0003 	stmia.w	sp, {r0, r1}
 80180c4:	ab0c      	add	r3, sp, #48	@ 0x30
 80180c6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80180ca:	f7fb fa47 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80180ce:	f005 bd26 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80180d2:	4a8a      	ldr	r2, [pc, #552]	@ (80182fc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe60>)
 80180d4:	9208      	str	r2, [sp, #32]
 80180d6:	4a84      	ldr	r2, [pc, #528]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 80180d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80180da:	4a84      	ldr	r2, [pc, #528]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 80180dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80180de:	2201      	movs	r2, #1
 80180e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80180e4:	2200      	movs	r2, #0
 80180e6:	f88d 201c 	strb.w	r2, [sp, #28]
 80180ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80180ee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80180f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80180f6:	ab0c      	add	r3, sp, #48	@ 0x30
 80180f8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80180fc:	f7fb fa2e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018100:	f005 bd0d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018104:	4a7e      	ldr	r2, [pc, #504]	@ (8018300 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe64>)
 8018106:	9208      	str	r2, [sp, #32]
 8018108:	4a74      	ldr	r2, [pc, #464]	@ (80182dc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe40>)
 801810a:	9209      	str	r2, [sp, #36]	@ 0x24
 801810c:	4a74      	ldr	r2, [pc, #464]	@ (80182e0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe44>)
 801810e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018110:	2201      	movs	r2, #1
 8018112:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018116:	2200      	movs	r2, #0
 8018118:	f88d 201c 	strb.w	r2, [sp, #28]
 801811c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018120:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018124:	9000      	str	r0, [sp, #0]
 8018126:	f8ad 1004 	strh.w	r1, [sp, #4]
 801812a:	ab0c      	add	r3, sp, #48	@ 0x30
 801812c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018130:	f7fb fa66 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018134:	f005 bcf3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018138:	4a72      	ldr	r2, [pc, #456]	@ (8018304 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe68>)
 801813a:	9208      	str	r2, [sp, #32]
 801813c:	4a6a      	ldr	r2, [pc, #424]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 801813e:	9209      	str	r2, [sp, #36]	@ 0x24
 8018140:	4a6a      	ldr	r2, [pc, #424]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 8018142:	920a      	str	r2, [sp, #40]	@ 0x28
 8018144:	2201      	movs	r2, #1
 8018146:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801814a:	2200      	movs	r2, #0
 801814c:	f88d 201c 	strb.w	r2, [sp, #28]
 8018150:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018154:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018158:	e88d 0003 	stmia.w	sp, {r0, r1}
 801815c:	ab0c      	add	r3, sp, #48	@ 0x30
 801815e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018162:	f7fb f9fb 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018166:	f005 bcda 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801816a:	4a67      	ldr	r2, [pc, #412]	@ (8018308 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe6c>)
 801816c:	9208      	str	r2, [sp, #32]
 801816e:	4a5e      	ldr	r2, [pc, #376]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 8018170:	9209      	str	r2, [sp, #36]	@ 0x24
 8018172:	4a5e      	ldr	r2, [pc, #376]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 8018174:	920a      	str	r2, [sp, #40]	@ 0x28
 8018176:	2201      	movs	r2, #1
 8018178:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801817c:	2200      	movs	r2, #0
 801817e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018182:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018186:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801818a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801818e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018190:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018194:	f7fb f9e2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018198:	f005 bcc1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801819c:	4a5b      	ldr	r2, [pc, #364]	@ (801830c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe70>)
 801819e:	9208      	str	r2, [sp, #32]
 80181a0:	4a4e      	ldr	r2, [pc, #312]	@ (80182dc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe40>)
 80181a2:	9209      	str	r2, [sp, #36]	@ 0x24
 80181a4:	4a4e      	ldr	r2, [pc, #312]	@ (80182e0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe44>)
 80181a6:	920a      	str	r2, [sp, #40]	@ 0x28
 80181a8:	2201      	movs	r2, #1
 80181aa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80181ae:	2200      	movs	r2, #0
 80181b0:	f88d 201c 	strb.w	r2, [sp, #28]
 80181b4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80181b8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80181bc:	9000      	str	r0, [sp, #0]
 80181be:	f8ad 1004 	strh.w	r1, [sp, #4]
 80181c2:	ab0c      	add	r3, sp, #48	@ 0x30
 80181c4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80181c8:	f7fb fa1a 	bl	8013600 <fibre_property_endpoint_ref_readwrite_exchange(std::optional<Property<endpoint_ref_t> >, std::optional<endpoint_ref_t>, endpoint_ref_t*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80181cc:	f005 bca7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80181d0:	4a4f      	ldr	r2, [pc, #316]	@ (8018310 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe74>)
 80181d2:	9208      	str	r2, [sp, #32]
 80181d4:	4a44      	ldr	r2, [pc, #272]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 80181d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80181d8:	4a44      	ldr	r2, [pc, #272]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 80181da:	920a      	str	r2, [sp, #40]	@ 0x28
 80181dc:	2201      	movs	r2, #1
 80181de:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80181e2:	2200      	movs	r2, #0
 80181e4:	f88d 201c 	strb.w	r2, [sp, #28]
 80181e8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80181ec:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80181f0:	e88d 0003 	stmia.w	sp, {r0, r1}
 80181f4:	ab0c      	add	r3, sp, #48	@ 0x30
 80181f6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80181fa:	f7fb f9af 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80181fe:	f005 bc8e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018202:	4a44      	ldr	r2, [pc, #272]	@ (8018314 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe78>)
 8018204:	9208      	str	r2, [sp, #32]
 8018206:	4a38      	ldr	r2, [pc, #224]	@ (80182e8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe4c>)
 8018208:	9209      	str	r2, [sp, #36]	@ 0x24
 801820a:	4a38      	ldr	r2, [pc, #224]	@ (80182ec <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe50>)
 801820c:	920a      	str	r2, [sp, #40]	@ 0x28
 801820e:	2201      	movs	r2, #1
 8018210:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018214:	2200      	movs	r2, #0
 8018216:	f88d 201c 	strb.w	r2, [sp, #28]
 801821a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801821e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018222:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018226:	ab0c      	add	r3, sp, #48	@ 0x30
 8018228:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801822c:	f7fb f996 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018230:	f005 bc75 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018234:	4938      	ldr	r1, [pc, #224]	@ (8018318 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe7c>)
 8018236:	4839      	ldr	r0, [pc, #228]	@ (801831c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe80>)
 8018238:	2201      	movs	r2, #1
 801823a:	f000 beaf 	b.w	8018f9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1b00>
 801823e:	4a38      	ldr	r2, [pc, #224]	@ (8018320 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe84>)
 8018240:	6812      	ldr	r2, [r2, #0]
 8018242:	3250      	adds	r2, #80	@ 0x50
 8018244:	9208      	str	r2, [sp, #32]
 8018246:	4a37      	ldr	r2, [pc, #220]	@ (8018324 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe88>)
 8018248:	9209      	str	r2, [sp, #36]	@ 0x24
 801824a:	4a37      	ldr	r2, [pc, #220]	@ (8018328 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe8c>)
 801824c:	920a      	str	r2, [sp, #40]	@ 0x28
 801824e:	2201      	movs	r2, #1
 8018250:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018254:	2200      	movs	r2, #0
 8018256:	f88d 201c 	strb.w	r2, [sp, #28]
 801825a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801825e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018262:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018266:	ab0c      	add	r3, sp, #48	@ 0x30
 8018268:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801826c:	f7fb fa8e 	bl	801378c <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018270:	f005 bc55 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018274:	4a2a      	ldr	r2, [pc, #168]	@ (8018320 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe84>)
 8018276:	4928      	ldr	r1, [pc, #160]	@ (8018318 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe7c>)
 8018278:	6810      	ldr	r0, [r2, #0]
 801827a:	2201      	movs	r2, #1
 801827c:	3054      	adds	r0, #84	@ 0x54
 801827e:	f000 be8d 	b.w	8018f9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1b00>
 8018282:	4a27      	ldr	r2, [pc, #156]	@ (8018320 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe84>)
 8018284:	9305      	str	r3, [sp, #20]
 8018286:	6812      	ldr	r2, [r2, #0]
 8018288:	6f50      	ldr	r0, [r2, #116]	@ 0x74
 801828a:	f7fa fafd 	bl	8012888 <Property<ODriveIntf::AxisIntf::AxisState const>::Property(ODriveIntf::AxisIntf::AxisState const*)::{lambda(void*)#1}::_FUN(void*)>
 801828e:	9b05      	ldr	r3, [sp, #20]
 8018290:	685a      	ldr	r2, [r3, #4]
 8018292:	4619      	mov	r1, r3
 8018294:	f7ff f8e8 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 8018298:	f005 bc41 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801829c:	4a20      	ldr	r2, [pc, #128]	@ (8018320 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe84>)
 801829e:	6812      	ldr	r2, [r2, #0]
 80182a0:	3266      	adds	r2, #102	@ 0x66
 80182a2:	9208      	str	r2, [sp, #32]
 80182a4:	4a21      	ldr	r2, [pc, #132]	@ (801832c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe90>)
 80182a6:	9209      	str	r2, [sp, #36]	@ 0x24
 80182a8:	4a21      	ldr	r2, [pc, #132]	@ (8018330 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe94>)
 80182aa:	920a      	str	r2, [sp, #40]	@ 0x28
 80182ac:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80182b0:	2201      	movs	r2, #1
 80182b2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80182b6:	2200      	movs	r2, #0
 80182b8:	f8ad 2000 	strh.w	r2, [sp]
 80182bc:	ab0c      	add	r3, sp, #48	@ 0x30
 80182be:	f8ad 2018 	strh.w	r2, [sp, #24]
 80182c2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80182c6:	f7fb fd03 	bl	8013cd0 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80182ca:	f005 bc28 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80182ce:	4a14      	ldr	r2, [pc, #80]	@ (8018320 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xe84>)
 80182d0:	6810      	ldr	r0, [r2, #0]
 80182d2:	f002 bd7d 	b.w	801add0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3934>
 80182d6:	bf00      	nop
 80182d8:	20001914 	.word	0x20001914
 80182dc:	08012871 	.word	0x08012871
 80182e0:	08012879 	.word	0x08012879
 80182e4:	20001918 	.word	0x20001918
 80182e8:	0801283d 	.word	0x0801283d
 80182ec:	08012845 	.word	0x08012845
 80182f0:	2000191c 	.word	0x2000191c
 80182f4:	20001920 	.word	0x20001920
 80182f8:	20001924 	.word	0x20001924
 80182fc:	20001928 	.word	0x20001928
 8018300:	20001974 	.word	0x20001974
 8018304:	20001978 	.word	0x20001978
 8018308:	2000197c 	.word	0x2000197c
 801830c:	20001980 	.word	0x20001980
 8018310:	20001984 	.word	0x20001984
 8018314:	20001988 	.word	0x20001988
 8018318:	08012859 	.word	0x08012859
 801831c:	200019c0 	.word	0x200019c0
 8018320:	200019cc 	.word	0x200019cc
 8018324:	08012881 	.word	0x08012881
 8018328:	08012885 	.word	0x08012885
 801832c:	0801288d 	.word	0x0801288d
 8018330:	08012891 	.word	0x08012891
 8018334:	4aba      	ldr	r2, [pc, #744]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018336:	9305      	str	r3, [sp, #20]
 8018338:	6810      	ldr	r0, [r2, #0]
 801833a:	307c      	adds	r0, #124	@ 0x7c
 801833c:	f7fa faaa 	bl	8012894 <Property<ODriveIntf::AxisIntf::LockinState const>::Property(ODriveIntf::AxisIntf::LockinState const*)::{lambda(void*)#1}::_FUN(void*)>
 8018340:	9b05      	ldr	r3, [sp, #20]
 8018342:	685a      	ldr	r2, [r3, #4]
 8018344:	4619      	mov	r1, r3
 8018346:	f7ff f88f 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801834a:	f005 bbe8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801834e:	4ab4      	ldr	r2, [pc, #720]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018350:	6812      	ldr	r2, [r2, #0]
 8018352:	327d      	adds	r2, #125	@ 0x7d
 8018354:	9208      	str	r2, [sp, #32]
 8018356:	4ab3      	ldr	r2, [pc, #716]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 8018358:	9209      	str	r2, [sp, #36]	@ 0x24
 801835a:	4ab3      	ldr	r2, [pc, #716]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 801835c:	920a      	str	r2, [sp, #40]	@ 0x28
 801835e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018362:	2201      	movs	r2, #1
 8018364:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018368:	2200      	movs	r2, #0
 801836a:	f8ad 2000 	strh.w	r2, [sp]
 801836e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018370:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018374:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018378:	f7fa ff9a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801837c:	f005 bbcf 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018380:	4aa7      	ldr	r2, [pc, #668]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018382:	6812      	ldr	r2, [r2, #0]
 8018384:	68d2      	ldr	r2, [r2, #12]
 8018386:	9208      	str	r2, [sp, #32]
 8018388:	4aa6      	ldr	r2, [pc, #664]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 801838a:	9209      	str	r2, [sp, #36]	@ 0x24
 801838c:	4aa6      	ldr	r2, [pc, #664]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 801838e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018390:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018394:	2201      	movs	r2, #1
 8018396:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801839a:	2200      	movs	r2, #0
 801839c:	f8ad 2000 	strh.w	r2, [sp]
 80183a0:	ab0c      	add	r3, sp, #48	@ 0x30
 80183a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80183a6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80183aa:	f7fa ff81 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80183ae:	f005 bbb6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80183b2:	4a9b      	ldr	r2, [pc, #620]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80183b4:	6812      	ldr	r2, [r2, #0]
 80183b6:	68d2      	ldr	r2, [r2, #12]
 80183b8:	3201      	adds	r2, #1
 80183ba:	9208      	str	r2, [sp, #32]
 80183bc:	4a99      	ldr	r2, [pc, #612]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 80183be:	9209      	str	r2, [sp, #36]	@ 0x24
 80183c0:	4a99      	ldr	r2, [pc, #612]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 80183c2:	920a      	str	r2, [sp, #40]	@ 0x28
 80183c4:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80183c8:	2201      	movs	r2, #1
 80183ca:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80183ce:	2200      	movs	r2, #0
 80183d0:	f8ad 2000 	strh.w	r2, [sp]
 80183d4:	ab0c      	add	r3, sp, #48	@ 0x30
 80183d6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80183da:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80183de:	f7fa ff67 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80183e2:	f005 bb9c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80183e6:	4a8e      	ldr	r2, [pc, #568]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80183e8:	6812      	ldr	r2, [r2, #0]
 80183ea:	68d2      	ldr	r2, [r2, #12]
 80183ec:	3202      	adds	r2, #2
 80183ee:	9208      	str	r2, [sp, #32]
 80183f0:	4a8c      	ldr	r2, [pc, #560]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 80183f2:	9209      	str	r2, [sp, #36]	@ 0x24
 80183f4:	4a8c      	ldr	r2, [pc, #560]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 80183f6:	920a      	str	r2, [sp, #40]	@ 0x28
 80183f8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80183fc:	2201      	movs	r2, #1
 80183fe:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018402:	2200      	movs	r2, #0
 8018404:	f8ad 2000 	strh.w	r2, [sp]
 8018408:	ab0c      	add	r3, sp, #48	@ 0x30
 801840a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801840e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018412:	f7fa ff4d 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018416:	f005 bb82 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801841a:	4a81      	ldr	r2, [pc, #516]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 801841c:	6812      	ldr	r2, [r2, #0]
 801841e:	68d2      	ldr	r2, [r2, #12]
 8018420:	3203      	adds	r2, #3
 8018422:	9208      	str	r2, [sp, #32]
 8018424:	4a7f      	ldr	r2, [pc, #508]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 8018426:	9209      	str	r2, [sp, #36]	@ 0x24
 8018428:	4a7f      	ldr	r2, [pc, #508]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 801842a:	920a      	str	r2, [sp, #40]	@ 0x28
 801842c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018430:	2201      	movs	r2, #1
 8018432:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018436:	2200      	movs	r2, #0
 8018438:	f8ad 2000 	strh.w	r2, [sp]
 801843c:	ab0c      	add	r3, sp, #48	@ 0x30
 801843e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018442:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018446:	f7fa ff33 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801844a:	f005 bb68 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801844e:	4a74      	ldr	r2, [pc, #464]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018450:	6812      	ldr	r2, [r2, #0]
 8018452:	68d2      	ldr	r2, [r2, #12]
 8018454:	3204      	adds	r2, #4
 8018456:	9208      	str	r2, [sp, #32]
 8018458:	4a72      	ldr	r2, [pc, #456]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 801845a:	9209      	str	r2, [sp, #36]	@ 0x24
 801845c:	4a72      	ldr	r2, [pc, #456]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 801845e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018460:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018464:	2201      	movs	r2, #1
 8018466:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801846a:	2200      	movs	r2, #0
 801846c:	f8ad 2000 	strh.w	r2, [sp]
 8018470:	ab0c      	add	r3, sp, #48	@ 0x30
 8018472:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018476:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801847a:	f7fa ff19 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801847e:	f005 bb4e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018482:	4a67      	ldr	r2, [pc, #412]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018484:	6812      	ldr	r2, [r2, #0]
 8018486:	68d2      	ldr	r2, [r2, #12]
 8018488:	3205      	adds	r2, #5
 801848a:	9208      	str	r2, [sp, #32]
 801848c:	4a65      	ldr	r2, [pc, #404]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 801848e:	9209      	str	r2, [sp, #36]	@ 0x24
 8018490:	4a65      	ldr	r2, [pc, #404]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 8018492:	920a      	str	r2, [sp, #40]	@ 0x28
 8018494:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018498:	2201      	movs	r2, #1
 801849a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801849e:	2200      	movs	r2, #0
 80184a0:	f8ad 2000 	strh.w	r2, [sp]
 80184a4:	ab0c      	add	r3, sp, #48	@ 0x30
 80184a6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80184aa:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80184ae:	f7fa feff 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80184b2:	f005 bb34 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80184b6:	4a5a      	ldr	r2, [pc, #360]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80184b8:	6812      	ldr	r2, [r2, #0]
 80184ba:	68d2      	ldr	r2, [r2, #12]
 80184bc:	3206      	adds	r2, #6
 80184be:	9208      	str	r2, [sp, #32]
 80184c0:	4a58      	ldr	r2, [pc, #352]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 80184c2:	9209      	str	r2, [sp, #36]	@ 0x24
 80184c4:	4a58      	ldr	r2, [pc, #352]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 80184c6:	920a      	str	r2, [sp, #40]	@ 0x28
 80184c8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80184cc:	2201      	movs	r2, #1
 80184ce:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80184d2:	2200      	movs	r2, #0
 80184d4:	f8ad 2000 	strh.w	r2, [sp]
 80184d8:	ab0c      	add	r3, sp, #48	@ 0x30
 80184da:	f8ad 2018 	strh.w	r2, [sp, #24]
 80184de:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80184e2:	f7fa fee5 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80184e6:	f005 bb1a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80184ea:	4a4d      	ldr	r2, [pc, #308]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80184ec:	6812      	ldr	r2, [r2, #0]
 80184ee:	68d2      	ldr	r2, [r2, #12]
 80184f0:	3207      	adds	r2, #7
 80184f2:	9208      	str	r2, [sp, #32]
 80184f4:	4a4b      	ldr	r2, [pc, #300]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 80184f6:	9209      	str	r2, [sp, #36]	@ 0x24
 80184f8:	4a4b      	ldr	r2, [pc, #300]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 80184fa:	920a      	str	r2, [sp, #40]	@ 0x28
 80184fc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018500:	2201      	movs	r2, #1
 8018502:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018506:	2200      	movs	r2, #0
 8018508:	f8ad 2000 	strh.w	r2, [sp]
 801850c:	ab0c      	add	r3, sp, #48	@ 0x30
 801850e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018512:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018516:	f7fa fecb 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801851a:	f005 bb00 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801851e:	4a40      	ldr	r2, [pc, #256]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018520:	6812      	ldr	r2, [r2, #0]
 8018522:	68d2      	ldr	r2, [r2, #12]
 8018524:	3208      	adds	r2, #8
 8018526:	9208      	str	r2, [sp, #32]
 8018528:	4a40      	ldr	r2, [pc, #256]	@ (801862c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1190>)
 801852a:	9209      	str	r2, [sp, #36]	@ 0x24
 801852c:	4a40      	ldr	r2, [pc, #256]	@ (8018630 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1194>)
 801852e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018530:	2201      	movs	r2, #1
 8018532:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018536:	2200      	movs	r2, #0
 8018538:	f88d 201c 	strb.w	r2, [sp, #28]
 801853c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018540:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018544:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018548:	ab0c      	add	r3, sp, #48	@ 0x30
 801854a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801854e:	f7fb f805 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018552:	f005 bae4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018556:	4a32      	ldr	r2, [pc, #200]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018558:	6812      	ldr	r2, [r2, #0]
 801855a:	68d2      	ldr	r2, [r2, #12]
 801855c:	320c      	adds	r2, #12
 801855e:	9208      	str	r2, [sp, #32]
 8018560:	4a32      	ldr	r2, [pc, #200]	@ (801862c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1190>)
 8018562:	9209      	str	r2, [sp, #36]	@ 0x24
 8018564:	4a32      	ldr	r2, [pc, #200]	@ (8018630 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1194>)
 8018566:	920a      	str	r2, [sp, #40]	@ 0x28
 8018568:	2201      	movs	r2, #1
 801856a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801856e:	2200      	movs	r2, #0
 8018570:	f88d 201c 	strb.w	r2, [sp, #28]
 8018574:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018578:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801857c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018580:	ab0c      	add	r3, sp, #48	@ 0x30
 8018582:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018586:	f7fa ffe9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801858a:	f005 bac8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801858e:	4a24      	ldr	r2, [pc, #144]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 8018590:	6812      	ldr	r2, [r2, #0]
 8018592:	68d2      	ldr	r2, [r2, #12]
 8018594:	3210      	adds	r2, #16
 8018596:	9208      	str	r2, [sp, #32]
 8018598:	4a22      	ldr	r2, [pc, #136]	@ (8018624 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1188>)
 801859a:	9209      	str	r2, [sp, #36]	@ 0x24
 801859c:	4a22      	ldr	r2, [pc, #136]	@ (8018628 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x118c>)
 801859e:	920a      	str	r2, [sp, #40]	@ 0x28
 80185a0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80185a4:	2201      	movs	r2, #1
 80185a6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80185aa:	2200      	movs	r2, #0
 80185ac:	f8ad 2000 	strh.w	r2, [sp]
 80185b0:	ab0c      	add	r3, sp, #48	@ 0x30
 80185b2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80185b6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80185ba:	f7fa fe79 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80185be:	f005 baae 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80185c2:	4a17      	ldr	r2, [pc, #92]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80185c4:	6812      	ldr	r2, [r2, #0]
 80185c6:	68d2      	ldr	r2, [r2, #12]
 80185c8:	9208      	str	r2, [sp, #32]
 80185ca:	4a1a      	ldr	r2, [pc, #104]	@ (8018634 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1198>)
 80185cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80185ce:	4a1a      	ldr	r2, [pc, #104]	@ (8018638 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x119c>)
 80185d0:	920a      	str	r2, [sp, #40]	@ 0x28
 80185d2:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80185d6:	2201      	movs	r2, #1
 80185d8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80185dc:	2200      	movs	r2, #0
 80185de:	9200      	str	r2, [sp, #0]
 80185e0:	ab0c      	add	r3, sp, #48	@ 0x30
 80185e2:	9206      	str	r2, [sp, #24]
 80185e4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80185e8:	f7fa ff16 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80185ec:	f005 ba97 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80185f0:	4a0b      	ldr	r2, [pc, #44]	@ (8018620 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1184>)
 80185f2:	6812      	ldr	r2, [r2, #0]
 80185f4:	68d2      	ldr	r2, [r2, #12]
 80185f6:	9208      	str	r2, [sp, #32]
 80185f8:	4a10      	ldr	r2, [pc, #64]	@ (801863c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x11a0>)
 80185fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80185fc:	4a10      	ldr	r2, [pc, #64]	@ (8018640 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x11a4>)
 80185fe:	920a      	str	r2, [sp, #40]	@ 0x28
 8018600:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018604:	2201      	movs	r2, #1
 8018606:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801860a:	2200      	movs	r2, #0
 801860c:	9200      	str	r2, [sp, #0]
 801860e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018610:	9206      	str	r2, [sp, #24]
 8018612:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018616:	f7fa feff 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801861a:	f005 ba80 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801861e:	bf00      	nop
 8018620:	200019cc 	.word	0x200019cc
 8018624:	0801285d 	.word	0x0801285d
 8018628:	08012861 	.word	0x08012861
 801862c:	0801283d 	.word	0x0801283d
 8018630:	08012845 	.word	0x08012845
 8018634:	08013225 	.word	0x08013225
 8018638:	080140ad 	.word	0x080140ad
 801863c:	0801321d 	.word	0x0801321d
 8018640:	080140c5 	.word	0x080140c5
 8018644:	4ab3      	ldr	r2, [pc, #716]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 8018646:	6812      	ldr	r2, [r2, #0]
 8018648:	68d2      	ldr	r2, [r2, #12]
 801864a:	3218      	adds	r2, #24
 801864c:	9208      	str	r2, [sp, #32]
 801864e:	4ab2      	ldr	r2, [pc, #712]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018650:	9209      	str	r2, [sp, #36]	@ 0x24
 8018652:	4ab2      	ldr	r2, [pc, #712]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 8018654:	920a      	str	r2, [sp, #40]	@ 0x28
 8018656:	2201      	movs	r2, #1
 8018658:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801865c:	2200      	movs	r2, #0
 801865e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018662:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018666:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801866a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801866e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018670:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018674:	f7fa ff72 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018678:	f005 ba51 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801867c:	4aa5      	ldr	r2, [pc, #660]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 801867e:	6812      	ldr	r2, [r2, #0]
 8018680:	68d2      	ldr	r2, [r2, #12]
 8018682:	321c      	adds	r2, #28
 8018684:	9208      	str	r2, [sp, #32]
 8018686:	4aa4      	ldr	r2, [pc, #656]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018688:	9209      	str	r2, [sp, #36]	@ 0x24
 801868a:	4aa4      	ldr	r2, [pc, #656]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 801868c:	920a      	str	r2, [sp, #40]	@ 0x28
 801868e:	2201      	movs	r2, #1
 8018690:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018694:	2200      	movs	r2, #0
 8018696:	f88d 201c 	strb.w	r2, [sp, #28]
 801869a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801869e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80186a2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80186a6:	ab0c      	add	r3, sp, #48	@ 0x30
 80186a8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80186ac:	f7fa ff56 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80186b0:	f005 ba35 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80186b4:	4a97      	ldr	r2, [pc, #604]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 80186b6:	6812      	ldr	r2, [r2, #0]
 80186b8:	68d2      	ldr	r2, [r2, #12]
 80186ba:	3220      	adds	r2, #32
 80186bc:	9208      	str	r2, [sp, #32]
 80186be:	4a96      	ldr	r2, [pc, #600]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 80186c0:	9209      	str	r2, [sp, #36]	@ 0x24
 80186c2:	4a96      	ldr	r2, [pc, #600]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 80186c4:	920a      	str	r2, [sp, #40]	@ 0x28
 80186c6:	2201      	movs	r2, #1
 80186c8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80186cc:	2200      	movs	r2, #0
 80186ce:	f88d 201c 	strb.w	r2, [sp, #28]
 80186d2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80186d6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80186da:	e88d 0003 	stmia.w	sp, {r0, r1}
 80186de:	ab0c      	add	r3, sp, #48	@ 0x30
 80186e0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80186e4:	f7fa ff3a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80186e8:	f005 ba19 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80186ec:	4a89      	ldr	r2, [pc, #548]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 80186ee:	6812      	ldr	r2, [r2, #0]
 80186f0:	68d2      	ldr	r2, [r2, #12]
 80186f2:	3224      	adds	r2, #36	@ 0x24
 80186f4:	9208      	str	r2, [sp, #32]
 80186f6:	4a88      	ldr	r2, [pc, #544]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 80186f8:	9209      	str	r2, [sp, #36]	@ 0x24
 80186fa:	4a88      	ldr	r2, [pc, #544]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 80186fc:	920a      	str	r2, [sp, #40]	@ 0x28
 80186fe:	2201      	movs	r2, #1
 8018700:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018704:	2200      	movs	r2, #0
 8018706:	f88d 201c 	strb.w	r2, [sp, #28]
 801870a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801870e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018712:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018716:	ab0c      	add	r3, sp, #48	@ 0x30
 8018718:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801871c:	f7fa ff1e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018720:	f005 b9fd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018724:	4a7b      	ldr	r2, [pc, #492]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 8018726:	6812      	ldr	r2, [r2, #0]
 8018728:	68d2      	ldr	r2, [r2, #12]
 801872a:	3228      	adds	r2, #40	@ 0x28
 801872c:	9208      	str	r2, [sp, #32]
 801872e:	4a7a      	ldr	r2, [pc, #488]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018730:	9209      	str	r2, [sp, #36]	@ 0x24
 8018732:	4a7a      	ldr	r2, [pc, #488]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 8018734:	920a      	str	r2, [sp, #40]	@ 0x28
 8018736:	2201      	movs	r2, #1
 8018738:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801873c:	2200      	movs	r2, #0
 801873e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018742:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018746:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801874a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801874e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018750:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018754:	f7fa ff02 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018758:	f005 b9e1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801875c:	4a6d      	ldr	r2, [pc, #436]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 801875e:	6812      	ldr	r2, [r2, #0]
 8018760:	68d2      	ldr	r2, [r2, #12]
 8018762:	3234      	adds	r2, #52	@ 0x34
 8018764:	9208      	str	r2, [sp, #32]
 8018766:	4a6c      	ldr	r2, [pc, #432]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018768:	9209      	str	r2, [sp, #36]	@ 0x24
 801876a:	4a6c      	ldr	r2, [pc, #432]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 801876c:	920a      	str	r2, [sp, #40]	@ 0x28
 801876e:	2201      	movs	r2, #1
 8018770:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018774:	2200      	movs	r2, #0
 8018776:	f88d 201c 	strb.w	r2, [sp, #28]
 801877a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801877e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018782:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018786:	ab0c      	add	r3, sp, #48	@ 0x30
 8018788:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801878c:	f7fa fee6 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018790:	f005 b9c5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018794:	4a5f      	ldr	r2, [pc, #380]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 8018796:	6812      	ldr	r2, [r2, #0]
 8018798:	68d2      	ldr	r2, [r2, #12]
 801879a:	3238      	adds	r2, #56	@ 0x38
 801879c:	9208      	str	r2, [sp, #32]
 801879e:	4a5e      	ldr	r2, [pc, #376]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 80187a0:	9209      	str	r2, [sp, #36]	@ 0x24
 80187a2:	4a5e      	ldr	r2, [pc, #376]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 80187a4:	920a      	str	r2, [sp, #40]	@ 0x28
 80187a6:	2201      	movs	r2, #1
 80187a8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80187ac:	2200      	movs	r2, #0
 80187ae:	f88d 201c 	strb.w	r2, [sp, #28]
 80187b2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80187b6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80187ba:	e88d 0003 	stmia.w	sp, {r0, r1}
 80187be:	ab0c      	add	r3, sp, #48	@ 0x30
 80187c0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80187c4:	f7fa feca 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80187c8:	f005 b9a9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80187cc:	4a51      	ldr	r2, [pc, #324]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 80187ce:	6812      	ldr	r2, [r2, #0]
 80187d0:	68d2      	ldr	r2, [r2, #12]
 80187d2:	323c      	adds	r2, #60	@ 0x3c
 80187d4:	9208      	str	r2, [sp, #32]
 80187d6:	4a50      	ldr	r2, [pc, #320]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 80187d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80187da:	4a50      	ldr	r2, [pc, #320]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 80187dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80187de:	2201      	movs	r2, #1
 80187e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80187e4:	2200      	movs	r2, #0
 80187e6:	f88d 201c 	strb.w	r2, [sp, #28]
 80187ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80187ee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80187f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80187f6:	ab0c      	add	r3, sp, #48	@ 0x30
 80187f8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80187fc:	f7fa feae 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018800:	f005 b98d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018804:	4a43      	ldr	r2, [pc, #268]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 8018806:	6812      	ldr	r2, [r2, #0]
 8018808:	68d2      	ldr	r2, [r2, #12]
 801880a:	3240      	adds	r2, #64	@ 0x40
 801880c:	9208      	str	r2, [sp, #32]
 801880e:	4a42      	ldr	r2, [pc, #264]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018810:	9209      	str	r2, [sp, #36]	@ 0x24
 8018812:	4a42      	ldr	r2, [pc, #264]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 8018814:	920a      	str	r2, [sp, #40]	@ 0x28
 8018816:	2201      	movs	r2, #1
 8018818:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801881c:	2200      	movs	r2, #0
 801881e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018822:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018826:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801882a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801882e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018830:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018834:	f7fa fe92 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018838:	f005 b971 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801883c:	4a35      	ldr	r2, [pc, #212]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 801883e:	6812      	ldr	r2, [r2, #0]
 8018840:	68d2      	ldr	r2, [r2, #12]
 8018842:	3244      	adds	r2, #68	@ 0x44
 8018844:	9208      	str	r2, [sp, #32]
 8018846:	4a34      	ldr	r2, [pc, #208]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018848:	9209      	str	r2, [sp, #36]	@ 0x24
 801884a:	4a34      	ldr	r2, [pc, #208]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 801884c:	920a      	str	r2, [sp, #40]	@ 0x28
 801884e:	2201      	movs	r2, #1
 8018850:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018854:	2200      	movs	r2, #0
 8018856:	f88d 201c 	strb.w	r2, [sp, #28]
 801885a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801885e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018862:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018866:	ab0c      	add	r3, sp, #48	@ 0x30
 8018868:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801886c:	f7fa fe76 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018870:	f005 b955 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018874:	4a27      	ldr	r2, [pc, #156]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 8018876:	6812      	ldr	r2, [r2, #0]
 8018878:	68d2      	ldr	r2, [r2, #12]
 801887a:	3248      	adds	r2, #72	@ 0x48
 801887c:	9208      	str	r2, [sp, #32]
 801887e:	4a26      	ldr	r2, [pc, #152]	@ (8018918 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x147c>)
 8018880:	9209      	str	r2, [sp, #36]	@ 0x24
 8018882:	4a26      	ldr	r2, [pc, #152]	@ (801891c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1480>)
 8018884:	920a      	str	r2, [sp, #40]	@ 0x28
 8018886:	2201      	movs	r2, #1
 8018888:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801888c:	2200      	movs	r2, #0
 801888e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018892:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018896:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801889a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801889e:	ab0c      	add	r3, sp, #48	@ 0x30
 80188a0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80188a4:	f7fa fe5a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80188a8:	f005 b939 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80188ac:	4a19      	ldr	r2, [pc, #100]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 80188ae:	6812      	ldr	r2, [r2, #0]
 80188b0:	68d2      	ldr	r2, [r2, #12]
 80188b2:	324c      	adds	r2, #76	@ 0x4c
 80188b4:	9208      	str	r2, [sp, #32]
 80188b6:	4a1a      	ldr	r2, [pc, #104]	@ (8018920 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1484>)
 80188b8:	9209      	str	r2, [sp, #36]	@ 0x24
 80188ba:	4a1a      	ldr	r2, [pc, #104]	@ (8018924 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1488>)
 80188bc:	920a      	str	r2, [sp, #40]	@ 0x28
 80188be:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80188c2:	2201      	movs	r2, #1
 80188c4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80188c8:	2200      	movs	r2, #0
 80188ca:	f8ad 2000 	strh.w	r2, [sp]
 80188ce:	ab0c      	add	r3, sp, #48	@ 0x30
 80188d0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80188d4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80188d8:	f7fa fcea 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80188dc:	f005 b91f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80188e0:	4a0c      	ldr	r2, [pc, #48]	@ (8018914 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1478>)
 80188e2:	6812      	ldr	r2, [r2, #0]
 80188e4:	68d2      	ldr	r2, [r2, #12]
 80188e6:	324d      	adds	r2, #77	@ 0x4d
 80188e8:	9208      	str	r2, [sp, #32]
 80188ea:	4a0d      	ldr	r2, [pc, #52]	@ (8018920 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1484>)
 80188ec:	9209      	str	r2, [sp, #36]	@ 0x24
 80188ee:	4a0d      	ldr	r2, [pc, #52]	@ (8018924 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1488>)
 80188f0:	920a      	str	r2, [sp, #40]	@ 0x28
 80188f2:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80188f6:	2201      	movs	r2, #1
 80188f8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80188fc:	2200      	movs	r2, #0
 80188fe:	f8ad 2000 	strh.w	r2, [sp]
 8018902:	ab0c      	add	r3, sp, #48	@ 0x30
 8018904:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018908:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801890c:	f7fa fcd0 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018910:	f005 b905 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018914:	200019cc 	.word	0x200019cc
 8018918:	0801283d 	.word	0x0801283d
 801891c:	08012845 	.word	0x08012845
 8018920:	0801285d 	.word	0x0801285d
 8018924:	08012861 	.word	0x08012861
 8018928:	4abe      	ldr	r2, [pc, #760]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 801892a:	6812      	ldr	r2, [r2, #0]
 801892c:	68d2      	ldr	r2, [r2, #12]
 801892e:	324e      	adds	r2, #78	@ 0x4e
 8018930:	9208      	str	r2, [sp, #32]
 8018932:	4abd      	ldr	r2, [pc, #756]	@ (8018c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x178c>)
 8018934:	9209      	str	r2, [sp, #36]	@ 0x24
 8018936:	4abd      	ldr	r2, [pc, #756]	@ (8018c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1790>)
 8018938:	920a      	str	r2, [sp, #40]	@ 0x28
 801893a:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801893e:	2201      	movs	r2, #1
 8018940:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018944:	2200      	movs	r2, #0
 8018946:	f8ad 2000 	strh.w	r2, [sp]
 801894a:	ab0c      	add	r3, sp, #48	@ 0x30
 801894c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018950:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018954:	f7fa fcac 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018958:	f005 b8e1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801895c:	4ab1      	ldr	r2, [pc, #708]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 801895e:	6812      	ldr	r2, [r2, #0]
 8018960:	68d2      	ldr	r2, [r2, #12]
 8018962:	3250      	adds	r2, #80	@ 0x50
 8018964:	9208      	str	r2, [sp, #32]
 8018966:	4ab2      	ldr	r2, [pc, #712]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 8018968:	9209      	str	r2, [sp, #36]	@ 0x24
 801896a:	4ab2      	ldr	r2, [pc, #712]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 801896c:	920a      	str	r2, [sp, #40]	@ 0x28
 801896e:	2201      	movs	r2, #1
 8018970:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018974:	2200      	movs	r2, #0
 8018976:	f88d 201c 	strb.w	r2, [sp, #28]
 801897a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801897e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018982:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018986:	ab0c      	add	r3, sp, #48	@ 0x30
 8018988:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801898c:	f7fa fde6 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018990:	f005 b8c5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018994:	4aa3      	ldr	r2, [pc, #652]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018996:	6812      	ldr	r2, [r2, #0]
 8018998:	68d2      	ldr	r2, [r2, #12]
 801899a:	3254      	adds	r2, #84	@ 0x54
 801899c:	9208      	str	r2, [sp, #32]
 801899e:	4aa4      	ldr	r2, [pc, #656]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 80189a0:	9209      	str	r2, [sp, #36]	@ 0x24
 80189a2:	4aa4      	ldr	r2, [pc, #656]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 80189a4:	920a      	str	r2, [sp, #40]	@ 0x28
 80189a6:	2201      	movs	r2, #1
 80189a8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80189ac:	2200      	movs	r2, #0
 80189ae:	f88d 201c 	strb.w	r2, [sp, #28]
 80189b2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80189b6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80189ba:	e88d 0003 	stmia.w	sp, {r0, r1}
 80189be:	ab0c      	add	r3, sp, #48	@ 0x30
 80189c0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80189c4:	f7fa fdca 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80189c8:	f005 b8a9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80189cc:	4a95      	ldr	r2, [pc, #596]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 80189ce:	6812      	ldr	r2, [r2, #0]
 80189d0:	68d2      	ldr	r2, [r2, #12]
 80189d2:	3258      	adds	r2, #88	@ 0x58
 80189d4:	9208      	str	r2, [sp, #32]
 80189d6:	4a96      	ldr	r2, [pc, #600]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 80189d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80189da:	4a96      	ldr	r2, [pc, #600]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 80189dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80189de:	2201      	movs	r2, #1
 80189e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80189e4:	2200      	movs	r2, #0
 80189e6:	f88d 201c 	strb.w	r2, [sp, #28]
 80189ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80189ee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80189f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80189f6:	ab0c      	add	r3, sp, #48	@ 0x30
 80189f8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80189fc:	f7fa fdae 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018a00:	f005 b88d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018a04:	4a87      	ldr	r2, [pc, #540]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018a06:	6812      	ldr	r2, [r2, #0]
 8018a08:	68d2      	ldr	r2, [r2, #12]
 8018a0a:	325c      	adds	r2, #92	@ 0x5c
 8018a0c:	9208      	str	r2, [sp, #32]
 8018a0e:	4a88      	ldr	r2, [pc, #544]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 8018a10:	9209      	str	r2, [sp, #36]	@ 0x24
 8018a12:	4a88      	ldr	r2, [pc, #544]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 8018a14:	920a      	str	r2, [sp, #40]	@ 0x28
 8018a16:	2201      	movs	r2, #1
 8018a18:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018a1c:	2200      	movs	r2, #0
 8018a1e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018a22:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018a26:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018a2a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018a2e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018a30:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018a34:	f7fa fd92 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018a38:	f005 b871 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018a3c:	4a79      	ldr	r2, [pc, #484]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018a3e:	6812      	ldr	r2, [r2, #0]
 8018a40:	68d2      	ldr	r2, [r2, #12]
 8018a42:	3260      	adds	r2, #96	@ 0x60
 8018a44:	9208      	str	r2, [sp, #32]
 8018a46:	4a7a      	ldr	r2, [pc, #488]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 8018a48:	9209      	str	r2, [sp, #36]	@ 0x24
 8018a4a:	4a7a      	ldr	r2, [pc, #488]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 8018a4c:	920a      	str	r2, [sp, #40]	@ 0x28
 8018a4e:	2201      	movs	r2, #1
 8018a50:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018a54:	2200      	movs	r2, #0
 8018a56:	f88d 201c 	strb.w	r2, [sp, #28]
 8018a5a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018a5e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018a62:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018a66:	ab0c      	add	r3, sp, #48	@ 0x30
 8018a68:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018a6c:	f7fa fd76 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018a70:	f005 b855 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018a74:	4a6b      	ldr	r2, [pc, #428]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018a76:	6812      	ldr	r2, [r2, #0]
 8018a78:	68d2      	ldr	r2, [r2, #12]
 8018a7a:	3264      	adds	r2, #100	@ 0x64
 8018a7c:	9208      	str	r2, [sp, #32]
 8018a7e:	4a6c      	ldr	r2, [pc, #432]	@ (8018c30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1794>)
 8018a80:	9209      	str	r2, [sp, #36]	@ 0x24
 8018a82:	4a6c      	ldr	r2, [pc, #432]	@ (8018c34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1798>)
 8018a84:	920a      	str	r2, [sp, #40]	@ 0x28
 8018a86:	2201      	movs	r2, #1
 8018a88:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018a8c:	2200      	movs	r2, #0
 8018a8e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018a92:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018a96:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018a9a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018a9e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018aa0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018aa4:	f7fa fd5a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018aa8:	f005 b839 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018aac:	4a5d      	ldr	r2, [pc, #372]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018aae:	6812      	ldr	r2, [r2, #0]
 8018ab0:	68d2      	ldr	r2, [r2, #12]
 8018ab2:	3268      	adds	r2, #104	@ 0x68
 8018ab4:	9208      	str	r2, [sp, #32]
 8018ab6:	4a5c      	ldr	r2, [pc, #368]	@ (8018c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x178c>)
 8018ab8:	9209      	str	r2, [sp, #36]	@ 0x24
 8018aba:	4a5c      	ldr	r2, [pc, #368]	@ (8018c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1790>)
 8018abc:	920a      	str	r2, [sp, #40]	@ 0x28
 8018abe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018ac2:	2201      	movs	r2, #1
 8018ac4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018ac8:	2200      	movs	r2, #0
 8018aca:	f8ad 2000 	strh.w	r2, [sp]
 8018ace:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ad0:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ad4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018ad8:	f7fa fbea 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018adc:	f005 b81f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018ae0:	4a50      	ldr	r2, [pc, #320]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018ae2:	6812      	ldr	r2, [r2, #0]
 8018ae4:	68d2      	ldr	r2, [r2, #12]
 8018ae6:	3269      	adds	r2, #105	@ 0x69
 8018ae8:	9208      	str	r2, [sp, #32]
 8018aea:	4a4f      	ldr	r2, [pc, #316]	@ (8018c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x178c>)
 8018aec:	9209      	str	r2, [sp, #36]	@ 0x24
 8018aee:	4a4f      	ldr	r2, [pc, #316]	@ (8018c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1790>)
 8018af0:	920a      	str	r2, [sp, #40]	@ 0x28
 8018af2:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018af6:	2201      	movs	r2, #1
 8018af8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018afc:	2200      	movs	r2, #0
 8018afe:	f8ad 2000 	strh.w	r2, [sp]
 8018b02:	ab0c      	add	r3, sp, #48	@ 0x30
 8018b04:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018b08:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018b0c:	f7fa fbd0 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018b10:	f005 b805 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018b14:	4a43      	ldr	r2, [pc, #268]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018b16:	6812      	ldr	r2, [r2, #0]
 8018b18:	68d2      	ldr	r2, [r2, #12]
 8018b1a:	326a      	adds	r2, #106	@ 0x6a
 8018b1c:	9208      	str	r2, [sp, #32]
 8018b1e:	4a42      	ldr	r2, [pc, #264]	@ (8018c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x178c>)
 8018b20:	9209      	str	r2, [sp, #36]	@ 0x24
 8018b22:	4a42      	ldr	r2, [pc, #264]	@ (8018c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1790>)
 8018b24:	920a      	str	r2, [sp, #40]	@ 0x28
 8018b26:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018b2a:	2201      	movs	r2, #1
 8018b2c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018b30:	2200      	movs	r2, #0
 8018b32:	f8ad 2000 	strh.w	r2, [sp]
 8018b36:	ab0c      	add	r3, sp, #48	@ 0x30
 8018b38:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018b3c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018b40:	f7fa fbb6 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018b44:	f004 bfeb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018b48:	4a36      	ldr	r2, [pc, #216]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018b4a:	6812      	ldr	r2, [r2, #0]
 8018b4c:	68d2      	ldr	r2, [r2, #12]
 8018b4e:	326c      	adds	r2, #108	@ 0x6c
 8018b50:	9208      	str	r2, [sp, #32]
 8018b52:	4a39      	ldr	r2, [pc, #228]	@ (8018c38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x179c>)
 8018b54:	9209      	str	r2, [sp, #36]	@ 0x24
 8018b56:	4a39      	ldr	r2, [pc, #228]	@ (8018c3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x17a0>)
 8018b58:	920a      	str	r2, [sp, #40]	@ 0x28
 8018b5a:	2201      	movs	r2, #1
 8018b5c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018b60:	2200      	movs	r2, #0
 8018b62:	f88d 201c 	strb.w	r2, [sp, #28]
 8018b66:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018b6a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018b6e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018b72:	ab0c      	add	r3, sp, #48	@ 0x30
 8018b74:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018b78:	f7fa fca8 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018b7c:	f004 bfcf 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018b80:	4a28      	ldr	r2, [pc, #160]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018b82:	6812      	ldr	r2, [r2, #0]
 8018b84:	68d2      	ldr	r2, [r2, #12]
 8018b86:	3270      	adds	r2, #112	@ 0x70
 8018b88:	9208      	str	r2, [sp, #32]
 8018b8a:	4a27      	ldr	r2, [pc, #156]	@ (8018c28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x178c>)
 8018b8c:	9209      	str	r2, [sp, #36]	@ 0x24
 8018b8e:	4a27      	ldr	r2, [pc, #156]	@ (8018c2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1790>)
 8018b90:	920a      	str	r2, [sp, #40]	@ 0x28
 8018b92:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018b96:	2201      	movs	r2, #1
 8018b98:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018b9c:	2200      	movs	r2, #0
 8018b9e:	f8ad 2000 	strh.w	r2, [sp]
 8018ba2:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ba4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ba8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018bac:	f7fa fb80 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018bb0:	f004 bfb5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018bb4:	4a1b      	ldr	r2, [pc, #108]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018bb6:	6812      	ldr	r2, [r2, #0]
 8018bb8:	68d2      	ldr	r2, [r2, #12]
 8018bba:	3274      	adds	r2, #116	@ 0x74
 8018bbc:	9208      	str	r2, [sp, #32]
 8018bbe:	4a1e      	ldr	r2, [pc, #120]	@ (8018c38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x179c>)
 8018bc0:	9209      	str	r2, [sp, #36]	@ 0x24
 8018bc2:	4a1e      	ldr	r2, [pc, #120]	@ (8018c3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x17a0>)
 8018bc4:	920a      	str	r2, [sp, #40]	@ 0x28
 8018bc6:	2201      	movs	r2, #1
 8018bc8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018bcc:	2200      	movs	r2, #0
 8018bce:	f88d 201c 	strb.w	r2, [sp, #28]
 8018bd2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018bd6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018bda:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018bde:	ab0c      	add	r3, sp, #48	@ 0x30
 8018be0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018be4:	f7fa fc72 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018be8:	f004 bf99 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018bec:	4a0d      	ldr	r2, [pc, #52]	@ (8018c24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1788>)
 8018bee:	6812      	ldr	r2, [r2, #0]
 8018bf0:	68d2      	ldr	r2, [r2, #12]
 8018bf2:	3278      	adds	r2, #120	@ 0x78
 8018bf4:	9208      	str	r2, [sp, #32]
 8018bf6:	4a10      	ldr	r2, [pc, #64]	@ (8018c38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x179c>)
 8018bf8:	9209      	str	r2, [sp, #36]	@ 0x24
 8018bfa:	4a10      	ldr	r2, [pc, #64]	@ (8018c3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x17a0>)
 8018bfc:	920a      	str	r2, [sp, #40]	@ 0x28
 8018bfe:	2201      	movs	r2, #1
 8018c00:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018c04:	2200      	movs	r2, #0
 8018c06:	f88d 201c 	strb.w	r2, [sp, #28]
 8018c0a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018c0e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018c12:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018c16:	ab0c      	add	r3, sp, #48	@ 0x30
 8018c18:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018c1c:	f7fa fc56 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018c20:	f004 bf7d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018c24:	200019cc 	.word	0x200019cc
 8018c28:	0801285d 	.word	0x0801285d
 8018c2c:	08012861 	.word	0x08012861
 8018c30:	0801283d 	.word	0x0801283d
 8018c34:	08012845 	.word	0x08012845
 8018c38:	08012869 	.word	0x08012869
 8018c3c:	0801286d 	.word	0x0801286d
 8018c40:	4ab7      	ldr	r2, [pc, #732]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018c42:	6812      	ldr	r2, [r2, #0]
 8018c44:	69d2      	ldr	r2, [r2, #28]
 8018c46:	3220      	adds	r2, #32
 8018c48:	9208      	str	r2, [sp, #32]
 8018c4a:	4ab6      	ldr	r2, [pc, #728]	@ (8018f24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a88>)
 8018c4c:	9209      	str	r2, [sp, #36]	@ 0x24
 8018c4e:	4ab6      	ldr	r2, [pc, #728]	@ (8018f28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a8c>)
 8018c50:	920a      	str	r2, [sp, #40]	@ 0x28
 8018c52:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018c56:	2201      	movs	r2, #1
 8018c58:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018c5c:	2200      	movs	r2, #0
 8018c5e:	f8ad 2000 	strh.w	r2, [sp]
 8018c62:	ab0c      	add	r3, sp, #48	@ 0x30
 8018c64:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018c68:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018c6c:	f7fa ffe4 	bl	8013c38 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018c70:	f004 bf55 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018c74:	4aaa      	ldr	r2, [pc, #680]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018c76:	6812      	ldr	r2, [r2, #0]
 8018c78:	f002 bd50 	b.w	801b71c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4280>
 8018c7c:	4aa8      	ldr	r2, [pc, #672]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018c7e:	6812      	ldr	r2, [r2, #0]
 8018c80:	69d2      	ldr	r2, [r2, #28]
 8018c82:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018c84:	9208      	str	r2, [sp, #32]
 8018c86:	4aa9      	ldr	r2, [pc, #676]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018c88:	9209      	str	r2, [sp, #36]	@ 0x24
 8018c8a:	4aa9      	ldr	r2, [pc, #676]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018c8c:	920a      	str	r2, [sp, #40]	@ 0x28
 8018c8e:	2201      	movs	r2, #1
 8018c90:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018c94:	2200      	movs	r2, #0
 8018c96:	f88d 201c 	strb.w	r2, [sp, #28]
 8018c9a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018c9e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018ca2:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018ca6:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ca8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018cac:	f7fa fc56 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018cb0:	f004 bf35 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018cb4:	4a9a      	ldr	r2, [pc, #616]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018cb6:	6812      	ldr	r2, [r2, #0]
 8018cb8:	69d2      	ldr	r2, [r2, #28]
 8018cba:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018cbc:	3204      	adds	r2, #4
 8018cbe:	9208      	str	r2, [sp, #32]
 8018cc0:	4a9a      	ldr	r2, [pc, #616]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018cc2:	9209      	str	r2, [sp, #36]	@ 0x24
 8018cc4:	4a9a      	ldr	r2, [pc, #616]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018cc6:	920a      	str	r2, [sp, #40]	@ 0x28
 8018cc8:	2201      	movs	r2, #1
 8018cca:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018cce:	2200      	movs	r2, #0
 8018cd0:	f88d 201c 	strb.w	r2, [sp, #28]
 8018cd4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018cd8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018cdc:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018ce0:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ce2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018ce6:	f7fa fc39 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018cea:	f004 bf18 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018cee:	4a8c      	ldr	r2, [pc, #560]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018cf0:	6812      	ldr	r2, [r2, #0]
 8018cf2:	69d2      	ldr	r2, [r2, #28]
 8018cf4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018cf6:	3208      	adds	r2, #8
 8018cf8:	9208      	str	r2, [sp, #32]
 8018cfa:	4a8e      	ldr	r2, [pc, #568]	@ (8018f34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a98>)
 8018cfc:	9209      	str	r2, [sp, #36]	@ 0x24
 8018cfe:	4a8e      	ldr	r2, [pc, #568]	@ (8018f38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a9c>)
 8018d00:	920a      	str	r2, [sp, #40]	@ 0x28
 8018d02:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018d06:	2201      	movs	r2, #1
 8018d08:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018d0c:	2200      	movs	r2, #0
 8018d0e:	f8ad 2000 	strh.w	r2, [sp]
 8018d12:	ab0c      	add	r3, sp, #48	@ 0x30
 8018d14:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018d18:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018d1c:	f7fa fac8 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018d20:	f004 befd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018d24:	4a7e      	ldr	r2, [pc, #504]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018d26:	6812      	ldr	r2, [r2, #0]
 8018d28:	6a12      	ldr	r2, [r2, #32]
 8018d2a:	3220      	adds	r2, #32
 8018d2c:	9208      	str	r2, [sp, #32]
 8018d2e:	4a7d      	ldr	r2, [pc, #500]	@ (8018f24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a88>)
 8018d30:	9209      	str	r2, [sp, #36]	@ 0x24
 8018d32:	4a7d      	ldr	r2, [pc, #500]	@ (8018f28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a8c>)
 8018d34:	920a      	str	r2, [sp, #40]	@ 0x28
 8018d36:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018d3a:	2201      	movs	r2, #1
 8018d3c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018d40:	2200      	movs	r2, #0
 8018d42:	f8ad 2000 	strh.w	r2, [sp]
 8018d46:	ab0c      	add	r3, sp, #48	@ 0x30
 8018d48:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018d4c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018d50:	f7fa ff72 	bl	8013c38 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018d54:	f004 bee3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018d58:	4a71      	ldr	r2, [pc, #452]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018d5a:	6812      	ldr	r2, [r2, #0]
 8018d5c:	f002 bd50 	b.w	801b800 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4364>
 8018d60:	4a6f      	ldr	r2, [pc, #444]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018d62:	6812      	ldr	r2, [r2, #0]
 8018d64:	6a12      	ldr	r2, [r2, #32]
 8018d66:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018d68:	9208      	str	r2, [sp, #32]
 8018d6a:	4a74      	ldr	r2, [pc, #464]	@ (8018f3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1aa0>)
 8018d6c:	9209      	str	r2, [sp, #36]	@ 0x24
 8018d6e:	4a74      	ldr	r2, [pc, #464]	@ (8018f40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1aa4>)
 8018d70:	920a      	str	r2, [sp, #40]	@ 0x28
 8018d72:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018d76:	2201      	movs	r2, #1
 8018d78:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018d7c:	2200      	movs	r2, #0
 8018d7e:	9200      	str	r2, [sp, #0]
 8018d80:	ab0c      	add	r3, sp, #48	@ 0x30
 8018d82:	9206      	str	r2, [sp, #24]
 8018d84:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018d88:	f7fa fb46 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018d8c:	f004 bec7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018d90:	4a63      	ldr	r2, [pc, #396]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018d92:	6812      	ldr	r2, [r2, #0]
 8018d94:	6a12      	ldr	r2, [r2, #32]
 8018d96:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018d98:	9208      	str	r2, [sp, #32]
 8018d9a:	4a64      	ldr	r2, [pc, #400]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018d9c:	9209      	str	r2, [sp, #36]	@ 0x24
 8018d9e:	4a64      	ldr	r2, [pc, #400]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018da0:	920a      	str	r2, [sp, #40]	@ 0x28
 8018da2:	2201      	movs	r2, #1
 8018da4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018da8:	2200      	movs	r2, #0
 8018daa:	f88d 201c 	strb.w	r2, [sp, #28]
 8018dae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018db2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018db6:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018dba:	ab0c      	add	r3, sp, #48	@ 0x30
 8018dbc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018dc0:	f7fa fbcc 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018dc4:	f004 beab 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018dc8:	4a55      	ldr	r2, [pc, #340]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018dca:	6812      	ldr	r2, [r2, #0]
 8018dcc:	6a12      	ldr	r2, [r2, #32]
 8018dce:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018dd0:	3204      	adds	r2, #4
 8018dd2:	9208      	str	r2, [sp, #32]
 8018dd4:	4a55      	ldr	r2, [pc, #340]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018dd6:	9209      	str	r2, [sp, #36]	@ 0x24
 8018dd8:	4a55      	ldr	r2, [pc, #340]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018dda:	920a      	str	r2, [sp, #40]	@ 0x28
 8018ddc:	2201      	movs	r2, #1
 8018dde:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018de2:	2200      	movs	r2, #0
 8018de4:	f88d 201c 	strb.w	r2, [sp, #28]
 8018de8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018dec:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018df0:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018df4:	ab0c      	add	r3, sp, #48	@ 0x30
 8018df6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018dfa:	f7fa fbaf 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018dfe:	f004 be8e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018e02:	4a47      	ldr	r2, [pc, #284]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018e04:	6812      	ldr	r2, [r2, #0]
 8018e06:	6a12      	ldr	r2, [r2, #32]
 8018e08:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018e0a:	3208      	adds	r2, #8
 8018e0c:	9208      	str	r2, [sp, #32]
 8018e0e:	4a47      	ldr	r2, [pc, #284]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018e10:	9209      	str	r2, [sp, #36]	@ 0x24
 8018e12:	4a47      	ldr	r2, [pc, #284]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018e14:	920a      	str	r2, [sp, #40]	@ 0x28
 8018e16:	2201      	movs	r2, #1
 8018e18:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018e1c:	2200      	movs	r2, #0
 8018e1e:	f88d 201c 	strb.w	r2, [sp, #28]
 8018e22:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018e26:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018e2a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018e2e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018e30:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018e34:	f7fa fb92 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018e38:	f004 be71 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018e3c:	4a38      	ldr	r2, [pc, #224]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018e3e:	6812      	ldr	r2, [r2, #0]
 8018e40:	6a12      	ldr	r2, [r2, #32]
 8018e42:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018e44:	320c      	adds	r2, #12
 8018e46:	9208      	str	r2, [sp, #32]
 8018e48:	4a38      	ldr	r2, [pc, #224]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018e4a:	9209      	str	r2, [sp, #36]	@ 0x24
 8018e4c:	4a38      	ldr	r2, [pc, #224]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018e4e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018e50:	2201      	movs	r2, #1
 8018e52:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018e56:	2200      	movs	r2, #0
 8018e58:	f88d 201c 	strb.w	r2, [sp, #28]
 8018e5c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018e60:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018e64:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018e68:	ab0c      	add	r3, sp, #48	@ 0x30
 8018e6a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018e6e:	f7fa fb75 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018e72:	f004 be54 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018e76:	4a2a      	ldr	r2, [pc, #168]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018e78:	6812      	ldr	r2, [r2, #0]
 8018e7a:	6a12      	ldr	r2, [r2, #32]
 8018e7c:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018e7e:	3214      	adds	r2, #20
 8018e80:	9208      	str	r2, [sp, #32]
 8018e82:	4a2a      	ldr	r2, [pc, #168]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018e84:	9209      	str	r2, [sp, #36]	@ 0x24
 8018e86:	4a2a      	ldr	r2, [pc, #168]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018e88:	920a      	str	r2, [sp, #40]	@ 0x28
 8018e8a:	2201      	movs	r2, #1
 8018e8c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018e90:	2200      	movs	r2, #0
 8018e92:	f88d 201c 	strb.w	r2, [sp, #28]
 8018e96:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018e9a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018e9e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018ea2:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ea4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018ea8:	f7fa fb58 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018eac:	f004 be37 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018eb0:	4a1b      	ldr	r2, [pc, #108]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018eb2:	6812      	ldr	r2, [r2, #0]
 8018eb4:	6a12      	ldr	r2, [r2, #32]
 8018eb6:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018eb8:	3218      	adds	r2, #24
 8018eba:	9208      	str	r2, [sp, #32]
 8018ebc:	4a1b      	ldr	r2, [pc, #108]	@ (8018f2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a90>)
 8018ebe:	9209      	str	r2, [sp, #36]	@ 0x24
 8018ec0:	4a1b      	ldr	r2, [pc, #108]	@ (8018f30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a94>)
 8018ec2:	920a      	str	r2, [sp, #40]	@ 0x28
 8018ec4:	2201      	movs	r2, #1
 8018ec6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018eca:	2200      	movs	r2, #0
 8018ecc:	f88d 201c 	strb.w	r2, [sp, #28]
 8018ed0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018ed4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018ed8:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018edc:	ab0c      	add	r3, sp, #48	@ 0x30
 8018ede:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018ee2:	f7fa fb3b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018ee6:	f004 be1a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018eea:	4a0d      	ldr	r2, [pc, #52]	@ (8018f20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a84>)
 8018eec:	6812      	ldr	r2, [r2, #0]
 8018eee:	6a12      	ldr	r2, [r2, #32]
 8018ef0:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8018ef2:	321c      	adds	r2, #28
 8018ef4:	9208      	str	r2, [sp, #32]
 8018ef6:	4a0f      	ldr	r2, [pc, #60]	@ (8018f34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a98>)
 8018ef8:	9209      	str	r2, [sp, #36]	@ 0x24
 8018efa:	4a0f      	ldr	r2, [pc, #60]	@ (8018f38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1a9c>)
 8018efc:	920a      	str	r2, [sp, #40]	@ 0x28
 8018efe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018f02:	2201      	movs	r2, #1
 8018f04:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018f08:	2200      	movs	r2, #0
 8018f0a:	f8ad 2000 	strh.w	r2, [sp]
 8018f0e:	ab0c      	add	r3, sp, #48	@ 0x30
 8018f10:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018f14:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018f18:	f7fa f9ca 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018f1c:	f004 bdff 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018f20:	200019cc 	.word	0x200019cc
 8018f24:	08012899 	.word	0x08012899
 8018f28:	0801289d 	.word	0x0801289d
 8018f2c:	0801283d 	.word	0x0801283d
 8018f30:	08012845 	.word	0x08012845
 8018f34:	0801285d 	.word	0x0801285d
 8018f38:	08012861 	.word	0x08012861
 8018f3c:	08013215 	.word	0x08013215
 8018f40:	080140dd 	.word	0x080140dd
 8018f44:	4aba      	ldr	r2, [pc, #744]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018f46:	6812      	ldr	r2, [r2, #0]
 8018f48:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8018f4a:	3264      	adds	r2, #100	@ 0x64
 8018f4c:	9208      	str	r2, [sp, #32]
 8018f4e:	4ab9      	ldr	r2, [pc, #740]	@ (8019234 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d98>)
 8018f50:	9209      	str	r2, [sp, #36]	@ 0x24
 8018f52:	4ab9      	ldr	r2, [pc, #740]	@ (8019238 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d9c>)
 8018f54:	920a      	str	r2, [sp, #40]	@ 0x28
 8018f56:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8018f5a:	2201      	movs	r2, #1
 8018f5c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018f60:	2200      	movs	r2, #0
 8018f62:	9200      	str	r2, [sp, #0]
 8018f64:	ab0c      	add	r3, sp, #48	@ 0x30
 8018f66:	9206      	str	r2, [sp, #24]
 8018f68:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018f6c:	f7fa fe18 	bl	8013ba0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018f70:	f004 bdd5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018f74:	4aae      	ldr	r2, [pc, #696]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018f76:	9305      	str	r3, [sp, #20]
 8018f78:	6812      	ldr	r2, [r2, #0]
 8018f7a:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8018f7c:	3066      	adds	r0, #102	@ 0x66
 8018f7e:	f7f9 fc93 	bl	80128a8 <Property<ODriveIntf::MotorIntf::ArmedState const>::Property(ODriveIntf::MotorIntf::ArmedState const*)::{lambda(void*)#1}::_FUN(void*)>
 8018f82:	9b05      	ldr	r3, [sp, #20]
 8018f84:	685a      	ldr	r2, [r3, #4]
 8018f86:	4619      	mov	r1, r3
 8018f88:	f7fe fa6e 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 8018f8c:	f004 bdc7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018f90:	4aa7      	ldr	r2, [pc, #668]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018f92:	49aa      	ldr	r1, [pc, #680]	@ (801923c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da0>)
 8018f94:	6812      	ldr	r2, [r2, #0]
 8018f96:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8018f98:	2201      	movs	r2, #1
 8018f9a:	3067      	adds	r0, #103	@ 0x67
 8018f9c:	b00d      	add	sp, #52	@ 0x34
 8018f9e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8018fa2:	f7fa b955 	b.w	8013250 <fibre_property_bool_readonly_read(std::optional<Property<bool const> >, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 8018fa6:	4aa2      	ldr	r2, [pc, #648]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018fa8:	6812      	ldr	r2, [r2, #0]
 8018faa:	f002 bd56 	b.w	801ba5a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x45be>
 8018fae:	4aa0      	ldr	r2, [pc, #640]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018fb0:	6812      	ldr	r2, [r2, #0]
 8018fb2:	f002 bd5a 	b.w	801ba6a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x45ce>
 8018fb6:	4a9e      	ldr	r2, [pc, #632]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018fb8:	6812      	ldr	r2, [r2, #0]
 8018fba:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8018fbc:	3270      	adds	r2, #112	@ 0x70
 8018fbe:	9208      	str	r2, [sp, #32]
 8018fc0:	4a9f      	ldr	r2, [pc, #636]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 8018fc2:	9209      	str	r2, [sp, #36]	@ 0x24
 8018fc4:	4a9f      	ldr	r2, [pc, #636]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 8018fc6:	920a      	str	r2, [sp, #40]	@ 0x28
 8018fc8:	2201      	movs	r2, #1
 8018fca:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8018fce:	2200      	movs	r2, #0
 8018fd0:	f88d 201c 	strb.w	r2, [sp, #28]
 8018fd4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8018fd8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8018fdc:	e88d 0003 	stmia.w	sp, {r0, r1}
 8018fe0:	ab0c      	add	r3, sp, #48	@ 0x30
 8018fe2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8018fe6:	f7fa fab9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8018fea:	f004 bd98 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8018fee:	4a90      	ldr	r2, [pc, #576]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8018ff0:	6812      	ldr	r2, [r2, #0]
 8018ff2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8018ff4:	3274      	adds	r2, #116	@ 0x74
 8018ff6:	9208      	str	r2, [sp, #32]
 8018ff8:	4a91      	ldr	r2, [pc, #580]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 8018ffa:	9209      	str	r2, [sp, #36]	@ 0x24
 8018ffc:	4a91      	ldr	r2, [pc, #580]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 8018ffe:	920a      	str	r2, [sp, #40]	@ 0x28
 8019000:	2201      	movs	r2, #1
 8019002:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019006:	2200      	movs	r2, #0
 8019008:	f88d 201c 	strb.w	r2, [sp, #28]
 801900c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019010:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019014:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019018:	ab0c      	add	r3, sp, #48	@ 0x30
 801901a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801901e:	f7fa fa9d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019022:	f004 bd7c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019026:	4a82      	ldr	r2, [pc, #520]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019028:	6812      	ldr	r2, [r2, #0]
 801902a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801902c:	3278      	adds	r2, #120	@ 0x78
 801902e:	9208      	str	r2, [sp, #32]
 8019030:	4a83      	ldr	r2, [pc, #524]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 8019032:	9209      	str	r2, [sp, #36]	@ 0x24
 8019034:	4a83      	ldr	r2, [pc, #524]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 8019036:	920a      	str	r2, [sp, #40]	@ 0x28
 8019038:	2201      	movs	r2, #1
 801903a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801903e:	2200      	movs	r2, #0
 8019040:	f88d 201c 	strb.w	r2, [sp, #28]
 8019044:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019048:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801904c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019050:	ab0c      	add	r3, sp, #48	@ 0x30
 8019052:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019056:	f7fa fa81 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801905a:	f004 bd60 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801905e:	4a74      	ldr	r2, [pc, #464]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019060:	6812      	ldr	r2, [r2, #0]
 8019062:	f002 bd5e 	b.w	801bb22 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4686>
 8019066:	4a72      	ldr	r2, [pc, #456]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019068:	6812      	ldr	r2, [r2, #0]
 801906a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801906c:	327c      	adds	r2, #124	@ 0x7c
 801906e:	9208      	str	r2, [sp, #32]
 8019070:	4a73      	ldr	r2, [pc, #460]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 8019072:	9209      	str	r2, [sp, #36]	@ 0x24
 8019074:	4a73      	ldr	r2, [pc, #460]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 8019076:	920a      	str	r2, [sp, #40]	@ 0x28
 8019078:	2201      	movs	r2, #1
 801907a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801907e:	2200      	movs	r2, #0
 8019080:	f88d 201c 	strb.w	r2, [sp, #28]
 8019084:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019088:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801908c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019090:	ab0c      	add	r3, sp, #48	@ 0x30
 8019092:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019096:	f7fa fa61 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801909a:	f004 bd40 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801909e:	4a64      	ldr	r2, [pc, #400]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 80190a0:	6812      	ldr	r2, [r2, #0]
 80190a2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80190a4:	3280      	adds	r2, #128	@ 0x80
 80190a6:	9208      	str	r2, [sp, #32]
 80190a8:	4a65      	ldr	r2, [pc, #404]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 80190aa:	9209      	str	r2, [sp, #36]	@ 0x24
 80190ac:	4a65      	ldr	r2, [pc, #404]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 80190ae:	920a      	str	r2, [sp, #40]	@ 0x28
 80190b0:	2201      	movs	r2, #1
 80190b2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80190b6:	2200      	movs	r2, #0
 80190b8:	f88d 201c 	strb.w	r2, [sp, #28]
 80190bc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80190c0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80190c4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80190c8:	ab0c      	add	r3, sp, #48	@ 0x30
 80190ca:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80190ce:	f7fa fa45 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80190d2:	f004 bd24 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80190d6:	4a56      	ldr	r2, [pc, #344]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 80190d8:	6812      	ldr	r2, [r2, #0]
 80190da:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80190dc:	3284      	adds	r2, #132	@ 0x84
 80190de:	9208      	str	r2, [sp, #32]
 80190e0:	4a57      	ldr	r2, [pc, #348]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 80190e2:	9209      	str	r2, [sp, #36]	@ 0x24
 80190e4:	4a57      	ldr	r2, [pc, #348]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 80190e6:	920a      	str	r2, [sp, #40]	@ 0x28
 80190e8:	2201      	movs	r2, #1
 80190ea:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80190ee:	2200      	movs	r2, #0
 80190f0:	f88d 201c 	strb.w	r2, [sp, #28]
 80190f4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80190f8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80190fc:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019100:	ab0c      	add	r3, sp, #48	@ 0x30
 8019102:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019106:	f7fa fa29 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801910a:	f004 bd08 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801910e:	4a48      	ldr	r2, [pc, #288]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019110:	6812      	ldr	r2, [r2, #0]
 8019112:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019114:	3288      	adds	r2, #136	@ 0x88
 8019116:	9208      	str	r2, [sp, #32]
 8019118:	4a49      	ldr	r2, [pc, #292]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 801911a:	9209      	str	r2, [sp, #36]	@ 0x24
 801911c:	4a49      	ldr	r2, [pc, #292]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 801911e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019120:	2201      	movs	r2, #1
 8019122:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019126:	2200      	movs	r2, #0
 8019128:	f88d 201c 	strb.w	r2, [sp, #28]
 801912c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019130:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019134:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019138:	ab0c      	add	r3, sp, #48	@ 0x30
 801913a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801913e:	f7fa fa0d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019142:	f004 bcec 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019146:	4a3a      	ldr	r2, [pc, #232]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019148:	6812      	ldr	r2, [r2, #0]
 801914a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801914c:	328c      	adds	r2, #140	@ 0x8c
 801914e:	9208      	str	r2, [sp, #32]
 8019150:	4a3b      	ldr	r2, [pc, #236]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 8019152:	9209      	str	r2, [sp, #36]	@ 0x24
 8019154:	4a3b      	ldr	r2, [pc, #236]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 8019156:	920a      	str	r2, [sp, #40]	@ 0x28
 8019158:	2201      	movs	r2, #1
 801915a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801915e:	2200      	movs	r2, #0
 8019160:	f88d 201c 	strb.w	r2, [sp, #28]
 8019164:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019168:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801916c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019170:	ab0c      	add	r3, sp, #48	@ 0x30
 8019172:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019176:	f7fa f9f1 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801917a:	f004 bcd0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801917e:	4a2c      	ldr	r2, [pc, #176]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019180:	6812      	ldr	r2, [r2, #0]
 8019182:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019184:	3290      	adds	r2, #144	@ 0x90
 8019186:	9208      	str	r2, [sp, #32]
 8019188:	4a2d      	ldr	r2, [pc, #180]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 801918a:	9209      	str	r2, [sp, #36]	@ 0x24
 801918c:	4a2d      	ldr	r2, [pc, #180]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 801918e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019190:	2201      	movs	r2, #1
 8019192:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019196:	2200      	movs	r2, #0
 8019198:	f88d 201c 	strb.w	r2, [sp, #28]
 801919c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80191a0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80191a4:	e88d 0003 	stmia.w	sp, {r0, r1}
 80191a8:	ab0c      	add	r3, sp, #48	@ 0x30
 80191aa:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80191ae:	f7fa f9d5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80191b2:	f004 bcb4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80191b6:	4a1e      	ldr	r2, [pc, #120]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 80191b8:	6812      	ldr	r2, [r2, #0]
 80191ba:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80191bc:	3294      	adds	r2, #148	@ 0x94
 80191be:	9208      	str	r2, [sp, #32]
 80191c0:	4a1f      	ldr	r2, [pc, #124]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 80191c2:	9209      	str	r2, [sp, #36]	@ 0x24
 80191c4:	4a1f      	ldr	r2, [pc, #124]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 80191c6:	920a      	str	r2, [sp, #40]	@ 0x28
 80191c8:	2201      	movs	r2, #1
 80191ca:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80191ce:	2200      	movs	r2, #0
 80191d0:	f88d 201c 	strb.w	r2, [sp, #28]
 80191d4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80191d8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80191dc:	e88d 0003 	stmia.w	sp, {r0, r1}
 80191e0:	ab0c      	add	r3, sp, #48	@ 0x30
 80191e2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80191e6:	f7fa f9b9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80191ea:	f004 bc98 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80191ee:	4a10      	ldr	r2, [pc, #64]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 80191f0:	6812      	ldr	r2, [r2, #0]
 80191f2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80191f4:	3298      	adds	r2, #152	@ 0x98
 80191f6:	9208      	str	r2, [sp, #32]
 80191f8:	4a11      	ldr	r2, [pc, #68]	@ (8019240 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da4>)
 80191fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80191fc:	4a11      	ldr	r2, [pc, #68]	@ (8019244 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1da8>)
 80191fe:	920a      	str	r2, [sp, #40]	@ 0x28
 8019200:	2201      	movs	r2, #1
 8019202:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019206:	2200      	movs	r2, #0
 8019208:	f88d 201c 	strb.w	r2, [sp, #28]
 801920c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019210:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019214:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019218:	ab0c      	add	r3, sp, #48	@ 0x30
 801921a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801921e:	f7fa f99d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019222:	f004 bc7c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019226:	4a02      	ldr	r2, [pc, #8]	@ (8019230 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x1d94>)
 8019228:	6812      	ldr	r2, [r2, #0]
 801922a:	f002 bd73 	b.w	801bd14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4878>
 801922e:	bf00      	nop
 8019230:	200019cc 	.word	0x200019cc
 8019234:	080128a1 	.word	0x080128a1
 8019238:	080128a5 	.word	0x080128a5
 801923c:	08012859 	.word	0x08012859
 8019240:	0801283d 	.word	0x0801283d
 8019244:	08012845 	.word	0x08012845
 8019248:	4aae      	ldr	r2, [pc, #696]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 801924a:	6812      	ldr	r2, [r2, #0]
 801924c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801924e:	32a0      	adds	r2, #160	@ 0xa0
 8019250:	9208      	str	r2, [sp, #32]
 8019252:	4aad      	ldr	r2, [pc, #692]	@ (8019508 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x206c>)
 8019254:	9209      	str	r2, [sp, #36]	@ 0x24
 8019256:	4aad      	ldr	r2, [pc, #692]	@ (801950c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2070>)
 8019258:	920a      	str	r2, [sp, #40]	@ 0x28
 801925a:	2201      	movs	r2, #1
 801925c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019260:	2200      	movs	r2, #0
 8019262:	f88d 201c 	strb.w	r2, [sp, #28]
 8019266:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801926a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801926e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019272:	ab0c      	add	r3, sp, #48	@ 0x30
 8019274:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019278:	f7fa f970 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801927c:	f004 bc4f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019280:	4aa0      	ldr	r2, [pc, #640]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019282:	6812      	ldr	r2, [r2, #0]
 8019284:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019286:	32a4      	adds	r2, #164	@ 0xa4
 8019288:	9208      	str	r2, [sp, #32]
 801928a:	4a9f      	ldr	r2, [pc, #636]	@ (8019508 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x206c>)
 801928c:	9209      	str	r2, [sp, #36]	@ 0x24
 801928e:	4a9f      	ldr	r2, [pc, #636]	@ (801950c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2070>)
 8019290:	920a      	str	r2, [sp, #40]	@ 0x28
 8019292:	2201      	movs	r2, #1
 8019294:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019298:	2200      	movs	r2, #0
 801929a:	f88d 201c 	strb.w	r2, [sp, #28]
 801929e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80192a2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80192a6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80192aa:	ab0c      	add	r3, sp, #48	@ 0x30
 80192ac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80192b0:	f7fa f954 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80192b4:	f004 bc33 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80192b8:	4a92      	ldr	r2, [pc, #584]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80192ba:	6812      	ldr	r2, [r2, #0]
 80192bc:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80192be:	32a8      	adds	r2, #168	@ 0xa8
 80192c0:	9208      	str	r2, [sp, #32]
 80192c2:	4a91      	ldr	r2, [pc, #580]	@ (8019508 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x206c>)
 80192c4:	9209      	str	r2, [sp, #36]	@ 0x24
 80192c6:	4a91      	ldr	r2, [pc, #580]	@ (801950c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2070>)
 80192c8:	920a      	str	r2, [sp, #40]	@ 0x28
 80192ca:	2201      	movs	r2, #1
 80192cc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80192d0:	2200      	movs	r2, #0
 80192d2:	f88d 201c 	strb.w	r2, [sp, #28]
 80192d6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80192da:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80192de:	e88d 0003 	stmia.w	sp, {r0, r1}
 80192e2:	ab0c      	add	r3, sp, #48	@ 0x30
 80192e4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80192e8:	f7fa f938 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80192ec:	f004 bc17 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80192f0:	4a84      	ldr	r2, [pc, #528]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80192f2:	6812      	ldr	r2, [r2, #0]
 80192f4:	f002 bd6a 	b.w	801bdcc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4930>
 80192f8:	4a82      	ldr	r2, [pc, #520]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80192fa:	6812      	ldr	r2, [r2, #0]
 80192fc:	f002 bd6e 	b.w	801bddc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4940>
 8019300:	4a80      	ldr	r2, [pc, #512]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019302:	6812      	ldr	r2, [r2, #0]
 8019304:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019306:	32b4      	adds	r2, #180	@ 0xb4
 8019308:	9208      	str	r2, [sp, #32]
 801930a:	4a7f      	ldr	r2, [pc, #508]	@ (8019508 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x206c>)
 801930c:	9209      	str	r2, [sp, #36]	@ 0x24
 801930e:	4a7f      	ldr	r2, [pc, #508]	@ (801950c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2070>)
 8019310:	920a      	str	r2, [sp, #40]	@ 0x28
 8019312:	2201      	movs	r2, #1
 8019314:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019318:	2200      	movs	r2, #0
 801931a:	f88d 201c 	strb.w	r2, [sp, #28]
 801931e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019322:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019326:	e88d 0003 	stmia.w	sp, {r0, r1}
 801932a:	ab0c      	add	r3, sp, #48	@ 0x30
 801932c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019330:	f7fa f914 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019334:	f004 bbf3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019338:	4a72      	ldr	r2, [pc, #456]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 801933a:	6812      	ldr	r2, [r2, #0]
 801933c:	f002 bd72 	b.w	801be24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4988>
 8019340:	4a70      	ldr	r2, [pc, #448]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019342:	6812      	ldr	r2, [r2, #0]
 8019344:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019346:	32bc      	adds	r2, #188	@ 0xbc
 8019348:	9208      	str	r2, [sp, #32]
 801934a:	4a6f      	ldr	r2, [pc, #444]	@ (8019508 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x206c>)
 801934c:	9209      	str	r2, [sp, #36]	@ 0x24
 801934e:	4a6f      	ldr	r2, [pc, #444]	@ (801950c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2070>)
 8019350:	920a      	str	r2, [sp, #40]	@ 0x28
 8019352:	2201      	movs	r2, #1
 8019354:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019358:	2200      	movs	r2, #0
 801935a:	f88d 201c 	strb.w	r2, [sp, #28]
 801935e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019362:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019366:	e88d 0003 	stmia.w	sp, {r0, r1}
 801936a:	ab0c      	add	r3, sp, #48	@ 0x30
 801936c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019370:	f7fa f8f4 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019374:	f004 bbd3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019378:	4a62      	ldr	r2, [pc, #392]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 801937a:	6812      	ldr	r2, [r2, #0]
 801937c:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801937e:	685a      	ldr	r2, [r3, #4]
 8019380:	f8b0 00c0 	ldrh.w	r0, [r0, #192]	@ 0xc0
 8019384:	4619      	mov	r1, r3
 8019386:	f7fe f86f 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801938a:	f004 bbc8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801938e:	4a5d      	ldr	r2, [pc, #372]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019390:	6812      	ldr	r2, [r2, #0]
 8019392:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019394:	685a      	ldr	r2, [r3, #4]
 8019396:	f8b0 004c 	ldrh.w	r0, [r0, #76]	@ 0x4c
 801939a:	4619      	mov	r1, r3
 801939c:	f7fe f832 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 80193a0:	f004 bbbd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80193a4:	4a57      	ldr	r2, [pc, #348]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80193a6:	6812      	ldr	r2, [r2, #0]
 80193a8:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 80193aa:	685a      	ldr	r2, [r3, #4]
 80193ac:	f8b0 004e 	ldrh.w	r0, [r0, #78]	@ 0x4e
 80193b0:	4619      	mov	r1, r3
 80193b2:	f7fe f827 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 80193b6:	f004 bbb2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80193ba:	4a52      	ldr	r2, [pc, #328]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80193bc:	6812      	ldr	r2, [r2, #0]
 80193be:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 80193c0:	685a      	ldr	r2, [r3, #4]
 80193c2:	f8b0 0050 	ldrh.w	r0, [r0, #80]	@ 0x50
 80193c6:	4619      	mov	r1, r3
 80193c8:	f7fe f81c 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 80193cc:	f004 bba7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80193d0:	4a4c      	ldr	r2, [pc, #304]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80193d2:	6812      	ldr	r2, [r2, #0]
 80193d4:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 80193d6:	685a      	ldr	r2, [r3, #4]
 80193d8:	f8b0 0052 	ldrh.w	r0, [r0, #82]	@ 0x52
 80193dc:	4619      	mov	r1, r3
 80193de:	f7fe f811 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 80193e2:	f004 bb9c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80193e6:	4a47      	ldr	r2, [pc, #284]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80193e8:	6812      	ldr	r2, [r2, #0]
 80193ea:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 80193ec:	685a      	ldr	r2, [r3, #4]
 80193ee:	f8b0 0054 	ldrh.w	r0, [r0, #84]	@ 0x54
 80193f2:	4619      	mov	r1, r3
 80193f4:	f7fe f806 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 80193f8:	f004 bb91 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80193fc:	4a41      	ldr	r2, [pc, #260]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80193fe:	6812      	ldr	r2, [r2, #0]
 8019400:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019402:	685a      	ldr	r2, [r3, #4]
 8019404:	f8b0 0056 	ldrh.w	r0, [r0, #86]	@ 0x56
 8019408:	4619      	mov	r1, r3
 801940a:	f7fd fffb 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801940e:	f004 bb86 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019412:	4a3c      	ldr	r2, [pc, #240]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019414:	6812      	ldr	r2, [r2, #0]
 8019416:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019418:	685a      	ldr	r2, [r3, #4]
 801941a:	f8b0 0058 	ldrh.w	r0, [r0, #88]	@ 0x58
 801941e:	4619      	mov	r1, r3
 8019420:	f7fd fff0 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 8019424:	f004 bb7b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019428:	4a36      	ldr	r2, [pc, #216]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 801942a:	6812      	ldr	r2, [r2, #0]
 801942c:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801942e:	685a      	ldr	r2, [r3, #4]
 8019430:	f8b0 005a 	ldrh.w	r0, [r0, #90]	@ 0x5a
 8019434:	4619      	mov	r1, r3
 8019436:	f7fd ffe5 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801943a:	f004 bb70 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801943e:	4a31      	ldr	r2, [pc, #196]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019440:	6812      	ldr	r2, [r2, #0]
 8019442:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019444:	685a      	ldr	r2, [r3, #4]
 8019446:	f8b0 005c 	ldrh.w	r0, [r0, #92]	@ 0x5c
 801944a:	4619      	mov	r1, r3
 801944c:	f7fd ffda 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 8019450:	f004 bb65 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019454:	4a2b      	ldr	r2, [pc, #172]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019456:	6812      	ldr	r2, [r2, #0]
 8019458:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801945a:	685a      	ldr	r2, [r3, #4]
 801945c:	f8b0 005e 	ldrh.w	r0, [r0, #94]	@ 0x5e
 8019460:	4619      	mov	r1, r3
 8019462:	f7fd ffcf 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 8019466:	f004 bb5a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801946a:	4a26      	ldr	r2, [pc, #152]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 801946c:	6812      	ldr	r2, [r2, #0]
 801946e:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019470:	685a      	ldr	r2, [r3, #4]
 8019472:	f8b0 0060 	ldrh.w	r0, [r0, #96]	@ 0x60
 8019476:	4619      	mov	r1, r3
 8019478:	f7fd ffc4 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801947c:	f004 bb4f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019480:	4a20      	ldr	r2, [pc, #128]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019482:	6812      	ldr	r2, [r2, #0]
 8019484:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 8019486:	685a      	ldr	r2, [r3, #4]
 8019488:	f8b0 0062 	ldrh.w	r0, [r0, #98]	@ 0x62
 801948c:	4619      	mov	r1, r3
 801948e:	f7fd ffb9 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 8019492:	f004 bb44 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019496:	4a1b      	ldr	r2, [pc, #108]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 8019498:	6812      	ldr	r2, [r2, #0]
 801949a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801949c:	6a12      	ldr	r2, [r2, #32]
 801949e:	9208      	str	r2, [sp, #32]
 80194a0:	4a1b      	ldr	r2, [pc, #108]	@ (8019510 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2074>)
 80194a2:	9209      	str	r2, [sp, #36]	@ 0x24
 80194a4:	4a1b      	ldr	r2, [pc, #108]	@ (8019514 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2078>)
 80194a6:	920a      	str	r2, [sp, #40]	@ 0x28
 80194a8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80194ac:	2201      	movs	r2, #1
 80194ae:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80194b2:	2200      	movs	r2, #0
 80194b4:	f8ad 2000 	strh.w	r2, [sp]
 80194b8:	ab0c      	add	r3, sp, #48	@ 0x30
 80194ba:	f8ad 2018 	strh.w	r2, [sp, #24]
 80194be:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80194c2:	f7f9 fef5 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80194c6:	f004 bb2a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80194ca:	4a0e      	ldr	r2, [pc, #56]	@ (8019504 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2068>)
 80194cc:	6812      	ldr	r2, [r2, #0]
 80194ce:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80194d0:	6a12      	ldr	r2, [r2, #32]
 80194d2:	3204      	adds	r2, #4
 80194d4:	9208      	str	r2, [sp, #32]
 80194d6:	4a10      	ldr	r2, [pc, #64]	@ (8019518 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x207c>)
 80194d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80194da:	4a10      	ldr	r2, [pc, #64]	@ (801951c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2080>)
 80194dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80194de:	2201      	movs	r2, #1
 80194e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80194e4:	2200      	movs	r2, #0
 80194e6:	f88d 201c 	strb.w	r2, [sp, #28]
 80194ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80194ee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80194f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80194f6:	ab0c      	add	r3, sp, #48	@ 0x30
 80194f8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80194fc:	f7fa f906 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019500:	f004 bb0d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019504:	200019cc 	.word	0x200019cc
 8019508:	0801283d 	.word	0x0801283d
 801950c:	08012845 	.word	0x08012845
 8019510:	0801320d 	.word	0x0801320d
 8019514:	08014101 	.word	0x08014101
 8019518:	080128b5 	.word	0x080128b5
 801951c:	080128b9 	.word	0x080128b9
 8019520:	4aba      	ldr	r2, [pc, #744]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019522:	6812      	ldr	r2, [r2, #0]
 8019524:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019526:	6a12      	ldr	r2, [r2, #32]
 8019528:	3208      	adds	r2, #8
 801952a:	9208      	str	r2, [sp, #32]
 801952c:	4ab8      	ldr	r2, [pc, #736]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 801952e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019530:	4ab8      	ldr	r2, [pc, #736]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 8019532:	920a      	str	r2, [sp, #40]	@ 0x28
 8019534:	2201      	movs	r2, #1
 8019536:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801953a:	2200      	movs	r2, #0
 801953c:	f88d 201c 	strb.w	r2, [sp, #28]
 8019540:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019544:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019548:	e88d 0003 	stmia.w	sp, {r0, r1}
 801954c:	ab0c      	add	r3, sp, #48	@ 0x30
 801954e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019552:	f7fa f803 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019556:	f004 bae2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801955a:	4aac      	ldr	r2, [pc, #688]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 801955c:	6812      	ldr	r2, [r2, #0]
 801955e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019560:	6a12      	ldr	r2, [r2, #32]
 8019562:	320c      	adds	r2, #12
 8019564:	9208      	str	r2, [sp, #32]
 8019566:	4aaa      	ldr	r2, [pc, #680]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 8019568:	9209      	str	r2, [sp, #36]	@ 0x24
 801956a:	4aaa      	ldr	r2, [pc, #680]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 801956c:	920a      	str	r2, [sp, #40]	@ 0x28
 801956e:	2201      	movs	r2, #1
 8019570:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019574:	2200      	movs	r2, #0
 8019576:	f88d 201c 	strb.w	r2, [sp, #28]
 801957a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801957e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019582:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019586:	ab0c      	add	r3, sp, #48	@ 0x30
 8019588:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801958c:	f7f9 ffe6 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019590:	f004 bac5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019594:	4a9d      	ldr	r2, [pc, #628]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019596:	6812      	ldr	r2, [r2, #0]
 8019598:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801959a:	6a12      	ldr	r2, [r2, #32]
 801959c:	9208      	str	r2, [sp, #32]
 801959e:	4a9e      	ldr	r2, [pc, #632]	@ (8019818 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x237c>)
 80195a0:	9209      	str	r2, [sp, #36]	@ 0x24
 80195a2:	4a9e      	ldr	r2, [pc, #632]	@ (801981c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2380>)
 80195a4:	920a      	str	r2, [sp, #40]	@ 0x28
 80195a6:	2201      	movs	r2, #1
 80195a8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80195ac:	2200      	movs	r2, #0
 80195ae:	f88d 201c 	strb.w	r2, [sp, #28]
 80195b2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80195b6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80195ba:	e88d 0003 	stmia.w	sp, {r0, r1}
 80195be:	ab0c      	add	r3, sp, #48	@ 0x30
 80195c0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80195c4:	f7f9 ffca 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80195c8:	f004 baa9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80195cc:	4a8f      	ldr	r2, [pc, #572]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 80195ce:	6812      	ldr	r2, [r2, #0]
 80195d0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80195d2:	6a12      	ldr	r2, [r2, #32]
 80195d4:	9208      	str	r2, [sp, #32]
 80195d6:	4a92      	ldr	r2, [pc, #584]	@ (8019820 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2384>)
 80195d8:	9209      	str	r2, [sp, #36]	@ 0x24
 80195da:	4a92      	ldr	r2, [pc, #584]	@ (8019824 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2388>)
 80195dc:	920a      	str	r2, [sp, #40]	@ 0x28
 80195de:	2201      	movs	r2, #1
 80195e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80195e4:	2200      	movs	r2, #0
 80195e6:	f88d 201c 	strb.w	r2, [sp, #28]
 80195ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80195ee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80195f2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80195f6:	ab0c      	add	r3, sp, #48	@ 0x30
 80195f8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80195fc:	f7f9 ffae 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019600:	f004 ba8d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019604:	4a81      	ldr	r2, [pc, #516]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019606:	6812      	ldr	r2, [r2, #0]
 8019608:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801960a:	6a12      	ldr	r2, [r2, #32]
 801960c:	3218      	adds	r2, #24
 801960e:	9208      	str	r2, [sp, #32]
 8019610:	4a7f      	ldr	r2, [pc, #508]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 8019612:	9209      	str	r2, [sp, #36]	@ 0x24
 8019614:	4a7f      	ldr	r2, [pc, #508]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 8019616:	920a      	str	r2, [sp, #40]	@ 0x28
 8019618:	2201      	movs	r2, #1
 801961a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801961e:	2200      	movs	r2, #0
 8019620:	f88d 201c 	strb.w	r2, [sp, #28]
 8019624:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019628:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801962c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019630:	ab0c      	add	r3, sp, #48	@ 0x30
 8019632:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019636:	f7f9 ff91 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801963a:	f004 ba70 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801963e:	4a73      	ldr	r2, [pc, #460]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019640:	6812      	ldr	r2, [r2, #0]
 8019642:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019644:	6a12      	ldr	r2, [r2, #32]
 8019646:	321c      	adds	r2, #28
 8019648:	9208      	str	r2, [sp, #32]
 801964a:	4a77      	ldr	r2, [pc, #476]	@ (8019828 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x238c>)
 801964c:	9209      	str	r2, [sp, #36]	@ 0x24
 801964e:	4a77      	ldr	r2, [pc, #476]	@ (801982c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2390>)
 8019650:	920a      	str	r2, [sp, #40]	@ 0x28
 8019652:	2201      	movs	r2, #1
 8019654:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019658:	2200      	movs	r2, #0
 801965a:	f88d 201c 	strb.w	r2, [sp, #28]
 801965e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019662:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019666:	e88d 0003 	stmia.w	sp, {r0, r1}
 801966a:	ab0c      	add	r3, sp, #48	@ 0x30
 801966c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019670:	f7fa f84c 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019674:	f004 ba53 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019678:	4a64      	ldr	r2, [pc, #400]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 801967a:	6812      	ldr	r2, [r2, #0]
 801967c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801967e:	6a12      	ldr	r2, [r2, #32]
 8019680:	3220      	adds	r2, #32
 8019682:	9208      	str	r2, [sp, #32]
 8019684:	4a6a      	ldr	r2, [pc, #424]	@ (8019830 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2394>)
 8019686:	9209      	str	r2, [sp, #36]	@ 0x24
 8019688:	4a6a      	ldr	r2, [pc, #424]	@ (8019834 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2398>)
 801968a:	920a      	str	r2, [sp, #40]	@ 0x28
 801968c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019690:	2201      	movs	r2, #1
 8019692:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019696:	2200      	movs	r2, #0
 8019698:	f8ad 2000 	strh.w	r2, [sp]
 801969c:	ab0c      	add	r3, sp, #48	@ 0x30
 801969e:	f8ad 2018 	strh.w	r2, [sp, #24]
 80196a2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80196a6:	f7fa f97b 	bl	80139a0 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80196aa:	f004 ba38 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80196ae:	4a57      	ldr	r2, [pc, #348]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 80196b0:	6812      	ldr	r2, [r2, #0]
 80196b2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80196b4:	6a12      	ldr	r2, [r2, #32]
 80196b6:	3224      	adds	r2, #36	@ 0x24
 80196b8:	9208      	str	r2, [sp, #32]
 80196ba:	4a55      	ldr	r2, [pc, #340]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 80196bc:	9209      	str	r2, [sp, #36]	@ 0x24
 80196be:	4a55      	ldr	r2, [pc, #340]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 80196c0:	920a      	str	r2, [sp, #40]	@ 0x28
 80196c2:	2201      	movs	r2, #1
 80196c4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80196c8:	2200      	movs	r2, #0
 80196ca:	f88d 201c 	strb.w	r2, [sp, #28]
 80196ce:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80196d2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80196d6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80196da:	ab0c      	add	r3, sp, #48	@ 0x30
 80196dc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80196e0:	f7f9 ff3c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80196e4:	f004 ba1b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80196e8:	4a48      	ldr	r2, [pc, #288]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 80196ea:	6812      	ldr	r2, [r2, #0]
 80196ec:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80196ee:	6a12      	ldr	r2, [r2, #32]
 80196f0:	3228      	adds	r2, #40	@ 0x28
 80196f2:	9208      	str	r2, [sp, #32]
 80196f4:	4a46      	ldr	r2, [pc, #280]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 80196f6:	9209      	str	r2, [sp, #36]	@ 0x24
 80196f8:	4a46      	ldr	r2, [pc, #280]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 80196fa:	920a      	str	r2, [sp, #40]	@ 0x28
 80196fc:	2201      	movs	r2, #1
 80196fe:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019702:	2200      	movs	r2, #0
 8019704:	f88d 201c 	strb.w	r2, [sp, #28]
 8019708:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801970c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019710:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019714:	ab0c      	add	r3, sp, #48	@ 0x30
 8019716:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801971a:	f7f9 ff1f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801971e:	f004 b9fe 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019722:	4a3a      	ldr	r2, [pc, #232]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019724:	6812      	ldr	r2, [r2, #0]
 8019726:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019728:	6a12      	ldr	r2, [r2, #32]
 801972a:	322c      	adds	r2, #44	@ 0x2c
 801972c:	9208      	str	r2, [sp, #32]
 801972e:	4a38      	ldr	r2, [pc, #224]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 8019730:	9209      	str	r2, [sp, #36]	@ 0x24
 8019732:	4a38      	ldr	r2, [pc, #224]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 8019734:	920a      	str	r2, [sp, #40]	@ 0x28
 8019736:	2201      	movs	r2, #1
 8019738:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801973c:	2200      	movs	r2, #0
 801973e:	f88d 201c 	strb.w	r2, [sp, #28]
 8019742:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019746:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801974a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801974e:	ab0c      	add	r3, sp, #48	@ 0x30
 8019750:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019754:	f7f9 ff02 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019758:	f004 b9e1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801975c:	4a2b      	ldr	r2, [pc, #172]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 801975e:	6812      	ldr	r2, [r2, #0]
 8019760:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019762:	6a12      	ldr	r2, [r2, #32]
 8019764:	3238      	adds	r2, #56	@ 0x38
 8019766:	9208      	str	r2, [sp, #32]
 8019768:	4a29      	ldr	r2, [pc, #164]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 801976a:	9209      	str	r2, [sp, #36]	@ 0x24
 801976c:	4a29      	ldr	r2, [pc, #164]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 801976e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019770:	2201      	movs	r2, #1
 8019772:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019776:	2200      	movs	r2, #0
 8019778:	f88d 201c 	strb.w	r2, [sp, #28]
 801977c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019780:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019784:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019788:	ab0c      	add	r3, sp, #48	@ 0x30
 801978a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801978e:	f7f9 fee5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019792:	f004 b9c4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019796:	4a1d      	ldr	r2, [pc, #116]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 8019798:	6812      	ldr	r2, [r2, #0]
 801979a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801979c:	6a12      	ldr	r2, [r2, #32]
 801979e:	323c      	adds	r2, #60	@ 0x3c
 80197a0:	9208      	str	r2, [sp, #32]
 80197a2:	4a1b      	ldr	r2, [pc, #108]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 80197a4:	9209      	str	r2, [sp, #36]	@ 0x24
 80197a6:	4a1b      	ldr	r2, [pc, #108]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 80197a8:	920a      	str	r2, [sp, #40]	@ 0x28
 80197aa:	2201      	movs	r2, #1
 80197ac:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80197b0:	2200      	movs	r2, #0
 80197b2:	f88d 201c 	strb.w	r2, [sp, #28]
 80197b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80197ba:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80197be:	e88d 0003 	stmia.w	sp, {r0, r1}
 80197c2:	ab0c      	add	r3, sp, #48	@ 0x30
 80197c4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80197c8:	f7f9 fec8 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80197cc:	f004 b9a7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80197d0:	4a0e      	ldr	r2, [pc, #56]	@ (801980c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2370>)
 80197d2:	6812      	ldr	r2, [r2, #0]
 80197d4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80197d6:	6a12      	ldr	r2, [r2, #32]
 80197d8:	3230      	adds	r2, #48	@ 0x30
 80197da:	9208      	str	r2, [sp, #32]
 80197dc:	4a0c      	ldr	r2, [pc, #48]	@ (8019810 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2374>)
 80197de:	9209      	str	r2, [sp, #36]	@ 0x24
 80197e0:	4a0c      	ldr	r2, [pc, #48]	@ (8019814 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2378>)
 80197e2:	920a      	str	r2, [sp, #40]	@ 0x28
 80197e4:	2201      	movs	r2, #1
 80197e6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80197ea:	2200      	movs	r2, #0
 80197ec:	f88d 201c 	strb.w	r2, [sp, #28]
 80197f0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80197f4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80197f8:	e88d 0003 	stmia.w	sp, {r0, r1}
 80197fc:	ab0c      	add	r3, sp, #48	@ 0x30
 80197fe:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019802:	f7f9 feab 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019806:	f004 b98a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801980a:	bf00      	nop
 801980c:	200019cc 	.word	0x200019cc
 8019810:	0801283d 	.word	0x0801283d
 8019814:	08012845 	.word	0x08012845
 8019818:	08013205 	.word	0x08013205
 801981c:	0801411d 	.word	0x0801411d
 8019820:	080131f9 	.word	0x080131f9
 8019824:	08014135 	.word	0x08014135
 8019828:	080128b5 	.word	0x080128b5
 801982c:	080128b9 	.word	0x080128b9
 8019830:	080128bd 	.word	0x080128bd
 8019834:	080128c1 	.word	0x080128c1
 8019838:	4ab3      	ldr	r2, [pc, #716]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 801983a:	6812      	ldr	r2, [r2, #0]
 801983c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801983e:	6a12      	ldr	r2, [r2, #32]
 8019840:	9208      	str	r2, [sp, #32]
 8019842:	4ab2      	ldr	r2, [pc, #712]	@ (8019b0c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2670>)
 8019844:	9209      	str	r2, [sp, #36]	@ 0x24
 8019846:	4ab2      	ldr	r2, [pc, #712]	@ (8019b10 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2674>)
 8019848:	920a      	str	r2, [sp, #40]	@ 0x28
 801984a:	2201      	movs	r2, #1
 801984c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019850:	2200      	movs	r2, #0
 8019852:	f88d 201c 	strb.w	r2, [sp, #28]
 8019856:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801985a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801985e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019862:	ab0c      	add	r3, sp, #48	@ 0x30
 8019864:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019868:	f7f9 fe78 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801986c:	f004 b957 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019870:	4aa5      	ldr	r2, [pc, #660]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019872:	6812      	ldr	r2, [r2, #0]
 8019874:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019876:	6a12      	ldr	r2, [r2, #32]
 8019878:	3240      	adds	r2, #64	@ 0x40
 801987a:	9208      	str	r2, [sp, #32]
 801987c:	4aa5      	ldr	r2, [pc, #660]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 801987e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019880:	4aa5      	ldr	r2, [pc, #660]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 8019882:	920a      	str	r2, [sp, #40]	@ 0x28
 8019884:	2201      	movs	r2, #1
 8019886:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801988a:	2200      	movs	r2, #0
 801988c:	f88d 201c 	strb.w	r2, [sp, #28]
 8019890:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019894:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019898:	e88d 0003 	stmia.w	sp, {r0, r1}
 801989c:	ab0c      	add	r3, sp, #48	@ 0x30
 801989e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80198a2:	f7f9 fe5b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80198a6:	f004 b93a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80198aa:	4a97      	ldr	r2, [pc, #604]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 80198ac:	6812      	ldr	r2, [r2, #0]
 80198ae:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80198b0:	6a12      	ldr	r2, [r2, #32]
 80198b2:	3244      	adds	r2, #68	@ 0x44
 80198b4:	9208      	str	r2, [sp, #32]
 80198b6:	4a97      	ldr	r2, [pc, #604]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 80198b8:	9209      	str	r2, [sp, #36]	@ 0x24
 80198ba:	4a97      	ldr	r2, [pc, #604]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 80198bc:	920a      	str	r2, [sp, #40]	@ 0x28
 80198be:	2201      	movs	r2, #1
 80198c0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80198c4:	2200      	movs	r2, #0
 80198c6:	f88d 201c 	strb.w	r2, [sp, #28]
 80198ca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80198ce:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80198d2:	e88d 0003 	stmia.w	sp, {r0, r1}
 80198d6:	ab0c      	add	r3, sp, #48	@ 0x30
 80198d8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80198dc:	f7f9 fe3e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80198e0:	f004 b91d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80198e4:	4a88      	ldr	r2, [pc, #544]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 80198e6:	6812      	ldr	r2, [r2, #0]
 80198e8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80198ea:	6a12      	ldr	r2, [r2, #32]
 80198ec:	3248      	adds	r2, #72	@ 0x48
 80198ee:	9208      	str	r2, [sp, #32]
 80198f0:	4a88      	ldr	r2, [pc, #544]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 80198f2:	9209      	str	r2, [sp, #36]	@ 0x24
 80198f4:	4a88      	ldr	r2, [pc, #544]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 80198f6:	920a      	str	r2, [sp, #40]	@ 0x28
 80198f8:	2201      	movs	r2, #1
 80198fa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80198fe:	2200      	movs	r2, #0
 8019900:	f88d 201c 	strb.w	r2, [sp, #28]
 8019904:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019908:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801990c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019910:	ab0c      	add	r3, sp, #48	@ 0x30
 8019912:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019916:	f7f9 fe21 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801991a:	f004 b900 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801991e:	4a7a      	ldr	r2, [pc, #488]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019920:	6812      	ldr	r2, [r2, #0]
 8019922:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019924:	6a12      	ldr	r2, [r2, #32]
 8019926:	324c      	adds	r2, #76	@ 0x4c
 8019928:	9208      	str	r2, [sp, #32]
 801992a:	4a7c      	ldr	r2, [pc, #496]	@ (8019b1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2680>)
 801992c:	9209      	str	r2, [sp, #36]	@ 0x24
 801992e:	4a7c      	ldr	r2, [pc, #496]	@ (8019b20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2684>)
 8019930:	920a      	str	r2, [sp, #40]	@ 0x28
 8019932:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019936:	2201      	movs	r2, #1
 8019938:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801993c:	2200      	movs	r2, #0
 801993e:	f8ad 2000 	strh.w	r2, [sp]
 8019942:	ab0c      	add	r3, sp, #48	@ 0x30
 8019944:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019948:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801994c:	f7f9 fcb0 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019950:	f004 b8e5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019954:	4a6c      	ldr	r2, [pc, #432]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019956:	6812      	ldr	r2, [r2, #0]
 8019958:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801995a:	6a12      	ldr	r2, [r2, #32]
 801995c:	3250      	adds	r2, #80	@ 0x50
 801995e:	9208      	str	r2, [sp, #32]
 8019960:	4a6c      	ldr	r2, [pc, #432]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 8019962:	9209      	str	r2, [sp, #36]	@ 0x24
 8019964:	4a6c      	ldr	r2, [pc, #432]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 8019966:	920a      	str	r2, [sp, #40]	@ 0x28
 8019968:	2201      	movs	r2, #1
 801996a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801996e:	2200      	movs	r2, #0
 8019970:	f88d 201c 	strb.w	r2, [sp, #28]
 8019974:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019978:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801997c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019980:	ab0c      	add	r3, sp, #48	@ 0x30
 8019982:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019986:	f7f9 fde9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801998a:	f004 b8c8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801998e:	4a5e      	ldr	r2, [pc, #376]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019990:	6812      	ldr	r2, [r2, #0]
 8019992:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8019994:	6a12      	ldr	r2, [r2, #32]
 8019996:	3254      	adds	r2, #84	@ 0x54
 8019998:	9208      	str	r2, [sp, #32]
 801999a:	4a5e      	ldr	r2, [pc, #376]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 801999c:	9209      	str	r2, [sp, #36]	@ 0x24
 801999e:	4a5e      	ldr	r2, [pc, #376]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 80199a0:	920a      	str	r2, [sp, #40]	@ 0x28
 80199a2:	2201      	movs	r2, #1
 80199a4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80199a8:	2200      	movs	r2, #0
 80199aa:	f88d 201c 	strb.w	r2, [sp, #28]
 80199ae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80199b2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80199b6:	e88d 0003 	stmia.w	sp, {r0, r1}
 80199ba:	ab0c      	add	r3, sp, #48	@ 0x30
 80199bc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80199c0:	f7f9 fdcc 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80199c4:	f004 b8ab 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80199c8:	4a4f      	ldr	r2, [pc, #316]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 80199ca:	6812      	ldr	r2, [r2, #0]
 80199cc:	6992      	ldr	r2, [r2, #24]
 80199ce:	3214      	adds	r2, #20
 80199d0:	9208      	str	r2, [sp, #32]
 80199d2:	4a54      	ldr	r2, [pc, #336]	@ (8019b24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2688>)
 80199d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80199d6:	4a54      	ldr	r2, [pc, #336]	@ (8019b28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x268c>)
 80199d8:	920a      	str	r2, [sp, #40]	@ 0x28
 80199da:	e9cd 4301 	strd	r4, r3, [sp, #4]
 80199de:	2201      	movs	r2, #1
 80199e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 80199e4:	2200      	movs	r2, #0
 80199e6:	f8ad 2000 	strh.w	r2, [sp]
 80199ea:	ab0c      	add	r3, sp, #48	@ 0x30
 80199ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 80199f0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 80199f4:	f7fa f894 	bl	8013b20 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 80199f8:	f004 b891 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 80199fc:	4a42      	ldr	r2, [pc, #264]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 80199fe:	6812      	ldr	r2, [r2, #0]
 8019a00:	6992      	ldr	r2, [r2, #24]
 8019a02:	9208      	str	r2, [sp, #32]
 8019a04:	4a49      	ldr	r2, [pc, #292]	@ (8019b2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2690>)
 8019a06:	9209      	str	r2, [sp, #36]	@ 0x24
 8019a08:	4a49      	ldr	r2, [pc, #292]	@ (8019b30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2694>)
 8019a0a:	920a      	str	r2, [sp, #40]	@ 0x28
 8019a0c:	2201      	movs	r2, #1
 8019a0e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019a12:	2200      	movs	r2, #0
 8019a14:	f88d 201c 	strb.w	r2, [sp, #28]
 8019a18:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019a1c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019a20:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019a24:	ab0c      	add	r3, sp, #48	@ 0x30
 8019a26:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019a2a:	f7f9 fd97 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019a2e:	f004 b876 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019a32:	4a35      	ldr	r2, [pc, #212]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019a34:	6812      	ldr	r2, [r2, #0]
 8019a36:	6992      	ldr	r2, [r2, #24]
 8019a38:	3244      	adds	r2, #68	@ 0x44
 8019a3a:	9208      	str	r2, [sp, #32]
 8019a3c:	4a35      	ldr	r2, [pc, #212]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 8019a3e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019a40:	4a35      	ldr	r2, [pc, #212]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 8019a42:	920a      	str	r2, [sp, #40]	@ 0x28
 8019a44:	2201      	movs	r2, #1
 8019a46:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019a4a:	2200      	movs	r2, #0
 8019a4c:	f88d 201c 	strb.w	r2, [sp, #28]
 8019a50:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019a54:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019a58:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019a5c:	ab0c      	add	r3, sp, #48	@ 0x30
 8019a5e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019a62:	f7f9 fd7b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019a66:	f004 b85a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019a6a:	4a27      	ldr	r2, [pc, #156]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019a6c:	6812      	ldr	r2, [r2, #0]
 8019a6e:	6992      	ldr	r2, [r2, #24]
 8019a70:	3248      	adds	r2, #72	@ 0x48
 8019a72:	9208      	str	r2, [sp, #32]
 8019a74:	4a27      	ldr	r2, [pc, #156]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 8019a76:	9209      	str	r2, [sp, #36]	@ 0x24
 8019a78:	4a27      	ldr	r2, [pc, #156]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 8019a7a:	920a      	str	r2, [sp, #40]	@ 0x28
 8019a7c:	2201      	movs	r2, #1
 8019a7e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019a82:	2200      	movs	r2, #0
 8019a84:	f88d 201c 	strb.w	r2, [sp, #28]
 8019a88:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019a8c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019a90:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019a94:	ab0c      	add	r3, sp, #48	@ 0x30
 8019a96:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019a9a:	f7f9 fd5f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019a9e:	f004 b83e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019aa2:	4a19      	ldr	r2, [pc, #100]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019aa4:	6812      	ldr	r2, [r2, #0]
 8019aa6:	f002 bd74 	b.w	801c592 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50f6>
 8019aaa:	4a17      	ldr	r2, [pc, #92]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019aac:	6812      	ldr	r2, [r2, #0]
 8019aae:	f002 bd8b 	b.w	801c5c8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x512c>
 8019ab2:	4a15      	ldr	r2, [pc, #84]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019ab4:	6812      	ldr	r2, [r2, #0]
 8019ab6:	f002 bd8f 	b.w	801c5d8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x513c>
 8019aba:	4a13      	ldr	r2, [pc, #76]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019abc:	6812      	ldr	r2, [r2, #0]
 8019abe:	6992      	ldr	r2, [r2, #24]
 8019ac0:	4619      	mov	r1, r3
 8019ac2:	f892 0055 	ldrb.w	r0, [r2, #85]	@ 0x55
 8019ac6:	f7fa faa3 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 8019aca:	f004 b828 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019ace:	4a0e      	ldr	r2, [pc, #56]	@ (8019b08 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x266c>)
 8019ad0:	6812      	ldr	r2, [r2, #0]
 8019ad2:	6992      	ldr	r2, [r2, #24]
 8019ad4:	3238      	adds	r2, #56	@ 0x38
 8019ad6:	9208      	str	r2, [sp, #32]
 8019ad8:	4a0e      	ldr	r2, [pc, #56]	@ (8019b14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2678>)
 8019ada:	9209      	str	r2, [sp, #36]	@ 0x24
 8019adc:	4a0e      	ldr	r2, [pc, #56]	@ (8019b18 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x267c>)
 8019ade:	920a      	str	r2, [sp, #40]	@ 0x28
 8019ae0:	2201      	movs	r2, #1
 8019ae2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019ae6:	2200      	movs	r2, #0
 8019ae8:	f88d 201c 	strb.w	r2, [sp, #28]
 8019aec:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019af0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019af4:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019af8:	ab0c      	add	r3, sp, #48	@ 0x30
 8019afa:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019afe:	f7f9 fd2d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019b02:	f004 b80c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019b06:	bf00      	nop
 8019b08:	200019cc 	.word	0x200019cc
 8019b0c:	080131ed 	.word	0x080131ed
 8019b10:	0801414d 	.word	0x0801414d
 8019b14:	0801283d 	.word	0x0801283d
 8019b18:	08012845 	.word	0x08012845
 8019b1c:	0801285d 	.word	0x0801285d
 8019b20:	08012861 	.word	0x08012861
 8019b24:	080128c5 	.word	0x080128c5
 8019b28:	080128c9 	.word	0x080128c9
 8019b2c:	080131e1 	.word	0x080131e1
 8019b30:	08014165 	.word	0x08014165
 8019b34:	4ab9      	ldr	r2, [pc, #740]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019b36:	6812      	ldr	r2, [r2, #0]
 8019b38:	6992      	ldr	r2, [r2, #24]
 8019b3a:	3256      	adds	r2, #86	@ 0x56
 8019b3c:	9208      	str	r2, [sp, #32]
 8019b3e:	4ab8      	ldr	r2, [pc, #736]	@ (8019e20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2984>)
 8019b40:	9209      	str	r2, [sp, #36]	@ 0x24
 8019b42:	4ab8      	ldr	r2, [pc, #736]	@ (8019e24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2988>)
 8019b44:	920a      	str	r2, [sp, #40]	@ 0x28
 8019b46:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019b4a:	2201      	movs	r2, #1
 8019b4c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019b50:	2200      	movs	r2, #0
 8019b52:	f8ad 2000 	strh.w	r2, [sp]
 8019b56:	ab0c      	add	r3, sp, #48	@ 0x30
 8019b58:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019b5c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019b60:	f7f9 fba6 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019b64:	f003 bfdb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019b68:	4aac      	ldr	r2, [pc, #688]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019b6a:	6812      	ldr	r2, [r2, #0]
 8019b6c:	6992      	ldr	r2, [r2, #24]
 8019b6e:	68d2      	ldr	r2, [r2, #12]
 8019b70:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019b74:	320c      	adds	r2, #12
 8019b76:	9208      	str	r2, [sp, #32]
 8019b78:	4aab      	ldr	r2, [pc, #684]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019b7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8019b7c:	4aab      	ldr	r2, [pc, #684]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019b7e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019b80:	2201      	movs	r2, #1
 8019b82:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019b86:	2200      	movs	r2, #0
 8019b88:	f88d 201c 	strb.w	r2, [sp, #28]
 8019b8c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019b90:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019b94:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019b98:	ab0c      	add	r3, sp, #48	@ 0x30
 8019b9a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019b9e:	f7f9 fcdd 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019ba2:	f003 bfbc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019ba6:	4a9d      	ldr	r2, [pc, #628]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019ba8:	6812      	ldr	r2, [r2, #0]
 8019baa:	6992      	ldr	r2, [r2, #24]
 8019bac:	68d2      	ldr	r2, [r2, #12]
 8019bae:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019bb2:	3211      	adds	r2, #17
 8019bb4:	9208      	str	r2, [sp, #32]
 8019bb6:	4a9a      	ldr	r2, [pc, #616]	@ (8019e20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2984>)
 8019bb8:	9209      	str	r2, [sp, #36]	@ 0x24
 8019bba:	4a9a      	ldr	r2, [pc, #616]	@ (8019e24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2988>)
 8019bbc:	920a      	str	r2, [sp, #40]	@ 0x28
 8019bbe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019bc2:	2201      	movs	r2, #1
 8019bc4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019bc8:	2200      	movs	r2, #0
 8019bca:	f8ad 2000 	strh.w	r2, [sp]
 8019bce:	ab0c      	add	r3, sp, #48	@ 0x30
 8019bd0:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019bd4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019bd8:	f7f9 fb6a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019bdc:	f003 bf9f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019be0:	4a8e      	ldr	r2, [pc, #568]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019be2:	6812      	ldr	r2, [r2, #0]
 8019be4:	6992      	ldr	r2, [r2, #24]
 8019be6:	68d2      	ldr	r2, [r2, #12]
 8019be8:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019bec:	3213      	adds	r2, #19
 8019bee:	9208      	str	r2, [sp, #32]
 8019bf0:	4a8b      	ldr	r2, [pc, #556]	@ (8019e20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2984>)
 8019bf2:	9209      	str	r2, [sp, #36]	@ 0x24
 8019bf4:	4a8b      	ldr	r2, [pc, #556]	@ (8019e24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2988>)
 8019bf6:	920a      	str	r2, [sp, #40]	@ 0x28
 8019bf8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019bfc:	2201      	movs	r2, #1
 8019bfe:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019c02:	2200      	movs	r2, #0
 8019c04:	f8ad 2000 	strh.w	r2, [sp]
 8019c08:	ab0c      	add	r3, sp, #48	@ 0x30
 8019c0a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019c0e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019c12:	f7f9 fb4d 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019c16:	f003 bf82 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019c1a:	4a80      	ldr	r2, [pc, #512]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019c1c:	6812      	ldr	r2, [r2, #0]
 8019c1e:	6992      	ldr	r2, [r2, #24]
 8019c20:	68d2      	ldr	r2, [r2, #12]
 8019c22:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019c26:	3210      	adds	r2, #16
 8019c28:	9208      	str	r2, [sp, #32]
 8019c2a:	4a7d      	ldr	r2, [pc, #500]	@ (8019e20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2984>)
 8019c2c:	9209      	str	r2, [sp, #36]	@ 0x24
 8019c2e:	4a7d      	ldr	r2, [pc, #500]	@ (8019e24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2988>)
 8019c30:	920a      	str	r2, [sp, #40]	@ 0x28
 8019c32:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019c36:	2201      	movs	r2, #1
 8019c38:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019c3c:	2200      	movs	r2, #0
 8019c3e:	f8ad 2000 	strh.w	r2, [sp]
 8019c42:	ab0c      	add	r3, sp, #48	@ 0x30
 8019c44:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019c48:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019c4c:	f7f9 fb30 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019c50:	f003 bf65 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019c54:	4a71      	ldr	r2, [pc, #452]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019c56:	6812      	ldr	r2, [r2, #0]
 8019c58:	6992      	ldr	r2, [r2, #24]
 8019c5a:	68d2      	ldr	r2, [r2, #12]
 8019c5c:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019c60:	3212      	adds	r2, #18
 8019c62:	9208      	str	r2, [sp, #32]
 8019c64:	4a6e      	ldr	r2, [pc, #440]	@ (8019e20 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2984>)
 8019c66:	9209      	str	r2, [sp, #36]	@ 0x24
 8019c68:	4a6e      	ldr	r2, [pc, #440]	@ (8019e24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2988>)
 8019c6a:	920a      	str	r2, [sp, #40]	@ 0x28
 8019c6c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019c70:	2201      	movs	r2, #1
 8019c72:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019c76:	2200      	movs	r2, #0
 8019c78:	f8ad 2000 	strh.w	r2, [sp]
 8019c7c:	ab0c      	add	r3, sp, #48	@ 0x30
 8019c7e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019c82:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019c86:	f7f9 fb13 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019c8a:	f003 bf48 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019c8e:	4a63      	ldr	r2, [pc, #396]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019c90:	6812      	ldr	r2, [r2, #0]
 8019c92:	6992      	ldr	r2, [r2, #24]
 8019c94:	68d2      	ldr	r2, [r2, #12]
 8019c96:	9208      	str	r2, [sp, #32]
 8019c98:	4a65      	ldr	r2, [pc, #404]	@ (8019e30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2994>)
 8019c9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8019c9c:	4a65      	ldr	r2, [pc, #404]	@ (8019e34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2998>)
 8019c9e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019ca0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019ca4:	2201      	movs	r2, #1
 8019ca6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019caa:	2200      	movs	r2, #0
 8019cac:	f8ad 2000 	strh.w	r2, [sp]
 8019cb0:	ab0c      	add	r3, sp, #48	@ 0x30
 8019cb2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019cb6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019cba:	f7f9 fe31 	bl	8013920 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019cbe:	f003 bf2e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019cc2:	4a56      	ldr	r2, [pc, #344]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019cc4:	6812      	ldr	r2, [r2, #0]
 8019cc6:	6992      	ldr	r2, [r2, #24]
 8019cc8:	68d2      	ldr	r2, [r2, #12]
 8019cca:	3201      	adds	r2, #1
 8019ccc:	9208      	str	r2, [sp, #32]
 8019cce:	4a5a      	ldr	r2, [pc, #360]	@ (8019e38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x299c>)
 8019cd0:	9209      	str	r2, [sp, #36]	@ 0x24
 8019cd2:	4a5a      	ldr	r2, [pc, #360]	@ (8019e3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x29a0>)
 8019cd4:	920a      	str	r2, [sp, #40]	@ 0x28
 8019cd6:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019cda:	2201      	movs	r2, #1
 8019cdc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019ce0:	2200      	movs	r2, #0
 8019ce2:	f8ad 2000 	strh.w	r2, [sp]
 8019ce6:	ab0c      	add	r3, sp, #48	@ 0x30
 8019ce8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019cec:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019cf0:	f7f9 fdd6 	bl	80138a0 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019cf4:	f003 bf13 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019cf8:	4a48      	ldr	r2, [pc, #288]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019cfa:	6812      	ldr	r2, [r2, #0]
 8019cfc:	6992      	ldr	r2, [r2, #24]
 8019cfe:	68d2      	ldr	r2, [r2, #12]
 8019d00:	3204      	adds	r2, #4
 8019d02:	9208      	str	r2, [sp, #32]
 8019d04:	4a48      	ldr	r2, [pc, #288]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019d06:	9209      	str	r2, [sp, #36]	@ 0x24
 8019d08:	4a48      	ldr	r2, [pc, #288]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019d0a:	920a      	str	r2, [sp, #40]	@ 0x28
 8019d0c:	2201      	movs	r2, #1
 8019d0e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019d12:	2200      	movs	r2, #0
 8019d14:	f88d 201c 	strb.w	r2, [sp, #28]
 8019d18:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019d1c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019d20:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019d24:	ab0c      	add	r3, sp, #48	@ 0x30
 8019d26:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019d2a:	f7f9 fc17 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019d2e:	f003 bef6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019d32:	4a3a      	ldr	r2, [pc, #232]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019d34:	6812      	ldr	r2, [r2, #0]
 8019d36:	6992      	ldr	r2, [r2, #24]
 8019d38:	68d2      	ldr	r2, [r2, #12]
 8019d3a:	3208      	adds	r2, #8
 8019d3c:	9208      	str	r2, [sp, #32]
 8019d3e:	4a3a      	ldr	r2, [pc, #232]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019d40:	9209      	str	r2, [sp, #36]	@ 0x24
 8019d42:	4a3a      	ldr	r2, [pc, #232]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019d44:	920a      	str	r2, [sp, #40]	@ 0x28
 8019d46:	2201      	movs	r2, #1
 8019d48:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019d4c:	2200      	movs	r2, #0
 8019d4e:	f88d 201c 	strb.w	r2, [sp, #28]
 8019d52:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019d56:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019d5a:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019d5e:	ab0c      	add	r3, sp, #48	@ 0x30
 8019d60:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019d64:	f7f9 fbfa 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019d68:	f003 bed9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019d6c:	4a2b      	ldr	r2, [pc, #172]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019d6e:	6812      	ldr	r2, [r2, #0]
 8019d70:	6992      	ldr	r2, [r2, #24]
 8019d72:	68d2      	ldr	r2, [r2, #12]
 8019d74:	320c      	adds	r2, #12
 8019d76:	9208      	str	r2, [sp, #32]
 8019d78:	4a2b      	ldr	r2, [pc, #172]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019d7a:	9209      	str	r2, [sp, #36]	@ 0x24
 8019d7c:	4a2b      	ldr	r2, [pc, #172]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019d7e:	920a      	str	r2, [sp, #40]	@ 0x28
 8019d80:	2201      	movs	r2, #1
 8019d82:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019d86:	2200      	movs	r2, #0
 8019d88:	f88d 201c 	strb.w	r2, [sp, #28]
 8019d8c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019d90:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019d94:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019d98:	ab0c      	add	r3, sp, #48	@ 0x30
 8019d9a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019d9e:	f7f9 fbdd 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019da2:	f003 bebc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019da6:	4a1d      	ldr	r2, [pc, #116]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019da8:	6812      	ldr	r2, [r2, #0]
 8019daa:	6992      	ldr	r2, [r2, #24]
 8019dac:	68d2      	ldr	r2, [r2, #12]
 8019dae:	3210      	adds	r2, #16
 8019db0:	9208      	str	r2, [sp, #32]
 8019db2:	4a1d      	ldr	r2, [pc, #116]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019db4:	9209      	str	r2, [sp, #36]	@ 0x24
 8019db6:	4a1d      	ldr	r2, [pc, #116]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019db8:	920a      	str	r2, [sp, #40]	@ 0x28
 8019dba:	2201      	movs	r2, #1
 8019dbc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019dc0:	2200      	movs	r2, #0
 8019dc2:	f88d 201c 	strb.w	r2, [sp, #28]
 8019dc6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019dca:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019dce:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019dd2:	ab0c      	add	r3, sp, #48	@ 0x30
 8019dd4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019dd8:	f7f9 fbc0 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019ddc:	f003 be9f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019de0:	4a0e      	ldr	r2, [pc, #56]	@ (8019e1c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2980>)
 8019de2:	6812      	ldr	r2, [r2, #0]
 8019de4:	6992      	ldr	r2, [r2, #24]
 8019de6:	68d2      	ldr	r2, [r2, #12]
 8019de8:	3214      	adds	r2, #20
 8019dea:	9208      	str	r2, [sp, #32]
 8019dec:	4a0e      	ldr	r2, [pc, #56]	@ (8019e28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x298c>)
 8019dee:	9209      	str	r2, [sp, #36]	@ 0x24
 8019df0:	4a0e      	ldr	r2, [pc, #56]	@ (8019e2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2990>)
 8019df2:	920a      	str	r2, [sp, #40]	@ 0x28
 8019df4:	2201      	movs	r2, #1
 8019df6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019dfa:	2200      	movs	r2, #0
 8019dfc:	f88d 201c 	strb.w	r2, [sp, #28]
 8019e00:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019e04:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019e08:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019e0c:	ab0c      	add	r3, sp, #48	@ 0x30
 8019e0e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019e12:	f7f9 fba3 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019e16:	f003 be82 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019e1a:	bf00      	nop
 8019e1c:	200019cc 	.word	0x200019cc
 8019e20:	0801285d 	.word	0x0801285d
 8019e24:	08012861 	.word	0x08012861
 8019e28:	0801283d 	.word	0x0801283d
 8019e2c:	08012845 	.word	0x08012845
 8019e30:	080128cd 	.word	0x080128cd
 8019e34:	080128d1 	.word	0x080128d1
 8019e38:	080128d5 	.word	0x080128d5
 8019e3c:	080128d9 	.word	0x080128d9
 8019e40:	4ab6      	ldr	r2, [pc, #728]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019e42:	6812      	ldr	r2, [r2, #0]
 8019e44:	6992      	ldr	r2, [r2, #24]
 8019e46:	68d2      	ldr	r2, [r2, #12]
 8019e48:	3218      	adds	r2, #24
 8019e4a:	9208      	str	r2, [sp, #32]
 8019e4c:	4ab4      	ldr	r2, [pc, #720]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019e4e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019e50:	4ab4      	ldr	r2, [pc, #720]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019e52:	920a      	str	r2, [sp, #40]	@ 0x28
 8019e54:	2201      	movs	r2, #1
 8019e56:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019e5a:	2200      	movs	r2, #0
 8019e5c:	f88d 201c 	strb.w	r2, [sp, #28]
 8019e60:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019e64:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019e68:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019e6c:	ab0c      	add	r3, sp, #48	@ 0x30
 8019e6e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019e72:	f7f9 fb73 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019e76:	f003 be52 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019e7a:	4aa8      	ldr	r2, [pc, #672]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019e7c:	6812      	ldr	r2, [r2, #0]
 8019e7e:	6992      	ldr	r2, [r2, #24]
 8019e80:	68d2      	ldr	r2, [r2, #12]
 8019e82:	321c      	adds	r2, #28
 8019e84:	9208      	str	r2, [sp, #32]
 8019e86:	4aa6      	ldr	r2, [pc, #664]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019e88:	9209      	str	r2, [sp, #36]	@ 0x24
 8019e8a:	4aa6      	ldr	r2, [pc, #664]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019e8c:	920a      	str	r2, [sp, #40]	@ 0x28
 8019e8e:	2201      	movs	r2, #1
 8019e90:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019e94:	2200      	movs	r2, #0
 8019e96:	f88d 201c 	strb.w	r2, [sp, #28]
 8019e9a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019e9e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019ea2:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019ea6:	ab0c      	add	r3, sp, #48	@ 0x30
 8019ea8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019eac:	f7f9 fb56 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019eb0:	f003 be35 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019eb4:	4a99      	ldr	r2, [pc, #612]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019eb6:	6812      	ldr	r2, [r2, #0]
 8019eb8:	6992      	ldr	r2, [r2, #24]
 8019eba:	68d2      	ldr	r2, [r2, #12]
 8019ebc:	3220      	adds	r2, #32
 8019ebe:	9208      	str	r2, [sp, #32]
 8019ec0:	4a99      	ldr	r2, [pc, #612]	@ (801a128 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c8c>)
 8019ec2:	9209      	str	r2, [sp, #36]	@ 0x24
 8019ec4:	4a99      	ldr	r2, [pc, #612]	@ (801a12c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c90>)
 8019ec6:	920a      	str	r2, [sp, #40]	@ 0x28
 8019ec8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019ecc:	2201      	movs	r2, #1
 8019ece:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019ed2:	2200      	movs	r2, #0
 8019ed4:	f8ad 2000 	strh.w	r2, [sp]
 8019ed8:	ab0c      	add	r3, sp, #48	@ 0x30
 8019eda:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019ede:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019ee2:	f7f9 f9e5 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019ee6:	f003 be1a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019eea:	4a8c      	ldr	r2, [pc, #560]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019eec:	6812      	ldr	r2, [r2, #0]
 8019eee:	6992      	ldr	r2, [r2, #24]
 8019ef0:	68d2      	ldr	r2, [r2, #12]
 8019ef2:	3224      	adds	r2, #36	@ 0x24
 8019ef4:	9208      	str	r2, [sp, #32]
 8019ef6:	4a8a      	ldr	r2, [pc, #552]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019ef8:	9209      	str	r2, [sp, #36]	@ 0x24
 8019efa:	4a8a      	ldr	r2, [pc, #552]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019efc:	920a      	str	r2, [sp, #40]	@ 0x28
 8019efe:	2201      	movs	r2, #1
 8019f00:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019f04:	2200      	movs	r2, #0
 8019f06:	f88d 201c 	strb.w	r2, [sp, #28]
 8019f0a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019f0e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019f12:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019f16:	ab0c      	add	r3, sp, #48	@ 0x30
 8019f18:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019f1c:	f7f9 fb1e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019f20:	f003 bdfd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019f24:	4a7d      	ldr	r2, [pc, #500]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019f26:	6812      	ldr	r2, [r2, #0]
 8019f28:	6992      	ldr	r2, [r2, #24]
 8019f2a:	68d2      	ldr	r2, [r2, #12]
 8019f2c:	3230      	adds	r2, #48	@ 0x30
 8019f2e:	9208      	str	r2, [sp, #32]
 8019f30:	4a7b      	ldr	r2, [pc, #492]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019f32:	9209      	str	r2, [sp, #36]	@ 0x24
 8019f34:	4a7b      	ldr	r2, [pc, #492]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019f36:	920a      	str	r2, [sp, #40]	@ 0x28
 8019f38:	2201      	movs	r2, #1
 8019f3a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019f3e:	2200      	movs	r2, #0
 8019f40:	f88d 201c 	strb.w	r2, [sp, #28]
 8019f44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019f48:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019f4c:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019f50:	ab0c      	add	r3, sp, #48	@ 0x30
 8019f52:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019f56:	f7f9 fb01 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019f5a:	f003 bde0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019f5e:	4a6f      	ldr	r2, [pc, #444]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019f60:	6812      	ldr	r2, [r2, #0]
 8019f62:	6992      	ldr	r2, [r2, #24]
 8019f64:	68d2      	ldr	r2, [r2, #12]
 8019f66:	3228      	adds	r2, #40	@ 0x28
 8019f68:	9208      	str	r2, [sp, #32]
 8019f6a:	4a6d      	ldr	r2, [pc, #436]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019f6c:	9209      	str	r2, [sp, #36]	@ 0x24
 8019f6e:	4a6d      	ldr	r2, [pc, #436]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019f70:	920a      	str	r2, [sp, #40]	@ 0x28
 8019f72:	2201      	movs	r2, #1
 8019f74:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019f78:	2200      	movs	r2, #0
 8019f7a:	f88d 201c 	strb.w	r2, [sp, #28]
 8019f7e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019f82:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019f86:	e88d 0003 	stmia.w	sp, {r0, r1}
 8019f8a:	ab0c      	add	r3, sp, #48	@ 0x30
 8019f8c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019f90:	f7f9 fae4 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019f94:	f003 bdc3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019f98:	4a60      	ldr	r2, [pc, #384]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019f9a:	6812      	ldr	r2, [r2, #0]
 8019f9c:	6992      	ldr	r2, [r2, #24]
 8019f9e:	68d2      	ldr	r2, [r2, #12]
 8019fa0:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019fa4:	3214      	adds	r2, #20
 8019fa6:	9208      	str	r2, [sp, #32]
 8019fa8:	4a61      	ldr	r2, [pc, #388]	@ (801a130 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c94>)
 8019faa:	9209      	str	r2, [sp, #36]	@ 0x24
 8019fac:	4a61      	ldr	r2, [pc, #388]	@ (801a134 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c98>)
 8019fae:	920a      	str	r2, [sp, #40]	@ 0x28
 8019fb0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 8019fb4:	2201      	movs	r2, #1
 8019fb6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019fba:	2200      	movs	r2, #0
 8019fbc:	f8ad 2000 	strh.w	r2, [sp]
 8019fc0:	ab0c      	add	r3, sp, #48	@ 0x30
 8019fc2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019fc6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 8019fca:	f7f9 f9b3 	bl	8013334 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 8019fce:	f003 bda6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 8019fd2:	4a52      	ldr	r2, [pc, #328]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 8019fd4:	6812      	ldr	r2, [r2, #0]
 8019fd6:	6992      	ldr	r2, [r2, #24]
 8019fd8:	68d2      	ldr	r2, [r2, #12]
 8019fda:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 8019fde:	3218      	adds	r2, #24
 8019fe0:	9208      	str	r2, [sp, #32]
 8019fe2:	4a4f      	ldr	r2, [pc, #316]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 8019fe4:	9209      	str	r2, [sp, #36]	@ 0x24
 8019fe6:	4a4f      	ldr	r2, [pc, #316]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 8019fe8:	920a      	str	r2, [sp, #40]	@ 0x28
 8019fea:	2201      	movs	r2, #1
 8019fec:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 8019ff0:	2200      	movs	r2, #0
 8019ff2:	f88d 201c 	strb.w	r2, [sp, #28]
 8019ff6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8019ffa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8019ffe:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a002:	ab0c      	add	r3, sp, #48	@ 0x30
 801a004:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a008:	f7f9 faa8 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a00c:	f003 bd87 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a010:	4a42      	ldr	r2, [pc, #264]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a012:	6812      	ldr	r2, [r2, #0]
 801a014:	6992      	ldr	r2, [r2, #24]
 801a016:	68d2      	ldr	r2, [r2, #12]
 801a018:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801a01c:	321c      	adds	r2, #28
 801a01e:	9208      	str	r2, [sp, #32]
 801a020:	4a43      	ldr	r2, [pc, #268]	@ (801a130 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c94>)
 801a022:	9209      	str	r2, [sp, #36]	@ 0x24
 801a024:	4a43      	ldr	r2, [pc, #268]	@ (801a134 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c98>)
 801a026:	920a      	str	r2, [sp, #40]	@ 0x28
 801a028:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a02c:	2201      	movs	r2, #1
 801a02e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a032:	2200      	movs	r2, #0
 801a034:	f8ad 2000 	strh.w	r2, [sp]
 801a038:	ab0c      	add	r3, sp, #48	@ 0x30
 801a03a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a03e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a042:	f7f9 f977 	bl	8013334 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a046:	f003 bd6a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a04a:	4a34      	ldr	r2, [pc, #208]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a04c:	6812      	ldr	r2, [r2, #0]
 801a04e:	6992      	ldr	r2, [r2, #24]
 801a050:	68d2      	ldr	r2, [r2, #12]
 801a052:	9208      	str	r2, [sp, #32]
 801a054:	4a38      	ldr	r2, [pc, #224]	@ (801a138 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c9c>)
 801a056:	9209      	str	r2, [sp, #36]	@ 0x24
 801a058:	4a38      	ldr	r2, [pc, #224]	@ (801a13c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2ca0>)
 801a05a:	920a      	str	r2, [sp, #40]	@ 0x28
 801a05c:	2201      	movs	r2, #1
 801a05e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a062:	2200      	movs	r2, #0
 801a064:	f88d 201c 	strb.w	r2, [sp, #28]
 801a068:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a06c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a070:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a074:	ab0c      	add	r3, sp, #48	@ 0x30
 801a076:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a07a:	f7f9 fa6f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a07e:	f003 bd4e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a082:	4a26      	ldr	r2, [pc, #152]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a084:	6812      	ldr	r2, [r2, #0]
 801a086:	f002 bd7a 	b.w	801cb7e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56e2>
 801a08a:	4a24      	ldr	r2, [pc, #144]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a08c:	6812      	ldr	r2, [r2, #0]
 801a08e:	6992      	ldr	r2, [r2, #24]
 801a090:	68d2      	ldr	r2, [r2, #12]
 801a092:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801a096:	3238      	adds	r2, #56	@ 0x38
 801a098:	9208      	str	r2, [sp, #32]
 801a09a:	4a23      	ldr	r2, [pc, #140]	@ (801a128 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c8c>)
 801a09c:	9209      	str	r2, [sp, #36]	@ 0x24
 801a09e:	4a23      	ldr	r2, [pc, #140]	@ (801a12c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c90>)
 801a0a0:	920a      	str	r2, [sp, #40]	@ 0x28
 801a0a2:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a0a6:	2201      	movs	r2, #1
 801a0a8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a0ac:	2200      	movs	r2, #0
 801a0ae:	f8ad 2000 	strh.w	r2, [sp]
 801a0b2:	ab0c      	add	r3, sp, #48	@ 0x30
 801a0b4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a0b8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a0bc:	f7f9 f8f8 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a0c0:	f003 bd2d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a0c4:	4a15      	ldr	r2, [pc, #84]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a0c6:	6812      	ldr	r2, [r2, #0]
 801a0c8:	6992      	ldr	r2, [r2, #24]
 801a0ca:	68d2      	ldr	r2, [r2, #12]
 801a0cc:	f502 5240 	add.w	r2, r2, #12288	@ 0x3000
 801a0d0:	4619      	mov	r1, r3
 801a0d2:	f892 0879 	ldrb.w	r0, [r2, #2169]	@ 0x879
 801a0d6:	f7f9 ff9b 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801a0da:	f003 bd20 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a0de:	4a0f      	ldr	r2, [pc, #60]	@ (801a11c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c80>)
 801a0e0:	6812      	ldr	r2, [r2, #0]
 801a0e2:	6992      	ldr	r2, [r2, #24]
 801a0e4:	68d2      	ldr	r2, [r2, #12]
 801a0e6:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801a0ea:	323c      	adds	r2, #60	@ 0x3c
 801a0ec:	9208      	str	r2, [sp, #32]
 801a0ee:	4a0c      	ldr	r2, [pc, #48]	@ (801a120 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c84>)
 801a0f0:	9209      	str	r2, [sp, #36]	@ 0x24
 801a0f2:	4a0c      	ldr	r2, [pc, #48]	@ (801a124 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2c88>)
 801a0f4:	920a      	str	r2, [sp, #40]	@ 0x28
 801a0f6:	2201      	movs	r2, #1
 801a0f8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a0fc:	2200      	movs	r2, #0
 801a0fe:	f88d 201c 	strb.w	r2, [sp, #28]
 801a102:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a106:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a10a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a10e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a110:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a114:	f7f9 fa22 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a118:	f003 bd01 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a11c:	200019cc 	.word	0x200019cc
 801a120:	0801283d 	.word	0x0801283d
 801a124:	08012845 	.word	0x08012845
 801a128:	0801285d 	.word	0x0801285d
 801a12c:	08012861 	.word	0x08012861
 801a130:	080128dd 	.word	0x080128dd
 801a134:	080128e1 	.word	0x080128e1
 801a138:	080131d5 	.word	0x080131d5
 801a13c:	08014181 	.word	0x08014181
 801a140:	4ab5      	ldr	r2, [pc, #724]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a142:	6812      	ldr	r2, [r2, #0]
 801a144:	6992      	ldr	r2, [r2, #24]
 801a146:	68d2      	ldr	r2, [r2, #12]
 801a148:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801a14c:	9208      	str	r2, [sp, #32]
 801a14e:	4ab3      	ldr	r2, [pc, #716]	@ (801a41c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f80>)
 801a150:	9209      	str	r2, [sp, #36]	@ 0x24
 801a152:	4ab3      	ldr	r2, [pc, #716]	@ (801a420 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f84>)
 801a154:	920a      	str	r2, [sp, #40]	@ 0x28
 801a156:	2201      	movs	r2, #1
 801a158:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a15c:	2200      	movs	r2, #0
 801a15e:	f88d 201c 	strb.w	r2, [sp, #28]
 801a162:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a166:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a16a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a16e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a170:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a174:	f7f9 f9f2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a178:	f003 bcd1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a17c:	4aa6      	ldr	r2, [pc, #664]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a17e:	6812      	ldr	r2, [r2, #0]
 801a180:	f002 bd81 	b.w	801cc86 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x57ea>
 801a184:	4aa4      	ldr	r2, [pc, #656]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a186:	6812      	ldr	r2, [r2, #0]
 801a188:	6992      	ldr	r2, [r2, #24]
 801a18a:	68d2      	ldr	r2, [r2, #12]
 801a18c:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801a190:	3208      	adds	r2, #8
 801a192:	9208      	str	r2, [sp, #32]
 801a194:	4aa3      	ldr	r2, [pc, #652]	@ (801a424 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f88>)
 801a196:	9209      	str	r2, [sp, #36]	@ 0x24
 801a198:	4aa3      	ldr	r2, [pc, #652]	@ (801a428 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f8c>)
 801a19a:	920a      	str	r2, [sp, #40]	@ 0x28
 801a19c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a1a0:	2201      	movs	r2, #1
 801a1a2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a1a6:	2200      	movs	r2, #0
 801a1a8:	f8ad 2000 	strh.w	r2, [sp]
 801a1ac:	ab0c      	add	r3, sp, #48	@ 0x30
 801a1ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a1b2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a1b6:	f7f9 f87b 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a1ba:	f003 bcb0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a1be:	4b96      	ldr	r3, [pc, #600]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a1c0:	681b      	ldr	r3, [r3, #0]
 801a1c2:	6998      	ldr	r0, [r3, #24]
 801a1c4:	6843      	ldr	r3, [r0, #4]
 801a1c6:	9308      	str	r3, [sp, #32]
 801a1c8:	2301      	movs	r3, #1
 801a1ca:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801a1ce:	7a02      	ldrb	r2, [r0, #8]
 801a1d0:	f88d 2018 	strb.w	r2, [sp, #24]
 801a1d4:	f88d 3019 	strb.w	r3, [sp, #25]
 801a1d8:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
 801a1dc:	9b06      	ldr	r3, [sp, #24]
 801a1de:	9400      	str	r4, [sp, #0]
 801a1e0:	f7f9 fefe 	bl	8013fe0 <odrive_controller_move_incremental(std::optional<ODriveIntf::ControllerIntf*>, std::optional<float>, std::optional<bool>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 801a1e4:	2001      	movs	r0, #1
 801a1e6:	f003 bc9a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a1ea:	4a8b      	ldr	r2, [pc, #556]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a1ec:	6812      	ldr	r2, [r2, #0]
 801a1ee:	6992      	ldr	r2, [r2, #24]
 801a1f0:	3204      	adds	r2, #4
 801a1f2:	9208      	str	r2, [sp, #32]
 801a1f4:	4a89      	ldr	r2, [pc, #548]	@ (801a41c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f80>)
 801a1f6:	9209      	str	r2, [sp, #36]	@ 0x24
 801a1f8:	4a89      	ldr	r2, [pc, #548]	@ (801a420 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f84>)
 801a1fa:	920a      	str	r2, [sp, #40]	@ 0x28
 801a1fc:	2201      	movs	r2, #1
 801a1fe:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a202:	2200      	movs	r2, #0
 801a204:	f88d 201c 	strb.w	r2, [sp, #28]
 801a208:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a20c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a210:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a214:	ab0c      	add	r3, sp, #48	@ 0x30
 801a216:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a21a:	f7f9 f99f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a21e:	f003 bc7e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a222:	4a7d      	ldr	r2, [pc, #500]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a224:	6812      	ldr	r2, [r2, #0]
 801a226:	6992      	ldr	r2, [r2, #24]
 801a228:	3208      	adds	r2, #8
 801a22a:	9208      	str	r2, [sp, #32]
 801a22c:	4a7d      	ldr	r2, [pc, #500]	@ (801a424 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f88>)
 801a22e:	9209      	str	r2, [sp, #36]	@ 0x24
 801a230:	4a7d      	ldr	r2, [pc, #500]	@ (801a428 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f8c>)
 801a232:	920a      	str	r2, [sp, #40]	@ 0x28
 801a234:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a238:	2201      	movs	r2, #1
 801a23a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a23e:	2200      	movs	r2, #0
 801a240:	f8ad 2000 	strh.w	r2, [sp]
 801a244:	ab0c      	add	r3, sp, #48	@ 0x30
 801a246:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a24a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a24e:	f7f9 f82f 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a252:	f003 bc64 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a256:	4b70      	ldr	r3, [pc, #448]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a258:	681b      	ldr	r3, [r3, #0]
 801a25a:	f002 bd76 	b.w	801cd4a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x58ae>
 801a25e:	4a6e      	ldr	r2, [pc, #440]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a260:	6812      	ldr	r2, [r2, #0]
 801a262:	6912      	ldr	r2, [r2, #16]
 801a264:	3214      	adds	r2, #20
 801a266:	9208      	str	r2, [sp, #32]
 801a268:	4a70      	ldr	r2, [pc, #448]	@ (801a42c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f90>)
 801a26a:	9209      	str	r2, [sp, #36]	@ 0x24
 801a26c:	4a70      	ldr	r2, [pc, #448]	@ (801a430 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f94>)
 801a26e:	920a      	str	r2, [sp, #40]	@ 0x28
 801a270:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a274:	2201      	movs	r2, #1
 801a276:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a27a:	2200      	movs	r2, #0
 801a27c:	9200      	str	r2, [sp, #0]
 801a27e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a280:	9206      	str	r2, [sp, #24]
 801a282:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a286:	f7f9 fc0b 	bl	8013aa0 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a28a:	f003 bc48 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a28e:	4a62      	ldr	r2, [pc, #392]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a290:	6812      	ldr	r2, [r2, #0]
 801a292:	6912      	ldr	r2, [r2, #16]
 801a294:	4619      	mov	r1, r3
 801a296:	7dd0      	ldrb	r0, [r2, #23]
 801a298:	f7f9 feba 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801a29c:	f003 bc3f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a2a0:	4a5d      	ldr	r2, [pc, #372]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2a2:	6812      	ldr	r2, [r2, #0]
 801a2a4:	6912      	ldr	r2, [r2, #16]
 801a2a6:	4619      	mov	r1, r3
 801a2a8:	7d90      	ldrb	r0, [r2, #22]
 801a2aa:	f7f9 feb1 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801a2ae:	f003 bc36 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a2b2:	4a59      	ldr	r2, [pc, #356]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2b4:	6812      	ldr	r2, [r2, #0]
 801a2b6:	6910      	ldr	r0, [r2, #16]
 801a2b8:	685a      	ldr	r2, [r3, #4]
 801a2ba:	6980      	ldr	r0, [r0, #24]
 801a2bc:	4619      	mov	r1, r3
 801a2be:	f7fd f8d3 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801a2c2:	f003 bc2c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a2c6:	4a54      	ldr	r2, [pc, #336]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2c8:	6812      	ldr	r2, [r2, #0]
 801a2ca:	6910      	ldr	r0, [r2, #16]
 801a2cc:	685a      	ldr	r2, [r3, #4]
 801a2ce:	69c0      	ldr	r0, [r0, #28]
 801a2d0:	4619      	mov	r1, r3
 801a2d2:	f7fd f8c9 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801a2d6:	f003 bc22 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a2da:	4a4f      	ldr	r2, [pc, #316]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2dc:	6812      	ldr	r2, [r2, #0]
 801a2de:	f002 bd79 	b.w	801cdd4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5938>
 801a2e2:	4a4d      	ldr	r2, [pc, #308]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2e4:	6812      	ldr	r2, [r2, #0]
 801a2e6:	f002 bd7d 	b.w	801cde4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5948>
 801a2ea:	4a4b      	ldr	r2, [pc, #300]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2ec:	6812      	ldr	r2, [r2, #0]
 801a2ee:	f002 bd81 	b.w	801cdf4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5958>
 801a2f2:	4a49      	ldr	r2, [pc, #292]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2f4:	6812      	ldr	r2, [r2, #0]
 801a2f6:	f002 bd85 	b.w	801ce04 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5968>
 801a2fa:	4a47      	ldr	r2, [pc, #284]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a2fc:	6812      	ldr	r2, [r2, #0]
 801a2fe:	f002 bd89 	b.w	801ce14 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5978>
 801a302:	4a45      	ldr	r2, [pc, #276]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a304:	6812      	ldr	r2, [r2, #0]
 801a306:	f002 bd8d 	b.w	801ce24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5988>
 801a30a:	4a43      	ldr	r2, [pc, #268]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a30c:	6812      	ldr	r2, [r2, #0]
 801a30e:	f002 bd91 	b.w	801ce34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5998>
 801a312:	4a41      	ldr	r2, [pc, #260]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a314:	6812      	ldr	r2, [r2, #0]
 801a316:	6912      	ldr	r2, [r2, #16]
 801a318:	4619      	mov	r1, r3
 801a31a:	f892 005c 	ldrb.w	r0, [r2, #92]	@ 0x5c
 801a31e:	f7f9 fe85 	bl	801402c <fibre::Codec<unsigned char, void>::encode(unsigned char, fibre::generic_bufptr_t<unsigned char>*)>
 801a322:	f003 bbfc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a326:	4a3c      	ldr	r2, [pc, #240]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a328:	6812      	ldr	r2, [r2, #0]
 801a32a:	f002 bd95 	b.w	801ce58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59bc>
 801a32e:	4a3a      	ldr	r2, [pc, #232]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a330:	6812      	ldr	r2, [r2, #0]
 801a332:	f002 bd99 	b.w	801ce68 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59cc>
 801a336:	4a38      	ldr	r2, [pc, #224]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a338:	6812      	ldr	r2, [r2, #0]
 801a33a:	f002 bd9d 	b.w	801ce78 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59dc>
 801a33e:	4a36      	ldr	r2, [pc, #216]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a340:	6812      	ldr	r2, [r2, #0]
 801a342:	6912      	ldr	r2, [r2, #16]
 801a344:	3240      	adds	r2, #64	@ 0x40
 801a346:	9208      	str	r2, [sp, #32]
 801a348:	4a3a      	ldr	r2, [pc, #232]	@ (801a434 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f98>)
 801a34a:	9209      	str	r2, [sp, #36]	@ 0x24
 801a34c:	4a3a      	ldr	r2, [pc, #232]	@ (801a438 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f9c>)
 801a34e:	920a      	str	r2, [sp, #40]	@ 0x28
 801a350:	2201      	movs	r2, #1
 801a352:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a356:	2200      	movs	r2, #0
 801a358:	f88d 201c 	strb.w	r2, [sp, #28]
 801a35c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a360:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a364:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a368:	ab0c      	add	r3, sp, #48	@ 0x30
 801a36a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a36e:	f7f9 f9cd 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a372:	f003 bbd4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a376:	4a28      	ldr	r2, [pc, #160]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a378:	6812      	ldr	r2, [r2, #0]
 801a37a:	f002 bdb1 	b.w	801cee0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5a44>
 801a37e:	4a26      	ldr	r2, [pc, #152]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a380:	6812      	ldr	r2, [r2, #0]
 801a382:	6912      	ldr	r2, [r2, #16]
 801a384:	68d2      	ldr	r2, [r2, #12]
 801a386:	9208      	str	r2, [sp, #32]
 801a388:	4a2c      	ldr	r2, [pc, #176]	@ (801a43c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fa0>)
 801a38a:	9209      	str	r2, [sp, #36]	@ 0x24
 801a38c:	4a2c      	ldr	r2, [pc, #176]	@ (801a440 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fa4>)
 801a38e:	920a      	str	r2, [sp, #40]	@ 0x28
 801a390:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a394:	2201      	movs	r2, #1
 801a396:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a39a:	2200      	movs	r2, #0
 801a39c:	9200      	str	r2, [sp, #0]
 801a39e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a3a0:	9206      	str	r2, [sp, #24]
 801a3a2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a3a6:	f7f9 fa3b 	bl	8013820 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a3aa:	f003 bbb8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a3ae:	4a1a      	ldr	r2, [pc, #104]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a3b0:	6812      	ldr	r2, [r2, #0]
 801a3b2:	6912      	ldr	r2, [r2, #16]
 801a3b4:	68d2      	ldr	r2, [r2, #12]
 801a3b6:	9208      	str	r2, [sp, #32]
 801a3b8:	4a22      	ldr	r2, [pc, #136]	@ (801a444 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fa8>)
 801a3ba:	9209      	str	r2, [sp, #36]	@ 0x24
 801a3bc:	4a22      	ldr	r2, [pc, #136]	@ (801a448 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fac>)
 801a3be:	920a      	str	r2, [sp, #40]	@ 0x28
 801a3c0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a3c4:	2201      	movs	r2, #1
 801a3c6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a3ca:	2200      	movs	r2, #0
 801a3cc:	f8ad 2000 	strh.w	r2, [sp]
 801a3d0:	ab0c      	add	r3, sp, #48	@ 0x30
 801a3d2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a3d6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a3da:	f7f8 ff69 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a3de:	f003 bb9e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a3e2:	4a0d      	ldr	r2, [pc, #52]	@ (801a418 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2f7c>)
 801a3e4:	6812      	ldr	r2, [r2, #0]
 801a3e6:	6912      	ldr	r2, [r2, #16]
 801a3e8:	68d2      	ldr	r2, [r2, #12]
 801a3ea:	9208      	str	r2, [sp, #32]
 801a3ec:	4a17      	ldr	r2, [pc, #92]	@ (801a44c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fb0>)
 801a3ee:	9209      	str	r2, [sp, #36]	@ 0x24
 801a3f0:	4a17      	ldr	r2, [pc, #92]	@ (801a450 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2fb4>)
 801a3f2:	920a      	str	r2, [sp, #40]	@ 0x28
 801a3f4:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a3f8:	2201      	movs	r2, #1
 801a3fa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a3fe:	2200      	movs	r2, #0
 801a400:	f8ad 2000 	strh.w	r2, [sp]
 801a404:	ab0c      	add	r3, sp, #48	@ 0x30
 801a406:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a40a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a40e:	f7f8 ff4f 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a412:	f003 bb84 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a416:	bf00      	nop
 801a418:	200019cc 	.word	0x200019cc
 801a41c:	0801283d 	.word	0x0801283d
 801a420:	08012845 	.word	0x08012845
 801a424:	0801285d 	.word	0x0801285d
 801a428:	08012861 	.word	0x08012861
 801a42c:	080128e5 	.word	0x080128e5
 801a430:	080128e9 	.word	0x080128e9
 801a434:	080128b5 	.word	0x080128b5
 801a438:	080128b9 	.word	0x080128b9
 801a43c:	080128f1 	.word	0x080128f1
 801a440:	080128f5 	.word	0x080128f5
 801a444:	080131c9 	.word	0x080131c9
 801a448:	08014199 	.word	0x08014199
 801a44c:	080131c1 	.word	0x080131c1
 801a450:	080141b9 	.word	0x080141b9
 801a454:	4ab3      	ldr	r2, [pc, #716]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a456:	6812      	ldr	r2, [r2, #0]
 801a458:	6912      	ldr	r2, [r2, #16]
 801a45a:	68d2      	ldr	r2, [r2, #12]
 801a45c:	9208      	str	r2, [sp, #32]
 801a45e:	4ab2      	ldr	r2, [pc, #712]	@ (801a728 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x328c>)
 801a460:	9209      	str	r2, [sp, #36]	@ 0x24
 801a462:	4ab2      	ldr	r2, [pc, #712]	@ (801a72c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3290>)
 801a464:	920a      	str	r2, [sp, #40]	@ 0x28
 801a466:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a46a:	2201      	movs	r2, #1
 801a46c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a470:	2200      	movs	r2, #0
 801a472:	9200      	str	r2, [sp, #0]
 801a474:	ab0c      	add	r3, sp, #48	@ 0x30
 801a476:	9206      	str	r2, [sp, #24]
 801a478:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a47c:	f7f8 ffcc 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a480:	f003 bb4d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a484:	4aa7      	ldr	r2, [pc, #668]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a486:	6812      	ldr	r2, [r2, #0]
 801a488:	6912      	ldr	r2, [r2, #16]
 801a48a:	68d2      	ldr	r2, [r2, #12]
 801a48c:	3204      	adds	r2, #4
 801a48e:	9208      	str	r2, [sp, #32]
 801a490:	4aa7      	ldr	r2, [pc, #668]	@ (801a730 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3294>)
 801a492:	9209      	str	r2, [sp, #36]	@ 0x24
 801a494:	4aa7      	ldr	r2, [pc, #668]	@ (801a734 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3298>)
 801a496:	920a      	str	r2, [sp, #40]	@ 0x28
 801a498:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a49c:	2201      	movs	r2, #1
 801a49e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a4a2:	2200      	movs	r2, #0
 801a4a4:	f8ad 2000 	strh.w	r2, [sp]
 801a4a8:	ab0c      	add	r3, sp, #48	@ 0x30
 801a4aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a4ae:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a4b2:	f7f8 fefd 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a4b6:	f003 bb32 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a4ba:	4a9a      	ldr	r2, [pc, #616]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a4bc:	6812      	ldr	r2, [r2, #0]
 801a4be:	6912      	ldr	r2, [r2, #16]
 801a4c0:	68d2      	ldr	r2, [r2, #12]
 801a4c2:	3208      	adds	r2, #8
 801a4c4:	9208      	str	r2, [sp, #32]
 801a4c6:	4a9c      	ldr	r2, [pc, #624]	@ (801a738 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x329c>)
 801a4c8:	9209      	str	r2, [sp, #36]	@ 0x24
 801a4ca:	4a9c      	ldr	r2, [pc, #624]	@ (801a73c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32a0>)
 801a4cc:	920a      	str	r2, [sp, #40]	@ 0x28
 801a4ce:	2201      	movs	r2, #1
 801a4d0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a4d4:	2200      	movs	r2, #0
 801a4d6:	f88d 201c 	strb.w	r2, [sp, #28]
 801a4da:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a4de:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a4e2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a4e6:	ab0c      	add	r3, sp, #48	@ 0x30
 801a4e8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a4ec:	f7f9 f90e 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a4f0:	f003 bb15 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a4f4:	4a8b      	ldr	r2, [pc, #556]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a4f6:	6812      	ldr	r2, [r2, #0]
 801a4f8:	6912      	ldr	r2, [r2, #16]
 801a4fa:	68d2      	ldr	r2, [r2, #12]
 801a4fc:	320c      	adds	r2, #12
 801a4fe:	9208      	str	r2, [sp, #32]
 801a500:	4a8d      	ldr	r2, [pc, #564]	@ (801a738 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x329c>)
 801a502:	9209      	str	r2, [sp, #36]	@ 0x24
 801a504:	4a8d      	ldr	r2, [pc, #564]	@ (801a73c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32a0>)
 801a506:	920a      	str	r2, [sp, #40]	@ 0x28
 801a508:	2201      	movs	r2, #1
 801a50a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a50e:	2200      	movs	r2, #0
 801a510:	f88d 201c 	strb.w	r2, [sp, #28]
 801a514:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a518:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a51c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a520:	ab0c      	add	r3, sp, #48	@ 0x30
 801a522:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a526:	f7f9 f8f1 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a52a:	f003 baf8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a52e:	4a7d      	ldr	r2, [pc, #500]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a530:	6812      	ldr	r2, [r2, #0]
 801a532:	6912      	ldr	r2, [r2, #16]
 801a534:	68d2      	ldr	r2, [r2, #12]
 801a536:	9208      	str	r2, [sp, #32]
 801a538:	4a81      	ldr	r2, [pc, #516]	@ (801a740 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32a4>)
 801a53a:	9209      	str	r2, [sp, #36]	@ 0x24
 801a53c:	4a81      	ldr	r2, [pc, #516]	@ (801a744 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32a8>)
 801a53e:	920a      	str	r2, [sp, #40]	@ 0x28
 801a540:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a544:	2201      	movs	r2, #1
 801a546:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a54a:	2200      	movs	r2, #0
 801a54c:	f8ad 2000 	strh.w	r2, [sp]
 801a550:	ab0c      	add	r3, sp, #48	@ 0x30
 801a552:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a556:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a55a:	f7f8 fea9 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a55e:	f003 bade 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a562:	4a70      	ldr	r2, [pc, #448]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a564:	6812      	ldr	r2, [r2, #0]
 801a566:	6912      	ldr	r2, [r2, #16]
 801a568:	68d2      	ldr	r2, [r2, #12]
 801a56a:	3210      	adds	r2, #16
 801a56c:	9208      	str	r2, [sp, #32]
 801a56e:	4a76      	ldr	r2, [pc, #472]	@ (801a748 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32ac>)
 801a570:	9209      	str	r2, [sp, #36]	@ 0x24
 801a572:	4a76      	ldr	r2, [pc, #472]	@ (801a74c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b0>)
 801a574:	920a      	str	r2, [sp, #40]	@ 0x28
 801a576:	2201      	movs	r2, #1
 801a578:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a57c:	2200      	movs	r2, #0
 801a57e:	f88d 201c 	strb.w	r2, [sp, #28]
 801a582:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a586:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a58a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a58e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a590:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a594:	f7f8 ffe2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a598:	f003 bac1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a59c:	4a61      	ldr	r2, [pc, #388]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a59e:	6812      	ldr	r2, [r2, #0]
 801a5a0:	6912      	ldr	r2, [r2, #16]
 801a5a2:	68d2      	ldr	r2, [r2, #12]
 801a5a4:	3214      	adds	r2, #20
 801a5a6:	9208      	str	r2, [sp, #32]
 801a5a8:	4a61      	ldr	r2, [pc, #388]	@ (801a730 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3294>)
 801a5aa:	9209      	str	r2, [sp, #36]	@ 0x24
 801a5ac:	4a61      	ldr	r2, [pc, #388]	@ (801a734 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3298>)
 801a5ae:	920a      	str	r2, [sp, #40]	@ 0x28
 801a5b0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a5b4:	2201      	movs	r2, #1
 801a5b6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a5ba:	2200      	movs	r2, #0
 801a5bc:	f8ad 2000 	strh.w	r2, [sp]
 801a5c0:	ab0c      	add	r3, sp, #48	@ 0x30
 801a5c2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a5c6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a5ca:	f7f8 fe71 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a5ce:	f003 baa6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a5d2:	4a54      	ldr	r2, [pc, #336]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a5d4:	6812      	ldr	r2, [r2, #0]
 801a5d6:	6912      	ldr	r2, [r2, #16]
 801a5d8:	68d2      	ldr	r2, [r2, #12]
 801a5da:	9208      	str	r2, [sp, #32]
 801a5dc:	4a5c      	ldr	r2, [pc, #368]	@ (801a750 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b4>)
 801a5de:	9209      	str	r2, [sp, #36]	@ 0x24
 801a5e0:	4a5c      	ldr	r2, [pc, #368]	@ (801a754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b8>)
 801a5e2:	920a      	str	r2, [sp, #40]	@ 0x28
 801a5e4:	2201      	movs	r2, #1
 801a5e6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a5ea:	2200      	movs	r2, #0
 801a5ec:	f88d 201c 	strb.w	r2, [sp, #28]
 801a5f0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a5f4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a5f8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a5fc:	ab0c      	add	r3, sp, #48	@ 0x30
 801a5fe:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a602:	f7f8 ffab 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a606:	f003 ba8a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a60a:	4a46      	ldr	r2, [pc, #280]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a60c:	6812      	ldr	r2, [r2, #0]
 801a60e:	6912      	ldr	r2, [r2, #16]
 801a610:	68d2      	ldr	r2, [r2, #12]
 801a612:	3218      	adds	r2, #24
 801a614:	9208      	str	r2, [sp, #32]
 801a616:	4a4c      	ldr	r2, [pc, #304]	@ (801a748 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32ac>)
 801a618:	9209      	str	r2, [sp, #36]	@ 0x24
 801a61a:	4a4c      	ldr	r2, [pc, #304]	@ (801a74c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b0>)
 801a61c:	920a      	str	r2, [sp, #40]	@ 0x28
 801a61e:	2201      	movs	r2, #1
 801a620:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a624:	2200      	movs	r2, #0
 801a626:	f88d 201c 	strb.w	r2, [sp, #28]
 801a62a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a62e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a632:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a636:	ab0c      	add	r3, sp, #48	@ 0x30
 801a638:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a63c:	f7f8 ff8e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a640:	f003 ba6d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a644:	4a37      	ldr	r2, [pc, #220]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a646:	6812      	ldr	r2, [r2, #0]
 801a648:	6912      	ldr	r2, [r2, #16]
 801a64a:	68d2      	ldr	r2, [r2, #12]
 801a64c:	321c      	adds	r2, #28
 801a64e:	9208      	str	r2, [sp, #32]
 801a650:	4a3d      	ldr	r2, [pc, #244]	@ (801a748 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32ac>)
 801a652:	9209      	str	r2, [sp, #36]	@ 0x24
 801a654:	4a3d      	ldr	r2, [pc, #244]	@ (801a74c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b0>)
 801a656:	920a      	str	r2, [sp, #40]	@ 0x28
 801a658:	2201      	movs	r2, #1
 801a65a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a65e:	2200      	movs	r2, #0
 801a660:	f88d 201c 	strb.w	r2, [sp, #28]
 801a664:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a668:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a66c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a670:	ab0c      	add	r3, sp, #48	@ 0x30
 801a672:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a676:	f7f8 ff71 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a67a:	f003 ba50 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a67e:	4a29      	ldr	r2, [pc, #164]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a680:	6812      	ldr	r2, [r2, #0]
 801a682:	6912      	ldr	r2, [r2, #16]
 801a684:	68d2      	ldr	r2, [r2, #12]
 801a686:	3220      	adds	r2, #32
 801a688:	9208      	str	r2, [sp, #32]
 801a68a:	4a2f      	ldr	r2, [pc, #188]	@ (801a748 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32ac>)
 801a68c:	9209      	str	r2, [sp, #36]	@ 0x24
 801a68e:	4a2f      	ldr	r2, [pc, #188]	@ (801a74c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x32b0>)
 801a690:	920a      	str	r2, [sp, #40]	@ 0x28
 801a692:	2201      	movs	r2, #1
 801a694:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a698:	2200      	movs	r2, #0
 801a69a:	f88d 201c 	strb.w	r2, [sp, #28]
 801a69e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a6a2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a6a6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a6aa:	ab0c      	add	r3, sp, #48	@ 0x30
 801a6ac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a6b0:	f7f8 ff54 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a6b4:	f003 ba33 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a6b8:	4a1a      	ldr	r2, [pc, #104]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a6ba:	6812      	ldr	r2, [r2, #0]
 801a6bc:	6912      	ldr	r2, [r2, #16]
 801a6be:	68d2      	ldr	r2, [r2, #12]
 801a6c0:	3229      	adds	r2, #41	@ 0x29
 801a6c2:	9208      	str	r2, [sp, #32]
 801a6c4:	4a1a      	ldr	r2, [pc, #104]	@ (801a730 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3294>)
 801a6c6:	9209      	str	r2, [sp, #36]	@ 0x24
 801a6c8:	4a1a      	ldr	r2, [pc, #104]	@ (801a734 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3298>)
 801a6ca:	920a      	str	r2, [sp, #40]	@ 0x28
 801a6cc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a6d0:	2201      	movs	r2, #1
 801a6d2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a6d6:	2200      	movs	r2, #0
 801a6d8:	f8ad 2000 	strh.w	r2, [sp]
 801a6dc:	ab0c      	add	r3, sp, #48	@ 0x30
 801a6de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a6e2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a6e6:	f7f8 fde3 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a6ea:	f003 ba18 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a6ee:	4a0d      	ldr	r2, [pc, #52]	@ (801a724 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3288>)
 801a6f0:	6812      	ldr	r2, [r2, #0]
 801a6f2:	6912      	ldr	r2, [r2, #16]
 801a6f4:	68d2      	ldr	r2, [r2, #12]
 801a6f6:	322a      	adds	r2, #42	@ 0x2a
 801a6f8:	9208      	str	r2, [sp, #32]
 801a6fa:	4a0d      	ldr	r2, [pc, #52]	@ (801a730 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3294>)
 801a6fc:	9209      	str	r2, [sp, #36]	@ 0x24
 801a6fe:	4a0d      	ldr	r2, [pc, #52]	@ (801a734 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3298>)
 801a700:	920a      	str	r2, [sp, #40]	@ 0x28
 801a702:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a706:	2201      	movs	r2, #1
 801a708:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a70c:	2200      	movs	r2, #0
 801a70e:	f8ad 2000 	strh.w	r2, [sp]
 801a712:	ab0c      	add	r3, sp, #48	@ 0x30
 801a714:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a718:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a71c:	f7f8 fdc8 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a720:	f003 b9fd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a724:	200019cc 	.word	0x200019cc
 801a728:	080131b5 	.word	0x080131b5
 801a72c:	080141d1 	.word	0x080141d1
 801a730:	0801285d 	.word	0x0801285d
 801a734:	08012861 	.word	0x08012861
 801a738:	080128b5 	.word	0x080128b5
 801a73c:	080128b9 	.word	0x080128b9
 801a740:	080131ad 	.word	0x080131ad
 801a744:	080141e9 	.word	0x080141e9
 801a748:	0801283d 	.word	0x0801283d
 801a74c:	08012845 	.word	0x08012845
 801a750:	080131a5 	.word	0x080131a5
 801a754:	08014205 	.word	0x08014205
 801a758:	4aba      	ldr	r2, [pc, #744]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a75a:	6812      	ldr	r2, [r2, #0]
 801a75c:	6912      	ldr	r2, [r2, #16]
 801a75e:	68d2      	ldr	r2, [r2, #12]
 801a760:	322e      	adds	r2, #46	@ 0x2e
 801a762:	9208      	str	r2, [sp, #32]
 801a764:	4ab8      	ldr	r2, [pc, #736]	@ (801aa48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35ac>)
 801a766:	9209      	str	r2, [sp, #36]	@ 0x24
 801a768:	4ab8      	ldr	r2, [pc, #736]	@ (801aa4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35b0>)
 801a76a:	920a      	str	r2, [sp, #40]	@ 0x28
 801a76c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a770:	2201      	movs	r2, #1
 801a772:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a776:	2200      	movs	r2, #0
 801a778:	9200      	str	r2, [sp, #0]
 801a77a:	ab0c      	add	r3, sp, #48	@ 0x30
 801a77c:	9206      	str	r2, [sp, #24]
 801a77e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a782:	f7f8 fe49 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a786:	f003 b9ca 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a78a:	4aae      	ldr	r2, [pc, #696]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a78c:	6812      	ldr	r2, [r2, #0]
 801a78e:	6912      	ldr	r2, [r2, #16]
 801a790:	68d2      	ldr	r2, [r2, #12]
 801a792:	3230      	adds	r2, #48	@ 0x30
 801a794:	9208      	str	r2, [sp, #32]
 801a796:	4aac      	ldr	r2, [pc, #688]	@ (801aa48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35ac>)
 801a798:	9209      	str	r2, [sp, #36]	@ 0x24
 801a79a:	4aac      	ldr	r2, [pc, #688]	@ (801aa4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35b0>)
 801a79c:	920a      	str	r2, [sp, #40]	@ 0x28
 801a79e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a7a2:	2201      	movs	r2, #1
 801a7a4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a7a8:	2200      	movs	r2, #0
 801a7aa:	9200      	str	r2, [sp, #0]
 801a7ac:	ab0c      	add	r3, sp, #48	@ 0x30
 801a7ae:	9206      	str	r2, [sp, #24]
 801a7b0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a7b4:	f7f8 fe30 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a7b8:	f003 b9b1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a7bc:	4ba1      	ldr	r3, [pc, #644]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a7be:	681b      	ldr	r3, [r3, #0]
 801a7c0:	f002 bda4 	b.w	801d30c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5e70>
 801a7c4:	4a9f      	ldr	r2, [pc, #636]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a7c6:	6812      	ldr	r2, [r2, #0]
 801a7c8:	6912      	ldr	r2, [r2, #16]
 801a7ca:	3204      	adds	r2, #4
 801a7cc:	9208      	str	r2, [sp, #32]
 801a7ce:	4aa0      	ldr	r2, [pc, #640]	@ (801aa50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35b4>)
 801a7d0:	9209      	str	r2, [sp, #36]	@ 0x24
 801a7d2:	4aa0      	ldr	r2, [pc, #640]	@ (801aa54 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35b8>)
 801a7d4:	920a      	str	r2, [sp, #40]	@ 0x28
 801a7d6:	2201      	movs	r2, #1
 801a7d8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a7dc:	2200      	movs	r2, #0
 801a7de:	f88d 201c 	strb.w	r2, [sp, #28]
 801a7e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a7e6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a7ea:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a7ee:	ab0c      	add	r3, sp, #48	@ 0x30
 801a7f0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a7f4:	f7f8 ff8a 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a7f8:	f003 b991 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a7fc:	4a91      	ldr	r2, [pc, #580]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a7fe:	6812      	ldr	r2, [r2, #0]
 801a800:	6952      	ldr	r2, [r2, #20]
 801a802:	3208      	adds	r2, #8
 801a804:	9208      	str	r2, [sp, #32]
 801a806:	4a94      	ldr	r2, [pc, #592]	@ (801aa58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35bc>)
 801a808:	9209      	str	r2, [sp, #36]	@ 0x24
 801a80a:	4a94      	ldr	r2, [pc, #592]	@ (801aa5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c0>)
 801a80c:	920a      	str	r2, [sp, #40]	@ 0x28
 801a80e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801a812:	2201      	movs	r2, #1
 801a814:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a818:	2200      	movs	r2, #0
 801a81a:	f8ad 2000 	strh.w	r2, [sp]
 801a81e:	ab0c      	add	r3, sp, #48	@ 0x30
 801a820:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a824:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a828:	f7f9 f8fa 	bl	8013a20 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a82c:	f003 b977 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a830:	4a84      	ldr	r2, [pc, #528]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a832:	6812      	ldr	r2, [r2, #0]
 801a834:	6952      	ldr	r2, [r2, #20]
 801a836:	320c      	adds	r2, #12
 801a838:	9208      	str	r2, [sp, #32]
 801a83a:	4a89      	ldr	r2, [pc, #548]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a83c:	9209      	str	r2, [sp, #36]	@ 0x24
 801a83e:	4a89      	ldr	r2, [pc, #548]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a840:	920a      	str	r2, [sp, #40]	@ 0x28
 801a842:	2201      	movs	r2, #1
 801a844:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a848:	2200      	movs	r2, #0
 801a84a:	f88d 201c 	strb.w	r2, [sp, #28]
 801a84e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a852:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a856:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a85a:	ab0c      	add	r3, sp, #48	@ 0x30
 801a85c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a860:	f7f8 fe7c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a864:	f003 b95b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a868:	4a76      	ldr	r2, [pc, #472]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a86a:	6812      	ldr	r2, [r2, #0]
 801a86c:	6952      	ldr	r2, [r2, #20]
 801a86e:	3210      	adds	r2, #16
 801a870:	9208      	str	r2, [sp, #32]
 801a872:	4a7b      	ldr	r2, [pc, #492]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a874:	9209      	str	r2, [sp, #36]	@ 0x24
 801a876:	4a7b      	ldr	r2, [pc, #492]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a878:	920a      	str	r2, [sp, #40]	@ 0x28
 801a87a:	2201      	movs	r2, #1
 801a87c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a880:	2200      	movs	r2, #0
 801a882:	f88d 201c 	strb.w	r2, [sp, #28]
 801a886:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a88a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a88e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a892:	ab0c      	add	r3, sp, #48	@ 0x30
 801a894:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a898:	f7f8 fe60 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a89c:	f003 b93f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a8a0:	4a68      	ldr	r2, [pc, #416]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a8a2:	6812      	ldr	r2, [r2, #0]
 801a8a4:	6952      	ldr	r2, [r2, #20]
 801a8a6:	3214      	adds	r2, #20
 801a8a8:	9208      	str	r2, [sp, #32]
 801a8aa:	4a6d      	ldr	r2, [pc, #436]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a8ac:	9209      	str	r2, [sp, #36]	@ 0x24
 801a8ae:	4a6d      	ldr	r2, [pc, #436]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a8b0:	920a      	str	r2, [sp, #40]	@ 0x28
 801a8b2:	2201      	movs	r2, #1
 801a8b4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a8b8:	2200      	movs	r2, #0
 801a8ba:	f88d 201c 	strb.w	r2, [sp, #28]
 801a8be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a8c2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a8c6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a8ca:	ab0c      	add	r3, sp, #48	@ 0x30
 801a8cc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a8d0:	f7f8 fe44 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a8d4:	f003 b923 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a8d8:	4a5a      	ldr	r2, [pc, #360]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a8da:	6812      	ldr	r2, [r2, #0]
 801a8dc:	6952      	ldr	r2, [r2, #20]
 801a8de:	6852      	ldr	r2, [r2, #4]
 801a8e0:	9208      	str	r2, [sp, #32]
 801a8e2:	4a5f      	ldr	r2, [pc, #380]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a8e4:	9209      	str	r2, [sp, #36]	@ 0x24
 801a8e6:	4a5f      	ldr	r2, [pc, #380]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a8e8:	920a      	str	r2, [sp, #40]	@ 0x28
 801a8ea:	2201      	movs	r2, #1
 801a8ec:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a8f0:	2200      	movs	r2, #0
 801a8f2:	f88d 201c 	strb.w	r2, [sp, #28]
 801a8f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a8fa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a8fe:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a902:	ab0c      	add	r3, sp, #48	@ 0x30
 801a904:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a908:	f7f8 fe28 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a90c:	f003 b907 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a910:	4a4c      	ldr	r2, [pc, #304]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a912:	6812      	ldr	r2, [r2, #0]
 801a914:	6952      	ldr	r2, [r2, #20]
 801a916:	6852      	ldr	r2, [r2, #4]
 801a918:	3204      	adds	r2, #4
 801a91a:	9208      	str	r2, [sp, #32]
 801a91c:	4a50      	ldr	r2, [pc, #320]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a91e:	9209      	str	r2, [sp, #36]	@ 0x24
 801a920:	4a50      	ldr	r2, [pc, #320]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a922:	920a      	str	r2, [sp, #40]	@ 0x28
 801a924:	2201      	movs	r2, #1
 801a926:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a92a:	2200      	movs	r2, #0
 801a92c:	f88d 201c 	strb.w	r2, [sp, #28]
 801a930:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a934:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a938:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a93c:	ab0c      	add	r3, sp, #48	@ 0x30
 801a93e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a942:	f7f8 fe0b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a946:	f003 b8ea 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a94a:	4a3e      	ldr	r2, [pc, #248]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a94c:	6812      	ldr	r2, [r2, #0]
 801a94e:	6952      	ldr	r2, [r2, #20]
 801a950:	6852      	ldr	r2, [r2, #4]
 801a952:	3208      	adds	r2, #8
 801a954:	9208      	str	r2, [sp, #32]
 801a956:	4a42      	ldr	r2, [pc, #264]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a958:	9209      	str	r2, [sp, #36]	@ 0x24
 801a95a:	4a42      	ldr	r2, [pc, #264]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a95c:	920a      	str	r2, [sp, #40]	@ 0x28
 801a95e:	2201      	movs	r2, #1
 801a960:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a964:	2200      	movs	r2, #0
 801a966:	f88d 201c 	strb.w	r2, [sp, #28]
 801a96a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a96e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a972:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a976:	ab0c      	add	r3, sp, #48	@ 0x30
 801a978:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a97c:	f7f8 fdee 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a980:	f003 b8cd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a984:	4a2f      	ldr	r2, [pc, #188]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a986:	6812      	ldr	r2, [r2, #0]
 801a988:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801a98a:	6852      	ldr	r2, [r2, #4]
 801a98c:	9208      	str	r2, [sp, #32]
 801a98e:	4a34      	ldr	r2, [pc, #208]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a990:	9209      	str	r2, [sp, #36]	@ 0x24
 801a992:	4a34      	ldr	r2, [pc, #208]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a994:	920a      	str	r2, [sp, #40]	@ 0x28
 801a996:	2201      	movs	r2, #1
 801a998:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a99c:	2200      	movs	r2, #0
 801a99e:	f88d 201c 	strb.w	r2, [sp, #28]
 801a9a2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a9a6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a9aa:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a9ae:	ab0c      	add	r3, sp, #48	@ 0x30
 801a9b0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a9b4:	f7f8 fdd2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a9b8:	f003 b8b1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a9bc:	4a21      	ldr	r2, [pc, #132]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a9be:	6812      	ldr	r2, [r2, #0]
 801a9c0:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801a9c2:	6852      	ldr	r2, [r2, #4]
 801a9c4:	3204      	adds	r2, #4
 801a9c6:	9208      	str	r2, [sp, #32]
 801a9c8:	4a25      	ldr	r2, [pc, #148]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801a9ca:	9209      	str	r2, [sp, #36]	@ 0x24
 801a9cc:	4a25      	ldr	r2, [pc, #148]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801a9ce:	920a      	str	r2, [sp, #40]	@ 0x28
 801a9d0:	2201      	movs	r2, #1
 801a9d2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801a9d6:	2200      	movs	r2, #0
 801a9d8:	f88d 201c 	strb.w	r2, [sp, #28]
 801a9dc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801a9e0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801a9e4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801a9e8:	ab0c      	add	r3, sp, #48	@ 0x30
 801a9ea:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801a9ee:	f7f8 fdb5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801a9f2:	f003 b894 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801a9f6:	4a13      	ldr	r2, [pc, #76]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801a9f8:	6812      	ldr	r2, [r2, #0]
 801a9fa:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801a9fc:	6852      	ldr	r2, [r2, #4]
 801a9fe:	3208      	adds	r2, #8
 801aa00:	9208      	str	r2, [sp, #32]
 801aa02:	4a17      	ldr	r2, [pc, #92]	@ (801aa60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c4>)
 801aa04:	9209      	str	r2, [sp, #36]	@ 0x24
 801aa06:	4a17      	ldr	r2, [pc, #92]	@ (801aa64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35c8>)
 801aa08:	920a      	str	r2, [sp, #40]	@ 0x28
 801aa0a:	2201      	movs	r2, #1
 801aa0c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aa10:	2200      	movs	r2, #0
 801aa12:	f88d 201c 	strb.w	r2, [sp, #28]
 801aa16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801aa1a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801aa1e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801aa22:	ab0c      	add	r3, sp, #48	@ 0x30
 801aa24:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aa28:	f7f8 fd98 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aa2c:	f003 b877 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aa30:	4a04      	ldr	r2, [pc, #16]	@ (801aa44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x35a8>)
 801aa32:	6812      	ldr	r2, [r2, #0]
 801aa34:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801aa36:	4619      	mov	r1, r3
 801aa38:	7a10      	ldrb	r0, [r2, #8]
 801aa3a:	f7f9 fae9 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801aa3e:	f003 b86e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aa42:	bf00      	nop
 801aa44:	200019cc 	.word	0x200019cc
 801aa48:	080128f9 	.word	0x080128f9
 801aa4c:	080128fd 	.word	0x080128fd
 801aa50:	080128b5 	.word	0x080128b5
 801aa54:	080128b9 	.word	0x080128b9
 801aa58:	08012901 	.word	0x08012901
 801aa5c:	08012905 	.word	0x08012905
 801aa60:	0801283d 	.word	0x0801283d
 801aa64:	08012845 	.word	0x08012845
 801aa68:	4ab5      	ldr	r2, [pc, #724]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801aa6a:	6812      	ldr	r2, [r2, #0]
 801aa6c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801aa6e:	6812      	ldr	r2, [r2, #0]
 801aa70:	9208      	str	r2, [sp, #32]
 801aa72:	4ab4      	ldr	r2, [pc, #720]	@ (801ad44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a8>)
 801aa74:	9209      	str	r2, [sp, #36]	@ 0x24
 801aa76:	4ab4      	ldr	r2, [pc, #720]	@ (801ad48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38ac>)
 801aa78:	920a      	str	r2, [sp, #40]	@ 0x28
 801aa7a:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801aa7e:	2201      	movs	r2, #1
 801aa80:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aa84:	2200      	movs	r2, #0
 801aa86:	9200      	str	r2, [sp, #0]
 801aa88:	ab0c      	add	r3, sp, #48	@ 0x30
 801aa8a:	9206      	str	r2, [sp, #24]
 801aa8c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aa90:	f7f8 fcc2 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aa94:	f003 b843 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aa98:	4aa9      	ldr	r2, [pc, #676]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801aa9a:	6812      	ldr	r2, [r2, #0]
 801aa9c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801aa9e:	6812      	ldr	r2, [r2, #0]
 801aaa0:	9208      	str	r2, [sp, #32]
 801aaa2:	4aaa      	ldr	r2, [pc, #680]	@ (801ad4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b0>)
 801aaa4:	9209      	str	r2, [sp, #36]	@ 0x24
 801aaa6:	4aaa      	ldr	r2, [pc, #680]	@ (801ad50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b4>)
 801aaa8:	920a      	str	r2, [sp, #40]	@ 0x28
 801aaaa:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801aaae:	2201      	movs	r2, #1
 801aab0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aab4:	2200      	movs	r2, #0
 801aab6:	f8ad 2000 	strh.w	r2, [sp]
 801aaba:	ab0c      	add	r3, sp, #48	@ 0x30
 801aabc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801aac0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aac4:	f7f8 fbf4 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aac8:	f003 b829 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aacc:	4a9c      	ldr	r2, [pc, #624]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801aace:	6812      	ldr	r2, [r2, #0]
 801aad0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801aad2:	6812      	ldr	r2, [r2, #0]
 801aad4:	9208      	str	r2, [sp, #32]
 801aad6:	4a9f      	ldr	r2, [pc, #636]	@ (801ad54 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b8>)
 801aad8:	9209      	str	r2, [sp, #36]	@ 0x24
 801aada:	4a9f      	ldr	r2, [pc, #636]	@ (801ad58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38bc>)
 801aadc:	920a      	str	r2, [sp, #40]	@ 0x28
 801aade:	2201      	movs	r2, #1
 801aae0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aae4:	2200      	movs	r2, #0
 801aae6:	f88d 201c 	strb.w	r2, [sp, #28]
 801aaea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801aaee:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801aaf2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801aaf6:	ab0c      	add	r3, sp, #48	@ 0x30
 801aaf8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aafc:	f7f8 fd2e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ab00:	f003 b80d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ab04:	4a8e      	ldr	r2, [pc, #568]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ab06:	6812      	ldr	r2, [r2, #0]
 801ab08:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801ab0a:	6812      	ldr	r2, [r2, #0]
 801ab0c:	320b      	adds	r2, #11
 801ab0e:	9208      	str	r2, [sp, #32]
 801ab10:	4a92      	ldr	r2, [pc, #584]	@ (801ad5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c0>)
 801ab12:	9209      	str	r2, [sp, #36]	@ 0x24
 801ab14:	4a92      	ldr	r2, [pc, #584]	@ (801ad60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c4>)
 801ab16:	920a      	str	r2, [sp, #40]	@ 0x28
 801ab18:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ab1c:	2201      	movs	r2, #1
 801ab1e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ab22:	2200      	movs	r2, #0
 801ab24:	f8ad 2000 	strh.w	r2, [sp]
 801ab28:	ab0c      	add	r3, sp, #48	@ 0x30
 801ab2a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ab2e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ab32:	f7f8 fbbd 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ab36:	f002 bff2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ab3a:	4a81      	ldr	r2, [pc, #516]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ab3c:	6812      	ldr	r2, [r2, #0]
 801ab3e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801ab40:	6812      	ldr	r2, [r2, #0]
 801ab42:	320c      	adds	r2, #12
 801ab44:	9208      	str	r2, [sp, #32]
 801ab46:	4a85      	ldr	r2, [pc, #532]	@ (801ad5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c0>)
 801ab48:	9209      	str	r2, [sp, #36]	@ 0x24
 801ab4a:	4a85      	ldr	r2, [pc, #532]	@ (801ad60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c4>)
 801ab4c:	920a      	str	r2, [sp, #40]	@ 0x28
 801ab4e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ab52:	2201      	movs	r2, #1
 801ab54:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ab58:	2200      	movs	r2, #0
 801ab5a:	f8ad 2000 	strh.w	r2, [sp]
 801ab5e:	ab0c      	add	r3, sp, #48	@ 0x30
 801ab60:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ab64:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ab68:	f7f8 fba2 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ab6c:	f002 bfd7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ab70:	4a73      	ldr	r2, [pc, #460]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ab72:	6812      	ldr	r2, [r2, #0]
 801ab74:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801ab76:	6812      	ldr	r2, [r2, #0]
 801ab78:	9208      	str	r2, [sp, #32]
 801ab7a:	4a7a      	ldr	r2, [pc, #488]	@ (801ad64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c8>)
 801ab7c:	9209      	str	r2, [sp, #36]	@ 0x24
 801ab7e:	4a7a      	ldr	r2, [pc, #488]	@ (801ad68 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38cc>)
 801ab80:	920a      	str	r2, [sp, #40]	@ 0x28
 801ab82:	2201      	movs	r2, #1
 801ab84:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ab88:	2200      	movs	r2, #0
 801ab8a:	f88d 201c 	strb.w	r2, [sp, #28]
 801ab8e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ab92:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ab96:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ab9a:	ab0c      	add	r3, sp, #48	@ 0x30
 801ab9c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aba0:	f7f8 fc94 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aba4:	f002 bfbb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aba8:	4a65      	ldr	r2, [pc, #404]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801abaa:	6812      	ldr	r2, [r2, #0]
 801abac:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801abae:	4619      	mov	r1, r3
 801abb0:	7a10      	ldrb	r0, [r2, #8]
 801abb2:	f7f9 fa2d 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801abb6:	f002 bfb2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801abba:	4a61      	ldr	r2, [pc, #388]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801abbc:	6812      	ldr	r2, [r2, #0]
 801abbe:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801abc0:	6812      	ldr	r2, [r2, #0]
 801abc2:	9208      	str	r2, [sp, #32]
 801abc4:	4a5f      	ldr	r2, [pc, #380]	@ (801ad44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a8>)
 801abc6:	9209      	str	r2, [sp, #36]	@ 0x24
 801abc8:	4a5f      	ldr	r2, [pc, #380]	@ (801ad48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38ac>)
 801abca:	920a      	str	r2, [sp, #40]	@ 0x28
 801abcc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801abd0:	2201      	movs	r2, #1
 801abd2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801abd6:	2200      	movs	r2, #0
 801abd8:	9200      	str	r2, [sp, #0]
 801abda:	ab0c      	add	r3, sp, #48	@ 0x30
 801abdc:	9206      	str	r2, [sp, #24]
 801abde:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801abe2:	f7f8 fc19 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801abe6:	f002 bf9a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801abea:	4a55      	ldr	r2, [pc, #340]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801abec:	6812      	ldr	r2, [r2, #0]
 801abee:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801abf0:	6812      	ldr	r2, [r2, #0]
 801abf2:	9208      	str	r2, [sp, #32]
 801abf4:	4a55      	ldr	r2, [pc, #340]	@ (801ad4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b0>)
 801abf6:	9209      	str	r2, [sp, #36]	@ 0x24
 801abf8:	4a55      	ldr	r2, [pc, #340]	@ (801ad50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b4>)
 801abfa:	920a      	str	r2, [sp, #40]	@ 0x28
 801abfc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ac00:	2201      	movs	r2, #1
 801ac02:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ac06:	2200      	movs	r2, #0
 801ac08:	f8ad 2000 	strh.w	r2, [sp]
 801ac0c:	ab0c      	add	r3, sp, #48	@ 0x30
 801ac0e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ac12:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ac16:	f7f8 fb4b 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ac1a:	f002 bf80 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ac1e:	4a48      	ldr	r2, [pc, #288]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ac20:	6812      	ldr	r2, [r2, #0]
 801ac22:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801ac24:	6812      	ldr	r2, [r2, #0]
 801ac26:	9208      	str	r2, [sp, #32]
 801ac28:	4a4a      	ldr	r2, [pc, #296]	@ (801ad54 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38b8>)
 801ac2a:	9209      	str	r2, [sp, #36]	@ 0x24
 801ac2c:	4a4a      	ldr	r2, [pc, #296]	@ (801ad58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38bc>)
 801ac2e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ac30:	2201      	movs	r2, #1
 801ac32:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ac36:	2200      	movs	r2, #0
 801ac38:	f88d 201c 	strb.w	r2, [sp, #28]
 801ac3c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ac40:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ac44:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ac48:	ab0c      	add	r3, sp, #48	@ 0x30
 801ac4a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ac4e:	f7f8 fc85 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ac52:	f002 bf64 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ac56:	4a3a      	ldr	r2, [pc, #232]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ac58:	6812      	ldr	r2, [r2, #0]
 801ac5a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801ac5c:	6812      	ldr	r2, [r2, #0]
 801ac5e:	320b      	adds	r2, #11
 801ac60:	9208      	str	r2, [sp, #32]
 801ac62:	4a3e      	ldr	r2, [pc, #248]	@ (801ad5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c0>)
 801ac64:	9209      	str	r2, [sp, #36]	@ 0x24
 801ac66:	4a3e      	ldr	r2, [pc, #248]	@ (801ad60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c4>)
 801ac68:	920a      	str	r2, [sp, #40]	@ 0x28
 801ac6a:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ac6e:	2201      	movs	r2, #1
 801ac70:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ac74:	2200      	movs	r2, #0
 801ac76:	f8ad 2000 	strh.w	r2, [sp]
 801ac7a:	ab0c      	add	r3, sp, #48	@ 0x30
 801ac7c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ac80:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ac84:	f7f8 fb14 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ac88:	f002 bf49 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ac8c:	4a2c      	ldr	r2, [pc, #176]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ac8e:	6812      	ldr	r2, [r2, #0]
 801ac90:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801ac92:	6812      	ldr	r2, [r2, #0]
 801ac94:	320c      	adds	r2, #12
 801ac96:	9208      	str	r2, [sp, #32]
 801ac98:	4a30      	ldr	r2, [pc, #192]	@ (801ad5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c0>)
 801ac9a:	9209      	str	r2, [sp, #36]	@ 0x24
 801ac9c:	4a30      	ldr	r2, [pc, #192]	@ (801ad60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c4>)
 801ac9e:	920a      	str	r2, [sp, #40]	@ 0x28
 801aca0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801aca4:	2201      	movs	r2, #1
 801aca6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801acaa:	2200      	movs	r2, #0
 801acac:	f8ad 2000 	strh.w	r2, [sp]
 801acb0:	ab0c      	add	r3, sp, #48	@ 0x30
 801acb2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801acb6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801acba:	f7f8 faf9 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801acbe:	f002 bf2e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801acc2:	4a1f      	ldr	r2, [pc, #124]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801acc4:	6812      	ldr	r2, [r2, #0]
 801acc6:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801acc8:	6812      	ldr	r2, [r2, #0]
 801acca:	9208      	str	r2, [sp, #32]
 801accc:	4a25      	ldr	r2, [pc, #148]	@ (801ad64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38c8>)
 801acce:	9209      	str	r2, [sp, #36]	@ 0x24
 801acd0:	4a25      	ldr	r2, [pc, #148]	@ (801ad68 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38cc>)
 801acd2:	920a      	str	r2, [sp, #40]	@ 0x28
 801acd4:	2201      	movs	r2, #1
 801acd6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801acda:	2200      	movs	r2, #0
 801acdc:	f88d 201c 	strb.w	r2, [sp, #28]
 801ace0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ace4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ace8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801acec:	ab0c      	add	r3, sp, #48	@ 0x30
 801acee:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801acf2:	f7f8 fbeb 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801acf6:	f002 bf12 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801acfa:	4b11      	ldr	r3, [pc, #68]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801acfc:	6818      	ldr	r0, [r3, #0]
 801acfe:	f002 bdab 	b.w	801d858 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x63bc>
 801ad02:	4b0f      	ldr	r3, [pc, #60]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ad04:	6818      	ldr	r0, [r3, #0]
 801ad06:	f002 bdac 	b.w	801d862 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x63c6>
 801ad0a:	4a0d      	ldr	r2, [pc, #52]	@ (801ad40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38a4>)
 801ad0c:	6852      	ldr	r2, [r2, #4]
 801ad0e:	3250      	adds	r2, #80	@ 0x50
 801ad10:	9208      	str	r2, [sp, #32]
 801ad12:	4a16      	ldr	r2, [pc, #88]	@ (801ad6c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38d0>)
 801ad14:	9209      	str	r2, [sp, #36]	@ 0x24
 801ad16:	4a16      	ldr	r2, [pc, #88]	@ (801ad70 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38d4>)
 801ad18:	920a      	str	r2, [sp, #40]	@ 0x28
 801ad1a:	2201      	movs	r2, #1
 801ad1c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ad20:	2200      	movs	r2, #0
 801ad22:	f88d 201c 	strb.w	r2, [sp, #28]
 801ad26:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ad2a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ad2e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ad32:	ab0c      	add	r3, sp, #48	@ 0x30
 801ad34:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ad38:	f7f8 fd28 	bl	801378c <fibre_property_odrive_axis_error_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::Error> >, std::optional<ODriveIntf::AxisIntf::Error>, ODriveIntf::AxisIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ad3c:	f002 beef 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ad40:	200019cc 	.word	0x200019cc
 801ad44:	08013199 	.word	0x08013199
 801ad48:	08014219 	.word	0x08014219
 801ad4c:	08013191 	.word	0x08013191
 801ad50:	08014231 	.word	0x08014231
 801ad54:	0801283d 	.word	0x0801283d
 801ad58:	08012845 	.word	0x08012845
 801ad5c:	0801285d 	.word	0x0801285d
 801ad60:	08012861 	.word	0x08012861
 801ad64:	08013189 	.word	0x08013189
 801ad68:	08014249 	.word	0x08014249
 801ad6c:	08012881 	.word	0x08012881
 801ad70:	08012885 	.word	0x08012885
 801ad74:	4abb      	ldr	r2, [pc, #748]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ad76:	6852      	ldr	r2, [r2, #4]
 801ad78:	4619      	mov	r1, r3
 801ad7a:	f892 0054 	ldrb.w	r0, [r2, #84]	@ 0x54
 801ad7e:	f7f9 f947 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801ad82:	f002 becc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ad86:	4ab7      	ldr	r2, [pc, #732]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ad88:	6852      	ldr	r2, [r2, #4]
 801ad8a:	6f50      	ldr	r0, [r2, #116]	@ 0x74
 801ad8c:	685a      	ldr	r2, [r3, #4]
 801ad8e:	7800      	ldrb	r0, [r0, #0]
 801ad90:	4619      	mov	r1, r3
 801ad92:	f7fc fb69 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801ad96:	f002 bec2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ad9a:	4ab2      	ldr	r2, [pc, #712]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ad9c:	6852      	ldr	r2, [r2, #4]
 801ad9e:	3266      	adds	r2, #102	@ 0x66
 801ada0:	9208      	str	r2, [sp, #32]
 801ada2:	4ab1      	ldr	r2, [pc, #708]	@ (801b068 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bcc>)
 801ada4:	9209      	str	r2, [sp, #36]	@ 0x24
 801ada6:	4ab1      	ldr	r2, [pc, #708]	@ (801b06c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd0>)
 801ada8:	920a      	str	r2, [sp, #40]	@ 0x28
 801adaa:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801adae:	2201      	movs	r2, #1
 801adb0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801adb4:	2200      	movs	r2, #0
 801adb6:	f8ad 2000 	strh.w	r2, [sp]
 801adba:	ab0c      	add	r3, sp, #48	@ 0x30
 801adbc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801adc0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801adc4:	f7f8 ff84 	bl	8013cd0 <fibre_property_odrive_axis_axis_state_readwrite_exchange(std::optional<Property<ODriveIntf::AxisIntf::AxisState> >, std::optional<ODriveIntf::AxisIntf::AxisState>, ODriveIntf::AxisIntf::AxisState*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801adc8:	f002 bea9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801adcc:	4aa5      	ldr	r2, [pc, #660]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801adce:	6850      	ldr	r0, [r2, #4]
 801add0:	49a7      	ldr	r1, [pc, #668]	@ (801b070 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd4>)
 801add2:	2201      	movs	r2, #1
 801add4:	3078      	adds	r0, #120	@ 0x78
 801add6:	f002 bd70 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 801adda:	4aa2      	ldr	r2, [pc, #648]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801addc:	6850      	ldr	r0, [r2, #4]
 801adde:	685a      	ldr	r2, [r3, #4]
 801ade0:	f890 007c 	ldrb.w	r0, [r0, #124]	@ 0x7c
 801ade4:	4619      	mov	r1, r3
 801ade6:	f7fc fb3f 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801adea:	f002 be98 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801adee:	4a9d      	ldr	r2, [pc, #628]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801adf0:	6852      	ldr	r2, [r2, #4]
 801adf2:	327d      	adds	r2, #125	@ 0x7d
 801adf4:	9208      	str	r2, [sp, #32]
 801adf6:	4a9f      	ldr	r2, [pc, #636]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801adf8:	9209      	str	r2, [sp, #36]	@ 0x24
 801adfa:	4a9f      	ldr	r2, [pc, #636]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801adfc:	920a      	str	r2, [sp, #40]	@ 0x28
 801adfe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ae02:	2201      	movs	r2, #1
 801ae04:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ae08:	2200      	movs	r2, #0
 801ae0a:	f8ad 2000 	strh.w	r2, [sp]
 801ae0e:	ab0c      	add	r3, sp, #48	@ 0x30
 801ae10:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ae14:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ae18:	f7f8 fa4a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ae1c:	f002 be7f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ae20:	4a90      	ldr	r2, [pc, #576]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ae22:	6852      	ldr	r2, [r2, #4]
 801ae24:	68d2      	ldr	r2, [r2, #12]
 801ae26:	9208      	str	r2, [sp, #32]
 801ae28:	4a92      	ldr	r2, [pc, #584]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801ae2a:	9209      	str	r2, [sp, #36]	@ 0x24
 801ae2c:	4a92      	ldr	r2, [pc, #584]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801ae2e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ae30:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ae34:	2201      	movs	r2, #1
 801ae36:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ae3a:	2200      	movs	r2, #0
 801ae3c:	f8ad 2000 	strh.w	r2, [sp]
 801ae40:	ab0c      	add	r3, sp, #48	@ 0x30
 801ae42:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ae46:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ae4a:	f7f8 fa31 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ae4e:	f002 be66 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ae52:	4a84      	ldr	r2, [pc, #528]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ae54:	6852      	ldr	r2, [r2, #4]
 801ae56:	68d2      	ldr	r2, [r2, #12]
 801ae58:	3201      	adds	r2, #1
 801ae5a:	9208      	str	r2, [sp, #32]
 801ae5c:	4a85      	ldr	r2, [pc, #532]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801ae5e:	9209      	str	r2, [sp, #36]	@ 0x24
 801ae60:	4a85      	ldr	r2, [pc, #532]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801ae62:	920a      	str	r2, [sp, #40]	@ 0x28
 801ae64:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ae68:	2201      	movs	r2, #1
 801ae6a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ae6e:	2200      	movs	r2, #0
 801ae70:	f8ad 2000 	strh.w	r2, [sp]
 801ae74:	ab0c      	add	r3, sp, #48	@ 0x30
 801ae76:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ae7a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ae7e:	f7f8 fa17 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ae82:	f002 be4c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ae86:	4a77      	ldr	r2, [pc, #476]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801ae88:	6852      	ldr	r2, [r2, #4]
 801ae8a:	68d2      	ldr	r2, [r2, #12]
 801ae8c:	3202      	adds	r2, #2
 801ae8e:	9208      	str	r2, [sp, #32]
 801ae90:	4a78      	ldr	r2, [pc, #480]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801ae92:	9209      	str	r2, [sp, #36]	@ 0x24
 801ae94:	4a78      	ldr	r2, [pc, #480]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801ae96:	920a      	str	r2, [sp, #40]	@ 0x28
 801ae98:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ae9c:	2201      	movs	r2, #1
 801ae9e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aea2:	2200      	movs	r2, #0
 801aea4:	f8ad 2000 	strh.w	r2, [sp]
 801aea8:	ab0c      	add	r3, sp, #48	@ 0x30
 801aeaa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801aeae:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aeb2:	f7f8 f9fd 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aeb6:	f002 be32 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aeba:	4a6a      	ldr	r2, [pc, #424]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801aebc:	6852      	ldr	r2, [r2, #4]
 801aebe:	68d2      	ldr	r2, [r2, #12]
 801aec0:	3203      	adds	r2, #3
 801aec2:	9208      	str	r2, [sp, #32]
 801aec4:	4a6b      	ldr	r2, [pc, #428]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801aec6:	9209      	str	r2, [sp, #36]	@ 0x24
 801aec8:	4a6b      	ldr	r2, [pc, #428]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801aeca:	920a      	str	r2, [sp, #40]	@ 0x28
 801aecc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801aed0:	2201      	movs	r2, #1
 801aed2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801aed6:	2200      	movs	r2, #0
 801aed8:	f8ad 2000 	strh.w	r2, [sp]
 801aedc:	ab0c      	add	r3, sp, #48	@ 0x30
 801aede:	f8ad 2018 	strh.w	r2, [sp, #24]
 801aee2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801aee6:	f7f8 f9e3 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aeea:	f002 be18 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aeee:	4a5d      	ldr	r2, [pc, #372]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801aef0:	6852      	ldr	r2, [r2, #4]
 801aef2:	68d2      	ldr	r2, [r2, #12]
 801aef4:	3204      	adds	r2, #4
 801aef6:	9208      	str	r2, [sp, #32]
 801aef8:	4a5e      	ldr	r2, [pc, #376]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801aefa:	9209      	str	r2, [sp, #36]	@ 0x24
 801aefc:	4a5e      	ldr	r2, [pc, #376]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801aefe:	920a      	str	r2, [sp, #40]	@ 0x28
 801af00:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801af04:	2201      	movs	r2, #1
 801af06:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801af0a:	2200      	movs	r2, #0
 801af0c:	f8ad 2000 	strh.w	r2, [sp]
 801af10:	ab0c      	add	r3, sp, #48	@ 0x30
 801af12:	f8ad 2018 	strh.w	r2, [sp, #24]
 801af16:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801af1a:	f7f8 f9c9 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801af1e:	f002 bdfe 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801af22:	4a50      	ldr	r2, [pc, #320]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801af24:	6852      	ldr	r2, [r2, #4]
 801af26:	68d2      	ldr	r2, [r2, #12]
 801af28:	3205      	adds	r2, #5
 801af2a:	9208      	str	r2, [sp, #32]
 801af2c:	4a51      	ldr	r2, [pc, #324]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801af2e:	9209      	str	r2, [sp, #36]	@ 0x24
 801af30:	4a51      	ldr	r2, [pc, #324]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801af32:	920a      	str	r2, [sp, #40]	@ 0x28
 801af34:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801af38:	2201      	movs	r2, #1
 801af3a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801af3e:	2200      	movs	r2, #0
 801af40:	f8ad 2000 	strh.w	r2, [sp]
 801af44:	ab0c      	add	r3, sp, #48	@ 0x30
 801af46:	f8ad 2018 	strh.w	r2, [sp, #24]
 801af4a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801af4e:	f7f8 f9af 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801af52:	f002 bde4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801af56:	4a43      	ldr	r2, [pc, #268]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801af58:	6852      	ldr	r2, [r2, #4]
 801af5a:	68d2      	ldr	r2, [r2, #12]
 801af5c:	3206      	adds	r2, #6
 801af5e:	9208      	str	r2, [sp, #32]
 801af60:	4a44      	ldr	r2, [pc, #272]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801af62:	9209      	str	r2, [sp, #36]	@ 0x24
 801af64:	4a44      	ldr	r2, [pc, #272]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801af66:	920a      	str	r2, [sp, #40]	@ 0x28
 801af68:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801af6c:	2201      	movs	r2, #1
 801af6e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801af72:	2200      	movs	r2, #0
 801af74:	f8ad 2000 	strh.w	r2, [sp]
 801af78:	ab0c      	add	r3, sp, #48	@ 0x30
 801af7a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801af7e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801af82:	f7f8 f995 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801af86:	f002 bdca 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801af8a:	4a36      	ldr	r2, [pc, #216]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801af8c:	6852      	ldr	r2, [r2, #4]
 801af8e:	68d2      	ldr	r2, [r2, #12]
 801af90:	3207      	adds	r2, #7
 801af92:	9208      	str	r2, [sp, #32]
 801af94:	4a37      	ldr	r2, [pc, #220]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801af96:	9209      	str	r2, [sp, #36]	@ 0x24
 801af98:	4a37      	ldr	r2, [pc, #220]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801af9a:	920a      	str	r2, [sp, #40]	@ 0x28
 801af9c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801afa0:	2201      	movs	r2, #1
 801afa2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801afa6:	2200      	movs	r2, #0
 801afa8:	f8ad 2000 	strh.w	r2, [sp]
 801afac:	ab0c      	add	r3, sp, #48	@ 0x30
 801afae:	f8ad 2018 	strh.w	r2, [sp, #24]
 801afb2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801afb6:	f7f8 f97b 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801afba:	f002 bdb0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801afbe:	4a29      	ldr	r2, [pc, #164]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801afc0:	6852      	ldr	r2, [r2, #4]
 801afc2:	68d2      	ldr	r2, [r2, #12]
 801afc4:	3208      	adds	r2, #8
 801afc6:	9208      	str	r2, [sp, #32]
 801afc8:	4a2c      	ldr	r2, [pc, #176]	@ (801b07c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3be0>)
 801afca:	9209      	str	r2, [sp, #36]	@ 0x24
 801afcc:	4a2c      	ldr	r2, [pc, #176]	@ (801b080 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3be4>)
 801afce:	920a      	str	r2, [sp, #40]	@ 0x28
 801afd0:	2201      	movs	r2, #1
 801afd2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801afd6:	2200      	movs	r2, #0
 801afd8:	f88d 201c 	strb.w	r2, [sp, #28]
 801afdc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801afe0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801afe4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801afe8:	ab0c      	add	r3, sp, #48	@ 0x30
 801afea:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801afee:	f7f8 fab5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801aff2:	f002 bd94 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801aff6:	4a1b      	ldr	r2, [pc, #108]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801aff8:	6852      	ldr	r2, [r2, #4]
 801affa:	68d2      	ldr	r2, [r2, #12]
 801affc:	320c      	adds	r2, #12
 801affe:	9208      	str	r2, [sp, #32]
 801b000:	4a1e      	ldr	r2, [pc, #120]	@ (801b07c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3be0>)
 801b002:	9209      	str	r2, [sp, #36]	@ 0x24
 801b004:	4a1e      	ldr	r2, [pc, #120]	@ (801b080 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3be4>)
 801b006:	920a      	str	r2, [sp, #40]	@ 0x28
 801b008:	2201      	movs	r2, #1
 801b00a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b00e:	2200      	movs	r2, #0
 801b010:	f88d 201c 	strb.w	r2, [sp, #28]
 801b014:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b018:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b01c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b020:	ab0c      	add	r3, sp, #48	@ 0x30
 801b022:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b026:	f7f8 fa99 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b02a:	f002 bd78 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b02e:	4a0d      	ldr	r2, [pc, #52]	@ (801b064 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bc8>)
 801b030:	6852      	ldr	r2, [r2, #4]
 801b032:	68d2      	ldr	r2, [r2, #12]
 801b034:	3210      	adds	r2, #16
 801b036:	9208      	str	r2, [sp, #32]
 801b038:	4a0e      	ldr	r2, [pc, #56]	@ (801b074 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bd8>)
 801b03a:	9209      	str	r2, [sp, #36]	@ 0x24
 801b03c:	4a0e      	ldr	r2, [pc, #56]	@ (801b078 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3bdc>)
 801b03e:	920a      	str	r2, [sp, #40]	@ 0x28
 801b040:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b044:	2201      	movs	r2, #1
 801b046:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b04a:	2200      	movs	r2, #0
 801b04c:	f8ad 2000 	strh.w	r2, [sp]
 801b050:	ab0c      	add	r3, sp, #48	@ 0x30
 801b052:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b056:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b05a:	f7f8 f929 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b05e:	f002 bd5e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b062:	bf00      	nop
 801b064:	200019cc 	.word	0x200019cc
 801b068:	0801288d 	.word	0x0801288d
 801b06c:	08012891 	.word	0x08012891
 801b070:	08012865 	.word	0x08012865
 801b074:	0801285d 	.word	0x0801285d
 801b078:	08012861 	.word	0x08012861
 801b07c:	0801283d 	.word	0x0801283d
 801b080:	08012845 	.word	0x08012845
 801b084:	4ab0      	ldr	r2, [pc, #704]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b086:	6852      	ldr	r2, [r2, #4]
 801b088:	68d2      	ldr	r2, [r2, #12]
 801b08a:	9208      	str	r2, [sp, #32]
 801b08c:	4aaf      	ldr	r2, [pc, #700]	@ (801b34c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eb0>)
 801b08e:	9209      	str	r2, [sp, #36]	@ 0x24
 801b090:	4aaf      	ldr	r2, [pc, #700]	@ (801b350 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eb4>)
 801b092:	920a      	str	r2, [sp, #40]	@ 0x28
 801b094:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b098:	2201      	movs	r2, #1
 801b09a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b09e:	2200      	movs	r2, #0
 801b0a0:	9200      	str	r2, [sp, #0]
 801b0a2:	ab0c      	add	r3, sp, #48	@ 0x30
 801b0a4:	9206      	str	r2, [sp, #24]
 801b0a6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b0aa:	f7f8 f9b5 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b0ae:	f002 bd36 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b0b2:	4aa5      	ldr	r2, [pc, #660]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b0b4:	6852      	ldr	r2, [r2, #4]
 801b0b6:	68d2      	ldr	r2, [r2, #12]
 801b0b8:	9208      	str	r2, [sp, #32]
 801b0ba:	4aa6      	ldr	r2, [pc, #664]	@ (801b354 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eb8>)
 801b0bc:	9209      	str	r2, [sp, #36]	@ 0x24
 801b0be:	4aa6      	ldr	r2, [pc, #664]	@ (801b358 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ebc>)
 801b0c0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b0c2:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b0c6:	2201      	movs	r2, #1
 801b0c8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b0cc:	2200      	movs	r2, #0
 801b0ce:	9200      	str	r2, [sp, #0]
 801b0d0:	ab0c      	add	r3, sp, #48	@ 0x30
 801b0d2:	9206      	str	r2, [sp, #24]
 801b0d4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b0d8:	f7f8 f99e 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b0dc:	f002 bd1f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b0e0:	4a99      	ldr	r2, [pc, #612]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b0e2:	6852      	ldr	r2, [r2, #4]
 801b0e4:	68d2      	ldr	r2, [r2, #12]
 801b0e6:	3218      	adds	r2, #24
 801b0e8:	9208      	str	r2, [sp, #32]
 801b0ea:	4a9c      	ldr	r2, [pc, #624]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b0ec:	9209      	str	r2, [sp, #36]	@ 0x24
 801b0ee:	4a9c      	ldr	r2, [pc, #624]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b0f0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b0f2:	2201      	movs	r2, #1
 801b0f4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b0f8:	2200      	movs	r2, #0
 801b0fa:	f88d 201c 	strb.w	r2, [sp, #28]
 801b0fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b102:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b106:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b10a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b10c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b110:	f7f8 fa24 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b114:	f002 bd03 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b118:	4a8b      	ldr	r2, [pc, #556]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b11a:	6852      	ldr	r2, [r2, #4]
 801b11c:	68d2      	ldr	r2, [r2, #12]
 801b11e:	321c      	adds	r2, #28
 801b120:	9208      	str	r2, [sp, #32]
 801b122:	4a8e      	ldr	r2, [pc, #568]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b124:	9209      	str	r2, [sp, #36]	@ 0x24
 801b126:	4a8e      	ldr	r2, [pc, #568]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b128:	920a      	str	r2, [sp, #40]	@ 0x28
 801b12a:	2201      	movs	r2, #1
 801b12c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b130:	2200      	movs	r2, #0
 801b132:	f88d 201c 	strb.w	r2, [sp, #28]
 801b136:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b13a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b13e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b142:	ab0c      	add	r3, sp, #48	@ 0x30
 801b144:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b148:	f7f8 fa08 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b14c:	f002 bce7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b150:	4a7d      	ldr	r2, [pc, #500]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b152:	6852      	ldr	r2, [r2, #4]
 801b154:	68d2      	ldr	r2, [r2, #12]
 801b156:	3220      	adds	r2, #32
 801b158:	9208      	str	r2, [sp, #32]
 801b15a:	4a80      	ldr	r2, [pc, #512]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b15c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b15e:	4a80      	ldr	r2, [pc, #512]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b160:	920a      	str	r2, [sp, #40]	@ 0x28
 801b162:	2201      	movs	r2, #1
 801b164:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b168:	2200      	movs	r2, #0
 801b16a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b16e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b172:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b176:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b17a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b17c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b180:	f7f8 f9ec 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b184:	f002 bccb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b188:	4a6f      	ldr	r2, [pc, #444]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b18a:	6852      	ldr	r2, [r2, #4]
 801b18c:	68d2      	ldr	r2, [r2, #12]
 801b18e:	3224      	adds	r2, #36	@ 0x24
 801b190:	9208      	str	r2, [sp, #32]
 801b192:	4a72      	ldr	r2, [pc, #456]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b194:	9209      	str	r2, [sp, #36]	@ 0x24
 801b196:	4a72      	ldr	r2, [pc, #456]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b198:	920a      	str	r2, [sp, #40]	@ 0x28
 801b19a:	2201      	movs	r2, #1
 801b19c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b1a0:	2200      	movs	r2, #0
 801b1a2:	f88d 201c 	strb.w	r2, [sp, #28]
 801b1a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b1aa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b1ae:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b1b2:	ab0c      	add	r3, sp, #48	@ 0x30
 801b1b4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b1b8:	f7f8 f9d0 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b1bc:	f002 bcaf 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b1c0:	4a61      	ldr	r2, [pc, #388]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b1c2:	6852      	ldr	r2, [r2, #4]
 801b1c4:	68d2      	ldr	r2, [r2, #12]
 801b1c6:	3228      	adds	r2, #40	@ 0x28
 801b1c8:	9208      	str	r2, [sp, #32]
 801b1ca:	4a64      	ldr	r2, [pc, #400]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b1cc:	9209      	str	r2, [sp, #36]	@ 0x24
 801b1ce:	4a64      	ldr	r2, [pc, #400]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b1d0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b1d2:	2201      	movs	r2, #1
 801b1d4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b1d8:	2200      	movs	r2, #0
 801b1da:	f88d 201c 	strb.w	r2, [sp, #28]
 801b1de:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b1e2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b1e6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b1ea:	ab0c      	add	r3, sp, #48	@ 0x30
 801b1ec:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b1f0:	f7f8 f9b4 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b1f4:	f002 bc93 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b1f8:	4a53      	ldr	r2, [pc, #332]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b1fa:	6852      	ldr	r2, [r2, #4]
 801b1fc:	68d2      	ldr	r2, [r2, #12]
 801b1fe:	3234      	adds	r2, #52	@ 0x34
 801b200:	9208      	str	r2, [sp, #32]
 801b202:	4a56      	ldr	r2, [pc, #344]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b204:	9209      	str	r2, [sp, #36]	@ 0x24
 801b206:	4a56      	ldr	r2, [pc, #344]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b208:	920a      	str	r2, [sp, #40]	@ 0x28
 801b20a:	2201      	movs	r2, #1
 801b20c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b210:	2200      	movs	r2, #0
 801b212:	f88d 201c 	strb.w	r2, [sp, #28]
 801b216:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b21a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b21e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b222:	ab0c      	add	r3, sp, #48	@ 0x30
 801b224:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b228:	f7f8 f998 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b22c:	f002 bc77 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b230:	4a45      	ldr	r2, [pc, #276]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b232:	6852      	ldr	r2, [r2, #4]
 801b234:	68d2      	ldr	r2, [r2, #12]
 801b236:	3238      	adds	r2, #56	@ 0x38
 801b238:	9208      	str	r2, [sp, #32]
 801b23a:	4a48      	ldr	r2, [pc, #288]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b23c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b23e:	4a48      	ldr	r2, [pc, #288]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b240:	920a      	str	r2, [sp, #40]	@ 0x28
 801b242:	2201      	movs	r2, #1
 801b244:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b248:	2200      	movs	r2, #0
 801b24a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b24e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b252:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b256:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b25a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b25c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b260:	f7f8 f97c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b264:	f002 bc5b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b268:	4a37      	ldr	r2, [pc, #220]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b26a:	6852      	ldr	r2, [r2, #4]
 801b26c:	68d2      	ldr	r2, [r2, #12]
 801b26e:	323c      	adds	r2, #60	@ 0x3c
 801b270:	9208      	str	r2, [sp, #32]
 801b272:	4a3a      	ldr	r2, [pc, #232]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b274:	9209      	str	r2, [sp, #36]	@ 0x24
 801b276:	4a3a      	ldr	r2, [pc, #232]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b278:	920a      	str	r2, [sp, #40]	@ 0x28
 801b27a:	2201      	movs	r2, #1
 801b27c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b280:	2200      	movs	r2, #0
 801b282:	f88d 201c 	strb.w	r2, [sp, #28]
 801b286:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b28a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b28e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b292:	ab0c      	add	r3, sp, #48	@ 0x30
 801b294:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b298:	f7f8 f960 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b29c:	f002 bc3f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b2a0:	4a29      	ldr	r2, [pc, #164]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b2a2:	6852      	ldr	r2, [r2, #4]
 801b2a4:	68d2      	ldr	r2, [r2, #12]
 801b2a6:	3240      	adds	r2, #64	@ 0x40
 801b2a8:	9208      	str	r2, [sp, #32]
 801b2aa:	4a2c      	ldr	r2, [pc, #176]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b2ac:	9209      	str	r2, [sp, #36]	@ 0x24
 801b2ae:	4a2c      	ldr	r2, [pc, #176]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b2b0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b2b2:	2201      	movs	r2, #1
 801b2b4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b2b8:	2200      	movs	r2, #0
 801b2ba:	f88d 201c 	strb.w	r2, [sp, #28]
 801b2be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b2c2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b2c6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b2ca:	ab0c      	add	r3, sp, #48	@ 0x30
 801b2cc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b2d0:	f7f8 f944 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b2d4:	f002 bc23 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b2d8:	4a1b      	ldr	r2, [pc, #108]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b2da:	6852      	ldr	r2, [r2, #4]
 801b2dc:	68d2      	ldr	r2, [r2, #12]
 801b2de:	3244      	adds	r2, #68	@ 0x44
 801b2e0:	9208      	str	r2, [sp, #32]
 801b2e2:	4a1e      	ldr	r2, [pc, #120]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b2e4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b2e6:	4a1e      	ldr	r2, [pc, #120]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b2e8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b2ea:	2201      	movs	r2, #1
 801b2ec:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b2f0:	2200      	movs	r2, #0
 801b2f2:	f88d 201c 	strb.w	r2, [sp, #28]
 801b2f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b2fa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b2fe:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b302:	ab0c      	add	r3, sp, #48	@ 0x30
 801b304:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b308:	f7f8 f928 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b30c:	f002 bc07 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b310:	4a0d      	ldr	r2, [pc, #52]	@ (801b348 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3eac>)
 801b312:	6852      	ldr	r2, [r2, #4]
 801b314:	68d2      	ldr	r2, [r2, #12]
 801b316:	3248      	adds	r2, #72	@ 0x48
 801b318:	9208      	str	r2, [sp, #32]
 801b31a:	4a10      	ldr	r2, [pc, #64]	@ (801b35c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec0>)
 801b31c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b31e:	4a10      	ldr	r2, [pc, #64]	@ (801b360 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x3ec4>)
 801b320:	920a      	str	r2, [sp, #40]	@ 0x28
 801b322:	2201      	movs	r2, #1
 801b324:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b328:	2200      	movs	r2, #0
 801b32a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b32e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b332:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b336:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b33a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b33c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b340:	f7f8 f90c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b344:	f002 bbeb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b348:	200019cc 	.word	0x200019cc
 801b34c:	08013225 	.word	0x08013225
 801b350:	080140ad 	.word	0x080140ad
 801b354:	0801321d 	.word	0x0801321d
 801b358:	080140c5 	.word	0x080140c5
 801b35c:	0801283d 	.word	0x0801283d
 801b360:	08012845 	.word	0x08012845
 801b364:	4abc      	ldr	r2, [pc, #752]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b366:	6852      	ldr	r2, [r2, #4]
 801b368:	68d2      	ldr	r2, [r2, #12]
 801b36a:	324c      	adds	r2, #76	@ 0x4c
 801b36c:	9208      	str	r2, [sp, #32]
 801b36e:	4abb      	ldr	r2, [pc, #748]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b370:	9209      	str	r2, [sp, #36]	@ 0x24
 801b372:	4abb      	ldr	r2, [pc, #748]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b374:	920a      	str	r2, [sp, #40]	@ 0x28
 801b376:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b37a:	2201      	movs	r2, #1
 801b37c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b380:	2200      	movs	r2, #0
 801b382:	f8ad 2000 	strh.w	r2, [sp]
 801b386:	ab0c      	add	r3, sp, #48	@ 0x30
 801b388:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b38c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b390:	f7f7 ff8e 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b394:	f002 bbc3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b398:	4aaf      	ldr	r2, [pc, #700]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b39a:	6852      	ldr	r2, [r2, #4]
 801b39c:	68d2      	ldr	r2, [r2, #12]
 801b39e:	324d      	adds	r2, #77	@ 0x4d
 801b3a0:	9208      	str	r2, [sp, #32]
 801b3a2:	4aae      	ldr	r2, [pc, #696]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b3a4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b3a6:	4aae      	ldr	r2, [pc, #696]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b3a8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b3aa:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b3ae:	2201      	movs	r2, #1
 801b3b0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b3b4:	2200      	movs	r2, #0
 801b3b6:	f8ad 2000 	strh.w	r2, [sp]
 801b3ba:	ab0c      	add	r3, sp, #48	@ 0x30
 801b3bc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b3c0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b3c4:	f7f7 ff74 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b3c8:	f002 bba9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b3cc:	4aa2      	ldr	r2, [pc, #648]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b3ce:	6852      	ldr	r2, [r2, #4]
 801b3d0:	68d2      	ldr	r2, [r2, #12]
 801b3d2:	324e      	adds	r2, #78	@ 0x4e
 801b3d4:	9208      	str	r2, [sp, #32]
 801b3d6:	4aa1      	ldr	r2, [pc, #644]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b3d8:	9209      	str	r2, [sp, #36]	@ 0x24
 801b3da:	4aa1      	ldr	r2, [pc, #644]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b3dc:	920a      	str	r2, [sp, #40]	@ 0x28
 801b3de:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b3e2:	2201      	movs	r2, #1
 801b3e4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b3e8:	2200      	movs	r2, #0
 801b3ea:	f8ad 2000 	strh.w	r2, [sp]
 801b3ee:	ab0c      	add	r3, sp, #48	@ 0x30
 801b3f0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b3f4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b3f8:	f7f7 ff5a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b3fc:	f002 bb8f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b400:	4a95      	ldr	r2, [pc, #596]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b402:	6852      	ldr	r2, [r2, #4]
 801b404:	68d2      	ldr	r2, [r2, #12]
 801b406:	3250      	adds	r2, #80	@ 0x50
 801b408:	9208      	str	r2, [sp, #32]
 801b40a:	4a96      	ldr	r2, [pc, #600]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b40c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b40e:	4a96      	ldr	r2, [pc, #600]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b410:	920a      	str	r2, [sp, #40]	@ 0x28
 801b412:	2201      	movs	r2, #1
 801b414:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b418:	2200      	movs	r2, #0
 801b41a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b41e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b422:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b426:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b42a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b42c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b430:	f7f8 f894 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b434:	f002 bb73 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b438:	4a87      	ldr	r2, [pc, #540]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b43a:	6852      	ldr	r2, [r2, #4]
 801b43c:	68d2      	ldr	r2, [r2, #12]
 801b43e:	3254      	adds	r2, #84	@ 0x54
 801b440:	9208      	str	r2, [sp, #32]
 801b442:	4a88      	ldr	r2, [pc, #544]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b444:	9209      	str	r2, [sp, #36]	@ 0x24
 801b446:	4a88      	ldr	r2, [pc, #544]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b448:	920a      	str	r2, [sp, #40]	@ 0x28
 801b44a:	2201      	movs	r2, #1
 801b44c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b450:	2200      	movs	r2, #0
 801b452:	f88d 201c 	strb.w	r2, [sp, #28]
 801b456:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b45a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b45e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b462:	ab0c      	add	r3, sp, #48	@ 0x30
 801b464:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b468:	f7f8 f878 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b46c:	f002 bb57 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b470:	4a79      	ldr	r2, [pc, #484]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b472:	6852      	ldr	r2, [r2, #4]
 801b474:	68d2      	ldr	r2, [r2, #12]
 801b476:	3258      	adds	r2, #88	@ 0x58
 801b478:	9208      	str	r2, [sp, #32]
 801b47a:	4a7a      	ldr	r2, [pc, #488]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b47c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b47e:	4a7a      	ldr	r2, [pc, #488]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b480:	920a      	str	r2, [sp, #40]	@ 0x28
 801b482:	2201      	movs	r2, #1
 801b484:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b488:	2200      	movs	r2, #0
 801b48a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b48e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b492:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b496:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b49a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b49c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b4a0:	f7f8 f85c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b4a4:	f002 bb3b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b4a8:	4a6b      	ldr	r2, [pc, #428]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b4aa:	6852      	ldr	r2, [r2, #4]
 801b4ac:	68d2      	ldr	r2, [r2, #12]
 801b4ae:	325c      	adds	r2, #92	@ 0x5c
 801b4b0:	9208      	str	r2, [sp, #32]
 801b4b2:	4a6c      	ldr	r2, [pc, #432]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b4b4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b4b6:	4a6c      	ldr	r2, [pc, #432]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b4b8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b4ba:	2201      	movs	r2, #1
 801b4bc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b4c0:	2200      	movs	r2, #0
 801b4c2:	f88d 201c 	strb.w	r2, [sp, #28]
 801b4c6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b4ca:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b4ce:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b4d2:	ab0c      	add	r3, sp, #48	@ 0x30
 801b4d4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b4d8:	f7f8 f840 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b4dc:	f002 bb1f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b4e0:	4a5d      	ldr	r2, [pc, #372]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b4e2:	6852      	ldr	r2, [r2, #4]
 801b4e4:	68d2      	ldr	r2, [r2, #12]
 801b4e6:	3260      	adds	r2, #96	@ 0x60
 801b4e8:	9208      	str	r2, [sp, #32]
 801b4ea:	4a5e      	ldr	r2, [pc, #376]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b4ec:	9209      	str	r2, [sp, #36]	@ 0x24
 801b4ee:	4a5e      	ldr	r2, [pc, #376]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b4f0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b4f2:	2201      	movs	r2, #1
 801b4f4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b4f8:	2200      	movs	r2, #0
 801b4fa:	f88d 201c 	strb.w	r2, [sp, #28]
 801b4fe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b502:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b506:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b50a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b50c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b510:	f7f8 f824 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b514:	f002 bb03 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b518:	4a4f      	ldr	r2, [pc, #316]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b51a:	6852      	ldr	r2, [r2, #4]
 801b51c:	68d2      	ldr	r2, [r2, #12]
 801b51e:	3264      	adds	r2, #100	@ 0x64
 801b520:	9208      	str	r2, [sp, #32]
 801b522:	4a50      	ldr	r2, [pc, #320]	@ (801b664 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c8>)
 801b524:	9209      	str	r2, [sp, #36]	@ 0x24
 801b526:	4a50      	ldr	r2, [pc, #320]	@ (801b668 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41cc>)
 801b528:	920a      	str	r2, [sp, #40]	@ 0x28
 801b52a:	2201      	movs	r2, #1
 801b52c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b530:	2200      	movs	r2, #0
 801b532:	f88d 201c 	strb.w	r2, [sp, #28]
 801b536:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b53a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b53e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b542:	ab0c      	add	r3, sp, #48	@ 0x30
 801b544:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b548:	f7f8 f808 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b54c:	f002 bae7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b550:	4a41      	ldr	r2, [pc, #260]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b552:	6852      	ldr	r2, [r2, #4]
 801b554:	68d2      	ldr	r2, [r2, #12]
 801b556:	3268      	adds	r2, #104	@ 0x68
 801b558:	9208      	str	r2, [sp, #32]
 801b55a:	4a40      	ldr	r2, [pc, #256]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b55c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b55e:	4a40      	ldr	r2, [pc, #256]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b560:	920a      	str	r2, [sp, #40]	@ 0x28
 801b562:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b566:	2201      	movs	r2, #1
 801b568:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b56c:	2200      	movs	r2, #0
 801b56e:	f8ad 2000 	strh.w	r2, [sp]
 801b572:	ab0c      	add	r3, sp, #48	@ 0x30
 801b574:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b578:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b57c:	f7f7 fe98 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b580:	f002 bacd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b584:	4a34      	ldr	r2, [pc, #208]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b586:	6852      	ldr	r2, [r2, #4]
 801b588:	68d2      	ldr	r2, [r2, #12]
 801b58a:	3269      	adds	r2, #105	@ 0x69
 801b58c:	9208      	str	r2, [sp, #32]
 801b58e:	4a33      	ldr	r2, [pc, #204]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b590:	9209      	str	r2, [sp, #36]	@ 0x24
 801b592:	4a33      	ldr	r2, [pc, #204]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b594:	920a      	str	r2, [sp, #40]	@ 0x28
 801b596:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b59a:	2201      	movs	r2, #1
 801b59c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b5a0:	2200      	movs	r2, #0
 801b5a2:	f8ad 2000 	strh.w	r2, [sp]
 801b5a6:	ab0c      	add	r3, sp, #48	@ 0x30
 801b5a8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b5ac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b5b0:	f7f7 fe7e 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b5b4:	f002 bab3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b5b8:	4a27      	ldr	r2, [pc, #156]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b5ba:	6852      	ldr	r2, [r2, #4]
 801b5bc:	68d2      	ldr	r2, [r2, #12]
 801b5be:	326a      	adds	r2, #106	@ 0x6a
 801b5c0:	9208      	str	r2, [sp, #32]
 801b5c2:	4a26      	ldr	r2, [pc, #152]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b5c4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b5c6:	4a26      	ldr	r2, [pc, #152]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b5c8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b5ca:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b5ce:	2201      	movs	r2, #1
 801b5d0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b5d4:	2200      	movs	r2, #0
 801b5d6:	f8ad 2000 	strh.w	r2, [sp]
 801b5da:	ab0c      	add	r3, sp, #48	@ 0x30
 801b5dc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b5e0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b5e4:	f7f7 fe64 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b5e8:	f002 ba99 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b5ec:	4a1a      	ldr	r2, [pc, #104]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b5ee:	6852      	ldr	r2, [r2, #4]
 801b5f0:	68d2      	ldr	r2, [r2, #12]
 801b5f2:	326c      	adds	r2, #108	@ 0x6c
 801b5f4:	9208      	str	r2, [sp, #32]
 801b5f6:	4a1d      	ldr	r2, [pc, #116]	@ (801b66c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41d0>)
 801b5f8:	9209      	str	r2, [sp, #36]	@ 0x24
 801b5fa:	4a1d      	ldr	r2, [pc, #116]	@ (801b670 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41d4>)
 801b5fc:	920a      	str	r2, [sp, #40]	@ 0x28
 801b5fe:	2201      	movs	r2, #1
 801b600:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b604:	2200      	movs	r2, #0
 801b606:	f88d 201c 	strb.w	r2, [sp, #28]
 801b60a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b60e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b612:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b616:	ab0c      	add	r3, sp, #48	@ 0x30
 801b618:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b61c:	f7f7 ff56 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b620:	f002 ba7d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b624:	4a0c      	ldr	r2, [pc, #48]	@ (801b658 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41bc>)
 801b626:	6852      	ldr	r2, [r2, #4]
 801b628:	68d2      	ldr	r2, [r2, #12]
 801b62a:	3270      	adds	r2, #112	@ 0x70
 801b62c:	9208      	str	r2, [sp, #32]
 801b62e:	4a0b      	ldr	r2, [pc, #44]	@ (801b65c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c0>)
 801b630:	9209      	str	r2, [sp, #36]	@ 0x24
 801b632:	4a0b      	ldr	r2, [pc, #44]	@ (801b660 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x41c4>)
 801b634:	920a      	str	r2, [sp, #40]	@ 0x28
 801b636:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b63a:	2201      	movs	r2, #1
 801b63c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b640:	2200      	movs	r2, #0
 801b642:	f8ad 2000 	strh.w	r2, [sp]
 801b646:	ab0c      	add	r3, sp, #48	@ 0x30
 801b648:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b64c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b650:	f7f7 fe2e 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b654:	f002 ba63 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b658:	200019cc 	.word	0x200019cc
 801b65c:	0801285d 	.word	0x0801285d
 801b660:	08012861 	.word	0x08012861
 801b664:	0801283d 	.word	0x0801283d
 801b668:	08012845 	.word	0x08012845
 801b66c:	08012869 	.word	0x08012869
 801b670:	0801286d 	.word	0x0801286d
 801b674:	4ab9      	ldr	r2, [pc, #740]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b676:	6852      	ldr	r2, [r2, #4]
 801b678:	68d2      	ldr	r2, [r2, #12]
 801b67a:	3274      	adds	r2, #116	@ 0x74
 801b67c:	9208      	str	r2, [sp, #32]
 801b67e:	4ab8      	ldr	r2, [pc, #736]	@ (801b960 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c4>)
 801b680:	9209      	str	r2, [sp, #36]	@ 0x24
 801b682:	4ab8      	ldr	r2, [pc, #736]	@ (801b964 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c8>)
 801b684:	920a      	str	r2, [sp, #40]	@ 0x28
 801b686:	2201      	movs	r2, #1
 801b688:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b68c:	2200      	movs	r2, #0
 801b68e:	f88d 201c 	strb.w	r2, [sp, #28]
 801b692:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b696:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b69a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b69e:	ab0c      	add	r3, sp, #48	@ 0x30
 801b6a0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b6a4:	f7f7 ff12 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b6a8:	f002 ba39 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b6ac:	4aab      	ldr	r2, [pc, #684]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b6ae:	6852      	ldr	r2, [r2, #4]
 801b6b0:	68d2      	ldr	r2, [r2, #12]
 801b6b2:	3278      	adds	r2, #120	@ 0x78
 801b6b4:	9208      	str	r2, [sp, #32]
 801b6b6:	4aaa      	ldr	r2, [pc, #680]	@ (801b960 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c4>)
 801b6b8:	9209      	str	r2, [sp, #36]	@ 0x24
 801b6ba:	4aaa      	ldr	r2, [pc, #680]	@ (801b964 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c8>)
 801b6bc:	920a      	str	r2, [sp, #40]	@ 0x28
 801b6be:	2201      	movs	r2, #1
 801b6c0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b6c4:	2200      	movs	r2, #0
 801b6c6:	f88d 201c 	strb.w	r2, [sp, #28]
 801b6ca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b6ce:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b6d2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b6d6:	ab0c      	add	r3, sp, #48	@ 0x30
 801b6d8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b6dc:	f7f7 fef6 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b6e0:	f002 ba1d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b6e4:	4a9d      	ldr	r2, [pc, #628]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b6e6:	6852      	ldr	r2, [r2, #4]
 801b6e8:	69d2      	ldr	r2, [r2, #28]
 801b6ea:	3220      	adds	r2, #32
 801b6ec:	9208      	str	r2, [sp, #32]
 801b6ee:	4a9e      	ldr	r2, [pc, #632]	@ (801b968 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44cc>)
 801b6f0:	9209      	str	r2, [sp, #36]	@ 0x24
 801b6f2:	4a9e      	ldr	r2, [pc, #632]	@ (801b96c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d0>)
 801b6f4:	920a      	str	r2, [sp, #40]	@ 0x28
 801b6f6:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b6fa:	2201      	movs	r2, #1
 801b6fc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b700:	2200      	movs	r2, #0
 801b702:	f8ad 2000 	strh.w	r2, [sp]
 801b706:	ab0c      	add	r3, sp, #48	@ 0x30
 801b708:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b70c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b710:	f7f8 fa92 	bl	8013c38 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b714:	f002 ba03 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b718:	4a90      	ldr	r2, [pc, #576]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b71a:	6852      	ldr	r2, [r2, #4]
 801b71c:	69d0      	ldr	r0, [r2, #28]
 801b71e:	e070      	b.n	801b802 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4366>
 801b720:	4a8e      	ldr	r2, [pc, #568]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b722:	6852      	ldr	r2, [r2, #4]
 801b724:	69d2      	ldr	r2, [r2, #28]
 801b726:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b728:	9208      	str	r2, [sp, #32]
 801b72a:	4a91      	ldr	r2, [pc, #580]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b72c:	9209      	str	r2, [sp, #36]	@ 0x24
 801b72e:	4a91      	ldr	r2, [pc, #580]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b730:	920a      	str	r2, [sp, #40]	@ 0x28
 801b732:	2201      	movs	r2, #1
 801b734:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b738:	2200      	movs	r2, #0
 801b73a:	f88d 201c 	strb.w	r2, [sp, #28]
 801b73e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b742:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b746:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b74a:	ab0c      	add	r3, sp, #48	@ 0x30
 801b74c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b750:	f7f7 ff04 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b754:	f002 b9e3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b758:	4a80      	ldr	r2, [pc, #512]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b75a:	6852      	ldr	r2, [r2, #4]
 801b75c:	69d2      	ldr	r2, [r2, #28]
 801b75e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b760:	3204      	adds	r2, #4
 801b762:	9208      	str	r2, [sp, #32]
 801b764:	4a82      	ldr	r2, [pc, #520]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b766:	9209      	str	r2, [sp, #36]	@ 0x24
 801b768:	4a82      	ldr	r2, [pc, #520]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b76a:	920a      	str	r2, [sp, #40]	@ 0x28
 801b76c:	2201      	movs	r2, #1
 801b76e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b772:	2200      	movs	r2, #0
 801b774:	f88d 201c 	strb.w	r2, [sp, #28]
 801b778:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b77c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b780:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b784:	ab0c      	add	r3, sp, #48	@ 0x30
 801b786:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b78a:	f7f7 fee7 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b78e:	f002 b9c6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b792:	4a72      	ldr	r2, [pc, #456]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b794:	6852      	ldr	r2, [r2, #4]
 801b796:	69d2      	ldr	r2, [r2, #28]
 801b798:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b79a:	3208      	adds	r2, #8
 801b79c:	9208      	str	r2, [sp, #32]
 801b79e:	4a76      	ldr	r2, [pc, #472]	@ (801b978 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44dc>)
 801b7a0:	9209      	str	r2, [sp, #36]	@ 0x24
 801b7a2:	4a76      	ldr	r2, [pc, #472]	@ (801b97c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44e0>)
 801b7a4:	920a      	str	r2, [sp, #40]	@ 0x28
 801b7a6:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b7aa:	2201      	movs	r2, #1
 801b7ac:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b7b0:	2200      	movs	r2, #0
 801b7b2:	f8ad 2000 	strh.w	r2, [sp]
 801b7b6:	ab0c      	add	r3, sp, #48	@ 0x30
 801b7b8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b7bc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b7c0:	f7f7 fd76 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b7c4:	f002 b9ab 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b7c8:	4a64      	ldr	r2, [pc, #400]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b7ca:	6852      	ldr	r2, [r2, #4]
 801b7cc:	6a12      	ldr	r2, [r2, #32]
 801b7ce:	3220      	adds	r2, #32
 801b7d0:	9208      	str	r2, [sp, #32]
 801b7d2:	4a65      	ldr	r2, [pc, #404]	@ (801b968 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44cc>)
 801b7d4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b7d6:	4a65      	ldr	r2, [pc, #404]	@ (801b96c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d0>)
 801b7d8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b7da:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b7de:	2201      	movs	r2, #1
 801b7e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b7e4:	2200      	movs	r2, #0
 801b7e6:	f8ad 2000 	strh.w	r2, [sp]
 801b7ea:	ab0c      	add	r3, sp, #48	@ 0x30
 801b7ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b7f0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b7f4:	f7f8 fa20 	bl	8013c38 <fibre_property_odrive_thermistor_current_limiter_error_readwrite_exchange(std::optional<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >, std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>, ODriveIntf::ThermistorCurrentLimiterIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b7f8:	f002 b991 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b7fc:	4a57      	ldr	r2, [pc, #348]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b7fe:	6852      	ldr	r2, [r2, #4]
 801b800:	6a10      	ldr	r0, [r2, #32]
 801b802:	495f      	ldr	r1, [pc, #380]	@ (801b980 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44e4>)
 801b804:	2201      	movs	r2, #1
 801b806:	3010      	adds	r0, #16
 801b808:	f002 b96e 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801b80c:	4a53      	ldr	r2, [pc, #332]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b80e:	6852      	ldr	r2, [r2, #4]
 801b810:	6a12      	ldr	r2, [r2, #32]
 801b812:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b814:	9208      	str	r2, [sp, #32]
 801b816:	4a5b      	ldr	r2, [pc, #364]	@ (801b984 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44e8>)
 801b818:	9209      	str	r2, [sp, #36]	@ 0x24
 801b81a:	4a5b      	ldr	r2, [pc, #364]	@ (801b988 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44ec>)
 801b81c:	920a      	str	r2, [sp, #40]	@ 0x28
 801b81e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b822:	2201      	movs	r2, #1
 801b824:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b828:	2200      	movs	r2, #0
 801b82a:	9200      	str	r2, [sp, #0]
 801b82c:	ab0c      	add	r3, sp, #48	@ 0x30
 801b82e:	9206      	str	r2, [sp, #24]
 801b830:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b834:	f7f7 fdf0 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b838:	f002 b971 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b83c:	4a47      	ldr	r2, [pc, #284]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b83e:	6852      	ldr	r2, [r2, #4]
 801b840:	6a12      	ldr	r2, [r2, #32]
 801b842:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b844:	9208      	str	r2, [sp, #32]
 801b846:	4a4a      	ldr	r2, [pc, #296]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b848:	9209      	str	r2, [sp, #36]	@ 0x24
 801b84a:	4a4a      	ldr	r2, [pc, #296]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b84c:	920a      	str	r2, [sp, #40]	@ 0x28
 801b84e:	2201      	movs	r2, #1
 801b850:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b854:	2200      	movs	r2, #0
 801b856:	f88d 201c 	strb.w	r2, [sp, #28]
 801b85a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b85e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b862:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b866:	ab0c      	add	r3, sp, #48	@ 0x30
 801b868:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b86c:	f7f7 fe76 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b870:	f002 b955 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b874:	4a39      	ldr	r2, [pc, #228]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b876:	6852      	ldr	r2, [r2, #4]
 801b878:	6a12      	ldr	r2, [r2, #32]
 801b87a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b87c:	3204      	adds	r2, #4
 801b87e:	9208      	str	r2, [sp, #32]
 801b880:	4a3b      	ldr	r2, [pc, #236]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b882:	9209      	str	r2, [sp, #36]	@ 0x24
 801b884:	4a3b      	ldr	r2, [pc, #236]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b886:	920a      	str	r2, [sp, #40]	@ 0x28
 801b888:	2201      	movs	r2, #1
 801b88a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b88e:	2200      	movs	r2, #0
 801b890:	f88d 201c 	strb.w	r2, [sp, #28]
 801b894:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b898:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b89c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b8a0:	ab0c      	add	r3, sp, #48	@ 0x30
 801b8a2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b8a6:	f7f7 fe59 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b8aa:	f002 b938 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b8ae:	4a2b      	ldr	r2, [pc, #172]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b8b0:	6852      	ldr	r2, [r2, #4]
 801b8b2:	6a12      	ldr	r2, [r2, #32]
 801b8b4:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b8b6:	3208      	adds	r2, #8
 801b8b8:	9208      	str	r2, [sp, #32]
 801b8ba:	4a2d      	ldr	r2, [pc, #180]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b8bc:	9209      	str	r2, [sp, #36]	@ 0x24
 801b8be:	4a2d      	ldr	r2, [pc, #180]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b8c0:	920a      	str	r2, [sp, #40]	@ 0x28
 801b8c2:	2201      	movs	r2, #1
 801b8c4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b8c8:	2200      	movs	r2, #0
 801b8ca:	f88d 201c 	strb.w	r2, [sp, #28]
 801b8ce:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b8d2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b8d6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b8da:	ab0c      	add	r3, sp, #48	@ 0x30
 801b8dc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b8e0:	f7f7 fe3c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b8e4:	f002 b91b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b8e8:	4a1c      	ldr	r2, [pc, #112]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b8ea:	6852      	ldr	r2, [r2, #4]
 801b8ec:	6a12      	ldr	r2, [r2, #32]
 801b8ee:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b8f0:	320c      	adds	r2, #12
 801b8f2:	9208      	str	r2, [sp, #32]
 801b8f4:	4a1e      	ldr	r2, [pc, #120]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b8f6:	9209      	str	r2, [sp, #36]	@ 0x24
 801b8f8:	4a1e      	ldr	r2, [pc, #120]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b8fa:	920a      	str	r2, [sp, #40]	@ 0x28
 801b8fc:	2201      	movs	r2, #1
 801b8fe:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b902:	2200      	movs	r2, #0
 801b904:	f88d 201c 	strb.w	r2, [sp, #28]
 801b908:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b90c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b910:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b914:	ab0c      	add	r3, sp, #48	@ 0x30
 801b916:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b91a:	f7f7 fe1f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b91e:	f002 b8fe 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b922:	4a0e      	ldr	r2, [pc, #56]	@ (801b95c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44c0>)
 801b924:	6852      	ldr	r2, [r2, #4]
 801b926:	6a12      	ldr	r2, [r2, #32]
 801b928:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b92a:	3214      	adds	r2, #20
 801b92c:	9208      	str	r2, [sp, #32]
 801b92e:	4a10      	ldr	r2, [pc, #64]	@ (801b970 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d4>)
 801b930:	9209      	str	r2, [sp, #36]	@ 0x24
 801b932:	4a10      	ldr	r2, [pc, #64]	@ (801b974 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x44d8>)
 801b934:	920a      	str	r2, [sp, #40]	@ 0x28
 801b936:	2201      	movs	r2, #1
 801b938:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b93c:	2200      	movs	r2, #0
 801b93e:	f88d 201c 	strb.w	r2, [sp, #28]
 801b942:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b946:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b94a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b94e:	ab0c      	add	r3, sp, #48	@ 0x30
 801b950:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b954:	f7f7 fe02 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b958:	f002 b8e1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b95c:	200019cc 	.word	0x200019cc
 801b960:	08012869 	.word	0x08012869
 801b964:	0801286d 	.word	0x0801286d
 801b968:	08012899 	.word	0x08012899
 801b96c:	0801289d 	.word	0x0801289d
 801b970:	0801283d 	.word	0x0801283d
 801b974:	08012845 	.word	0x08012845
 801b978:	0801285d 	.word	0x0801285d
 801b97c:	08012861 	.word	0x08012861
 801b980:	08012835 	.word	0x08012835
 801b984:	08013215 	.word	0x08013215
 801b988:	080140dd 	.word	0x080140dd
 801b98c:	4abc      	ldr	r2, [pc, #752]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801b98e:	6852      	ldr	r2, [r2, #4]
 801b990:	6a12      	ldr	r2, [r2, #32]
 801b992:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b994:	3218      	adds	r2, #24
 801b996:	9208      	str	r2, [sp, #32]
 801b998:	4aba      	ldr	r2, [pc, #744]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801b99a:	9209      	str	r2, [sp, #36]	@ 0x24
 801b99c:	4aba      	ldr	r2, [pc, #744]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801b99e:	920a      	str	r2, [sp, #40]	@ 0x28
 801b9a0:	2201      	movs	r2, #1
 801b9a2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b9a6:	2200      	movs	r2, #0
 801b9a8:	f88d 201c 	strb.w	r2, [sp, #28]
 801b9ac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801b9b0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801b9b4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801b9b8:	ab0c      	add	r3, sp, #48	@ 0x30
 801b9ba:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b9be:	f7f7 fdcd 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b9c2:	f002 b8ac 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b9c6:	4aae      	ldr	r2, [pc, #696]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801b9c8:	6852      	ldr	r2, [r2, #4]
 801b9ca:	6a12      	ldr	r2, [r2, #32]
 801b9cc:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801b9ce:	321c      	adds	r2, #28
 801b9d0:	9208      	str	r2, [sp, #32]
 801b9d2:	4aae      	ldr	r2, [pc, #696]	@ (801bc8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47f0>)
 801b9d4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b9d6:	4aae      	ldr	r2, [pc, #696]	@ (801bc90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47f4>)
 801b9d8:	920a      	str	r2, [sp, #40]	@ 0x28
 801b9da:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801b9de:	2201      	movs	r2, #1
 801b9e0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801b9e4:	2200      	movs	r2, #0
 801b9e6:	f8ad 2000 	strh.w	r2, [sp]
 801b9ea:	ab0c      	add	r3, sp, #48	@ 0x30
 801b9ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b9f0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801b9f4:	f7f7 fc5c 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801b9f8:	f002 b891 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801b9fc:	4aa0      	ldr	r2, [pc, #640]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801b9fe:	6852      	ldr	r2, [r2, #4]
 801ba00:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801ba02:	3264      	adds	r2, #100	@ 0x64
 801ba04:	9208      	str	r2, [sp, #32]
 801ba06:	4aa3      	ldr	r2, [pc, #652]	@ (801bc94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47f8>)
 801ba08:	9209      	str	r2, [sp, #36]	@ 0x24
 801ba0a:	4aa3      	ldr	r2, [pc, #652]	@ (801bc98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47fc>)
 801ba0c:	920a      	str	r2, [sp, #40]	@ 0x28
 801ba0e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ba12:	2201      	movs	r2, #1
 801ba14:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ba18:	2200      	movs	r2, #0
 801ba1a:	9200      	str	r2, [sp, #0]
 801ba1c:	ab0c      	add	r3, sp, #48	@ 0x30
 801ba1e:	9206      	str	r2, [sp, #24]
 801ba20:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ba24:	f7f8 f8bc 	bl	8013ba0 <fibre_property_odrive_motor_error_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::Error> >, std::optional<ODriveIntf::MotorIntf::Error>, ODriveIntf::MotorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ba28:	f002 b879 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ba2c:	4a94      	ldr	r2, [pc, #592]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801ba2e:	6852      	ldr	r2, [r2, #4]
 801ba30:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801ba32:	685a      	ldr	r2, [r3, #4]
 801ba34:	f890 0066 	ldrb.w	r0, [r0, #102]	@ 0x66
 801ba38:	4619      	mov	r1, r3
 801ba3a:	f7fb fd15 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801ba3e:	f002 b86e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ba42:	4a8f      	ldr	r2, [pc, #572]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801ba44:	6852      	ldr	r2, [r2, #4]
 801ba46:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801ba48:	4619      	mov	r1, r3
 801ba4a:	f892 0067 	ldrb.w	r0, [r2, #103]	@ 0x67
 801ba4e:	f7f8 fadf 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801ba52:	f002 b864 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ba56:	4a8a      	ldr	r2, [pc, #552]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801ba58:	6852      	ldr	r2, [r2, #4]
 801ba5a:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801ba5c:	498f      	ldr	r1, [pc, #572]	@ (801bc9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4800>)
 801ba5e:	2201      	movs	r2, #1
 801ba60:	3068      	adds	r0, #104	@ 0x68
 801ba62:	f002 b841 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ba66:	4a86      	ldr	r2, [pc, #536]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801ba68:	6852      	ldr	r2, [r2, #4]
 801ba6a:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801ba6c:	498b      	ldr	r1, [pc, #556]	@ (801bc9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4800>)
 801ba6e:	2201      	movs	r2, #1
 801ba70:	306c      	adds	r0, #108	@ 0x6c
 801ba72:	f002 b839 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ba76:	4a82      	ldr	r2, [pc, #520]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801ba78:	6852      	ldr	r2, [r2, #4]
 801ba7a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801ba7c:	3270      	adds	r2, #112	@ 0x70
 801ba7e:	9208      	str	r2, [sp, #32]
 801ba80:	4a80      	ldr	r2, [pc, #512]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801ba82:	9209      	str	r2, [sp, #36]	@ 0x24
 801ba84:	4a80      	ldr	r2, [pc, #512]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801ba86:	920a      	str	r2, [sp, #40]	@ 0x28
 801ba88:	2201      	movs	r2, #1
 801ba8a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ba8e:	2200      	movs	r2, #0
 801ba90:	f88d 201c 	strb.w	r2, [sp, #28]
 801ba94:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ba98:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ba9c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801baa0:	ab0c      	add	r3, sp, #48	@ 0x30
 801baa2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801baa6:	f7f7 fd59 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801baaa:	f002 b838 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801baae:	4a74      	ldr	r2, [pc, #464]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bab0:	6852      	ldr	r2, [r2, #4]
 801bab2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bab4:	3274      	adds	r2, #116	@ 0x74
 801bab6:	9208      	str	r2, [sp, #32]
 801bab8:	4a72      	ldr	r2, [pc, #456]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801baba:	9209      	str	r2, [sp, #36]	@ 0x24
 801babc:	4a72      	ldr	r2, [pc, #456]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801babe:	920a      	str	r2, [sp, #40]	@ 0x28
 801bac0:	2201      	movs	r2, #1
 801bac2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bac6:	2200      	movs	r2, #0
 801bac8:	f88d 201c 	strb.w	r2, [sp, #28]
 801bacc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bad0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bad4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bad8:	ab0c      	add	r3, sp, #48	@ 0x30
 801bada:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bade:	f7f7 fd3d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bae2:	f002 b81c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bae6:	4a66      	ldr	r2, [pc, #408]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bae8:	6852      	ldr	r2, [r2, #4]
 801baea:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801baec:	3278      	adds	r2, #120	@ 0x78
 801baee:	9208      	str	r2, [sp, #32]
 801baf0:	4a64      	ldr	r2, [pc, #400]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801baf2:	9209      	str	r2, [sp, #36]	@ 0x24
 801baf4:	4a64      	ldr	r2, [pc, #400]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801baf6:	920a      	str	r2, [sp, #40]	@ 0x28
 801baf8:	2201      	movs	r2, #1
 801bafa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bafe:	2200      	movs	r2, #0
 801bb00:	f88d 201c 	strb.w	r2, [sp, #28]
 801bb04:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bb08:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bb0c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bb10:	ab0c      	add	r3, sp, #48	@ 0x30
 801bb12:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bb16:	f7f7 fd21 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bb1a:	f002 b800 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bb1e:	4a58      	ldr	r2, [pc, #352]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bb20:	6852      	ldr	r2, [r2, #4]
 801bb22:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bb24:	495d      	ldr	r1, [pc, #372]	@ (801bc9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4800>)
 801bb26:	2201      	movs	r2, #1
 801bb28:	30e8      	adds	r0, #232	@ 0xe8
 801bb2a:	f001 bfdd 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801bb2e:	4a54      	ldr	r2, [pc, #336]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bb30:	6852      	ldr	r2, [r2, #4]
 801bb32:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bb34:	327c      	adds	r2, #124	@ 0x7c
 801bb36:	9208      	str	r2, [sp, #32]
 801bb38:	4a52      	ldr	r2, [pc, #328]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bb3a:	9209      	str	r2, [sp, #36]	@ 0x24
 801bb3c:	4a52      	ldr	r2, [pc, #328]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bb3e:	920a      	str	r2, [sp, #40]	@ 0x28
 801bb40:	2201      	movs	r2, #1
 801bb42:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bb46:	2200      	movs	r2, #0
 801bb48:	f88d 201c 	strb.w	r2, [sp, #28]
 801bb4c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bb50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bb54:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bb58:	ab0c      	add	r3, sp, #48	@ 0x30
 801bb5a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bb5e:	f7f7 fcfd 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bb62:	f001 bfdc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bb66:	4a46      	ldr	r2, [pc, #280]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bb68:	6852      	ldr	r2, [r2, #4]
 801bb6a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bb6c:	3280      	adds	r2, #128	@ 0x80
 801bb6e:	9208      	str	r2, [sp, #32]
 801bb70:	4a44      	ldr	r2, [pc, #272]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bb72:	9209      	str	r2, [sp, #36]	@ 0x24
 801bb74:	4a44      	ldr	r2, [pc, #272]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bb76:	920a      	str	r2, [sp, #40]	@ 0x28
 801bb78:	2201      	movs	r2, #1
 801bb7a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bb7e:	2200      	movs	r2, #0
 801bb80:	f88d 201c 	strb.w	r2, [sp, #28]
 801bb84:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bb88:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bb8c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bb90:	ab0c      	add	r3, sp, #48	@ 0x30
 801bb92:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bb96:	f7f7 fce1 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bb9a:	f001 bfc0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bb9e:	4a38      	ldr	r2, [pc, #224]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bba0:	6852      	ldr	r2, [r2, #4]
 801bba2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bba4:	3284      	adds	r2, #132	@ 0x84
 801bba6:	9208      	str	r2, [sp, #32]
 801bba8:	4a36      	ldr	r2, [pc, #216]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bbaa:	9209      	str	r2, [sp, #36]	@ 0x24
 801bbac:	4a36      	ldr	r2, [pc, #216]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bbae:	920a      	str	r2, [sp, #40]	@ 0x28
 801bbb0:	2201      	movs	r2, #1
 801bbb2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bbb6:	2200      	movs	r2, #0
 801bbb8:	f88d 201c 	strb.w	r2, [sp, #28]
 801bbbc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bbc0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bbc4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bbc8:	ab0c      	add	r3, sp, #48	@ 0x30
 801bbca:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bbce:	f7f7 fcc5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bbd2:	f001 bfa4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bbd6:	4a2a      	ldr	r2, [pc, #168]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bbd8:	6852      	ldr	r2, [r2, #4]
 801bbda:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bbdc:	3288      	adds	r2, #136	@ 0x88
 801bbde:	9208      	str	r2, [sp, #32]
 801bbe0:	4a28      	ldr	r2, [pc, #160]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bbe2:	9209      	str	r2, [sp, #36]	@ 0x24
 801bbe4:	4a28      	ldr	r2, [pc, #160]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bbe6:	920a      	str	r2, [sp, #40]	@ 0x28
 801bbe8:	2201      	movs	r2, #1
 801bbea:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bbee:	2200      	movs	r2, #0
 801bbf0:	f88d 201c 	strb.w	r2, [sp, #28]
 801bbf4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bbf8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bbfc:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bc00:	ab0c      	add	r3, sp, #48	@ 0x30
 801bc02:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bc06:	f7f7 fca9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bc0a:	f001 bf88 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bc0e:	4a1c      	ldr	r2, [pc, #112]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bc10:	6852      	ldr	r2, [r2, #4]
 801bc12:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bc14:	328c      	adds	r2, #140	@ 0x8c
 801bc16:	9208      	str	r2, [sp, #32]
 801bc18:	4a1a      	ldr	r2, [pc, #104]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bc1a:	9209      	str	r2, [sp, #36]	@ 0x24
 801bc1c:	4a1a      	ldr	r2, [pc, #104]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bc1e:	920a      	str	r2, [sp, #40]	@ 0x28
 801bc20:	2201      	movs	r2, #1
 801bc22:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bc26:	2200      	movs	r2, #0
 801bc28:	f88d 201c 	strb.w	r2, [sp, #28]
 801bc2c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bc30:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bc34:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bc38:	ab0c      	add	r3, sp, #48	@ 0x30
 801bc3a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bc3e:	f7f7 fc8d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bc42:	f001 bf6c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bc46:	4a0e      	ldr	r2, [pc, #56]	@ (801bc80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e4>)
 801bc48:	6852      	ldr	r2, [r2, #4]
 801bc4a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bc4c:	3290      	adds	r2, #144	@ 0x90
 801bc4e:	9208      	str	r2, [sp, #32]
 801bc50:	4a0c      	ldr	r2, [pc, #48]	@ (801bc84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47e8>)
 801bc52:	9209      	str	r2, [sp, #36]	@ 0x24
 801bc54:	4a0c      	ldr	r2, [pc, #48]	@ (801bc88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x47ec>)
 801bc56:	920a      	str	r2, [sp, #40]	@ 0x28
 801bc58:	2201      	movs	r2, #1
 801bc5a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bc5e:	2200      	movs	r2, #0
 801bc60:	f88d 201c 	strb.w	r2, [sp, #28]
 801bc64:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bc68:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bc6c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bc70:	ab0c      	add	r3, sp, #48	@ 0x30
 801bc72:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bc76:	f7f7 fc71 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bc7a:	f001 bf50 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bc7e:	bf00      	nop
 801bc80:	200019cc 	.word	0x200019cc
 801bc84:	0801283d 	.word	0x0801283d
 801bc88:	08012845 	.word	0x08012845
 801bc8c:	0801285d 	.word	0x0801285d
 801bc90:	08012861 	.word	0x08012861
 801bc94:	080128a1 	.word	0x080128a1
 801bc98:	080128a5 	.word	0x080128a5
 801bc9c:	08012835 	.word	0x08012835
 801bca0:	4ab9      	ldr	r2, [pc, #740]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bca2:	6852      	ldr	r2, [r2, #4]
 801bca4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bca6:	3294      	adds	r2, #148	@ 0x94
 801bca8:	9208      	str	r2, [sp, #32]
 801bcaa:	4ab8      	ldr	r2, [pc, #736]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bcac:	9209      	str	r2, [sp, #36]	@ 0x24
 801bcae:	4ab8      	ldr	r2, [pc, #736]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bcb0:	920a      	str	r2, [sp, #40]	@ 0x28
 801bcb2:	2201      	movs	r2, #1
 801bcb4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bcb8:	2200      	movs	r2, #0
 801bcba:	f88d 201c 	strb.w	r2, [sp, #28]
 801bcbe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bcc2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bcc6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bcca:	ab0c      	add	r3, sp, #48	@ 0x30
 801bccc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bcd0:	f7f7 fc44 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bcd4:	f001 bf23 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bcd8:	4aab      	ldr	r2, [pc, #684]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bcda:	6852      	ldr	r2, [r2, #4]
 801bcdc:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bcde:	3298      	adds	r2, #152	@ 0x98
 801bce0:	9208      	str	r2, [sp, #32]
 801bce2:	4aaa      	ldr	r2, [pc, #680]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bce4:	9209      	str	r2, [sp, #36]	@ 0x24
 801bce6:	4aaa      	ldr	r2, [pc, #680]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bce8:	920a      	str	r2, [sp, #40]	@ 0x28
 801bcea:	2201      	movs	r2, #1
 801bcec:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bcf0:	2200      	movs	r2, #0
 801bcf2:	f88d 201c 	strb.w	r2, [sp, #28]
 801bcf6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bcfa:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bcfe:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bd02:	ab0c      	add	r3, sp, #48	@ 0x30
 801bd04:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bd08:	f7f7 fc28 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bd0c:	f001 bf07 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bd10:	4a9d      	ldr	r2, [pc, #628]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bd12:	6852      	ldr	r2, [r2, #4]
 801bd14:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bd16:	499f      	ldr	r1, [pc, #636]	@ (801bf94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af8>)
 801bd18:	2201      	movs	r2, #1
 801bd1a:	309c      	adds	r0, #156	@ 0x9c
 801bd1c:	f001 bee4 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801bd20:	4a99      	ldr	r2, [pc, #612]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bd22:	6852      	ldr	r2, [r2, #4]
 801bd24:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bd26:	32a0      	adds	r2, #160	@ 0xa0
 801bd28:	9208      	str	r2, [sp, #32]
 801bd2a:	4a98      	ldr	r2, [pc, #608]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bd2c:	9209      	str	r2, [sp, #36]	@ 0x24
 801bd2e:	4a98      	ldr	r2, [pc, #608]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bd30:	920a      	str	r2, [sp, #40]	@ 0x28
 801bd32:	2201      	movs	r2, #1
 801bd34:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bd38:	2200      	movs	r2, #0
 801bd3a:	f88d 201c 	strb.w	r2, [sp, #28]
 801bd3e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bd42:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bd46:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bd4a:	ab0c      	add	r3, sp, #48	@ 0x30
 801bd4c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bd50:	f7f7 fc04 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bd54:	f001 bee3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bd58:	4a8b      	ldr	r2, [pc, #556]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bd5a:	6852      	ldr	r2, [r2, #4]
 801bd5c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bd5e:	32a4      	adds	r2, #164	@ 0xa4
 801bd60:	9208      	str	r2, [sp, #32]
 801bd62:	4a8a      	ldr	r2, [pc, #552]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bd64:	9209      	str	r2, [sp, #36]	@ 0x24
 801bd66:	4a8a      	ldr	r2, [pc, #552]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bd68:	920a      	str	r2, [sp, #40]	@ 0x28
 801bd6a:	2201      	movs	r2, #1
 801bd6c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bd70:	2200      	movs	r2, #0
 801bd72:	f88d 201c 	strb.w	r2, [sp, #28]
 801bd76:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bd7a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bd7e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bd82:	ab0c      	add	r3, sp, #48	@ 0x30
 801bd84:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bd88:	f7f7 fbe8 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bd8c:	f001 bec7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bd90:	4a7d      	ldr	r2, [pc, #500]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bd92:	6852      	ldr	r2, [r2, #4]
 801bd94:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bd96:	32a8      	adds	r2, #168	@ 0xa8
 801bd98:	9208      	str	r2, [sp, #32]
 801bd9a:	4a7c      	ldr	r2, [pc, #496]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bd9c:	9209      	str	r2, [sp, #36]	@ 0x24
 801bd9e:	4a7c      	ldr	r2, [pc, #496]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bda0:	920a      	str	r2, [sp, #40]	@ 0x28
 801bda2:	2201      	movs	r2, #1
 801bda4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bda8:	2200      	movs	r2, #0
 801bdaa:	f88d 201c 	strb.w	r2, [sp, #28]
 801bdae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bdb2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bdb6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bdba:	ab0c      	add	r3, sp, #48	@ 0x30
 801bdbc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bdc0:	f7f7 fbcc 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bdc4:	f001 beab 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bdc8:	4a6f      	ldr	r2, [pc, #444]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bdca:	6852      	ldr	r2, [r2, #4]
 801bdcc:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bdce:	4971      	ldr	r1, [pc, #452]	@ (801bf94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af8>)
 801bdd0:	2201      	movs	r2, #1
 801bdd2:	30ac      	adds	r0, #172	@ 0xac
 801bdd4:	f001 be88 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801bdd8:	4a6b      	ldr	r2, [pc, #428]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bdda:	6852      	ldr	r2, [r2, #4]
 801bddc:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bdde:	496d      	ldr	r1, [pc, #436]	@ (801bf94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af8>)
 801bde0:	2201      	movs	r2, #1
 801bde2:	30b0      	adds	r0, #176	@ 0xb0
 801bde4:	f001 be80 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801bde8:	4a67      	ldr	r2, [pc, #412]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bdea:	6852      	ldr	r2, [r2, #4]
 801bdec:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bdee:	32b4      	adds	r2, #180	@ 0xb4
 801bdf0:	9208      	str	r2, [sp, #32]
 801bdf2:	4a66      	ldr	r2, [pc, #408]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801bdf4:	9209      	str	r2, [sp, #36]	@ 0x24
 801bdf6:	4a66      	ldr	r2, [pc, #408]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801bdf8:	920a      	str	r2, [sp, #40]	@ 0x28
 801bdfa:	2201      	movs	r2, #1
 801bdfc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801be00:	2200      	movs	r2, #0
 801be02:	f88d 201c 	strb.w	r2, [sp, #28]
 801be06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801be0a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801be0e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801be12:	ab0c      	add	r3, sp, #48	@ 0x30
 801be14:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801be18:	f7f7 fba0 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801be1c:	f001 be7f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801be20:	4a59      	ldr	r2, [pc, #356]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801be22:	6852      	ldr	r2, [r2, #4]
 801be24:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801be26:	495b      	ldr	r1, [pc, #364]	@ (801bf94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af8>)
 801be28:	2201      	movs	r2, #1
 801be2a:	30b8      	adds	r0, #184	@ 0xb8
 801be2c:	f001 be5c 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801be30:	4a55      	ldr	r2, [pc, #340]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801be32:	6852      	ldr	r2, [r2, #4]
 801be34:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801be36:	32bc      	adds	r2, #188	@ 0xbc
 801be38:	9208      	str	r2, [sp, #32]
 801be3a:	4a54      	ldr	r2, [pc, #336]	@ (801bf8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af0>)
 801be3c:	9209      	str	r2, [sp, #36]	@ 0x24
 801be3e:	4a54      	ldr	r2, [pc, #336]	@ (801bf90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4af4>)
 801be40:	920a      	str	r2, [sp, #40]	@ 0x28
 801be42:	2201      	movs	r2, #1
 801be44:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801be48:	2200      	movs	r2, #0
 801be4a:	f88d 201c 	strb.w	r2, [sp, #28]
 801be4e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801be52:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801be56:	e88d 0003 	stmia.w	sp, {r0, r1}
 801be5a:	ab0c      	add	r3, sp, #48	@ 0x30
 801be5c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801be60:	f7f7 fb7c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801be64:	f001 be5b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801be68:	4a47      	ldr	r2, [pc, #284]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801be6a:	6852      	ldr	r2, [r2, #4]
 801be6c:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801be6e:	685a      	ldr	r2, [r3, #4]
 801be70:	f8b0 00c0 	ldrh.w	r0, [r0, #192]	@ 0xc0
 801be74:	4619      	mov	r1, r3
 801be76:	f7fb faf7 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801be7a:	f001 be50 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801be7e:	4a42      	ldr	r2, [pc, #264]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801be80:	6852      	ldr	r2, [r2, #4]
 801be82:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801be84:	685a      	ldr	r2, [r3, #4]
 801be86:	f8b0 004c 	ldrh.w	r0, [r0, #76]	@ 0x4c
 801be8a:	4619      	mov	r1, r3
 801be8c:	f7fb faba 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801be90:	f001 be45 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801be94:	4a3c      	ldr	r2, [pc, #240]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801be96:	6852      	ldr	r2, [r2, #4]
 801be98:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801be9a:	685a      	ldr	r2, [r3, #4]
 801be9c:	f8b0 004e 	ldrh.w	r0, [r0, #78]	@ 0x4e
 801bea0:	4619      	mov	r1, r3
 801bea2:	f7fb faaf 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bea6:	f001 be3a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801beaa:	4a37      	ldr	r2, [pc, #220]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801beac:	6852      	ldr	r2, [r2, #4]
 801beae:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801beb0:	685a      	ldr	r2, [r3, #4]
 801beb2:	f8b0 0050 	ldrh.w	r0, [r0, #80]	@ 0x50
 801beb6:	4619      	mov	r1, r3
 801beb8:	f7fb faa4 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bebc:	f001 be2f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bec0:	4a31      	ldr	r2, [pc, #196]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bec2:	6852      	ldr	r2, [r2, #4]
 801bec4:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bec6:	685a      	ldr	r2, [r3, #4]
 801bec8:	f8b0 0052 	ldrh.w	r0, [r0, #82]	@ 0x52
 801becc:	4619      	mov	r1, r3
 801bece:	f7fb fa99 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bed2:	f001 be24 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bed6:	4a2c      	ldr	r2, [pc, #176]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bed8:	6852      	ldr	r2, [r2, #4]
 801beda:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bedc:	685a      	ldr	r2, [r3, #4]
 801bede:	f8b0 0054 	ldrh.w	r0, [r0, #84]	@ 0x54
 801bee2:	4619      	mov	r1, r3
 801bee4:	f7fb fa8e 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bee8:	f001 be19 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801beec:	4a26      	ldr	r2, [pc, #152]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801beee:	6852      	ldr	r2, [r2, #4]
 801bef0:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bef2:	685a      	ldr	r2, [r3, #4]
 801bef4:	f8b0 0056 	ldrh.w	r0, [r0, #86]	@ 0x56
 801bef8:	4619      	mov	r1, r3
 801befa:	f7fb fa83 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801befe:	f001 be0e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf02:	4a21      	ldr	r2, [pc, #132]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf04:	6852      	ldr	r2, [r2, #4]
 801bf06:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf08:	685a      	ldr	r2, [r3, #4]
 801bf0a:	f8b0 0058 	ldrh.w	r0, [r0, #88]	@ 0x58
 801bf0e:	4619      	mov	r1, r3
 801bf10:	f7fb fa78 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf14:	f001 be03 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf18:	4a1b      	ldr	r2, [pc, #108]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf1a:	6852      	ldr	r2, [r2, #4]
 801bf1c:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf1e:	685a      	ldr	r2, [r3, #4]
 801bf20:	f8b0 005a 	ldrh.w	r0, [r0, #90]	@ 0x5a
 801bf24:	4619      	mov	r1, r3
 801bf26:	f7fb fa6d 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf2a:	f001 bdf8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf2e:	4a16      	ldr	r2, [pc, #88]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf30:	6852      	ldr	r2, [r2, #4]
 801bf32:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf34:	685a      	ldr	r2, [r3, #4]
 801bf36:	f8b0 005c 	ldrh.w	r0, [r0, #92]	@ 0x5c
 801bf3a:	4619      	mov	r1, r3
 801bf3c:	f7fb fa62 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf40:	f001 bded 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf44:	4a10      	ldr	r2, [pc, #64]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf46:	6852      	ldr	r2, [r2, #4]
 801bf48:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf4a:	685a      	ldr	r2, [r3, #4]
 801bf4c:	f8b0 005e 	ldrh.w	r0, [r0, #94]	@ 0x5e
 801bf50:	4619      	mov	r1, r3
 801bf52:	f7fb fa57 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf56:	f001 bde2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf5a:	4a0b      	ldr	r2, [pc, #44]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf5c:	6852      	ldr	r2, [r2, #4]
 801bf5e:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf60:	685a      	ldr	r2, [r3, #4]
 801bf62:	f8b0 0060 	ldrh.w	r0, [r0, #96]	@ 0x60
 801bf66:	4619      	mov	r1, r3
 801bf68:	f7fb fa4c 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf6c:	f001 bdd7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf70:	4a05      	ldr	r2, [pc, #20]	@ (801bf88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4aec>)
 801bf72:	6852      	ldr	r2, [r2, #4]
 801bf74:	6a50      	ldr	r0, [r2, #36]	@ 0x24
 801bf76:	685a      	ldr	r2, [r3, #4]
 801bf78:	f8b0 0062 	ldrh.w	r0, [r0, #98]	@ 0x62
 801bf7c:	4619      	mov	r1, r3
 801bf7e:	f7fb fa41 	bl	8017404 <bool SimpleSerializer<unsigned short, false, void>::write<unsigned char*>(unsigned short, unsigned char**, unsigned char*)>
 801bf82:	f001 bdcc 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bf86:	bf00      	nop
 801bf88:	200019cc 	.word	0x200019cc
 801bf8c:	0801283d 	.word	0x0801283d
 801bf90:	08012845 	.word	0x08012845
 801bf94:	08012835 	.word	0x08012835
 801bf98:	4ab8      	ldr	r2, [pc, #736]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801bf9a:	6852      	ldr	r2, [r2, #4]
 801bf9c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bf9e:	6a12      	ldr	r2, [r2, #32]
 801bfa0:	9208      	str	r2, [sp, #32]
 801bfa2:	4ab7      	ldr	r2, [pc, #732]	@ (801c280 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de4>)
 801bfa4:	9209      	str	r2, [sp, #36]	@ 0x24
 801bfa6:	4ab7      	ldr	r2, [pc, #732]	@ (801c284 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de8>)
 801bfa8:	920a      	str	r2, [sp, #40]	@ 0x28
 801bfaa:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801bfae:	2201      	movs	r2, #1
 801bfb0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bfb4:	2200      	movs	r2, #0
 801bfb6:	f8ad 2000 	strh.w	r2, [sp]
 801bfba:	ab0c      	add	r3, sp, #48	@ 0x30
 801bfbc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801bfc0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bfc4:	f7f7 f974 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801bfc8:	f001 bda9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801bfcc:	4aab      	ldr	r2, [pc, #684]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801bfce:	6852      	ldr	r2, [r2, #4]
 801bfd0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801bfd2:	6a12      	ldr	r2, [r2, #32]
 801bfd4:	3204      	adds	r2, #4
 801bfd6:	9208      	str	r2, [sp, #32]
 801bfd8:	4aab      	ldr	r2, [pc, #684]	@ (801c288 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4dec>)
 801bfda:	9209      	str	r2, [sp, #36]	@ 0x24
 801bfdc:	4aab      	ldr	r2, [pc, #684]	@ (801c28c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df0>)
 801bfde:	920a      	str	r2, [sp, #40]	@ 0x28
 801bfe0:	2201      	movs	r2, #1
 801bfe2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801bfe6:	2200      	movs	r2, #0
 801bfe8:	f88d 201c 	strb.w	r2, [sp, #28]
 801bfec:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801bff0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801bff4:	e88d 0003 	stmia.w	sp, {r0, r1}
 801bff8:	ab0c      	add	r3, sp, #48	@ 0x30
 801bffa:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801bffe:	f7f7 fb85 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c002:	f001 bd8c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c006:	4a9d      	ldr	r2, [pc, #628]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c008:	6852      	ldr	r2, [r2, #4]
 801c00a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c00c:	6a12      	ldr	r2, [r2, #32]
 801c00e:	3208      	adds	r2, #8
 801c010:	9208      	str	r2, [sp, #32]
 801c012:	4a9f      	ldr	r2, [pc, #636]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c014:	9209      	str	r2, [sp, #36]	@ 0x24
 801c016:	4a9f      	ldr	r2, [pc, #636]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c018:	920a      	str	r2, [sp, #40]	@ 0x28
 801c01a:	2201      	movs	r2, #1
 801c01c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c020:	2200      	movs	r2, #0
 801c022:	f88d 201c 	strb.w	r2, [sp, #28]
 801c026:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c02a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c02e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c032:	ab0c      	add	r3, sp, #48	@ 0x30
 801c034:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c038:	f7f7 fa90 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c03c:	f001 bd6f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c040:	4a8e      	ldr	r2, [pc, #568]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c042:	6852      	ldr	r2, [r2, #4]
 801c044:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c046:	6a12      	ldr	r2, [r2, #32]
 801c048:	320c      	adds	r2, #12
 801c04a:	9208      	str	r2, [sp, #32]
 801c04c:	4a90      	ldr	r2, [pc, #576]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c04e:	9209      	str	r2, [sp, #36]	@ 0x24
 801c050:	4a90      	ldr	r2, [pc, #576]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c052:	920a      	str	r2, [sp, #40]	@ 0x28
 801c054:	2201      	movs	r2, #1
 801c056:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c05a:	2200      	movs	r2, #0
 801c05c:	f88d 201c 	strb.w	r2, [sp, #28]
 801c060:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c064:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c068:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c06c:	ab0c      	add	r3, sp, #48	@ 0x30
 801c06e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c072:	f7f7 fa73 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c076:	f001 bd52 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c07a:	4a80      	ldr	r2, [pc, #512]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c07c:	6852      	ldr	r2, [r2, #4]
 801c07e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c080:	6a12      	ldr	r2, [r2, #32]
 801c082:	9208      	str	r2, [sp, #32]
 801c084:	4a84      	ldr	r2, [pc, #528]	@ (801c298 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4dfc>)
 801c086:	9209      	str	r2, [sp, #36]	@ 0x24
 801c088:	4a84      	ldr	r2, [pc, #528]	@ (801c29c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4e00>)
 801c08a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c08c:	2201      	movs	r2, #1
 801c08e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c092:	2200      	movs	r2, #0
 801c094:	f88d 201c 	strb.w	r2, [sp, #28]
 801c098:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c09c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c0a0:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c0a4:	ab0c      	add	r3, sp, #48	@ 0x30
 801c0a6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c0aa:	f7f7 fa57 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c0ae:	f001 bd36 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c0b2:	4a72      	ldr	r2, [pc, #456]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c0b4:	6852      	ldr	r2, [r2, #4]
 801c0b6:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c0b8:	6a12      	ldr	r2, [r2, #32]
 801c0ba:	9208      	str	r2, [sp, #32]
 801c0bc:	4a78      	ldr	r2, [pc, #480]	@ (801c2a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4e04>)
 801c0be:	9209      	str	r2, [sp, #36]	@ 0x24
 801c0c0:	4a78      	ldr	r2, [pc, #480]	@ (801c2a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4e08>)
 801c0c2:	920a      	str	r2, [sp, #40]	@ 0x28
 801c0c4:	2201      	movs	r2, #1
 801c0c6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c0ca:	2200      	movs	r2, #0
 801c0cc:	f88d 201c 	strb.w	r2, [sp, #28]
 801c0d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c0d4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c0d8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c0dc:	ab0c      	add	r3, sp, #48	@ 0x30
 801c0de:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c0e2:	f7f7 fa3b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c0e6:	f001 bd1a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c0ea:	4a64      	ldr	r2, [pc, #400]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c0ec:	6852      	ldr	r2, [r2, #4]
 801c0ee:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c0f0:	6a12      	ldr	r2, [r2, #32]
 801c0f2:	3218      	adds	r2, #24
 801c0f4:	9208      	str	r2, [sp, #32]
 801c0f6:	4a66      	ldr	r2, [pc, #408]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c0f8:	9209      	str	r2, [sp, #36]	@ 0x24
 801c0fa:	4a66      	ldr	r2, [pc, #408]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c0fc:	920a      	str	r2, [sp, #40]	@ 0x28
 801c0fe:	2201      	movs	r2, #1
 801c100:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c104:	2200      	movs	r2, #0
 801c106:	f88d 201c 	strb.w	r2, [sp, #28]
 801c10a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c10e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c112:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c116:	ab0c      	add	r3, sp, #48	@ 0x30
 801c118:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c11c:	f7f7 fa1e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c120:	f001 bcfd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c124:	4a55      	ldr	r2, [pc, #340]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c126:	6852      	ldr	r2, [r2, #4]
 801c128:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c12a:	6a12      	ldr	r2, [r2, #32]
 801c12c:	321c      	adds	r2, #28
 801c12e:	9208      	str	r2, [sp, #32]
 801c130:	4a55      	ldr	r2, [pc, #340]	@ (801c288 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4dec>)
 801c132:	9209      	str	r2, [sp, #36]	@ 0x24
 801c134:	4a55      	ldr	r2, [pc, #340]	@ (801c28c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df0>)
 801c136:	920a      	str	r2, [sp, #40]	@ 0x28
 801c138:	2201      	movs	r2, #1
 801c13a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c13e:	2200      	movs	r2, #0
 801c140:	f88d 201c 	strb.w	r2, [sp, #28]
 801c144:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c148:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c14c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c150:	ab0c      	add	r3, sp, #48	@ 0x30
 801c152:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c156:	f7f7 fad9 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c15a:	f001 bce0 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c15e:	4a47      	ldr	r2, [pc, #284]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c160:	6852      	ldr	r2, [r2, #4]
 801c162:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c164:	6a12      	ldr	r2, [r2, #32]
 801c166:	3220      	adds	r2, #32
 801c168:	9208      	str	r2, [sp, #32]
 801c16a:	4a4f      	ldr	r2, [pc, #316]	@ (801c2a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4e0c>)
 801c16c:	9209      	str	r2, [sp, #36]	@ 0x24
 801c16e:	4a4f      	ldr	r2, [pc, #316]	@ (801c2ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4e10>)
 801c170:	920a      	str	r2, [sp, #40]	@ 0x28
 801c172:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c176:	2201      	movs	r2, #1
 801c178:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c17c:	2200      	movs	r2, #0
 801c17e:	f8ad 2000 	strh.w	r2, [sp]
 801c182:	ab0c      	add	r3, sp, #48	@ 0x30
 801c184:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c188:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c18c:	f7f7 fc08 	bl	80139a0 <fibre_property_odrive_motor_motor_type_readwrite_exchange(std::optional<Property<ODriveIntf::MotorIntf::MotorType> >, std::optional<ODriveIntf::MotorIntf::MotorType>, ODriveIntf::MotorIntf::MotorType*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c190:	f001 bcc5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c194:	4a39      	ldr	r2, [pc, #228]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c196:	6852      	ldr	r2, [r2, #4]
 801c198:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c19a:	6a12      	ldr	r2, [r2, #32]
 801c19c:	3224      	adds	r2, #36	@ 0x24
 801c19e:	9208      	str	r2, [sp, #32]
 801c1a0:	4a3b      	ldr	r2, [pc, #236]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c1a2:	9209      	str	r2, [sp, #36]	@ 0x24
 801c1a4:	4a3b      	ldr	r2, [pc, #236]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c1a6:	920a      	str	r2, [sp, #40]	@ 0x28
 801c1a8:	2201      	movs	r2, #1
 801c1aa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c1ae:	2200      	movs	r2, #0
 801c1b0:	f88d 201c 	strb.w	r2, [sp, #28]
 801c1b4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c1b8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c1bc:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c1c0:	ab0c      	add	r3, sp, #48	@ 0x30
 801c1c2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c1c6:	f7f7 f9c9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c1ca:	f001 bca8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c1ce:	4a2b      	ldr	r2, [pc, #172]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c1d0:	6852      	ldr	r2, [r2, #4]
 801c1d2:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c1d4:	6a12      	ldr	r2, [r2, #32]
 801c1d6:	3228      	adds	r2, #40	@ 0x28
 801c1d8:	9208      	str	r2, [sp, #32]
 801c1da:	4a2d      	ldr	r2, [pc, #180]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c1dc:	9209      	str	r2, [sp, #36]	@ 0x24
 801c1de:	4a2d      	ldr	r2, [pc, #180]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c1e0:	920a      	str	r2, [sp, #40]	@ 0x28
 801c1e2:	2201      	movs	r2, #1
 801c1e4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c1e8:	2200      	movs	r2, #0
 801c1ea:	f88d 201c 	strb.w	r2, [sp, #28]
 801c1ee:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c1f2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c1f6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c1fa:	ab0c      	add	r3, sp, #48	@ 0x30
 801c1fc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c200:	f7f7 f9ac 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c204:	f001 bc8b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c208:	4a1c      	ldr	r2, [pc, #112]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c20a:	6852      	ldr	r2, [r2, #4]
 801c20c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c20e:	6a12      	ldr	r2, [r2, #32]
 801c210:	322c      	adds	r2, #44	@ 0x2c
 801c212:	9208      	str	r2, [sp, #32]
 801c214:	4a1e      	ldr	r2, [pc, #120]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c216:	9209      	str	r2, [sp, #36]	@ 0x24
 801c218:	4a1e      	ldr	r2, [pc, #120]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c21a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c21c:	2201      	movs	r2, #1
 801c21e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c222:	2200      	movs	r2, #0
 801c224:	f88d 201c 	strb.w	r2, [sp, #28]
 801c228:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c22c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c230:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c234:	ab0c      	add	r3, sp, #48	@ 0x30
 801c236:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c23a:	f7f7 f98f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c23e:	f001 bc6e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c242:	4a0e      	ldr	r2, [pc, #56]	@ (801c27c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4de0>)
 801c244:	6852      	ldr	r2, [r2, #4]
 801c246:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c248:	6a12      	ldr	r2, [r2, #32]
 801c24a:	3238      	adds	r2, #56	@ 0x38
 801c24c:	9208      	str	r2, [sp, #32]
 801c24e:	4a10      	ldr	r2, [pc, #64]	@ (801c290 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df4>)
 801c250:	9209      	str	r2, [sp, #36]	@ 0x24
 801c252:	4a10      	ldr	r2, [pc, #64]	@ (801c294 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x4df8>)
 801c254:	920a      	str	r2, [sp, #40]	@ 0x28
 801c256:	2201      	movs	r2, #1
 801c258:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c25c:	2200      	movs	r2, #0
 801c25e:	f88d 201c 	strb.w	r2, [sp, #28]
 801c262:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c266:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c26a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c26e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c270:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c274:	f7f7 f972 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c278:	f001 bc51 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c27c:	200019cc 	.word	0x200019cc
 801c280:	0801320d 	.word	0x0801320d
 801c284:	08014101 	.word	0x08014101
 801c288:	080128b5 	.word	0x080128b5
 801c28c:	080128b9 	.word	0x080128b9
 801c290:	0801283d 	.word	0x0801283d
 801c294:	08012845 	.word	0x08012845
 801c298:	08013205 	.word	0x08013205
 801c29c:	0801411d 	.word	0x0801411d
 801c2a0:	080131f9 	.word	0x080131f9
 801c2a4:	08014135 	.word	0x08014135
 801c2a8:	080128bd 	.word	0x080128bd
 801c2ac:	080128c1 	.word	0x080128c1
 801c2b0:	4ab9      	ldr	r2, [pc, #740]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c2b2:	6852      	ldr	r2, [r2, #4]
 801c2b4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c2b6:	6a12      	ldr	r2, [r2, #32]
 801c2b8:	323c      	adds	r2, #60	@ 0x3c
 801c2ba:	9208      	str	r2, [sp, #32]
 801c2bc:	4ab7      	ldr	r2, [pc, #732]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c2be:	9209      	str	r2, [sp, #36]	@ 0x24
 801c2c0:	4ab7      	ldr	r2, [pc, #732]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c2c2:	920a      	str	r2, [sp, #40]	@ 0x28
 801c2c4:	2201      	movs	r2, #1
 801c2c6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c2ca:	2200      	movs	r2, #0
 801c2cc:	f88d 201c 	strb.w	r2, [sp, #28]
 801c2d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c2d4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c2d8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c2dc:	ab0c      	add	r3, sp, #48	@ 0x30
 801c2de:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c2e2:	f7f7 f93b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c2e6:	f001 bc1a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c2ea:	4aab      	ldr	r2, [pc, #684]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c2ec:	6852      	ldr	r2, [r2, #4]
 801c2ee:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c2f0:	6a12      	ldr	r2, [r2, #32]
 801c2f2:	3230      	adds	r2, #48	@ 0x30
 801c2f4:	9208      	str	r2, [sp, #32]
 801c2f6:	4aa9      	ldr	r2, [pc, #676]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c2f8:	9209      	str	r2, [sp, #36]	@ 0x24
 801c2fa:	4aa9      	ldr	r2, [pc, #676]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c2fc:	920a      	str	r2, [sp, #40]	@ 0x28
 801c2fe:	2201      	movs	r2, #1
 801c300:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c304:	2200      	movs	r2, #0
 801c306:	f88d 201c 	strb.w	r2, [sp, #28]
 801c30a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c30e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c312:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c316:	ab0c      	add	r3, sp, #48	@ 0x30
 801c318:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c31c:	f7f7 f91e 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c320:	f001 bbfd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c324:	4a9c      	ldr	r2, [pc, #624]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c326:	6852      	ldr	r2, [r2, #4]
 801c328:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c32a:	6a12      	ldr	r2, [r2, #32]
 801c32c:	9208      	str	r2, [sp, #32]
 801c32e:	4a9d      	ldr	r2, [pc, #628]	@ (801c5a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5108>)
 801c330:	9209      	str	r2, [sp, #36]	@ 0x24
 801c332:	4a9d      	ldr	r2, [pc, #628]	@ (801c5a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x510c>)
 801c334:	920a      	str	r2, [sp, #40]	@ 0x28
 801c336:	2201      	movs	r2, #1
 801c338:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c33c:	2200      	movs	r2, #0
 801c33e:	f88d 201c 	strb.w	r2, [sp, #28]
 801c342:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c346:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c34a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c34e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c350:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c354:	f7f7 f902 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c358:	f001 bbe1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c35c:	4a8e      	ldr	r2, [pc, #568]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c35e:	6852      	ldr	r2, [r2, #4]
 801c360:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c362:	6a12      	ldr	r2, [r2, #32]
 801c364:	3240      	adds	r2, #64	@ 0x40
 801c366:	9208      	str	r2, [sp, #32]
 801c368:	4a8c      	ldr	r2, [pc, #560]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c36a:	9209      	str	r2, [sp, #36]	@ 0x24
 801c36c:	4a8c      	ldr	r2, [pc, #560]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c36e:	920a      	str	r2, [sp, #40]	@ 0x28
 801c370:	2201      	movs	r2, #1
 801c372:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c376:	2200      	movs	r2, #0
 801c378:	f88d 201c 	strb.w	r2, [sp, #28]
 801c37c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c380:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c384:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c388:	ab0c      	add	r3, sp, #48	@ 0x30
 801c38a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c38e:	f7f7 f8e5 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c392:	f001 bbc4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c396:	4a80      	ldr	r2, [pc, #512]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c398:	6852      	ldr	r2, [r2, #4]
 801c39a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c39c:	6a12      	ldr	r2, [r2, #32]
 801c39e:	3244      	adds	r2, #68	@ 0x44
 801c3a0:	9208      	str	r2, [sp, #32]
 801c3a2:	4a7e      	ldr	r2, [pc, #504]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c3a4:	9209      	str	r2, [sp, #36]	@ 0x24
 801c3a6:	4a7e      	ldr	r2, [pc, #504]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c3a8:	920a      	str	r2, [sp, #40]	@ 0x28
 801c3aa:	2201      	movs	r2, #1
 801c3ac:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c3b0:	2200      	movs	r2, #0
 801c3b2:	f88d 201c 	strb.w	r2, [sp, #28]
 801c3b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c3ba:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c3be:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c3c2:	ab0c      	add	r3, sp, #48	@ 0x30
 801c3c4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c3c8:	f7f7 f8c8 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c3cc:	f001 bba7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c3d0:	4a71      	ldr	r2, [pc, #452]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c3d2:	6852      	ldr	r2, [r2, #4]
 801c3d4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c3d6:	6a12      	ldr	r2, [r2, #32]
 801c3d8:	3248      	adds	r2, #72	@ 0x48
 801c3da:	9208      	str	r2, [sp, #32]
 801c3dc:	4a6f      	ldr	r2, [pc, #444]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c3de:	9209      	str	r2, [sp, #36]	@ 0x24
 801c3e0:	4a6f      	ldr	r2, [pc, #444]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c3e2:	920a      	str	r2, [sp, #40]	@ 0x28
 801c3e4:	2201      	movs	r2, #1
 801c3e6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c3ea:	2200      	movs	r2, #0
 801c3ec:	f88d 201c 	strb.w	r2, [sp, #28]
 801c3f0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c3f4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c3f8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c3fc:	ab0c      	add	r3, sp, #48	@ 0x30
 801c3fe:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c402:	f7f7 f8ab 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c406:	f001 bb8a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c40a:	4a63      	ldr	r2, [pc, #396]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c40c:	6852      	ldr	r2, [r2, #4]
 801c40e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c410:	6a12      	ldr	r2, [r2, #32]
 801c412:	324c      	adds	r2, #76	@ 0x4c
 801c414:	9208      	str	r2, [sp, #32]
 801c416:	4a65      	ldr	r2, [pc, #404]	@ (801c5ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5110>)
 801c418:	9209      	str	r2, [sp, #36]	@ 0x24
 801c41a:	4a65      	ldr	r2, [pc, #404]	@ (801c5b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5114>)
 801c41c:	920a      	str	r2, [sp, #40]	@ 0x28
 801c41e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c422:	2201      	movs	r2, #1
 801c424:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c428:	2200      	movs	r2, #0
 801c42a:	f8ad 2000 	strh.w	r2, [sp]
 801c42e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c430:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c434:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c438:	f7f6 ff3a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c43c:	f001 bb6f 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c440:	4a55      	ldr	r2, [pc, #340]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c442:	6852      	ldr	r2, [r2, #4]
 801c444:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c446:	6a12      	ldr	r2, [r2, #32]
 801c448:	3250      	adds	r2, #80	@ 0x50
 801c44a:	9208      	str	r2, [sp, #32]
 801c44c:	4a53      	ldr	r2, [pc, #332]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c44e:	9209      	str	r2, [sp, #36]	@ 0x24
 801c450:	4a53      	ldr	r2, [pc, #332]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c452:	920a      	str	r2, [sp, #40]	@ 0x28
 801c454:	2201      	movs	r2, #1
 801c456:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c45a:	2200      	movs	r2, #0
 801c45c:	f88d 201c 	strb.w	r2, [sp, #28]
 801c460:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c464:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c468:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c46c:	ab0c      	add	r3, sp, #48	@ 0x30
 801c46e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c472:	f7f7 f873 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c476:	f001 bb52 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c47a:	4a47      	ldr	r2, [pc, #284]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c47c:	6852      	ldr	r2, [r2, #4]
 801c47e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801c480:	6a12      	ldr	r2, [r2, #32]
 801c482:	3254      	adds	r2, #84	@ 0x54
 801c484:	9208      	str	r2, [sp, #32]
 801c486:	4a45      	ldr	r2, [pc, #276]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c488:	9209      	str	r2, [sp, #36]	@ 0x24
 801c48a:	4a45      	ldr	r2, [pc, #276]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c48c:	920a      	str	r2, [sp, #40]	@ 0x28
 801c48e:	2201      	movs	r2, #1
 801c490:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c494:	2200      	movs	r2, #0
 801c496:	f88d 201c 	strb.w	r2, [sp, #28]
 801c49a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c49e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c4a2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c4a6:	ab0c      	add	r3, sp, #48	@ 0x30
 801c4a8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c4ac:	f7f7 f856 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c4b0:	f001 bb35 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c4b4:	4a38      	ldr	r2, [pc, #224]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c4b6:	6852      	ldr	r2, [r2, #4]
 801c4b8:	6992      	ldr	r2, [r2, #24]
 801c4ba:	3214      	adds	r2, #20
 801c4bc:	9208      	str	r2, [sp, #32]
 801c4be:	4a3d      	ldr	r2, [pc, #244]	@ (801c5b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5118>)
 801c4c0:	9209      	str	r2, [sp, #36]	@ 0x24
 801c4c2:	4a3d      	ldr	r2, [pc, #244]	@ (801c5b8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x511c>)
 801c4c4:	920a      	str	r2, [sp, #40]	@ 0x28
 801c4c6:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c4ca:	2201      	movs	r2, #1
 801c4cc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c4d0:	2200      	movs	r2, #0
 801c4d2:	f8ad 2000 	strh.w	r2, [sp]
 801c4d6:	ab0c      	add	r3, sp, #48	@ 0x30
 801c4d8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c4dc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c4e0:	f7f7 fb1e 	bl	8013b20 <fibre_property_odrive_controller_error_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::Error> >, std::optional<ODriveIntf::ControllerIntf::Error>, ODriveIntf::ControllerIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c4e4:	f001 bb1b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c4e8:	4a2b      	ldr	r2, [pc, #172]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c4ea:	6852      	ldr	r2, [r2, #4]
 801c4ec:	6992      	ldr	r2, [r2, #24]
 801c4ee:	9208      	str	r2, [sp, #32]
 801c4f0:	4a32      	ldr	r2, [pc, #200]	@ (801c5bc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5120>)
 801c4f2:	9209      	str	r2, [sp, #36]	@ 0x24
 801c4f4:	4a32      	ldr	r2, [pc, #200]	@ (801c5c0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5124>)
 801c4f6:	920a      	str	r2, [sp, #40]	@ 0x28
 801c4f8:	2201      	movs	r2, #1
 801c4fa:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c4fe:	2200      	movs	r2, #0
 801c500:	f88d 201c 	strb.w	r2, [sp, #28]
 801c504:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c508:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c50c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c510:	ab0c      	add	r3, sp, #48	@ 0x30
 801c512:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c516:	f7f7 f821 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c51a:	f001 bb00 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c51e:	4a1e      	ldr	r2, [pc, #120]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c520:	6852      	ldr	r2, [r2, #4]
 801c522:	6992      	ldr	r2, [r2, #24]
 801c524:	3244      	adds	r2, #68	@ 0x44
 801c526:	9208      	str	r2, [sp, #32]
 801c528:	4a1c      	ldr	r2, [pc, #112]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c52a:	9209      	str	r2, [sp, #36]	@ 0x24
 801c52c:	4a1c      	ldr	r2, [pc, #112]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c52e:	920a      	str	r2, [sp, #40]	@ 0x28
 801c530:	2201      	movs	r2, #1
 801c532:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c536:	2200      	movs	r2, #0
 801c538:	f88d 201c 	strb.w	r2, [sp, #28]
 801c53c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c540:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c544:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c548:	ab0c      	add	r3, sp, #48	@ 0x30
 801c54a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c54e:	f7f7 f805 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c552:	f001 bae4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c556:	4a10      	ldr	r2, [pc, #64]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c558:	6852      	ldr	r2, [r2, #4]
 801c55a:	6992      	ldr	r2, [r2, #24]
 801c55c:	3248      	adds	r2, #72	@ 0x48
 801c55e:	9208      	str	r2, [sp, #32]
 801c560:	4a0e      	ldr	r2, [pc, #56]	@ (801c59c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5100>)
 801c562:	9209      	str	r2, [sp, #36]	@ 0x24
 801c564:	4a0e      	ldr	r2, [pc, #56]	@ (801c5a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5104>)
 801c566:	920a      	str	r2, [sp, #40]	@ 0x28
 801c568:	2201      	movs	r2, #1
 801c56a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c56e:	2200      	movs	r2, #0
 801c570:	f88d 201c 	strb.w	r2, [sp, #28]
 801c574:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c578:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c57c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c580:	ab0c      	add	r3, sp, #48	@ 0x30
 801c582:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c586:	f7f6 ffe9 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c58a:	f001 bac8 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c58e:	4a02      	ldr	r2, [pc, #8]	@ (801c598 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x50fc>)
 801c590:	6852      	ldr	r2, [r2, #4]
 801c592:	6990      	ldr	r0, [r2, #24]
 801c594:	f000 bc69 	b.w	801ce6a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59ce>
 801c598:	200019cc 	.word	0x200019cc
 801c59c:	0801283d 	.word	0x0801283d
 801c5a0:	08012845 	.word	0x08012845
 801c5a4:	080131ed 	.word	0x080131ed
 801c5a8:	0801414d 	.word	0x0801414d
 801c5ac:	0801285d 	.word	0x0801285d
 801c5b0:	08012861 	.word	0x08012861
 801c5b4:	080128c5 	.word	0x080128c5
 801c5b8:	080128c9 	.word	0x080128c9
 801c5bc:	080131e1 	.word	0x080131e1
 801c5c0:	08014165 	.word	0x08014165
 801c5c4:	4ab5      	ldr	r2, [pc, #724]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c5c6:	6852      	ldr	r2, [r2, #4]
 801c5c8:	6990      	ldr	r0, [r2, #24]
 801c5ca:	49b5      	ldr	r1, [pc, #724]	@ (801c8a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5404>)
 801c5cc:	2201      	movs	r2, #1
 801c5ce:	3034      	adds	r0, #52	@ 0x34
 801c5d0:	f001 ba8a 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801c5d4:	4ab1      	ldr	r2, [pc, #708]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c5d6:	6852      	ldr	r2, [r2, #4]
 801c5d8:	6990      	ldr	r0, [r2, #24]
 801c5da:	f000 bc4e 	b.w	801ce7a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59de>
 801c5de:	4aaf      	ldr	r2, [pc, #700]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c5e0:	6852      	ldr	r2, [r2, #4]
 801c5e2:	6992      	ldr	r2, [r2, #24]
 801c5e4:	4619      	mov	r1, r3
 801c5e6:	f892 0055 	ldrb.w	r0, [r2, #85]	@ 0x55
 801c5ea:	f7f7 fd11 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801c5ee:	f001 ba96 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c5f2:	4aaa      	ldr	r2, [pc, #680]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c5f4:	6852      	ldr	r2, [r2, #4]
 801c5f6:	6992      	ldr	r2, [r2, #24]
 801c5f8:	3238      	adds	r2, #56	@ 0x38
 801c5fa:	9208      	str	r2, [sp, #32]
 801c5fc:	4aa9      	ldr	r2, [pc, #676]	@ (801c8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5408>)
 801c5fe:	9209      	str	r2, [sp, #36]	@ 0x24
 801c600:	4aa9      	ldr	r2, [pc, #676]	@ (801c8a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x540c>)
 801c602:	920a      	str	r2, [sp, #40]	@ 0x28
 801c604:	2201      	movs	r2, #1
 801c606:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c60a:	2200      	movs	r2, #0
 801c60c:	f88d 201c 	strb.w	r2, [sp, #28]
 801c610:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c614:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c618:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c61c:	ab0c      	add	r3, sp, #48	@ 0x30
 801c61e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c622:	f7f6 ff9b 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c626:	f001 ba7a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c62a:	4a9c      	ldr	r2, [pc, #624]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c62c:	6852      	ldr	r2, [r2, #4]
 801c62e:	6992      	ldr	r2, [r2, #24]
 801c630:	3256      	adds	r2, #86	@ 0x56
 801c632:	9208      	str	r2, [sp, #32]
 801c634:	4a9d      	ldr	r2, [pc, #628]	@ (801c8ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5410>)
 801c636:	9209      	str	r2, [sp, #36]	@ 0x24
 801c638:	4a9d      	ldr	r2, [pc, #628]	@ (801c8b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5414>)
 801c63a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c63c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c640:	2201      	movs	r2, #1
 801c642:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c646:	2200      	movs	r2, #0
 801c648:	f8ad 2000 	strh.w	r2, [sp]
 801c64c:	ab0c      	add	r3, sp, #48	@ 0x30
 801c64e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c652:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c656:	f7f6 fe2b 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c65a:	f001 ba60 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c65e:	4a8f      	ldr	r2, [pc, #572]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c660:	6852      	ldr	r2, [r2, #4]
 801c662:	6992      	ldr	r2, [r2, #24]
 801c664:	68d2      	ldr	r2, [r2, #12]
 801c666:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801c66a:	320c      	adds	r2, #12
 801c66c:	9208      	str	r2, [sp, #32]
 801c66e:	4a8d      	ldr	r2, [pc, #564]	@ (801c8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5408>)
 801c670:	9209      	str	r2, [sp, #36]	@ 0x24
 801c672:	4a8d      	ldr	r2, [pc, #564]	@ (801c8a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x540c>)
 801c674:	920a      	str	r2, [sp, #40]	@ 0x28
 801c676:	2201      	movs	r2, #1
 801c678:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c67c:	2200      	movs	r2, #0
 801c67e:	f88d 201c 	strb.w	r2, [sp, #28]
 801c682:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c686:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c68a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c68e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c690:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c694:	f7f6 ff62 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c698:	f001 ba41 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c69c:	4a7f      	ldr	r2, [pc, #508]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c69e:	6852      	ldr	r2, [r2, #4]
 801c6a0:	6992      	ldr	r2, [r2, #24]
 801c6a2:	68d2      	ldr	r2, [r2, #12]
 801c6a4:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801c6a8:	3211      	adds	r2, #17
 801c6aa:	9208      	str	r2, [sp, #32]
 801c6ac:	4a7f      	ldr	r2, [pc, #508]	@ (801c8ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5410>)
 801c6ae:	9209      	str	r2, [sp, #36]	@ 0x24
 801c6b0:	4a7f      	ldr	r2, [pc, #508]	@ (801c8b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5414>)
 801c6b2:	920a      	str	r2, [sp, #40]	@ 0x28
 801c6b4:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c6b8:	2201      	movs	r2, #1
 801c6ba:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c6be:	2200      	movs	r2, #0
 801c6c0:	f8ad 2000 	strh.w	r2, [sp]
 801c6c4:	ab0c      	add	r3, sp, #48	@ 0x30
 801c6c6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c6ca:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c6ce:	f7f6 fdef 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c6d2:	f001 ba24 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c6d6:	4a71      	ldr	r2, [pc, #452]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c6d8:	6852      	ldr	r2, [r2, #4]
 801c6da:	6992      	ldr	r2, [r2, #24]
 801c6dc:	68d2      	ldr	r2, [r2, #12]
 801c6de:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801c6e2:	3213      	adds	r2, #19
 801c6e4:	9208      	str	r2, [sp, #32]
 801c6e6:	4a71      	ldr	r2, [pc, #452]	@ (801c8ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5410>)
 801c6e8:	9209      	str	r2, [sp, #36]	@ 0x24
 801c6ea:	4a71      	ldr	r2, [pc, #452]	@ (801c8b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5414>)
 801c6ec:	920a      	str	r2, [sp, #40]	@ 0x28
 801c6ee:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c6f2:	2201      	movs	r2, #1
 801c6f4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c6f8:	2200      	movs	r2, #0
 801c6fa:	f8ad 2000 	strh.w	r2, [sp]
 801c6fe:	ab0c      	add	r3, sp, #48	@ 0x30
 801c700:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c704:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c708:	f7f6 fdd2 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c70c:	f001 ba07 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c710:	4a62      	ldr	r2, [pc, #392]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c712:	6852      	ldr	r2, [r2, #4]
 801c714:	6992      	ldr	r2, [r2, #24]
 801c716:	68d2      	ldr	r2, [r2, #12]
 801c718:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801c71c:	3210      	adds	r2, #16
 801c71e:	9208      	str	r2, [sp, #32]
 801c720:	4a62      	ldr	r2, [pc, #392]	@ (801c8ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5410>)
 801c722:	9209      	str	r2, [sp, #36]	@ 0x24
 801c724:	4a62      	ldr	r2, [pc, #392]	@ (801c8b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5414>)
 801c726:	920a      	str	r2, [sp, #40]	@ 0x28
 801c728:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c72c:	2201      	movs	r2, #1
 801c72e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c732:	2200      	movs	r2, #0
 801c734:	f8ad 2000 	strh.w	r2, [sp]
 801c738:	ab0c      	add	r3, sp, #48	@ 0x30
 801c73a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c73e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c742:	f7f6 fdb5 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c746:	f001 b9ea 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c74a:	4a54      	ldr	r2, [pc, #336]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c74c:	6852      	ldr	r2, [r2, #4]
 801c74e:	6992      	ldr	r2, [r2, #24]
 801c750:	68d2      	ldr	r2, [r2, #12]
 801c752:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801c756:	3212      	adds	r2, #18
 801c758:	9208      	str	r2, [sp, #32]
 801c75a:	4a54      	ldr	r2, [pc, #336]	@ (801c8ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5410>)
 801c75c:	9209      	str	r2, [sp, #36]	@ 0x24
 801c75e:	4a54      	ldr	r2, [pc, #336]	@ (801c8b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5414>)
 801c760:	920a      	str	r2, [sp, #40]	@ 0x28
 801c762:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c766:	2201      	movs	r2, #1
 801c768:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c76c:	2200      	movs	r2, #0
 801c76e:	f8ad 2000 	strh.w	r2, [sp]
 801c772:	ab0c      	add	r3, sp, #48	@ 0x30
 801c774:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c778:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c77c:	f7f6 fd98 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c780:	f001 b9cd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c784:	4a45      	ldr	r2, [pc, #276]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c786:	6852      	ldr	r2, [r2, #4]
 801c788:	6992      	ldr	r2, [r2, #24]
 801c78a:	68d2      	ldr	r2, [r2, #12]
 801c78c:	9208      	str	r2, [sp, #32]
 801c78e:	4a49      	ldr	r2, [pc, #292]	@ (801c8b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5418>)
 801c790:	9209      	str	r2, [sp, #36]	@ 0x24
 801c792:	4a49      	ldr	r2, [pc, #292]	@ (801c8b8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x541c>)
 801c794:	920a      	str	r2, [sp, #40]	@ 0x28
 801c796:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c79a:	2201      	movs	r2, #1
 801c79c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c7a0:	2200      	movs	r2, #0
 801c7a2:	f8ad 2000 	strh.w	r2, [sp]
 801c7a6:	ab0c      	add	r3, sp, #48	@ 0x30
 801c7a8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c7ac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c7b0:	f7f7 f8b6 	bl	8013920 <fibre_property_odrive_controller_control_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::ControlMode> >, std::optional<ODriveIntf::ControllerIntf::ControlMode>, ODriveIntf::ControllerIntf::ControlMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c7b4:	f001 b9b3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c7b8:	4a38      	ldr	r2, [pc, #224]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c7ba:	6852      	ldr	r2, [r2, #4]
 801c7bc:	6992      	ldr	r2, [r2, #24]
 801c7be:	68d2      	ldr	r2, [r2, #12]
 801c7c0:	3201      	adds	r2, #1
 801c7c2:	9208      	str	r2, [sp, #32]
 801c7c4:	4a3d      	ldr	r2, [pc, #244]	@ (801c8bc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5420>)
 801c7c6:	9209      	str	r2, [sp, #36]	@ 0x24
 801c7c8:	4a3d      	ldr	r2, [pc, #244]	@ (801c8c0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5424>)
 801c7ca:	920a      	str	r2, [sp, #40]	@ 0x28
 801c7cc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c7d0:	2201      	movs	r2, #1
 801c7d2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c7d6:	2200      	movs	r2, #0
 801c7d8:	f8ad 2000 	strh.w	r2, [sp]
 801c7dc:	ab0c      	add	r3, sp, #48	@ 0x30
 801c7de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c7e2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c7e6:	f7f7 f85b 	bl	80138a0 <fibre_property_odrive_controller_input_mode_readwrite_exchange(std::optional<Property<ODriveIntf::ControllerIntf::InputMode> >, std::optional<ODriveIntf::ControllerIntf::InputMode>, ODriveIntf::ControllerIntf::InputMode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c7ea:	f001 b998 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c7ee:	4a2b      	ldr	r2, [pc, #172]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c7f0:	6852      	ldr	r2, [r2, #4]
 801c7f2:	6992      	ldr	r2, [r2, #24]
 801c7f4:	68d2      	ldr	r2, [r2, #12]
 801c7f6:	3204      	adds	r2, #4
 801c7f8:	9208      	str	r2, [sp, #32]
 801c7fa:	4a2a      	ldr	r2, [pc, #168]	@ (801c8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5408>)
 801c7fc:	9209      	str	r2, [sp, #36]	@ 0x24
 801c7fe:	4a2a      	ldr	r2, [pc, #168]	@ (801c8a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x540c>)
 801c800:	920a      	str	r2, [sp, #40]	@ 0x28
 801c802:	2201      	movs	r2, #1
 801c804:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c808:	2200      	movs	r2, #0
 801c80a:	f88d 201c 	strb.w	r2, [sp, #28]
 801c80e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c812:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c816:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c81a:	ab0c      	add	r3, sp, #48	@ 0x30
 801c81c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c820:	f7f6 fe9c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c824:	f001 b97b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c828:	4a1c      	ldr	r2, [pc, #112]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c82a:	6852      	ldr	r2, [r2, #4]
 801c82c:	6992      	ldr	r2, [r2, #24]
 801c82e:	68d2      	ldr	r2, [r2, #12]
 801c830:	3208      	adds	r2, #8
 801c832:	9208      	str	r2, [sp, #32]
 801c834:	4a1b      	ldr	r2, [pc, #108]	@ (801c8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5408>)
 801c836:	9209      	str	r2, [sp, #36]	@ 0x24
 801c838:	4a1b      	ldr	r2, [pc, #108]	@ (801c8a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x540c>)
 801c83a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c83c:	2201      	movs	r2, #1
 801c83e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c842:	2200      	movs	r2, #0
 801c844:	f88d 201c 	strb.w	r2, [sp, #28]
 801c848:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c84c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c850:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c854:	ab0c      	add	r3, sp, #48	@ 0x30
 801c856:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c85a:	f7f6 fe7f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c85e:	f001 b95e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c862:	4a0e      	ldr	r2, [pc, #56]	@ (801c89c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5400>)
 801c864:	6852      	ldr	r2, [r2, #4]
 801c866:	6992      	ldr	r2, [r2, #24]
 801c868:	68d2      	ldr	r2, [r2, #12]
 801c86a:	320c      	adds	r2, #12
 801c86c:	9208      	str	r2, [sp, #32]
 801c86e:	4a0d      	ldr	r2, [pc, #52]	@ (801c8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5408>)
 801c870:	9209      	str	r2, [sp, #36]	@ 0x24
 801c872:	4a0d      	ldr	r2, [pc, #52]	@ (801c8a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x540c>)
 801c874:	920a      	str	r2, [sp, #40]	@ 0x28
 801c876:	2201      	movs	r2, #1
 801c878:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c87c:	2200      	movs	r2, #0
 801c87e:	f88d 201c 	strb.w	r2, [sp, #28]
 801c882:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c886:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c88a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c88e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c890:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c894:	f7f6 fe62 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c898:	f001 b941 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c89c:	200019cc 	.word	0x200019cc
 801c8a0:	08012835 	.word	0x08012835
 801c8a4:	0801283d 	.word	0x0801283d
 801c8a8:	08012845 	.word	0x08012845
 801c8ac:	0801285d 	.word	0x0801285d
 801c8b0:	08012861 	.word	0x08012861
 801c8b4:	080128cd 	.word	0x080128cd
 801c8b8:	080128d1 	.word	0x080128d1
 801c8bc:	080128d5 	.word	0x080128d5
 801c8c0:	080128d9 	.word	0x080128d9
 801c8c4:	4ab1      	ldr	r2, [pc, #708]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c8c6:	6852      	ldr	r2, [r2, #4]
 801c8c8:	6992      	ldr	r2, [r2, #24]
 801c8ca:	68d2      	ldr	r2, [r2, #12]
 801c8cc:	3210      	adds	r2, #16
 801c8ce:	9208      	str	r2, [sp, #32]
 801c8d0:	4aaf      	ldr	r2, [pc, #700]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801c8d2:	9209      	str	r2, [sp, #36]	@ 0x24
 801c8d4:	4aaf      	ldr	r2, [pc, #700]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801c8d6:	920a      	str	r2, [sp, #40]	@ 0x28
 801c8d8:	2201      	movs	r2, #1
 801c8da:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c8de:	2200      	movs	r2, #0
 801c8e0:	f88d 201c 	strb.w	r2, [sp, #28]
 801c8e4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c8e8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c8ec:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c8f0:	ab0c      	add	r3, sp, #48	@ 0x30
 801c8f2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c8f6:	f7f6 fe31 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c8fa:	f001 b910 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c8fe:	4aa3      	ldr	r2, [pc, #652]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c900:	6852      	ldr	r2, [r2, #4]
 801c902:	6992      	ldr	r2, [r2, #24]
 801c904:	68d2      	ldr	r2, [r2, #12]
 801c906:	3214      	adds	r2, #20
 801c908:	9208      	str	r2, [sp, #32]
 801c90a:	4aa1      	ldr	r2, [pc, #644]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801c90c:	9209      	str	r2, [sp, #36]	@ 0x24
 801c90e:	4aa1      	ldr	r2, [pc, #644]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801c910:	920a      	str	r2, [sp, #40]	@ 0x28
 801c912:	2201      	movs	r2, #1
 801c914:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c918:	2200      	movs	r2, #0
 801c91a:	f88d 201c 	strb.w	r2, [sp, #28]
 801c91e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c922:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c926:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c92a:	ab0c      	add	r3, sp, #48	@ 0x30
 801c92c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c930:	f7f6 fe14 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c934:	f001 b8f3 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c938:	4a94      	ldr	r2, [pc, #592]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c93a:	6852      	ldr	r2, [r2, #4]
 801c93c:	6992      	ldr	r2, [r2, #24]
 801c93e:	68d2      	ldr	r2, [r2, #12]
 801c940:	3218      	adds	r2, #24
 801c942:	9208      	str	r2, [sp, #32]
 801c944:	4a92      	ldr	r2, [pc, #584]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801c946:	9209      	str	r2, [sp, #36]	@ 0x24
 801c948:	4a92      	ldr	r2, [pc, #584]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801c94a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c94c:	2201      	movs	r2, #1
 801c94e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c952:	2200      	movs	r2, #0
 801c954:	f88d 201c 	strb.w	r2, [sp, #28]
 801c958:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c95c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c960:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c964:	ab0c      	add	r3, sp, #48	@ 0x30
 801c966:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c96a:	f7f6 fdf7 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c96e:	f001 b8d6 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c972:	4a86      	ldr	r2, [pc, #536]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c974:	6852      	ldr	r2, [r2, #4]
 801c976:	6992      	ldr	r2, [r2, #24]
 801c978:	68d2      	ldr	r2, [r2, #12]
 801c97a:	321c      	adds	r2, #28
 801c97c:	9208      	str	r2, [sp, #32]
 801c97e:	4a84      	ldr	r2, [pc, #528]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801c980:	9209      	str	r2, [sp, #36]	@ 0x24
 801c982:	4a84      	ldr	r2, [pc, #528]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801c984:	920a      	str	r2, [sp, #40]	@ 0x28
 801c986:	2201      	movs	r2, #1
 801c988:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c98c:	2200      	movs	r2, #0
 801c98e:	f88d 201c 	strb.w	r2, [sp, #28]
 801c992:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c996:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801c99a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801c99e:	ab0c      	add	r3, sp, #48	@ 0x30
 801c9a0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c9a4:	f7f6 fdda 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c9a8:	f001 b8b9 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c9ac:	4a77      	ldr	r2, [pc, #476]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c9ae:	6852      	ldr	r2, [r2, #4]
 801c9b0:	6992      	ldr	r2, [r2, #24]
 801c9b2:	68d2      	ldr	r2, [r2, #12]
 801c9b4:	3220      	adds	r2, #32
 801c9b6:	9208      	str	r2, [sp, #32]
 801c9b8:	4a77      	ldr	r2, [pc, #476]	@ (801cb98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56fc>)
 801c9ba:	9209      	str	r2, [sp, #36]	@ 0x24
 801c9bc:	4a77      	ldr	r2, [pc, #476]	@ (801cb9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5700>)
 801c9be:	920a      	str	r2, [sp, #40]	@ 0x28
 801c9c0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801c9c4:	2201      	movs	r2, #1
 801c9c6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c9ca:	2200      	movs	r2, #0
 801c9cc:	f8ad 2000 	strh.w	r2, [sp]
 801c9d0:	ab0c      	add	r3, sp, #48	@ 0x30
 801c9d2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c9d6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801c9da:	f7f6 fc69 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801c9de:	f001 b89e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801c9e2:	4a6a      	ldr	r2, [pc, #424]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801c9e4:	6852      	ldr	r2, [r2, #4]
 801c9e6:	6992      	ldr	r2, [r2, #24]
 801c9e8:	68d2      	ldr	r2, [r2, #12]
 801c9ea:	3224      	adds	r2, #36	@ 0x24
 801c9ec:	9208      	str	r2, [sp, #32]
 801c9ee:	4a68      	ldr	r2, [pc, #416]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801c9f0:	9209      	str	r2, [sp, #36]	@ 0x24
 801c9f2:	4a68      	ldr	r2, [pc, #416]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801c9f4:	920a      	str	r2, [sp, #40]	@ 0x28
 801c9f6:	2201      	movs	r2, #1
 801c9f8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801c9fc:	2200      	movs	r2, #0
 801c9fe:	f88d 201c 	strb.w	r2, [sp, #28]
 801ca02:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ca06:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ca0a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ca0e:	ab0c      	add	r3, sp, #48	@ 0x30
 801ca10:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ca14:	f7f6 fda2 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ca18:	f001 b881 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ca1c:	4a5b      	ldr	r2, [pc, #364]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801ca1e:	6852      	ldr	r2, [r2, #4]
 801ca20:	6992      	ldr	r2, [r2, #24]
 801ca22:	68d2      	ldr	r2, [r2, #12]
 801ca24:	3230      	adds	r2, #48	@ 0x30
 801ca26:	9208      	str	r2, [sp, #32]
 801ca28:	4a59      	ldr	r2, [pc, #356]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801ca2a:	9209      	str	r2, [sp, #36]	@ 0x24
 801ca2c:	4a59      	ldr	r2, [pc, #356]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801ca2e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ca30:	2201      	movs	r2, #1
 801ca32:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ca36:	2200      	movs	r2, #0
 801ca38:	f88d 201c 	strb.w	r2, [sp, #28]
 801ca3c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ca40:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ca44:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ca48:	ab0c      	add	r3, sp, #48	@ 0x30
 801ca4a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ca4e:	f7f6 fd85 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ca52:	f001 b864 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ca56:	4a4d      	ldr	r2, [pc, #308]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801ca58:	6852      	ldr	r2, [r2, #4]
 801ca5a:	6992      	ldr	r2, [r2, #24]
 801ca5c:	68d2      	ldr	r2, [r2, #12]
 801ca5e:	3228      	adds	r2, #40	@ 0x28
 801ca60:	9208      	str	r2, [sp, #32]
 801ca62:	4a4b      	ldr	r2, [pc, #300]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801ca64:	9209      	str	r2, [sp, #36]	@ 0x24
 801ca66:	4a4b      	ldr	r2, [pc, #300]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801ca68:	920a      	str	r2, [sp, #40]	@ 0x28
 801ca6a:	2201      	movs	r2, #1
 801ca6c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ca70:	2200      	movs	r2, #0
 801ca72:	f88d 201c 	strb.w	r2, [sp, #28]
 801ca76:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ca7a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ca7e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801ca82:	ab0c      	add	r3, sp, #48	@ 0x30
 801ca84:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ca88:	f7f6 fd68 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ca8c:	f001 b847 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ca90:	4a3e      	ldr	r2, [pc, #248]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801ca92:	6852      	ldr	r2, [r2, #4]
 801ca94:	6992      	ldr	r2, [r2, #24]
 801ca96:	68d2      	ldr	r2, [r2, #12]
 801ca98:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ca9c:	3214      	adds	r2, #20
 801ca9e:	9208      	str	r2, [sp, #32]
 801caa0:	4a3f      	ldr	r2, [pc, #252]	@ (801cba0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5704>)
 801caa2:	9209      	str	r2, [sp, #36]	@ 0x24
 801caa4:	4a3f      	ldr	r2, [pc, #252]	@ (801cba4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5708>)
 801caa6:	920a      	str	r2, [sp, #40]	@ 0x28
 801caa8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801caac:	2201      	movs	r2, #1
 801caae:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cab2:	2200      	movs	r2, #0
 801cab4:	f8ad 2000 	strh.w	r2, [sp]
 801cab8:	ab0c      	add	r3, sp, #48	@ 0x30
 801caba:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cabe:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cac2:	f7f6 fc37 	bl	8013334 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cac6:	f001 b82a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801caca:	4a30      	ldr	r2, [pc, #192]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801cacc:	6852      	ldr	r2, [r2, #4]
 801cace:	6992      	ldr	r2, [r2, #24]
 801cad0:	68d2      	ldr	r2, [r2, #12]
 801cad2:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801cad6:	3218      	adds	r2, #24
 801cad8:	9208      	str	r2, [sp, #32]
 801cada:	4a2d      	ldr	r2, [pc, #180]	@ (801cb90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f4>)
 801cadc:	9209      	str	r2, [sp, #36]	@ 0x24
 801cade:	4a2d      	ldr	r2, [pc, #180]	@ (801cb94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f8>)
 801cae0:	920a      	str	r2, [sp, #40]	@ 0x28
 801cae2:	2201      	movs	r2, #1
 801cae4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cae8:	2200      	movs	r2, #0
 801caea:	f88d 201c 	strb.w	r2, [sp, #28]
 801caee:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801caf2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801caf6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cafa:	ab0c      	add	r3, sp, #48	@ 0x30
 801cafc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cb00:	f7f6 fd2c 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cb04:	f001 b80b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cb08:	4a20      	ldr	r2, [pc, #128]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801cb0a:	6852      	ldr	r2, [r2, #4]
 801cb0c:	6992      	ldr	r2, [r2, #24]
 801cb0e:	68d2      	ldr	r2, [r2, #12]
 801cb10:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801cb14:	321c      	adds	r2, #28
 801cb16:	9208      	str	r2, [sp, #32]
 801cb18:	4a21      	ldr	r2, [pc, #132]	@ (801cba0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5704>)
 801cb1a:	9209      	str	r2, [sp, #36]	@ 0x24
 801cb1c:	4a21      	ldr	r2, [pc, #132]	@ (801cba4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5708>)
 801cb1e:	920a      	str	r2, [sp, #40]	@ 0x28
 801cb20:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cb24:	2201      	movs	r2, #1
 801cb26:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cb2a:	2200      	movs	r2, #0
 801cb2c:	f8ad 2000 	strh.w	r2, [sp]
 801cb30:	ab0c      	add	r3, sp, #48	@ 0x30
 801cb32:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cb36:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cb3a:	f7f6 fbfb 	bl	8013334 <fibre_property_uint8_readwrite_exchange(std::optional<Property<unsigned char> >, std::optional<unsigned char>, unsigned char*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cb3e:	f000 bfee 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cb42:	4a12      	ldr	r2, [pc, #72]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801cb44:	6852      	ldr	r2, [r2, #4]
 801cb46:	6992      	ldr	r2, [r2, #24]
 801cb48:	68d2      	ldr	r2, [r2, #12]
 801cb4a:	9208      	str	r2, [sp, #32]
 801cb4c:	4a16      	ldr	r2, [pc, #88]	@ (801cba8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x570c>)
 801cb4e:	9209      	str	r2, [sp, #36]	@ 0x24
 801cb50:	4a16      	ldr	r2, [pc, #88]	@ (801cbac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5710>)
 801cb52:	920a      	str	r2, [sp, #40]	@ 0x28
 801cb54:	2201      	movs	r2, #1
 801cb56:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cb5a:	2200      	movs	r2, #0
 801cb5c:	f88d 201c 	strb.w	r2, [sp, #28]
 801cb60:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801cb64:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801cb68:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cb6c:	ab0c      	add	r3, sp, #48	@ 0x30
 801cb6e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cb72:	f7f6 fcf3 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cb76:	f000 bfd2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cb7a:	4a04      	ldr	r2, [pc, #16]	@ (801cb8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x56f0>)
 801cb7c:	6852      	ldr	r2, [r2, #4]
 801cb7e:	6992      	ldr	r2, [r2, #24]
 801cb80:	490b      	ldr	r1, [pc, #44]	@ (801cbb0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5714>)
 801cb82:	68d0      	ldr	r0, [r2, #12]
 801cb84:	2201      	movs	r2, #1
 801cb86:	3034      	adds	r0, #52	@ 0x34
 801cb88:	f000 be97 	b.w	801d8ba <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x641e>
 801cb8c:	200019cc 	.word	0x200019cc
 801cb90:	0801283d 	.word	0x0801283d
 801cb94:	08012845 	.word	0x08012845
 801cb98:	0801285d 	.word	0x0801285d
 801cb9c:	08012861 	.word	0x08012861
 801cba0:	080128dd 	.word	0x080128dd
 801cba4:	080128e1 	.word	0x080128e1
 801cba8:	080131d5 	.word	0x080131d5
 801cbac:	08014181 	.word	0x08014181
 801cbb0:	08012865 	.word	0x08012865
 801cbb4:	4ab3      	ldr	r2, [pc, #716]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cbb6:	6852      	ldr	r2, [r2, #4]
 801cbb8:	6992      	ldr	r2, [r2, #24]
 801cbba:	68d2      	ldr	r2, [r2, #12]
 801cbbc:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801cbc0:	3238      	adds	r2, #56	@ 0x38
 801cbc2:	9208      	str	r2, [sp, #32]
 801cbc4:	4ab0      	ldr	r2, [pc, #704]	@ (801ce88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59ec>)
 801cbc6:	9209      	str	r2, [sp, #36]	@ 0x24
 801cbc8:	4ab0      	ldr	r2, [pc, #704]	@ (801ce8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f0>)
 801cbca:	920a      	str	r2, [sp, #40]	@ 0x28
 801cbcc:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cbd0:	2201      	movs	r2, #1
 801cbd2:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cbd6:	2200      	movs	r2, #0
 801cbd8:	f8ad 2000 	strh.w	r2, [sp]
 801cbdc:	ab0c      	add	r3, sp, #48	@ 0x30
 801cbde:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cbe2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cbe6:	f7f6 fb63 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cbea:	f000 bf98 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cbee:	4aa5      	ldr	r2, [pc, #660]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cbf0:	6852      	ldr	r2, [r2, #4]
 801cbf2:	6992      	ldr	r2, [r2, #24]
 801cbf4:	68d2      	ldr	r2, [r2, #12]
 801cbf6:	f502 5240 	add.w	r2, r2, #12288	@ 0x3000
 801cbfa:	4619      	mov	r1, r3
 801cbfc:	f892 0879 	ldrb.w	r0, [r2, #2169]	@ 0x879
 801cc00:	f7f7 fa06 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801cc04:	f000 bf8b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cc08:	4a9e      	ldr	r2, [pc, #632]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cc0a:	6852      	ldr	r2, [r2, #4]
 801cc0c:	6992      	ldr	r2, [r2, #24]
 801cc0e:	68d2      	ldr	r2, [r2, #12]
 801cc10:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801cc14:	323c      	adds	r2, #60	@ 0x3c
 801cc16:	9208      	str	r2, [sp, #32]
 801cc18:	4a9d      	ldr	r2, [pc, #628]	@ (801ce90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f4>)
 801cc1a:	9209      	str	r2, [sp, #36]	@ 0x24
 801cc1c:	4a9d      	ldr	r2, [pc, #628]	@ (801ce94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f8>)
 801cc1e:	920a      	str	r2, [sp, #40]	@ 0x28
 801cc20:	2201      	movs	r2, #1
 801cc22:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cc26:	2200      	movs	r2, #0
 801cc28:	f88d 201c 	strb.w	r2, [sp, #28]
 801cc2c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801cc30:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801cc34:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cc38:	ab0c      	add	r3, sp, #48	@ 0x30
 801cc3a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cc3e:	f7f6 fc8d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cc42:	f000 bf6c 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cc46:	4a8f      	ldr	r2, [pc, #572]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cc48:	6852      	ldr	r2, [r2, #4]
 801cc4a:	6992      	ldr	r2, [r2, #24]
 801cc4c:	68d2      	ldr	r2, [r2, #12]
 801cc4e:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801cc52:	9208      	str	r2, [sp, #32]
 801cc54:	4a8e      	ldr	r2, [pc, #568]	@ (801ce90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f4>)
 801cc56:	9209      	str	r2, [sp, #36]	@ 0x24
 801cc58:	4a8e      	ldr	r2, [pc, #568]	@ (801ce94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f8>)
 801cc5a:	920a      	str	r2, [sp, #40]	@ 0x28
 801cc5c:	2201      	movs	r2, #1
 801cc5e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cc62:	2200      	movs	r2, #0
 801cc64:	f88d 201c 	strb.w	r2, [sp, #28]
 801cc68:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801cc6c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801cc70:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cc74:	ab0c      	add	r3, sp, #48	@ 0x30
 801cc76:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cc7a:	f7f6 fc6f 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cc7e:	f000 bf4e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cc82:	4a80      	ldr	r2, [pc, #512]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cc84:	6852      	ldr	r2, [r2, #4]
 801cc86:	6992      	ldr	r2, [r2, #24]
 801cc88:	4983      	ldr	r1, [pc, #524]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801cc8a:	68d0      	ldr	r0, [r2, #12]
 801cc8c:	f500 5062 	add.w	r0, r0, #14464	@ 0x3880
 801cc90:	2201      	movs	r2, #1
 801cc92:	3004      	adds	r0, #4
 801cc94:	f000 bf28 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801cc98:	4a7a      	ldr	r2, [pc, #488]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cc9a:	6852      	ldr	r2, [r2, #4]
 801cc9c:	6992      	ldr	r2, [r2, #24]
 801cc9e:	68d2      	ldr	r2, [r2, #12]
 801cca0:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801cca4:	3208      	adds	r2, #8
 801cca6:	9208      	str	r2, [sp, #32]
 801cca8:	4a77      	ldr	r2, [pc, #476]	@ (801ce88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59ec>)
 801ccaa:	9209      	str	r2, [sp, #36]	@ 0x24
 801ccac:	4a77      	ldr	r2, [pc, #476]	@ (801ce8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f0>)
 801ccae:	920a      	str	r2, [sp, #40]	@ 0x28
 801ccb0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801ccb4:	2201      	movs	r2, #1
 801ccb6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ccba:	2200      	movs	r2, #0
 801ccbc:	f8ad 2000 	strh.w	r2, [sp]
 801ccc0:	ab0c      	add	r3, sp, #48	@ 0x30
 801ccc2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ccc6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ccca:	f7f6 faf1 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ccce:	f000 bf26 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ccd2:	4b6c      	ldr	r3, [pc, #432]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ccd4:	685b      	ldr	r3, [r3, #4]
 801ccd6:	f7fd ba74 	b.w	801a1c2 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d26>
 801ccda:	4a6a      	ldr	r2, [pc, #424]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ccdc:	6852      	ldr	r2, [r2, #4]
 801ccde:	6992      	ldr	r2, [r2, #24]
 801cce0:	3204      	adds	r2, #4
 801cce2:	9208      	str	r2, [sp, #32]
 801cce4:	4a6a      	ldr	r2, [pc, #424]	@ (801ce90 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f4>)
 801cce6:	9209      	str	r2, [sp, #36]	@ 0x24
 801cce8:	4a6a      	ldr	r2, [pc, #424]	@ (801ce94 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f8>)
 801ccea:	920a      	str	r2, [sp, #40]	@ 0x28
 801ccec:	2201      	movs	r2, #1
 801ccee:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801ccf2:	2200      	movs	r2, #0
 801ccf4:	f88d 201c 	strb.w	r2, [sp, #28]
 801ccf8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ccfc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801cd00:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cd04:	ab0c      	add	r3, sp, #48	@ 0x30
 801cd06:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cd0a:	f7f6 fc27 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cd0e:	f000 bf06 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cd12:	4a5c      	ldr	r2, [pc, #368]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cd14:	6852      	ldr	r2, [r2, #4]
 801cd16:	6992      	ldr	r2, [r2, #24]
 801cd18:	3208      	adds	r2, #8
 801cd1a:	9208      	str	r2, [sp, #32]
 801cd1c:	4a5a      	ldr	r2, [pc, #360]	@ (801ce88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59ec>)
 801cd1e:	9209      	str	r2, [sp, #36]	@ 0x24
 801cd20:	4a5a      	ldr	r2, [pc, #360]	@ (801ce8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59f0>)
 801cd22:	920a      	str	r2, [sp, #40]	@ 0x28
 801cd24:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cd28:	2201      	movs	r2, #1
 801cd2a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cd2e:	2200      	movs	r2, #0
 801cd30:	f8ad 2000 	strh.w	r2, [sp]
 801cd34:	ab0c      	add	r3, sp, #48	@ 0x30
 801cd36:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cd3a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cd3e:	f7f6 fab7 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cd42:	f000 beec 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cd46:	4b4f      	ldr	r3, [pc, #316]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cd48:	685b      	ldr	r3, [r3, #4]
 801cd4a:	6998      	ldr	r0, [r3, #24]
 801cd4c:	6803      	ldr	r3, [r0, #0]
 801cd4e:	685b      	ldr	r3, [r3, #4]
 801cd50:	f000 bedc 	b.w	801db0c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6670>
 801cd54:	4a4b      	ldr	r2, [pc, #300]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cd56:	6852      	ldr	r2, [r2, #4]
 801cd58:	6912      	ldr	r2, [r2, #16]
 801cd5a:	3214      	adds	r2, #20
 801cd5c:	9208      	str	r2, [sp, #32]
 801cd5e:	4a4f      	ldr	r2, [pc, #316]	@ (801ce9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5a00>)
 801cd60:	9209      	str	r2, [sp, #36]	@ 0x24
 801cd62:	4a4f      	ldr	r2, [pc, #316]	@ (801cea0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5a04>)
 801cd64:	920a      	str	r2, [sp, #40]	@ 0x28
 801cd66:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cd6a:	2201      	movs	r2, #1
 801cd6c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cd70:	2200      	movs	r2, #0
 801cd72:	9200      	str	r2, [sp, #0]
 801cd74:	ab0c      	add	r3, sp, #48	@ 0x30
 801cd76:	9206      	str	r2, [sp, #24]
 801cd78:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cd7c:	f7f6 fe90 	bl	8013aa0 <fibre_property_odrive_encoder_error_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Error> >, std::optional<ODriveIntf::EncoderIntf::Error>, ODriveIntf::EncoderIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cd80:	f000 becd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cd84:	4a3f      	ldr	r2, [pc, #252]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cd86:	6852      	ldr	r2, [r2, #4]
 801cd88:	6912      	ldr	r2, [r2, #16]
 801cd8a:	4619      	mov	r1, r3
 801cd8c:	7dd0      	ldrb	r0, [r2, #23]
 801cd8e:	f7f7 f93f 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801cd92:	f000 bec4 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cd96:	4a3b      	ldr	r2, [pc, #236]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cd98:	6852      	ldr	r2, [r2, #4]
 801cd9a:	6912      	ldr	r2, [r2, #16]
 801cd9c:	4619      	mov	r1, r3
 801cd9e:	7d90      	ldrb	r0, [r2, #22]
 801cda0:	f7f7 f936 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801cda4:	f000 bebb 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cda8:	4a36      	ldr	r2, [pc, #216]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cdaa:	6852      	ldr	r2, [r2, #4]
 801cdac:	6910      	ldr	r0, [r2, #16]
 801cdae:	685a      	ldr	r2, [r3, #4]
 801cdb0:	6980      	ldr	r0, [r0, #24]
 801cdb2:	4619      	mov	r1, r3
 801cdb4:	f7fa fb58 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801cdb8:	f000 beb1 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cdbc:	4a31      	ldr	r2, [pc, #196]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cdbe:	6852      	ldr	r2, [r2, #4]
 801cdc0:	6910      	ldr	r0, [r2, #16]
 801cdc2:	685a      	ldr	r2, [r3, #4]
 801cdc4:	69c0      	ldr	r0, [r0, #28]
 801cdc6:	4619      	mov	r1, r3
 801cdc8:	f7fa fb4e 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801cdcc:	f000 bea7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cdd0:	4a2c      	ldr	r2, [pc, #176]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cdd2:	6852      	ldr	r2, [r2, #4]
 801cdd4:	6910      	ldr	r0, [r2, #16]
 801cdd6:	4930      	ldr	r1, [pc, #192]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801cdd8:	2201      	movs	r2, #1
 801cdda:	3020      	adds	r0, #32
 801cddc:	f000 be84 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801cde0:	4a28      	ldr	r2, [pc, #160]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cde2:	6852      	ldr	r2, [r2, #4]
 801cde4:	6910      	ldr	r0, [r2, #16]
 801cde6:	492c      	ldr	r1, [pc, #176]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801cde8:	2201      	movs	r2, #1
 801cdea:	3024      	adds	r0, #36	@ 0x24
 801cdec:	f000 be7c 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801cdf0:	4a24      	ldr	r2, [pc, #144]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801cdf2:	6852      	ldr	r2, [r2, #4]
 801cdf4:	6910      	ldr	r0, [r2, #16]
 801cdf6:	4928      	ldr	r1, [pc, #160]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801cdf8:	2201      	movs	r2, #1
 801cdfa:	3048      	adds	r0, #72	@ 0x48
 801cdfc:	f000 be74 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce00:	4a20      	ldr	r2, [pc, #128]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce02:	6852      	ldr	r2, [r2, #4]
 801ce04:	6910      	ldr	r0, [r2, #16]
 801ce06:	4924      	ldr	r1, [pc, #144]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce08:	2201      	movs	r2, #1
 801ce0a:	3028      	adds	r0, #40	@ 0x28
 801ce0c:	f000 be6c 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce10:	4a1c      	ldr	r2, [pc, #112]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce12:	6852      	ldr	r2, [r2, #4]
 801ce14:	6910      	ldr	r0, [r2, #16]
 801ce16:	4920      	ldr	r1, [pc, #128]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce18:	2201      	movs	r2, #1
 801ce1a:	3050      	adds	r0, #80	@ 0x50
 801ce1c:	f000 be64 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce20:	4a18      	ldr	r2, [pc, #96]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce22:	6852      	ldr	r2, [r2, #4]
 801ce24:	6910      	ldr	r0, [r2, #16]
 801ce26:	491c      	ldr	r1, [pc, #112]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce28:	2201      	movs	r2, #1
 801ce2a:	302c      	adds	r0, #44	@ 0x2c
 801ce2c:	f000 be5c 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce30:	4a14      	ldr	r2, [pc, #80]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce32:	6852      	ldr	r2, [r2, #4]
 801ce34:	6910      	ldr	r0, [r2, #16]
 801ce36:	4918      	ldr	r1, [pc, #96]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce38:	2201      	movs	r2, #1
 801ce3a:	3054      	adds	r0, #84	@ 0x54
 801ce3c:	f000 be54 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce40:	4a10      	ldr	r2, [pc, #64]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce42:	6852      	ldr	r2, [r2, #4]
 801ce44:	6912      	ldr	r2, [r2, #16]
 801ce46:	4619      	mov	r1, r3
 801ce48:	f892 005c 	ldrb.w	r0, [r2, #92]	@ 0x5c
 801ce4c:	f7f7 f8ee 	bl	801402c <fibre::Codec<unsigned char, void>::encode(unsigned char, fibre::generic_bufptr_t<unsigned char>*)>
 801ce50:	f000 be65 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801ce54:	4a0b      	ldr	r2, [pc, #44]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce56:	6852      	ldr	r2, [r2, #4]
 801ce58:	6910      	ldr	r0, [r2, #16]
 801ce5a:	490f      	ldr	r1, [pc, #60]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce5c:	2201      	movs	r2, #1
 801ce5e:	304c      	adds	r0, #76	@ 0x4c
 801ce60:	f000 be42 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce64:	4a07      	ldr	r2, [pc, #28]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce66:	6852      	ldr	r2, [r2, #4]
 801ce68:	6910      	ldr	r0, [r2, #16]
 801ce6a:	490b      	ldr	r1, [pc, #44]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce6c:	2201      	movs	r2, #1
 801ce6e:	3030      	adds	r0, #48	@ 0x30
 801ce70:	f000 be3a 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce74:	4a03      	ldr	r2, [pc, #12]	@ (801ce84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59e8>)
 801ce76:	6852      	ldr	r2, [r2, #4]
 801ce78:	6910      	ldr	r0, [r2, #16]
 801ce7a:	4907      	ldr	r1, [pc, #28]	@ (801ce98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x59fc>)
 801ce7c:	2201      	movs	r2, #1
 801ce7e:	303c      	adds	r0, #60	@ 0x3c
 801ce80:	f000 be32 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ce84:	200019cc 	.word	0x200019cc
 801ce88:	0801285d 	.word	0x0801285d
 801ce8c:	08012861 	.word	0x08012861
 801ce90:	0801283d 	.word	0x0801283d
 801ce94:	08012845 	.word	0x08012845
 801ce98:	08012835 	.word	0x08012835
 801ce9c:	080128e5 	.word	0x080128e5
 801cea0:	080128e9 	.word	0x080128e9
 801cea4:	4ab3      	ldr	r2, [pc, #716]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cea6:	6852      	ldr	r2, [r2, #4]
 801cea8:	6912      	ldr	r2, [r2, #16]
 801ceaa:	3240      	adds	r2, #64	@ 0x40
 801ceac:	9208      	str	r2, [sp, #32]
 801ceae:	4ab2      	ldr	r2, [pc, #712]	@ (801d178 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cdc>)
 801ceb0:	9209      	str	r2, [sp, #36]	@ 0x24
 801ceb2:	4ab2      	ldr	r2, [pc, #712]	@ (801d17c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ce0>)
 801ceb4:	920a      	str	r2, [sp, #40]	@ 0x28
 801ceb6:	2201      	movs	r2, #1
 801ceb8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cebc:	2200      	movs	r2, #0
 801cebe:	f88d 201c 	strb.w	r2, [sp, #28]
 801cec2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801cec6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801ceca:	e88d 0003 	stmia.w	sp, {r0, r1}
 801cece:	ab0c      	add	r3, sp, #48	@ 0x30
 801ced0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801ced4:	f7f6 fc1a 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801ced8:	f000 be21 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cedc:	4aa5      	ldr	r2, [pc, #660]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cede:	6852      	ldr	r2, [r2, #4]
 801cee0:	6910      	ldr	r0, [r2, #16]
 801cee2:	49a7      	ldr	r1, [pc, #668]	@ (801d180 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ce4>)
 801cee4:	2201      	movs	r2, #1
 801cee6:	3044      	adds	r0, #68	@ 0x44
 801cee8:	f000 bdfe 	b.w	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801ceec:	4aa1      	ldr	r2, [pc, #644]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801ceee:	6852      	ldr	r2, [r2, #4]
 801cef0:	6912      	ldr	r2, [r2, #16]
 801cef2:	68d2      	ldr	r2, [r2, #12]
 801cef4:	9208      	str	r2, [sp, #32]
 801cef6:	4aa3      	ldr	r2, [pc, #652]	@ (801d184 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ce8>)
 801cef8:	9209      	str	r2, [sp, #36]	@ 0x24
 801cefa:	4aa3      	ldr	r2, [pc, #652]	@ (801d188 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cec>)
 801cefc:	920a      	str	r2, [sp, #40]	@ 0x28
 801cefe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cf02:	2201      	movs	r2, #1
 801cf04:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cf08:	2200      	movs	r2, #0
 801cf0a:	9200      	str	r2, [sp, #0]
 801cf0c:	ab0c      	add	r3, sp, #48	@ 0x30
 801cf0e:	9206      	str	r2, [sp, #24]
 801cf10:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cf14:	f7f6 fc84 	bl	8013820 <fibre_property_odrive_encoder_mode_readwrite_exchange(std::optional<Property<ODriveIntf::EncoderIntf::Mode> >, std::optional<ODriveIntf::EncoderIntf::Mode>, ODriveIntf::EncoderIntf::Mode*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cf18:	f000 be01 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cf1c:	4a95      	ldr	r2, [pc, #596]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cf1e:	6852      	ldr	r2, [r2, #4]
 801cf20:	6912      	ldr	r2, [r2, #16]
 801cf22:	68d2      	ldr	r2, [r2, #12]
 801cf24:	9208      	str	r2, [sp, #32]
 801cf26:	4a99      	ldr	r2, [pc, #612]	@ (801d18c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cf0>)
 801cf28:	9209      	str	r2, [sp, #36]	@ 0x24
 801cf2a:	4a99      	ldr	r2, [pc, #612]	@ (801d190 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cf4>)
 801cf2c:	920a      	str	r2, [sp, #40]	@ 0x28
 801cf2e:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cf32:	2201      	movs	r2, #1
 801cf34:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cf38:	2200      	movs	r2, #0
 801cf3a:	f8ad 2000 	strh.w	r2, [sp]
 801cf3e:	ab0c      	add	r3, sp, #48	@ 0x30
 801cf40:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cf44:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cf48:	f7f6 f9b2 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cf4c:	f000 bde7 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cf50:	4a88      	ldr	r2, [pc, #544]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cf52:	6852      	ldr	r2, [r2, #4]
 801cf54:	6912      	ldr	r2, [r2, #16]
 801cf56:	68d2      	ldr	r2, [r2, #12]
 801cf58:	9208      	str	r2, [sp, #32]
 801cf5a:	4a8e      	ldr	r2, [pc, #568]	@ (801d194 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cf8>)
 801cf5c:	9209      	str	r2, [sp, #36]	@ 0x24
 801cf5e:	4a8e      	ldr	r2, [pc, #568]	@ (801d198 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cfc>)
 801cf60:	920a      	str	r2, [sp, #40]	@ 0x28
 801cf62:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cf66:	2201      	movs	r2, #1
 801cf68:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cf6c:	2200      	movs	r2, #0
 801cf6e:	f8ad 2000 	strh.w	r2, [sp]
 801cf72:	ab0c      	add	r3, sp, #48	@ 0x30
 801cf74:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cf78:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cf7c:	f7f6 f998 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cf80:	f000 bdcd 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cf84:	4a7b      	ldr	r2, [pc, #492]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cf86:	6852      	ldr	r2, [r2, #4]
 801cf88:	6912      	ldr	r2, [r2, #16]
 801cf8a:	68d2      	ldr	r2, [r2, #12]
 801cf8c:	9208      	str	r2, [sp, #32]
 801cf8e:	4a83      	ldr	r2, [pc, #524]	@ (801d19c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d00>)
 801cf90:	9209      	str	r2, [sp, #36]	@ 0x24
 801cf92:	4a83      	ldr	r2, [pc, #524]	@ (801d1a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d04>)
 801cf94:	920a      	str	r2, [sp, #40]	@ 0x28
 801cf96:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cf9a:	2201      	movs	r2, #1
 801cf9c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cfa0:	2200      	movs	r2, #0
 801cfa2:	9200      	str	r2, [sp, #0]
 801cfa4:	ab0c      	add	r3, sp, #48	@ 0x30
 801cfa6:	9206      	str	r2, [sp, #24]
 801cfa8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cfac:	f7f6 fa34 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cfb0:	f000 bdb5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cfb4:	4a6f      	ldr	r2, [pc, #444]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cfb6:	6852      	ldr	r2, [r2, #4]
 801cfb8:	6912      	ldr	r2, [r2, #16]
 801cfba:	68d2      	ldr	r2, [r2, #12]
 801cfbc:	3204      	adds	r2, #4
 801cfbe:	9208      	str	r2, [sp, #32]
 801cfc0:	4a78      	ldr	r2, [pc, #480]	@ (801d1a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d08>)
 801cfc2:	9209      	str	r2, [sp, #36]	@ 0x24
 801cfc4:	4a78      	ldr	r2, [pc, #480]	@ (801d1a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d0c>)
 801cfc6:	920a      	str	r2, [sp, #40]	@ 0x28
 801cfc8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801cfcc:	2201      	movs	r2, #1
 801cfce:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801cfd2:	2200      	movs	r2, #0
 801cfd4:	f8ad 2000 	strh.w	r2, [sp]
 801cfd8:	ab0c      	add	r3, sp, #48	@ 0x30
 801cfda:	f8ad 2018 	strh.w	r2, [sp, #24]
 801cfde:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801cfe2:	f7f6 f965 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801cfe6:	f000 bd9a 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801cfea:	4a62      	ldr	r2, [pc, #392]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801cfec:	6852      	ldr	r2, [r2, #4]
 801cfee:	6912      	ldr	r2, [r2, #16]
 801cff0:	68d2      	ldr	r2, [r2, #12]
 801cff2:	3208      	adds	r2, #8
 801cff4:	9208      	str	r2, [sp, #32]
 801cff6:	4a60      	ldr	r2, [pc, #384]	@ (801d178 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cdc>)
 801cff8:	9209      	str	r2, [sp, #36]	@ 0x24
 801cffa:	4a60      	ldr	r2, [pc, #384]	@ (801d17c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ce0>)
 801cffc:	920a      	str	r2, [sp, #40]	@ 0x28
 801cffe:	2201      	movs	r2, #1
 801d000:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d004:	2200      	movs	r2, #0
 801d006:	f88d 201c 	strb.w	r2, [sp, #28]
 801d00a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d00e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d012:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d016:	ab0c      	add	r3, sp, #48	@ 0x30
 801d018:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d01c:	f7f6 fb76 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d020:	f000 bd7d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d024:	4a53      	ldr	r2, [pc, #332]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d026:	6852      	ldr	r2, [r2, #4]
 801d028:	6912      	ldr	r2, [r2, #16]
 801d02a:	68d2      	ldr	r2, [r2, #12]
 801d02c:	320c      	adds	r2, #12
 801d02e:	9208      	str	r2, [sp, #32]
 801d030:	4a51      	ldr	r2, [pc, #324]	@ (801d178 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cdc>)
 801d032:	9209      	str	r2, [sp, #36]	@ 0x24
 801d034:	4a51      	ldr	r2, [pc, #324]	@ (801d17c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ce0>)
 801d036:	920a      	str	r2, [sp, #40]	@ 0x28
 801d038:	2201      	movs	r2, #1
 801d03a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d03e:	2200      	movs	r2, #0
 801d040:	f88d 201c 	strb.w	r2, [sp, #28]
 801d044:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d048:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d04c:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d050:	ab0c      	add	r3, sp, #48	@ 0x30
 801d052:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d056:	f7f6 fb59 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d05a:	f000 bd60 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d05e:	4a45      	ldr	r2, [pc, #276]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d060:	6852      	ldr	r2, [r2, #4]
 801d062:	6912      	ldr	r2, [r2, #16]
 801d064:	68d2      	ldr	r2, [r2, #12]
 801d066:	9208      	str	r2, [sp, #32]
 801d068:	4a50      	ldr	r2, [pc, #320]	@ (801d1ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d10>)
 801d06a:	9209      	str	r2, [sp, #36]	@ 0x24
 801d06c:	4a50      	ldr	r2, [pc, #320]	@ (801d1b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d14>)
 801d06e:	920a      	str	r2, [sp, #40]	@ 0x28
 801d070:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d074:	2201      	movs	r2, #1
 801d076:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d07a:	2200      	movs	r2, #0
 801d07c:	f8ad 2000 	strh.w	r2, [sp]
 801d080:	ab0c      	add	r3, sp, #48	@ 0x30
 801d082:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d086:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d08a:	f7f6 f911 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d08e:	f000 bd46 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d092:	4a38      	ldr	r2, [pc, #224]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d094:	6852      	ldr	r2, [r2, #4]
 801d096:	6912      	ldr	r2, [r2, #16]
 801d098:	68d2      	ldr	r2, [r2, #12]
 801d09a:	3210      	adds	r2, #16
 801d09c:	9208      	str	r2, [sp, #32]
 801d09e:	4a45      	ldr	r2, [pc, #276]	@ (801d1b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d18>)
 801d0a0:	9209      	str	r2, [sp, #36]	@ 0x24
 801d0a2:	4a45      	ldr	r2, [pc, #276]	@ (801d1b8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d1c>)
 801d0a4:	920a      	str	r2, [sp, #40]	@ 0x28
 801d0a6:	2201      	movs	r2, #1
 801d0a8:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d0ac:	2200      	movs	r2, #0
 801d0ae:	f88d 201c 	strb.w	r2, [sp, #28]
 801d0b2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d0b6:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d0ba:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d0be:	ab0c      	add	r3, sp, #48	@ 0x30
 801d0c0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d0c4:	f7f6 fa4a 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d0c8:	f000 bd29 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d0cc:	4a29      	ldr	r2, [pc, #164]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d0ce:	6852      	ldr	r2, [r2, #4]
 801d0d0:	6912      	ldr	r2, [r2, #16]
 801d0d2:	68d2      	ldr	r2, [r2, #12]
 801d0d4:	3214      	adds	r2, #20
 801d0d6:	9208      	str	r2, [sp, #32]
 801d0d8:	4a32      	ldr	r2, [pc, #200]	@ (801d1a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d08>)
 801d0da:	9209      	str	r2, [sp, #36]	@ 0x24
 801d0dc:	4a32      	ldr	r2, [pc, #200]	@ (801d1a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d0c>)
 801d0de:	920a      	str	r2, [sp, #40]	@ 0x28
 801d0e0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d0e4:	2201      	movs	r2, #1
 801d0e6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d0ea:	2200      	movs	r2, #0
 801d0ec:	f8ad 2000 	strh.w	r2, [sp]
 801d0f0:	ab0c      	add	r3, sp, #48	@ 0x30
 801d0f2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d0f6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d0fa:	f7f6 f8d9 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d0fe:	f000 bd0e 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d102:	4a1c      	ldr	r2, [pc, #112]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d104:	6852      	ldr	r2, [r2, #4]
 801d106:	6912      	ldr	r2, [r2, #16]
 801d108:	68d2      	ldr	r2, [r2, #12]
 801d10a:	9208      	str	r2, [sp, #32]
 801d10c:	4a2b      	ldr	r2, [pc, #172]	@ (801d1bc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d20>)
 801d10e:	9209      	str	r2, [sp, #36]	@ 0x24
 801d110:	4a2b      	ldr	r2, [pc, #172]	@ (801d1c0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d24>)
 801d112:	920a      	str	r2, [sp, #40]	@ 0x28
 801d114:	2201      	movs	r2, #1
 801d116:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d11a:	2200      	movs	r2, #0
 801d11c:	f88d 201c 	strb.w	r2, [sp, #28]
 801d120:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d124:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d128:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d12c:	ab0c      	add	r3, sp, #48	@ 0x30
 801d12e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d132:	f7f6 fa13 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d136:	f000 bcf2 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d13a:	4a0e      	ldr	r2, [pc, #56]	@ (801d174 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5cd8>)
 801d13c:	6852      	ldr	r2, [r2, #4]
 801d13e:	6912      	ldr	r2, [r2, #16]
 801d140:	68d2      	ldr	r2, [r2, #12]
 801d142:	3218      	adds	r2, #24
 801d144:	9208      	str	r2, [sp, #32]
 801d146:	4a1b      	ldr	r2, [pc, #108]	@ (801d1b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d18>)
 801d148:	9209      	str	r2, [sp, #36]	@ 0x24
 801d14a:	4a1b      	ldr	r2, [pc, #108]	@ (801d1b8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5d1c>)
 801d14c:	920a      	str	r2, [sp, #40]	@ 0x28
 801d14e:	2201      	movs	r2, #1
 801d150:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d154:	2200      	movs	r2, #0
 801d156:	f88d 201c 	strb.w	r2, [sp, #28]
 801d15a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d15e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d162:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d166:	ab0c      	add	r3, sp, #48	@ 0x30
 801d168:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d16c:	f7f6 f9f6 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d170:	f000 bcd5 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d174:	200019cc 	.word	0x200019cc
 801d178:	080128b5 	.word	0x080128b5
 801d17c:	080128b9 	.word	0x080128b9
 801d180:	08012835 	.word	0x08012835
 801d184:	080128f1 	.word	0x080128f1
 801d188:	080128f5 	.word	0x080128f5
 801d18c:	080131c9 	.word	0x080131c9
 801d190:	08014199 	.word	0x08014199
 801d194:	080131c1 	.word	0x080131c1
 801d198:	080141b9 	.word	0x080141b9
 801d19c:	080131b5 	.word	0x080131b5
 801d1a0:	080141d1 	.word	0x080141d1
 801d1a4:	0801285d 	.word	0x0801285d
 801d1a8:	08012861 	.word	0x08012861
 801d1ac:	080131ad 	.word	0x080131ad
 801d1b0:	080141e9 	.word	0x080141e9
 801d1b4:	0801283d 	.word	0x0801283d
 801d1b8:	08012845 	.word	0x08012845
 801d1bc:	080131a5 	.word	0x080131a5
 801d1c0:	08014205 	.word	0x08014205
 801d1c4:	4ab3      	ldr	r2, [pc, #716]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d1c6:	6852      	ldr	r2, [r2, #4]
 801d1c8:	6912      	ldr	r2, [r2, #16]
 801d1ca:	68d2      	ldr	r2, [r2, #12]
 801d1cc:	321c      	adds	r2, #28
 801d1ce:	9208      	str	r2, [sp, #32]
 801d1d0:	4ab1      	ldr	r2, [pc, #708]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d1d2:	9209      	str	r2, [sp, #36]	@ 0x24
 801d1d4:	4ab1      	ldr	r2, [pc, #708]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d1d6:	920a      	str	r2, [sp, #40]	@ 0x28
 801d1d8:	2201      	movs	r2, #1
 801d1da:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d1de:	2200      	movs	r2, #0
 801d1e0:	f88d 201c 	strb.w	r2, [sp, #28]
 801d1e4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d1e8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d1ec:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d1f0:	ab0c      	add	r3, sp, #48	@ 0x30
 801d1f2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d1f6:	f7f6 f9b1 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d1fa:	f000 bc90 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d1fe:	4aa5      	ldr	r2, [pc, #660]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d200:	6852      	ldr	r2, [r2, #4]
 801d202:	6912      	ldr	r2, [r2, #16]
 801d204:	68d2      	ldr	r2, [r2, #12]
 801d206:	3220      	adds	r2, #32
 801d208:	9208      	str	r2, [sp, #32]
 801d20a:	4aa3      	ldr	r2, [pc, #652]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d20c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d20e:	4aa3      	ldr	r2, [pc, #652]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d210:	920a      	str	r2, [sp, #40]	@ 0x28
 801d212:	2201      	movs	r2, #1
 801d214:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d218:	2200      	movs	r2, #0
 801d21a:	f88d 201c 	strb.w	r2, [sp, #28]
 801d21e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d222:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d226:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d22a:	ab0c      	add	r3, sp, #48	@ 0x30
 801d22c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d230:	f7f6 f994 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d234:	f000 bc73 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d238:	4a96      	ldr	r2, [pc, #600]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d23a:	6852      	ldr	r2, [r2, #4]
 801d23c:	6912      	ldr	r2, [r2, #16]
 801d23e:	68d2      	ldr	r2, [r2, #12]
 801d240:	3229      	adds	r2, #41	@ 0x29
 801d242:	9208      	str	r2, [sp, #32]
 801d244:	4a96      	ldr	r2, [pc, #600]	@ (801d4a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6004>)
 801d246:	9209      	str	r2, [sp, #36]	@ 0x24
 801d248:	4a96      	ldr	r2, [pc, #600]	@ (801d4a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6008>)
 801d24a:	920a      	str	r2, [sp, #40]	@ 0x28
 801d24c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d250:	2201      	movs	r2, #1
 801d252:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d256:	2200      	movs	r2, #0
 801d258:	f8ad 2000 	strh.w	r2, [sp]
 801d25c:	ab0c      	add	r3, sp, #48	@ 0x30
 801d25e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d262:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d266:	f7f6 f823 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d26a:	f000 bc58 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d26e:	4a89      	ldr	r2, [pc, #548]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d270:	6852      	ldr	r2, [r2, #4]
 801d272:	6912      	ldr	r2, [r2, #16]
 801d274:	68d2      	ldr	r2, [r2, #12]
 801d276:	322a      	adds	r2, #42	@ 0x2a
 801d278:	9208      	str	r2, [sp, #32]
 801d27a:	4a89      	ldr	r2, [pc, #548]	@ (801d4a0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6004>)
 801d27c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d27e:	4a89      	ldr	r2, [pc, #548]	@ (801d4a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6008>)
 801d280:	920a      	str	r2, [sp, #40]	@ 0x28
 801d282:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d286:	2201      	movs	r2, #1
 801d288:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d28c:	2200      	movs	r2, #0
 801d28e:	f8ad 2000 	strh.w	r2, [sp]
 801d292:	ab0c      	add	r3, sp, #48	@ 0x30
 801d294:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d298:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d29c:	f7f6 f808 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d2a0:	f000 bc3d 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d2a4:	4a7b      	ldr	r2, [pc, #492]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d2a6:	6852      	ldr	r2, [r2, #4]
 801d2a8:	6912      	ldr	r2, [r2, #16]
 801d2aa:	68d2      	ldr	r2, [r2, #12]
 801d2ac:	322e      	adds	r2, #46	@ 0x2e
 801d2ae:	9208      	str	r2, [sp, #32]
 801d2b0:	4a7d      	ldr	r2, [pc, #500]	@ (801d4a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x600c>)
 801d2b2:	9209      	str	r2, [sp, #36]	@ 0x24
 801d2b4:	4a7d      	ldr	r2, [pc, #500]	@ (801d4ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6010>)
 801d2b6:	920a      	str	r2, [sp, #40]	@ 0x28
 801d2b8:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d2bc:	2201      	movs	r2, #1
 801d2be:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d2c2:	2200      	movs	r2, #0
 801d2c4:	9200      	str	r2, [sp, #0]
 801d2c6:	ab0c      	add	r3, sp, #48	@ 0x30
 801d2c8:	9206      	str	r2, [sp, #24]
 801d2ca:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d2ce:	f7f6 f8a3 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d2d2:	f000 bc24 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d2d6:	4a6f      	ldr	r2, [pc, #444]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d2d8:	6852      	ldr	r2, [r2, #4]
 801d2da:	6912      	ldr	r2, [r2, #16]
 801d2dc:	68d2      	ldr	r2, [r2, #12]
 801d2de:	3230      	adds	r2, #48	@ 0x30
 801d2e0:	9208      	str	r2, [sp, #32]
 801d2e2:	4a71      	ldr	r2, [pc, #452]	@ (801d4a8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x600c>)
 801d2e4:	9209      	str	r2, [sp, #36]	@ 0x24
 801d2e6:	4a71      	ldr	r2, [pc, #452]	@ (801d4ac <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6010>)
 801d2e8:	920a      	str	r2, [sp, #40]	@ 0x28
 801d2ea:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d2ee:	2201      	movs	r2, #1
 801d2f0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d2f4:	2200      	movs	r2, #0
 801d2f6:	9200      	str	r2, [sp, #0]
 801d2f8:	ab0c      	add	r3, sp, #48	@ 0x30
 801d2fa:	9206      	str	r2, [sp, #24]
 801d2fc:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d300:	f7f6 f88a 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d304:	f000 bc0b 	b.w	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d308:	4b62      	ldr	r3, [pc, #392]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d30a:	685b      	ldr	r3, [r3, #4]
 801d30c:	6918      	ldr	r0, [r3, #16]
 801d30e:	4622      	mov	r2, r4
 801d310:	6841      	ldr	r1, [r0, #4]
 801d312:	f7f6 fe77 	bl	8014004 <odrive_encoder_set_linear_count(std::optional<ODriveIntf::EncoderIntf*>, std::optional<long>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 801d316:	f7fc bf65 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801d31a:	4a5e      	ldr	r2, [pc, #376]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d31c:	6852      	ldr	r2, [r2, #4]
 801d31e:	6912      	ldr	r2, [r2, #16]
 801d320:	3204      	adds	r2, #4
 801d322:	9208      	str	r2, [sp, #32]
 801d324:	4a62      	ldr	r2, [pc, #392]	@ (801d4b0 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6014>)
 801d326:	9209      	str	r2, [sp, #36]	@ 0x24
 801d328:	4a62      	ldr	r2, [pc, #392]	@ (801d4b4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6018>)
 801d32a:	920a      	str	r2, [sp, #40]	@ 0x28
 801d32c:	2201      	movs	r2, #1
 801d32e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d332:	2200      	movs	r2, #0
 801d334:	f88d 201c 	strb.w	r2, [sp, #28]
 801d338:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d33c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d340:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d344:	ab0c      	add	r3, sp, #48	@ 0x30
 801d346:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d34a:	f7f6 f9df 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d34e:	e3e6      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d350:	4a50      	ldr	r2, [pc, #320]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d352:	6852      	ldr	r2, [r2, #4]
 801d354:	6952      	ldr	r2, [r2, #20]
 801d356:	3208      	adds	r2, #8
 801d358:	9208      	str	r2, [sp, #32]
 801d35a:	4a57      	ldr	r2, [pc, #348]	@ (801d4b8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x601c>)
 801d35c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d35e:	4a57      	ldr	r2, [pc, #348]	@ (801d4bc <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6020>)
 801d360:	920a      	str	r2, [sp, #40]	@ 0x28
 801d362:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d366:	2201      	movs	r2, #1
 801d368:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d36c:	2200      	movs	r2, #0
 801d36e:	f8ad 2000 	strh.w	r2, [sp]
 801d372:	ab0c      	add	r3, sp, #48	@ 0x30
 801d374:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d378:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d37c:	f7f6 fb50 	bl	8013a20 <fibre_property_odrive_sensorless_estimator_error_readwrite_exchange(std::optional<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >, std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>, ODriveIntf::SensorlessEstimatorIntf::Error*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d380:	e3cd      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d382:	4a44      	ldr	r2, [pc, #272]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d384:	6852      	ldr	r2, [r2, #4]
 801d386:	6952      	ldr	r2, [r2, #20]
 801d388:	320c      	adds	r2, #12
 801d38a:	9208      	str	r2, [sp, #32]
 801d38c:	4a42      	ldr	r2, [pc, #264]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d38e:	9209      	str	r2, [sp, #36]	@ 0x24
 801d390:	4a42      	ldr	r2, [pc, #264]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d392:	920a      	str	r2, [sp, #40]	@ 0x28
 801d394:	2201      	movs	r2, #1
 801d396:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d39a:	2200      	movs	r2, #0
 801d39c:	f88d 201c 	strb.w	r2, [sp, #28]
 801d3a0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d3a4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d3a8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d3ac:	ab0c      	add	r3, sp, #48	@ 0x30
 801d3ae:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d3b2:	f7f6 f8d3 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d3b6:	e3b2      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d3b8:	4a36      	ldr	r2, [pc, #216]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d3ba:	6852      	ldr	r2, [r2, #4]
 801d3bc:	6952      	ldr	r2, [r2, #20]
 801d3be:	3210      	adds	r2, #16
 801d3c0:	9208      	str	r2, [sp, #32]
 801d3c2:	4a35      	ldr	r2, [pc, #212]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d3c4:	9209      	str	r2, [sp, #36]	@ 0x24
 801d3c6:	4a35      	ldr	r2, [pc, #212]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d3c8:	920a      	str	r2, [sp, #40]	@ 0x28
 801d3ca:	2201      	movs	r2, #1
 801d3cc:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d3d0:	2200      	movs	r2, #0
 801d3d2:	f88d 201c 	strb.w	r2, [sp, #28]
 801d3d6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d3da:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d3de:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d3e2:	ab0c      	add	r3, sp, #48	@ 0x30
 801d3e4:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d3e8:	f7f6 f8b8 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d3ec:	e397      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d3ee:	4a29      	ldr	r2, [pc, #164]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d3f0:	6852      	ldr	r2, [r2, #4]
 801d3f2:	6952      	ldr	r2, [r2, #20]
 801d3f4:	3214      	adds	r2, #20
 801d3f6:	9208      	str	r2, [sp, #32]
 801d3f8:	4a27      	ldr	r2, [pc, #156]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d3fa:	9209      	str	r2, [sp, #36]	@ 0x24
 801d3fc:	4a27      	ldr	r2, [pc, #156]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d3fe:	920a      	str	r2, [sp, #40]	@ 0x28
 801d400:	2201      	movs	r2, #1
 801d402:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d406:	2200      	movs	r2, #0
 801d408:	f88d 201c 	strb.w	r2, [sp, #28]
 801d40c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d410:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d414:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d418:	ab0c      	add	r3, sp, #48	@ 0x30
 801d41a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d41e:	f7f6 f89d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d422:	e37c      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d424:	4a1b      	ldr	r2, [pc, #108]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d426:	6852      	ldr	r2, [r2, #4]
 801d428:	6952      	ldr	r2, [r2, #20]
 801d42a:	6852      	ldr	r2, [r2, #4]
 801d42c:	9208      	str	r2, [sp, #32]
 801d42e:	4a1a      	ldr	r2, [pc, #104]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d430:	9209      	str	r2, [sp, #36]	@ 0x24
 801d432:	4a1a      	ldr	r2, [pc, #104]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d434:	920a      	str	r2, [sp, #40]	@ 0x28
 801d436:	2201      	movs	r2, #1
 801d438:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d43c:	2200      	movs	r2, #0
 801d43e:	f88d 201c 	strb.w	r2, [sp, #28]
 801d442:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d446:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d44a:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d44e:	ab0c      	add	r3, sp, #48	@ 0x30
 801d450:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d454:	f7f6 f882 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d458:	e361      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d45a:	4a0e      	ldr	r2, [pc, #56]	@ (801d494 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ff8>)
 801d45c:	6852      	ldr	r2, [r2, #4]
 801d45e:	6952      	ldr	r2, [r2, #20]
 801d460:	6852      	ldr	r2, [r2, #4]
 801d462:	3204      	adds	r2, #4
 801d464:	9208      	str	r2, [sp, #32]
 801d466:	4a0c      	ldr	r2, [pc, #48]	@ (801d498 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x5ffc>)
 801d468:	9209      	str	r2, [sp, #36]	@ 0x24
 801d46a:	4a0c      	ldr	r2, [pc, #48]	@ (801d49c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6000>)
 801d46c:	920a      	str	r2, [sp, #40]	@ 0x28
 801d46e:	2201      	movs	r2, #1
 801d470:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d474:	2200      	movs	r2, #0
 801d476:	f88d 201c 	strb.w	r2, [sp, #28]
 801d47a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d47e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d482:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d486:	ab0c      	add	r3, sp, #48	@ 0x30
 801d488:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d48c:	f7f6 f866 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d490:	e345      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d492:	bf00      	nop
 801d494:	200019cc 	.word	0x200019cc
 801d498:	0801283d 	.word	0x0801283d
 801d49c:	08012845 	.word	0x08012845
 801d4a0:	0801285d 	.word	0x0801285d
 801d4a4:	08012861 	.word	0x08012861
 801d4a8:	080128f9 	.word	0x080128f9
 801d4ac:	080128fd 	.word	0x080128fd
 801d4b0:	080128b5 	.word	0x080128b5
 801d4b4:	080128b9 	.word	0x080128b9
 801d4b8:	08012901 	.word	0x08012901
 801d4bc:	08012905 	.word	0x08012905
 801d4c0:	4aa4      	ldr	r2, [pc, #656]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d4c2:	6852      	ldr	r2, [r2, #4]
 801d4c4:	6952      	ldr	r2, [r2, #20]
 801d4c6:	6852      	ldr	r2, [r2, #4]
 801d4c8:	3208      	adds	r2, #8
 801d4ca:	9208      	str	r2, [sp, #32]
 801d4cc:	4aa2      	ldr	r2, [pc, #648]	@ (801d758 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62bc>)
 801d4ce:	9209      	str	r2, [sp, #36]	@ 0x24
 801d4d0:	4aa2      	ldr	r2, [pc, #648]	@ (801d75c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c0>)
 801d4d2:	920a      	str	r2, [sp, #40]	@ 0x28
 801d4d4:	2201      	movs	r2, #1
 801d4d6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d4da:	2200      	movs	r2, #0
 801d4dc:	f88d 201c 	strb.w	r2, [sp, #28]
 801d4e0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d4e4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d4e8:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d4ec:	ab0c      	add	r3, sp, #48	@ 0x30
 801d4ee:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d4f2:	f7f6 f833 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d4f6:	e312      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d4f8:	4a96      	ldr	r2, [pc, #600]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d4fa:	6852      	ldr	r2, [r2, #4]
 801d4fc:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801d4fe:	6852      	ldr	r2, [r2, #4]
 801d500:	9208      	str	r2, [sp, #32]
 801d502:	4a95      	ldr	r2, [pc, #596]	@ (801d758 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62bc>)
 801d504:	9209      	str	r2, [sp, #36]	@ 0x24
 801d506:	4a95      	ldr	r2, [pc, #596]	@ (801d75c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c0>)
 801d508:	920a      	str	r2, [sp, #40]	@ 0x28
 801d50a:	2201      	movs	r2, #1
 801d50c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d510:	2200      	movs	r2, #0
 801d512:	f88d 201c 	strb.w	r2, [sp, #28]
 801d516:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d51a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d51e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d522:	ab0c      	add	r3, sp, #48	@ 0x30
 801d524:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d528:	f7f6 f818 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d52c:	e2f7      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d52e:	4a89      	ldr	r2, [pc, #548]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d530:	6852      	ldr	r2, [r2, #4]
 801d532:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801d534:	6852      	ldr	r2, [r2, #4]
 801d536:	3204      	adds	r2, #4
 801d538:	9208      	str	r2, [sp, #32]
 801d53a:	4a87      	ldr	r2, [pc, #540]	@ (801d758 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62bc>)
 801d53c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d53e:	4a87      	ldr	r2, [pc, #540]	@ (801d75c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c0>)
 801d540:	920a      	str	r2, [sp, #40]	@ 0x28
 801d542:	2201      	movs	r2, #1
 801d544:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d548:	2200      	movs	r2, #0
 801d54a:	f88d 201c 	strb.w	r2, [sp, #28]
 801d54e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d552:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d556:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d55a:	ab0c      	add	r3, sp, #48	@ 0x30
 801d55c:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d560:	f7f5 fffc 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d564:	e2db      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d566:	4a7b      	ldr	r2, [pc, #492]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d568:	6852      	ldr	r2, [r2, #4]
 801d56a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 801d56c:	6852      	ldr	r2, [r2, #4]
 801d56e:	3208      	adds	r2, #8
 801d570:	9208      	str	r2, [sp, #32]
 801d572:	4a79      	ldr	r2, [pc, #484]	@ (801d758 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62bc>)
 801d574:	9209      	str	r2, [sp, #36]	@ 0x24
 801d576:	4a79      	ldr	r2, [pc, #484]	@ (801d75c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c0>)
 801d578:	920a      	str	r2, [sp, #40]	@ 0x28
 801d57a:	2201      	movs	r2, #1
 801d57c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d580:	2200      	movs	r2, #0
 801d582:	f88d 201c 	strb.w	r2, [sp, #28]
 801d586:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d58a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d58e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d592:	ab0c      	add	r3, sp, #48	@ 0x30
 801d594:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d598:	f7f5 ffe0 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d59c:	e2bf      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d59e:	4a6d      	ldr	r2, [pc, #436]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d5a0:	6852      	ldr	r2, [r2, #4]
 801d5a2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d5a4:	4619      	mov	r1, r3
 801d5a6:	7a10      	ldrb	r0, [r2, #8]
 801d5a8:	f7f6 fd32 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801d5ac:	e2b7      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d5ae:	4a69      	ldr	r2, [pc, #420]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d5b0:	6852      	ldr	r2, [r2, #4]
 801d5b2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d5b4:	6812      	ldr	r2, [r2, #0]
 801d5b6:	9208      	str	r2, [sp, #32]
 801d5b8:	4a69      	ldr	r2, [pc, #420]	@ (801d760 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c4>)
 801d5ba:	9209      	str	r2, [sp, #36]	@ 0x24
 801d5bc:	4a69      	ldr	r2, [pc, #420]	@ (801d764 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c8>)
 801d5be:	920a      	str	r2, [sp, #40]	@ 0x28
 801d5c0:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d5c4:	2201      	movs	r2, #1
 801d5c6:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d5ca:	2200      	movs	r2, #0
 801d5cc:	9200      	str	r2, [sp, #0]
 801d5ce:	ab0c      	add	r3, sp, #48	@ 0x30
 801d5d0:	9206      	str	r2, [sp, #24]
 801d5d2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d5d6:	f7f5 ff1f 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d5da:	e2a0      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d5dc:	4a5d      	ldr	r2, [pc, #372]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d5de:	6852      	ldr	r2, [r2, #4]
 801d5e0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d5e2:	6812      	ldr	r2, [r2, #0]
 801d5e4:	9208      	str	r2, [sp, #32]
 801d5e6:	4a60      	ldr	r2, [pc, #384]	@ (801d768 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62cc>)
 801d5e8:	9209      	str	r2, [sp, #36]	@ 0x24
 801d5ea:	4a60      	ldr	r2, [pc, #384]	@ (801d76c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d0>)
 801d5ec:	920a      	str	r2, [sp, #40]	@ 0x28
 801d5ee:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d5f2:	2201      	movs	r2, #1
 801d5f4:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d5f8:	2200      	movs	r2, #0
 801d5fa:	f8ad 2000 	strh.w	r2, [sp]
 801d5fe:	ab0c      	add	r3, sp, #48	@ 0x30
 801d600:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d604:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d608:	f7f5 fe52 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d60c:	e287      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d60e:	4a51      	ldr	r2, [pc, #324]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d610:	6852      	ldr	r2, [r2, #4]
 801d612:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d614:	6812      	ldr	r2, [r2, #0]
 801d616:	9208      	str	r2, [sp, #32]
 801d618:	4a4f      	ldr	r2, [pc, #316]	@ (801d758 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62bc>)
 801d61a:	9209      	str	r2, [sp, #36]	@ 0x24
 801d61c:	4a4f      	ldr	r2, [pc, #316]	@ (801d75c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c0>)
 801d61e:	920a      	str	r2, [sp, #40]	@ 0x28
 801d620:	2201      	movs	r2, #1
 801d622:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d626:	2200      	movs	r2, #0
 801d628:	f88d 201c 	strb.w	r2, [sp, #28]
 801d62c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d630:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d634:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d638:	ab0c      	add	r3, sp, #48	@ 0x30
 801d63a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d63e:	f7f5 ff8d 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d642:	e26c      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d644:	4a43      	ldr	r2, [pc, #268]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d646:	6852      	ldr	r2, [r2, #4]
 801d648:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d64a:	6812      	ldr	r2, [r2, #0]
 801d64c:	320b      	adds	r2, #11
 801d64e:	9208      	str	r2, [sp, #32]
 801d650:	4a47      	ldr	r2, [pc, #284]	@ (801d770 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d4>)
 801d652:	9209      	str	r2, [sp, #36]	@ 0x24
 801d654:	4a47      	ldr	r2, [pc, #284]	@ (801d774 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d8>)
 801d656:	920a      	str	r2, [sp, #40]	@ 0x28
 801d658:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d65c:	2201      	movs	r2, #1
 801d65e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d662:	2200      	movs	r2, #0
 801d664:	f8ad 2000 	strh.w	r2, [sp]
 801d668:	ab0c      	add	r3, sp, #48	@ 0x30
 801d66a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d66e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d672:	f7f5 fe1d 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d676:	e252      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d678:	4a36      	ldr	r2, [pc, #216]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d67a:	6852      	ldr	r2, [r2, #4]
 801d67c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d67e:	6812      	ldr	r2, [r2, #0]
 801d680:	320c      	adds	r2, #12
 801d682:	9208      	str	r2, [sp, #32]
 801d684:	4a3a      	ldr	r2, [pc, #232]	@ (801d770 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d4>)
 801d686:	9209      	str	r2, [sp, #36]	@ 0x24
 801d688:	4a3a      	ldr	r2, [pc, #232]	@ (801d774 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d8>)
 801d68a:	920a      	str	r2, [sp, #40]	@ 0x28
 801d68c:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d690:	2201      	movs	r2, #1
 801d692:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d696:	2200      	movs	r2, #0
 801d698:	f8ad 2000 	strh.w	r2, [sp]
 801d69c:	ab0c      	add	r3, sp, #48	@ 0x30
 801d69e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d6a2:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d6a6:	f7f5 fe03 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d6aa:	e238      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d6ac:	4a29      	ldr	r2, [pc, #164]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d6ae:	6852      	ldr	r2, [r2, #4]
 801d6b0:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801d6b2:	6812      	ldr	r2, [r2, #0]
 801d6b4:	9208      	str	r2, [sp, #32]
 801d6b6:	4a30      	ldr	r2, [pc, #192]	@ (801d778 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62dc>)
 801d6b8:	9209      	str	r2, [sp, #36]	@ 0x24
 801d6ba:	4a30      	ldr	r2, [pc, #192]	@ (801d77c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62e0>)
 801d6bc:	920a      	str	r2, [sp, #40]	@ 0x28
 801d6be:	2201      	movs	r2, #1
 801d6c0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d6c4:	2200      	movs	r2, #0
 801d6c6:	f88d 201c 	strb.w	r2, [sp, #28]
 801d6ca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d6ce:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d6d2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d6d6:	ab0c      	add	r3, sp, #48	@ 0x30
 801d6d8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d6dc:	f7f5 fef6 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d6e0:	e21d      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d6e2:	4a1c      	ldr	r2, [pc, #112]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d6e4:	6852      	ldr	r2, [r2, #4]
 801d6e6:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d6e8:	4619      	mov	r1, r3
 801d6ea:	7a10      	ldrb	r0, [r2, #8]
 801d6ec:	f7f6 fc90 	bl	8014010 <fibre::Codec<bool, void>::encode(bool, fibre::generic_bufptr_t<unsigned char>*)>
 801d6f0:	e215      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d6f2:	4a18      	ldr	r2, [pc, #96]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d6f4:	6852      	ldr	r2, [r2, #4]
 801d6f6:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d6f8:	6812      	ldr	r2, [r2, #0]
 801d6fa:	9208      	str	r2, [sp, #32]
 801d6fc:	4a18      	ldr	r2, [pc, #96]	@ (801d760 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c4>)
 801d6fe:	9209      	str	r2, [sp, #36]	@ 0x24
 801d700:	4a18      	ldr	r2, [pc, #96]	@ (801d764 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62c8>)
 801d702:	920a      	str	r2, [sp, #40]	@ 0x28
 801d704:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d708:	2201      	movs	r2, #1
 801d70a:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d70e:	2200      	movs	r2, #0
 801d710:	9200      	str	r2, [sp, #0]
 801d712:	ab0c      	add	r3, sp, #48	@ 0x30
 801d714:	9206      	str	r2, [sp, #24]
 801d716:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d71a:	f7f5 fe7d 	bl	8013418 <fibre_property_uint16_readwrite_exchange(std::optional<Property<unsigned short> >, std::optional<unsigned short>, unsigned short*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d71e:	e1fe      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d720:	4a0c      	ldr	r2, [pc, #48]	@ (801d754 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62b8>)
 801d722:	6852      	ldr	r2, [r2, #4]
 801d724:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d726:	6812      	ldr	r2, [r2, #0]
 801d728:	9208      	str	r2, [sp, #32]
 801d72a:	4a0f      	ldr	r2, [pc, #60]	@ (801d768 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62cc>)
 801d72c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d72e:	4a0f      	ldr	r2, [pc, #60]	@ (801d76c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x62d0>)
 801d730:	920a      	str	r2, [sp, #40]	@ 0x28
 801d732:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d736:	2201      	movs	r2, #1
 801d738:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d73c:	2200      	movs	r2, #0
 801d73e:	f8ad 2000 	strh.w	r2, [sp]
 801d742:	ab0c      	add	r3, sp, #48	@ 0x30
 801d744:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d748:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d74c:	f7f5 fdb0 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d750:	e1e5      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d752:	bf00      	nop
 801d754:	200019cc 	.word	0x200019cc
 801d758:	0801283d 	.word	0x0801283d
 801d75c:	08012845 	.word	0x08012845
 801d760:	08013199 	.word	0x08013199
 801d764:	08014219 	.word	0x08014219
 801d768:	08013191 	.word	0x08013191
 801d76c:	08014231 	.word	0x08014231
 801d770:	0801285d 	.word	0x0801285d
 801d774:	08012861 	.word	0x08012861
 801d778:	08013189 	.word	0x08013189
 801d77c:	08014249 	.word	0x08014249
 801d780:	4aac      	ldr	r2, [pc, #688]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d782:	6852      	ldr	r2, [r2, #4]
 801d784:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d786:	6812      	ldr	r2, [r2, #0]
 801d788:	9208      	str	r2, [sp, #32]
 801d78a:	4aab      	ldr	r2, [pc, #684]	@ (801da38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x659c>)
 801d78c:	9209      	str	r2, [sp, #36]	@ 0x24
 801d78e:	4aab      	ldr	r2, [pc, #684]	@ (801da3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65a0>)
 801d790:	920a      	str	r2, [sp, #40]	@ 0x28
 801d792:	2201      	movs	r2, #1
 801d794:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d798:	2200      	movs	r2, #0
 801d79a:	f88d 201c 	strb.w	r2, [sp, #28]
 801d79e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d7a2:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d7a6:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d7aa:	ab0c      	add	r3, sp, #48	@ 0x30
 801d7ac:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d7b0:	f7f5 fed4 	bl	801355c <fibre_property_float32_readwrite_exchange(std::optional<Property<float> >, std::optional<float>, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d7b4:	e1b3      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d7b6:	4a9f      	ldr	r2, [pc, #636]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d7b8:	6852      	ldr	r2, [r2, #4]
 801d7ba:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d7bc:	6812      	ldr	r2, [r2, #0]
 801d7be:	320b      	adds	r2, #11
 801d7c0:	9208      	str	r2, [sp, #32]
 801d7c2:	4a9f      	ldr	r2, [pc, #636]	@ (801da40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65a4>)
 801d7c4:	9209      	str	r2, [sp, #36]	@ 0x24
 801d7c6:	4a9f      	ldr	r2, [pc, #636]	@ (801da44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65a8>)
 801d7c8:	920a      	str	r2, [sp, #40]	@ 0x28
 801d7ca:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d7ce:	2201      	movs	r2, #1
 801d7d0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d7d4:	2200      	movs	r2, #0
 801d7d6:	f8ad 2000 	strh.w	r2, [sp]
 801d7da:	ab0c      	add	r3, sp, #48	@ 0x30
 801d7dc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d7e0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d7e4:	f7f5 fd64 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d7e8:	e199      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d7ea:	4a92      	ldr	r2, [pc, #584]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d7ec:	6852      	ldr	r2, [r2, #4]
 801d7ee:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d7f0:	6812      	ldr	r2, [r2, #0]
 801d7f2:	320c      	adds	r2, #12
 801d7f4:	9208      	str	r2, [sp, #32]
 801d7f6:	4a92      	ldr	r2, [pc, #584]	@ (801da40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65a4>)
 801d7f8:	9209      	str	r2, [sp, #36]	@ 0x24
 801d7fa:	4a92      	ldr	r2, [pc, #584]	@ (801da44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65a8>)
 801d7fc:	920a      	str	r2, [sp, #40]	@ 0x28
 801d7fe:	e9cd 4301 	strd	r4, r3, [sp, #4]
 801d802:	2201      	movs	r2, #1
 801d804:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d808:	2200      	movs	r2, #0
 801d80a:	f8ad 2000 	strh.w	r2, [sp]
 801d80e:	ab0c      	add	r3, sp, #48	@ 0x30
 801d810:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d814:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d818:	f7f5 fd4a 	bl	80132b0 <fibre_property_bool_readwrite_exchange(std::optional<Property<bool> >, std::optional<bool>, bool*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d81c:	e17f      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d81e:	4a85      	ldr	r2, [pc, #532]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d820:	6852      	ldr	r2, [r2, #4]
 801d822:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 801d824:	6812      	ldr	r2, [r2, #0]
 801d826:	9208      	str	r2, [sp, #32]
 801d828:	4a87      	ldr	r2, [pc, #540]	@ (801da48 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65ac>)
 801d82a:	9209      	str	r2, [sp, #36]	@ 0x24
 801d82c:	4a87      	ldr	r2, [pc, #540]	@ (801da4c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b0>)
 801d82e:	920a      	str	r2, [sp, #40]	@ 0x28
 801d830:	2201      	movs	r2, #1
 801d832:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d836:	2200      	movs	r2, #0
 801d838:	f88d 201c 	strb.w	r2, [sp, #28]
 801d83c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d840:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d844:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d848:	ab0c      	add	r3, sp, #48	@ 0x30
 801d84a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d84e:	f7f5 fe3d 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d852:	e164      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d854:	4b77      	ldr	r3, [pc, #476]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d856:	6858      	ldr	r0, [r3, #4]
 801d858:	6803      	ldr	r3, [r0, #0]
 801d85a:	681b      	ldr	r3, [r3, #0]
 801d85c:	e156      	b.n	801db0c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6670>
 801d85e:	4b75      	ldr	r3, [pc, #468]	@ (801da34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6598>)
 801d860:	6858      	ldr	r0, [r3, #4]
 801d862:	f7f5 fd09 	bl	8013278 <odrive_axis_clear_errors(std::optional<ODriveIntf::AxisIntf*>, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 801d866:	f7fc bcbd 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801d86a:	4a79      	ldr	r2, [pc, #484]	@ (801da50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b4>)
 801d86c:	9305      	str	r3, [sp, #20]
 801d86e:	6815      	ldr	r5, [r2, #0]
 801d870:	6862      	ldr	r2, [r4, #4]
 801d872:	4621      	mov	r1, r4
 801d874:	a808      	add	r0, sp, #32
 801d876:	f7f9 fddd 	bl	8017434 <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)>
 801d87a:	f89d 4024 	ldrb.w	r4, [sp, #36]	@ 0x24
 801d87e:	9b05      	ldr	r3, [sp, #20]
 801d880:	463e      	mov	r6, r7
 801d882:	b114      	cbz	r4, 801d88a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x63ee>
 801d884:	f89d 6020 	ldrb.w	r6, [sp, #32]
 801d888:	2401      	movs	r4, #1
 801d88a:	3510      	adds	r5, #16
 801d88c:	4628      	mov	r0, r5
 801d88e:	9305      	str	r3, [sp, #20]
 801d890:	f7f5 f83a 	bl	8012908 <Property<ODriveIntf::CanIntf::Error>::Property(ODriveIntf::CanIntf::Error*)::{lambda(void*)#1}::_FUN(void*)>
 801d894:	9b05      	ldr	r3, [sp, #20]
 801d896:	4607      	mov	r7, r0
 801d898:	b124      	cbz	r4, 801d8a4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6408>
 801d89a:	4631      	mov	r1, r6
 801d89c:	4628      	mov	r0, r5
 801d89e:	f7f5 f835 	bl	801290c <Property<ODriveIntf::CanIntf::Error>::Property(ODriveIntf::CanIntf::Error*)::{lambda(void*, ODriveIntf::CanIntf::Error)#2}::_FUN(void*, ODriveIntf::CanIntf::Error)>
 801d8a2:	9b05      	ldr	r3, [sp, #20]
 801d8a4:	685a      	ldr	r2, [r3, #4]
 801d8a6:	4619      	mov	r1, r3
 801d8a8:	4638      	mov	r0, r7
 801d8aa:	f7f9 fddd 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801d8ae:	e136      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d8b0:	4a67      	ldr	r2, [pc, #412]	@ (801da50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b4>)
 801d8b2:	4968      	ldr	r1, [pc, #416]	@ (801da54 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b8>)
 801d8b4:	6810      	ldr	r0, [r2, #0]
 801d8b6:	6940      	ldr	r0, [r0, #20]
 801d8b8:	2201      	movs	r2, #1
 801d8ba:	b00d      	add	sp, #52	@ 0x34
 801d8bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801d8c0:	f7f5 bd8e 	b.w	80133e0 <fibre_property_uint32_readonly_read(std::optional<Property<unsigned long const> >, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 801d8c4:	4a62      	ldr	r2, [pc, #392]	@ (801da50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b4>)
 801d8c6:	9305      	str	r3, [sp, #20]
 801d8c8:	6812      	ldr	r2, [r2, #0]
 801d8ca:	4621      	mov	r1, r4
 801d8cc:	6955      	ldr	r5, [r2, #20]
 801d8ce:	6862      	ldr	r2, [r4, #4]
 801d8d0:	a808      	add	r0, sp, #32
 801d8d2:	f7f9 fdaf 	bl	8017434 <std::optional<long> SimpleSerializer<long, false, void>::read<unsigned char const*>(unsigned char const**, unsigned char const*)>
 801d8d6:	f89d 4024 	ldrb.w	r4, [sp, #36]	@ 0x24
 801d8da:	9b05      	ldr	r3, [sp, #20]
 801d8dc:	b114      	cbz	r4, 801d8e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6448>
 801d8de:	f89d 7020 	ldrb.w	r7, [sp, #32]
 801d8e2:	2401      	movs	r4, #1
 801d8e4:	3504      	adds	r5, #4
 801d8e6:	4628      	mov	r0, r5
 801d8e8:	9305      	str	r3, [sp, #20]
 801d8ea:	f7f5 f811 	bl	8012910 <Property<ODriveIntf::CanIntf::Protocol>::Property(ODriveIntf::CanIntf::Protocol*)::{lambda(void*)#1}::_FUN(void*)>
 801d8ee:	9b05      	ldr	r3, [sp, #20]
 801d8f0:	4606      	mov	r6, r0
 801d8f2:	b124      	cbz	r4, 801d8fe <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6462>
 801d8f4:	4639      	mov	r1, r7
 801d8f6:	4628      	mov	r0, r5
 801d8f8:	f7f5 f80c 	bl	8012914 <Property<ODriveIntf::CanIntf::Protocol>::Property(ODriveIntf::CanIntf::Protocol*)::{lambda(void*, ODriveIntf::CanIntf::Protocol)#2}::_FUN(void*, ODriveIntf::CanIntf::Protocol)>
 801d8fc:	9b05      	ldr	r3, [sp, #20]
 801d8fe:	685a      	ldr	r2, [r3, #4]
 801d900:	4619      	mov	r1, r3
 801d902:	4630      	mov	r0, r6
 801d904:	f7f9 fdb0 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801d908:	e109      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d90a:	4b51      	ldr	r3, [pc, #324]	@ (801da50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b4>)
 801d90c:	6818      	ldr	r0, [r3, #0]
 801d90e:	6803      	ldr	r3, [r0, #0]
 801d910:	6841      	ldr	r1, [r0, #4]
 801d912:	681b      	ldr	r3, [r3, #0]
 801d914:	4798      	blx	r3
 801d916:	f7fc bc65 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801d91a:	4a4d      	ldr	r2, [pc, #308]	@ (801da50 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65b4>)
 801d91c:	6812      	ldr	r2, [r2, #0]
 801d91e:	3204      	adds	r2, #4
 801d920:	9208      	str	r2, [sp, #32]
 801d922:	4a4d      	ldr	r2, [pc, #308]	@ (801da58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65bc>)
 801d924:	9209      	str	r2, [sp, #36]	@ 0x24
 801d926:	4a4d      	ldr	r2, [pc, #308]	@ (801da5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c0>)
 801d928:	920a      	str	r2, [sp, #40]	@ 0x28
 801d92a:	2201      	movs	r2, #1
 801d92c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d930:	2200      	movs	r2, #0
 801d932:	f88d 201c 	strb.w	r2, [sp, #28]
 801d936:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d93a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d93e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d942:	ab0c      	add	r3, sp, #48	@ 0x30
 801d944:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d948:	f7f5 fdc0 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d94c:	e0e7      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d94e:	4a44      	ldr	r2, [pc, #272]	@ (801da60 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c4>)
 801d950:	9208      	str	r2, [sp, #32]
 801d952:	4a41      	ldr	r2, [pc, #260]	@ (801da58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65bc>)
 801d954:	9209      	str	r2, [sp, #36]	@ 0x24
 801d956:	4a41      	ldr	r2, [pc, #260]	@ (801da5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c0>)
 801d958:	920a      	str	r2, [sp, #40]	@ 0x28
 801d95a:	2201      	movs	r2, #1
 801d95c:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d960:	2200      	movs	r2, #0
 801d962:	f88d 201c 	strb.w	r2, [sp, #28]
 801d966:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d96a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d96e:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d972:	ab0c      	add	r3, sp, #48	@ 0x30
 801d974:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d978:	f7f5 fda8 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d97c:	e0cf      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d97e:	4a39      	ldr	r2, [pc, #228]	@ (801da64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c8>)
 801d980:	4939      	ldr	r1, [pc, #228]	@ (801da68 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65cc>)
 801d982:	6853      	ldr	r3, [r2, #4]
 801d984:	6808      	ldr	r0, [r1, #0]
 801d986:	4403      	add	r3, r0
 801d988:	600b      	str	r3, [r1, #0]
 801d98a:	6093      	str	r3, [r2, #8]
 801d98c:	f7fc bc2a 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801d990:	4a36      	ldr	r2, [pc, #216]	@ (801da6c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65d0>)
 801d992:	9208      	str	r2, [sp, #32]
 801d994:	4a36      	ldr	r2, [pc, #216]	@ (801da70 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65d4>)
 801d996:	9209      	str	r2, [sp, #36]	@ 0x24
 801d998:	4a36      	ldr	r2, [pc, #216]	@ (801da74 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65d8>)
 801d99a:	920a      	str	r2, [sp, #40]	@ 0x28
 801d99c:	2201      	movs	r2, #1
 801d99e:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d9a2:	2200      	movs	r2, #0
 801d9a4:	f88d 201c 	strb.w	r2, [sp, #28]
 801d9a8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d9ac:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801d9b0:	e88d 0003 	stmia.w	sp, {r0, r1}
 801d9b4:	ab0c      	add	r3, sp, #48	@ 0x30
 801d9b6:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801d9ba:	f7f5 fea7 	bl	801370c <fibre_property_int32_readwrite_exchange(std::optional<Property<long> >, std::optional<long>, long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801d9be:	e0ae      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d9c0:	685a      	ldr	r2, [r3, #4]
 801d9c2:	4619      	mov	r1, r3
 801d9c4:	4b27      	ldr	r3, [pc, #156]	@ (801da64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c8>)
 801d9c6:	6898      	ldr	r0, [r3, #8]
 801d9c8:	f7f9 fd4e 	bl	8017468 <bool SimpleSerializer<long, false, void>::write<unsigned char*>(long, unsigned char**, unsigned char*)>
 801d9cc:	e0a7      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801d9ce:	4a25      	ldr	r2, [pc, #148]	@ (801da64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c8>)
 801d9d0:	4b29      	ldr	r3, [pc, #164]	@ (801da78 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65dc>)
 801d9d2:	68d1      	ldr	r1, [r2, #12]
 801d9d4:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 801d9d8:	681b      	ldr	r3, [r3, #0]
 801d9da:	6113      	str	r3, [r2, #16]
 801d9dc:	f7fc bc02 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801d9e0:	4a26      	ldr	r2, [pc, #152]	@ (801da7c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65e0>)
 801d9e2:	9208      	str	r2, [sp, #32]
 801d9e4:	4a1c      	ldr	r2, [pc, #112]	@ (801da58 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65bc>)
 801d9e6:	9209      	str	r2, [sp, #36]	@ 0x24
 801d9e8:	4a1c      	ldr	r2, [pc, #112]	@ (801da5c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c0>)
 801d9ea:	920a      	str	r2, [sp, #40]	@ 0x28
 801d9ec:	2201      	movs	r2, #1
 801d9ee:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801d9f2:	2200      	movs	r2, #0
 801d9f4:	f88d 201c 	strb.w	r2, [sp, #28]
 801d9f8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d9fc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801da00:	e88d 0003 	stmia.w	sp, {r0, r1}
 801da04:	ab0c      	add	r3, sp, #48	@ 0x30
 801da06:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801da0a:	f7f5 fd5f 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801da0e:	e086      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801da10:	491b      	ldr	r1, [pc, #108]	@ (801da80 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65e4>)
 801da12:	481c      	ldr	r0, [pc, #112]	@ (801da84 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65e8>)
 801da14:	2201      	movs	r2, #1
 801da16:	e067      	b.n	801dae8 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x664c>
 801da18:	4c12      	ldr	r4, [pc, #72]	@ (801da64 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65c8>)
 801da1a:	8aa3      	ldrh	r3, [r4, #20]
 801da1c:	2b06      	cmp	r3, #6
 801da1e:	d004      	beq.n	801da2a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x658e>
 801da20:	2b08      	cmp	r3, #8
 801da22:	d002      	beq.n	801da2a <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x658e>
 801da24:	2b05      	cmp	r3, #5
 801da26:	d037      	beq.n	801da98 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65fc>
 801da28:	e030      	b.n	801da8c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65f0>
 801da2a:	3b02      	subs	r3, #2
 801da2c:	4816      	ldr	r0, [pc, #88]	@ (801da88 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x65ec>)
 801da2e:	b29b      	uxth	r3, r3
 801da30:	e034      	b.n	801da9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6600>
 801da32:	bf00      	nop
 801da34:	200019cc 	.word	0x200019cc
 801da38:	0801283d 	.word	0x0801283d
 801da3c:	08012845 	.word	0x08012845
 801da40:	0801285d 	.word	0x0801285d
 801da44:	08012861 	.word	0x08012861
 801da48:	08013189 	.word	0x08013189
 801da4c:	08014249 	.word	0x08014249
 801da50:	200019c8 	.word	0x200019c8
 801da54:	08012865 	.word	0x08012865
 801da58:	08012869 	.word	0x08012869
 801da5c:	0801286d 	.word	0x0801286d
 801da60:	200019c4 	.word	0x200019c4
 801da64:	20001840 	.word	0x20001840
 801da68:	20008c64 	.word	0x20008c64
 801da6c:	20001844 	.word	0x20001844
 801da70:	080128b5 	.word	0x080128b5
 801da74:	080128b9 	.word	0x080128b9
 801da78:	20008e54 	.word	0x20008e54
 801da7c:	2000184c 	.word	0x2000184c
 801da80:	08012835 	.word	0x08012835
 801da84:	20001850 	.word	0x20001850
 801da88:	40020400 	.word	0x40020400
 801da8c:	3b02      	subs	r3, #2
 801da8e:	b29b      	uxth	r3, r3
 801da90:	2b06      	cmp	r3, #6
 801da92:	4824      	ldr	r0, [pc, #144]	@ (801db24 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6688>)
 801da94:	d806      	bhi.n	801daa4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6608>
 801da96:	e001      	b.n	801da9c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6600>
 801da98:	4823      	ldr	r0, [pc, #140]	@ (801db28 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x668c>)
 801da9a:	2303      	movs	r3, #3
 801da9c:	4a23      	ldr	r2, [pc, #140]	@ (801db2c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6690>)
 801da9e:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 801daa2:	e000      	b.n	801daa6 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x660a>
 801daa4:	2101      	movs	r1, #1
 801daa6:	f7ee fbbd 	bl	800c224 <get_adc_voltage>
 801daaa:	ed84 0a06 	vstr	s0, [r4, #24]
 801daae:	f7fc bb99 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801dab2:	4a1f      	ldr	r2, [pc, #124]	@ (801db30 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6694>)
 801dab4:	9208      	str	r2, [sp, #32]
 801dab6:	4a1f      	ldr	r2, [pc, #124]	@ (801db34 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6698>)
 801dab8:	9209      	str	r2, [sp, #36]	@ 0x24
 801daba:	4a1f      	ldr	r2, [pc, #124]	@ (801db38 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x669c>)
 801dabc:	920a      	str	r2, [sp, #40]	@ 0x28
 801dabe:	2201      	movs	r2, #1
 801dac0:	f88d 202c 	strb.w	r2, [sp, #44]	@ 0x2c
 801dac4:	2200      	movs	r2, #0
 801dac6:	f88d 201c 	strb.w	r2, [sp, #28]
 801daca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801dace:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801dad2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801dad6:	ab0c      	add	r3, sp, #48	@ 0x30
 801dad8:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
 801dadc:	f7f5 fcf6 	bl	80134cc <fibre_property_uint32_readwrite_exchange(std::optional<Property<unsigned long> >, std::optional<unsigned long>, unsigned long*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0]>
 801dae0:	e01d      	b.n	801db1e <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x6682>
 801dae2:	4916      	ldr	r1, [pc, #88]	@ (801db3c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a0>)
 801dae4:	4816      	ldr	r0, [pc, #88]	@ (801db40 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a4>)
 801dae6:	2201      	movs	r2, #1
 801dae8:	b00d      	add	sp, #52	@ 0x34
 801daea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801daee:	f7f5 bc55 	b.w	801339c <fibre_property_float32_readonly_read(std::optional<Property<float const> >, float*, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*) [clone .constprop.0] [clone .isra.0]>
 801daf2:	4814      	ldr	r0, [pc, #80]	@ (801db44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a8>)
 801daf4:	f7f3 fe02 	bl	80116fc <ODrive::save_configuration()>
 801daf8:	f7fc bb74 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801dafc:	4811      	ldr	r0, [pc, #68]	@ (801db44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a8>)
 801dafe:	f7f3 f957 	bl	8010db0 <ODrive::erase_configuration()>
 801db02:	f7fc bb6f 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801db06:	480f      	ldr	r0, [pc, #60]	@ (801db44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a8>)
 801db08:	6803      	ldr	r3, [r0, #0]
 801db0a:	695b      	ldr	r3, [r3, #20]
 801db0c:	4798      	blx	r3
 801db0e:	f7fc bb69 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801db12:	480c      	ldr	r0, [pc, #48]	@ (801db44 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66a8>)
 801db14:	f7f3 f97a 	bl	8010e0c <ODrive::enter_dfu_mode()>
 801db18:	f7fc bb64 	b.w	801a1e4 <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x2d48>
 801db1c:	2000      	movs	r0, #0
 801db1e:	b00d      	add	sp, #52	@ 0x34
 801db20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801db22:	bf00      	nop
 801db24:	40020000 	.word	0x40020000
 801db28:	40020800 	.word	0x40020800
 801db2c:	0802b2c8 	.word	0x0802b2c8
 801db30:	20001854 	.word	0x20001854
 801db34:	08012869 	.word	0x08012869
 801db38:	0801286d 	.word	0x0801286d
 801db3c:	08012835 	.word	0x08012835
 801db40:	20001858 	.word	0x20001858
 801db44:	20001840 	.word	0x20001840

0801db48 <Property<bool>::exchange(std::optional<bool>) const>:
 801db48:	b570      	push	{r4, r5, r6, lr}
 801db4a:	b082      	sub	sp, #8
 801db4c:	4604      	mov	r4, r0
 801db4e:	e9d0 0300 	ldrd	r0, r3, [r0]
 801db52:	f8ad 1004 	strh.w	r1, [sp, #4]
 801db56:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801db5a:	4798      	blx	r3
 801db5c:	4605      	mov	r5, r0
 801db5e:	b126      	cbz	r6, 801db6a <Property<bool>::exchange(std::optional<bool>) const+0x22>
 801db60:	68a3      	ldr	r3, [r4, #8]
 801db62:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801db66:	6820      	ldr	r0, [r4, #0]
 801db68:	4798      	blx	r3
 801db6a:	4628      	mov	r0, r5
 801db6c:	b002      	add	sp, #8
 801db6e:	bd70      	pop	{r4, r5, r6, pc}

0801db70 <FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801db70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801db72:	4610      	mov	r0, r2
 801db74:	460d      	mov	r5, r1
 801db76:	aa01      	add	r2, sp, #4
 801db78:	490b      	ldr	r1, [pc, #44]	@ (801dba8 <FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const+0x38>)
 801db7a:	f006 fc67 	bl	802444c <siscanf>
 801db7e:	2801      	cmp	r0, #1
 801db80:	d001      	beq.n	801db86 <FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const+0x16>
 801db82:	2000      	movs	r0, #0
 801db84:	e00d      	b.n	801dba2 <FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const+0x32>
 801db86:	9b01      	ldr	r3, [sp, #4]
 801db88:	f88d 0005 	strb.w	r0, [sp, #5]
 801db8c:	3b00      	subs	r3, #0
 801db8e:	bf18      	it	ne
 801db90:	2301      	movne	r3, #1
 801db92:	f88d 3004 	strb.w	r3, [sp, #4]
 801db96:	4604      	mov	r4, r0
 801db98:	9901      	ldr	r1, [sp, #4]
 801db9a:	4628      	mov	r0, r5
 801db9c:	f7ff ffd4 	bl	801db48 <Property<bool>::exchange(std::optional<bool>) const>
 801dba0:	4620      	mov	r0, r4
 801dba2:	b003      	add	sp, #12
 801dba4:	bd30      	pop	{r4, r5, pc}
 801dba6:	bf00      	nop
 801dba8:	0802b04e 	.word	0x0802b04e

0801dbac <non-virtual thunk to FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dbac:	f1a0 0004 	sub.w	r0, r0, #4
 801dbb0:	e7de      	b.n	801db70 <FibrePropertyTypeInfo<Property<bool> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dbb2:	bf00      	nop

0801dbb4 <FibrePropertyTypeInfo<Property<bool> >::set_float(Introspectable const&, float) const>:
 801dbb4:	b513      	push	{r0, r1, r4, lr}
 801dbb6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801dbba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dbbe:	bfac      	ite	ge
 801dbc0:	2301      	movge	r3, #1
 801dbc2:	2300      	movlt	r3, #0
 801dbc4:	2401      	movs	r4, #1
 801dbc6:	f88d 3004 	strb.w	r3, [sp, #4]
 801dbca:	f88d 4005 	strb.w	r4, [sp, #5]
 801dbce:	4608      	mov	r0, r1
 801dbd0:	9901      	ldr	r1, [sp, #4]
 801dbd2:	f7ff ffb9 	bl	801db48 <Property<bool>::exchange(std::optional<bool>) const>
 801dbd6:	4620      	mov	r0, r4
 801dbd8:	b002      	add	sp, #8
 801dbda:	bd10      	pop	{r4, pc}

0801dbdc <Property<ODriveIntf::CanIntf::Error>::exchange(std::optional<ODriveIntf::CanIntf::Error>) const>:
 801dbdc:	b570      	push	{r4, r5, r6, lr}
 801dbde:	b082      	sub	sp, #8
 801dbe0:	4604      	mov	r4, r0
 801dbe2:	e9d0 0300 	ldrd	r0, r3, [r0]
 801dbe6:	f8ad 1004 	strh.w	r1, [sp, #4]
 801dbea:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801dbee:	4798      	blx	r3
 801dbf0:	4605      	mov	r5, r0
 801dbf2:	b126      	cbz	r6, 801dbfe <Property<ODriveIntf::CanIntf::Error>::exchange(std::optional<ODriveIntf::CanIntf::Error>) const+0x22>
 801dbf4:	68a3      	ldr	r3, [r4, #8]
 801dbf6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dbfa:	6820      	ldr	r0, [r4, #0]
 801dbfc:	4798      	blx	r3
 801dbfe:	4628      	mov	r0, r5
 801dc00:	b002      	add	sp, #8
 801dc02:	bd70      	pop	{r4, r5, r6, pc}

0801dc04 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dc04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dc06:	460d      	mov	r5, r1
 801dc08:	4610      	mov	r0, r2
 801dc0a:	f10d 0103 	add.w	r1, sp, #3
 801dc0e:	f7f5 f839 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801dc12:	4604      	mov	r4, r0
 801dc14:	b150      	cbz	r0, 801dc2c <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801dc16:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dc1a:	f88d 3004 	strb.w	r3, [sp, #4]
 801dc1e:	2301      	movs	r3, #1
 801dc20:	f88d 3005 	strb.w	r3, [sp, #5]
 801dc24:	9901      	ldr	r1, [sp, #4]
 801dc26:	4628      	mov	r0, r5
 801dc28:	f7ff ffd8 	bl	801dbdc <Property<ODriveIntf::CanIntf::Error>::exchange(std::optional<ODriveIntf::CanIntf::Error>) const>
 801dc2c:	4620      	mov	r0, r4
 801dc2e:	b003      	add	sp, #12
 801dc30:	bd30      	pop	{r4, r5, pc}
 801dc32:	bf00      	nop

0801dc34 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dc34:	f1a0 0004 	sub.w	r0, r0, #4
 801dc38:	e7e4      	b.n	801dc04 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dc3a:	bf00      	nop

0801dc3c <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Error> >::set_float(Introspectable const&, float) const>:
 801dc3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dc3e:	f10d 0003 	add.w	r0, sp, #3
 801dc42:	460c      	mov	r4, r1
 801dc44:	2501      	movs	r5, #1
 801dc46:	f7f5 f9d5 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801dc4a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dc4e:	f88d 3004 	strb.w	r3, [sp, #4]
 801dc52:	f88d 5005 	strb.w	r5, [sp, #5]
 801dc56:	9901      	ldr	r1, [sp, #4]
 801dc58:	4620      	mov	r0, r4
 801dc5a:	f7ff ffbf 	bl	801dbdc <Property<ODriveIntf::CanIntf::Error>::exchange(std::optional<ODriveIntf::CanIntf::Error>) const>
 801dc5e:	4628      	mov	r0, r5
 801dc60:	b003      	add	sp, #12
 801dc62:	bd30      	pop	{r4, r5, pc}

0801dc64 <Property<ODriveIntf::AxisIntf::AxisState>::exchange(std::optional<ODriveIntf::AxisIntf::AxisState>) const>:
 801dc64:	b570      	push	{r4, r5, r6, lr}
 801dc66:	b082      	sub	sp, #8
 801dc68:	4604      	mov	r4, r0
 801dc6a:	e9d0 0300 	ldrd	r0, r3, [r0]
 801dc6e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801dc72:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801dc76:	4798      	blx	r3
 801dc78:	4605      	mov	r5, r0
 801dc7a:	b126      	cbz	r6, 801dc86 <Property<ODriveIntf::AxisIntf::AxisState>::exchange(std::optional<ODriveIntf::AxisIntf::AxisState>) const+0x22>
 801dc7c:	68a3      	ldr	r3, [r4, #8]
 801dc7e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dc82:	6820      	ldr	r0, [r4, #0]
 801dc84:	4798      	blx	r3
 801dc86:	4628      	mov	r0, r5
 801dc88:	b002      	add	sp, #8
 801dc8a:	bd70      	pop	{r4, r5, r6, pc}

0801dc8c <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dc8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dc8e:	460d      	mov	r5, r1
 801dc90:	4610      	mov	r0, r2
 801dc92:	f10d 0103 	add.w	r1, sp, #3
 801dc96:	f7f4 fff5 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801dc9a:	4604      	mov	r4, r0
 801dc9c:	b150      	cbz	r0, 801dcb4 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801dc9e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dca2:	f88d 3004 	strb.w	r3, [sp, #4]
 801dca6:	2301      	movs	r3, #1
 801dca8:	f88d 3005 	strb.w	r3, [sp, #5]
 801dcac:	9901      	ldr	r1, [sp, #4]
 801dcae:	4628      	mov	r0, r5
 801dcb0:	f7ff ffd8 	bl	801dc64 <Property<ODriveIntf::AxisIntf::AxisState>::exchange(std::optional<ODriveIntf::AxisIntf::AxisState>) const>
 801dcb4:	4620      	mov	r0, r4
 801dcb6:	b003      	add	sp, #12
 801dcb8:	bd30      	pop	{r4, r5, pc}
 801dcba:	bf00      	nop

0801dcbc <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dcbc:	f1a0 0004 	sub.w	r0, r0, #4
 801dcc0:	e7e4      	b.n	801dc8c <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dcc2:	bf00      	nop

0801dcc4 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState> >::set_float(Introspectable const&, float) const>:
 801dcc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dcc6:	f10d 0003 	add.w	r0, sp, #3
 801dcca:	460c      	mov	r4, r1
 801dccc:	2501      	movs	r5, #1
 801dcce:	f7f5 f991 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801dcd2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dcd6:	f88d 3004 	strb.w	r3, [sp, #4]
 801dcda:	f88d 5005 	strb.w	r5, [sp, #5]
 801dcde:	9901      	ldr	r1, [sp, #4]
 801dce0:	4620      	mov	r0, r4
 801dce2:	f7ff ffbf 	bl	801dc64 <Property<ODriveIntf::AxisIntf::AxisState>::exchange(std::optional<ODriveIntf::AxisIntf::AxisState>) const>
 801dce6:	4628      	mov	r0, r5
 801dce8:	b003      	add	sp, #12
 801dcea:	bd30      	pop	{r4, r5, pc}

0801dcec <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::exchange(std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>) const>:
 801dcec:	b570      	push	{r4, r5, r6, lr}
 801dcee:	b082      	sub	sp, #8
 801dcf0:	4604      	mov	r4, r0
 801dcf2:	e9d0 0300 	ldrd	r0, r3, [r0]
 801dcf6:	f8ad 1004 	strh.w	r1, [sp, #4]
 801dcfa:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801dcfe:	4798      	blx	r3
 801dd00:	4605      	mov	r5, r0
 801dd02:	b126      	cbz	r6, 801dd0e <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::exchange(std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>) const+0x22>
 801dd04:	68a3      	ldr	r3, [r4, #8]
 801dd06:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dd0a:	6820      	ldr	r0, [r4, #0]
 801dd0c:	4798      	blx	r3
 801dd0e:	4628      	mov	r0, r5
 801dd10:	b002      	add	sp, #8
 801dd12:	bd70      	pop	{r4, r5, r6, pc}

0801dd14 <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dd14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dd16:	460d      	mov	r5, r1
 801dd18:	4610      	mov	r0, r2
 801dd1a:	f10d 0103 	add.w	r1, sp, #3
 801dd1e:	f7f4 ffb1 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801dd22:	4604      	mov	r4, r0
 801dd24:	b150      	cbz	r0, 801dd3c <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801dd26:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dd2a:	f88d 3004 	strb.w	r3, [sp, #4]
 801dd2e:	2301      	movs	r3, #1
 801dd30:	f88d 3005 	strb.w	r3, [sp, #5]
 801dd34:	9901      	ldr	r1, [sp, #4]
 801dd36:	4628      	mov	r0, r5
 801dd38:	f7ff ffd8 	bl	801dcec <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::exchange(std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>) const>
 801dd3c:	4620      	mov	r0, r4
 801dd3e:	b003      	add	sp, #12
 801dd40:	bd30      	pop	{r4, r5, pc}
 801dd42:	bf00      	nop

0801dd44 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dd44:	f1a0 0004 	sub.w	r0, r0, #4
 801dd48:	e7e4      	b.n	801dd14 <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dd4a:	bf00      	nop

0801dd4c <FibrePropertyTypeInfo<Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error> >::set_float(Introspectable const&, float) const>:
 801dd4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dd4e:	f10d 0003 	add.w	r0, sp, #3
 801dd52:	460c      	mov	r4, r1
 801dd54:	2501      	movs	r5, #1
 801dd56:	f7f5 f94d 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801dd5a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dd5e:	f88d 3004 	strb.w	r3, [sp, #4]
 801dd62:	f88d 5005 	strb.w	r5, [sp, #5]
 801dd66:	9901      	ldr	r1, [sp, #4]
 801dd68:	4620      	mov	r0, r4
 801dd6a:	f7ff ffbf 	bl	801dcec <Property<ODriveIntf::ThermistorCurrentLimiterIntf::Error>::exchange(std::optional<ODriveIntf::ThermistorCurrentLimiterIntf::Error>) const>
 801dd6e:	4628      	mov	r0, r5
 801dd70:	b003      	add	sp, #12
 801dd72:	bd30      	pop	{r4, r5, pc}

0801dd74 <Property<ODriveIntf::ControllerIntf::Error>::exchange(std::optional<ODriveIntf::ControllerIntf::Error>) const>:
 801dd74:	b570      	push	{r4, r5, r6, lr}
 801dd76:	b082      	sub	sp, #8
 801dd78:	4604      	mov	r4, r0
 801dd7a:	e9d0 0300 	ldrd	r0, r3, [r0]
 801dd7e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801dd82:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801dd86:	4798      	blx	r3
 801dd88:	4605      	mov	r5, r0
 801dd8a:	b126      	cbz	r6, 801dd96 <Property<ODriveIntf::ControllerIntf::Error>::exchange(std::optional<ODriveIntf::ControllerIntf::Error>) const+0x22>
 801dd8c:	68a3      	ldr	r3, [r4, #8]
 801dd8e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dd92:	6820      	ldr	r0, [r4, #0]
 801dd94:	4798      	blx	r3
 801dd96:	4628      	mov	r0, r5
 801dd98:	b002      	add	sp, #8
 801dd9a:	bd70      	pop	{r4, r5, r6, pc}

0801dd9c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dd9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dd9e:	460d      	mov	r5, r1
 801dda0:	4610      	mov	r0, r2
 801dda2:	f10d 0103 	add.w	r1, sp, #3
 801dda6:	f7f4 ff6d 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801ddaa:	4604      	mov	r4, r0
 801ddac:	b150      	cbz	r0, 801ddc4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801ddae:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801ddb2:	f88d 3004 	strb.w	r3, [sp, #4]
 801ddb6:	2301      	movs	r3, #1
 801ddb8:	f88d 3005 	strb.w	r3, [sp, #5]
 801ddbc:	9901      	ldr	r1, [sp, #4]
 801ddbe:	4628      	mov	r0, r5
 801ddc0:	f7ff ffd8 	bl	801dd74 <Property<ODriveIntf::ControllerIntf::Error>::exchange(std::optional<ODriveIntf::ControllerIntf::Error>) const>
 801ddc4:	4620      	mov	r0, r4
 801ddc6:	b003      	add	sp, #12
 801ddc8:	bd30      	pop	{r4, r5, pc}
 801ddca:	bf00      	nop

0801ddcc <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801ddcc:	f1a0 0004 	sub.w	r0, r0, #4
 801ddd0:	e7e4      	b.n	801dd9c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 801ddd2:	bf00      	nop

0801ddd4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::Error> >::set_float(Introspectable const&, float) const>:
 801ddd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801ddd6:	f10d 0003 	add.w	r0, sp, #3
 801ddda:	460c      	mov	r4, r1
 801dddc:	2501      	movs	r5, #1
 801ddde:	f7f5 f909 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801dde2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dde6:	f88d 3004 	strb.w	r3, [sp, #4]
 801ddea:	f88d 5005 	strb.w	r5, [sp, #5]
 801ddee:	9901      	ldr	r1, [sp, #4]
 801ddf0:	4620      	mov	r0, r4
 801ddf2:	f7ff ffbf 	bl	801dd74 <Property<ODriveIntf::ControllerIntf::Error>::exchange(std::optional<ODriveIntf::ControllerIntf::Error>) const>
 801ddf6:	4628      	mov	r0, r5
 801ddf8:	b003      	add	sp, #12
 801ddfa:	bd30      	pop	{r4, r5, pc}

0801ddfc <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::exchange(std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>) const>:
 801ddfc:	b570      	push	{r4, r5, r6, lr}
 801ddfe:	b082      	sub	sp, #8
 801de00:	4604      	mov	r4, r0
 801de02:	e9d0 0300 	ldrd	r0, r3, [r0]
 801de06:	f8ad 1004 	strh.w	r1, [sp, #4]
 801de0a:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801de0e:	4798      	blx	r3
 801de10:	4605      	mov	r5, r0
 801de12:	b126      	cbz	r6, 801de1e <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::exchange(std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>) const+0x22>
 801de14:	68a3      	ldr	r3, [r4, #8]
 801de16:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801de1a:	6820      	ldr	r0, [r4, #0]
 801de1c:	4798      	blx	r3
 801de1e:	4628      	mov	r0, r5
 801de20:	b002      	add	sp, #8
 801de22:	bd70      	pop	{r4, r5, r6, pc}

0801de24 <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801de24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801de26:	460d      	mov	r5, r1
 801de28:	4610      	mov	r0, r2
 801de2a:	f10d 0103 	add.w	r1, sp, #3
 801de2e:	f7f4 ff29 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801de32:	4604      	mov	r4, r0
 801de34:	b150      	cbz	r0, 801de4c <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801de36:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801de3a:	f88d 3004 	strb.w	r3, [sp, #4]
 801de3e:	2301      	movs	r3, #1
 801de40:	f88d 3005 	strb.w	r3, [sp, #5]
 801de44:	9901      	ldr	r1, [sp, #4]
 801de46:	4628      	mov	r0, r5
 801de48:	f7ff ffd8 	bl	801ddfc <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::exchange(std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>) const>
 801de4c:	4620      	mov	r0, r4
 801de4e:	b003      	add	sp, #12
 801de50:	bd30      	pop	{r4, r5, pc}
 801de52:	bf00      	nop

0801de54 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801de54:	f1a0 0004 	sub.w	r0, r0, #4
 801de58:	e7e4      	b.n	801de24 <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::set_string(Introspectable const&, char*, unsigned int) const>
 801de5a:	bf00      	nop

0801de5c <FibrePropertyTypeInfo<Property<ODriveIntf::SensorlessEstimatorIntf::Error> >::set_float(Introspectable const&, float) const>:
 801de5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801de5e:	f10d 0003 	add.w	r0, sp, #3
 801de62:	460c      	mov	r4, r1
 801de64:	2501      	movs	r5, #1
 801de66:	f7f5 f8c5 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801de6a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801de6e:	f88d 3004 	strb.w	r3, [sp, #4]
 801de72:	f88d 5005 	strb.w	r5, [sp, #5]
 801de76:	9901      	ldr	r1, [sp, #4]
 801de78:	4620      	mov	r0, r4
 801de7a:	f7ff ffbf 	bl	801ddfc <Property<ODriveIntf::SensorlessEstimatorIntf::Error>::exchange(std::optional<ODriveIntf::SensorlessEstimatorIntf::Error>) const>
 801de7e:	4628      	mov	r0, r5
 801de80:	b003      	add	sp, #12
 801de82:	bd30      	pop	{r4, r5, pc}

0801de84 <Property<ODriveIntf::CanIntf::Protocol>::exchange(std::optional<ODriveIntf::CanIntf::Protocol>) const>:
 801de84:	b570      	push	{r4, r5, r6, lr}
 801de86:	b082      	sub	sp, #8
 801de88:	4604      	mov	r4, r0
 801de8a:	e9d0 0300 	ldrd	r0, r3, [r0]
 801de8e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801de92:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801de96:	4798      	blx	r3
 801de98:	4605      	mov	r5, r0
 801de9a:	b126      	cbz	r6, 801dea6 <Property<ODriveIntf::CanIntf::Protocol>::exchange(std::optional<ODriveIntf::CanIntf::Protocol>) const+0x22>
 801de9c:	68a3      	ldr	r3, [r4, #8]
 801de9e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dea2:	6820      	ldr	r0, [r4, #0]
 801dea4:	4798      	blx	r3
 801dea6:	4628      	mov	r0, r5
 801dea8:	b002      	add	sp, #8
 801deaa:	bd70      	pop	{r4, r5, r6, pc}

0801deac <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801deac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801deae:	460d      	mov	r5, r1
 801deb0:	4610      	mov	r0, r2
 801deb2:	f10d 0103 	add.w	r1, sp, #3
 801deb6:	f7f4 fee5 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801deba:	4604      	mov	r4, r0
 801debc:	b150      	cbz	r0, 801ded4 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801debe:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dec2:	f88d 3004 	strb.w	r3, [sp, #4]
 801dec6:	2301      	movs	r3, #1
 801dec8:	f88d 3005 	strb.w	r3, [sp, #5]
 801decc:	9901      	ldr	r1, [sp, #4]
 801dece:	4628      	mov	r0, r5
 801ded0:	f7ff ffd8 	bl	801de84 <Property<ODriveIntf::CanIntf::Protocol>::exchange(std::optional<ODriveIntf::CanIntf::Protocol>) const>
 801ded4:	4620      	mov	r0, r4
 801ded6:	b003      	add	sp, #12
 801ded8:	bd30      	pop	{r4, r5, pc}
 801deda:	bf00      	nop

0801dedc <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dedc:	f1a0 0004 	sub.w	r0, r0, #4
 801dee0:	e7e4      	b.n	801deac <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dee2:	bf00      	nop

0801dee4 <FibrePropertyTypeInfo<Property<ODriveIntf::CanIntf::Protocol> >::set_float(Introspectable const&, float) const>:
 801dee4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dee6:	f10d 0003 	add.w	r0, sp, #3
 801deea:	460c      	mov	r4, r1
 801deec:	2501      	movs	r5, #1
 801deee:	f7f5 f881 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801def2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801def6:	f88d 3004 	strb.w	r3, [sp, #4]
 801defa:	f88d 5005 	strb.w	r5, [sp, #5]
 801defe:	9901      	ldr	r1, [sp, #4]
 801df00:	4620      	mov	r0, r4
 801df02:	f7ff ffbf 	bl	801de84 <Property<ODriveIntf::CanIntf::Protocol>::exchange(std::optional<ODriveIntf::CanIntf::Protocol>) const>
 801df06:	4628      	mov	r0, r5
 801df08:	b003      	add	sp, #12
 801df0a:	bd30      	pop	{r4, r5, pc}

0801df0c <Property<ODriveIntf::MotorIntf::MotorType>::exchange(std::optional<ODriveIntf::MotorIntf::MotorType>) const>:
 801df0c:	b570      	push	{r4, r5, r6, lr}
 801df0e:	b082      	sub	sp, #8
 801df10:	4604      	mov	r4, r0
 801df12:	e9d0 0300 	ldrd	r0, r3, [r0]
 801df16:	f8ad 1004 	strh.w	r1, [sp, #4]
 801df1a:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801df1e:	4798      	blx	r3
 801df20:	4605      	mov	r5, r0
 801df22:	b126      	cbz	r6, 801df2e <Property<ODriveIntf::MotorIntf::MotorType>::exchange(std::optional<ODriveIntf::MotorIntf::MotorType>) const+0x22>
 801df24:	68a3      	ldr	r3, [r4, #8]
 801df26:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801df2a:	6820      	ldr	r0, [r4, #0]
 801df2c:	4798      	blx	r3
 801df2e:	4628      	mov	r0, r5
 801df30:	b002      	add	sp, #8
 801df32:	bd70      	pop	{r4, r5, r6, pc}

0801df34 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801df34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801df36:	460d      	mov	r5, r1
 801df38:	4610      	mov	r0, r2
 801df3a:	f10d 0103 	add.w	r1, sp, #3
 801df3e:	f7f4 fea1 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801df42:	4604      	mov	r4, r0
 801df44:	b150      	cbz	r0, 801df5c <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801df46:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801df4a:	f88d 3004 	strb.w	r3, [sp, #4]
 801df4e:	2301      	movs	r3, #1
 801df50:	f88d 3005 	strb.w	r3, [sp, #5]
 801df54:	9901      	ldr	r1, [sp, #4]
 801df56:	4628      	mov	r0, r5
 801df58:	f7ff ffd8 	bl	801df0c <Property<ODriveIntf::MotorIntf::MotorType>::exchange(std::optional<ODriveIntf::MotorIntf::MotorType>) const>
 801df5c:	4620      	mov	r0, r4
 801df5e:	b003      	add	sp, #12
 801df60:	bd30      	pop	{r4, r5, pc}
 801df62:	bf00      	nop

0801df64 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801df64:	f1a0 0004 	sub.w	r0, r0, #4
 801df68:	e7e4      	b.n	801df34 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::set_string(Introspectable const&, char*, unsigned int) const>
 801df6a:	bf00      	nop

0801df6c <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::MotorType> >::set_float(Introspectable const&, float) const>:
 801df6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801df6e:	f10d 0003 	add.w	r0, sp, #3
 801df72:	460c      	mov	r4, r1
 801df74:	2501      	movs	r5, #1
 801df76:	f7f5 f83d 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801df7a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801df7e:	f88d 3004 	strb.w	r3, [sp, #4]
 801df82:	f88d 5005 	strb.w	r5, [sp, #5]
 801df86:	9901      	ldr	r1, [sp, #4]
 801df88:	4620      	mov	r0, r4
 801df8a:	f7ff ffbf 	bl	801df0c <Property<ODriveIntf::MotorIntf::MotorType>::exchange(std::optional<ODriveIntf::MotorIntf::MotorType>) const>
 801df8e:	4628      	mov	r0, r5
 801df90:	b003      	add	sp, #12
 801df92:	bd30      	pop	{r4, r5, pc}

0801df94 <Property<ODriveIntf::ControllerIntf::ControlMode>::exchange(std::optional<ODriveIntf::ControllerIntf::ControlMode>) const>:
 801df94:	b570      	push	{r4, r5, r6, lr}
 801df96:	b082      	sub	sp, #8
 801df98:	4604      	mov	r4, r0
 801df9a:	e9d0 0300 	ldrd	r0, r3, [r0]
 801df9e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801dfa2:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801dfa6:	4798      	blx	r3
 801dfa8:	4605      	mov	r5, r0
 801dfaa:	b126      	cbz	r6, 801dfb6 <Property<ODriveIntf::ControllerIntf::ControlMode>::exchange(std::optional<ODriveIntf::ControllerIntf::ControlMode>) const+0x22>
 801dfac:	68a3      	ldr	r3, [r4, #8]
 801dfae:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801dfb2:	6820      	ldr	r0, [r4, #0]
 801dfb4:	4798      	blx	r3
 801dfb6:	4628      	mov	r0, r5
 801dfb8:	b002      	add	sp, #8
 801dfba:	bd70      	pop	{r4, r5, r6, pc}

0801dfbc <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dfbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dfbe:	460d      	mov	r5, r1
 801dfc0:	4610      	mov	r0, r2
 801dfc2:	f10d 0103 	add.w	r1, sp, #3
 801dfc6:	f7f4 fe5d 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801dfca:	4604      	mov	r4, r0
 801dfcc:	b150      	cbz	r0, 801dfe4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801dfce:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801dfd2:	f88d 3004 	strb.w	r3, [sp, #4]
 801dfd6:	2301      	movs	r3, #1
 801dfd8:	f88d 3005 	strb.w	r3, [sp, #5]
 801dfdc:	9901      	ldr	r1, [sp, #4]
 801dfde:	4628      	mov	r0, r5
 801dfe0:	f7ff ffd8 	bl	801df94 <Property<ODriveIntf::ControllerIntf::ControlMode>::exchange(std::optional<ODriveIntf::ControllerIntf::ControlMode>) const>
 801dfe4:	4620      	mov	r0, r4
 801dfe6:	b003      	add	sp, #12
 801dfe8:	bd30      	pop	{r4, r5, pc}
 801dfea:	bf00      	nop

0801dfec <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801dfec:	f1a0 0004 	sub.w	r0, r0, #4
 801dff0:	e7e4      	b.n	801dfbc <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::set_string(Introspectable const&, char*, unsigned int) const>
 801dff2:	bf00      	nop

0801dff4 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::ControlMode> >::set_float(Introspectable const&, float) const>:
 801dff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dff6:	f10d 0003 	add.w	r0, sp, #3
 801dffa:	460c      	mov	r4, r1
 801dffc:	2501      	movs	r5, #1
 801dffe:	f7f4 fff9 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801e002:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801e006:	f88d 3004 	strb.w	r3, [sp, #4]
 801e00a:	f88d 5005 	strb.w	r5, [sp, #5]
 801e00e:	9901      	ldr	r1, [sp, #4]
 801e010:	4620      	mov	r0, r4
 801e012:	f7ff ffbf 	bl	801df94 <Property<ODriveIntf::ControllerIntf::ControlMode>::exchange(std::optional<ODriveIntf::ControllerIntf::ControlMode>) const>
 801e016:	4628      	mov	r0, r5
 801e018:	b003      	add	sp, #12
 801e01a:	bd30      	pop	{r4, r5, pc}

0801e01c <Property<ODriveIntf::ControllerIntf::InputMode>::exchange(std::optional<ODriveIntf::ControllerIntf::InputMode>) const>:
 801e01c:	b570      	push	{r4, r5, r6, lr}
 801e01e:	b082      	sub	sp, #8
 801e020:	4604      	mov	r4, r0
 801e022:	e9d0 0300 	ldrd	r0, r3, [r0]
 801e026:	f8ad 1004 	strh.w	r1, [sp, #4]
 801e02a:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801e02e:	4798      	blx	r3
 801e030:	4605      	mov	r5, r0
 801e032:	b126      	cbz	r6, 801e03e <Property<ODriveIntf::ControllerIntf::InputMode>::exchange(std::optional<ODriveIntf::ControllerIntf::InputMode>) const+0x22>
 801e034:	68a3      	ldr	r3, [r4, #8]
 801e036:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801e03a:	6820      	ldr	r0, [r4, #0]
 801e03c:	4798      	blx	r3
 801e03e:	4628      	mov	r0, r5
 801e040:	b002      	add	sp, #8
 801e042:	bd70      	pop	{r4, r5, r6, pc}

0801e044 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801e044:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e046:	460d      	mov	r5, r1
 801e048:	4610      	mov	r0, r2
 801e04a:	f10d 0103 	add.w	r1, sp, #3
 801e04e:	f7f4 fe19 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801e052:	4604      	mov	r4, r0
 801e054:	b150      	cbz	r0, 801e06c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801e056:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801e05a:	f88d 3004 	strb.w	r3, [sp, #4]
 801e05e:	2301      	movs	r3, #1
 801e060:	f88d 3005 	strb.w	r3, [sp, #5]
 801e064:	9901      	ldr	r1, [sp, #4]
 801e066:	4628      	mov	r0, r5
 801e068:	f7ff ffd8 	bl	801e01c <Property<ODriveIntf::ControllerIntf::InputMode>::exchange(std::optional<ODriveIntf::ControllerIntf::InputMode>) const>
 801e06c:	4620      	mov	r0, r4
 801e06e:	b003      	add	sp, #12
 801e070:	bd30      	pop	{r4, r5, pc}
 801e072:	bf00      	nop

0801e074 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801e074:	f1a0 0004 	sub.w	r0, r0, #4
 801e078:	e7e4      	b.n	801e044 <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::set_string(Introspectable const&, char*, unsigned int) const>
 801e07a:	bf00      	nop

0801e07c <FibrePropertyTypeInfo<Property<ODriveIntf::ControllerIntf::InputMode> >::set_float(Introspectable const&, float) const>:
 801e07c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e07e:	f10d 0003 	add.w	r0, sp, #3
 801e082:	460c      	mov	r4, r1
 801e084:	2501      	movs	r5, #1
 801e086:	f7f4 ffb5 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801e08a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801e08e:	f88d 3004 	strb.w	r3, [sp, #4]
 801e092:	f88d 5005 	strb.w	r5, [sp, #5]
 801e096:	9901      	ldr	r1, [sp, #4]
 801e098:	4620      	mov	r0, r4
 801e09a:	f7ff ffbf 	bl	801e01c <Property<ODriveIntf::ControllerIntf::InputMode>::exchange(std::optional<ODriveIntf::ControllerIntf::InputMode>) const>
 801e09e:	4628      	mov	r0, r5
 801e0a0:	b003      	add	sp, #12
 801e0a2:	bd30      	pop	{r4, r5, pc}

0801e0a4 <Property<unsigned char>::exchange(std::optional<unsigned char>) const>:
 801e0a4:	b570      	push	{r4, r5, r6, lr}
 801e0a6:	b082      	sub	sp, #8
 801e0a8:	4604      	mov	r4, r0
 801e0aa:	e9d0 0300 	ldrd	r0, r3, [r0]
 801e0ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 801e0b2:	f3c1 2607 	ubfx	r6, r1, #8, #8
 801e0b6:	4798      	blx	r3
 801e0b8:	4605      	mov	r5, r0
 801e0ba:	b126      	cbz	r6, 801e0c6 <Property<unsigned char>::exchange(std::optional<unsigned char>) const+0x22>
 801e0bc:	68a3      	ldr	r3, [r4, #8]
 801e0be:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801e0c2:	6820      	ldr	r0, [r4, #0]
 801e0c4:	4798      	blx	r3
 801e0c6:	4628      	mov	r0, r5
 801e0c8:	b002      	add	sp, #8
 801e0ca:	bd70      	pop	{r4, r5, r6, pc}

0801e0cc <FibrePropertyTypeInfo<Property<unsigned char> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801e0cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e0ce:	460d      	mov	r5, r1
 801e0d0:	4610      	mov	r0, r2
 801e0d2:	f10d 0103 	add.w	r1, sp, #3
 801e0d6:	f7f4 fdd5 	bl	8012c84 <bool from_string<unsigned char, void>(char const*, unsigned int, unsigned char*, int) [clone .constprop.0]>
 801e0da:	4604      	mov	r4, r0
 801e0dc:	b150      	cbz	r0, 801e0f4 <FibrePropertyTypeInfo<Property<unsigned char> >::set_string(Introspectable const&, char*, unsigned int) const+0x28>
 801e0de:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801e0e2:	f88d 3004 	strb.w	r3, [sp, #4]
 801e0e6:	2301      	movs	r3, #1
 801e0e8:	f88d 3005 	strb.w	r3, [sp, #5]
 801e0ec:	9901      	ldr	r1, [sp, #4]
 801e0ee:	4628      	mov	r0, r5
 801e0f0:	f7ff ffd8 	bl	801e0a4 <Property<unsigned char>::exchange(std::optional<unsigned char>) const>
 801e0f4:	4620      	mov	r0, r4
 801e0f6:	b003      	add	sp, #12
 801e0f8:	bd30      	pop	{r4, r5, pc}
 801e0fa:	bf00      	nop

0801e0fc <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned char> >::set_string(Introspectable const&, char*, unsigned int) const>:
 801e0fc:	f1a0 0004 	sub.w	r0, r0, #4
 801e100:	e7e4      	b.n	801e0cc <FibrePropertyTypeInfo<Property<unsigned char> >::set_string(Introspectable const&, char*, unsigned int) const>
 801e102:	bf00      	nop

0801e104 <FibrePropertyTypeInfo<Property<unsigned char> >::set_float(Introspectable const&, float) const>:
 801e104:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e106:	f10d 0003 	add.w	r0, sp, #3
 801e10a:	460c      	mov	r4, r1
 801e10c:	2501      	movs	r5, #1
 801e10e:	f7f4 ff71 	bl	8012ff4 <bool conversion::set_from_float<unsigned char>(float, unsigned char*) [clone .isra.0]>
 801e112:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801e116:	f88d 3004 	strb.w	r3, [sp, #4]
 801e11a:	f88d 5005 	strb.w	r5, [sp, #5]
 801e11e:	9901      	ldr	r1, [sp, #4]
 801e120:	4620      	mov	r0, r4
 801e122:	f7ff ffbf 	bl	801e0a4 <Property<unsigned char>::exchange(std::optional<unsigned char>) const>
 801e126:	4628      	mov	r0, r5
 801e128:	b003      	add	sp, #12
 801e12a:	bd30      	pop	{r4, r5, pc}

0801e12c <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 801e12c:	6fc8      	ldr	r0, [r1, #124]	@ 0x7c
 801e12e:	824a      	strh	r2, [r1, #18]
 801e130:	f7ee bf6a 	b.w	800d008 <Axis::decode_step_dir_pins()>

0801e134 <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 801e134:	b508      	push	{r3, lr}
 801e136:	460a      	mov	r2, r1
 801e138:	4601      	mov	r1, r0
 801e13a:	2000      	movs	r0, #0
 801e13c:	f7ff fff6 	bl	801e12c <ODriveIntf::AxisIntf::ConfigIntf::get_step_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 801e140:	bd08      	pop	{r3, pc}
 801e142:	bf00      	nop

0801e144 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 801e144:	6fc8      	ldr	r0, [r1, #124]	@ 0x7c
 801e146:	828a      	strh	r2, [r1, #20]
 801e148:	f7ee bf5e 	b.w	800d008 <Axis::decode_step_dir_pins()>

0801e14c <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 801e14c:	b508      	push	{r3, lr}
 801e14e:	460a      	mov	r2, r1
 801e150:	4601      	mov	r1, r0
 801e152:	2000      	movs	r0, #0
 801e154:	f7ff fff6 	bl	801e144 <ODriveIntf::AxisIntf::ConfigIntf::get_dir_gpio_pin<Axis::Config_t>(Axis::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 801e158:	bd08      	pop	{r3, pc}
 801e15a:	bf00      	nop

0801e15c <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 801e15c:	6a08      	ldr	r0, [r1, #32]
 801e15e:	820a      	strh	r2, [r1, #16]
 801e160:	f7f0 bf1c 	b.w	800ef9c <OffboardThermistorCurrentLimiter::decode_pin()>

0801e164 <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 801e164:	b508      	push	{r3, lr}
 801e166:	460a      	mov	r2, r1
 801e168:	4601      	mov	r1, r0
 801e16a:	2000      	movs	r0, #0
 801e16c:	f7ff fff6 	bl	801e15c <ODriveIntf::OffboardThermistorCurrentLimiterIntf::ConfigIntf::get_gpio_pin<OffboardThermistorCurrentLimiter::Config_t>(OffboardThermistorCurrentLimiter::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 801e170:	bd08      	pop	{r3, pc}
 801e172:	bf00      	nop

0801e174 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801e174:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
 801e176:	700a      	strb	r2, [r1, #0]
 801e178:	f893 2067 	ldrb.w	r2, [r3, #103]	@ 0x67
 801e17c:	b90a      	cbnz	r2, 801e182 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const+0xe>
 801e17e:	6a1a      	ldr	r2, [r3, #32]
 801e180:	7812      	ldrb	r2, [r2, #0]
 801e182:	f883 2067 	strb.w	r2, [r3, #103]	@ 0x67
 801e186:	4770      	bx	lr

0801e188 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 801e188:	b508      	push	{r3, lr}
 801e18a:	460a      	mov	r2, r1
 801e18c:	4601      	mov	r1, r0
 801e18e:	2000      	movs	r0, #0
 801e190:	f7ff fff0 	bl	801e174 <ODriveIntf::MotorIntf::ConfigIntf::get_pre_calibrated<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801e194:	bd08      	pop	{r3, pc}
 801e196:	bf00      	nop

0801e198 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e198:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 801e19a:	ed81 0a04 	vstr	s0, [r1, #16]
 801e19e:	f7f0 b869 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

0801e1a4 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e1a4:	b508      	push	{r3, lr}
 801e1a6:	4601      	mov	r1, r0
 801e1a8:	2000      	movs	r0, #0
 801e1aa:	f7ff fff5 	bl	801e198 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_inductance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e1ae:	bd08      	pop	{r3, pc}

0801e1b0 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e1b0:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 801e1b2:	ed81 0a05 	vstr	s0, [r1, #20]
 801e1b6:	f7f0 b85d 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

0801e1bc <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e1bc:	b508      	push	{r3, lr}
 801e1be:	4601      	mov	r1, r0
 801e1c0:	2000      	movs	r0, #0
 801e1c2:	f7ff fff5 	bl	801e1b0 <ODriveIntf::MotorIntf::ConfigIntf::get_phase_resistance<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e1c6:	bd08      	pop	{r3, pc}

0801e1c8 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e1c8:	6d88      	ldr	r0, [r1, #88]	@ 0x58
 801e1ca:	ed81 0a0d 	vstr	s0, [r1, #52]	@ 0x34
 801e1ce:	f7f0 b851 	b.w	800e274 <Motor::update_current_controller_gains()>
	...

0801e1d4 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e1d4:	b508      	push	{r3, lr}
 801e1d6:	4601      	mov	r1, r0
 801e1d8:	2000      	movs	r0, #0
 801e1da:	f7ff fff5 	bl	801e1c8 <ODriveIntf::MotorIntf::ConfigIntf::get_current_control_bandwidth<Motor::Config_t>(Motor::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e1de:	bd08      	pop	{r3, pc}

0801e1e0 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e1e0:	2301      	movs	r3, #1
 801e1e2:	ed81 0a10 	vstr	s0, [r1, #64]	@ 0x40
 801e1e6:	f881 3054 	strb.w	r3, [r1, #84]	@ 0x54
 801e1ea:	4770      	bx	lr

0801e1ec <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e1ec:	b508      	push	{r3, lr}
 801e1ee:	4601      	mov	r1, r0
 801e1f0:	2000      	movs	r0, #0
 801e1f2:	f7ff fff5 	bl	801e1e0 <ODriveIntf::ControllerIntf::get_input_pos<Controller>(Controller*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e1f6:	bd08      	pop	{r3, pc}

0801e1f8 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e1f8:	ed81 0a0b 	vstr	s0, [r1, #44]	@ 0x2c
 801e1fc:	f501 5140 	add.w	r1, r1, #12288	@ 0x3000
 801e200:	f8d1 08a0 	ldr.w	r0, [r1, #2208]	@ 0x8a0
 801e204:	f7f2 b862 	b.w	80102cc <Controller::update_filter_gains()>

0801e208 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e208:	b508      	push	{r3, lr}
 801e20a:	4601      	mov	r1, r0
 801e20c:	2000      	movs	r0, #0
 801e20e:	f7ff fff3 	bl	801e1f8 <ODriveIntf::ControllerIntf::ConfigIntf::get_input_filter_bandwidth<Controller::Config_t>(Controller::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e212:	bd08      	pop	{r3, pc}

0801e214 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801e214:	460b      	mov	r3, r1
 801e216:	708a      	strb	r2, [r1, #2]
 801e218:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 801e21a:	2100      	movs	r1, #0
 801e21c:	f7f0 bfe2 	b.w	800f1e4 <Encoder::set_idx_subscribe(bool)>

0801e220 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 801e220:	b508      	push	{r3, lr}
 801e222:	460a      	mov	r2, r1
 801e224:	4601      	mov	r1, r0
 801e226:	2000      	movs	r0, #0
 801e228:	f7ff fff4 	bl	801e214 <ODriveIntf::EncoderIntf::ConfigIntf::get_use_index<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801e22c:	bd08      	pop	{r3, pc}
 801e22e:	bf00      	nop

0801e230 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801e230:	460b      	mov	r3, r1
 801e232:	f881 2028 	strb.w	r2, [r1, #40]	@ 0x28
 801e236:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 801e238:	2100      	movs	r1, #0
 801e23a:	f7f0 bfd3 	b.w	800f1e4 <Encoder::set_idx_subscribe(bool)>
	...

0801e240 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 801e240:	b508      	push	{r3, lr}
 801e242:	460a      	mov	r2, r1
 801e244:	4601      	mov	r1, r0
 801e246:	2000      	movs	r0, #0
 801e248:	f7ff fff2 	bl	801e230 <ODriveIntf::EncoderIntf::ConfigIntf::get_find_idx_on_lockin_only<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801e24c:	bd08      	pop	{r3, pc}
 801e24e:	bf00      	nop

0801e250 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 801e250:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 801e252:	858a      	strh	r2, [r1, #44]	@ 0x2c
 801e254:	f7f1 bbe6 	b.w	800fa24 <Encoder::abs_spi_cs_pin_init()>

0801e258 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 801e258:	b508      	push	{r3, lr}
 801e25a:	460a      	mov	r2, r1
 801e25c:	4601      	mov	r1, r0
 801e25e:	2000      	movs	r0, #0
 801e260:	f7ff fff6 	bl	801e250 <ODriveIntf::EncoderIntf::ConfigIntf::get_abs_spi_cs_gpio_pin<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 801e264:	bd08      	pop	{r3, pc}
 801e266:	bf00      	nop

0801e268 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801e268:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 801e26a:	70ca      	strb	r2, [r1, #3]
 801e26c:	f7f1 b806 	b.w	800f27c <Encoder::check_pre_calibrated()>

0801e270 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 801e270:	b508      	push	{r3, lr}
 801e272:	460a      	mov	r2, r1
 801e274:	4601      	mov	r1, r0
 801e276:	2000      	movs	r0, #0
 801e278:	f7ff fff6 	bl	801e268 <ODriveIntf::EncoderIntf::ConfigIntf::get_pre_calibrated<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801e27c:	bd08      	pop	{r3, pc}
 801e27e:	bf00      	nop

0801e280 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>:
 801e280:	6b48      	ldr	r0, [r1, #52]	@ 0x34
 801e282:	ed81 0a09 	vstr	s0, [r1, #36]	@ 0x24
 801e286:	f7f0 bfcb 	b.w	800f220 <Encoder::update_pll_gains()>
	...

0801e28c <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, float)#2}::_FUN(void*, float)>:
 801e28c:	b508      	push	{r3, lr}
 801e28e:	4601      	mov	r1, r0
 801e290:	2000      	movs	r0, #0
 801e292:	f7ff fff5 	bl	801e280 <ODriveIntf::EncoderIntf::ConfigIntf::get_bandwidth<Encoder::Config_t>(Encoder::Config_t*, void*)::{lambda(void*, float)#2}::operator()(void*, float) const>
 801e296:	bd08      	pop	{r3, pc}

0801e298 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>:
 801e298:	6908      	ldr	r0, [r1, #16]
 801e29a:	810a      	strh	r2, [r1, #8]
 801e29c:	f7f1 bed2 	b.w	8010044 <Endstop::update_config()>

0801e2a0 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned short)#2}::_FUN(void*, unsigned short)>:
 801e2a0:	b508      	push	{r3, lr}
 801e2a2:	460a      	mov	r2, r1
 801e2a4:	4601      	mov	r1, r0
 801e2a6:	2000      	movs	r0, #0
 801e2a8:	f7ff fff6 	bl	801e298 <ODriveIntf::EndstopIntf::ConfigIntf::get_gpio_num<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned short)#2}::operator()(void*, unsigned short) const>
 801e2ac:	bd08      	pop	{r3, pc}
 801e2ae:	bf00      	nop

0801e2b0 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>:
 801e2b0:	6908      	ldr	r0, [r1, #16]
 801e2b2:	728a      	strb	r2, [r1, #10]
 801e2b4:	f7f1 bec6 	b.w	8010044 <Endstop::update_config()>

0801e2b8 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, bool)#2}::_FUN(void*, bool)>:
 801e2b8:	b508      	push	{r3, lr}
 801e2ba:	460a      	mov	r2, r1
 801e2bc:	4601      	mov	r1, r0
 801e2be:	2000      	movs	r0, #0
 801e2c0:	f7ff fff6 	bl	801e2b0 <ODriveIntf::EndstopIntf::ConfigIntf::get_enabled<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, bool)#2}::operator()(void*, bool) const>
 801e2c4:	bd08      	pop	{r3, pc}
 801e2c6:	bf00      	nop

0801e2c8 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned long)#2}::operator()(void*, unsigned long) const>:
 801e2c8:	6908      	ldr	r0, [r1, #16]
 801e2ca:	604a      	str	r2, [r1, #4]
 801e2cc:	f7f1 beba 	b.w	8010044 <Endstop::update_config()>

0801e2d0 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned long)#2}::_FUN(void*, unsigned long)>:
 801e2d0:	b508      	push	{r3, lr}
 801e2d2:	460a      	mov	r2, r1
 801e2d4:	4601      	mov	r1, r0
 801e2d6:	2000      	movs	r0, #0
 801e2d8:	f7ff fff6 	bl	801e2c8 <ODriveIntf::EndstopIntf::ConfigIntf::get_debounce_ms<Endstop::Config_t>(Endstop::Config_t*, void*)::{lambda(void*, unsigned long)#2}::operator()(void*, unsigned long) const>
 801e2dc:	bd08      	pop	{r3, pc}
 801e2de:	bf00      	nop

0801e2e0 <_GLOBAL__sub_I_serial_number>:
 801e2e0:	b538      	push	{r3, r4, r5, lr}
 801e2e2:	2001      	movs	r0, #1
 801e2e4:	f7f4 fce0 	bl	8012ca8 <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]>
 801e2e8:	4ba7      	ldr	r3, [pc, #668]	@ (801e588 <_GLOBAL__sub_I_serial_number+0x2a8>)
 801e2ea:	4604      	mov	r4, r0
 801e2ec:	8018      	strh	r0, [r3, #0]
 801e2ee:	f7f4 fcdb 	bl	8012ca8 <unsigned short calc_crc<unsigned short, 15717u>(unsigned short, unsigned char const*, unsigned int) [clone .constprop.0]>
 801e2f2:	4ba6      	ldr	r3, [pc, #664]	@ (801e58c <_GLOBAL__sub_I_serial_number+0x2ac>)
 801e2f4:	49a6      	ldr	r1, [pc, #664]	@ (801e590 <_GLOBAL__sub_I_serial_number+0x2b0>)
 801e2f6:	681a      	ldr	r2, [r3, #0]
 801e2f8:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 801e2fc:	f012 0201 	ands.w	r2, r2, #1
 801e300:	6008      	str	r0, [r1, #0]
 801e302:	f000 826a 	beq.w	801e7da <_GLOBAL__sub_I_serial_number+0x4fa>
 801e306:	4ba3      	ldr	r3, [pc, #652]	@ (801e594 <_GLOBAL__sub_I_serial_number+0x2b4>)
 801e308:	681a      	ldr	r2, [r3, #0]
 801e30a:	f012 0201 	ands.w	r2, r2, #1
 801e30e:	f000 824f 	beq.w	801e7b0 <_GLOBAL__sub_I_serial_number+0x4d0>
 801e312:	4ba1      	ldr	r3, [pc, #644]	@ (801e598 <_GLOBAL__sub_I_serial_number+0x2b8>)
 801e314:	681a      	ldr	r2, [r3, #0]
 801e316:	f012 0201 	ands.w	r2, r2, #1
 801e31a:	f000 8234 	beq.w	801e786 <_GLOBAL__sub_I_serial_number+0x4a6>
 801e31e:	4b9f      	ldr	r3, [pc, #636]	@ (801e59c <_GLOBAL__sub_I_serial_number+0x2bc>)
 801e320:	681a      	ldr	r2, [r3, #0]
 801e322:	f012 0201 	ands.w	r2, r2, #1
 801e326:	f000 8219 	beq.w	801e75c <_GLOBAL__sub_I_serial_number+0x47c>
 801e32a:	4b9d      	ldr	r3, [pc, #628]	@ (801e5a0 <_GLOBAL__sub_I_serial_number+0x2c0>)
 801e32c:	681a      	ldr	r2, [r3, #0]
 801e32e:	f012 0201 	ands.w	r2, r2, #1
 801e332:	f000 81fe 	beq.w	801e732 <_GLOBAL__sub_I_serial_number+0x452>
 801e336:	4b9b      	ldr	r3, [pc, #620]	@ (801e5a4 <_GLOBAL__sub_I_serial_number+0x2c4>)
 801e338:	681a      	ldr	r2, [r3, #0]
 801e33a:	f012 0201 	ands.w	r2, r2, #1
 801e33e:	f000 81e3 	beq.w	801e708 <_GLOBAL__sub_I_serial_number+0x428>
 801e342:	4b99      	ldr	r3, [pc, #612]	@ (801e5a8 <_GLOBAL__sub_I_serial_number+0x2c8>)
 801e344:	681a      	ldr	r2, [r3, #0]
 801e346:	f012 0201 	ands.w	r2, r2, #1
 801e34a:	f000 81c8 	beq.w	801e6de <_GLOBAL__sub_I_serial_number+0x3fe>
 801e34e:	4b97      	ldr	r3, [pc, #604]	@ (801e5ac <_GLOBAL__sub_I_serial_number+0x2cc>)
 801e350:	681a      	ldr	r2, [r3, #0]
 801e352:	f012 0201 	ands.w	r2, r2, #1
 801e356:	f000 81ad 	beq.w	801e6b4 <_GLOBAL__sub_I_serial_number+0x3d4>
 801e35a:	4b95      	ldr	r3, [pc, #596]	@ (801e5b0 <_GLOBAL__sub_I_serial_number+0x2d0>)
 801e35c:	681a      	ldr	r2, [r3, #0]
 801e35e:	f012 0201 	ands.w	r2, r2, #1
 801e362:	f000 8192 	beq.w	801e68a <_GLOBAL__sub_I_serial_number+0x3aa>
 801e366:	4b93      	ldr	r3, [pc, #588]	@ (801e5b4 <_GLOBAL__sub_I_serial_number+0x2d4>)
 801e368:	681a      	ldr	r2, [r3, #0]
 801e36a:	f012 0201 	ands.w	r2, r2, #1
 801e36e:	f000 8177 	beq.w	801e660 <_GLOBAL__sub_I_serial_number+0x380>
 801e372:	4b91      	ldr	r3, [pc, #580]	@ (801e5b8 <_GLOBAL__sub_I_serial_number+0x2d8>)
 801e374:	681a      	ldr	r2, [r3, #0]
 801e376:	f012 0201 	ands.w	r2, r2, #1
 801e37a:	f000 80ef 	beq.w	801e55c <_GLOBAL__sub_I_serial_number+0x27c>
 801e37e:	4b8f      	ldr	r3, [pc, #572]	@ (801e5bc <_GLOBAL__sub_I_serial_number+0x2dc>)
 801e380:	681a      	ldr	r2, [r3, #0]
 801e382:	f012 0201 	ands.w	r2, r2, #1
 801e386:	f000 80d4 	beq.w	801e532 <_GLOBAL__sub_I_serial_number+0x252>
 801e38a:	4b8d      	ldr	r3, [pc, #564]	@ (801e5c0 <_GLOBAL__sub_I_serial_number+0x2e0>)
 801e38c:	681a      	ldr	r2, [r3, #0]
 801e38e:	f012 0201 	ands.w	r2, r2, #1
 801e392:	f000 80b9 	beq.w	801e508 <_GLOBAL__sub_I_serial_number+0x228>
 801e396:	4b8b      	ldr	r3, [pc, #556]	@ (801e5c4 <_GLOBAL__sub_I_serial_number+0x2e4>)
 801e398:	681a      	ldr	r2, [r3, #0]
 801e39a:	f012 0201 	ands.w	r2, r2, #1
 801e39e:	f000 809e 	beq.w	801e4de <_GLOBAL__sub_I_serial_number+0x1fe>
 801e3a2:	4b89      	ldr	r3, [pc, #548]	@ (801e5c8 <_GLOBAL__sub_I_serial_number+0x2e8>)
 801e3a4:	681a      	ldr	r2, [r3, #0]
 801e3a6:	f012 0201 	ands.w	r2, r2, #1
 801e3aa:	f000 8083 	beq.w	801e4b4 <_GLOBAL__sub_I_serial_number+0x1d4>
 801e3ae:	4b87      	ldr	r3, [pc, #540]	@ (801e5cc <_GLOBAL__sub_I_serial_number+0x2ec>)
 801e3b0:	681a      	ldr	r2, [r3, #0]
 801e3b2:	f012 0201 	ands.w	r2, r2, #1
 801e3b6:	d068      	beq.n	801e48a <_GLOBAL__sub_I_serial_number+0x1aa>
 801e3b8:	4b85      	ldr	r3, [pc, #532]	@ (801e5d0 <_GLOBAL__sub_I_serial_number+0x2f0>)
 801e3ba:	681a      	ldr	r2, [r3, #0]
 801e3bc:	f012 0201 	ands.w	r2, r2, #1
 801e3c0:	d04e      	beq.n	801e460 <_GLOBAL__sub_I_serial_number+0x180>
 801e3c2:	4b84      	ldr	r3, [pc, #528]	@ (801e5d4 <_GLOBAL__sub_I_serial_number+0x2f4>)
 801e3c4:	681a      	ldr	r2, [r3, #0]
 801e3c6:	f012 0201 	ands.w	r2, r2, #1
 801e3ca:	d034      	beq.n	801e436 <_GLOBAL__sub_I_serial_number+0x156>
 801e3cc:	4b82      	ldr	r3, [pc, #520]	@ (801e5d8 <_GLOBAL__sub_I_serial_number+0x2f8>)
 801e3ce:	681a      	ldr	r2, [r3, #0]
 801e3d0:	f012 0201 	ands.w	r2, r2, #1
 801e3d4:	d01a      	beq.n	801e40c <_GLOBAL__sub_I_serial_number+0x12c>
 801e3d6:	4b81      	ldr	r3, [pc, #516]	@ (801e5dc <_GLOBAL__sub_I_serial_number+0x2fc>)
 801e3d8:	681a      	ldr	r2, [r3, #0]
 801e3da:	f012 0201 	ands.w	r2, r2, #1
 801e3de:	d000      	beq.n	801e3e2 <_GLOBAL__sub_I_serial_number+0x102>
 801e3e0:	bd38      	pop	{r3, r4, r5, pc}
 801e3e2:	4c7f      	ldr	r4, [pc, #508]	@ (801e5e0 <_GLOBAL__sub_I_serial_number+0x300>)
 801e3e4:	487f      	ldr	r0, [pc, #508]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e3e6:	4d80      	ldr	r5, [pc, #512]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e3e8:	2101      	movs	r1, #1
 801e3ea:	6019      	str	r1, [r3, #0]
 801e3ec:	e9c4 5000 	strd	r5, r0, [r4]
 801e3f0:	497e      	ldr	r1, [pc, #504]	@ (801e5ec <_GLOBAL__sub_I_serial_number+0x30c>)
 801e3f2:	f104 0008 	add.w	r0, r4, #8
 801e3f6:	f7f5 fe4d 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e3fa:	4b7d      	ldr	r3, [pc, #500]	@ (801e5f0 <_GLOBAL__sub_I_serial_number+0x310>)
 801e3fc:	f103 0118 	add.w	r1, r3, #24
 801e400:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e404:	e9c4 3100 	strd	r3, r1, [r4]
 801e408:	60a2      	str	r2, [r4, #8]
 801e40a:	bd38      	pop	{r3, r4, r5, pc}
 801e40c:	4c79      	ldr	r4, [pc, #484]	@ (801e5f4 <_GLOBAL__sub_I_serial_number+0x314>)
 801e40e:	4875      	ldr	r0, [pc, #468]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e410:	4d75      	ldr	r5, [pc, #468]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e412:	2101      	movs	r1, #1
 801e414:	6019      	str	r1, [r3, #0]
 801e416:	e9c4 5000 	strd	r5, r0, [r4]
 801e41a:	4977      	ldr	r1, [pc, #476]	@ (801e5f8 <_GLOBAL__sub_I_serial_number+0x318>)
 801e41c:	f104 0008 	add.w	r0, r4, #8
 801e420:	f7f5 fe38 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e424:	4b75      	ldr	r3, [pc, #468]	@ (801e5fc <_GLOBAL__sub_I_serial_number+0x31c>)
 801e426:	f103 0118 	add.w	r1, r3, #24
 801e42a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e42e:	e9c4 3100 	strd	r3, r1, [r4]
 801e432:	60a2      	str	r2, [r4, #8]
 801e434:	e7cf      	b.n	801e3d6 <_GLOBAL__sub_I_serial_number+0xf6>
 801e436:	4c72      	ldr	r4, [pc, #456]	@ (801e600 <_GLOBAL__sub_I_serial_number+0x320>)
 801e438:	486a      	ldr	r0, [pc, #424]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e43a:	4d6b      	ldr	r5, [pc, #428]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e43c:	2101      	movs	r1, #1
 801e43e:	6019      	str	r1, [r3, #0]
 801e440:	e9c4 5000 	strd	r5, r0, [r4]
 801e444:	496f      	ldr	r1, [pc, #444]	@ (801e604 <_GLOBAL__sub_I_serial_number+0x324>)
 801e446:	f104 0008 	add.w	r0, r4, #8
 801e44a:	f7f5 fe23 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e44e:	4b6e      	ldr	r3, [pc, #440]	@ (801e608 <_GLOBAL__sub_I_serial_number+0x328>)
 801e450:	f103 0118 	add.w	r1, r3, #24
 801e454:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e458:	e9c4 3100 	strd	r3, r1, [r4]
 801e45c:	60a2      	str	r2, [r4, #8]
 801e45e:	e7b5      	b.n	801e3cc <_GLOBAL__sub_I_serial_number+0xec>
 801e460:	4c6a      	ldr	r4, [pc, #424]	@ (801e60c <_GLOBAL__sub_I_serial_number+0x32c>)
 801e462:	4860      	ldr	r0, [pc, #384]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e464:	4d60      	ldr	r5, [pc, #384]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e466:	2101      	movs	r1, #1
 801e468:	6019      	str	r1, [r3, #0]
 801e46a:	e9c4 5000 	strd	r5, r0, [r4]
 801e46e:	4968      	ldr	r1, [pc, #416]	@ (801e610 <_GLOBAL__sub_I_serial_number+0x330>)
 801e470:	f104 0008 	add.w	r0, r4, #8
 801e474:	f7f5 fe0e 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e478:	4b66      	ldr	r3, [pc, #408]	@ (801e614 <_GLOBAL__sub_I_serial_number+0x334>)
 801e47a:	f103 0118 	add.w	r1, r3, #24
 801e47e:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e482:	e9c4 3100 	strd	r3, r1, [r4]
 801e486:	60a2      	str	r2, [r4, #8]
 801e488:	e79b      	b.n	801e3c2 <_GLOBAL__sub_I_serial_number+0xe2>
 801e48a:	4c63      	ldr	r4, [pc, #396]	@ (801e618 <_GLOBAL__sub_I_serial_number+0x338>)
 801e48c:	4855      	ldr	r0, [pc, #340]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e48e:	4d56      	ldr	r5, [pc, #344]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e490:	2101      	movs	r1, #1
 801e492:	6019      	str	r1, [r3, #0]
 801e494:	e9c4 5000 	strd	r5, r0, [r4]
 801e498:	4960      	ldr	r1, [pc, #384]	@ (801e61c <_GLOBAL__sub_I_serial_number+0x33c>)
 801e49a:	f104 0008 	add.w	r0, r4, #8
 801e49e:	f7f5 fdf9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e4a2:	4b5f      	ldr	r3, [pc, #380]	@ (801e620 <_GLOBAL__sub_I_serial_number+0x340>)
 801e4a4:	f103 0118 	add.w	r1, r3, #24
 801e4a8:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e4ac:	e9c4 3100 	strd	r3, r1, [r4]
 801e4b0:	60a2      	str	r2, [r4, #8]
 801e4b2:	e781      	b.n	801e3b8 <_GLOBAL__sub_I_serial_number+0xd8>
 801e4b4:	4c5b      	ldr	r4, [pc, #364]	@ (801e624 <_GLOBAL__sub_I_serial_number+0x344>)
 801e4b6:	484b      	ldr	r0, [pc, #300]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e4b8:	4d4b      	ldr	r5, [pc, #300]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e4ba:	2101      	movs	r1, #1
 801e4bc:	6019      	str	r1, [r3, #0]
 801e4be:	e9c4 5000 	strd	r5, r0, [r4]
 801e4c2:	4959      	ldr	r1, [pc, #356]	@ (801e628 <_GLOBAL__sub_I_serial_number+0x348>)
 801e4c4:	f104 0008 	add.w	r0, r4, #8
 801e4c8:	f7f5 fde4 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e4cc:	4b57      	ldr	r3, [pc, #348]	@ (801e62c <_GLOBAL__sub_I_serial_number+0x34c>)
 801e4ce:	f103 0118 	add.w	r1, r3, #24
 801e4d2:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e4d6:	e9c4 3100 	strd	r3, r1, [r4]
 801e4da:	60a2      	str	r2, [r4, #8]
 801e4dc:	e767      	b.n	801e3ae <_GLOBAL__sub_I_serial_number+0xce>
 801e4de:	4c54      	ldr	r4, [pc, #336]	@ (801e630 <_GLOBAL__sub_I_serial_number+0x350>)
 801e4e0:	4840      	ldr	r0, [pc, #256]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e4e2:	4d41      	ldr	r5, [pc, #260]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e4e4:	2101      	movs	r1, #1
 801e4e6:	6019      	str	r1, [r3, #0]
 801e4e8:	e9c4 5000 	strd	r5, r0, [r4]
 801e4ec:	4951      	ldr	r1, [pc, #324]	@ (801e634 <_GLOBAL__sub_I_serial_number+0x354>)
 801e4ee:	f104 0008 	add.w	r0, r4, #8
 801e4f2:	f7f5 fdcf 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e4f6:	4b50      	ldr	r3, [pc, #320]	@ (801e638 <_GLOBAL__sub_I_serial_number+0x358>)
 801e4f8:	f103 0118 	add.w	r1, r3, #24
 801e4fc:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e500:	e9c4 3100 	strd	r3, r1, [r4]
 801e504:	60a2      	str	r2, [r4, #8]
 801e506:	e74c      	b.n	801e3a2 <_GLOBAL__sub_I_serial_number+0xc2>
 801e508:	4c4c      	ldr	r4, [pc, #304]	@ (801e63c <_GLOBAL__sub_I_serial_number+0x35c>)
 801e50a:	4836      	ldr	r0, [pc, #216]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e50c:	4d36      	ldr	r5, [pc, #216]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e50e:	2101      	movs	r1, #1
 801e510:	6019      	str	r1, [r3, #0]
 801e512:	e9c4 5000 	strd	r5, r0, [r4]
 801e516:	494a      	ldr	r1, [pc, #296]	@ (801e640 <_GLOBAL__sub_I_serial_number+0x360>)
 801e518:	f104 0008 	add.w	r0, r4, #8
 801e51c:	f7f5 fdba 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e520:	4b48      	ldr	r3, [pc, #288]	@ (801e644 <_GLOBAL__sub_I_serial_number+0x364>)
 801e522:	f103 0118 	add.w	r1, r3, #24
 801e526:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e52a:	e9c4 3100 	strd	r3, r1, [r4]
 801e52e:	60a2      	str	r2, [r4, #8]
 801e530:	e731      	b.n	801e396 <_GLOBAL__sub_I_serial_number+0xb6>
 801e532:	4c45      	ldr	r4, [pc, #276]	@ (801e648 <_GLOBAL__sub_I_serial_number+0x368>)
 801e534:	482b      	ldr	r0, [pc, #172]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e536:	4d2c      	ldr	r5, [pc, #176]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e538:	2101      	movs	r1, #1
 801e53a:	6019      	str	r1, [r3, #0]
 801e53c:	e9c4 5000 	strd	r5, r0, [r4]
 801e540:	4942      	ldr	r1, [pc, #264]	@ (801e64c <_GLOBAL__sub_I_serial_number+0x36c>)
 801e542:	f104 0008 	add.w	r0, r4, #8
 801e546:	f7f5 fda5 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e54a:	4b41      	ldr	r3, [pc, #260]	@ (801e650 <_GLOBAL__sub_I_serial_number+0x370>)
 801e54c:	f103 0118 	add.w	r1, r3, #24
 801e550:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e554:	e9c4 3100 	strd	r3, r1, [r4]
 801e558:	60a2      	str	r2, [r4, #8]
 801e55a:	e716      	b.n	801e38a <_GLOBAL__sub_I_serial_number+0xaa>
 801e55c:	4c3d      	ldr	r4, [pc, #244]	@ (801e654 <_GLOBAL__sub_I_serial_number+0x374>)
 801e55e:	4821      	ldr	r0, [pc, #132]	@ (801e5e4 <_GLOBAL__sub_I_serial_number+0x304>)
 801e560:	4d21      	ldr	r5, [pc, #132]	@ (801e5e8 <_GLOBAL__sub_I_serial_number+0x308>)
 801e562:	2101      	movs	r1, #1
 801e564:	6019      	str	r1, [r3, #0]
 801e566:	e9c4 5000 	strd	r5, r0, [r4]
 801e56a:	493b      	ldr	r1, [pc, #236]	@ (801e658 <_GLOBAL__sub_I_serial_number+0x378>)
 801e56c:	f104 0008 	add.w	r0, r4, #8
 801e570:	f7f5 fd90 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e574:	4b39      	ldr	r3, [pc, #228]	@ (801e65c <_GLOBAL__sub_I_serial_number+0x37c>)
 801e576:	f103 0118 	add.w	r1, r3, #24
 801e57a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e57e:	e9c4 3100 	strd	r3, r1, [r4]
 801e582:	60a2      	str	r2, [r4, #8]
 801e584:	e6fb      	b.n	801e37e <_GLOBAL__sub_I_serial_number+0x9e>
 801e586:	bf00      	nop
 801e588:	20008e4c 	.word	0x20008e4c
 801e58c:	20008cb4 	.word	0x20008cb4
 801e590:	20008e48 	.word	0x20008e48
 801e594:	20008cb0 	.word	0x20008cb0
 801e598:	20008cac 	.word	0x20008cac
 801e59c:	20008ca8 	.word	0x20008ca8
 801e5a0:	20008ca4 	.word	0x20008ca4
 801e5a4:	20008ca0 	.word	0x20008ca0
 801e5a8:	20008c9c 	.word	0x20008c9c
 801e5ac:	20008c98 	.word	0x20008c98
 801e5b0:	20008c94 	.word	0x20008c94
 801e5b4:	20008c90 	.word	0x20008c90
 801e5b8:	20008c8c 	.word	0x20008c8c
 801e5bc:	20008c88 	.word	0x20008c88
 801e5c0:	20008c84 	.word	0x20008c84
 801e5c4:	20008c80 	.word	0x20008c80
 801e5c8:	20008c7c 	.word	0x20008c7c
 801e5cc:	20008c78 	.word	0x20008c78
 801e5d0:	20008c74 	.word	0x20008c74
 801e5d4:	20008c70 	.word	0x20008c70
 801e5d8:	20008c6c 	.word	0x20008c6c
 801e5dc:	20008c68 	.word	0x20008c68
 801e5e0:	20008cb8 	.word	0x20008cb8
 801e5e4:	0802bb54 	.word	0x0802bb54
 801e5e8:	0802bb64 	.word	0x0802bb64
 801e5ec:	0802b2d8 	.word	0x0802b2d8
 801e5f0:	0802bf4c 	.word	0x0802bf4c
 801e5f4:	20008ccc 	.word	0x20008ccc
 801e5f8:	0802b2d8 	.word	0x0802b2d8
 801e5fc:	0802bf18 	.word	0x0802bf18
 801e600:	20008ce0 	.word	0x20008ce0
 801e604:	0802b2d8 	.word	0x0802b2d8
 801e608:	0802bee4 	.word	0x0802bee4
 801e60c:	20008cf4 	.word	0x20008cf4
 801e610:	0802b2d8 	.word	0x0802b2d8
 801e614:	0802beb0 	.word	0x0802beb0
 801e618:	20008d08 	.word	0x20008d08
 801e61c:	0802b2d8 	.word	0x0802b2d8
 801e620:	0802be7c 	.word	0x0802be7c
 801e624:	20008d1c 	.word	0x20008d1c
 801e628:	0802b2d8 	.word	0x0802b2d8
 801e62c:	0802be48 	.word	0x0802be48
 801e630:	20008d30 	.word	0x20008d30
 801e634:	0802b2d8 	.word	0x0802b2d8
 801e638:	0802be14 	.word	0x0802be14
 801e63c:	20008d44 	.word	0x20008d44
 801e640:	0802b2d8 	.word	0x0802b2d8
 801e644:	0802bde0 	.word	0x0802bde0
 801e648:	20008d58 	.word	0x20008d58
 801e64c:	0802b2d8 	.word	0x0802b2d8
 801e650:	0802bdac 	.word	0x0802bdac
 801e654:	20008d6c 	.word	0x20008d6c
 801e658:	0802b2d8 	.word	0x0802b2d8
 801e65c:	0802bd78 	.word	0x0802bd78
 801e660:	4c68      	ldr	r4, [pc, #416]	@ (801e804 <_GLOBAL__sub_I_serial_number+0x524>)
 801e662:	4869      	ldr	r0, [pc, #420]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e664:	4d69      	ldr	r5, [pc, #420]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e666:	2101      	movs	r1, #1
 801e668:	6019      	str	r1, [r3, #0]
 801e66a:	e9c4 5000 	strd	r5, r0, [r4]
 801e66e:	4968      	ldr	r1, [pc, #416]	@ (801e810 <_GLOBAL__sub_I_serial_number+0x530>)
 801e670:	f104 0008 	add.w	r0, r4, #8
 801e674:	f7f5 fd0e 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e678:	4b66      	ldr	r3, [pc, #408]	@ (801e814 <_GLOBAL__sub_I_serial_number+0x534>)
 801e67a:	f103 0118 	add.w	r1, r3, #24
 801e67e:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e682:	e9c4 3100 	strd	r3, r1, [r4]
 801e686:	60a2      	str	r2, [r4, #8]
 801e688:	e673      	b.n	801e372 <_GLOBAL__sub_I_serial_number+0x92>
 801e68a:	4c63      	ldr	r4, [pc, #396]	@ (801e818 <_GLOBAL__sub_I_serial_number+0x538>)
 801e68c:	485e      	ldr	r0, [pc, #376]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e68e:	4d5f      	ldr	r5, [pc, #380]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e690:	2101      	movs	r1, #1
 801e692:	6019      	str	r1, [r3, #0]
 801e694:	e9c4 5000 	strd	r5, r0, [r4]
 801e698:	4960      	ldr	r1, [pc, #384]	@ (801e81c <_GLOBAL__sub_I_serial_number+0x53c>)
 801e69a:	f104 0008 	add.w	r0, r4, #8
 801e69e:	f7f5 fcf9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e6a2:	4b5f      	ldr	r3, [pc, #380]	@ (801e820 <_GLOBAL__sub_I_serial_number+0x540>)
 801e6a4:	f103 0118 	add.w	r1, r3, #24
 801e6a8:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e6ac:	e9c4 3100 	strd	r3, r1, [r4]
 801e6b0:	60a2      	str	r2, [r4, #8]
 801e6b2:	e658      	b.n	801e366 <_GLOBAL__sub_I_serial_number+0x86>
 801e6b4:	4c5b      	ldr	r4, [pc, #364]	@ (801e824 <_GLOBAL__sub_I_serial_number+0x544>)
 801e6b6:	4854      	ldr	r0, [pc, #336]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e6b8:	4d54      	ldr	r5, [pc, #336]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e6ba:	2101      	movs	r1, #1
 801e6bc:	6019      	str	r1, [r3, #0]
 801e6be:	e9c4 5000 	strd	r5, r0, [r4]
 801e6c2:	4959      	ldr	r1, [pc, #356]	@ (801e828 <_GLOBAL__sub_I_serial_number+0x548>)
 801e6c4:	f104 0008 	add.w	r0, r4, #8
 801e6c8:	f7f5 fce4 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e6cc:	4b57      	ldr	r3, [pc, #348]	@ (801e82c <_GLOBAL__sub_I_serial_number+0x54c>)
 801e6ce:	f103 0118 	add.w	r1, r3, #24
 801e6d2:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e6d6:	e9c4 3100 	strd	r3, r1, [r4]
 801e6da:	60a2      	str	r2, [r4, #8]
 801e6dc:	e63d      	b.n	801e35a <_GLOBAL__sub_I_serial_number+0x7a>
 801e6de:	4c54      	ldr	r4, [pc, #336]	@ (801e830 <_GLOBAL__sub_I_serial_number+0x550>)
 801e6e0:	4849      	ldr	r0, [pc, #292]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e6e2:	4d4a      	ldr	r5, [pc, #296]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e6e4:	2101      	movs	r1, #1
 801e6e6:	6019      	str	r1, [r3, #0]
 801e6e8:	e9c4 5000 	strd	r5, r0, [r4]
 801e6ec:	4951      	ldr	r1, [pc, #324]	@ (801e834 <_GLOBAL__sub_I_serial_number+0x554>)
 801e6ee:	f104 0008 	add.w	r0, r4, #8
 801e6f2:	f7f5 fccf 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e6f6:	4b50      	ldr	r3, [pc, #320]	@ (801e838 <_GLOBAL__sub_I_serial_number+0x558>)
 801e6f8:	f103 0118 	add.w	r1, r3, #24
 801e6fc:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e700:	e9c4 3100 	strd	r3, r1, [r4]
 801e704:	60a2      	str	r2, [r4, #8]
 801e706:	e622      	b.n	801e34e <_GLOBAL__sub_I_serial_number+0x6e>
 801e708:	4c4c      	ldr	r4, [pc, #304]	@ (801e83c <_GLOBAL__sub_I_serial_number+0x55c>)
 801e70a:	483f      	ldr	r0, [pc, #252]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e70c:	4d3f      	ldr	r5, [pc, #252]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e70e:	2101      	movs	r1, #1
 801e710:	6019      	str	r1, [r3, #0]
 801e712:	e9c4 5000 	strd	r5, r0, [r4]
 801e716:	494a      	ldr	r1, [pc, #296]	@ (801e840 <_GLOBAL__sub_I_serial_number+0x560>)
 801e718:	f104 0008 	add.w	r0, r4, #8
 801e71c:	f7f5 fcba 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e720:	4b48      	ldr	r3, [pc, #288]	@ (801e844 <_GLOBAL__sub_I_serial_number+0x564>)
 801e722:	f103 0118 	add.w	r1, r3, #24
 801e726:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e72a:	e9c4 3100 	strd	r3, r1, [r4]
 801e72e:	60a2      	str	r2, [r4, #8]
 801e730:	e607      	b.n	801e342 <_GLOBAL__sub_I_serial_number+0x62>
 801e732:	4c45      	ldr	r4, [pc, #276]	@ (801e848 <_GLOBAL__sub_I_serial_number+0x568>)
 801e734:	4834      	ldr	r0, [pc, #208]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e736:	4d35      	ldr	r5, [pc, #212]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e738:	2101      	movs	r1, #1
 801e73a:	6019      	str	r1, [r3, #0]
 801e73c:	e9c4 5000 	strd	r5, r0, [r4]
 801e740:	4942      	ldr	r1, [pc, #264]	@ (801e84c <_GLOBAL__sub_I_serial_number+0x56c>)
 801e742:	f104 0008 	add.w	r0, r4, #8
 801e746:	f7f5 fca5 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e74a:	4b41      	ldr	r3, [pc, #260]	@ (801e850 <_GLOBAL__sub_I_serial_number+0x570>)
 801e74c:	f103 0118 	add.w	r1, r3, #24
 801e750:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e754:	e9c4 3100 	strd	r3, r1, [r4]
 801e758:	60a2      	str	r2, [r4, #8]
 801e75a:	e5ec      	b.n	801e336 <_GLOBAL__sub_I_serial_number+0x56>
 801e75c:	4c3d      	ldr	r4, [pc, #244]	@ (801e854 <_GLOBAL__sub_I_serial_number+0x574>)
 801e75e:	482a      	ldr	r0, [pc, #168]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e760:	4d2a      	ldr	r5, [pc, #168]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e762:	2101      	movs	r1, #1
 801e764:	6019      	str	r1, [r3, #0]
 801e766:	e9c4 5000 	strd	r5, r0, [r4]
 801e76a:	493b      	ldr	r1, [pc, #236]	@ (801e858 <_GLOBAL__sub_I_serial_number+0x578>)
 801e76c:	f104 0008 	add.w	r0, r4, #8
 801e770:	f7f5 fc90 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e774:	4b39      	ldr	r3, [pc, #228]	@ (801e85c <_GLOBAL__sub_I_serial_number+0x57c>)
 801e776:	f103 0118 	add.w	r1, r3, #24
 801e77a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e77e:	e9c4 3100 	strd	r3, r1, [r4]
 801e782:	60a2      	str	r2, [r4, #8]
 801e784:	e5d1      	b.n	801e32a <_GLOBAL__sub_I_serial_number+0x4a>
 801e786:	4c36      	ldr	r4, [pc, #216]	@ (801e860 <_GLOBAL__sub_I_serial_number+0x580>)
 801e788:	481f      	ldr	r0, [pc, #124]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e78a:	4d20      	ldr	r5, [pc, #128]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e78c:	2101      	movs	r1, #1
 801e78e:	6019      	str	r1, [r3, #0]
 801e790:	e9c4 5000 	strd	r5, r0, [r4]
 801e794:	4933      	ldr	r1, [pc, #204]	@ (801e864 <_GLOBAL__sub_I_serial_number+0x584>)
 801e796:	f104 0008 	add.w	r0, r4, #8
 801e79a:	f7f5 fc7b 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e79e:	4b32      	ldr	r3, [pc, #200]	@ (801e868 <_GLOBAL__sub_I_serial_number+0x588>)
 801e7a0:	f103 0118 	add.w	r1, r3, #24
 801e7a4:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e7a8:	e9c4 3100 	strd	r3, r1, [r4]
 801e7ac:	60a2      	str	r2, [r4, #8]
 801e7ae:	e5b6      	b.n	801e31e <_GLOBAL__sub_I_serial_number+0x3e>
 801e7b0:	4c2e      	ldr	r4, [pc, #184]	@ (801e86c <_GLOBAL__sub_I_serial_number+0x58c>)
 801e7b2:	4815      	ldr	r0, [pc, #84]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e7b4:	4d15      	ldr	r5, [pc, #84]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e7b6:	2101      	movs	r1, #1
 801e7b8:	6019      	str	r1, [r3, #0]
 801e7ba:	e9c4 5000 	strd	r5, r0, [r4]
 801e7be:	492c      	ldr	r1, [pc, #176]	@ (801e870 <_GLOBAL__sub_I_serial_number+0x590>)
 801e7c0:	f104 0008 	add.w	r0, r4, #8
 801e7c4:	f7f5 fc66 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e7c8:	4b2a      	ldr	r3, [pc, #168]	@ (801e874 <_GLOBAL__sub_I_serial_number+0x594>)
 801e7ca:	f103 0118 	add.w	r1, r3, #24
 801e7ce:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e7d2:	e9c4 3100 	strd	r3, r1, [r4]
 801e7d6:	60a2      	str	r2, [r4, #8]
 801e7d8:	e59b      	b.n	801e312 <_GLOBAL__sub_I_serial_number+0x32>
 801e7da:	4c27      	ldr	r4, [pc, #156]	@ (801e878 <_GLOBAL__sub_I_serial_number+0x598>)
 801e7dc:	480a      	ldr	r0, [pc, #40]	@ (801e808 <_GLOBAL__sub_I_serial_number+0x528>)
 801e7de:	4d0b      	ldr	r5, [pc, #44]	@ (801e80c <_GLOBAL__sub_I_serial_number+0x52c>)
 801e7e0:	2101      	movs	r1, #1
 801e7e2:	6019      	str	r1, [r3, #0]
 801e7e4:	e9c4 5000 	strd	r5, r0, [r4]
 801e7e8:	4924      	ldr	r1, [pc, #144]	@ (801e87c <_GLOBAL__sub_I_serial_number+0x59c>)
 801e7ea:	f104 0008 	add.w	r0, r4, #8
 801e7ee:	f7f5 fc51 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 801e7f2:	4b23      	ldr	r3, [pc, #140]	@ (801e880 <_GLOBAL__sub_I_serial_number+0x5a0>)
 801e7f4:	f103 0118 	add.w	r1, r3, #24
 801e7f8:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 801e7fc:	e9c4 3100 	strd	r3, r1, [r4]
 801e800:	60a2      	str	r2, [r4, #8]
 801e802:	e580      	b.n	801e306 <_GLOBAL__sub_I_serial_number+0x26>
 801e804:	20008d80 	.word	0x20008d80
 801e808:	0802bb54 	.word	0x0802bb54
 801e80c:	0802bb64 	.word	0x0802bb64
 801e810:	0802b2d8 	.word	0x0802b2d8
 801e814:	0802bd44 	.word	0x0802bd44
 801e818:	20008d94 	.word	0x20008d94
 801e81c:	0802b2d8 	.word	0x0802b2d8
 801e820:	0802bd10 	.word	0x0802bd10
 801e824:	20008da8 	.word	0x20008da8
 801e828:	0802b2d8 	.word	0x0802b2d8
 801e82c:	0802bcdc 	.word	0x0802bcdc
 801e830:	20008dbc 	.word	0x20008dbc
 801e834:	0802b2d8 	.word	0x0802b2d8
 801e838:	0802bca8 	.word	0x0802bca8
 801e83c:	20008dd0 	.word	0x20008dd0
 801e840:	0802b2d8 	.word	0x0802b2d8
 801e844:	0802bc74 	.word	0x0802bc74
 801e848:	20008de4 	.word	0x20008de4
 801e84c:	0802b2d8 	.word	0x0802b2d8
 801e850:	0802bc40 	.word	0x0802bc40
 801e854:	20008df8 	.word	0x20008df8
 801e858:	0802b2d8 	.word	0x0802b2d8
 801e85c:	0802bc0c 	.word	0x0802bc0c
 801e860:	20008e0c 	.word	0x20008e0c
 801e864:	0802b2d8 	.word	0x0802b2d8
 801e868:	0802bbd8 	.word	0x0802bbd8
 801e86c:	20008e20 	.word	0x20008e20
 801e870:	0802b2d8 	.word	0x0802b2d8
 801e874:	0802bba4 	.word	0x0802bba4
 801e878:	20008e34 	.word	0x20008e34
 801e87c:	0802b2d8 	.word	0x0802b2d8
 801e880:	0802bb70 	.word	0x0802bb70

0801e884 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e884:	b082      	sub	sp, #8
 801e886:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e88a:	9b04      	ldr	r3, [sp, #16]
 801e88c:	b143      	cbz	r3, 801e8a0 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1c>
 801e88e:	2b01      	cmp	r3, #1
 801e890:	d109      	bne.n	801e8a6 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x22>
 801e892:	4b06      	ldr	r3, [pc, #24]	@ (801e8ac <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x28>)
 801e894:	6043      	str	r3, [r0, #4]
 801e896:	3204      	adds	r2, #4
 801e898:	4b05      	ldr	r3, [pc, #20]	@ (801e8b0 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>)
 801e89a:	6002      	str	r2, [r0, #0]
 801e89c:	6083      	str	r3, [r0, #8]
 801e89e:	e002      	b.n	801e8a6 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x22>
 801e8a0:	4b04      	ldr	r3, [pc, #16]	@ (801e8b4 <ODriveCanConfigTypeInfo<ODriveCAN::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x30>)
 801e8a2:	6002      	str	r2, [r0, #0]
 801e8a4:	6043      	str	r3, [r0, #4]
 801e8a6:	b002      	add	sp, #8
 801e8a8:	4770      	bx	lr
 801e8aa:	bf00      	nop
 801e8ac:	08012911 	.word	0x08012911
 801e8b0:	08012915 	.word	0x08012915
 801e8b4:	08012865 	.word	0x08012865

0801e8b8 <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e8b8:	b082      	sub	sp, #8
 801e8ba:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e8be:	9b04      	ldr	r3, [sp, #16]
 801e8c0:	b123      	cbz	r3, 801e8cc <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801e8c2:	2b01      	cmp	r3, #1
 801e8c4:	d108      	bne.n	801e8d8 <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801e8c6:	6953      	ldr	r3, [r2, #20]
 801e8c8:	6003      	str	r3, [r0, #0]
 801e8ca:	e005      	b.n	801e8d8 <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801e8cc:	4b03      	ldr	r3, [pc, #12]	@ (801e8dc <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>)
 801e8ce:	6043      	str	r3, [r0, #4]
 801e8d0:	3210      	adds	r2, #16
 801e8d2:	4b03      	ldr	r3, [pc, #12]	@ (801e8e0 <ODriveCanTypeInfo<ODriveCAN>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x28>)
 801e8d4:	6002      	str	r2, [r0, #0]
 801e8d6:	6083      	str	r3, [r0, #8]
 801e8d8:	b002      	add	sp, #8
 801e8da:	4770      	bx	lr
 801e8dc:	08012909 	.word	0x08012909
 801e8e0:	0801290d 	.word	0x0801290d

0801e8e4 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e8e4:	b082      	sub	sp, #8
 801e8e6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e8ea:	9b04      	ldr	r3, [sp, #16]
 801e8ec:	2b05      	cmp	r3, #5
 801e8ee:	d820      	bhi.n	801e932 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4e>
 801e8f0:	e8df f003 	tbb	[pc, r3]
 801e8f4:	120d0803 	.word	0x120d0803
 801e8f8:	1a14      	.short	0x1a14
 801e8fa:	4b0f      	ldr	r3, [pc, #60]	@ (801e938 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>)
 801e8fc:	6043      	str	r3, [r0, #4]
 801e8fe:	6002      	str	r2, [r0, #0]
 801e900:	4b0e      	ldr	r3, [pc, #56]	@ (801e93c <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>)
 801e902:	e015      	b.n	801e930 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801e904:	4b0e      	ldr	r3, [pc, #56]	@ (801e940 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>)
 801e906:	6043      	str	r3, [r0, #4]
 801e908:	6002      	str	r2, [r0, #0]
 801e90a:	4b0e      	ldr	r3, [pc, #56]	@ (801e944 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>)
 801e90c:	e010      	b.n	801e930 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801e90e:	4b0e      	ldr	r3, [pc, #56]	@ (801e948 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x64>)
 801e910:	6043      	str	r3, [r0, #4]
 801e912:	6002      	str	r2, [r0, #0]
 801e914:	4b0d      	ldr	r3, [pc, #52]	@ (801e94c <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x68>)
 801e916:	e00b      	b.n	801e930 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801e918:	320b      	adds	r2, #11
 801e91a:	e000      	b.n	801e91e <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3a>
 801e91c:	320c      	adds	r2, #12
 801e91e:	4b0c      	ldr	r3, [pc, #48]	@ (801e950 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6c>)
 801e920:	6043      	str	r3, [r0, #4]
 801e922:	6002      	str	r2, [r0, #0]
 801e924:	4b0b      	ldr	r3, [pc, #44]	@ (801e954 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x70>)
 801e926:	e003      	b.n	801e930 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801e928:	4b0b      	ldr	r3, [pc, #44]	@ (801e958 <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>)
 801e92a:	6043      	str	r3, [r0, #4]
 801e92c:	4b0b      	ldr	r3, [pc, #44]	@ (801e95c <ODriveEndstopConfigTypeInfo<Endstop::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>)
 801e92e:	6002      	str	r2, [r0, #0]
 801e930:	6083      	str	r3, [r0, #8]
 801e932:	b002      	add	sp, #8
 801e934:	4770      	bx	lr
 801e936:	bf00      	nop
 801e938:	08013199 	.word	0x08013199
 801e93c:	08014219 	.word	0x08014219
 801e940:	08013191 	.word	0x08013191
 801e944:	08014231 	.word	0x08014231
 801e948:	0801283d 	.word	0x0801283d
 801e94c:	08012845 	.word	0x08012845
 801e950:	0801285d 	.word	0x0801285d
 801e954:	08012861 	.word	0x08012861
 801e958:	08013189 	.word	0x08013189
 801e95c:	08014249 	.word	0x08014249

0801e960 <ODriveEndstopTypeInfo<Endstop>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e960:	b082      	sub	sp, #8
 801e962:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e966:	9b04      	ldr	r3, [sp, #16]
 801e968:	b123      	cbz	r3, 801e974 <ODriveEndstopTypeInfo<Endstop>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801e96a:	2b01      	cmp	r3, #1
 801e96c:	d106      	bne.n	801e97c <ODriveEndstopTypeInfo<Endstop>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1c>
 801e96e:	6813      	ldr	r3, [r2, #0]
 801e970:	6003      	str	r3, [r0, #0]
 801e972:	e003      	b.n	801e97c <ODriveEndstopTypeInfo<Endstop>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1c>
 801e974:	4b02      	ldr	r3, [pc, #8]	@ (801e980 <ODriveEndstopTypeInfo<Endstop>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>)
 801e976:	6043      	str	r3, [r0, #4]
 801e978:	3208      	adds	r2, #8
 801e97a:	6002      	str	r2, [r0, #0]
 801e97c:	b002      	add	sp, #8
 801e97e:	4770      	bx	lr
 801e980:	08012859 	.word	0x08012859

0801e984 <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e984:	b082      	sub	sp, #8
 801e986:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e98a:	9b04      	ldr	r3, [sp, #16]
 801e98c:	2b01      	cmp	r3, #1
 801e98e:	d003      	beq.n	801e998 <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801e990:	2b02      	cmp	r3, #2
 801e992:	d003      	beq.n	801e99c <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x18>
 801e994:	b943      	cbnz	r3, 801e9a8 <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801e996:	e002      	b.n	801e99e <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801e998:	3204      	adds	r2, #4
 801e99a:	e000      	b.n	801e99e <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801e99c:	3208      	adds	r2, #8
 801e99e:	4b03      	ldr	r3, [pc, #12]	@ (801e9ac <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x28>)
 801e9a0:	6043      	str	r3, [r0, #4]
 801e9a2:	4b03      	ldr	r3, [pc, #12]	@ (801e9b0 <ODriveTrapezoidalTrajectoryConfigTypeInfo<TrapezoidalTrajectory::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>)
 801e9a4:	6002      	str	r2, [r0, #0]
 801e9a6:	6083      	str	r3, [r0, #8]
 801e9a8:	b002      	add	sp, #8
 801e9aa:	4770      	bx	lr
 801e9ac:	0801283d 	.word	0x0801283d
 801e9b0:	08012845 	.word	0x08012845

0801e9b4 <ODriveTrapezoidalTrajectoryTypeInfo<TrapezoidalTrajectory>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e9b4:	b082      	sub	sp, #8
 801e9b6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e9ba:	9b04      	ldr	r3, [sp, #16]
 801e9bc:	b90b      	cbnz	r3, 801e9c2 <ODriveTrapezoidalTrajectoryTypeInfo<TrapezoidalTrajectory>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe>
 801e9be:	6853      	ldr	r3, [r2, #4]
 801e9c0:	6003      	str	r3, [r0, #0]
 801e9c2:	b002      	add	sp, #8
 801e9c4:	4770      	bx	lr
	...

0801e9c8 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e9c8:	b082      	sub	sp, #8
 801e9ca:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e9ce:	9b04      	ldr	r3, [sp, #16]
 801e9d0:	2b01      	cmp	r3, #1
 801e9d2:	d003      	beq.n	801e9dc <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801e9d4:	2b02      	cmp	r3, #2
 801e9d6:	d003      	beq.n	801e9e0 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x18>
 801e9d8:	b943      	cbnz	r3, 801e9ec <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801e9da:	e002      	b.n	801e9e2 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801e9dc:	3204      	adds	r2, #4
 801e9de:	e000      	b.n	801e9e2 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801e9e0:	3208      	adds	r2, #8
 801e9e2:	4b03      	ldr	r3, [pc, #12]	@ (801e9f0 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x28>)
 801e9e4:	6043      	str	r3, [r0, #4]
 801e9e6:	4b03      	ldr	r3, [pc, #12]	@ (801e9f4 <ODriveSensorlessEstimatorConfigTypeInfo<SensorlessEstimator::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>)
 801e9e8:	6002      	str	r2, [r0, #0]
 801e9ea:	6083      	str	r3, [r0, #8]
 801e9ec:	b002      	add	sp, #8
 801e9ee:	4770      	bx	lr
 801e9f0:	0801283d 	.word	0x0801283d
 801e9f4:	08012845 	.word	0x08012845

0801e9f8 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801e9f8:	b082      	sub	sp, #8
 801e9fa:	e88d 000c 	stmia.w	sp, {r2, r3}
 801e9fe:	9b04      	ldr	r3, [sp, #16]
 801ea00:	2b04      	cmp	r3, #4
 801ea02:	d817      	bhi.n	801ea34 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>
 801ea04:	e8df f003 	tbb	[pc, r3]
 801ea08:	0d0b0903 	.word	0x0d0b0903
 801ea0c:	14          	.byte	0x14
 801ea0d:	00          	.byte	0x00
 801ea0e:	4b0a      	ldr	r3, [pc, #40]	@ (801ea38 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x40>)
 801ea10:	6043      	str	r3, [r0, #4]
 801ea12:	3208      	adds	r2, #8
 801ea14:	4b09      	ldr	r3, [pc, #36]	@ (801ea3c <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x44>)
 801ea16:	6002      	str	r2, [r0, #0]
 801ea18:	e008      	b.n	801ea2c <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>
 801ea1a:	320c      	adds	r2, #12
 801ea1c:	e002      	b.n	801ea24 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801ea1e:	3210      	adds	r2, #16
 801ea20:	e000      	b.n	801ea24 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801ea22:	3214      	adds	r2, #20
 801ea24:	4b06      	ldr	r3, [pc, #24]	@ (801ea40 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x48>)
 801ea26:	6043      	str	r3, [r0, #4]
 801ea28:	4b06      	ldr	r3, [pc, #24]	@ (801ea44 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>)
 801ea2a:	6002      	str	r2, [r0, #0]
 801ea2c:	6083      	str	r3, [r0, #8]
 801ea2e:	e001      	b.n	801ea34 <ODriveSensorlessEstimatorTypeInfo<SensorlessEstimator>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>
 801ea30:	6853      	ldr	r3, [r2, #4]
 801ea32:	6003      	str	r3, [r0, #0]
 801ea34:	b002      	add	sp, #8
 801ea36:	4770      	bx	lr
 801ea38:	08012901 	.word	0x08012901
 801ea3c:	08012905 	.word	0x08012905
 801ea40:	0801283d 	.word	0x0801283d
 801ea44:	08012845 	.word	0x08012845

0801ea48 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ea48:	b082      	sub	sp, #8
 801ea4a:	e88d 000c 	stmia.w	sp, {r2, r3}
 801ea4e:	9b04      	ldr	r3, [sp, #16]
 801ea50:	2b11      	cmp	r3, #17
 801ea52:	d850      	bhi.n	801eaf6 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xae>
 801ea54:	e8df f003 	tbb	[pc, r3]
 801ea58:	18130e09 	.word	0x18130e09
 801ea5c:	27211f1d 	.word	0x27211f1d
 801ea60:	35302e2c 	.word	0x35302e2c
 801ea64:	413f3937 	.word	0x413f3937
 801ea68:	4947      	.short	0x4947
 801ea6a:	4b24      	ldr	r3, [pc, #144]	@ (801eafc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>)
 801ea6c:	6043      	str	r3, [r0, #4]
 801ea6e:	6002      	str	r2, [r0, #0]
 801ea70:	4b23      	ldr	r3, [pc, #140]	@ (801eb00 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb8>)
 801ea72:	e03f      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ea74:	4b23      	ldr	r3, [pc, #140]	@ (801eb04 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xbc>)
 801ea76:	6043      	str	r3, [r0, #4]
 801ea78:	6002      	str	r2, [r0, #0]
 801ea7a:	4b23      	ldr	r3, [pc, #140]	@ (801eb08 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc0>)
 801ea7c:	e03a      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ea7e:	4b23      	ldr	r3, [pc, #140]	@ (801eb0c <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>)
 801ea80:	6043      	str	r3, [r0, #4]
 801ea82:	6002      	str	r2, [r0, #0]
 801ea84:	4b22      	ldr	r3, [pc, #136]	@ (801eb10 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc8>)
 801ea86:	e035      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ea88:	4b22      	ldr	r3, [pc, #136]	@ (801eb14 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xcc>)
 801ea8a:	6043      	str	r3, [r0, #4]
 801ea8c:	6002      	str	r2, [r0, #0]
 801ea8e:	4b22      	ldr	r3, [pc, #136]	@ (801eb18 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd0>)
 801ea90:	e030      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ea92:	3204      	adds	r2, #4
 801ea94:	e022      	b.n	801eadc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801ea96:	3208      	adds	r2, #8
 801ea98:	e000      	b.n	801ea9c <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>
 801ea9a:	320c      	adds	r2, #12
 801ea9c:	4b1f      	ldr	r3, [pc, #124]	@ (801eb1c <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd4>)
 801ea9e:	6043      	str	r3, [r0, #4]
 801eaa0:	6002      	str	r2, [r0, #0]
 801eaa2:	4b1f      	ldr	r3, [pc, #124]	@ (801eb20 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd8>)
 801eaa4:	e026      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eaa6:	4b1f      	ldr	r3, [pc, #124]	@ (801eb24 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xdc>)
 801eaa8:	6043      	str	r3, [r0, #4]
 801eaaa:	6002      	str	r2, [r0, #0]
 801eaac:	4b1e      	ldr	r3, [pc, #120]	@ (801eb28 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe0>)
 801eaae:	e021      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eab0:	3210      	adds	r2, #16
 801eab2:	e00b      	b.n	801eacc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801eab4:	3214      	adds	r2, #20
 801eab6:	e011      	b.n	801eadc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801eab8:	4b1c      	ldr	r3, [pc, #112]	@ (801eb2c <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe4>)
 801eaba:	6043      	str	r3, [r0, #4]
 801eabc:	6002      	str	r2, [r0, #0]
 801eabe:	4b1c      	ldr	r3, [pc, #112]	@ (801eb30 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe8>)
 801eac0:	e018      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eac2:	3218      	adds	r2, #24
 801eac4:	e002      	b.n	801eacc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801eac6:	321c      	adds	r2, #28
 801eac8:	e000      	b.n	801eacc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801eaca:	3220      	adds	r2, #32
 801eacc:	4b19      	ldr	r3, [pc, #100]	@ (801eb34 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xec>)
 801eace:	6043      	str	r3, [r0, #4]
 801ead0:	6002      	str	r2, [r0, #0]
 801ead2:	4b19      	ldr	r3, [pc, #100]	@ (801eb38 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf0>)
 801ead4:	e00e      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ead6:	3229      	adds	r2, #41	@ 0x29
 801ead8:	e000      	b.n	801eadc <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801eada:	322a      	adds	r2, #42	@ 0x2a
 801eadc:	4b17      	ldr	r3, [pc, #92]	@ (801eb3c <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf4>)
 801eade:	6043      	str	r3, [r0, #4]
 801eae0:	6002      	str	r2, [r0, #0]
 801eae2:	4b17      	ldr	r3, [pc, #92]	@ (801eb40 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf8>)
 801eae4:	e006      	b.n	801eaf4 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eae6:	322e      	adds	r2, #46	@ 0x2e
 801eae8:	e000      	b.n	801eaec <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa4>
 801eaea:	3230      	adds	r2, #48	@ 0x30
 801eaec:	4b15      	ldr	r3, [pc, #84]	@ (801eb44 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xfc>)
 801eaee:	6043      	str	r3, [r0, #4]
 801eaf0:	4b15      	ldr	r3, [pc, #84]	@ (801eb48 <ODriveEncoderConfigTypeInfo<Encoder::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x100>)
 801eaf2:	6002      	str	r2, [r0, #0]
 801eaf4:	6083      	str	r3, [r0, #8]
 801eaf6:	b002      	add	sp, #8
 801eaf8:	4770      	bx	lr
 801eafa:	bf00      	nop
 801eafc:	080128f1 	.word	0x080128f1
 801eb00:	080128f5 	.word	0x080128f5
 801eb04:	080131c9 	.word	0x080131c9
 801eb08:	08014199 	.word	0x08014199
 801eb0c:	080131c1 	.word	0x080131c1
 801eb10:	080141b9 	.word	0x080141b9
 801eb14:	080131b5 	.word	0x080131b5
 801eb18:	080141d1 	.word	0x080141d1
 801eb1c:	080128b5 	.word	0x080128b5
 801eb20:	080128b9 	.word	0x080128b9
 801eb24:	080131ad 	.word	0x080131ad
 801eb28:	080141e9 	.word	0x080141e9
 801eb2c:	080131a5 	.word	0x080131a5
 801eb30:	08014205 	.word	0x08014205
 801eb34:	0801283d 	.word	0x0801283d
 801eb38:	08012845 	.word	0x08012845
 801eb3c:	0801285d 	.word	0x0801285d
 801eb40:	08012861 	.word	0x08012861
 801eb44:	080128f9 	.word	0x080128f9
 801eb48:	080128fd 	.word	0x080128fd

0801eb4c <FibrePropertyTypeInfo<Property<long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801eb4c:	b082      	sub	sp, #8
 801eb4e:	b510      	push	{r4, lr}
 801eb50:	a902      	add	r1, sp, #8
 801eb52:	e881 000c 	stmia.w	r1, {r2, r3}
 801eb56:	4604      	mov	r4, r0
 801eb58:	2210      	movs	r2, #16
 801eb5a:	2100      	movs	r1, #0
 801eb5c:	f005 fda3 	bl	80246a6 <memset>
 801eb60:	4620      	mov	r0, r4
 801eb62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb66:	b002      	add	sp, #8
 801eb68:	4770      	bx	lr
 801eb6a:	bf00      	nop

0801eb6c <non-virtual thunk to FibrePropertyTypeInfo<Property<long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801eb6c:	f1a1 0104 	sub.w	r1, r1, #4
 801eb70:	e7ec      	b.n	801eb4c <FibrePropertyTypeInfo<Property<long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801eb72:	bf00      	nop

0801eb74 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801eb74:	b082      	sub	sp, #8
 801eb76:	e88d 000c 	stmia.w	sp, {r2, r3}
 801eb7a:	9b04      	ldr	r3, [sp, #16]
 801eb7c:	2b12      	cmp	r3, #18
 801eb7e:	d843      	bhi.n	801ec08 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801eb80:	e8df f003 	tbb	[pc, r3]
 801eb84:	1612100a 	.word	0x1612100a
 801eb88:	201e1c18 	.word	0x201e1c18
 801eb8c:	28262422 	.word	0x28262422
 801eb90:	32302e2a 	.word	0x32302e2a
 801eb94:	3b34      	.short	0x3b34
 801eb96:	40          	.byte	0x40
 801eb97:	00          	.byte	0x00
 801eb98:	4b1c      	ldr	r3, [pc, #112]	@ (801ec0c <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x98>)
 801eb9a:	6043      	str	r3, [r0, #4]
 801eb9c:	3214      	adds	r2, #20
 801eb9e:	4b1c      	ldr	r3, [pc, #112]	@ (801ec10 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9c>)
 801eba0:	6002      	str	r2, [r0, #0]
 801eba2:	e028      	b.n	801ebf6 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x82>
 801eba4:	3217      	adds	r2, #23
 801eba6:	e000      	b.n	801ebaa <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x36>
 801eba8:	3216      	adds	r2, #22
 801ebaa:	4b1a      	ldr	r3, [pc, #104]	@ (801ec14 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa0>)
 801ebac:	6002      	str	r2, [r0, #0]
 801ebae:	e027      	b.n	801ec00 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>
 801ebb0:	3218      	adds	r2, #24
 801ebb2:	e000      	b.n	801ebb6 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x42>
 801ebb4:	321c      	adds	r2, #28
 801ebb6:	4b18      	ldr	r3, [pc, #96]	@ (801ec18 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa4>)
 801ebb8:	6002      	str	r2, [r0, #0]
 801ebba:	e021      	b.n	801ec00 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>
 801ebbc:	3220      	adds	r2, #32
 801ebbe:	e01d      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebc0:	3224      	adds	r2, #36	@ 0x24
 801ebc2:	e01b      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebc4:	3248      	adds	r2, #72	@ 0x48
 801ebc6:	e019      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebc8:	3228      	adds	r2, #40	@ 0x28
 801ebca:	e017      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebcc:	3250      	adds	r2, #80	@ 0x50
 801ebce:	e015      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebd0:	322c      	adds	r2, #44	@ 0x2c
 801ebd2:	e013      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebd4:	3254      	adds	r2, #84	@ 0x54
 801ebd6:	e011      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebd8:	325c      	adds	r2, #92	@ 0x5c
 801ebda:	4b10      	ldr	r3, [pc, #64]	@ (801ec1c <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa8>)
 801ebdc:	6002      	str	r2, [r0, #0]
 801ebde:	e00f      	b.n	801ec00 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>
 801ebe0:	324c      	adds	r2, #76	@ 0x4c
 801ebe2:	e00b      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebe4:	3230      	adds	r2, #48	@ 0x30
 801ebe6:	e009      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebe8:	323c      	adds	r2, #60	@ 0x3c
 801ebea:	e007      	b.n	801ebfc <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801ebec:	4b0c      	ldr	r3, [pc, #48]	@ (801ec20 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>)
 801ebee:	6043      	str	r3, [r0, #4]
 801ebf0:	3240      	adds	r2, #64	@ 0x40
 801ebf2:	4b0c      	ldr	r3, [pc, #48]	@ (801ec24 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb0>)
 801ebf4:	6002      	str	r2, [r0, #0]
 801ebf6:	6083      	str	r3, [r0, #8]
 801ebf8:	e006      	b.n	801ec08 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801ebfa:	3244      	adds	r2, #68	@ 0x44
 801ebfc:	4b0a      	ldr	r3, [pc, #40]	@ (801ec28 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>)
 801ebfe:	6002      	str	r2, [r0, #0]
 801ec00:	6043      	str	r3, [r0, #4]
 801ec02:	e001      	b.n	801ec08 <ODriveEncoderTypeInfo<Encoder>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801ec04:	68d3      	ldr	r3, [r2, #12]
 801ec06:	6003      	str	r3, [r0, #0]
 801ec08:	b002      	add	sp, #8
 801ec0a:	4770      	bx	lr
 801ec0c:	080128e5 	.word	0x080128e5
 801ec10:	080128e9 	.word	0x080128e9
 801ec14:	08012859 	.word	0x08012859
 801ec18:	080128ed 	.word	0x080128ed
 801ec1c:	08012855 	.word	0x08012855
 801ec20:	080128b5 	.word	0x080128b5
 801ec24:	080128b9 	.word	0x080128b9
 801ec28:	08012835 	.word	0x08012835

0801ec2c <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ec2c:	b082      	sub	sp, #8
 801ec2e:	e88d 000c 	stmia.w	sp, {r2, r3}
 801ec32:	9b04      	ldr	r3, [sp, #16]
 801ec34:	2b06      	cmp	r3, #6
 801ec36:	d82d      	bhi.n	801ec94 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x68>
 801ec38:	e8df f003 	tbb	[pc, r3]
 801ec3c:	110b0704 	.word	0x110b0704
 801ec40:	1d15      	.short	0x1d15
 801ec42:	24          	.byte	0x24
 801ec43:	00          	.byte	0x00
 801ec44:	4b14      	ldr	r3, [pc, #80]	@ (801ec98 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6c>)
 801ec46:	6002      	str	r2, [r0, #0]
 801ec48:	e01a      	b.n	801ec80 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>
 801ec4a:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec4e:	3204      	adds	r2, #4
 801ec50:	e01b      	b.n	801ec8a <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5e>
 801ec52:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec56:	3205      	adds	r2, #5
 801ec58:	4b10      	ldr	r3, [pc, #64]	@ (801ec9c <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x70>)
 801ec5a:	6002      	str	r2, [r0, #0]
 801ec5c:	e010      	b.n	801ec80 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>
 801ec5e:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec62:	3208      	adds	r2, #8
 801ec64:	e002      	b.n	801ec6c <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x40>
 801ec66:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec6a:	320c      	adds	r2, #12
 801ec6c:	4b0c      	ldr	r3, [pc, #48]	@ (801eca0 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>)
 801ec6e:	6043      	str	r3, [r0, #4]
 801ec70:	6002      	str	r2, [r0, #0]
 801ec72:	4b0c      	ldr	r3, [pc, #48]	@ (801eca4 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>)
 801ec74:	e00d      	b.n	801ec92 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801ec76:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec7a:	3210      	adds	r2, #16
 801ec7c:	4b0a      	ldr	r3, [pc, #40]	@ (801eca8 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>)
 801ec7e:	6002      	str	r2, [r0, #0]
 801ec80:	6043      	str	r3, [r0, #4]
 801ec82:	e007      	b.n	801ec94 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x68>
 801ec84:	f502 5261 	add.w	r2, r2, #14400	@ 0x3840
 801ec88:	3214      	adds	r2, #20
 801ec8a:	4b08      	ldr	r3, [pc, #32]	@ (801ecac <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x80>)
 801ec8c:	6043      	str	r3, [r0, #4]
 801ec8e:	4b08      	ldr	r3, [pc, #32]	@ (801ecb0 <ODriveControllerConfigAnticoggingTypeInfo<Controller::Anticogging_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>)
 801ec90:	6002      	str	r2, [r0, #0]
 801ec92:	6083      	str	r3, [r0, #8]
 801ec94:	b002      	add	sp, #8
 801ec96:	4770      	bx	lr
 801ec98:	08012865 	.word	0x08012865
 801ec9c:	08012859 	.word	0x08012859
 801eca0:	0801283d 	.word	0x0801283d
 801eca4:	08012845 	.word	0x08012845
 801eca8:	08012835 	.word	0x08012835
 801ecac:	0801285d 	.word	0x0801285d
 801ecb0:	08012861 	.word	0x08012861

0801ecb4 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ecb4:	b082      	sub	sp, #8
 801ecb6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801ecba:	9b04      	ldr	r3, [sp, #16]
 801ecbc:	2b16      	cmp	r3, #22
 801ecbe:	d85f      	bhi.n	801ed80 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xcc>
 801ecc0:	e8df f003 	tbb	[pc, r3]
 801ecc4:	17130f0c 	.word	0x17130f0c
 801ecc8:	2a241f1b 	.word	0x2a241f1b
 801eccc:	32302e2c 	.word	0x32302e2c
 801ecd0:	3c363448 	.word	0x3c363448
 801ecd4:	4642403e 	.word	0x4642403e
 801ecd8:	564e      	.short	0x564e
 801ecda:	5c          	.byte	0x5c
 801ecdb:	00          	.byte	0x00
 801ecdc:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ece0:	e01e      	b.n	801ed20 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6c>
 801ece2:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ece6:	3211      	adds	r2, #17
 801ece8:	e023      	b.n	801ed32 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7e>
 801ecea:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ecee:	3213      	adds	r2, #19
 801ecf0:	e01f      	b.n	801ed32 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7e>
 801ecf2:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ecf6:	3210      	adds	r2, #16
 801ecf8:	e01b      	b.n	801ed32 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7e>
 801ecfa:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ecfe:	3212      	adds	r2, #18
 801ed00:	e017      	b.n	801ed32 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7e>
 801ed02:	4b20      	ldr	r3, [pc, #128]	@ (801ed84 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd0>)
 801ed04:	6043      	str	r3, [r0, #4]
 801ed06:	6002      	str	r2, [r0, #0]
 801ed08:	4b1f      	ldr	r3, [pc, #124]	@ (801ed88 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd4>)
 801ed0a:	e035      	b.n	801ed78 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>
 801ed0c:	4b1f      	ldr	r3, [pc, #124]	@ (801ed8c <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd8>)
 801ed0e:	6043      	str	r3, [r0, #4]
 801ed10:	3201      	adds	r2, #1
 801ed12:	4b1f      	ldr	r3, [pc, #124]	@ (801ed90 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xdc>)
 801ed14:	6002      	str	r2, [r0, #0]
 801ed16:	e02f      	b.n	801ed78 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>
 801ed18:	3204      	adds	r2, #4
 801ed1a:	e01c      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed1c:	3208      	adds	r2, #8
 801ed1e:	e01a      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed20:	320c      	adds	r2, #12
 801ed22:	e018      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed24:	3210      	adds	r2, #16
 801ed26:	e016      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed28:	3214      	adds	r2, #20
 801ed2a:	e014      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed2c:	321c      	adds	r2, #28
 801ed2e:	e012      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed30:	3220      	adds	r2, #32
 801ed32:	4b18      	ldr	r3, [pc, #96]	@ (801ed94 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe0>)
 801ed34:	6043      	str	r3, [r0, #4]
 801ed36:	6002      	str	r2, [r0, #0]
 801ed38:	4b17      	ldr	r3, [pc, #92]	@ (801ed98 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe4>)
 801ed3a:	e01d      	b.n	801ed78 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>
 801ed3c:	3224      	adds	r2, #36	@ 0x24
 801ed3e:	e00a      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed40:	3230      	adds	r2, #48	@ 0x30
 801ed42:	e008      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed44:	3228      	adds	r2, #40	@ 0x28
 801ed46:	e006      	b.n	801ed56 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa2>
 801ed48:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ed4c:	3214      	adds	r2, #20
 801ed4e:	e00a      	b.n	801ed66 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb2>
 801ed50:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ed54:	3218      	adds	r2, #24
 801ed56:	4b11      	ldr	r3, [pc, #68]	@ (801ed9c <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe8>)
 801ed58:	6043      	str	r3, [r0, #4]
 801ed5a:	6002      	str	r2, [r0, #0]
 801ed5c:	4b10      	ldr	r3, [pc, #64]	@ (801eda0 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xec>)
 801ed5e:	e00b      	b.n	801ed78 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>
 801ed60:	f502 5262 	add.w	r2, r2, #14464	@ 0x3880
 801ed64:	321c      	adds	r2, #28
 801ed66:	4b0f      	ldr	r3, [pc, #60]	@ (801eda4 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf0>)
 801ed68:	6043      	str	r3, [r0, #4]
 801ed6a:	6002      	str	r2, [r0, #0]
 801ed6c:	4b0e      	ldr	r3, [pc, #56]	@ (801eda8 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf4>)
 801ed6e:	e003      	b.n	801ed78 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>
 801ed70:	4b0e      	ldr	r3, [pc, #56]	@ (801edac <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf8>)
 801ed72:	6043      	str	r3, [r0, #4]
 801ed74:	4b0e      	ldr	r3, [pc, #56]	@ (801edb0 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xfc>)
 801ed76:	6002      	str	r2, [r0, #0]
 801ed78:	6083      	str	r3, [r0, #8]
 801ed7a:	e001      	b.n	801ed80 <ODriveControllerConfigTypeInfo<Controller::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xcc>
 801ed7c:	3234      	adds	r2, #52	@ 0x34
 801ed7e:	6002      	str	r2, [r0, #0]
 801ed80:	b002      	add	sp, #8
 801ed82:	4770      	bx	lr
 801ed84:	080128cd 	.word	0x080128cd
 801ed88:	080128d1 	.word	0x080128d1
 801ed8c:	080128d5 	.word	0x080128d5
 801ed90:	080128d9 	.word	0x080128d9
 801ed94:	0801285d 	.word	0x0801285d
 801ed98:	08012861 	.word	0x08012861
 801ed9c:	0801283d 	.word	0x0801283d
 801eda0:	08012845 	.word	0x08012845
 801eda4:	080128dd 	.word	0x080128dd
 801eda8:	080128e1 	.word	0x080128e1
 801edac:	080131d5 	.word	0x080131d5
 801edb0:	08014181 	.word	0x08014181

0801edb4 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801edb4:	b082      	sub	sp, #8
 801edb6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801edba:	9b04      	ldr	r3, [sp, #16]
 801edbc:	2b0a      	cmp	r3, #10
 801edbe:	d832      	bhi.n	801ee26 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x72>
 801edc0:	e8df f003 	tbb	[pc, r3]
 801edc4:	13110c06 	.word	0x13110c06
 801edc8:	1d191715 	.word	0x1d191715
 801edcc:	2822      	.short	0x2822
 801edce:	2f          	.byte	0x2f
 801edcf:	00          	.byte	0x00
 801edd0:	4b16      	ldr	r3, [pc, #88]	@ (801ee2c <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>)
 801edd2:	6043      	str	r3, [r0, #4]
 801edd4:	3214      	adds	r2, #20
 801edd6:	4b16      	ldr	r3, [pc, #88]	@ (801ee30 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>)
 801edd8:	6002      	str	r2, [r0, #0]
 801edda:	e020      	b.n	801ee1e <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801eddc:	4b15      	ldr	r3, [pc, #84]	@ (801ee34 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x80>)
 801edde:	6043      	str	r3, [r0, #4]
 801ede0:	6002      	str	r2, [r0, #0]
 801ede2:	4b15      	ldr	r3, [pc, #84]	@ (801ee38 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>)
 801ede4:	e01b      	b.n	801ee1e <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801ede6:	3244      	adds	r2, #68	@ 0x44
 801ede8:	e00f      	b.n	801ee0a <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x56>
 801edea:	3248      	adds	r2, #72	@ 0x48
 801edec:	e00d      	b.n	801ee0a <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x56>
 801edee:	3230      	adds	r2, #48	@ 0x30
 801edf0:	e002      	b.n	801edf8 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x44>
 801edf2:	3234      	adds	r2, #52	@ 0x34
 801edf4:	e000      	b.n	801edf8 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x44>
 801edf6:	323c      	adds	r2, #60	@ 0x3c
 801edf8:	4b10      	ldr	r3, [pc, #64]	@ (801ee3c <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>)
 801edfa:	6002      	str	r2, [r0, #0]
 801edfc:	e002      	b.n	801ee04 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x50>
 801edfe:	3255      	adds	r2, #85	@ 0x55
 801ee00:	4b0f      	ldr	r3, [pc, #60]	@ (801ee40 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>)
 801ee02:	6002      	str	r2, [r0, #0]
 801ee04:	6043      	str	r3, [r0, #4]
 801ee06:	e00e      	b.n	801ee26 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x72>
 801ee08:	3238      	adds	r2, #56	@ 0x38
 801ee0a:	4b0e      	ldr	r3, [pc, #56]	@ (801ee44 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>)
 801ee0c:	6043      	str	r3, [r0, #4]
 801ee0e:	6002      	str	r2, [r0, #0]
 801ee10:	4b0d      	ldr	r3, [pc, #52]	@ (801ee48 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>)
 801ee12:	e004      	b.n	801ee1e <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801ee14:	4b0d      	ldr	r3, [pc, #52]	@ (801ee4c <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x98>)
 801ee16:	6043      	str	r3, [r0, #4]
 801ee18:	3256      	adds	r2, #86	@ 0x56
 801ee1a:	4b0d      	ldr	r3, [pc, #52]	@ (801ee50 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9c>)
 801ee1c:	6002      	str	r2, [r0, #0]
 801ee1e:	6083      	str	r3, [r0, #8]
 801ee20:	e001      	b.n	801ee26 <ODriveControllerTypeInfo<Controller>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x72>
 801ee22:	68d3      	ldr	r3, [r2, #12]
 801ee24:	6003      	str	r3, [r0, #0]
 801ee26:	b002      	add	sp, #8
 801ee28:	4770      	bx	lr
 801ee2a:	bf00      	nop
 801ee2c:	080128c5 	.word	0x080128c5
 801ee30:	080128c9 	.word	0x080128c9
 801ee34:	080131e1 	.word	0x080131e1
 801ee38:	08014165 	.word	0x08014165
 801ee3c:	08012835 	.word	0x08012835
 801ee40:	08012859 	.word	0x08012859
 801ee44:	0801283d 	.word	0x0801283d
 801ee48:	08012845 	.word	0x08012845
 801ee4c:	0801285d 	.word	0x0801285d
 801ee50:	08012861 	.word	0x08012861

0801ee54 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ee54:	b082      	sub	sp, #8
 801ee56:	e88d 000c 	stmia.w	sp, {r2, r3}
 801ee5a:	9b04      	ldr	r3, [sp, #16]
 801ee5c:	2b15      	cmp	r3, #21
 801ee5e:	d854      	bhi.n	801ef0a <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb6>
 801ee60:	e8df f003 	tbb	[pc, r3]
 801ee64:	1412100b 	.word	0x1412100b
 801ee68:	22201b16 	.word	0x22201b16
 801ee6c:	32302e28 	.word	0x32302e28
 801ee70:	3a383634 	.word	0x3a383634
 801ee74:	4543413f 	.word	0x4543413f
 801ee78:	4d4b      	.short	0x4d4b
 801ee7a:	4b25      	ldr	r3, [pc, #148]	@ (801ef10 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xbc>)
 801ee7c:	6043      	str	r3, [r0, #4]
 801ee7e:	6002      	str	r2, [r0, #0]
 801ee80:	4b24      	ldr	r3, [pc, #144]	@ (801ef14 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc0>)
 801ee82:	e041      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801ee84:	3204      	adds	r2, #4
 801ee86:	e010      	b.n	801eeaa <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x56>
 801ee88:	3208      	adds	r2, #8
 801ee8a:	e039      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ee8c:	320c      	adds	r2, #12
 801ee8e:	e037      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801ee90:	4b21      	ldr	r3, [pc, #132]	@ (801ef18 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>)
 801ee92:	6043      	str	r3, [r0, #4]
 801ee94:	6002      	str	r2, [r0, #0]
 801ee96:	4b21      	ldr	r3, [pc, #132]	@ (801ef1c <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc8>)
 801ee98:	e036      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801ee9a:	4b21      	ldr	r3, [pc, #132]	@ (801ef20 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xcc>)
 801ee9c:	6043      	str	r3, [r0, #4]
 801ee9e:	6002      	str	r2, [r0, #0]
 801eea0:	4b20      	ldr	r3, [pc, #128]	@ (801ef24 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd0>)
 801eea2:	e031      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801eea4:	3218      	adds	r2, #24
 801eea6:	e02b      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eea8:	321c      	adds	r2, #28
 801eeaa:	4b1f      	ldr	r3, [pc, #124]	@ (801ef28 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd4>)
 801eeac:	6043      	str	r3, [r0, #4]
 801eeae:	6002      	str	r2, [r0, #0]
 801eeb0:	4b1e      	ldr	r3, [pc, #120]	@ (801ef2c <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd8>)
 801eeb2:	e029      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801eeb4:	4b1e      	ldr	r3, [pc, #120]	@ (801ef30 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xdc>)
 801eeb6:	6043      	str	r3, [r0, #4]
 801eeb8:	3220      	adds	r2, #32
 801eeba:	4b1e      	ldr	r3, [pc, #120]	@ (801ef34 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe0>)
 801eebc:	6002      	str	r2, [r0, #0]
 801eebe:	e023      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801eec0:	3224      	adds	r2, #36	@ 0x24
 801eec2:	e01d      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eec4:	3228      	adds	r2, #40	@ 0x28
 801eec6:	e01b      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eec8:	322c      	adds	r2, #44	@ 0x2c
 801eeca:	e019      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eecc:	3238      	adds	r2, #56	@ 0x38
 801eece:	e017      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eed0:	323c      	adds	r2, #60	@ 0x3c
 801eed2:	e015      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eed4:	3230      	adds	r2, #48	@ 0x30
 801eed6:	e013      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eed8:	4b17      	ldr	r3, [pc, #92]	@ (801ef38 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe4>)
 801eeda:	6043      	str	r3, [r0, #4]
 801eedc:	6002      	str	r2, [r0, #0]
 801eede:	4b17      	ldr	r3, [pc, #92]	@ (801ef3c <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xe8>)
 801eee0:	e012      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801eee2:	3240      	adds	r2, #64	@ 0x40
 801eee4:	e00c      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eee6:	3244      	adds	r2, #68	@ 0x44
 801eee8:	e00a      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eeea:	3248      	adds	r2, #72	@ 0x48
 801eeec:	e008      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eeee:	4b14      	ldr	r3, [pc, #80]	@ (801ef40 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xec>)
 801eef0:	6043      	str	r3, [r0, #4]
 801eef2:	324c      	adds	r2, #76	@ 0x4c
 801eef4:	4b13      	ldr	r3, [pc, #76]	@ (801ef44 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf0>)
 801eef6:	6002      	str	r2, [r0, #0]
 801eef8:	e006      	b.n	801ef08 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>
 801eefa:	3250      	adds	r2, #80	@ 0x50
 801eefc:	e000      	b.n	801ef00 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801eefe:	3254      	adds	r2, #84	@ 0x54
 801ef00:	4b11      	ldr	r3, [pc, #68]	@ (801ef48 <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf4>)
 801ef02:	6043      	str	r3, [r0, #4]
 801ef04:	4b11      	ldr	r3, [pc, #68]	@ (801ef4c <ODriveMotorConfigTypeInfo<Motor::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xf8>)
 801ef06:	6002      	str	r2, [r0, #0]
 801ef08:	6083      	str	r3, [r0, #8]
 801ef0a:	b002      	add	sp, #8
 801ef0c:	4770      	bx	lr
 801ef0e:	bf00      	nop
 801ef10:	0801320d 	.word	0x0801320d
 801ef14:	08014101 	.word	0x08014101
 801ef18:	08013205 	.word	0x08013205
 801ef1c:	0801411d 	.word	0x0801411d
 801ef20:	080131f9 	.word	0x080131f9
 801ef24:	08014135 	.word	0x08014135
 801ef28:	080128b5 	.word	0x080128b5
 801ef2c:	080128b9 	.word	0x080128b9
 801ef30:	080128bd 	.word	0x080128bd
 801ef34:	080128c1 	.word	0x080128c1
 801ef38:	080131ed 	.word	0x080131ed
 801ef3c:	0801414d 	.word	0x0801414d
 801ef40:	0801285d 	.word	0x0801285d
 801ef44:	08012861 	.word	0x08012861
 801ef48:	0801283d 	.word	0x0801283d
 801ef4c:	08012845 	.word	0x08012845

0801ef50 <FibrePropertyTypeInfo<Property<unsigned short const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ef50:	b082      	sub	sp, #8
 801ef52:	b510      	push	{r4, lr}
 801ef54:	a902      	add	r1, sp, #8
 801ef56:	e881 000c 	stmia.w	r1, {r2, r3}
 801ef5a:	4604      	mov	r4, r0
 801ef5c:	2210      	movs	r2, #16
 801ef5e:	2100      	movs	r1, #0
 801ef60:	f005 fba1 	bl	80246a6 <memset>
 801ef64:	4620      	mov	r0, r4
 801ef66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ef6a:	b002      	add	sp, #8
 801ef6c:	4770      	bx	lr
 801ef6e:	bf00      	nop

0801ef70 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned short const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ef70:	f1a1 0104 	sub.w	r1, r1, #4
 801ef74:	e7ec      	b.n	801ef50 <FibrePropertyTypeInfo<Property<unsigned short const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801ef76:	bf00      	nop

0801ef78 <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801ef78:	b082      	sub	sp, #8
 801ef7a:	e88d 000c 	stmia.w	sp, {r2, r3}
 801ef7e:	9b04      	ldr	r3, [sp, #16]
 801ef80:	2b0b      	cmp	r3, #11
 801ef82:	d81f      	bhi.n	801efc4 <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801ef84:	e8df f003 	tbb	[pc, r3]
 801ef88:	0a08061b 	.word	0x0a08061b
 801ef8c:	12100e0c 	.word	0x12100e0c
 801ef90:	1a181614 	.word	0x1a181614
 801ef94:	3202      	adds	r2, #2
 801ef96:	e012      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801ef98:	3204      	adds	r2, #4
 801ef9a:	e010      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801ef9c:	3206      	adds	r2, #6
 801ef9e:	e00e      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efa0:	3208      	adds	r2, #8
 801efa2:	e00c      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efa4:	320a      	adds	r2, #10
 801efa6:	e00a      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efa8:	320c      	adds	r2, #12
 801efaa:	e008      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efac:	320e      	adds	r2, #14
 801efae:	e006      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efb0:	3210      	adds	r2, #16
 801efb2:	e004      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efb4:	3212      	adds	r2, #18
 801efb6:	e002      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efb8:	3214      	adds	r2, #20
 801efba:	e000      	b.n	801efbe <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801efbc:	3216      	adds	r2, #22
 801efbe:	4b02      	ldr	r3, [pc, #8]	@ (801efc8 <ODriveMotorTimingLogTypeInfo<Motor::{unnamed type#1}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x50>)
 801efc0:	6002      	str	r2, [r0, #0]
 801efc2:	6043      	str	r3, [r0, #4]
 801efc4:	b002      	add	sp, #8
 801efc6:	4770      	bx	lr
 801efc8:	080128b1 	.word	0x080128b1

0801efcc <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801efcc:	b082      	sub	sp, #8
 801efce:	b510      	push	{r4, lr}
 801efd0:	a902      	add	r1, sp, #8
 801efd2:	e881 000c 	stmia.w	r1, {r2, r3}
 801efd6:	4604      	mov	r4, r0
 801efd8:	2210      	movs	r2, #16
 801efda:	2100      	movs	r1, #0
 801efdc:	f005 fb63 	bl	80246a6 <memset>
 801efe0:	4620      	mov	r0, r4
 801efe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801efe6:	b002      	add	sp, #8
 801efe8:	4770      	bx	lr
 801efea:	bf00      	nop

0801efec <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801efec:	f1a1 0104 	sub.w	r1, r1, #4
 801eff0:	e7ec      	b.n	801efcc <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801eff2:	bf00      	nop

0801eff4 <ODriveMotorGateDriverTypeInfo<Motor::{unnamed type#2}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801eff4:	b082      	sub	sp, #8
 801eff6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801effa:	9b04      	ldr	r3, [sp, #16]
 801effc:	b913      	cbnz	r3, 801f004 <ODriveMotorGateDriverTypeInfo<Motor::{unnamed type#2}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x10>
 801effe:	4b02      	ldr	r3, [pc, #8]	@ (801f008 <ODriveMotorGateDriverTypeInfo<Motor::{unnamed type#2}>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>)
 801f000:	6002      	str	r2, [r0, #0]
 801f002:	6043      	str	r3, [r0, #4]
 801f004:	b002      	add	sp, #8
 801f006:	4770      	bx	lr
 801f008:	080128ad 	.word	0x080128ad

0801f00c <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f00c:	b082      	sub	sp, #8
 801f00e:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f012:	9b04      	ldr	r3, [sp, #16]
 801f014:	2b10      	cmp	r3, #16
 801f016:	d831      	bhi.n	801f07c <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x70>
 801f018:	e8df f003 	tbb	[pc, r3]
 801f01c:	0d0b092b 	.word	0x0d0b092b
 801f020:	1513110f 	.word	0x1513110f
 801f024:	1d1b1917 	.word	0x1d1b1917
 801f028:	2523211f 	.word	0x2523211f
 801f02c:	2a          	.byte	0x2a
 801f02d:	00          	.byte	0x00
 801f02e:	3204      	adds	r2, #4
 801f030:	e01f      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f032:	3208      	adds	r2, #8
 801f034:	e01d      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f036:	320c      	adds	r2, #12
 801f038:	e01b      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f03a:	3210      	adds	r2, #16
 801f03c:	e019      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f03e:	3214      	adds	r2, #20
 801f040:	e017      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f042:	3218      	adds	r2, #24
 801f044:	e015      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f046:	321c      	adds	r2, #28
 801f048:	e013      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f04a:	3220      	adds	r2, #32
 801f04c:	e00c      	b.n	801f068 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>
 801f04e:	3224      	adds	r2, #36	@ 0x24
 801f050:	e00f      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f052:	3228      	adds	r2, #40	@ 0x28
 801f054:	e00d      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f056:	322c      	adds	r2, #44	@ 0x2c
 801f058:	e00b      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f05a:	3230      	adds	r2, #48	@ 0x30
 801f05c:	e004      	b.n	801f068 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>
 801f05e:	3234      	adds	r2, #52	@ 0x34
 801f060:	e002      	b.n	801f068 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>
 801f062:	3238      	adds	r2, #56	@ 0x38
 801f064:	e005      	b.n	801f072 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f066:	323c      	adds	r2, #60	@ 0x3c
 801f068:	4b05      	ldr	r3, [pc, #20]	@ (801f080 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>)
 801f06a:	6002      	str	r2, [r0, #0]
 801f06c:	6043      	str	r3, [r0, #4]
 801f06e:	e005      	b.n	801f07c <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x70>
 801f070:	3240      	adds	r2, #64	@ 0x40
 801f072:	4b04      	ldr	r3, [pc, #16]	@ (801f084 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>)
 801f074:	6043      	str	r3, [r0, #4]
 801f076:	4b04      	ldr	r3, [pc, #16]	@ (801f088 <ODriveMotorCurrentControlTypeInfo<Motor::CurrentControl_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>)
 801f078:	6002      	str	r2, [r0, #0]
 801f07a:	6083      	str	r3, [r0, #8]
 801f07c:	b002      	add	sp, #8
 801f07e:	4770      	bx	lr
 801f080:	08012835 	.word	0x08012835
 801f084:	0801283d 	.word	0x0801283d
 801f088:	08012845 	.word	0x08012845

0801f08c <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::ArmedState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f08c:	b082      	sub	sp, #8
 801f08e:	b510      	push	{r4, lr}
 801f090:	a902      	add	r1, sp, #8
 801f092:	e881 000c 	stmia.w	r1, {r2, r3}
 801f096:	4604      	mov	r4, r0
 801f098:	2210      	movs	r2, #16
 801f09a:	2100      	movs	r1, #0
 801f09c:	f005 fb03 	bl	80246a6 <memset>
 801f0a0:	4620      	mov	r0, r4
 801f0a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f0a6:	b002      	add	sp, #8
 801f0a8:	4770      	bx	lr
 801f0aa:	bf00      	nop

0801f0ac <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::ArmedState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f0ac:	f1a1 0104 	sub.w	r1, r1, #4
 801f0b0:	e7ec      	b.n	801f08c <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::ArmedState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f0b2:	bf00      	nop

0801f0b4 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f0b4:	b082      	sub	sp, #8
 801f0b6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f0ba:	9b04      	ldr	r3, [sp, #16]
 801f0bc:	2b0c      	cmp	r3, #12
 801f0be:	d833      	bhi.n	801f128 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>
 801f0c0:	e8df f003 	tbb	[pc, r3]
 801f0c4:	15110d07 	.word	0x15110d07
 801f0c8:	22201917 	.word	0x22201917
 801f0cc:	2d2b2924 	.word	0x2d2b2924
 801f0d0:	30          	.byte	0x30
 801f0d1:	00          	.byte	0x00
 801f0d2:	4b16      	ldr	r3, [pc, #88]	@ (801f12c <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>)
 801f0d4:	6043      	str	r3, [r0, #4]
 801f0d6:	3264      	adds	r2, #100	@ 0x64
 801f0d8:	4b15      	ldr	r3, [pc, #84]	@ (801f130 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>)
 801f0da:	6002      	str	r2, [r0, #0]
 801f0dc:	e010      	b.n	801f100 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4c>
 801f0de:	3266      	adds	r2, #102	@ 0x66
 801f0e0:	4b14      	ldr	r3, [pc, #80]	@ (801f134 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x80>)
 801f0e2:	6002      	str	r2, [r0, #0]
 801f0e4:	e015      	b.n	801f112 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5e>
 801f0e6:	3267      	adds	r2, #103	@ 0x67
 801f0e8:	4b13      	ldr	r3, [pc, #76]	@ (801f138 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>)
 801f0ea:	6002      	str	r2, [r0, #0]
 801f0ec:	e011      	b.n	801f112 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5e>
 801f0ee:	3268      	adds	r2, #104	@ 0x68
 801f0f0:	e00d      	b.n	801f10e <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5a>
 801f0f2:	326c      	adds	r2, #108	@ 0x6c
 801f0f4:	e00b      	b.n	801f10e <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5a>
 801f0f6:	3270      	adds	r2, #112	@ 0x70
 801f0f8:	4b10      	ldr	r3, [pc, #64]	@ (801f13c <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>)
 801f0fa:	6043      	str	r3, [r0, #4]
 801f0fc:	4b10      	ldr	r3, [pc, #64]	@ (801f140 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>)
 801f0fe:	6002      	str	r2, [r0, #0]
 801f100:	6083      	str	r3, [r0, #8]
 801f102:	e011      	b.n	801f128 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>
 801f104:	3274      	adds	r2, #116	@ 0x74
 801f106:	e7f7      	b.n	801f0f8 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x44>
 801f108:	3278      	adds	r2, #120	@ 0x78
 801f10a:	e7f5      	b.n	801f0f8 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x44>
 801f10c:	32e8      	adds	r2, #232	@ 0xe8
 801f10e:	4b0d      	ldr	r3, [pc, #52]	@ (801f144 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>)
 801f110:	6002      	str	r2, [r0, #0]
 801f112:	6043      	str	r3, [r0, #4]
 801f114:	e008      	b.n	801f128 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>
 801f116:	327c      	adds	r2, #124	@ 0x7c
 801f118:	e002      	b.n	801f120 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6c>
 801f11a:	32c0      	adds	r2, #192	@ 0xc0
 801f11c:	e000      	b.n	801f120 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6c>
 801f11e:	324c      	adds	r2, #76	@ 0x4c
 801f120:	6002      	str	r2, [r0, #0]
 801f122:	e001      	b.n	801f128 <ODriveMotorTypeInfo<Motor>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x74>
 801f124:	6a13      	ldr	r3, [r2, #32]
 801f126:	6003      	str	r3, [r0, #0]
 801f128:	b002      	add	sp, #8
 801f12a:	4770      	bx	lr
 801f12c:	080128a1 	.word	0x080128a1
 801f130:	080128a5 	.word	0x080128a5
 801f134:	080128a9 	.word	0x080128a9
 801f138:	08012859 	.word	0x08012859
 801f13c:	0801283d 	.word	0x0801283d
 801f140:	08012845 	.word	0x08012845
 801f144:	08012835 	.word	0x08012835

0801f148 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f148:	b082      	sub	sp, #8
 801f14a:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f14e:	9b04      	ldr	r3, [sp, #16]
 801f150:	2b07      	cmp	r3, #7
 801f152:	d81e      	bhi.n	801f192 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4a>
 801f154:	e8df f003 	tbb	[pc, r3]
 801f158:	0b091204 	.word	0x0b091204
 801f15c:	17110f0d 	.word	0x17110f0d
 801f160:	4b0d      	ldr	r3, [pc, #52]	@ (801f198 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x50>)
 801f162:	6043      	str	r3, [r0, #4]
 801f164:	6002      	str	r2, [r0, #0]
 801f166:	4b0d      	ldr	r3, [pc, #52]	@ (801f19c <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>)
 801f168:	e012      	b.n	801f190 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x48>
 801f16a:	3204      	adds	r2, #4
 801f16c:	e006      	b.n	801f17c <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>
 801f16e:	3208      	adds	r2, #8
 801f170:	e004      	b.n	801f17c <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>
 801f172:	320c      	adds	r2, #12
 801f174:	e002      	b.n	801f17c <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>
 801f176:	3214      	adds	r2, #20
 801f178:	e000      	b.n	801f17c <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>
 801f17a:	3218      	adds	r2, #24
 801f17c:	4b08      	ldr	r3, [pc, #32]	@ (801f1a0 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>)
 801f17e:	6043      	str	r3, [r0, #4]
 801f180:	6002      	str	r2, [r0, #0]
 801f182:	4b08      	ldr	r3, [pc, #32]	@ (801f1a4 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>)
 801f184:	e004      	b.n	801f190 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x48>
 801f186:	4b08      	ldr	r3, [pc, #32]	@ (801f1a8 <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>)
 801f188:	6043      	str	r3, [r0, #4]
 801f18a:	321c      	adds	r2, #28
 801f18c:	4b07      	ldr	r3, [pc, #28]	@ (801f1ac <ODriveOffboardThermistorCurrentLimiterConfigTypeInfo<OffboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x64>)
 801f18e:	6002      	str	r2, [r0, #0]
 801f190:	6083      	str	r3, [r0, #8]
 801f192:	b002      	add	sp, #8
 801f194:	4770      	bx	lr
 801f196:	bf00      	nop
 801f198:	08013215 	.word	0x08013215
 801f19c:	080140dd 	.word	0x080140dd
 801f1a0:	0801283d 	.word	0x0801283d
 801f1a4:	08012845 	.word	0x08012845
 801f1a8:	0801285d 	.word	0x0801285d
 801f1ac:	08012861 	.word	0x08012861

0801f1b0 <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f1b0:	b082      	sub	sp, #8
 801f1b2:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f1b6:	9b04      	ldr	r3, [sp, #16]
 801f1b8:	2b01      	cmp	r3, #1
 801f1ba:	d009      	beq.n	801f1d0 <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801f1bc:	2b02      	cmp	r3, #2
 801f1be:	d00c      	beq.n	801f1da <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f1c0:	b96b      	cbnz	r3, 801f1de <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f1c2:	4b08      	ldr	r3, [pc, #32]	@ (801f1e4 <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f1c4:	6043      	str	r3, [r0, #4]
 801f1c6:	3220      	adds	r2, #32
 801f1c8:	4b07      	ldr	r3, [pc, #28]	@ (801f1e8 <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x38>)
 801f1ca:	6002      	str	r2, [r0, #0]
 801f1cc:	6083      	str	r3, [r0, #8]
 801f1ce:	e006      	b.n	801f1de <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f1d0:	4b06      	ldr	r3, [pc, #24]	@ (801f1ec <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>)
 801f1d2:	6043      	str	r3, [r0, #4]
 801f1d4:	3210      	adds	r2, #16
 801f1d6:	6002      	str	r2, [r0, #0]
 801f1d8:	e001      	b.n	801f1de <ODriveOffboardThermistorCurrentLimiterTypeInfo<OffboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f1da:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801f1dc:	6003      	str	r3, [r0, #0]
 801f1de:	b002      	add	sp, #8
 801f1e0:	4770      	bx	lr
 801f1e2:	bf00      	nop
 801f1e4:	08012899 	.word	0x08012899
 801f1e8:	0801289d 	.word	0x0801289d
 801f1ec:	08012835 	.word	0x08012835

0801f1f0 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f1f0:	b082      	sub	sp, #8
 801f1f2:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f1f6:	9b04      	ldr	r3, [sp, #16]
 801f1f8:	2b01      	cmp	r3, #1
 801f1fa:	d003      	beq.n	801f204 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801f1fc:	2b02      	cmp	r3, #2
 801f1fe:	d007      	beq.n	801f210 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801f200:	b963      	cbnz	r3, 801f21c <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f202:	e000      	b.n	801f206 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x16>
 801f204:	3204      	adds	r2, #4
 801f206:	4b06      	ldr	r3, [pc, #24]	@ (801f220 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x30>)
 801f208:	6043      	str	r3, [r0, #4]
 801f20a:	6002      	str	r2, [r0, #0]
 801f20c:	4b05      	ldr	r3, [pc, #20]	@ (801f224 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f20e:	e004      	b.n	801f21a <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f210:	4b05      	ldr	r3, [pc, #20]	@ (801f228 <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x38>)
 801f212:	6043      	str	r3, [r0, #4]
 801f214:	3208      	adds	r2, #8
 801f216:	4b05      	ldr	r3, [pc, #20]	@ (801f22c <ODriveOnboardThermistorCurrentLimiterConfigTypeInfo<OnboardThermistorCurrentLimiter::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>)
 801f218:	6002      	str	r2, [r0, #0]
 801f21a:	6083      	str	r3, [r0, #8]
 801f21c:	b002      	add	sp, #8
 801f21e:	4770      	bx	lr
 801f220:	0801283d 	.word	0x0801283d
 801f224:	08012845 	.word	0x08012845
 801f228:	0801285d 	.word	0x0801285d
 801f22c:	08012861 	.word	0x08012861

0801f230 <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f230:	b082      	sub	sp, #8
 801f232:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f236:	9b04      	ldr	r3, [sp, #16]
 801f238:	2b01      	cmp	r3, #1
 801f23a:	d009      	beq.n	801f250 <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801f23c:	2b02      	cmp	r3, #2
 801f23e:	d00c      	beq.n	801f25a <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f240:	b96b      	cbnz	r3, 801f25e <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f242:	4b08      	ldr	r3, [pc, #32]	@ (801f264 <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f244:	6043      	str	r3, [r0, #4]
 801f246:	3220      	adds	r2, #32
 801f248:	4b07      	ldr	r3, [pc, #28]	@ (801f268 <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x38>)
 801f24a:	6002      	str	r2, [r0, #0]
 801f24c:	6083      	str	r3, [r0, #8]
 801f24e:	e006      	b.n	801f25e <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f250:	4b06      	ldr	r3, [pc, #24]	@ (801f26c <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>)
 801f252:	6043      	str	r3, [r0, #4]
 801f254:	3210      	adds	r2, #16
 801f256:	6002      	str	r2, [r0, #0]
 801f258:	e001      	b.n	801f25e <ODriveOnboardThermistorCurrentLimiterTypeInfo<OnboardThermistorCurrentLimiter>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f25a:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801f25c:	6003      	str	r3, [r0, #0]
 801f25e:	b002      	add	sp, #8
 801f260:	4770      	bx	lr
 801f262:	bf00      	nop
 801f264:	08012899 	.word	0x08012899
 801f268:	0801289d 	.word	0x0801289d
 801f26c:	08012835 	.word	0x08012835

0801f270 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f270:	b082      	sub	sp, #8
 801f272:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f276:	9b04      	ldr	r3, [sp, #16]
 801f278:	2b08      	cmp	r3, #8
 801f27a:	d81e      	bhi.n	801f2ba <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4a>
 801f27c:	e8df f003 	tbb	[pc, r3]
 801f280:	0907050e 	.word	0x0907050e
 801f284:	15130d0b 	.word	0x15130d0b
 801f288:	17          	.byte	0x17
 801f289:	00          	.byte	0x00
 801f28a:	3204      	adds	r2, #4
 801f28c:	e006      	b.n	801f29c <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f28e:	3208      	adds	r2, #8
 801f290:	e004      	b.n	801f29c <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f292:	320c      	adds	r2, #12
 801f294:	e002      	b.n	801f29c <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f296:	3210      	adds	r2, #16
 801f298:	e000      	b.n	801f29c <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f29a:	3214      	adds	r2, #20
 801f29c:	4b08      	ldr	r3, [pc, #32]	@ (801f2c0 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x50>)
 801f29e:	6043      	str	r3, [r0, #4]
 801f2a0:	6002      	str	r2, [r0, #0]
 801f2a2:	4b08      	ldr	r3, [pc, #32]	@ (801f2c4 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x54>)
 801f2a4:	e008      	b.n	801f2b8 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x48>
 801f2a6:	3218      	adds	r2, #24
 801f2a8:	e002      	b.n	801f2b0 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x40>
 801f2aa:	3219      	adds	r2, #25
 801f2ac:	e000      	b.n	801f2b0 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x40>
 801f2ae:	321a      	adds	r2, #26
 801f2b0:	4b05      	ldr	r3, [pc, #20]	@ (801f2c8 <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>)
 801f2b2:	6043      	str	r3, [r0, #4]
 801f2b4:	4b05      	ldr	r3, [pc, #20]	@ (801f2cc <ODriveAxisLockinConfigTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x5c>)
 801f2b6:	6002      	str	r2, [r0, #0]
 801f2b8:	6083      	str	r3, [r0, #8]
 801f2ba:	b002      	add	sp, #8
 801f2bc:	4770      	bx	lr
 801f2be:	bf00      	nop
 801f2c0:	0801283d 	.word	0x0801283d
 801f2c4:	08012845 	.word	0x08012845
 801f2c8:	0801285d 	.word	0x0801285d
 801f2cc:	08012861 	.word	0x08012861

0801f2d0 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f2d0:	b082      	sub	sp, #8
 801f2d2:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f2d6:	9b04      	ldr	r3, [sp, #16]
 801f2d8:	2b04      	cmp	r3, #4
 801f2da:	d810      	bhi.n	801f2fe <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f2dc:	e8df f003 	tbb	[pc, r3]
 801f2e0:	0705030a 	.word	0x0705030a
 801f2e4:	09          	.byte	0x09
 801f2e5:	00          	.byte	0x00
 801f2e6:	3204      	adds	r2, #4
 801f2e8:	e004      	b.n	801f2f4 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801f2ea:	3208      	adds	r2, #8
 801f2ec:	e002      	b.n	801f2f4 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801f2ee:	320c      	adds	r2, #12
 801f2f0:	e000      	b.n	801f2f4 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801f2f2:	3210      	adds	r2, #16
 801f2f4:	4b03      	ldr	r3, [pc, #12]	@ (801f304 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f2f6:	6043      	str	r3, [r0, #4]
 801f2f8:	4b03      	ldr	r3, [pc, #12]	@ (801f308 <ODriveAxisConfigCalibrationLockinTypeInfo<Axis::LockinConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x38>)
 801f2fa:	6002      	str	r2, [r0, #0]
 801f2fc:	6083      	str	r3, [r0, #8]
 801f2fe:	b002      	add	sp, #8
 801f300:	4770      	bx	lr
 801f302:	bf00      	nop
 801f304:	0801283d 	.word	0x0801283d
 801f308:	08012845 	.word	0x08012845

0801f30c <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f30c:	b082      	sub	sp, #8
 801f30e:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f312:	9b04      	ldr	r3, [sp, #16]
 801f314:	2b13      	cmp	r3, #19
 801f316:	d844      	bhi.n	801f3a2 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x96>
 801f318:	e8df f003 	tbb	[pc, r3]
 801f31c:	0e0c0a36 	.word	0x0e0c0a36
 801f320:	16141210 	.word	0x16141210
 801f324:	22201a18 	.word	0x22201a18
 801f328:	302e2c27 	.word	0x302e2c27
 801f32c:	3d3b3533 	.word	0x3d3b3533
 801f330:	3201      	adds	r2, #1
 801f332:	e029      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f334:	3202      	adds	r2, #2
 801f336:	e027      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f338:	3203      	adds	r2, #3
 801f33a:	e025      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f33c:	3204      	adds	r2, #4
 801f33e:	e023      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f340:	3205      	adds	r2, #5
 801f342:	e021      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f344:	3206      	adds	r2, #6
 801f346:	e01f      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f348:	3207      	adds	r2, #7
 801f34a:	e01d      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f34c:	3208      	adds	r2, #8
 801f34e:	e000      	b.n	801f352 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x46>
 801f350:	320c      	adds	r2, #12
 801f352:	4b15      	ldr	r3, [pc, #84]	@ (801f3a8 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9c>)
 801f354:	6043      	str	r3, [r0, #4]
 801f356:	6002      	str	r2, [r0, #0]
 801f358:	4b14      	ldr	r3, [pc, #80]	@ (801f3ac <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa0>)
 801f35a:	e021      	b.n	801f3a0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801f35c:	3210      	adds	r2, #16
 801f35e:	e013      	b.n	801f388 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7c>
 801f360:	4b13      	ldr	r3, [pc, #76]	@ (801f3b0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa4>)
 801f362:	6043      	str	r3, [r0, #4]
 801f364:	6002      	str	r2, [r0, #0]
 801f366:	4b13      	ldr	r3, [pc, #76]	@ (801f3b4 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa8>)
 801f368:	e01a      	b.n	801f3a0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801f36a:	4b13      	ldr	r3, [pc, #76]	@ (801f3b8 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>)
 801f36c:	6043      	str	r3, [r0, #4]
 801f36e:	6002      	str	r2, [r0, #0]
 801f370:	4b12      	ldr	r3, [pc, #72]	@ (801f3bc <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb0>)
 801f372:	e015      	b.n	801f3a0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801f374:	3218      	adds	r2, #24
 801f376:	e002      	b.n	801f37e <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x72>
 801f378:	3234      	adds	r2, #52	@ 0x34
 801f37a:	e000      	b.n	801f37e <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x72>
 801f37c:	3250      	adds	r2, #80	@ 0x50
 801f37e:	6002      	str	r2, [r0, #0]
 801f380:	e00f      	b.n	801f3a2 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x96>
 801f382:	326c      	adds	r2, #108	@ 0x6c
 801f384:	e008      	b.n	801f398 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>
 801f386:	3270      	adds	r2, #112	@ 0x70
 801f388:	4b0d      	ldr	r3, [pc, #52]	@ (801f3c0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>)
 801f38a:	6043      	str	r3, [r0, #4]
 801f38c:	6002      	str	r2, [r0, #0]
 801f38e:	4b0d      	ldr	r3, [pc, #52]	@ (801f3c4 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb8>)
 801f390:	e006      	b.n	801f3a0 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>
 801f392:	3274      	adds	r2, #116	@ 0x74
 801f394:	e000      	b.n	801f398 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>
 801f396:	3278      	adds	r2, #120	@ 0x78
 801f398:	4b0b      	ldr	r3, [pc, #44]	@ (801f3c8 <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xbc>)
 801f39a:	6043      	str	r3, [r0, #4]
 801f39c:	4b0b      	ldr	r3, [pc, #44]	@ (801f3cc <ODriveAxisConfigTypeInfo<Axis::Config_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc0>)
 801f39e:	6002      	str	r2, [r0, #0]
 801f3a0:	6083      	str	r3, [r0, #8]
 801f3a2:	b002      	add	sp, #8
 801f3a4:	4770      	bx	lr
 801f3a6:	bf00      	nop
 801f3a8:	0801283d 	.word	0x0801283d
 801f3ac:	08012845 	.word	0x08012845
 801f3b0:	08013225 	.word	0x08013225
 801f3b4:	080140ad 	.word	0x080140ad
 801f3b8:	0801321d 	.word	0x0801321d
 801f3bc:	080140c5 	.word	0x080140c5
 801f3c0:	0801285d 	.word	0x0801285d
 801f3c4:	08012861 	.word	0x08012861
 801f3c8:	08012869 	.word	0x08012869
 801f3cc:	0801286d 	.word	0x0801286d

0801f3d0 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::LockinState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f3d0:	b082      	sub	sp, #8
 801f3d2:	b510      	push	{r4, lr}
 801f3d4:	a902      	add	r1, sp, #8
 801f3d6:	e881 000c 	stmia.w	r1, {r2, r3}
 801f3da:	4604      	mov	r4, r0
 801f3dc:	2210      	movs	r2, #16
 801f3de:	2100      	movs	r1, #0
 801f3e0:	f005 f961 	bl	80246a6 <memset>
 801f3e4:	4620      	mov	r0, r4
 801f3e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f3ea:	b002      	add	sp, #8
 801f3ec:	4770      	bx	lr
 801f3ee:	bf00      	nop

0801f3f0 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::LockinState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f3f0:	f1a1 0104 	sub.w	r1, r1, #4
 801f3f4:	e7ec      	b.n	801f3d0 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::LockinState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f3f6:	bf00      	nop

0801f3f8 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f3f8:	b082      	sub	sp, #8
 801f3fa:	b510      	push	{r4, lr}
 801f3fc:	a902      	add	r1, sp, #8
 801f3fe:	e881 000c 	stmia.w	r1, {r2, r3}
 801f402:	4604      	mov	r4, r0
 801f404:	2210      	movs	r2, #16
 801f406:	2100      	movs	r1, #0
 801f408:	f005 f94d 	bl	80246a6 <memset>
 801f40c:	4620      	mov	r0, r4
 801f40e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f412:	b002      	add	sp, #8
 801f414:	4770      	bx	lr
 801f416:	bf00      	nop

0801f418 <non-virtual thunk to FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f418:	f1a1 0104 	sub.w	r1, r1, #4
 801f41c:	e7ec      	b.n	801f3f8 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f41e:	bf00      	nop

0801f420 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f420:	b082      	sub	sp, #8
 801f422:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f426:	9b04      	ldr	r3, [sp, #16]
 801f428:	2b10      	cmp	r3, #16
 801f42a:	d842      	bhi.n	801f4b2 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x92>
 801f42c:	e8df f003 	tbb	[pc, r3]
 801f430:	17130f09 	.word	0x17130f09
 801f434:	2d26211d 	.word	0x2d26211d
 801f438:	3533312f 	.word	0x3533312f
 801f43c:	3d3b3937 	.word	0x3d3b3937
 801f440:	3f          	.byte	0x3f
 801f441:	00          	.byte	0x00
 801f442:	4b1d      	ldr	r3, [pc, #116]	@ (801f4b8 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x98>)
 801f444:	6043      	str	r3, [r0, #4]
 801f446:	3250      	adds	r2, #80	@ 0x50
 801f448:	4b1c      	ldr	r3, [pc, #112]	@ (801f4bc <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9c>)
 801f44a:	6002      	str	r2, [r0, #0]
 801f44c:	e01b      	b.n	801f486 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f44e:	3254      	adds	r2, #84	@ 0x54
 801f450:	4b1b      	ldr	r3, [pc, #108]	@ (801f4c0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa0>)
 801f452:	6002      	str	r2, [r0, #0]
 801f454:	e010      	b.n	801f478 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>
 801f456:	6f53      	ldr	r3, [r2, #116]	@ 0x74
 801f458:	6003      	str	r3, [r0, #0]
 801f45a:	4b1a      	ldr	r3, [pc, #104]	@ (801f4c4 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa4>)
 801f45c:	e00c      	b.n	801f478 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>
 801f45e:	4b1a      	ldr	r3, [pc, #104]	@ (801f4c8 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa8>)
 801f460:	6043      	str	r3, [r0, #4]
 801f462:	3266      	adds	r2, #102	@ 0x66
 801f464:	4b19      	ldr	r3, [pc, #100]	@ (801f4cc <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>)
 801f466:	6002      	str	r2, [r0, #0]
 801f468:	e00d      	b.n	801f486 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x66>
 801f46a:	3278      	adds	r2, #120	@ 0x78
 801f46c:	4b18      	ldr	r3, [pc, #96]	@ (801f4d0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb0>)
 801f46e:	6002      	str	r2, [r0, #0]
 801f470:	e002      	b.n	801f478 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x58>
 801f472:	327c      	adds	r2, #124	@ 0x7c
 801f474:	4b17      	ldr	r3, [pc, #92]	@ (801f4d4 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>)
 801f476:	6002      	str	r2, [r0, #0]
 801f478:	6043      	str	r3, [r0, #4]
 801f47a:	e01a      	b.n	801f4b2 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x92>
 801f47c:	4b16      	ldr	r3, [pc, #88]	@ (801f4d8 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb8>)
 801f47e:	6043      	str	r3, [r0, #4]
 801f480:	327d      	adds	r2, #125	@ 0x7d
 801f482:	4b16      	ldr	r3, [pc, #88]	@ (801f4dc <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xbc>)
 801f484:	6002      	str	r2, [r0, #0]
 801f486:	6083      	str	r3, [r0, #8]
 801f488:	e013      	b.n	801f4b2 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x92>
 801f48a:	68d3      	ldr	r3, [r2, #12]
 801f48c:	e010      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f48e:	69d3      	ldr	r3, [r2, #28]
 801f490:	e00e      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f492:	6a13      	ldr	r3, [r2, #32]
 801f494:	e00c      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f496:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 801f498:	e00a      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f49a:	6993      	ldr	r3, [r2, #24]
 801f49c:	e008      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f49e:	6913      	ldr	r3, [r2, #16]
 801f4a0:	e006      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f4a2:	6953      	ldr	r3, [r2, #20]
 801f4a4:	e004      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f4a6:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801f4a8:	e002      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f4aa:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
 801f4ac:	e000      	b.n	801f4b0 <ODriveAxisTypeInfo<Axis>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>
 801f4ae:	6b13      	ldr	r3, [r2, #48]	@ 0x30
 801f4b0:	6003      	str	r3, [r0, #0]
 801f4b2:	b002      	add	sp, #8
 801f4b4:	4770      	bx	lr
 801f4b6:	bf00      	nop
 801f4b8:	08012881 	.word	0x08012881
 801f4bc:	08012885 	.word	0x08012885
 801f4c0:	08012859 	.word	0x08012859
 801f4c4:	08012889 	.word	0x08012889
 801f4c8:	0801288d 	.word	0x0801288d
 801f4cc:	08012891 	.word	0x08012891
 801f4d0:	08012865 	.word	0x08012865
 801f4d4:	08012895 	.word	0x08012895
 801f4d8:	0801285d 	.word	0x0801285d
 801f4dc:	08012861 	.word	0x08012861

0801f4e0 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f4e0:	b082      	sub	sp, #8
 801f4e2:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f4e6:	9b04      	ldr	r3, [sp, #16]
 801f4e8:	2b01      	cmp	r3, #1
 801f4ea:	d007      	beq.n	801f4fc <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1c>
 801f4ec:	2b02      	cmp	r3, #2
 801f4ee:	d007      	beq.n	801f500 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801f4f0:	b963      	cbnz	r3, 801f50c <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2c>
 801f4f2:	4b07      	ldr	r3, [pc, #28]	@ (801f510 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x30>)
 801f4f4:	6043      	str	r3, [r0, #4]
 801f4f6:	6002      	str	r2, [r0, #0]
 801f4f8:	4b06      	ldr	r3, [pc, #24]	@ (801f514 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f4fa:	e006      	b.n	801f50a <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f4fc:	3204      	adds	r2, #4
 801f4fe:	e000      	b.n	801f502 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x22>
 801f500:	3208      	adds	r2, #8
 801f502:	4b05      	ldr	r3, [pc, #20]	@ (801f518 <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x38>)
 801f504:	6043      	str	r3, [r0, #4]
 801f506:	4b05      	ldr	r3, [pc, #20]	@ (801f51c <ODriveEndpointTypeInfo<PWMMapping_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x3c>)
 801f508:	6002      	str	r2, [r0, #0]
 801f50a:	6083      	str	r3, [r0, #8]
 801f50c:	b002      	add	sp, #8
 801f50e:	4770      	bx	lr
 801f510:	08012871 	.word	0x08012871
 801f514:	08012879 	.word	0x08012879
 801f518:	0801283d 	.word	0x0801283d
 801f51c:	08012845 	.word	0x08012845

0801f520 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f520:	b082      	sub	sp, #8
 801f522:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f526:	9b04      	ldr	r3, [sp, #16]
 801f528:	2b12      	cmp	r3, #18
 801f52a:	d83c      	bhi.n	801f5a6 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x86>
 801f52c:	e8df f003 	tbb	[pc, r3]
 801f530:	12100a1d 	.word	0x12100a1d
 801f534:	1a181614 	.word	0x1a181614
 801f538:	2624221c 	.word	0x2624221c
 801f53c:	33312f28 	.word	0x33312f28
 801f540:	3735      	.short	0x3735
 801f542:	39          	.byte	0x39
 801f543:	00          	.byte	0x00
 801f544:	4b19      	ldr	r3, [pc, #100]	@ (801f5ac <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x8c>)
 801f546:	6043      	str	r3, [r0, #4]
 801f548:	32e8      	adds	r2, #232	@ 0xe8
 801f54a:	4b19      	ldr	r3, [pc, #100]	@ (801f5b0 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x90>)
 801f54c:	6002      	str	r2, [r0, #0]
 801f54e:	e01c      	b.n	801f58a <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f550:	3201      	adds	r2, #1
 801f552:	e00a      	b.n	801f56a <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4a>
 801f554:	3202      	adds	r2, #2
 801f556:	e008      	b.n	801f56a <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x4a>
 801f558:	3204      	adds	r2, #4
 801f55a:	e012      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f55c:	3208      	adds	r2, #8
 801f55e:	e010      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f560:	320c      	adds	r2, #12
 801f562:	e00e      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f564:	3210      	adds	r2, #16
 801f566:	e00c      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f568:	3214      	adds	r2, #20
 801f56a:	4b12      	ldr	r3, [pc, #72]	@ (801f5b4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x94>)
 801f56c:	6043      	str	r3, [r0, #4]
 801f56e:	6002      	str	r2, [r0, #0]
 801f570:	4b11      	ldr	r3, [pc, #68]	@ (801f5b8 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x98>)
 801f572:	e00a      	b.n	801f58a <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f574:	3218      	adds	r2, #24
 801f576:	e004      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f578:	321c      	adds	r2, #28
 801f57a:	e002      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f57c:	3220      	adds	r2, #32
 801f57e:	e000      	b.n	801f582 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x62>
 801f580:	3224      	adds	r2, #36	@ 0x24
 801f582:	4b0e      	ldr	r3, [pc, #56]	@ (801f5bc <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9c>)
 801f584:	6043      	str	r3, [r0, #4]
 801f586:	4b0e      	ldr	r3, [pc, #56]	@ (801f5c0 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xa0>)
 801f588:	6002      	str	r2, [r0, #0]
 801f58a:	6083      	str	r3, [r0, #8]
 801f58c:	e00b      	b.n	801f5a6 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x86>
 801f58e:	3228      	adds	r2, #40	@ 0x28
 801f590:	e008      	b.n	801f5a4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801f592:	3234      	adds	r2, #52	@ 0x34
 801f594:	e006      	b.n	801f5a4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801f596:	3240      	adds	r2, #64	@ 0x40
 801f598:	e004      	b.n	801f5a4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801f59a:	324c      	adds	r2, #76	@ 0x4c
 801f59c:	e002      	b.n	801f5a4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801f59e:	32a0      	adds	r2, #160	@ 0xa0
 801f5a0:	e000      	b.n	801f5a4 <ODriveConfigTypeInfo<BoardConfig_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x84>
 801f5a2:	32ac      	adds	r2, #172	@ 0xac
 801f5a4:	6002      	str	r2, [r0, #0]
 801f5a6:	b002      	add	sp, #8
 801f5a8:	4770      	bx	lr
 801f5aa:	bf00      	nop
 801f5ac:	08012869 	.word	0x08012869
 801f5b0:	0801286d 	.word	0x0801286d
 801f5b4:	0801285d 	.word	0x0801285d
 801f5b8:	08012861 	.word	0x08012861
 801f5bc:	0801283d 	.word	0x0801283d
 801f5c0:	08012845 	.word	0x08012845

0801f5c4 <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f5c4:	b082      	sub	sp, #8
 801f5c6:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f5ca:	9b04      	ldr	r3, [sp, #16]
 801f5cc:	2b03      	cmp	r3, #3
 801f5ce:	d80e      	bhi.n	801f5ee <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f5d0:	e8df f003 	tbb	[pc, r3]
 801f5d4:	09070502 	.word	0x09070502
 801f5d8:	4b06      	ldr	r3, [pc, #24]	@ (801f5f4 <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x30>)
 801f5da:	6002      	str	r2, [r0, #0]
 801f5dc:	e006      	b.n	801f5ec <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x28>
 801f5de:	3204      	adds	r2, #4
 801f5e0:	e002      	b.n	801f5e8 <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801f5e2:	3208      	adds	r2, #8
 801f5e4:	e000      	b.n	801f5e8 <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>
 801f5e6:	320c      	adds	r2, #12
 801f5e8:	4b03      	ldr	r3, [pc, #12]	@ (801f5f8 <ODriveSystemStatsI2CTypeInfo<I2CStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x34>)
 801f5ea:	6002      	str	r2, [r0, #0]
 801f5ec:	6043      	str	r3, [r0, #4]
 801f5ee:	b002      	add	sp, #8
 801f5f0:	4770      	bx	lr
 801f5f2:	bf00      	nop
 801f5f4:	08012855 	.word	0x08012855
 801f5f8:	08012865 	.word	0x08012865

0801f5fc <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f5fc:	b082      	sub	sp, #8
 801f5fe:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f602:	9b04      	ldr	r3, [sp, #16]
 801f604:	2b01      	cmp	r3, #1
 801f606:	d003      	beq.n	801f610 <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x14>
 801f608:	2b02      	cmp	r3, #2
 801f60a:	d003      	beq.n	801f614 <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x18>
 801f60c:	b933      	cbnz	r3, 801f61c <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x20>
 801f60e:	e002      	b.n	801f616 <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801f610:	3204      	adds	r2, #4
 801f612:	e000      	b.n	801f616 <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x1a>
 801f614:	3208      	adds	r2, #8
 801f616:	4b02      	ldr	r3, [pc, #8]	@ (801f620 <ODriveSystemStatsUsbTypeInfo<USBStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x24>)
 801f618:	6002      	str	r2, [r0, #0]
 801f61a:	6043      	str	r3, [r0, #4]
 801f61c:	b002      	add	sp, #8
 801f61e:	4770      	bx	lr
 801f620:	08012865 	.word	0x08012865

0801f624 <FibrePropertyTypeInfo<Property<unsigned long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f624:	b082      	sub	sp, #8
 801f626:	b510      	push	{r4, lr}
 801f628:	a902      	add	r1, sp, #8
 801f62a:	e881 000c 	stmia.w	r1, {r2, r3}
 801f62e:	4604      	mov	r4, r0
 801f630:	2210      	movs	r2, #16
 801f632:	2100      	movs	r1, #0
 801f634:	f005 f837 	bl	80246a6 <memset>
 801f638:	4620      	mov	r0, r4
 801f63a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f63e:	b002      	add	sp, #8
 801f640:	4770      	bx	lr
 801f642:	bf00      	nop

0801f644 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f644:	f1a1 0104 	sub.w	r1, r1, #4
 801f648:	e7ec      	b.n	801f624 <FibrePropertyTypeInfo<Property<unsigned long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f64a:	bf00      	nop

0801f64c <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f64c:	b082      	sub	sp, #8
 801f64e:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f652:	9b04      	ldr	r3, [sp, #16]
 801f654:	2b13      	cmp	r3, #19
 801f656:	d836      	bhi.n	801f6c6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7a>
 801f658:	e8df f003 	tbb	[pc, r3]
 801f65c:	100e0c0a 	.word	0x100e0c0a
 801f660:	18161412 	.word	0x18161412
 801f664:	201e1c1a 	.word	0x201e1c1a
 801f668:	28262422 	.word	0x28262422
 801f66c:	33312c2a 	.word	0x33312c2a
 801f670:	3204      	adds	r2, #4
 801f672:	e020      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f674:	3208      	adds	r2, #8
 801f676:	e01e      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f678:	320c      	adds	r2, #12
 801f67a:	e01c      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f67c:	3210      	adds	r2, #16
 801f67e:	e01a      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f680:	3214      	adds	r2, #20
 801f682:	e018      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f684:	3218      	adds	r2, #24
 801f686:	e016      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f688:	321c      	adds	r2, #28
 801f68a:	e014      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f68c:	3228      	adds	r2, #40	@ 0x28
 801f68e:	e012      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f690:	3220      	adds	r2, #32
 801f692:	e010      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f694:	3224      	adds	r2, #36	@ 0x24
 801f696:	e00e      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f698:	322c      	adds	r2, #44	@ 0x2c
 801f69a:	e00c      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f69c:	3230      	adds	r2, #48	@ 0x30
 801f69e:	e00a      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6a0:	3234      	adds	r2, #52	@ 0x34
 801f6a2:	e008      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6a4:	3238      	adds	r2, #56	@ 0x38
 801f6a6:	e006      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6a8:	323c      	adds	r2, #60	@ 0x3c
 801f6aa:	e004      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6ac:	3240      	adds	r2, #64	@ 0x40
 801f6ae:	e002      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6b0:	3244      	adds	r2, #68	@ 0x44
 801f6b2:	e000      	b.n	801f6b6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x6a>
 801f6b4:	3248      	adds	r2, #72	@ 0x48
 801f6b6:	4b05      	ldr	r3, [pc, #20]	@ (801f6cc <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x80>)
 801f6b8:	6002      	str	r2, [r0, #0]
 801f6ba:	6043      	str	r3, [r0, #4]
 801f6bc:	e003      	b.n	801f6c6 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7a>
 801f6be:	6cd3      	ldr	r3, [r2, #76]	@ 0x4c
 801f6c0:	e000      	b.n	801f6c4 <ODriveSystemStatsTypeInfo<SystemStats_t>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x78>
 801f6c2:	6d13      	ldr	r3, [r2, #80]	@ 0x50
 801f6c4:	6003      	str	r3, [r0, #0]
 801f6c6:	b002      	add	sp, #8
 801f6c8:	4770      	bx	lr
 801f6ca:	bf00      	nop
 801f6cc:	08012865 	.word	0x08012865

0801f6d0 <FibrePropertyTypeInfo<Property<bool const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f6d0:	b082      	sub	sp, #8
 801f6d2:	b510      	push	{r4, lr}
 801f6d4:	a902      	add	r1, sp, #8
 801f6d6:	e881 000c 	stmia.w	r1, {r2, r3}
 801f6da:	4604      	mov	r4, r0
 801f6dc:	2210      	movs	r2, #16
 801f6de:	2100      	movs	r1, #0
 801f6e0:	f004 ffe1 	bl	80246a6 <memset>
 801f6e4:	4620      	mov	r0, r4
 801f6e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f6ea:	b002      	add	sp, #8
 801f6ec:	4770      	bx	lr
 801f6ee:	bf00      	nop

0801f6f0 <non-virtual thunk to FibrePropertyTypeInfo<Property<bool const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f6f0:	f1a1 0104 	sub.w	r1, r1, #4
 801f6f4:	e7ec      	b.n	801f6d0 <FibrePropertyTypeInfo<Property<bool const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f6f6:	bf00      	nop

0801f6f8 <FibrePropertyTypeInfo<Property<unsigned char const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f6f8:	b082      	sub	sp, #8
 801f6fa:	b510      	push	{r4, lr}
 801f6fc:	a902      	add	r1, sp, #8
 801f6fe:	e881 000c 	stmia.w	r1, {r2, r3}
 801f702:	4604      	mov	r4, r0
 801f704:	2210      	movs	r2, #16
 801f706:	2100      	movs	r1, #0
 801f708:	f004 ffcd 	bl	80246a6 <memset>
 801f70c:	4620      	mov	r0, r4
 801f70e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f712:	b002      	add	sp, #8
 801f714:	4770      	bx	lr
 801f716:	bf00      	nop

0801f718 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned char const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f718:	f1a1 0104 	sub.w	r1, r1, #4
 801f71c:	e7ec      	b.n	801f6f8 <FibrePropertyTypeInfo<Property<unsigned char const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f71e:	bf00      	nop

0801f720 <FibrePropertyTypeInfo<Property<unsigned long long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f720:	b082      	sub	sp, #8
 801f722:	b510      	push	{r4, lr}
 801f724:	a902      	add	r1, sp, #8
 801f726:	e881 000c 	stmia.w	r1, {r2, r3}
 801f72a:	4604      	mov	r4, r0
 801f72c:	2210      	movs	r2, #16
 801f72e:	2100      	movs	r1, #0
 801f730:	f004 ffb9 	bl	80246a6 <memset>
 801f734:	4620      	mov	r0, r4
 801f736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f73a:	b002      	add	sp, #8
 801f73c:	4770      	bx	lr
 801f73e:	bf00      	nop

0801f740 <non-virtual thunk to FibrePropertyTypeInfo<Property<unsigned long long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f740:	f1a1 0104 	sub.w	r1, r1, #4
 801f744:	e7ec      	b.n	801f720 <FibrePropertyTypeInfo<Property<unsigned long long const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f746:	bf00      	nop

0801f748 <FibrePropertyTypeInfo<Property<float const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f748:	b082      	sub	sp, #8
 801f74a:	b510      	push	{r4, lr}
 801f74c:	a902      	add	r1, sp, #8
 801f74e:	e881 000c 	stmia.w	r1, {r2, r3}
 801f752:	4604      	mov	r4, r0
 801f754:	2210      	movs	r2, #16
 801f756:	2100      	movs	r1, #0
 801f758:	f004 ffa5 	bl	80246a6 <memset>
 801f75c:	4620      	mov	r0, r4
 801f75e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f762:	b002      	add	sp, #8
 801f764:	4770      	bx	lr
 801f766:	bf00      	nop

0801f768 <non-virtual thunk to FibrePropertyTypeInfo<Property<float const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f768:	f1a1 0104 	sub.w	r1, r1, #4
 801f76c:	e7ec      	b.n	801f748 <FibrePropertyTypeInfo<Property<float const> >::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>
 801f76e:	bf00      	nop

0801f770 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const>:
 801f770:	b082      	sub	sp, #8
 801f772:	e88d 000c 	stmia.w	sp, {r2, r3}
 801f776:	9b04      	ldr	r3, [sp, #16]
 801f778:	2b13      	cmp	r3, #19
 801f77a:	d84f      	bhi.n	801f81c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801f77c:	e8df f003 	tbb	[pc, r3]
 801f780:	17110c0a 	.word	0x17110c0a
 801f784:	211f1d1b 	.word	0x211f1d1b
 801f788:	2b272523 	.word	0x2b272523
 801f78c:	3936342e 	.word	0x3936342e
 801f790:	4743403e 	.word	0x4743403e
 801f794:	69d3      	ldr	r3, [r2, #28]
 801f796:	e000      	b.n	801f79a <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2a>
 801f798:	6a13      	ldr	r3, [r2, #32]
 801f79a:	6003      	str	r3, [r0, #0]
 801f79c:	4b20      	ldr	r3, [pc, #128]	@ (801f820 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb0>)
 801f79e:	6043      	str	r3, [r0, #4]
 801f7a0:	e03c      	b.n	801f81c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801f7a2:	4b20      	ldr	r3, [pc, #128]	@ (801f824 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb4>)
 801f7a4:	6043      	str	r3, [r0, #4]
 801f7a6:	3224      	adds	r2, #36	@ 0x24
 801f7a8:	4b1f      	ldr	r3, [pc, #124]	@ (801f828 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xb8>)
 801f7aa:	6002      	str	r2, [r0, #0]
 801f7ac:	e035      	b.n	801f81a <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xaa>
 801f7ae:	6a93      	ldr	r3, [r2, #40]	@ 0x28
 801f7b0:	6003      	str	r3, [r0, #0]
 801f7b2:	4b1e      	ldr	r3, [pc, #120]	@ (801f82c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xbc>)
 801f7b4:	e7f3      	b.n	801f79e <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f7b6:	3230      	adds	r2, #48	@ 0x30
 801f7b8:	e00a      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7ba:	3231      	adds	r2, #49	@ 0x31
 801f7bc:	e008      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7be:	3232      	adds	r2, #50	@ 0x32
 801f7c0:	e006      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7c2:	3233      	adds	r2, #51	@ 0x33
 801f7c4:	e004      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7c6:	3234      	adds	r2, #52	@ 0x34
 801f7c8:	e002      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7ca:	3235      	adds	r2, #53	@ 0x35
 801f7cc:	e000      	b.n	801f7d0 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x60>
 801f7ce:	3236      	adds	r2, #54	@ 0x36
 801f7d0:	4b17      	ldr	r3, [pc, #92]	@ (801f830 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc0>)
 801f7d2:	6002      	str	r2, [r0, #0]
 801f7d4:	e7e3      	b.n	801f79e <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f7d6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801f7d8:	6003      	str	r3, [r0, #0]
 801f7da:	e00d      	b.n	801f7f8 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x88>
 801f7dc:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 801f7de:	6003      	str	r3, [r0, #0]
 801f7e0:	4b14      	ldr	r3, [pc, #80]	@ (801f834 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc4>)
 801f7e2:	6043      	str	r3, [r0, #4]
 801f7e4:	4b14      	ldr	r3, [pc, #80]	@ (801f838 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xc8>)
 801f7e6:	e018      	b.n	801f81a <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xaa>
 801f7e8:	3240      	adds	r2, #64	@ 0x40
 801f7ea:	e000      	b.n	801f7ee <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x7e>
 801f7ec:	3294      	adds	r2, #148	@ 0x94
 801f7ee:	6002      	str	r2, [r0, #0]
 801f7f0:	e014      	b.n	801f81c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801f7f2:	f502 72c0 	add.w	r2, r2, #384	@ 0x180
 801f7f6:	6002      	str	r2, [r0, #0]
 801f7f8:	4b10      	ldr	r3, [pc, #64]	@ (801f83c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xcc>)
 801f7fa:	e7d0      	b.n	801f79e <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x2e>
 801f7fc:	4b10      	ldr	r3, [pc, #64]	@ (801f840 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd0>)
 801f7fe:	e003      	b.n	801f808 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x98>
 801f800:	4b0f      	ldr	r3, [pc, #60]	@ (801f840 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd0>)
 801f802:	685b      	ldr	r3, [r3, #4]
 801f804:	e001      	b.n	801f80a <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0x9a>
 801f806:	4b0f      	ldr	r3, [pc, #60]	@ (801f844 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd4>)
 801f808:	681b      	ldr	r3, [r3, #0]
 801f80a:	6003      	str	r3, [r0, #0]
 801f80c:	e006      	b.n	801f81c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xac>
 801f80e:	4b0e      	ldr	r3, [pc, #56]	@ (801f848 <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xd8>)
 801f810:	6043      	str	r3, [r0, #4]
 801f812:	f502 72c2 	add.w	r2, r2, #388	@ 0x184
 801f816:	4b0d      	ldr	r3, [pc, #52]	@ (801f84c <ODriveTypeInfo<ODrive>::get_child(std::aligned_storage<16u, 4u>::type, unsigned int) const+0xdc>)
 801f818:	6002      	str	r2, [r0, #0]
 801f81a:	6083      	str	r3, [r0, #8]
 801f81c:	b002      	add	sp, #8
 801f81e:	4770      	bx	lr
 801f820:	08012835 	.word	0x08012835
 801f824:	0801283d 	.word	0x0801283d
 801f828:	08012845 	.word	0x08012845
 801f82c:	0801284d 	.word	0x0801284d
 801f830:	08012855 	.word	0x08012855
 801f834:	0801285d 	.word	0x0801285d
 801f838:	08012861 	.word	0x08012861
 801f83c:	08012859 	.word	0x08012859
 801f840:	200019cc 	.word	0x200019cc
 801f844:	200019c8 	.word	0x200019c8
 801f848:	08012869 	.word	0x08012869
 801f84c:	0801286d 	.word	0x0801286d

0801f850 <FibrePropertyTypeInfo<Property<float const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f850:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f852:	461d      	mov	r5, r3
 801f854:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f858:	4614      	mov	r4, r2
 801f85a:	4798      	blx	r3
 801f85c:	ee10 0a10 	vmov	r0, s0
 801f860:	f7e0 fe62 	bl	8000528 <__aeabi_f2d>
 801f864:	4a04      	ldr	r2, [pc, #16]	@ (801f878 <FibrePropertyTypeInfo<Property<float const> >::get_string(Introspectable const&, char*, unsigned int) const+0x28>)
 801f866:	e9cd 0100 	strd	r0, r1, [sp]
 801f86a:	4629      	mov	r1, r5
 801f86c:	4620      	mov	r0, r4
 801f86e:	f004 fd95 	bl	802439c <sniprintf>
 801f872:	2001      	movs	r0, #1
 801f874:	b003      	add	sp, #12
 801f876:	bd30      	pop	{r4, r5, pc}
 801f878:	0802b03c 	.word	0x0802b03c

0801f87c <FibrePropertyTypeInfo<Property<unsigned long long const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f87c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f87e:	461d      	mov	r5, r3
 801f880:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f884:	4614      	mov	r4, r2
 801f886:	4798      	blx	r3
 801f888:	4a04      	ldr	r2, [pc, #16]	@ (801f89c <FibrePropertyTypeInfo<Property<unsigned long long const> >::get_string(Introspectable const&, char*, unsigned int) const+0x20>)
 801f88a:	e9cd 0100 	strd	r0, r1, [sp]
 801f88e:	4629      	mov	r1, r5
 801f890:	4620      	mov	r0, r4
 801f892:	f004 fd83 	bl	802439c <sniprintf>
 801f896:	2001      	movs	r0, #1
 801f898:	b003      	add	sp, #12
 801f89a:	bd30      	pop	{r4, r5, pc}
 801f89c:	0802b051 	.word	0x0802b051

0801f8a0 <FibrePropertyTypeInfo<Property<unsigned char const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f8a0:	b570      	push	{r4, r5, r6, lr}
 801f8a2:	461e      	mov	r6, r3
 801f8a4:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f8a8:	4615      	mov	r5, r2
 801f8aa:	4798      	blx	r3
 801f8ac:	4a03      	ldr	r2, [pc, #12]	@ (801f8bc <FibrePropertyTypeInfo<Property<unsigned char const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f8ae:	4603      	mov	r3, r0
 801f8b0:	4631      	mov	r1, r6
 801f8b2:	4628      	mov	r0, r5
 801f8b4:	f004 fd72 	bl	802439c <sniprintf>
 801f8b8:	2001      	movs	r0, #1
 801f8ba:	bd70      	pop	{r4, r5, r6, pc}
 801f8bc:	0802b047 	.word	0x0802b047

0801f8c0 <FibrePropertyTypeInfo<Property<bool const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f8c0:	b510      	push	{r4, lr}
 801f8c2:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f8c6:	4614      	mov	r4, r2
 801f8c8:	4798      	blx	r3
 801f8ca:	2300      	movs	r3, #0
 801f8cc:	3030      	adds	r0, #48	@ 0x30
 801f8ce:	7020      	strb	r0, [r4, #0]
 801f8d0:	7063      	strb	r3, [r4, #1]
 801f8d2:	2001      	movs	r0, #1
 801f8d4:	bd10      	pop	{r4, pc}
	...

0801f8d8 <FibrePropertyTypeInfo<Property<unsigned long const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f8d8:	b570      	push	{r4, r5, r6, lr}
 801f8da:	461e      	mov	r6, r3
 801f8dc:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f8e0:	4615      	mov	r5, r2
 801f8e2:	4798      	blx	r3
 801f8e4:	4a03      	ldr	r2, [pc, #12]	@ (801f8f4 <FibrePropertyTypeInfo<Property<unsigned long const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f8e6:	4603      	mov	r3, r0
 801f8e8:	4631      	mov	r1, r6
 801f8ea:	4628      	mov	r0, r5
 801f8ec:	f004 fd56 	bl	802439c <sniprintf>
 801f8f0:	2001      	movs	r0, #1
 801f8f2:	bd70      	pop	{r4, r5, r6, pc}
 801f8f4:	0802b03f 	.word	0x0802b03f

0801f8f8 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f8f8:	b570      	push	{r4, r5, r6, lr}
 801f8fa:	461e      	mov	r6, r3
 801f8fc:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f900:	4615      	mov	r5, r2
 801f902:	4798      	blx	r3
 801f904:	4a03      	ldr	r2, [pc, #12]	@ (801f914 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::AxisState const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f906:	4603      	mov	r3, r0
 801f908:	4631      	mov	r1, r6
 801f90a:	4628      	mov	r0, r5
 801f90c:	f004 fd46 	bl	802439c <sniprintf>
 801f910:	2001      	movs	r0, #1
 801f912:	bd70      	pop	{r4, r5, r6, pc}
 801f914:	0802b047 	.word	0x0802b047

0801f918 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::LockinState const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f918:	b570      	push	{r4, r5, r6, lr}
 801f91a:	461e      	mov	r6, r3
 801f91c:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f920:	4615      	mov	r5, r2
 801f922:	4798      	blx	r3
 801f924:	4a03      	ldr	r2, [pc, #12]	@ (801f934 <FibrePropertyTypeInfo<Property<ODriveIntf::AxisIntf::LockinState const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f926:	4603      	mov	r3, r0
 801f928:	4631      	mov	r1, r6
 801f92a:	4628      	mov	r0, r5
 801f92c:	f004 fd36 	bl	802439c <sniprintf>
 801f930:	2001      	movs	r0, #1
 801f932:	bd70      	pop	{r4, r5, r6, pc}
 801f934:	0802b047 	.word	0x0802b047

0801f938 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::ArmedState const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f938:	b570      	push	{r4, r5, r6, lr}
 801f93a:	461e      	mov	r6, r3
 801f93c:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f940:	4615      	mov	r5, r2
 801f942:	4798      	blx	r3
 801f944:	4a03      	ldr	r2, [pc, #12]	@ (801f954 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::ArmedState const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f946:	4603      	mov	r3, r0
 801f948:	4631      	mov	r1, r6
 801f94a:	4628      	mov	r0, r5
 801f94c:	f004 fd26 	bl	802439c <sniprintf>
 801f950:	2001      	movs	r0, #1
 801f952:	bd70      	pop	{r4, r5, r6, pc}
 801f954:	0802b047 	.word	0x0802b047

0801f958 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f958:	b570      	push	{r4, r5, r6, lr}
 801f95a:	461e      	mov	r6, r3
 801f95c:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f960:	4615      	mov	r5, r2
 801f962:	4798      	blx	r3
 801f964:	4a03      	ldr	r2, [pc, #12]	@ (801f974 <FibrePropertyTypeInfo<Property<ODriveIntf::MotorIntf::GateDriverIntf::DrvFault const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f966:	4603      	mov	r3, r0
 801f968:	4631      	mov	r1, r6
 801f96a:	4628      	mov	r0, r5
 801f96c:	f004 fd16 	bl	802439c <sniprintf>
 801f970:	2001      	movs	r0, #1
 801f972:	bd70      	pop	{r4, r5, r6, pc}
 801f974:	0802b04a 	.word	0x0802b04a

0801f978 <FibrePropertyTypeInfo<Property<unsigned short const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f978:	b570      	push	{r4, r5, r6, lr}
 801f97a:	461e      	mov	r6, r3
 801f97c:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f980:	4615      	mov	r5, r2
 801f982:	4798      	blx	r3
 801f984:	4a03      	ldr	r2, [pc, #12]	@ (801f994 <FibrePropertyTypeInfo<Property<unsigned short const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f986:	4603      	mov	r3, r0
 801f988:	4631      	mov	r1, r6
 801f98a:	4628      	mov	r0, r5
 801f98c:	f004 fd06 	bl	802439c <sniprintf>
 801f990:	2001      	movs	r0, #1
 801f992:	bd70      	pop	{r4, r5, r6, pc}
 801f994:	0802b04a 	.word	0x0802b04a

0801f998 <FibrePropertyTypeInfo<Property<long const> >::get_string(Introspectable const&, char*, unsigned int) const>:
 801f998:	b570      	push	{r4, r5, r6, lr}
 801f99a:	461e      	mov	r6, r3
 801f99c:	e9d1 0300 	ldrd	r0, r3, [r1]
 801f9a0:	4615      	mov	r5, r2
 801f9a2:	4798      	blx	r3
 801f9a4:	4a03      	ldr	r2, [pc, #12]	@ (801f9b4 <FibrePropertyTypeInfo<Property<long const> >::get_string(Introspectable const&, char*, unsigned int) const+0x1c>)
 801f9a6:	4603      	mov	r3, r0
 801f9a8:	4631      	mov	r1, r6
 801f9aa:	4628      	mov	r0, r5
 801f9ac:	f004 fcf6 	bl	802439c <sniprintf>
 801f9b0:	2001      	movs	r0, #1
 801f9b2:	bd70      	pop	{r4, r5, r6, pc}
 801f9b4:	0802b144 	.word	0x0802b144

0801f9b8 <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]>:
 801f9b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f9bc:	b092      	sub	sp, #72	@ 0x48
 801f9be:	4605      	mov	r5, r0
 801f9c0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 801f9c4:	f89d 0064 	ldrb.w	r0, [sp, #100]	@ 0x64
 801f9c8:	9400      	str	r4, [sp, #0]
 801f9ca:	460f      	mov	r7, r1
 801f9cc:	9001      	str	r0, [sp, #4]
 801f9ce:	2140      	movs	r1, #64	@ 0x40
 801f9d0:	a802      	add	r0, sp, #8
 801f9d2:	f004 fce3 	bl	802439c <sniprintf>
 801f9d6:	682b      	ldr	r3, [r5, #0]
 801f9d8:	2840      	cmp	r0, #64	@ 0x40
 801f9da:	4606      	mov	r6, r0
 801f9dc:	bf28      	it	cs
 801f9de:	2640      	movcs	r6, #64	@ 0x40
 801f9e0:	f8d3 8000 	ldr.w	r8, [r3]
 801f9e4:	4604      	mov	r4, r0
 801f9e6:	2300      	movs	r3, #0
 801f9e8:	4632      	mov	r2, r6
 801f9ea:	a902      	add	r1, sp, #8
 801f9ec:	4628      	mov	r0, r5
 801f9ee:	47c0      	blx	r8
 801f9f0:	b1c7      	cbz	r7, 801fa24 <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]+0x6c>
 801f9f2:	b154      	cbz	r4, 801fa0a <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]+0x52>
 801f9f4:	2300      	movs	r3, #0
 801f9f6:	ac02      	add	r4, sp, #8
 801f9f8:	4619      	mov	r1, r3
 801f9fa:	f814 cb01 	ldrb.w	ip, [r4], #1
 801f9fe:	3101      	adds	r1, #1
 801fa00:	428e      	cmp	r6, r1
 801fa02:	ea8c 0303 	eor.w	r3, ip, r3
 801fa06:	d8f8      	bhi.n	801f9fa <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]+0x42>
 801fa08:	461c      	mov	r4, r3
 801fa0a:	4623      	mov	r3, r4
 801fa0c:	4a0a      	ldr	r2, [pc, #40]	@ (801fa38 <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]+0x80>)
 801fa0e:	2140      	movs	r1, #64	@ 0x40
 801fa10:	a802      	add	r0, sp, #8
 801fa12:	f004 fcc3 	bl	802439c <sniprintf>
 801fa16:	6829      	ldr	r1, [r5, #0]
 801fa18:	4602      	mov	r2, r0
 801fa1a:	680c      	ldr	r4, [r1, #0]
 801fa1c:	2300      	movs	r3, #0
 801fa1e:	a902      	add	r1, sp, #8
 801fa20:	4628      	mov	r0, r5
 801fa22:	47a0      	blx	r4
 801fa24:	682b      	ldr	r3, [r5, #0]
 801fa26:	4905      	ldr	r1, [pc, #20]	@ (801fa3c <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]+0x84>)
 801fa28:	681c      	ldr	r4, [r3, #0]
 801fa2a:	2202      	movs	r2, #2
 801fa2c:	2300      	movs	r3, #0
 801fa2e:	4628      	mov	r0, r5
 801fa30:	47a0      	blx	r4
 801fa32:	b012      	add	sp, #72	@ 0x48
 801fa34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fa38:	08029750 	.word	0x08029750
 801fa3c:	08029754 	.word	0x08029754

0801fa40 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]>:
 801fa40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fa44:	b090      	sub	sp, #64	@ 0x40
 801fa46:	4605      	mov	r5, r0
 801fa48:	460f      	mov	r7, r1
 801fa4a:	4668      	mov	r0, sp
 801fa4c:	2140      	movs	r1, #64	@ 0x40
 801fa4e:	f004 fca5 	bl	802439c <sniprintf>
 801fa52:	682b      	ldr	r3, [r5, #0]
 801fa54:	2840      	cmp	r0, #64	@ 0x40
 801fa56:	4606      	mov	r6, r0
 801fa58:	bf28      	it	cs
 801fa5a:	2640      	movcs	r6, #64	@ 0x40
 801fa5c:	f8d3 8000 	ldr.w	r8, [r3]
 801fa60:	4604      	mov	r4, r0
 801fa62:	2300      	movs	r3, #0
 801fa64:	4632      	mov	r2, r6
 801fa66:	4669      	mov	r1, sp
 801fa68:	4628      	mov	r0, r5
 801fa6a:	47c0      	blx	r8
 801fa6c:	b1c7      	cbz	r7, 801faa0 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]+0x60>
 801fa6e:	b154      	cbz	r4, 801fa86 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]+0x46>
 801fa70:	2300      	movs	r3, #0
 801fa72:	466c      	mov	r4, sp
 801fa74:	4619      	mov	r1, r3
 801fa76:	f814 cb01 	ldrb.w	ip, [r4], #1
 801fa7a:	3101      	adds	r1, #1
 801fa7c:	428e      	cmp	r6, r1
 801fa7e:	ea8c 0303 	eor.w	r3, ip, r3
 801fa82:	d8f8      	bhi.n	801fa76 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]+0x36>
 801fa84:	461c      	mov	r4, r3
 801fa86:	4623      	mov	r3, r4
 801fa88:	4a0a      	ldr	r2, [pc, #40]	@ (801fab4 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]+0x74>)
 801fa8a:	2140      	movs	r1, #64	@ 0x40
 801fa8c:	4668      	mov	r0, sp
 801fa8e:	f004 fc85 	bl	802439c <sniprintf>
 801fa92:	6829      	ldr	r1, [r5, #0]
 801fa94:	4602      	mov	r2, r0
 801fa96:	680c      	ldr	r4, [r1, #0]
 801fa98:	2300      	movs	r3, #0
 801fa9a:	4669      	mov	r1, sp
 801fa9c:	4628      	mov	r0, r5
 801fa9e:	47a0      	blx	r4
 801faa0:	682b      	ldr	r3, [r5, #0]
 801faa2:	4905      	ldr	r1, [pc, #20]	@ (801fab8 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]+0x78>)
 801faa4:	681c      	ldr	r4, [r3, #0]
 801faa6:	2202      	movs	r2, #2
 801faa8:	2300      	movs	r3, #0
 801faaa:	4628      	mov	r0, r5
 801faac:	47a0      	blx	r4
 801faae:	b010      	add	sp, #64	@ 0x40
 801fab0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fab4:	08029750 	.word	0x08029750
 801fab8:	08029754 	.word	0x08029754

0801fabc <Introspectable::get_type_info() [clone .isra.0]>:
 801fabc:	4770      	bx	lr
	...

0801fac0 <char const* std::find<char const*, char>(char const*, char const*, char const&)>:
 801fac0:	1a0b      	subs	r3, r1, r0
 801fac2:	b500      	push	{lr}
 801fac4:	ea4f 0ea3 	mov.w	lr, r3, asr #2
 801fac8:	f1be 0f00 	cmp.w	lr, #0
 801facc:	dd19      	ble.n	801fb02 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x42>
 801face:	7813      	ldrb	r3, [r2, #0]
 801fad0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 801fad4:	e00e      	b.n	801faf4 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x34>
 801fad6:	f890 c001 	ldrb.w	ip, [r0, #1]
 801fada:	459c      	cmp	ip, r3
 801fadc:	d024      	beq.n	801fb28 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x68>
 801fade:	f890 c002 	ldrb.w	ip, [r0, #2]
 801fae2:	459c      	cmp	ip, r3
 801fae4:	d023      	beq.n	801fb2e <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x6e>
 801fae6:	f890 c003 	ldrb.w	ip, [r0, #3]
 801faea:	459c      	cmp	ip, r3
 801faec:	d022      	beq.n	801fb34 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x74>
 801faee:	3004      	adds	r0, #4
 801faf0:	4570      	cmp	r0, lr
 801faf2:	d005      	beq.n	801fb00 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x40>
 801faf4:	f890 c000 	ldrb.w	ip, [r0]
 801faf8:	459c      	cmp	ip, r3
 801fafa:	d1ec      	bne.n	801fad6 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x16>
 801fafc:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb00:	1a0b      	subs	r3, r1, r0
 801fb02:	2b02      	cmp	r3, #2
 801fb04:	d005      	beq.n	801fb12 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x52>
 801fb06:	2b03      	cmp	r3, #3
 801fb08:	d019      	beq.n	801fb3e <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x7e>
 801fb0a:	2b01      	cmp	r3, #1
 801fb0c:	d015      	beq.n	801fb3a <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x7a>
 801fb0e:	4608      	mov	r0, r1
 801fb10:	e7f4      	b.n	801fafc <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x3c>
 801fb12:	7813      	ldrb	r3, [r2, #0]
 801fb14:	7802      	ldrb	r2, [r0, #0]
 801fb16:	429a      	cmp	r2, r3
 801fb18:	d0f0      	beq.n	801fafc <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x3c>
 801fb1a:	3001      	adds	r0, #1
 801fb1c:	7802      	ldrb	r2, [r0, #0]
 801fb1e:	429a      	cmp	r2, r3
 801fb20:	bf18      	it	ne
 801fb22:	4608      	movne	r0, r1
 801fb24:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb28:	3001      	adds	r0, #1
 801fb2a:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb2e:	3002      	adds	r0, #2
 801fb30:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb34:	3003      	adds	r0, #3
 801fb36:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb3a:	7813      	ldrb	r3, [r2, #0]
 801fb3c:	e7ee      	b.n	801fb1c <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x5c>
 801fb3e:	7813      	ldrb	r3, [r2, #0]
 801fb40:	7802      	ldrb	r2, [r0, #0]
 801fb42:	429a      	cmp	r2, r3
 801fb44:	d0da      	beq.n	801fafc <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x3c>
 801fb46:	3001      	adds	r0, #1
 801fb48:	e7e4      	b.n	801fb14 <char const* std::find<char const*, char>(char const*, char const*, char const&)+0x54>
 801fb4a:	bf00      	nop

0801fb4c <Introspectable::get_child(char const*, unsigned int)>:
 801fb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb50:	460d      	mov	r5, r1
 801fb52:	4614      	mov	r4, r2
 801fb54:	469c      	mov	ip, r3
 801fb56:	4606      	mov	r6, r0
 801fb58:	4607      	mov	r7, r0
 801fb5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801fb5c:	b08f      	sub	sp, #60	@ 0x3c
 801fb5e:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 801fb60:	682b      	ldr	r3, [r5, #0]
 801fb62:	603b      	str	r3, [r7, #0]
 801fb64:	aa09      	add	r2, sp, #36	@ 0x24
 801fb66:	2300      	movs	r3, #0
 801fb68:	eb04 010c 	add.w	r1, r4, ip
 801fb6c:	4620      	mov	r0, r4
 801fb6e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801fb72:	f7ff ffa5 	bl	801fac0 <char const* std::find<char const*, char>(char const*, char const*, char const&)>
 801fb76:	f106 0b08 	add.w	fp, r6, #8
 801fb7a:	4680      	mov	r8, r0
 801fb7c:	4544      	cmp	r4, r8
 801fb7e:	d252      	bcs.n	801fc26 <Introspectable::get_child(char const*, unsigned int)+0xda>
 801fb80:	6935      	ldr	r5, [r6, #16]
 801fb82:	2d00      	cmp	r5, #0
 801fb84:	d04f      	beq.n	801fc26 <Introspectable::get_child(char const*, unsigned int)+0xda>
 801fb86:	f04f 032e 	mov.w	r3, #46	@ 0x2e
 801fb8a:	aa09      	add	r2, sp, #36	@ 0x24
 801fb8c:	4641      	mov	r1, r8
 801fb8e:	4620      	mov	r0, r4
 801fb90:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801fb94:	f7ff ff94 	bl	801fac0 <char const* std::find<char const*, char>(char const*, char const*, char const&)>
 801fb98:	68ab      	ldr	r3, [r5, #8]
 801fb9a:	9605      	str	r6, [sp, #20]
 801fb9c:	4607      	mov	r7, r0
 801fb9e:	462e      	mov	r6, r5
 801fba0:	eba0 0a04 	sub.w	sl, r0, r4
 801fba4:	9307      	str	r3, [sp, #28]
 801fba6:	f04f 0900 	mov.w	r9, #0
 801fbaa:	4625      	mov	r5, r4
 801fbac:	9b07      	ldr	r3, [sp, #28]
 801fbae:	4599      	cmp	r9, r3
 801fbb0:	d028      	beq.n	801fc04 <Introspectable::get_child(char const*, unsigned int)+0xb8>
 801fbb2:	6872      	ldr	r2, [r6, #4]
 801fbb4:	f852 4039 	ldr.w	r4, [r2, r9, lsl #3]
 801fbb8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 801fbbc:	4652      	mov	r2, sl
 801fbbe:	4621      	mov	r1, r4
 801fbc0:	4628      	mov	r0, r5
 801fbc2:	9306      	str	r3, [sp, #24]
 801fbc4:	f004 fd84 	bl	80246d0 <strncmp>
 801fbc8:	b9c8      	cbnz	r0, 801fbfe <Introspectable::get_child(char const*, unsigned int)+0xb2>
 801fbca:	4620      	mov	r0, r4
 801fbcc:	f7e0 fb40 	bl	8000250 <strlen>
 801fbd0:	4582      	cmp	sl, r0
 801fbd2:	d114      	bne.n	801fbfe <Introspectable::get_child(char const*, unsigned int)+0xb2>
 801fbd4:	4635      	mov	r5, r6
 801fbd6:	9e05      	ldr	r6, [sp, #20]
 801fbd8:	682c      	ldr	r4, [r5, #0]
 801fbda:	f8cd 9008 	str.w	r9, [sp, #8]
 801fbde:	e89b 0003 	ldmia.w	fp, {r0, r1}
 801fbe2:	e88d 0003 	stmia.w	sp, {r0, r1}
 801fbe6:	4629      	mov	r1, r5
 801fbe8:	e896 000c 	ldmia.w	r6, {r2, r3}
 801fbec:	6824      	ldr	r4, [r4, #0]
 801fbee:	a809      	add	r0, sp, #36	@ 0x24
 801fbf0:	47a0      	blx	r4
 801fbf2:	686b      	ldr	r3, [r5, #4]
 801fbf4:	9a06      	ldr	r2, [sp, #24]
 801fbf6:	4413      	add	r3, r2
 801fbf8:	f8d3 c004 	ldr.w	ip, [r3, #4]
 801fbfc:	e005      	b.n	801fc0a <Introspectable::get_child(char const*, unsigned int)+0xbe>
 801fbfe:	f109 0901 	add.w	r9, r9, #1
 801fc02:	e7d3      	b.n	801fbac <Introspectable::get_child(char const*, unsigned int)+0x60>
 801fc04:	9e05      	ldr	r6, [sp, #20]
 801fc06:	f04f 0c00 	mov.w	ip, #0
 801fc0a:	f8cd c034 	str.w	ip, [sp, #52]	@ 0x34
 801fc0e:	ad09      	add	r5, sp, #36	@ 0x24
 801fc10:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801fc12:	4634      	mov	r4, r6
 801fc14:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801fc16:	3701      	adds	r7, #1
 801fc18:	4547      	cmp	r7, r8
 801fc1a:	f8c4 c000 	str.w	ip, [r4]
 801fc1e:	463c      	mov	r4, r7
 801fc20:	bf28      	it	cs
 801fc22:	4644      	movcs	r4, r8
 801fc24:	e7aa      	b.n	801fb7c <Introspectable::get_child(char const*, unsigned int)+0x30>
 801fc26:	4630      	mov	r0, r6
 801fc28:	b00f      	add	sp, #60	@ 0x3c
 801fc2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801fc30 <ODriveTypeInfo<ODrive>::make_introspectable(ODrive&)>:
 801fc30:	4a01      	ldr	r2, [pc, #4]	@ (801fc38 <ODriveTypeInfo<ODrive>::make_introspectable(ODrive&)+0x8>)
 801fc32:	6001      	str	r1, [r0, #0]
 801fc34:	6102      	str	r2, [r0, #16]
 801fc36:	4770      	bx	lr
 801fc38:	2000cf24 	.word	0x2000cf24

0801fc3c <void respond<>(StreamSink&, bool, char const*)>:
 801fc3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fc40:	b090      	sub	sp, #64	@ 0x40
 801fc42:	4605      	mov	r5, r0
 801fc44:	460f      	mov	r7, r1
 801fc46:	4668      	mov	r0, sp
 801fc48:	2140      	movs	r1, #64	@ 0x40
 801fc4a:	f004 fba7 	bl	802439c <sniprintf>
 801fc4e:	682b      	ldr	r3, [r5, #0]
 801fc50:	2840      	cmp	r0, #64	@ 0x40
 801fc52:	4606      	mov	r6, r0
 801fc54:	bf28      	it	cs
 801fc56:	2640      	movcs	r6, #64	@ 0x40
 801fc58:	f8d3 8000 	ldr.w	r8, [r3]
 801fc5c:	4604      	mov	r4, r0
 801fc5e:	2300      	movs	r3, #0
 801fc60:	4632      	mov	r2, r6
 801fc62:	4669      	mov	r1, sp
 801fc64:	4628      	mov	r0, r5
 801fc66:	47c0      	blx	r8
 801fc68:	b1c7      	cbz	r7, 801fc9c <void respond<>(StreamSink&, bool, char const*)+0x60>
 801fc6a:	b154      	cbz	r4, 801fc82 <void respond<>(StreamSink&, bool, char const*)+0x46>
 801fc6c:	2100      	movs	r1, #0
 801fc6e:	466c      	mov	r4, sp
 801fc70:	460b      	mov	r3, r1
 801fc72:	f814 cb01 	ldrb.w	ip, [r4], #1
 801fc76:	3101      	adds	r1, #1
 801fc78:	428e      	cmp	r6, r1
 801fc7a:	ea8c 0303 	eor.w	r3, ip, r3
 801fc7e:	d8f8      	bhi.n	801fc72 <void respond<>(StreamSink&, bool, char const*)+0x36>
 801fc80:	461c      	mov	r4, r3
 801fc82:	4623      	mov	r3, r4
 801fc84:	4a0a      	ldr	r2, [pc, #40]	@ (801fcb0 <void respond<>(StreamSink&, bool, char const*)+0x74>)
 801fc86:	2140      	movs	r1, #64	@ 0x40
 801fc88:	4668      	mov	r0, sp
 801fc8a:	f004 fb87 	bl	802439c <sniprintf>
 801fc8e:	6829      	ldr	r1, [r5, #0]
 801fc90:	4602      	mov	r2, r0
 801fc92:	680c      	ldr	r4, [r1, #0]
 801fc94:	2300      	movs	r3, #0
 801fc96:	4669      	mov	r1, sp
 801fc98:	4628      	mov	r0, r5
 801fc9a:	47a0      	blx	r4
 801fc9c:	682b      	ldr	r3, [r5, #0]
 801fc9e:	4905      	ldr	r1, [pc, #20]	@ (801fcb4 <void respond<>(StreamSink&, bool, char const*)+0x78>)
 801fca0:	681c      	ldr	r4, [r3, #0]
 801fca2:	2202      	movs	r2, #2
 801fca4:	2300      	movs	r3, #0
 801fca6:	4628      	mov	r0, r5
 801fca8:	47a0      	blx	r4
 801fcaa:	b010      	add	sp, #64	@ 0x40
 801fcac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fcb0:	08029750 	.word	0x08029750
 801fcb4:	08029754 	.word	0x08029754

0801fcb8 <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])>:
 801fcb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fcbc:	b090      	sub	sp, #64	@ 0x40
 801fcbe:	4605      	mov	r5, r0
 801fcc0:	460f      	mov	r7, r1
 801fcc2:	4668      	mov	r0, sp
 801fcc4:	2140      	movs	r1, #64	@ 0x40
 801fcc6:	f004 fb69 	bl	802439c <sniprintf>
 801fcca:	682b      	ldr	r3, [r5, #0]
 801fccc:	2840      	cmp	r0, #64	@ 0x40
 801fcce:	4606      	mov	r6, r0
 801fcd0:	bf28      	it	cs
 801fcd2:	2640      	movcs	r6, #64	@ 0x40
 801fcd4:	f8d3 8000 	ldr.w	r8, [r3]
 801fcd8:	4604      	mov	r4, r0
 801fcda:	2300      	movs	r3, #0
 801fcdc:	4632      	mov	r2, r6
 801fcde:	4669      	mov	r1, sp
 801fce0:	4628      	mov	r0, r5
 801fce2:	47c0      	blx	r8
 801fce4:	b1c7      	cbz	r7, 801fd18 <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])+0x60>
 801fce6:	b154      	cbz	r4, 801fcfe <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])+0x46>
 801fce8:	2100      	movs	r1, #0
 801fcea:	466c      	mov	r4, sp
 801fcec:	460b      	mov	r3, r1
 801fcee:	f814 cb01 	ldrb.w	ip, [r4], #1
 801fcf2:	3101      	adds	r1, #1
 801fcf4:	428e      	cmp	r6, r1
 801fcf6:	ea8c 0303 	eor.w	r3, ip, r3
 801fcfa:	d8f8      	bhi.n	801fcee <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])+0x36>
 801fcfc:	461c      	mov	r4, r3
 801fcfe:	4623      	mov	r3, r4
 801fd00:	4a0a      	ldr	r2, [pc, #40]	@ (801fd2c <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])+0x74>)
 801fd02:	2140      	movs	r1, #64	@ 0x40
 801fd04:	4668      	mov	r0, sp
 801fd06:	f004 fb49 	bl	802439c <sniprintf>
 801fd0a:	6829      	ldr	r1, [r5, #0]
 801fd0c:	4602      	mov	r2, r0
 801fd0e:	680c      	ldr	r4, [r1, #0]
 801fd10:	2300      	movs	r3, #0
 801fd12:	4669      	mov	r1, sp
 801fd14:	4628      	mov	r0, r5
 801fd16:	47a0      	blx	r4
 801fd18:	682b      	ldr	r3, [r5, #0]
 801fd1a:	4905      	ldr	r1, [pc, #20]	@ (801fd30 <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])+0x78>)
 801fd1c:	681c      	ldr	r4, [r3, #0]
 801fd1e:	2202      	movs	r2, #2
 801fd20:	2300      	movs	r3, #0
 801fd22:	4628      	mov	r0, r5
 801fd24:	47a0      	blx	r4
 801fd26:	b010      	add	sp, #64	@ 0x40
 801fd28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fd2c:	08029750 	.word	0x08029750
 801fd30:	08029754 	.word	0x08029754

0801fd34 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink>:
 801fd34:	b538      	push	{r3, r4, r5, lr}
 801fd36:	499c      	ldr	r1, [pc, #624]	@ (801ffa8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x274>)
 801fd38:	489c      	ldr	r0, [pc, #624]	@ (801ffac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x278>)
 801fd3a:	f7ff ff79 	bl	801fc30 <ODriveTypeInfo<ODrive>::make_introspectable(ODrive&)>
 801fd3e:	4b9c      	ldr	r3, [pc, #624]	@ (801ffb0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x27c>)
 801fd40:	681a      	ldr	r2, [r3, #0]
 801fd42:	f012 0201 	ands.w	r2, r2, #1
 801fd46:	f000 8697 	beq.w	8020a78 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd44>
 801fd4a:	4b9a      	ldr	r3, [pc, #616]	@ (801ffb4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x280>)
 801fd4c:	681a      	ldr	r2, [r3, #0]
 801fd4e:	f012 0201 	ands.w	r2, r2, #1
 801fd52:	f000 867b 	beq.w	8020a4c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd18>
 801fd56:	4b98      	ldr	r3, [pc, #608]	@ (801ffb8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x284>)
 801fd58:	681a      	ldr	r2, [r3, #0]
 801fd5a:	f012 0201 	ands.w	r2, r2, #1
 801fd5e:	f000 8664 	beq.w	8020a2a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xcf6>
 801fd62:	4b96      	ldr	r3, [pc, #600]	@ (801ffbc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x288>)
 801fd64:	681a      	ldr	r2, [r3, #0]
 801fd66:	f012 0201 	ands.w	r2, r2, #1
 801fd6a:	f000 864d 	beq.w	8020a08 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xcd4>
 801fd6e:	4b94      	ldr	r3, [pc, #592]	@ (801ffc0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x28c>)
 801fd70:	681a      	ldr	r2, [r3, #0]
 801fd72:	f012 0201 	ands.w	r2, r2, #1
 801fd76:	f000 8636 	beq.w	80209e6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xcb2>
 801fd7a:	4b92      	ldr	r3, [pc, #584]	@ (801ffc4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x290>)
 801fd7c:	681a      	ldr	r2, [r3, #0]
 801fd7e:	f012 0201 	ands.w	r2, r2, #1
 801fd82:	f000 861a 	beq.w	80209ba <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc86>
 801fd86:	4b90      	ldr	r3, [pc, #576]	@ (801ffc8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x294>)
 801fd88:	681a      	ldr	r2, [r3, #0]
 801fd8a:	f012 0201 	ands.w	r2, r2, #1
 801fd8e:	f000 8603 	beq.w	8020998 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc64>
 801fd92:	4b8e      	ldr	r3, [pc, #568]	@ (801ffcc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x298>)
 801fd94:	681a      	ldr	r2, [r3, #0]
 801fd96:	07d1      	lsls	r1, r2, #31
 801fd98:	f140 85f2 	bpl.w	8020980 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc4c>
 801fd9c:	4b8c      	ldr	r3, [pc, #560]	@ (801ffd0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x29c>)
 801fd9e:	681a      	ldr	r2, [r3, #0]
 801fda0:	07d2      	lsls	r2, r2, #31
 801fda2:	f140 85e1 	bpl.w	8020968 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc34>
 801fda6:	4b8b      	ldr	r3, [pc, #556]	@ (801ffd4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2a0>)
 801fda8:	681a      	ldr	r2, [r3, #0]
 801fdaa:	07d5      	lsls	r5, r2, #31
 801fdac:	f140 85d0 	bpl.w	8020950 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc1c>
 801fdb0:	4b89      	ldr	r3, [pc, #548]	@ (801ffd8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2a4>)
 801fdb2:	681a      	ldr	r2, [r3, #0]
 801fdb4:	f012 0201 	ands.w	r2, r2, #1
 801fdb8:	f000 85b4 	beq.w	8020924 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xbf0>
 801fdbc:	4b87      	ldr	r3, [pc, #540]	@ (801ffdc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2a8>)
 801fdbe:	681a      	ldr	r2, [r3, #0]
 801fdc0:	f012 0201 	ands.w	r2, r2, #1
 801fdc4:	f000 8598 	beq.w	80208f8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xbc4>
 801fdc8:	4b85      	ldr	r3, [pc, #532]	@ (801ffe0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2ac>)
 801fdca:	681a      	ldr	r2, [r3, #0]
 801fdcc:	07d4      	lsls	r4, r2, #31
 801fdce:	f140 8587 	bpl.w	80208e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xbac>
 801fdd2:	4b84      	ldr	r3, [pc, #528]	@ (801ffe4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2b0>)
 801fdd4:	681a      	ldr	r2, [r3, #0]
 801fdd6:	07d0      	lsls	r0, r2, #31
 801fdd8:	f140 8576 	bpl.w	80208c8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xb94>
 801fddc:	4b82      	ldr	r3, [pc, #520]	@ (801ffe8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2b4>)
 801fdde:	681a      	ldr	r2, [r3, #0]
 801fde0:	f012 0201 	ands.w	r2, r2, #1
 801fde4:	f000 855a 	beq.w	802089c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xb68>
 801fde8:	4b80      	ldr	r3, [pc, #512]	@ (801ffec <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2b8>)
 801fdea:	681a      	ldr	r2, [r3, #0]
 801fdec:	f012 0201 	ands.w	r2, r2, #1
 801fdf0:	f000 8543 	beq.w	802087a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xb46>
 801fdf4:	4b7e      	ldr	r3, [pc, #504]	@ (801fff0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2bc>)
 801fdf6:	681a      	ldr	r2, [r3, #0]
 801fdf8:	f012 0201 	ands.w	r2, r2, #1
 801fdfc:	f000 8527 	beq.w	802084e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xb1a>
 801fe00:	4b7c      	ldr	r3, [pc, #496]	@ (801fff4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2c0>)
 801fe02:	681a      	ldr	r2, [r3, #0]
 801fe04:	f012 0201 	ands.w	r2, r2, #1
 801fe08:	f000 8510 	beq.w	802082c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaf8>
 801fe0c:	4b7a      	ldr	r3, [pc, #488]	@ (801fff8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2c4>)
 801fe0e:	681a      	ldr	r2, [r3, #0]
 801fe10:	f012 0201 	ands.w	r2, r2, #1
 801fe14:	f000 84f4 	beq.w	8020800 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xacc>
 801fe18:	4b78      	ldr	r3, [pc, #480]	@ (801fffc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2c8>)
 801fe1a:	681a      	ldr	r2, [r3, #0]
 801fe1c:	07d1      	lsls	r1, r2, #31
 801fe1e:	f140 84e3 	bpl.w	80207e8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xab4>
 801fe22:	4b77      	ldr	r3, [pc, #476]	@ (8020000 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2cc>)
 801fe24:	681a      	ldr	r2, [r3, #0]
 801fe26:	07d2      	lsls	r2, r2, #31
 801fe28:	f140 8449 	bpl.w	80206be <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x98a>
 801fe2c:	4b75      	ldr	r3, [pc, #468]	@ (8020004 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2d0>)
 801fe2e:	681a      	ldr	r2, [r3, #0]
 801fe30:	07d5      	lsls	r5, r2, #31
 801fe32:	f140 8438 	bpl.w	80206a6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x972>
 801fe36:	4b74      	ldr	r3, [pc, #464]	@ (8020008 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2d4>)
 801fe38:	681a      	ldr	r2, [r3, #0]
 801fe3a:	f012 0201 	ands.w	r2, r2, #1
 801fe3e:	f000 841c 	beq.w	802067a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x946>
 801fe42:	4b72      	ldr	r3, [pc, #456]	@ (802000c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2d8>)
 801fe44:	681a      	ldr	r2, [r3, #0]
 801fe46:	07d4      	lsls	r4, r2, #31
 801fe48:	f140 840b 	bpl.w	8020662 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x92e>
 801fe4c:	4b70      	ldr	r3, [pc, #448]	@ (8020010 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2dc>)
 801fe4e:	681a      	ldr	r2, [r3, #0]
 801fe50:	07d0      	lsls	r0, r2, #31
 801fe52:	f140 83fa 	bpl.w	802064a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x916>
 801fe56:	4b6f      	ldr	r3, [pc, #444]	@ (8020014 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2e0>)
 801fe58:	681a      	ldr	r2, [r3, #0]
 801fe5a:	07d1      	lsls	r1, r2, #31
 801fe5c:	f140 83ea 	bpl.w	8020634 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x900>
 801fe60:	4b6d      	ldr	r3, [pc, #436]	@ (8020018 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2e4>)
 801fe62:	681a      	ldr	r2, [r3, #0]
 801fe64:	07d2      	lsls	r2, r2, #31
 801fe66:	f140 83da 	bpl.w	802061e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x8ea>
 801fe6a:	4b6c      	ldr	r3, [pc, #432]	@ (802001c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2e8>)
 801fe6c:	681a      	ldr	r2, [r3, #0]
 801fe6e:	f012 0201 	ands.w	r2, r2, #1
 801fe72:	f000 83bf 	beq.w	80205f4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x8c0>
 801fe76:	4b6a      	ldr	r3, [pc, #424]	@ (8020020 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2ec>)
 801fe78:	681a      	ldr	r2, [r3, #0]
 801fe7a:	f012 0201 	ands.w	r2, r2, #1
 801fe7e:	f000 83a9 	beq.w	80205d4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x8a0>
 801fe82:	4b68      	ldr	r3, [pc, #416]	@ (8020024 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2f0>)
 801fe84:	681a      	ldr	r2, [r3, #0]
 801fe86:	07d5      	lsls	r5, r2, #31
 801fe88:	f140 8399 	bpl.w	80205be <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x88a>
 801fe8c:	4b66      	ldr	r3, [pc, #408]	@ (8020028 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2f4>)
 801fe8e:	681a      	ldr	r2, [r3, #0]
 801fe90:	f012 0201 	ands.w	r2, r2, #1
 801fe94:	f000 8383 	beq.w	802059e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x86a>
 801fe98:	4b64      	ldr	r3, [pc, #400]	@ (802002c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2f8>)
 801fe9a:	681a      	ldr	r2, [r3, #0]
 801fe9c:	07d4      	lsls	r4, r2, #31
 801fe9e:	f140 8374 	bpl.w	802058a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x856>
 801fea2:	4b63      	ldr	r3, [pc, #396]	@ (8020030 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2fc>)
 801fea4:	681a      	ldr	r2, [r3, #0]
 801fea6:	f012 0201 	ands.w	r2, r2, #1
 801feaa:	f000 835e 	beq.w	802056a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x836>
 801feae:	4b61      	ldr	r3, [pc, #388]	@ (8020034 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x300>)
 801feb0:	681a      	ldr	r2, [r3, #0]
 801feb2:	07d0      	lsls	r0, r2, #31
 801feb4:	f140 834e 	bpl.w	8020554 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x820>
 801feb8:	4b5f      	ldr	r3, [pc, #380]	@ (8020038 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x304>)
 801feba:	681a      	ldr	r2, [r3, #0]
 801febc:	f012 0201 	ands.w	r2, r2, #1
 801fec0:	f000 8333 	beq.w	802052a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x7f6>
 801fec4:	4b5d      	ldr	r3, [pc, #372]	@ (802003c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x308>)
 801fec6:	681a      	ldr	r2, [r3, #0]
 801fec8:	f012 0201 	ands.w	r2, r2, #1
 801fecc:	f000 8318 	beq.w	8020500 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x7cc>
 801fed0:	4b5b      	ldr	r3, [pc, #364]	@ (8020040 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x30c>)
 801fed2:	681a      	ldr	r2, [r3, #0]
 801fed4:	07d1      	lsls	r1, r2, #31
 801fed6:	f140 8308 	bpl.w	80204ea <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x7b6>
 801feda:	4b5a      	ldr	r3, [pc, #360]	@ (8020044 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x310>)
 801fedc:	681a      	ldr	r2, [r3, #0]
 801fede:	07d2      	lsls	r2, r2, #31
 801fee0:	f140 82f8 	bpl.w	80204d4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x7a0>
 801fee4:	4b58      	ldr	r3, [pc, #352]	@ (8020048 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x314>)
 801fee6:	681a      	ldr	r2, [r3, #0]
 801fee8:	f012 0201 	ands.w	r2, r2, #1
 801feec:	f000 82dd 	beq.w	80204aa <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x776>
 801fef0:	4b56      	ldr	r3, [pc, #344]	@ (802004c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x318>)
 801fef2:	681a      	ldr	r2, [r3, #0]
 801fef4:	f012 0201 	ands.w	r2, r2, #1
 801fef8:	f000 82c2 	beq.w	8020480 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x74c>
 801fefc:	4b54      	ldr	r3, [pc, #336]	@ (8020050 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x31c>)
 801fefe:	681a      	ldr	r2, [r3, #0]
 801ff00:	f012 0201 	ands.w	r2, r2, #1
 801ff04:	f000 82a7 	beq.w	8020456 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x722>
 801ff08:	4b52      	ldr	r3, [pc, #328]	@ (8020054 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x320>)
 801ff0a:	681a      	ldr	r2, [r3, #0]
 801ff0c:	f012 0201 	ands.w	r2, r2, #1
 801ff10:	f000 828c 	beq.w	802042c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6f8>
 801ff14:	4b50      	ldr	r3, [pc, #320]	@ (8020058 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x324>)
 801ff16:	681a      	ldr	r2, [r3, #0]
 801ff18:	07d5      	lsls	r5, r2, #31
 801ff1a:	f140 81eb 	bpl.w	80202f4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5c0>
 801ff1e:	4b4f      	ldr	r3, [pc, #316]	@ (802005c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x328>)
 801ff20:	681a      	ldr	r2, [r3, #0]
 801ff22:	07d4      	lsls	r4, r2, #31
 801ff24:	f140 81db 	bpl.w	80202de <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5aa>
 801ff28:	4b4d      	ldr	r3, [pc, #308]	@ (8020060 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x32c>)
 801ff2a:	681a      	ldr	r2, [r3, #0]
 801ff2c:	07d0      	lsls	r0, r2, #31
 801ff2e:	f140 81cb 	bpl.w	80202c8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x594>
 801ff32:	4b4c      	ldr	r3, [pc, #304]	@ (8020064 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x330>)
 801ff34:	681a      	ldr	r2, [r3, #0]
 801ff36:	f012 0201 	ands.w	r2, r2, #1
 801ff3a:	f000 81b0 	beq.w	802029e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x56a>
 801ff3e:	4b4a      	ldr	r3, [pc, #296]	@ (8020068 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x334>)
 801ff40:	681a      	ldr	r2, [r3, #0]
 801ff42:	f012 0201 	ands.w	r2, r2, #1
 801ff46:	f000 819a 	beq.w	802027e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x54a>
 801ff4a:	4b48      	ldr	r3, [pc, #288]	@ (802006c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x338>)
 801ff4c:	681a      	ldr	r2, [r3, #0]
 801ff4e:	f012 0201 	ands.w	r2, r2, #1
 801ff52:	f000 817f 	beq.w	8020254 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x520>
 801ff56:	4b46      	ldr	r3, [pc, #280]	@ (8020070 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x33c>)
 801ff58:	681a      	ldr	r2, [r3, #0]
 801ff5a:	07d1      	lsls	r1, r2, #31
 801ff5c:	f140 816f 	bpl.w	802023e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x50a>
 801ff60:	4b44      	ldr	r3, [pc, #272]	@ (8020074 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x340>)
 801ff62:	681a      	ldr	r2, [r3, #0]
 801ff64:	07d2      	lsls	r2, r2, #31
 801ff66:	f140 815f 	bpl.w	8020228 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x4f4>
 801ff6a:	4b43      	ldr	r3, [pc, #268]	@ (8020078 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x344>)
 801ff6c:	681a      	ldr	r2, [r3, #0]
 801ff6e:	f012 0201 	ands.w	r2, r2, #1
 801ff72:	f000 8144 	beq.w	80201fe <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x4ca>
 801ff76:	4b41      	ldr	r3, [pc, #260]	@ (802007c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x348>)
 801ff78:	681a      	ldr	r2, [r3, #0]
 801ff7a:	07d5      	lsls	r5, r2, #31
 801ff7c:	f140 8134 	bpl.w	80201e8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x4b4>
 801ff80:	4b3f      	ldr	r3, [pc, #252]	@ (8020080 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x34c>)
 801ff82:	681a      	ldr	r2, [r3, #0]
 801ff84:	07d4      	lsls	r4, r2, #31
 801ff86:	f140 8124 	bpl.w	80201d2 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x49e>
 801ff8a:	4b3e      	ldr	r3, [pc, #248]	@ (8020084 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x350>)
 801ff8c:	681a      	ldr	r2, [r3, #0]
 801ff8e:	07d0      	lsls	r0, r2, #31
 801ff90:	f140 8114 	bpl.w	80201bc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x488>
 801ff94:	4b3c      	ldr	r3, [pc, #240]	@ (8020088 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x354>)
 801ff96:	681a      	ldr	r2, [r3, #0]
 801ff98:	07d1      	lsls	r1, r2, #31
 801ff9a:	f140 8105 	bpl.w	80201a8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x474>
 801ff9e:	4b3b      	ldr	r3, [pc, #236]	@ (802008c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x358>)
 801ffa0:	681a      	ldr	r2, [r3, #0]
 801ffa2:	07d2      	lsls	r2, r2, #31
 801ffa4:	e074      	b.n	8020090 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x35c>
 801ffa6:	bf00      	nop
 801ffa8:	20001840 	.word	0x20001840
 801ffac:	2000d258 	.word	0x2000d258
 801ffb0:	2000cf20 	.word	0x2000cf20
 801ffb4:	20008cb4 	.word	0x20008cb4
 801ffb8:	2000cf1c 	.word	0x2000cf1c
 801ffbc:	2000cf18 	.word	0x2000cf18
 801ffc0:	2000cf14 	.word	0x2000cf14
 801ffc4:	20008cb0 	.word	0x20008cb0
 801ffc8:	2000cf10 	.word	0x2000cf10
 801ffcc:	2000cf0c 	.word	0x2000cf0c
 801ffd0:	2000cf08 	.word	0x2000cf08
 801ffd4:	2000cf04 	.word	0x2000cf04
 801ffd8:	20008cac 	.word	0x20008cac
 801ffdc:	20008ca8 	.word	0x20008ca8
 801ffe0:	2000cf00 	.word	0x2000cf00
 801ffe4:	2000cefc 	.word	0x2000cefc
 801ffe8:	20008ca4 	.word	0x20008ca4
 801ffec:	2000cef8 	.word	0x2000cef8
 801fff0:	20008ca0 	.word	0x20008ca0
 801fff4:	2000cef4 	.word	0x2000cef4
 801fff8:	20008c9c 	.word	0x20008c9c
 801fffc:	2000cef0 	.word	0x2000cef0
 8020000:	2000ceec 	.word	0x2000ceec
 8020004:	2000cee8 	.word	0x2000cee8
 8020008:	20008c98 	.word	0x20008c98
 802000c:	2000cee4 	.word	0x2000cee4
 8020010:	2000cee0 	.word	0x2000cee0
 8020014:	2000cedc 	.word	0x2000cedc
 8020018:	2000ced8 	.word	0x2000ced8
 802001c:	20008c94 	.word	0x20008c94
 8020020:	2000ced4 	.word	0x2000ced4
 8020024:	2000ced0 	.word	0x2000ced0
 8020028:	2000cecc 	.word	0x2000cecc
 802002c:	2000cec8 	.word	0x2000cec8
 8020030:	2000cec4 	.word	0x2000cec4
 8020034:	2000cec0 	.word	0x2000cec0
 8020038:	20008c90 	.word	0x20008c90
 802003c:	20008c8c 	.word	0x20008c8c
 8020040:	2000cebc 	.word	0x2000cebc
 8020044:	2000ceb8 	.word	0x2000ceb8
 8020048:	20008c88 	.word	0x20008c88
 802004c:	20008c84 	.word	0x20008c84
 8020050:	20008c80 	.word	0x20008c80
 8020054:	20008c7c 	.word	0x20008c7c
 8020058:	2000ceb4 	.word	0x2000ceb4
 802005c:	2000ceb0 	.word	0x2000ceb0
 8020060:	2000ceac 	.word	0x2000ceac
 8020064:	20008c78 	.word	0x20008c78
 8020068:	2000cea8 	.word	0x2000cea8
 802006c:	20008c74 	.word	0x20008c74
 8020070:	2000cea4 	.word	0x2000cea4
 8020074:	2000cea0 	.word	0x2000cea0
 8020078:	20008c70 	.word	0x20008c70
 802007c:	2000ce9c 	.word	0x2000ce9c
 8020080:	2000ce98 	.word	0x2000ce98
 8020084:	2000ce94 	.word	0x2000ce94
 8020088:	2000ce90 	.word	0x2000ce90
 802008c:	2000ce8c 	.word	0x2000ce8c
 8020090:	d57f      	bpl.n	8020192 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x45e>
 8020092:	4b9e      	ldr	r3, [pc, #632]	@ (802030c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5d8>)
 8020094:	681a      	ldr	r2, [r3, #0]
 8020096:	07d5      	lsls	r5, r2, #31
 8020098:	d570      	bpl.n	802017c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x448>
 802009a:	4b9d      	ldr	r3, [pc, #628]	@ (8020310 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5dc>)
 802009c:	681a      	ldr	r2, [r3, #0]
 802009e:	07d4      	lsls	r4, r2, #31
 80200a0:	d561      	bpl.n	8020166 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x432>
 80200a2:	4b9c      	ldr	r3, [pc, #624]	@ (8020314 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5e0>)
 80200a4:	681a      	ldr	r2, [r3, #0]
 80200a6:	f012 0201 	ands.w	r2, r2, #1
 80200aa:	d047      	beq.n	802013c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x408>
 80200ac:	4b9a      	ldr	r3, [pc, #616]	@ (8020318 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5e4>)
 80200ae:	681a      	ldr	r2, [r3, #0]
 80200b0:	f012 0201 	ands.w	r2, r2, #1
 80200b4:	d02d      	beq.n	8020112 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x3de>
 80200b6:	4b99      	ldr	r3, [pc, #612]	@ (802031c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5e8>)
 80200b8:	681a      	ldr	r2, [r3, #0]
 80200ba:	07d0      	lsls	r0, r2, #31
 80200bc:	d51e      	bpl.n	80200fc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x3c8>
 80200be:	4b98      	ldr	r3, [pc, #608]	@ (8020320 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5ec>)
 80200c0:	681a      	ldr	r2, [r3, #0]
 80200c2:	07d1      	lsls	r1, r2, #31
 80200c4:	d50f      	bpl.n	80200e6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x3b2>
 80200c6:	4b97      	ldr	r3, [pc, #604]	@ (8020324 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5f0>)
 80200c8:	681a      	ldr	r2, [r3, #0]
 80200ca:	07d2      	lsls	r2, r2, #31
 80200cc:	d500      	bpl.n	80200d0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x39c>
 80200ce:	bd38      	pop	{r3, r4, r5, pc}
 80200d0:	2001      	movs	r0, #1
 80200d2:	6018      	str	r0, [r3, #0]
 80200d4:	2214      	movs	r2, #20
 80200d6:	4994      	ldr	r1, [pc, #592]	@ (8020328 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5f4>)
 80200d8:	4894      	ldr	r0, [pc, #592]	@ (802032c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5f8>)
 80200da:	f7f3 ffdb 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80200de:	4a93      	ldr	r2, [pc, #588]	@ (802032c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5f8>)
 80200e0:	4b93      	ldr	r3, [pc, #588]	@ (8020330 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5fc>)
 80200e2:	6013      	str	r3, [r2, #0]
 80200e4:	bd38      	pop	{r3, r4, r5, pc}
 80200e6:	2001      	movs	r0, #1
 80200e8:	6018      	str	r0, [r3, #0]
 80200ea:	2202      	movs	r2, #2
 80200ec:	4991      	ldr	r1, [pc, #580]	@ (8020334 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x600>)
 80200ee:	4892      	ldr	r0, [pc, #584]	@ (8020338 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x604>)
 80200f0:	f7f3 ffd0 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80200f4:	4a90      	ldr	r2, [pc, #576]	@ (8020338 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x604>)
 80200f6:	4b91      	ldr	r3, [pc, #580]	@ (802033c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x608>)
 80200f8:	6013      	str	r3, [r2, #0]
 80200fa:	e7e4      	b.n	80200c6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x392>
 80200fc:	2001      	movs	r0, #1
 80200fe:	6018      	str	r0, [r3, #0]
 8020100:	2202      	movs	r2, #2
 8020102:	498f      	ldr	r1, [pc, #572]	@ (8020340 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x60c>)
 8020104:	488f      	ldr	r0, [pc, #572]	@ (8020344 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x610>)
 8020106:	f7f3 ffc5 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802010a:	4a8e      	ldr	r2, [pc, #568]	@ (8020344 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x610>)
 802010c:	4b8e      	ldr	r3, [pc, #568]	@ (8020348 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x614>)
 802010e:	6013      	str	r3, [r2, #0]
 8020110:	e7d5      	b.n	80200be <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x38a>
 8020112:	4c8e      	ldr	r4, [pc, #568]	@ (802034c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x618>)
 8020114:	488e      	ldr	r0, [pc, #568]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 8020116:	4d8f      	ldr	r5, [pc, #572]	@ (8020354 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x620>)
 8020118:	2101      	movs	r1, #1
 802011a:	6019      	str	r1, [r3, #0]
 802011c:	e9c4 5000 	strd	r5, r0, [r4]
 8020120:	498d      	ldr	r1, [pc, #564]	@ (8020358 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x624>)
 8020122:	f104 0008 	add.w	r0, r4, #8
 8020126:	f7f3 ffb5 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802012a:	4b8c      	ldr	r3, [pc, #560]	@ (802035c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x628>)
 802012c:	f103 0118 	add.w	r1, r3, #24
 8020130:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020134:	e9c4 3100 	strd	r3, r1, [r4]
 8020138:	60a2      	str	r2, [r4, #8]
 802013a:	e7bc      	b.n	80200b6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x382>
 802013c:	4c88      	ldr	r4, [pc, #544]	@ (8020360 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x62c>)
 802013e:	4884      	ldr	r0, [pc, #528]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 8020140:	4d84      	ldr	r5, [pc, #528]	@ (8020354 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x620>)
 8020142:	2101      	movs	r1, #1
 8020144:	6019      	str	r1, [r3, #0]
 8020146:	e9c4 5000 	strd	r5, r0, [r4]
 802014a:	4986      	ldr	r1, [pc, #536]	@ (8020364 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x630>)
 802014c:	f104 0008 	add.w	r0, r4, #8
 8020150:	f7f3 ffa0 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020154:	4b84      	ldr	r3, [pc, #528]	@ (8020368 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x634>)
 8020156:	f103 0118 	add.w	r1, r3, #24
 802015a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 802015e:	e9c4 3100 	strd	r3, r1, [r4]
 8020162:	60a2      	str	r2, [r4, #8]
 8020164:	e7a2      	b.n	80200ac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x378>
 8020166:	2001      	movs	r0, #1
 8020168:	6018      	str	r0, [r3, #0]
 802016a:	2211      	movs	r2, #17
 802016c:	497f      	ldr	r1, [pc, #508]	@ (802036c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x638>)
 802016e:	4880      	ldr	r0, [pc, #512]	@ (8020370 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x63c>)
 8020170:	f7f3 ff90 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020174:	4a7e      	ldr	r2, [pc, #504]	@ (8020370 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x63c>)
 8020176:	4b7f      	ldr	r3, [pc, #508]	@ (8020374 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x640>)
 8020178:	6013      	str	r3, [r2, #0]
 802017a:	e792      	b.n	80200a2 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x36e>
 802017c:	2001      	movs	r0, #1
 802017e:	6018      	str	r0, [r3, #0]
 8020180:	2202      	movs	r2, #2
 8020182:	497d      	ldr	r1, [pc, #500]	@ (8020378 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x644>)
 8020184:	487d      	ldr	r0, [pc, #500]	@ (802037c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x648>)
 8020186:	f7f3 ff85 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802018a:	4a7c      	ldr	r2, [pc, #496]	@ (802037c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x648>)
 802018c:	4b7c      	ldr	r3, [pc, #496]	@ (8020380 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x64c>)
 802018e:	6013      	str	r3, [r2, #0]
 8020190:	e783      	b.n	802009a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x366>
 8020192:	2001      	movs	r0, #1
 8020194:	6018      	str	r0, [r3, #0]
 8020196:	2206      	movs	r2, #6
 8020198:	497a      	ldr	r1, [pc, #488]	@ (8020384 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x650>)
 802019a:	487b      	ldr	r0, [pc, #492]	@ (8020388 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x654>)
 802019c:	f7f3 ff7a 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80201a0:	4a79      	ldr	r2, [pc, #484]	@ (8020388 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x654>)
 80201a2:	4b7a      	ldr	r3, [pc, #488]	@ (802038c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x658>)
 80201a4:	6013      	str	r3, [r2, #0]
 80201a6:	e774      	b.n	8020092 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x35e>
 80201a8:	2201      	movs	r2, #1
 80201aa:	4979      	ldr	r1, [pc, #484]	@ (8020390 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x65c>)
 80201ac:	4879      	ldr	r0, [pc, #484]	@ (8020394 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x660>)
 80201ae:	601a      	str	r2, [r3, #0]
 80201b0:	f7f3 ff70 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80201b4:	4a77      	ldr	r2, [pc, #476]	@ (8020394 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x660>)
 80201b6:	4b78      	ldr	r3, [pc, #480]	@ (8020398 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x664>)
 80201b8:	6013      	str	r3, [r2, #0]
 80201ba:	e6f0      	b.n	801ff9e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x26a>
 80201bc:	2001      	movs	r0, #1
 80201be:	6018      	str	r0, [r3, #0]
 80201c0:	2203      	movs	r2, #3
 80201c2:	4976      	ldr	r1, [pc, #472]	@ (802039c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x668>)
 80201c4:	4876      	ldr	r0, [pc, #472]	@ (80203a0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x66c>)
 80201c6:	f7f3 ff65 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80201ca:	4a75      	ldr	r2, [pc, #468]	@ (80203a0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x66c>)
 80201cc:	4b75      	ldr	r3, [pc, #468]	@ (80203a4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x670>)
 80201ce:	6013      	str	r3, [r2, #0]
 80201d0:	e6e0      	b.n	801ff94 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x260>
 80201d2:	2001      	movs	r0, #1
 80201d4:	6018      	str	r0, [r3, #0]
 80201d6:	2205      	movs	r2, #5
 80201d8:	4973      	ldr	r1, [pc, #460]	@ (80203a8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x674>)
 80201da:	4874      	ldr	r0, [pc, #464]	@ (80203ac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x678>)
 80201dc:	f7f3 ff5a 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80201e0:	4a72      	ldr	r2, [pc, #456]	@ (80203ac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x678>)
 80201e2:	4b73      	ldr	r3, [pc, #460]	@ (80203b0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x67c>)
 80201e4:	6013      	str	r3, [r2, #0]
 80201e6:	e6d0      	b.n	801ff8a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x256>
 80201e8:	2001      	movs	r0, #1
 80201ea:	6018      	str	r0, [r3, #0]
 80201ec:	2203      	movs	r2, #3
 80201ee:	4971      	ldr	r1, [pc, #452]	@ (80203b4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x680>)
 80201f0:	4871      	ldr	r0, [pc, #452]	@ (80203b8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x684>)
 80201f2:	f7f3 ff4f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80201f6:	4a70      	ldr	r2, [pc, #448]	@ (80203b8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x684>)
 80201f8:	4b70      	ldr	r3, [pc, #448]	@ (80203bc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x688>)
 80201fa:	6013      	str	r3, [r2, #0]
 80201fc:	e6c0      	b.n	801ff80 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x24c>
 80201fe:	4c70      	ldr	r4, [pc, #448]	@ (80203c0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x68c>)
 8020200:	4853      	ldr	r0, [pc, #332]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 8020202:	4d54      	ldr	r5, [pc, #336]	@ (8020354 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x620>)
 8020204:	2101      	movs	r1, #1
 8020206:	6019      	str	r1, [r3, #0]
 8020208:	e9c4 5000 	strd	r5, r0, [r4]
 802020c:	496d      	ldr	r1, [pc, #436]	@ (80203c4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x690>)
 802020e:	f104 0008 	add.w	r0, r4, #8
 8020212:	f7f3 ff3f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020216:	4b6c      	ldr	r3, [pc, #432]	@ (80203c8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x694>)
 8020218:	f103 0118 	add.w	r1, r3, #24
 802021c:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020220:	e9c4 3100 	strd	r3, r1, [r4]
 8020224:	60a2      	str	r2, [r4, #8]
 8020226:	e6a6      	b.n	801ff76 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x242>
 8020228:	2001      	movs	r0, #1
 802022a:	6018      	str	r0, [r3, #0]
 802022c:	2213      	movs	r2, #19
 802022e:	4967      	ldr	r1, [pc, #412]	@ (80203cc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x698>)
 8020230:	4867      	ldr	r0, [pc, #412]	@ (80203d0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x69c>)
 8020232:	f7f3 ff2f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020236:	4a66      	ldr	r2, [pc, #408]	@ (80203d0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x69c>)
 8020238:	4b66      	ldr	r3, [pc, #408]	@ (80203d4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6a0>)
 802023a:	6013      	str	r3, [r2, #0]
 802023c:	e695      	b.n	801ff6a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x236>
 802023e:	2001      	movs	r0, #1
 8020240:	6018      	str	r0, [r3, #0]
 8020242:	2212      	movs	r2, #18
 8020244:	4964      	ldr	r1, [pc, #400]	@ (80203d8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6a4>)
 8020246:	4865      	ldr	r0, [pc, #404]	@ (80203dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6a8>)
 8020248:	f7f3 ff24 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802024c:	4a63      	ldr	r2, [pc, #396]	@ (80203dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6a8>)
 802024e:	4b64      	ldr	r3, [pc, #400]	@ (80203e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6ac>)
 8020250:	6013      	str	r3, [r2, #0]
 8020252:	e685      	b.n	801ff60 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x22c>
 8020254:	4c63      	ldr	r4, [pc, #396]	@ (80203e4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6b0>)
 8020256:	483e      	ldr	r0, [pc, #248]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 8020258:	4d3e      	ldr	r5, [pc, #248]	@ (8020354 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x620>)
 802025a:	2101      	movs	r1, #1
 802025c:	6019      	str	r1, [r3, #0]
 802025e:	e9c4 5000 	strd	r5, r0, [r4]
 8020262:	4961      	ldr	r1, [pc, #388]	@ (80203e8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6b4>)
 8020264:	f104 0008 	add.w	r0, r4, #8
 8020268:	f7f3 ff14 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802026c:	4b5f      	ldr	r3, [pc, #380]	@ (80203ec <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6b8>)
 802026e:	f103 0118 	add.w	r1, r3, #24
 8020272:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020276:	e9c4 3100 	strd	r3, r1, [r4]
 802027a:	60a2      	str	r2, [r4, #8]
 802027c:	e66b      	b.n	801ff56 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x222>
 802027e:	485c      	ldr	r0, [pc, #368]	@ (80203f0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6bc>)
 8020280:	4c33      	ldr	r4, [pc, #204]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 8020282:	f840 4b04 	str.w	r4, [r0], #4
 8020286:	2101      	movs	r1, #1
 8020288:	6019      	str	r1, [r3, #0]
 802028a:	495a      	ldr	r1, [pc, #360]	@ (80203f4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6c0>)
 802028c:	f7f3 ff02 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020290:	4b59      	ldr	r3, [pc, #356]	@ (80203f8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6c4>)
 8020292:	4957      	ldr	r1, [pc, #348]	@ (80203f0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6bc>)
 8020294:	f103 0214 	add.w	r2, r3, #20
 8020298:	e9c1 3200 	strd	r3, r2, [r1]
 802029c:	e655      	b.n	801ff4a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x216>
 802029e:	4c57      	ldr	r4, [pc, #348]	@ (80203fc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6c8>)
 80202a0:	482b      	ldr	r0, [pc, #172]	@ (8020350 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x61c>)
 80202a2:	4d2c      	ldr	r5, [pc, #176]	@ (8020354 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x620>)
 80202a4:	2101      	movs	r1, #1
 80202a6:	6019      	str	r1, [r3, #0]
 80202a8:	e9c4 5000 	strd	r5, r0, [r4]
 80202ac:	4954      	ldr	r1, [pc, #336]	@ (8020400 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6cc>)
 80202ae:	f104 0008 	add.w	r0, r4, #8
 80202b2:	f7f3 feef 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80202b6:	4b53      	ldr	r3, [pc, #332]	@ (8020404 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6d0>)
 80202b8:	f103 0118 	add.w	r1, r3, #24
 80202bc:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 80202c0:	e9c4 3100 	strd	r3, r1, [r4]
 80202c4:	60a2      	str	r2, [r4, #8]
 80202c6:	e63a      	b.n	801ff3e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x20a>
 80202c8:	2001      	movs	r0, #1
 80202ca:	6018      	str	r0, [r3, #0]
 80202cc:	220b      	movs	r2, #11
 80202ce:	494e      	ldr	r1, [pc, #312]	@ (8020408 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6d4>)
 80202d0:	484e      	ldr	r0, [pc, #312]	@ (802040c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6d8>)
 80202d2:	f7f3 fedf 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80202d6:	4a4d      	ldr	r2, [pc, #308]	@ (802040c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6d8>)
 80202d8:	4b4d      	ldr	r3, [pc, #308]	@ (8020410 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6dc>)
 80202da:	6013      	str	r3, [r2, #0]
 80202dc:	e629      	b.n	801ff32 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1fe>
 80202de:	2001      	movs	r0, #1
 80202e0:	6018      	str	r0, [r3, #0]
 80202e2:	2217      	movs	r2, #23
 80202e4:	494b      	ldr	r1, [pc, #300]	@ (8020414 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6e0>)
 80202e6:	484c      	ldr	r0, [pc, #304]	@ (8020418 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6e4>)
 80202e8:	f7f3 fed4 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80202ec:	4a4a      	ldr	r2, [pc, #296]	@ (8020418 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6e4>)
 80202ee:	4b4b      	ldr	r3, [pc, #300]	@ (802041c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6e8>)
 80202f0:	6013      	str	r3, [r2, #0]
 80202f2:	e619      	b.n	801ff28 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1f4>
 80202f4:	2001      	movs	r0, #1
 80202f6:	6018      	str	r0, [r3, #0]
 80202f8:	2207      	movs	r2, #7
 80202fa:	4949      	ldr	r1, [pc, #292]	@ (8020420 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6ec>)
 80202fc:	4849      	ldr	r0, [pc, #292]	@ (8020424 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6f0>)
 80202fe:	f7f3 fec9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020302:	4a48      	ldr	r2, [pc, #288]	@ (8020424 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6f0>)
 8020304:	4b48      	ldr	r3, [pc, #288]	@ (8020428 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x6f4>)
 8020306:	6013      	str	r3, [r2, #0]
 8020308:	e609      	b.n	801ff1e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1ea>
 802030a:	bf00      	nop
 802030c:	2000ce88 	.word	0x2000ce88
 8020310:	2000ce84 	.word	0x2000ce84
 8020314:	20008c6c 	.word	0x20008c6c
 8020318:	20008c68 	.word	0x20008c68
 802031c:	2000ce80 	.word	0x2000ce80
 8020320:	2000ce7c 	.word	0x2000ce7c
 8020324:	2000ce78 	.word	0x2000ce78
 8020328:	08035dfc 	.word	0x08035dfc
 802032c:	2000cf24 	.word	0x2000cf24
 8020330:	08036ad8 	.word	0x08036ad8
 8020334:	0803552c 	.word	0x0803552c
 8020338:	2000cf30 	.word	0x2000cf30
 802033c:	08036da0 	.word	0x08036da0
 8020340:	0803551c 	.word	0x0803551c
 8020344:	2000cf3c 	.word	0x2000cf3c
 8020348:	08036dac 	.word	0x08036dac
 802034c:	20008cb8 	.word	0x20008cb8
 8020350:	0802bb54 	.word	0x0802bb54
 8020354:	0802bb64 	.word	0x0802bb64
 8020358:	0802b2d8 	.word	0x0802b2d8
 802035c:	0802bf4c 	.word	0x0802bf4c
 8020360:	20008ccc 	.word	0x20008ccc
 8020364:	0802b2d8 	.word	0x0802b2d8
 8020368:	0802bf18 	.word	0x0802bf18
 802036c:	08035bec 	.word	0x08035bec
 8020370:	2000cf48 	.word	0x2000cf48
 8020374:	08036bc0 	.word	0x08036bc0
 8020378:	0803556c 	.word	0x0803556c
 802037c:	2000cf54 	.word	0x2000cf54
 8020380:	08036d88 	.word	0x08036d88
 8020384:	0803553c 	.word	0x0803553c
 8020388:	2000cf60 	.word	0x2000cf60
 802038c:	08036d94 	.word	0x08036d94
 8020390:	08035594 	.word	0x08035594
 8020394:	2000cf6c 	.word	0x2000cf6c
 8020398:	08036d70 	.word	0x08036d70
 802039c:	0803557c 	.word	0x0803557c
 80203a0:	2000cf78 	.word	0x2000cf78
 80203a4:	08036d7c 	.word	0x08036d7c
 80203a8:	080355b4 	.word	0x080355b4
 80203ac:	2000cf84 	.word	0x2000cf84
 80203b0:	08036d58 	.word	0x08036d58
 80203b4:	0803559c 	.word	0x0803559c
 80203b8:	2000cf90 	.word	0x2000cf90
 80203bc:	08036d64 	.word	0x08036d64
 80203c0:	20008ce0 	.word	0x20008ce0
 80203c4:	0802b2d8 	.word	0x0802b2d8
 80203c8:	0802bee4 	.word	0x0802bee4
 80203cc:	0803566c 	.word	0x0803566c
 80203d0:	2000cf9c 	.word	0x2000cf9c
 80203d4:	08036d20 	.word	0x08036d20
 80203d8:	080355dc 	.word	0x080355dc
 80203dc:	2000cfa8 	.word	0x2000cfa8
 80203e0:	08036d4c 	.word	0x08036d4c
 80203e4:	20008cf4 	.word	0x20008cf4
 80203e8:	0802b2d8 	.word	0x0802b2d8
 80203ec:	0802beb0 	.word	0x0802beb0
 80203f0:	2000cfb4 	.word	0x2000cfb4
 80203f4:	0803566c 	.word	0x0803566c
 80203f8:	08036d2c 	.word	0x08036d2c
 80203fc:	20008d08 	.word	0x20008d08
 8020400:	0802b2d8 	.word	0x0802b2d8
 8020404:	0802be7c 	.word	0x0802be7c
 8020408:	080357f4 	.word	0x080357f4
 802040c:	2000cfc4 	.word	0x2000cfc4
 8020410:	08036cfc 	.word	0x08036cfc
 8020414:	0803573c 	.word	0x0803573c
 8020418:	2000cfd0 	.word	0x2000cfd0
 802041c:	08036d08 	.word	0x08036d08
 8020420:	08035704 	.word	0x08035704
 8020424:	2000cfdc 	.word	0x2000cfdc
 8020428:	08036d14 	.word	0x08036d14
 802042c:	4caa      	ldr	r4, [pc, #680]	@ (80206d8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a4>)
 802042e:	48ab      	ldr	r0, [pc, #684]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 8020430:	4dab      	ldr	r5, [pc, #684]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 8020432:	2101      	movs	r1, #1
 8020434:	6019      	str	r1, [r3, #0]
 8020436:	e9c4 5000 	strd	r5, r0, [r4]
 802043a:	49aa      	ldr	r1, [pc, #680]	@ (80206e4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9b0>)
 802043c:	f104 0008 	add.w	r0, r4, #8
 8020440:	f7f3 fe28 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020444:	4ba8      	ldr	r3, [pc, #672]	@ (80206e8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9b4>)
 8020446:	f103 0118 	add.w	r1, r3, #24
 802044a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 802044e:	e9c4 3100 	strd	r3, r1, [r4]
 8020452:	60a2      	str	r2, [r4, #8]
 8020454:	e55e      	b.n	801ff14 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1e0>
 8020456:	4ca5      	ldr	r4, [pc, #660]	@ (80206ec <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9b8>)
 8020458:	48a0      	ldr	r0, [pc, #640]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 802045a:	4da1      	ldr	r5, [pc, #644]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 802045c:	2101      	movs	r1, #1
 802045e:	6019      	str	r1, [r3, #0]
 8020460:	e9c4 5000 	strd	r5, r0, [r4]
 8020464:	49a2      	ldr	r1, [pc, #648]	@ (80206f0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9bc>)
 8020466:	f104 0008 	add.w	r0, r4, #8
 802046a:	f7f3 fe13 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802046e:	4ba1      	ldr	r3, [pc, #644]	@ (80206f4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9c0>)
 8020470:	f103 0118 	add.w	r1, r3, #24
 8020474:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020478:	e9c4 3100 	strd	r3, r1, [r4]
 802047c:	60a2      	str	r2, [r4, #8]
 802047e:	e543      	b.n	801ff08 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1d4>
 8020480:	4c9d      	ldr	r4, [pc, #628]	@ (80206f8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9c4>)
 8020482:	4896      	ldr	r0, [pc, #600]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 8020484:	4d96      	ldr	r5, [pc, #600]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 8020486:	2101      	movs	r1, #1
 8020488:	6019      	str	r1, [r3, #0]
 802048a:	e9c4 5000 	strd	r5, r0, [r4]
 802048e:	499b      	ldr	r1, [pc, #620]	@ (80206fc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9c8>)
 8020490:	f104 0008 	add.w	r0, r4, #8
 8020494:	f7f3 fdfe 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020498:	4b99      	ldr	r3, [pc, #612]	@ (8020700 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9cc>)
 802049a:	f103 0118 	add.w	r1, r3, #24
 802049e:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 80204a2:	e9c4 3100 	strd	r3, r1, [r4]
 80204a6:	60a2      	str	r2, [r4, #8]
 80204a8:	e528      	b.n	801fefc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1c8>
 80204aa:	4c96      	ldr	r4, [pc, #600]	@ (8020704 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9d0>)
 80204ac:	488b      	ldr	r0, [pc, #556]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 80204ae:	4d8c      	ldr	r5, [pc, #560]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 80204b0:	2101      	movs	r1, #1
 80204b2:	6019      	str	r1, [r3, #0]
 80204b4:	e9c4 5000 	strd	r5, r0, [r4]
 80204b8:	4993      	ldr	r1, [pc, #588]	@ (8020708 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9d4>)
 80204ba:	f104 0008 	add.w	r0, r4, #8
 80204be:	f7f3 fde9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80204c2:	4b92      	ldr	r3, [pc, #584]	@ (802070c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9d8>)
 80204c4:	f103 0118 	add.w	r1, r3, #24
 80204c8:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 80204cc:	e9c4 3100 	strd	r3, r1, [r4]
 80204d0:	60a2      	str	r2, [r4, #8]
 80204d2:	e50d      	b.n	801fef0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1bc>
 80204d4:	2001      	movs	r0, #1
 80204d6:	6018      	str	r0, [r3, #0]
 80204d8:	220d      	movs	r2, #13
 80204da:	498d      	ldr	r1, [pc, #564]	@ (8020710 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9dc>)
 80204dc:	488d      	ldr	r0, [pc, #564]	@ (8020714 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9e0>)
 80204de:	f7f3 fdd9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80204e2:	4a8c      	ldr	r2, [pc, #560]	@ (8020714 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9e0>)
 80204e4:	4b8c      	ldr	r3, [pc, #560]	@ (8020718 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9e4>)
 80204e6:	6013      	str	r3, [r2, #0]
 80204e8:	e4fc      	b.n	801fee4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1b0>
 80204ea:	2001      	movs	r0, #1
 80204ec:	6018      	str	r0, [r3, #0]
 80204ee:	2216      	movs	r2, #22
 80204f0:	498a      	ldr	r1, [pc, #552]	@ (802071c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9e8>)
 80204f2:	488b      	ldr	r0, [pc, #556]	@ (8020720 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ec>)
 80204f4:	f7f3 fdce 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80204f8:	4a89      	ldr	r2, [pc, #548]	@ (8020720 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ec>)
 80204fa:	4b8a      	ldr	r3, [pc, #552]	@ (8020724 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9f0>)
 80204fc:	6013      	str	r3, [r2, #0]
 80204fe:	e4ec      	b.n	801feda <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x1a6>
 8020500:	4c89      	ldr	r4, [pc, #548]	@ (8020728 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9f4>)
 8020502:	4876      	ldr	r0, [pc, #472]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 8020504:	4d76      	ldr	r5, [pc, #472]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 8020506:	2101      	movs	r1, #1
 8020508:	6019      	str	r1, [r3, #0]
 802050a:	e9c4 5000 	strd	r5, r0, [r4]
 802050e:	4987      	ldr	r1, [pc, #540]	@ (802072c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9f8>)
 8020510:	f104 0008 	add.w	r0, r4, #8
 8020514:	f7f3 fdbe 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020518:	4b85      	ldr	r3, [pc, #532]	@ (8020730 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9fc>)
 802051a:	f103 0118 	add.w	r1, r3, #24
 802051e:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020522:	e9c4 3100 	strd	r3, r1, [r4]
 8020526:	60a2      	str	r2, [r4, #8]
 8020528:	e4d2      	b.n	801fed0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x19c>
 802052a:	4c82      	ldr	r4, [pc, #520]	@ (8020734 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa00>)
 802052c:	486b      	ldr	r0, [pc, #428]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 802052e:	4d6c      	ldr	r5, [pc, #432]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 8020530:	2101      	movs	r1, #1
 8020532:	6019      	str	r1, [r3, #0]
 8020534:	e9c4 5000 	strd	r5, r0, [r4]
 8020538:	497f      	ldr	r1, [pc, #508]	@ (8020738 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa04>)
 802053a:	f104 0008 	add.w	r0, r4, #8
 802053e:	f7f3 fda9 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020542:	4b7e      	ldr	r3, [pc, #504]	@ (802073c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa08>)
 8020544:	f103 0118 	add.w	r1, r3, #24
 8020548:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 802054c:	e9c4 3100 	strd	r3, r1, [r4]
 8020550:	60a2      	str	r2, [r4, #8]
 8020552:	e4b7      	b.n	801fec4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x190>
 8020554:	2001      	movs	r0, #1
 8020556:	6018      	str	r0, [r3, #0]
 8020558:	220c      	movs	r2, #12
 802055a:	4979      	ldr	r1, [pc, #484]	@ (8020740 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa0c>)
 802055c:	4879      	ldr	r0, [pc, #484]	@ (8020744 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa10>)
 802055e:	f7f3 fd99 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020562:	4a78      	ldr	r2, [pc, #480]	@ (8020744 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa10>)
 8020564:	4b78      	ldr	r3, [pc, #480]	@ (8020748 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa14>)
 8020566:	6013      	str	r3, [r2, #0]
 8020568:	e4a6      	b.n	801feb8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x184>
 802056a:	4878      	ldr	r0, [pc, #480]	@ (802074c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa18>)
 802056c:	4c5b      	ldr	r4, [pc, #364]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 802056e:	f840 4b04 	str.w	r4, [r0], #4
 8020572:	2101      	movs	r1, #1
 8020574:	6019      	str	r1, [r3, #0]
 8020576:	4976      	ldr	r1, [pc, #472]	@ (8020750 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa1c>)
 8020578:	f7f3 fd8c 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802057c:	4b75      	ldr	r3, [pc, #468]	@ (8020754 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa20>)
 802057e:	4973      	ldr	r1, [pc, #460]	@ (802074c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa18>)
 8020580:	f103 0214 	add.w	r2, r3, #20
 8020584:	e9c1 3200 	strd	r3, r2, [r1]
 8020588:	e491      	b.n	801feae <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x17a>
 802058a:	2201      	movs	r2, #1
 802058c:	4972      	ldr	r1, [pc, #456]	@ (8020758 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa24>)
 802058e:	4873      	ldr	r0, [pc, #460]	@ (802075c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa28>)
 8020590:	601a      	str	r2, [r3, #0]
 8020592:	f7f3 fd7f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020596:	4a71      	ldr	r2, [pc, #452]	@ (802075c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa28>)
 8020598:	4b71      	ldr	r3, [pc, #452]	@ (8020760 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa2c>)
 802059a:	6013      	str	r3, [r2, #0]
 802059c:	e481      	b.n	801fea2 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x16e>
 802059e:	4871      	ldr	r0, [pc, #452]	@ (8020764 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa30>)
 80205a0:	4c4e      	ldr	r4, [pc, #312]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 80205a2:	f840 4b04 	str.w	r4, [r0], #4
 80205a6:	2101      	movs	r1, #1
 80205a8:	6019      	str	r1, [r3, #0]
 80205aa:	496f      	ldr	r1, [pc, #444]	@ (8020768 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa34>)
 80205ac:	f7f3 fd72 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80205b0:	4b6e      	ldr	r3, [pc, #440]	@ (802076c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa38>)
 80205b2:	496c      	ldr	r1, [pc, #432]	@ (8020764 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa30>)
 80205b4:	f103 0214 	add.w	r2, r3, #20
 80205b8:	e9c1 3200 	strd	r3, r2, [r1]
 80205bc:	e46c      	b.n	801fe98 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x164>
 80205be:	2001      	movs	r0, #1
 80205c0:	6018      	str	r0, [r3, #0]
 80205c2:	2211      	movs	r2, #17
 80205c4:	496a      	ldr	r1, [pc, #424]	@ (8020770 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa3c>)
 80205c6:	486b      	ldr	r0, [pc, #428]	@ (8020774 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa40>)
 80205c8:	f7f3 fd64 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80205cc:	4a69      	ldr	r2, [pc, #420]	@ (8020774 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa40>)
 80205ce:	4b6a      	ldr	r3, [pc, #424]	@ (8020778 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa44>)
 80205d0:	6013      	str	r3, [r2, #0]
 80205d2:	e45b      	b.n	801fe8c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x158>
 80205d4:	4869      	ldr	r0, [pc, #420]	@ (802077c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa48>)
 80205d6:	4c41      	ldr	r4, [pc, #260]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 80205d8:	f840 4b04 	str.w	r4, [r0], #4
 80205dc:	2101      	movs	r1, #1
 80205de:	6019      	str	r1, [r3, #0]
 80205e0:	4967      	ldr	r1, [pc, #412]	@ (8020780 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa4c>)
 80205e2:	f7f3 fd57 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80205e6:	4b67      	ldr	r3, [pc, #412]	@ (8020784 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa50>)
 80205e8:	4964      	ldr	r1, [pc, #400]	@ (802077c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa48>)
 80205ea:	f103 0214 	add.w	r2, r3, #20
 80205ee:	e9c1 3200 	strd	r3, r2, [r1]
 80205f2:	e446      	b.n	801fe82 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x14e>
 80205f4:	4c64      	ldr	r4, [pc, #400]	@ (8020788 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa54>)
 80205f6:	4839      	ldr	r0, [pc, #228]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 80205f8:	4d39      	ldr	r5, [pc, #228]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 80205fa:	2101      	movs	r1, #1
 80205fc:	6019      	str	r1, [r3, #0]
 80205fe:	e9c4 5000 	strd	r5, r0, [r4]
 8020602:	4962      	ldr	r1, [pc, #392]	@ (802078c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa58>)
 8020604:	f104 0008 	add.w	r0, r4, #8
 8020608:	f7f3 fd44 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802060c:	4b60      	ldr	r3, [pc, #384]	@ (8020790 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa5c>)
 802060e:	f103 0118 	add.w	r1, r3, #24
 8020612:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020616:	e9c4 3100 	strd	r3, r1, [r4]
 802061a:	60a2      	str	r2, [r4, #8]
 802061c:	e42b      	b.n	801fe76 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x142>
 802061e:	2001      	movs	r0, #1
 8020620:	6018      	str	r0, [r3, #0]
 8020622:	2203      	movs	r2, #3
 8020624:	495b      	ldr	r1, [pc, #364]	@ (8020794 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa60>)
 8020626:	485c      	ldr	r0, [pc, #368]	@ (8020798 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa64>)
 8020628:	f7f3 fd34 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802062c:	4a5a      	ldr	r2, [pc, #360]	@ (8020798 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa64>)
 802062e:	4b5b      	ldr	r3, [pc, #364]	@ (802079c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa68>)
 8020630:	6013      	str	r3, [r2, #0]
 8020632:	e41a      	b.n	801fe6a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x136>
 8020634:	2001      	movs	r0, #1
 8020636:	6018      	str	r0, [r3, #0]
 8020638:	2208      	movs	r2, #8
 802063a:	4959      	ldr	r1, [pc, #356]	@ (80207a0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa6c>)
 802063c:	4859      	ldr	r0, [pc, #356]	@ (80207a4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa70>)
 802063e:	f7f3 fd29 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020642:	4a58      	ldr	r2, [pc, #352]	@ (80207a4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa70>)
 8020644:	4b58      	ldr	r3, [pc, #352]	@ (80207a8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa74>)
 8020646:	6013      	str	r3, [r2, #0]
 8020648:	e40a      	b.n	801fe60 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x12c>
 802064a:	2001      	movs	r0, #1
 802064c:	6018      	str	r0, [r3, #0]
 802064e:	2203      	movs	r2, #3
 8020650:	4956      	ldr	r1, [pc, #344]	@ (80207ac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa78>)
 8020652:	4857      	ldr	r0, [pc, #348]	@ (80207b0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa7c>)
 8020654:	f7f3 fd1e 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020658:	4a55      	ldr	r2, [pc, #340]	@ (80207b0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa7c>)
 802065a:	4b56      	ldr	r3, [pc, #344]	@ (80207b4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa80>)
 802065c:	6013      	str	r3, [r2, #0]
 802065e:	f7ff bbfa 	b.w	801fe56 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x122>
 8020662:	2001      	movs	r0, #1
 8020664:	6018      	str	r0, [r3, #0]
 8020666:	2203      	movs	r2, #3
 8020668:	4953      	ldr	r1, [pc, #332]	@ (80207b8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa84>)
 802066a:	4854      	ldr	r0, [pc, #336]	@ (80207bc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa88>)
 802066c:	f7f3 fd12 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020670:	4a52      	ldr	r2, [pc, #328]	@ (80207bc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa88>)
 8020672:	4b53      	ldr	r3, [pc, #332]	@ (80207c0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa8c>)
 8020674:	6013      	str	r3, [r2, #0]
 8020676:	f7ff bbe9 	b.w	801fe4c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x118>
 802067a:	4c52      	ldr	r4, [pc, #328]	@ (80207c4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa90>)
 802067c:	4817      	ldr	r0, [pc, #92]	@ (80206dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9a8>)
 802067e:	4d18      	ldr	r5, [pc, #96]	@ (80206e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9ac>)
 8020680:	2101      	movs	r1, #1
 8020682:	6019      	str	r1, [r3, #0]
 8020684:	e9c4 5000 	strd	r5, r0, [r4]
 8020688:	494f      	ldr	r1, [pc, #316]	@ (80207c8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa94>)
 802068a:	f104 0008 	add.w	r0, r4, #8
 802068e:	f7f3 fd01 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020692:	4b4e      	ldr	r3, [pc, #312]	@ (80207cc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa98>)
 8020694:	f103 0118 	add.w	r1, r3, #24
 8020698:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 802069c:	e9c4 3100 	strd	r3, r1, [r4]
 80206a0:	60a2      	str	r2, [r4, #8]
 80206a2:	f7ff bbce 	b.w	801fe42 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x10e>
 80206a6:	2001      	movs	r0, #1
 80206a8:	6018      	str	r0, [r3, #0]
 80206aa:	2214      	movs	r2, #20
 80206ac:	4948      	ldr	r1, [pc, #288]	@ (80207d0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa9c>)
 80206ae:	4849      	ldr	r0, [pc, #292]	@ (80207d4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaa0>)
 80206b0:	f7f3 fcf0 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80206b4:	4a47      	ldr	r2, [pc, #284]	@ (80207d4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaa0>)
 80206b6:	4b48      	ldr	r3, [pc, #288]	@ (80207d8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaa4>)
 80206b8:	6013      	str	r3, [r2, #0]
 80206ba:	f7ff bbbc 	b.w	801fe36 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x102>
 80206be:	2001      	movs	r0, #1
 80206c0:	6018      	str	r0, [r3, #0]
 80206c2:	2209      	movs	r2, #9
 80206c4:	4945      	ldr	r1, [pc, #276]	@ (80207dc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaa8>)
 80206c6:	4846      	ldr	r0, [pc, #280]	@ (80207e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaac>)
 80206c8:	f7f3 fce4 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80206cc:	4a44      	ldr	r2, [pc, #272]	@ (80207e0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xaac>)
 80206ce:	4b45      	ldr	r3, [pc, #276]	@ (80207e4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xab0>)
 80206d0:	6013      	str	r3, [r2, #0]
 80206d2:	f7ff bbab 	b.w	801fe2c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xf8>
 80206d6:	bf00      	nop
 80206d8:	20008d1c 	.word	0x20008d1c
 80206dc:	0802bb54 	.word	0x0802bb54
 80206e0:	0802bb64 	.word	0x0802bb64
 80206e4:	0802b2d8 	.word	0x0802b2d8
 80206e8:	0802be48 	.word	0x0802be48
 80206ec:	20008d30 	.word	0x20008d30
 80206f0:	0802b2d8 	.word	0x0802b2d8
 80206f4:	0802be14 	.word	0x0802be14
 80206f8:	20008d44 	.word	0x20008d44
 80206fc:	0802b2d8 	.word	0x0802b2d8
 8020700:	0802bde0 	.word	0x0802bde0
 8020704:	20008d58 	.word	0x20008d58
 8020708:	0802b2d8 	.word	0x0802b2d8
 802070c:	0802bdac 	.word	0x0802bdac
 8020710:	080359ec 	.word	0x080359ec
 8020714:	2000cfe8 	.word	0x2000cfe8
 8020718:	08036c60 	.word	0x08036c60
 802071c:	0803584c 	.word	0x0803584c
 8020720:	2000cff4 	.word	0x2000cff4
 8020724:	08036cf0 	.word	0x08036cf0
 8020728:	20008d6c 	.word	0x20008d6c
 802072c:	0802b2d8 	.word	0x0802b2d8
 8020730:	0802bd78 	.word	0x0802bd78
 8020734:	20008d80 	.word	0x20008d80
 8020738:	0802b2d8 	.word	0x0802b2d8
 802073c:	0802bd44 	.word	0x0802bd44
 8020740:	080358fc 	.word	0x080358fc
 8020744:	2000d000 	.word	0x2000d000
 8020748:	08036cc4 	.word	0x08036cc4
 802074c:	2000d00c 	.word	0x2000d00c
 8020750:	080358fc 	.word	0x080358fc
 8020754:	08036cd0 	.word	0x08036cd0
 8020758:	0803595c 	.word	0x0803595c
 802075c:	2000d01c 	.word	0x2000d01c
 8020760:	08036c98 	.word	0x08036c98
 8020764:	2000d028 	.word	0x2000d028
 8020768:	0803595c 	.word	0x0803595c
 802076c:	08036ca4 	.word	0x08036ca4
 8020770:	08035964 	.word	0x08035964
 8020774:	2000d038 	.word	0x2000d038
 8020778:	08036c8c 	.word	0x08036c8c
 802077c:	2000d044 	.word	0x2000d044
 8020780:	080359ec 	.word	0x080359ec
 8020784:	08036c6c 	.word	0x08036c6c
 8020788:	20008d94 	.word	0x20008d94
 802078c:	0802b2d8 	.word	0x0802b2d8
 8020790:	0802bd10 	.word	0x0802bd10
 8020794:	08035a94 	.word	0x08035a94
 8020798:	2000d054 	.word	0x2000d054
 802079c:	08036c48 	.word	0x08036c48
 80207a0:	08035a54 	.word	0x08035a54
 80207a4:	2000d060 	.word	0x2000d060
 80207a8:	08036c54 	.word	0x08036c54
 80207ac:	08035ac4 	.word	0x08035ac4
 80207b0:	2000d06c 	.word	0x2000d06c
 80207b4:	08036c30 	.word	0x08036c30
 80207b8:	08035aac 	.word	0x08035aac
 80207bc:	2000d078 	.word	0x2000d078
 80207c0:	08036c3c 	.word	0x08036c3c
 80207c4:	20008da8 	.word	0x20008da8
 80207c8:	0802b2d8 	.word	0x0802b2d8
 80207cc:	0802bcdc 	.word	0x0802bcdc
 80207d0:	08035b4c 	.word	0x08035b4c
 80207d4:	2000d084 	.word	0x2000d084
 80207d8:	08036c0c 	.word	0x08036c0c
 80207dc:	08035adc 	.word	0x08035adc
 80207e0:	2000d090 	.word	0x2000d090
 80207e4:	08036c24 	.word	0x08036c24
 80207e8:	2001      	movs	r0, #1
 80207ea:	6018      	str	r0, [r3, #0]
 80207ec:	2205      	movs	r2, #5
 80207ee:	49ab      	ldr	r1, [pc, #684]	@ (8020a9c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd68>)
 80207f0:	48ab      	ldr	r0, [pc, #684]	@ (8020aa0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd6c>)
 80207f2:	f7f3 fc4f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80207f6:	4aaa      	ldr	r2, [pc, #680]	@ (8020aa0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd6c>)
 80207f8:	4baa      	ldr	r3, [pc, #680]	@ (8020aa4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd70>)
 80207fa:	6013      	str	r3, [r2, #0]
 80207fc:	f7ff bb11 	b.w	801fe22 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xee>
 8020800:	4ca9      	ldr	r4, [pc, #676]	@ (8020aa8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd74>)
 8020802:	48aa      	ldr	r0, [pc, #680]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020804:	4daa      	ldr	r5, [pc, #680]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 8020806:	2101      	movs	r1, #1
 8020808:	6019      	str	r1, [r3, #0]
 802080a:	e9c4 5000 	strd	r5, r0, [r4]
 802080e:	49a9      	ldr	r1, [pc, #676]	@ (8020ab4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd80>)
 8020810:	f104 0008 	add.w	r0, r4, #8
 8020814:	f7f3 fc3e 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020818:	4ba7      	ldr	r3, [pc, #668]	@ (8020ab8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd84>)
 802081a:	f103 0118 	add.w	r1, r3, #24
 802081e:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020822:	e9c4 3100 	strd	r3, r1, [r4]
 8020826:	60a2      	str	r2, [r4, #8]
 8020828:	f7ff baf6 	b.w	801fe18 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe4>
 802082c:	48a3      	ldr	r0, [pc, #652]	@ (8020abc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd88>)
 802082e:	4c9f      	ldr	r4, [pc, #636]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020830:	f840 4b04 	str.w	r4, [r0], #4
 8020834:	2101      	movs	r1, #1
 8020836:	6019      	str	r1, [r3, #0]
 8020838:	49a1      	ldr	r1, [pc, #644]	@ (8020ac0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd8c>)
 802083a:	f7f3 fc2b 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802083e:	4ba1      	ldr	r3, [pc, #644]	@ (8020ac4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd90>)
 8020840:	499e      	ldr	r1, [pc, #632]	@ (8020abc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd88>)
 8020842:	f103 0214 	add.w	r2, r3, #20
 8020846:	e9c1 3200 	strd	r3, r2, [r1]
 802084a:	f7ff badf 	b.w	801fe0c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd8>
 802084e:	4c9e      	ldr	r4, [pc, #632]	@ (8020ac8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd94>)
 8020850:	4896      	ldr	r0, [pc, #600]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020852:	4d97      	ldr	r5, [pc, #604]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 8020854:	2101      	movs	r1, #1
 8020856:	6019      	str	r1, [r3, #0]
 8020858:	e9c4 5000 	strd	r5, r0, [r4]
 802085c:	499b      	ldr	r1, [pc, #620]	@ (8020acc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd98>)
 802085e:	f104 0008 	add.w	r0, r4, #8
 8020862:	f7f3 fc17 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020866:	4b9a      	ldr	r3, [pc, #616]	@ (8020ad0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd9c>)
 8020868:	f103 0118 	add.w	r1, r3, #24
 802086c:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020870:	e9c4 3100 	strd	r3, r1, [r4]
 8020874:	60a2      	str	r2, [r4, #8]
 8020876:	f7ff bac3 	b.w	801fe00 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xcc>
 802087a:	4896      	ldr	r0, [pc, #600]	@ (8020ad4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xda0>)
 802087c:	4c8b      	ldr	r4, [pc, #556]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 802087e:	f840 4b04 	str.w	r4, [r0], #4
 8020882:	2101      	movs	r1, #1
 8020884:	6019      	str	r1, [r3, #0]
 8020886:	4994      	ldr	r1, [pc, #592]	@ (8020ad8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xda4>)
 8020888:	f7f3 fc04 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802088c:	4b93      	ldr	r3, [pc, #588]	@ (8020adc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xda8>)
 802088e:	4991      	ldr	r1, [pc, #580]	@ (8020ad4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xda0>)
 8020890:	f103 0214 	add.w	r2, r3, #20
 8020894:	e9c1 3200 	strd	r3, r2, [r1]
 8020898:	f7ff baac 	b.w	801fdf4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xc0>
 802089c:	4c90      	ldr	r4, [pc, #576]	@ (8020ae0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdac>)
 802089e:	4883      	ldr	r0, [pc, #524]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 80208a0:	4d83      	ldr	r5, [pc, #524]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 80208a2:	2101      	movs	r1, #1
 80208a4:	6019      	str	r1, [r3, #0]
 80208a6:	e9c4 5000 	strd	r5, r0, [r4]
 80208aa:	498e      	ldr	r1, [pc, #568]	@ (8020ae4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdb0>)
 80208ac:	f104 0008 	add.w	r0, r4, #8
 80208b0:	f7f3 fbf0 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80208b4:	4b8c      	ldr	r3, [pc, #560]	@ (8020ae8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdb4>)
 80208b6:	f103 0118 	add.w	r1, r3, #24
 80208ba:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 80208be:	e9c4 3100 	strd	r3, r1, [r4]
 80208c2:	60a2      	str	r2, [r4, #8]
 80208c4:	f7ff ba90 	b.w	801fde8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xb4>
 80208c8:	2001      	movs	r0, #1
 80208ca:	6018      	str	r0, [r3, #0]
 80208cc:	2213      	movs	r2, #19
 80208ce:	4987      	ldr	r1, [pc, #540]	@ (8020aec <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdb8>)
 80208d0:	4887      	ldr	r0, [pc, #540]	@ (8020af0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdbc>)
 80208d2:	f7f3 fbdf 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80208d6:	4a86      	ldr	r2, [pc, #536]	@ (8020af0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdbc>)
 80208d8:	4b86      	ldr	r3, [pc, #536]	@ (8020af4 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdc0>)
 80208da:	6013      	str	r3, [r2, #0]
 80208dc:	f7ff ba7e 	b.w	801fddc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xa8>
 80208e0:	2001      	movs	r0, #1
 80208e2:	6018      	str	r0, [r3, #0]
 80208e4:	2203      	movs	r2, #3
 80208e6:	4984      	ldr	r1, [pc, #528]	@ (8020af8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdc4>)
 80208e8:	4884      	ldr	r0, [pc, #528]	@ (8020afc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdc8>)
 80208ea:	f7f3 fbd3 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80208ee:	4a83      	ldr	r2, [pc, #524]	@ (8020afc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdc8>)
 80208f0:	4b83      	ldr	r3, [pc, #524]	@ (8020b00 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdcc>)
 80208f2:	6013      	str	r3, [r2, #0]
 80208f4:	f7ff ba6d 	b.w	801fdd2 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x9e>
 80208f8:	4c82      	ldr	r4, [pc, #520]	@ (8020b04 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdd0>)
 80208fa:	486c      	ldr	r0, [pc, #432]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 80208fc:	4d6c      	ldr	r5, [pc, #432]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 80208fe:	2101      	movs	r1, #1
 8020900:	6019      	str	r1, [r3, #0]
 8020902:	e9c4 5000 	strd	r5, r0, [r4]
 8020906:	4980      	ldr	r1, [pc, #512]	@ (8020b08 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdd4>)
 8020908:	f104 0008 	add.w	r0, r4, #8
 802090c:	f7f3 fbc2 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020910:	4b7e      	ldr	r3, [pc, #504]	@ (8020b0c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdd8>)
 8020912:	f103 0118 	add.w	r1, r3, #24
 8020916:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 802091a:	e9c4 3100 	strd	r3, r1, [r4]
 802091e:	60a2      	str	r2, [r4, #8]
 8020920:	f7ff ba52 	b.w	801fdc8 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x94>
 8020924:	4c7a      	ldr	r4, [pc, #488]	@ (8020b10 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xddc>)
 8020926:	4861      	ldr	r0, [pc, #388]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020928:	4d61      	ldr	r5, [pc, #388]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 802092a:	2101      	movs	r1, #1
 802092c:	6019      	str	r1, [r3, #0]
 802092e:	e9c4 5000 	strd	r5, r0, [r4]
 8020932:	4978      	ldr	r1, [pc, #480]	@ (8020b14 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xde0>)
 8020934:	f104 0008 	add.w	r0, r4, #8
 8020938:	f7f3 fbac 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802093c:	4b76      	ldr	r3, [pc, #472]	@ (8020b18 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xde4>)
 802093e:	f103 0118 	add.w	r1, r3, #24
 8020942:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020946:	e9c4 3100 	strd	r3, r1, [r4]
 802094a:	60a2      	str	r2, [r4, #8]
 802094c:	f7ff ba36 	b.w	801fdbc <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x88>
 8020950:	2001      	movs	r0, #1
 8020952:	6018      	str	r0, [r3, #0]
 8020954:	2214      	movs	r2, #20
 8020956:	4971      	ldr	r1, [pc, #452]	@ (8020b1c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xde8>)
 8020958:	4871      	ldr	r0, [pc, #452]	@ (8020b20 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdec>)
 802095a:	f7f3 fb9b 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802095e:	4a70      	ldr	r2, [pc, #448]	@ (8020b20 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdec>)
 8020960:	4b70      	ldr	r3, [pc, #448]	@ (8020b24 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdf0>)
 8020962:	6013      	str	r3, [r2, #0]
 8020964:	f7ff ba24 	b.w	801fdb0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x7c>
 8020968:	2001      	movs	r0, #1
 802096a:	6018      	str	r0, [r3, #0]
 802096c:	2204      	movs	r2, #4
 802096e:	496e      	ldr	r1, [pc, #440]	@ (8020b28 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdf4>)
 8020970:	486e      	ldr	r0, [pc, #440]	@ (8020b2c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdf8>)
 8020972:	f7f3 fb8f 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020976:	4a6d      	ldr	r2, [pc, #436]	@ (8020b2c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdf8>)
 8020978:	4b6d      	ldr	r3, [pc, #436]	@ (8020b30 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xdfc>)
 802097a:	6013      	str	r3, [r2, #0]
 802097c:	f7ff ba13 	b.w	801fda6 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x72>
 8020980:	2001      	movs	r0, #1
 8020982:	6018      	str	r0, [r3, #0]
 8020984:	2203      	movs	r2, #3
 8020986:	496b      	ldr	r1, [pc, #428]	@ (8020b34 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe00>)
 8020988:	486b      	ldr	r0, [pc, #428]	@ (8020b38 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe04>)
 802098a:	f7f3 fb83 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 802098e:	4a6a      	ldr	r2, [pc, #424]	@ (8020b38 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe04>)
 8020990:	4b6a      	ldr	r3, [pc, #424]	@ (8020b3c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe08>)
 8020992:	6013      	str	r3, [r2, #0]
 8020994:	f7ff ba02 	b.w	801fd9c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x68>
 8020998:	4869      	ldr	r0, [pc, #420]	@ (8020b40 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe0c>)
 802099a:	4c44      	ldr	r4, [pc, #272]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 802099c:	f840 4b04 	str.w	r4, [r0], #4
 80209a0:	2101      	movs	r1, #1
 80209a2:	6019      	str	r1, [r3, #0]
 80209a4:	4967      	ldr	r1, [pc, #412]	@ (8020b44 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe10>)
 80209a6:	f7f3 fb75 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80209aa:	4b67      	ldr	r3, [pc, #412]	@ (8020b48 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe14>)
 80209ac:	4964      	ldr	r1, [pc, #400]	@ (8020b40 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe0c>)
 80209ae:	f103 0214 	add.w	r2, r3, #20
 80209b2:	e9c1 3200 	strd	r3, r2, [r1]
 80209b6:	f7ff b9ec 	b.w	801fd92 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x5e>
 80209ba:	4c64      	ldr	r4, [pc, #400]	@ (8020b4c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe18>)
 80209bc:	483b      	ldr	r0, [pc, #236]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 80209be:	4d3c      	ldr	r5, [pc, #240]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 80209c0:	2101      	movs	r1, #1
 80209c2:	6019      	str	r1, [r3, #0]
 80209c4:	e9c4 5000 	strd	r5, r0, [r4]
 80209c8:	4961      	ldr	r1, [pc, #388]	@ (8020b50 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe1c>)
 80209ca:	f104 0008 	add.w	r0, r4, #8
 80209ce:	f7f3 fb61 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80209d2:	4b60      	ldr	r3, [pc, #384]	@ (8020b54 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe20>)
 80209d4:	f103 0118 	add.w	r1, r3, #24
 80209d8:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 80209dc:	e9c4 3100 	strd	r3, r1, [r4]
 80209e0:	60a2      	str	r2, [r4, #8]
 80209e2:	f7ff b9d0 	b.w	801fd86 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x52>
 80209e6:	485c      	ldr	r0, [pc, #368]	@ (8020b58 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe24>)
 80209e8:	4c30      	ldr	r4, [pc, #192]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 80209ea:	f840 4b04 	str.w	r4, [r0], #4
 80209ee:	2101      	movs	r1, #1
 80209f0:	6019      	str	r1, [r3, #0]
 80209f2:	495a      	ldr	r1, [pc, #360]	@ (8020b5c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe28>)
 80209f4:	f7f3 fb4e 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 80209f8:	4b59      	ldr	r3, [pc, #356]	@ (8020b60 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe2c>)
 80209fa:	4957      	ldr	r1, [pc, #348]	@ (8020b58 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe24>)
 80209fc:	f103 0214 	add.w	r2, r3, #20
 8020a00:	e9c1 3200 	strd	r3, r2, [r1]
 8020a04:	f7ff b9b9 	b.w	801fd7a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x46>
 8020a08:	4856      	ldr	r0, [pc, #344]	@ (8020b64 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe30>)
 8020a0a:	4c28      	ldr	r4, [pc, #160]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020a0c:	f840 4b04 	str.w	r4, [r0], #4
 8020a10:	2101      	movs	r1, #1
 8020a12:	6019      	str	r1, [r3, #0]
 8020a14:	4954      	ldr	r1, [pc, #336]	@ (8020b68 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe34>)
 8020a16:	f7f3 fb3d 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020a1a:	4b54      	ldr	r3, [pc, #336]	@ (8020b6c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe38>)
 8020a1c:	4951      	ldr	r1, [pc, #324]	@ (8020b64 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe30>)
 8020a1e:	f103 0214 	add.w	r2, r3, #20
 8020a22:	e9c1 3200 	strd	r3, r2, [r1]
 8020a26:	f7ff b9a2 	b.w	801fd6e <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x3a>
 8020a2a:	4851      	ldr	r0, [pc, #324]	@ (8020b70 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe3c>)
 8020a2c:	4c1f      	ldr	r4, [pc, #124]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020a2e:	f840 4b04 	str.w	r4, [r0], #4
 8020a32:	2101      	movs	r1, #1
 8020a34:	6019      	str	r1, [r3, #0]
 8020a36:	494f      	ldr	r1, [pc, #316]	@ (8020b74 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe40>)
 8020a38:	f7f3 fb2c 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020a3c:	4b4e      	ldr	r3, [pc, #312]	@ (8020b78 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe44>)
 8020a3e:	494c      	ldr	r1, [pc, #304]	@ (8020b70 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe3c>)
 8020a40:	f103 0214 	add.w	r2, r3, #20
 8020a44:	e9c1 3200 	strd	r3, r2, [r1]
 8020a48:	f7ff b98b 	b.w	801fd62 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x2e>
 8020a4c:	4c4b      	ldr	r4, [pc, #300]	@ (8020b7c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe48>)
 8020a4e:	4817      	ldr	r0, [pc, #92]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020a50:	4d17      	ldr	r5, [pc, #92]	@ (8020ab0 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd7c>)
 8020a52:	2101      	movs	r1, #1
 8020a54:	6019      	str	r1, [r3, #0]
 8020a56:	e9c4 5000 	strd	r5, r0, [r4]
 8020a5a:	4949      	ldr	r1, [pc, #292]	@ (8020b80 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe4c>)
 8020a5c:	f104 0008 	add.w	r0, r4, #8
 8020a60:	f7f3 fb18 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020a64:	4b47      	ldr	r3, [pc, #284]	@ (8020b84 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe50>)
 8020a66:	f103 0118 	add.w	r1, r3, #24
 8020a6a:	f103 0228 	add.w	r2, r3, #40	@ 0x28
 8020a6e:	e9c4 3100 	strd	r3, r1, [r4]
 8020a72:	60a2      	str	r2, [r4, #8]
 8020a74:	f7ff b96f 	b.w	801fd56 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x22>
 8020a78:	4843      	ldr	r0, [pc, #268]	@ (8020b88 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe54>)
 8020a7a:	4c0c      	ldr	r4, [pc, #48]	@ (8020aac <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xd78>)
 8020a7c:	f840 4b04 	str.w	r4, [r0], #4
 8020a80:	2101      	movs	r1, #1
 8020a82:	6019      	str	r1, [r3, #0]
 8020a84:	4941      	ldr	r1, [pc, #260]	@ (8020b8c <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe58>)
 8020a86:	f7f3 fb05 	bl	8014094 <TypeInfo::TypeInfo(PropertyInfo const*, unsigned int)>
 8020a8a:	4b41      	ldr	r3, [pc, #260]	@ (8020b90 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe5c>)
 8020a8c:	493e      	ldr	r1, [pc, #248]	@ (8020b88 <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0xe54>)
 8020a8e:	f103 0214 	add.w	r2, r3, #20
 8020a92:	e9c1 3200 	strd	r3, r2, [r1]
 8020a96:	f7ff b958 	b.w	801fd4a <_GLOBAL__sub_I__Z27ASCII_protocol_process_linePKhjR10StreamSink+0x16>
 8020a9a:	bf00      	nop
 8020a9c:	08035b24 	.word	0x08035b24
 8020aa0:	2000d09c 	.word	0x2000d09c
 8020aa4:	08036c18 	.word	0x08036c18
 8020aa8:	20008dbc 	.word	0x20008dbc
 8020aac:	0802bb54 	.word	0x0802bb54
 8020ab0:	0802bb64 	.word	0x0802bb64
 8020ab4:	0802b2d8 	.word	0x0802b2d8
 8020ab8:	0802bca8 	.word	0x0802bca8
 8020abc:	2000d0a8 	.word	0x2000d0a8
 8020ac0:	08035bec 	.word	0x08035bec
 8020ac4:	08036bec 	.word	0x08036bec
 8020ac8:	20008dd0 	.word	0x20008dd0
 8020acc:	0802b2d8 	.word	0x0802b2d8
 8020ad0:	0802bc74 	.word	0x0802bc74
 8020ad4:	2000d0b8 	.word	0x2000d0b8
 8020ad8:	08035bec 	.word	0x08035bec
 8020adc:	08036bcc 	.word	0x08036bcc
 8020ae0:	20008de4 	.word	0x20008de4
 8020ae4:	0802b2d8 	.word	0x0802b2d8
 8020ae8:	0802bc40 	.word	0x0802bc40
 8020aec:	08035c8c 	.word	0x08035c8c
 8020af0:	2000d0c8 	.word	0x2000d0c8
 8020af4:	08036ba8 	.word	0x08036ba8
 8020af8:	08035c74 	.word	0x08035c74
 8020afc:	2000d0d4 	.word	0x2000d0d4
 8020b00:	08036bb4 	.word	0x08036bb4
 8020b04:	20008df8 	.word	0x20008df8
 8020b08:	0802b2d8 	.word	0x0802b2d8
 8020b0c:	0802bc0c 	.word	0x0802bc0c
 8020b10:	20008e0c 	.word	0x20008e0c
 8020b14:	0802b2d8 	.word	0x0802b2d8
 8020b18:	0802bbd8 	.word	0x0802bbd8
 8020b1c:	08035d5c 	.word	0x08035d5c
 8020b20:	2000d0e0 	.word	0x2000d0e0
 8020b24:	08036b64 	.word	0x08036b64
 8020b28:	08035d24 	.word	0x08035d24
 8020b2c:	2000d0ec 	.word	0x2000d0ec
 8020b30:	08036b9c 	.word	0x08036b9c
 8020b34:	08035d44 	.word	0x08035d44
 8020b38:	2000d0f8 	.word	0x2000d0f8
 8020b3c:	08036b90 	.word	0x08036b90
 8020b40:	2000d104 	.word	0x2000d104
 8020b44:	08035d5c 	.word	0x08035d5c
 8020b48:	08036b70 	.word	0x08036b70
 8020b4c:	20008e20 	.word	0x20008e20
 8020b50:	0802b2d8 	.word	0x0802b2d8
 8020b54:	0802bba4 	.word	0x0802bba4
 8020b58:	2000d114 	.word	0x2000d114
 8020b5c:	08035dfc 	.word	0x08035dfc
 8020b60:	08036b44 	.word	0x08036b44
 8020b64:	2000d124 	.word	0x2000d124
 8020b68:	08035dfc 	.word	0x08035dfc
 8020b6c:	08036b24 	.word	0x08036b24
 8020b70:	2000d134 	.word	0x2000d134
 8020b74:	08035dfc 	.word	0x08035dfc
 8020b78:	08036b04 	.word	0x08036b04
 8020b7c:	20008e34 	.word	0x20008e34
 8020b80:	0802b2d8 	.word	0x0802b2d8
 8020b84:	0802bb70 	.word	0x0802bb70
 8020b88:	2000d144 	.word	0x2000d144
 8020b8c:	08035dfc 	.word	0x08035dfc
 8020b90:	08036ae4 	.word	0x08036ae4

08020b94 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)>:
 8020b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020b98:	460d      	mov	r5, r1
 8020b9a:	f5ad 7d4c 	sub.w	sp, sp, #816	@ 0x330
 8020b9e:	2900      	cmp	r1, #0
 8020ba0:	d057      	beq.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020ba2:	2300      	movs	r3, #0
 8020ba4:	4601      	mov	r1, r0
 8020ba6:	4616      	mov	r6, r2
 8020ba8:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
 8020bac:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8020bb0:	4698      	mov	r8, r3
 8020bb2:	e00a      	b.n	8020bca <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x36>
 8020bb4:	429f      	cmp	r7, r3
 8020bb6:	d905      	bls.n	8020bc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x30>
 8020bb8:	f1bc 0f2a 	cmp.w	ip, #42	@ 0x2a
 8020bbc:	bf14      	ite	ne
 8020bbe:	ea8c 0808 	eorne.w	r8, ip, r8
 8020bc2:	4627      	moveq	r7, r4
 8020bc4:	42a5      	cmp	r5, r4
 8020bc6:	d048      	beq.n	8020c5a <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xc6>
 8020bc8:	4623      	mov	r3, r4
 8020bca:	f81e cf01 	ldrb.w	ip, [lr, #1]!
 8020bce:	f1bc 0f3b 	cmp.w	ip, #59	@ 0x3b
 8020bd2:	f103 0401 	add.w	r4, r3, #1
 8020bd6:	d1ed      	bne.n	8020bb4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x20>
 8020bd8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8020bdc:	bf28      	it	cs
 8020bde:	f44f 7380 	movcs.w	r3, #256	@ 0x100
 8020be2:	f50d 790b 	add.w	r9, sp, #556	@ 0x22c
 8020be6:	461c      	mov	r4, r3
 8020be8:	461a      	mov	r2, r3
 8020bea:	4648      	mov	r0, r9
 8020bec:	f003 fe4d 	bl	802488a <memcpy>
 8020bf0:	2500      	movs	r5, #0
 8020bf2:	42bc      	cmp	r4, r7
 8020bf4:	f809 5004 	strb.w	r5, [r9, r4]
 8020bf8:	d831      	bhi.n	8020c5e <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xca>
 8020bfa:	f899 2000 	ldrb.w	r2, [r9]
 8020bfe:	f1a2 0363 	sub.w	r3, r2, #99	@ 0x63
 8020c02:	2b14      	cmp	r3, #20
 8020c04:	f200 81fd 	bhi.w	8021002 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x46e>
 8020c08:	e8df f013 	tbh	[pc, r3, lsl #1]
 8020c0c:	01fb0039 	.word	0x01fb0039
 8020c10:	005101fb 	.word	0x005101fb
 8020c14:	006501fb 	.word	0x006501fb
 8020c18:	01fb00b1 	.word	0x01fb00b1
 8020c1c:	01fb01fb 	.word	0x01fb01fb
 8020c20:	01fb01fb 	.word	0x01fb01fb
 8020c24:	00d301fb 	.word	0x00d301fb
 8020c28:	012300f7 	.word	0x012300f7
 8020c2c:	01ac0151 	.word	0x01ac0151
 8020c30:	01da01ca 	.word	0x01da01ca
 8020c34:	0015      	.short	0x0015
 8020c36:	49aa      	ldr	r1, [pc, #680]	@ (8020ee0 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x34c>)
 8020c38:	4648      	mov	r0, r9
 8020c3a:	ab4a      	add	r3, sp, #296	@ 0x128
 8020c3c:	aa0a      	add	r2, sp, #40	@ 0x28
 8020c3e:	f003 fc05 	bl	802444c <siscanf>
 8020c42:	2800      	cmp	r0, #0
 8020c44:	f300 81e6 	bgt.w	8021014 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x480>
 8020c48:	4aa6      	ldr	r2, [pc, #664]	@ (8020ee4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x350>)
 8020c4a:	4629      	mov	r1, r5
 8020c4c:	4630      	mov	r0, r6
 8020c4e:	f7fe fff5 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020c52:	f50d 7d4c 	add.w	sp, sp, #816	@ 0x330
 8020c56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020c5a:	462b      	mov	r3, r5
 8020c5c:	e7bc      	b.n	8020bd8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x44>
 8020c5e:	eb09 0a07 	add.w	sl, r9, r7
 8020c62:	49a1      	ldr	r1, [pc, #644]	@ (8020ee8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x354>)
 8020c64:	aa4a      	add	r2, sp, #296	@ 0x128
 8020c66:	4650      	mov	r0, sl
 8020c68:	f003 fbf0 	bl	802444c <siscanf>
 8020c6c:	42a8      	cmp	r0, r5
 8020c6e:	ddf0      	ble.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020c70:	9b4a      	ldr	r3, [sp, #296]	@ 0x128
 8020c72:	4598      	cmp	r8, r3
 8020c74:	d1ed      	bne.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020c76:	f80a 5c01 	strb.w	r5, [sl, #-1]
 8020c7a:	2501      	movs	r5, #1
 8020c7c:	e7bd      	b.n	8020bfa <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x66>
 8020c7e:	499b      	ldr	r1, [pc, #620]	@ (8020eec <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x358>)
 8020c80:	4648      	mov	r0, r9
 8020c82:	ab4a      	add	r3, sp, #296	@ 0x128
 8020c84:	aa0a      	add	r2, sp, #40	@ 0x28
 8020c86:	f003 fbe1 	bl	802444c <siscanf>
 8020c8a:	2801      	cmp	r0, #1
 8020c8c:	dddc      	ble.n	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020c8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020c90:	2b01      	cmp	r3, #1
 8020c92:	d817      	bhi.n	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020c94:	4a96      	ldr	r2, [pc, #600]	@ (8020ef0 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x35c>)
 8020c96:	994a      	ldr	r1, [sp, #296]	@ 0x128
 8020c98:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8020c9c:	6983      	ldr	r3, [r0, #24]
 8020c9e:	68da      	ldr	r2, [r3, #12]
 8020ca0:	2401      	movs	r4, #1
 8020ca2:	7014      	strb	r4, [r2, #0]
 8020ca4:	6802      	ldr	r2, [r0, #0]
 8020ca6:	6499      	str	r1, [r3, #72]	@ 0x48
 8020ca8:	6813      	ldr	r3, [r2, #0]
 8020caa:	4798      	blx	r3
 8020cac:	e7d1      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020cae:	4991      	ldr	r1, [pc, #580]	@ (8020ef4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x360>)
 8020cb0:	4648      	mov	r0, r9
 8020cb2:	aa0a      	add	r2, sp, #40	@ 0x28
 8020cb4:	f003 fbca 	bl	802444c <siscanf>
 8020cb8:	2800      	cmp	r0, #0
 8020cba:	ddc5      	ble.n	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020cbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020cbe:	2b01      	cmp	r3, #1
 8020cc0:	f240 81d5 	bls.w	802106e <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4da>
 8020cc4:	4a8c      	ldr	r2, [pc, #560]	@ (8020ef8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x364>)
 8020cc6:	4629      	mov	r1, r5
 8020cc8:	4630      	mov	r0, r6
 8020cca:	f7fe feb9 	bl	801fa40 <void respond<unsigned int&>(StreamSink&, bool, char const*, unsigned int&) [clone .isra.0]>
 8020cce:	f50d 7d4c 	add.w	sp, sp, #816	@ 0x330
 8020cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020cd6:	4629      	mov	r1, r5
 8020cd8:	4630      	mov	r0, r6
 8020cda:	4a88      	ldr	r2, [pc, #544]	@ (8020efc <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x368>)
 8020cdc:	f7fe ffae 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020ce0:	4629      	mov	r1, r5
 8020ce2:	4630      	mov	r0, r6
 8020ce4:	4a86      	ldr	r2, [pc, #536]	@ (8020f00 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x36c>)
 8020ce6:	f7fe ffa9 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020cea:	4629      	mov	r1, r5
 8020cec:	4630      	mov	r0, r6
 8020cee:	4a85      	ldr	r2, [pc, #532]	@ (8020f04 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x370>)
 8020cf0:	f7fe ffa4 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020cf4:	4629      	mov	r1, r5
 8020cf6:	4630      	mov	r0, r6
 8020cf8:	4a83      	ldr	r2, [pc, #524]	@ (8020f08 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x374>)
 8020cfa:	f7fe ff9f 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020cfe:	4629      	mov	r1, r5
 8020d00:	4630      	mov	r0, r6
 8020d02:	4a82      	ldr	r2, [pc, #520]	@ (8020f0c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x378>)
 8020d04:	f7fe ff9a 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d08:	4629      	mov	r1, r5
 8020d0a:	4630      	mov	r0, r6
 8020d0c:	4a80      	ldr	r2, [pc, #512]	@ (8020f10 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x37c>)
 8020d0e:	f7fe ff95 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d12:	4629      	mov	r1, r5
 8020d14:	4630      	mov	r0, r6
 8020d16:	4a7f      	ldr	r2, [pc, #508]	@ (8020f14 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x380>)
 8020d18:	f7fe ff90 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d1c:	4629      	mov	r1, r5
 8020d1e:	4630      	mov	r0, r6
 8020d20:	4a77      	ldr	r2, [pc, #476]	@ (8020f00 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x36c>)
 8020d22:	f7fe ff8b 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d26:	4629      	mov	r1, r5
 8020d28:	4630      	mov	r0, r6
 8020d2a:	4a7b      	ldr	r2, [pc, #492]	@ (8020f18 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x384>)
 8020d2c:	f7fe ff86 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d30:	4629      	mov	r1, r5
 8020d32:	4630      	mov	r0, r6
 8020d34:	4a79      	ldr	r2, [pc, #484]	@ (8020f1c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x388>)
 8020d36:	f7fe ff81 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d3a:	4629      	mov	r1, r5
 8020d3c:	4630      	mov	r0, r6
 8020d3e:	4a78      	ldr	r2, [pc, #480]	@ (8020f20 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x38c>)
 8020d40:	f7fe ff7c 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d44:	4629      	mov	r1, r5
 8020d46:	4630      	mov	r0, r6
 8020d48:	4a6d      	ldr	r2, [pc, #436]	@ (8020f00 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x36c>)
 8020d4a:	f7fe ff77 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d4e:	4629      	mov	r1, r5
 8020d50:	4630      	mov	r0, r6
 8020d52:	4a74      	ldr	r2, [pc, #464]	@ (8020f24 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x390>)
 8020d54:	f7fe ff72 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d58:	4629      	mov	r1, r5
 8020d5a:	4630      	mov	r0, r6
 8020d5c:	4a72      	ldr	r2, [pc, #456]	@ (8020f28 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x394>)
 8020d5e:	f7fe ff6d 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d62:	4a72      	ldr	r2, [pc, #456]	@ (8020f2c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x398>)
 8020d64:	4629      	mov	r1, r5
 8020d66:	4630      	mov	r0, r6
 8020d68:	f7fe ff68 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020d6c:	e771      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020d6e:	4c70      	ldr	r4, [pc, #448]	@ (8020f30 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x39c>)
 8020d70:	4a70      	ldr	r2, [pc, #448]	@ (8020f34 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3a0>)
 8020d72:	f894 3032 	ldrb.w	r3, [r4, #50]	@ 0x32
 8020d76:	9301      	str	r3, [sp, #4]
 8020d78:	f894 3031 	ldrb.w	r3, [r4, #49]	@ 0x31
 8020d7c:	9300      	str	r3, [sp, #0]
 8020d7e:	f894 3030 	ldrb.w	r3, [r4, #48]	@ 0x30
 8020d82:	4629      	mov	r1, r5
 8020d84:	4630      	mov	r0, r6
 8020d86:	f7fe fe17 	bl	801f9b8 <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]>
 8020d8a:	f894 3035 	ldrb.w	r3, [r4, #53]	@ 0x35
 8020d8e:	9301      	str	r3, [sp, #4]
 8020d90:	f894 1034 	ldrb.w	r1, [r4, #52]	@ 0x34
 8020d94:	f894 3033 	ldrb.w	r3, [r4, #51]	@ 0x33
 8020d98:	4a67      	ldr	r2, [pc, #412]	@ (8020f38 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3a4>)
 8020d9a:	9100      	str	r1, [sp, #0]
 8020d9c:	4630      	mov	r0, r6
 8020d9e:	4629      	mov	r1, r5
 8020da0:	f7fe fe0a 	bl	801f9b8 <void respond<unsigned char const&, unsigned char const&, unsigned char const&>(StreamSink&, bool, char const*, unsigned char const&, unsigned char const&, unsigned char const&) [clone .isra.0]>
 8020da4:	4b65      	ldr	r3, [pc, #404]	@ (8020f3c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3a8>)
 8020da6:	4a66      	ldr	r2, [pc, #408]	@ (8020f40 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3ac>)
 8020da8:	4629      	mov	r1, r5
 8020daa:	4630      	mov	r0, r6
 8020dac:	f7fe ff84 	bl	801fcb8 <void respond<char (&) [13]>(StreamSink&, bool, char const*, char (&) [13])>
 8020db0:	e74f      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020db2:	ac4a      	add	r4, sp, #296	@ 0x128
 8020db4:	af0a      	add	r7, sp, #40	@ 0x28
 8020db6:	aa04      	add	r2, sp, #16
 8020db8:	4962      	ldr	r1, [pc, #392]	@ (8020f44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3b0>)
 8020dba:	9401      	str	r4, [sp, #4]
 8020dbc:	4648      	mov	r0, r9
 8020dbe:	9700      	str	r7, [sp, #0]
 8020dc0:	ab05      	add	r3, sp, #20
 8020dc2:	f003 fb43 	bl	802444c <siscanf>
 8020dc6:	2801      	cmp	r0, #1
 8020dc8:	4602      	mov	r2, r0
 8020dca:	f77f af3d 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020dce:	9b04      	ldr	r3, [sp, #16]
 8020dd0:	2b01      	cmp	r3, #1
 8020dd2:	f63f af77 	bhi.w	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020dd6:	4846      	ldr	r0, [pc, #280]	@ (8020ef0 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x35c>)
 8020dd8:	9905      	ldr	r1, [sp, #20]
 8020dda:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8020dde:	6983      	ldr	r3, [r0, #24]
 8020de0:	68dd      	ldr	r5, [r3, #12]
 8020de2:	2603      	movs	r6, #3
 8020de4:	2a02      	cmp	r2, #2
 8020de6:	702e      	strb	r6, [r5, #0]
 8020de8:	6419      	str	r1, [r3, #64]	@ 0x40
 8020dea:	d02b      	beq.n	8020e44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x2b0>
 8020dec:	6839      	ldr	r1, [r7, #0]
 8020dee:	6459      	str	r1, [r3, #68]	@ 0x44
 8020df0:	42b2      	cmp	r2, r6
 8020df2:	d027      	beq.n	8020e44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x2b0>
 8020df4:	6822      	ldr	r2, [r4, #0]
 8020df6:	649a      	str	r2, [r3, #72]	@ 0x48
 8020df8:	e024      	b.n	8020e44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x2b0>
 8020dfa:	ac4a      	add	r4, sp, #296	@ 0x128
 8020dfc:	af0a      	add	r7, sp, #40	@ 0x28
 8020dfe:	aa04      	add	r2, sp, #16
 8020e00:	4951      	ldr	r1, [pc, #324]	@ (8020f48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3b4>)
 8020e02:	9401      	str	r4, [sp, #4]
 8020e04:	4648      	mov	r0, r9
 8020e06:	9700      	str	r7, [sp, #0]
 8020e08:	ab05      	add	r3, sp, #20
 8020e0a:	f003 fb1f 	bl	802444c <siscanf>
 8020e0e:	2801      	cmp	r0, #1
 8020e10:	4602      	mov	r2, r0
 8020e12:	f77f af19 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020e16:	9b04      	ldr	r3, [sp, #16]
 8020e18:	2b01      	cmp	r3, #1
 8020e1a:	f63f af53 	bhi.w	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020e1e:	4934      	ldr	r1, [pc, #208]	@ (8020ef0 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x35c>)
 8020e20:	9d05      	ldr	r5, [sp, #20]
 8020e22:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
 8020e26:	6983      	ldr	r3, [r0, #24]
 8020e28:	68d9      	ldr	r1, [r3, #12]
 8020e2a:	2603      	movs	r6, #3
 8020e2c:	2a02      	cmp	r2, #2
 8020e2e:	700e      	strb	r6, [r1, #0]
 8020e30:	641d      	str	r5, [r3, #64]	@ 0x40
 8020e32:	d007      	beq.n	8020e44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x2b0>
 8020e34:	683d      	ldr	r5, [r7, #0]
 8020e36:	610d      	str	r5, [r1, #16]
 8020e38:	42b2      	cmp	r2, r6
 8020e3a:	d003      	beq.n	8020e44 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x2b0>
 8020e3c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
 8020e3e:	6821      	ldr	r1, [r4, #0]
 8020e40:	6a12      	ldr	r2, [r2, #32]
 8020e42:	62d1      	str	r1, [r2, #44]	@ 0x2c
 8020e44:	6802      	ldr	r2, [r0, #0]
 8020e46:	2101      	movs	r1, #1
 8020e48:	6812      	ldr	r2, [r2, #0]
 8020e4a:	f883 1054 	strb.w	r1, [r3, #84]	@ 0x54
 8020e4e:	4790      	blx	r2
 8020e50:	e6ff      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020e52:	493e      	ldr	r1, [pc, #248]	@ (8020f4c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3b8>)
 8020e54:	aa4a      	add	r2, sp, #296	@ 0x128
 8020e56:	4648      	mov	r0, r9
 8020e58:	f003 faf8 	bl	802444c <siscanf>
 8020e5c:	2800      	cmp	r0, #0
 8020e5e:	f77f aef3 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020e62:	ac0a      	add	r4, sp, #40	@ 0x28
 8020e64:	4620      	mov	r0, r4
 8020e66:	493a      	ldr	r1, [pc, #232]	@ (8020f50 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3bc>)
 8020e68:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8020e6c:	aa4a      	add	r2, sp, #296	@ 0x128
 8020e6e:	f7fe fe6d 	bl	801fb4c <Introspectable::get_child(char const*, unsigned int)>
 8020e72:	6920      	ldr	r0, [r4, #16]
 8020e74:	f7fe fe22 	bl	801fabc <Introspectable::get_type_info() [clone .isra.0]>
 8020e78:	2800      	cmp	r0, #0
 8020e7a:	f000 80f2 	beq.w	8021062 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4ce>
 8020e7e:	4a35      	ldr	r2, [pc, #212]	@ (8020f54 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3c0>)
 8020e80:	4935      	ldr	r1, [pc, #212]	@ (8020f58 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3c4>)
 8020e82:	f06f 0301 	mvn.w	r3, #1
 8020e86:	f000 ffff 	bl	8021e88 <__dynamic_cast>
 8020e8a:	2800      	cmp	r0, #0
 8020e8c:	f000 80e9 	beq.w	8021062 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4ce>
 8020e90:	6803      	ldr	r3, [r0, #0]
 8020e92:	4621      	mov	r1, r4
 8020e94:	aa05      	add	r2, sp, #20
 8020e96:	681c      	ldr	r4, [r3, #0]
 8020e98:	230a      	movs	r3, #10
 8020e9a:	47a0      	blx	r4
 8020e9c:	2800      	cmp	r0, #0
 8020e9e:	f000 80d6 	beq.w	802104e <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4ba>
 8020ea2:	aa05      	add	r2, sp, #20
 8020ea4:	4629      	mov	r1, r5
 8020ea6:	4630      	mov	r0, r6
 8020ea8:	f7fe fec8 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8020eac:	e6d1      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020eae:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020eb2:	2b73      	cmp	r3, #115	@ 0x73
 8020eb4:	f000 80d1 	beq.w	802105a <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4c6>
 8020eb8:	2b65      	cmp	r3, #101	@ 0x65
 8020eba:	f000 8117 	beq.w	80210ec <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x558>
 8020ebe:	2b72      	cmp	r3, #114	@ 0x72
 8020ec0:	f47f aec7 	bne.w	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020ec4:	f3bf 8f4f 	dsb	sy
 8020ec8:	4924      	ldr	r1, [pc, #144]	@ (8020f5c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3c8>)
 8020eca:	4b25      	ldr	r3, [pc, #148]	@ (8020f60 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x3cc>)
 8020ecc:	68ca      	ldr	r2, [r1, #12]
 8020ece:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
 8020ed2:	4313      	orrs	r3, r2
 8020ed4:	60cb      	str	r3, [r1, #12]
 8020ed6:	f3bf 8f4f 	dsb	sy
 8020eda:	bf00      	nop
 8020edc:	e7fd      	b.n	8020eda <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x346>
 8020ede:	bf00      	nop
 8020ee0:	080299a8 	.word	0x080299a8
 8020ee4:	08029768 	.word	0x08029768
 8020ee8:	0802b047 	.word	0x0802b047
 8020eec:	080297b0 	.word	0x080297b0
 8020ef0:	200019cc 	.word	0x200019cc
 8020ef4:	080297c0 	.word	0x080297c0
 8020ef8:	08029780 	.word	0x08029780
 8020efc:	080297c8 	.word	0x080297c8
 8020f00:	0802973c 	.word	0x0802973c
 8020f04:	080297f4 	.word	0x080297f4
 8020f08:	0802981c 	.word	0x0802981c
 8020f0c:	08029840 	.word	0x08029840
 8020f10:	08029864 	.word	0x08029864
 8020f14:	08029880 	.word	0x08029880
 8020f18:	08029894 	.word	0x08029894
 8020f1c:	080298d4 	.word	0x080298d4
 8020f20:	080298e8 	.word	0x080298e8
 8020f24:	08029900 	.word	0x08029900
 8020f28:	08029910 	.word	0x08029910
 8020f2c:	08029924 	.word	0x08029924
 8020f30:	20001840 	.word	0x20001840
 8020f34:	08029930 	.word	0x08029930
 8020f38:	0802994c 	.word	0x0802994c
 8020f3c:	2000ce5c 	.word	0x2000ce5c
 8020f40:	08029968 	.word	0x08029968
 8020f44:	08029758 	.word	0x08029758
 8020f48:	08029794 	.word	0x08029794
 8020f4c:	0802997c 	.word	0x0802997c
 8020f50:	2000d258 	.word	0x2000d258
 8020f54:	0802b308 	.word	0x0802b308
 8020f58:	0802b2e4 	.word	0x0802b2e4
 8020f5c:	e000ed00 	.word	0xe000ed00
 8020f60:	05fa0004 	.word	0x05fa0004
 8020f64:	4963      	ldr	r1, [pc, #396]	@ (80210f4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x560>)
 8020f66:	4648      	mov	r0, r9
 8020f68:	ab4a      	add	r3, sp, #296	@ 0x128
 8020f6a:	aa0a      	add	r2, sp, #40	@ 0x28
 8020f6c:	f003 fa6e 	bl	802444c <siscanf>
 8020f70:	2801      	cmp	r0, #1
 8020f72:	f77f ae69 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020f76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020f78:	2b01      	cmp	r3, #1
 8020f7a:	f63f aea3 	bhi.w	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020f7e:	4a5e      	ldr	r2, [pc, #376]	@ (80210f8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x564>)
 8020f80:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8020f84:	6983      	ldr	r3, [r0, #24]
 8020f86:	68da      	ldr	r2, [r3, #12]
 8020f88:	f240 5403 	movw	r4, #1283	@ 0x503
 8020f8c:	8014      	strh	r4, [r2, #0]
 8020f8e:	6802      	ldr	r2, [r0, #0]
 8020f90:	9c4a      	ldr	r4, [sp, #296]	@ 0x128
 8020f92:	6812      	ldr	r2, [r2, #0]
 8020f94:	641c      	str	r4, [r3, #64]	@ 0x40
 8020f96:	2101      	movs	r1, #1
 8020f98:	f883 1054 	strb.w	r1, [r3, #84]	@ 0x54
 8020f9c:	4790      	blx	r2
 8020f9e:	e658      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8020fa0:	4956      	ldr	r1, [pc, #344]	@ (80210fc <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x568>)
 8020fa2:	aa4a      	add	r2, sp, #296	@ 0x128
 8020fa4:	4648      	mov	r0, r9
 8020fa6:	f003 fa51 	bl	802444c <siscanf>
 8020faa:	2800      	cmp	r0, #0
 8020fac:	f77f ae4c 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020fb0:	9b4a      	ldr	r3, [sp, #296]	@ 0x128
 8020fb2:	2b01      	cmp	r3, #1
 8020fb4:	f63f ae86 	bhi.w	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020fb8:	4a4f      	ldr	r2, [pc, #316]	@ (80210f8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x564>)
 8020fba:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8020fbe:	e01c      	b.n	8020ffa <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x466>
 8020fc0:	ac4a      	add	r4, sp, #296	@ 0x128
 8020fc2:	aa05      	add	r2, sp, #20
 8020fc4:	494e      	ldr	r1, [pc, #312]	@ (8021100 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x56c>)
 8020fc6:	9400      	str	r4, [sp, #0]
 8020fc8:	4648      	mov	r0, r9
 8020fca:	ab0a      	add	r3, sp, #40	@ 0x28
 8020fcc:	f003 fa3e 	bl	802444c <siscanf>
 8020fd0:	2801      	cmp	r0, #1
 8020fd2:	4602      	mov	r2, r0
 8020fd4:	f77f ae38 	ble.w	8020c48 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xb4>
 8020fd8:	9b05      	ldr	r3, [sp, #20]
 8020fda:	2b01      	cmp	r3, #1
 8020fdc:	f63f ae72 	bhi.w	8020cc4 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x130>
 8020fe0:	4845      	ldr	r0, [pc, #276]	@ (80210f8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x564>)
 8020fe2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8020fe4:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8020fe8:	6983      	ldr	r3, [r0, #24]
 8020fea:	2602      	movs	r6, #2
 8020fec:	68dd      	ldr	r5, [r3, #12]
 8020fee:	42b2      	cmp	r2, r6
 8020ff0:	702e      	strb	r6, [r5, #0]
 8020ff2:	6459      	str	r1, [r3, #68]	@ 0x44
 8020ff4:	d001      	beq.n	8020ffa <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x466>
 8020ff6:	6822      	ldr	r2, [r4, #0]
 8020ff8:	649a      	str	r2, [r3, #72]	@ 0x48
 8020ffa:	6803      	ldr	r3, [r0, #0]
 8020ffc:	681b      	ldr	r3, [r3, #0]
 8020ffe:	4798      	blx	r3
 8021000:	e627      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8021002:	2a00      	cmp	r2, #0
 8021004:	f43f ae25 	beq.w	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8021008:	4a3e      	ldr	r2, [pc, #248]	@ (8021104 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x570>)
 802100a:	4629      	mov	r1, r5
 802100c:	4630      	mov	r0, r6
 802100e:	f7fe fe15 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8021012:	e61e      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8021014:	ac05      	add	r4, sp, #20
 8021016:	4620      	mov	r0, r4
 8021018:	493b      	ldr	r1, [pc, #236]	@ (8021108 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x574>)
 802101a:	aa0a      	add	r2, sp, #40	@ 0x28
 802101c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8021020:	f7fe fd94 	bl	801fb4c <Introspectable::get_child(char const*, unsigned int)>
 8021024:	6920      	ldr	r0, [r4, #16]
 8021026:	f7fe fd49 	bl	801fabc <Introspectable::get_type_info() [clone .isra.0]>
 802102a:	b1d0      	cbz	r0, 8021062 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4ce>
 802102c:	4a37      	ldr	r2, [pc, #220]	@ (802110c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x578>)
 802102e:	4938      	ldr	r1, [pc, #224]	@ (8021110 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x57c>)
 8021030:	f06f 0301 	mvn.w	r3, #1
 8021034:	f000 ff28 	bl	8021e88 <__dynamic_cast>
 8021038:	b198      	cbz	r0, 8021062 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x4ce>
 802103a:	6803      	ldr	r3, [r0, #0]
 802103c:	aa4a      	add	r2, sp, #296	@ 0x128
 802103e:	685f      	ldr	r7, [r3, #4]
 8021040:	4621      	mov	r1, r4
 8021042:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8021046:	47b8      	blx	r7
 8021048:	2800      	cmp	r0, #0
 802104a:	f47f ae02 	bne.w	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 802104e:	4a31      	ldr	r2, [pc, #196]	@ (8021114 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x580>)
 8021050:	4629      	mov	r1, r5
 8021052:	4630      	mov	r0, r6
 8021054:	f7fe fdf2 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 8021058:	e5fb      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 802105a:	482f      	ldr	r0, [pc, #188]	@ (8021118 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x584>)
 802105c:	f7f0 fb4e 	bl	80116fc <ODrive::save_configuration()>
 8021060:	e5f7      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 8021062:	4a2e      	ldr	r2, [pc, #184]	@ (802111c <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x588>)
 8021064:	4629      	mov	r1, r5
 8021066:	4630      	mov	r0, r6
 8021068:	f7fe fde8 	bl	801fc3c <void respond<>(StreamSink&, bool, char const*)>
 802106c:	e5f1      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 802106e:	4a22      	ldr	r2, [pc, #136]	@ (80210f8 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x564>)
 8021070:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8021074:	691d      	ldr	r5, [r3, #16]
 8021076:	6ce8      	ldr	r0, [r5, #76]	@ 0x4c
 8021078:	f7df fa56 	bl	8000528 <__aeabi_f2d>
 802107c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8021080:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8021082:	f7df fa51 	bl	8000528 <__aeabi_f2d>
 8021086:	4a26      	ldr	r2, [pc, #152]	@ (8021120 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x58c>)
 8021088:	e9cd 0100 	strd	r0, r1, [sp]
 802108c:	2140      	movs	r1, #64	@ 0x40
 802108e:	a84a      	add	r0, sp, #296	@ 0x128
 8021090:	f003 f984 	bl	802439c <sniprintf>
 8021094:	6833      	ldr	r3, [r6, #0]
 8021096:	2840      	cmp	r0, #64	@ 0x40
 8021098:	bf28      	it	cs
 802109a:	2040      	movcs	r0, #64	@ 0x40
 802109c:	f8d3 8000 	ldr.w	r8, [r3]
 80210a0:	4602      	mov	r2, r0
 80210a2:	4605      	mov	r5, r0
 80210a4:	2300      	movs	r3, #0
 80210a6:	a94a      	add	r1, sp, #296	@ 0x128
 80210a8:	4630      	mov	r0, r6
 80210aa:	47c0      	blx	r8
 80210ac:	42bc      	cmp	r4, r7
 80210ae:	d915      	bls.n	80210dc <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x548>
 80210b0:	2300      	movs	r3, #0
 80210b2:	ac4a      	add	r4, sp, #296	@ 0x128
 80210b4:	4619      	mov	r1, r3
 80210b6:	f814 2b01 	ldrb.w	r2, [r4], #1
 80210ba:	3101      	adds	r1, #1
 80210bc:	428d      	cmp	r5, r1
 80210be:	ea83 0302 	eor.w	r3, r3, r2
 80210c2:	d8f8      	bhi.n	80210b6 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x522>
 80210c4:	4a17      	ldr	r2, [pc, #92]	@ (8021124 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x590>)
 80210c6:	2140      	movs	r1, #64	@ 0x40
 80210c8:	a84a      	add	r0, sp, #296	@ 0x128
 80210ca:	f003 f967 	bl	802439c <sniprintf>
 80210ce:	6831      	ldr	r1, [r6, #0]
 80210d0:	4602      	mov	r2, r0
 80210d2:	680c      	ldr	r4, [r1, #0]
 80210d4:	2300      	movs	r3, #0
 80210d6:	a94a      	add	r1, sp, #296	@ 0x128
 80210d8:	4630      	mov	r0, r6
 80210da:	47a0      	blx	r4
 80210dc:	6833      	ldr	r3, [r6, #0]
 80210de:	4912      	ldr	r1, [pc, #72]	@ (8021128 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x594>)
 80210e0:	681c      	ldr	r4, [r3, #0]
 80210e2:	2202      	movs	r2, #2
 80210e4:	2300      	movs	r3, #0
 80210e6:	4630      	mov	r0, r6
 80210e8:	47a0      	blx	r4
 80210ea:	e5b2      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 80210ec:	480a      	ldr	r0, [pc, #40]	@ (8021118 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0x584>)
 80210ee:	f7ef fe5f 	bl	8010db0 <ODrive::erase_configuration()>
 80210f2:	e5ae      	b.n	8020c52 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)+0xbe>
 80210f4:	080297b8 	.word	0x080297b8
 80210f8:	200019cc 	.word	0x200019cc
 80210fc:	080299b8 	.word	0x080299b8
 8021100:	080297a4 	.word	0x080297a4
 8021104:	080299c0 	.word	0x080299c0
 8021108:	2000d258 	.word	0x2000d258
 802110c:	0802b308 	.word	0x0802b308
 8021110:	0802b2e4 	.word	0x0802b2e4
 8021114:	08029998 	.word	0x08029998
 8021118:	20001840 	.word	0x20001840
 802111c:	08029984 	.word	0x08029984
 8021120:	08029760 	.word	0x08029760
 8021124:	08029750 	.word	0x08029750
 8021128:	08029754 	.word	0x08029754

0802112c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)>:
 802112c:	2900      	cmp	r1, #0
 802112e:	d040      	beq.n	80211b2 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x86>
 8021130:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021134:	4d1f      	ldr	r5, [pc, #124]	@ (80211b4 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x88>)
 8021136:	f8df 8080 	ldr.w	r8, [pc, #128]	@ 80211b8 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x8c>
 802113a:	f8df b080 	ldr.w	fp, [pc, #128]	@ 80211bc <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x90>
 802113e:	f8df a080 	ldr.w	sl, [pc, #128]	@ 80211c0 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x94>
 8021142:	4604      	mov	r4, r0
 8021144:	4691      	mov	r9, r2
 8021146:	1846      	adds	r6, r0, r1
 8021148:	2700      	movs	r7, #0
 802114a:	e010      	b.n	802116e <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x42>
 802114c:	3b0a      	subs	r3, #10
 802114e:	b2db      	uxtb	r3, r3
 8021150:	2b17      	cmp	r3, #23
 8021152:	f888 7000 	strb.w	r7, [r8]
 8021156:	602f      	str	r7, [r5, #0]
 8021158:	d807      	bhi.n	802116a <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x3e>
 802115a:	fa2a f303 	lsr.w	r3, sl, r3
 802115e:	07d9      	lsls	r1, r3, #31
 8021160:	d503      	bpl.n	802116a <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x3e>
 8021162:	2301      	movs	r3, #1
 8021164:	602f      	str	r7, [r5, #0]
 8021166:	f888 3000 	strb.w	r3, [r8]
 802116a:	42a6      	cmp	r6, r4
 802116c:	d01f      	beq.n	80211ae <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x82>
 802116e:	6829      	ldr	r1, [r5, #0]
 8021170:	f814 3b01 	ldrb.w	r3, [r4], #1
 8021174:	29ff      	cmp	r1, #255	@ 0xff
 8021176:	d8e9      	bhi.n	802114c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x20>
 8021178:	f1a3 020a 	sub.w	r2, r3, #10
 802117c:	b2d2      	uxtb	r2, r2
 802117e:	2a17      	cmp	r2, #23
 8021180:	f898 0000 	ldrb.w	r0, [r8]
 8021184:	d80a      	bhi.n	802119c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x70>
 8021186:	fa2a f202 	lsr.w	r2, sl, r2
 802118a:	07d2      	lsls	r2, r2, #31
 802118c:	d506      	bpl.n	802119c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x70>
 802118e:	2800      	cmp	r0, #0
 8021190:	d0e7      	beq.n	8021162 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x36>
 8021192:	464a      	mov	r2, r9
 8021194:	4658      	mov	r0, fp
 8021196:	f7ff fcfd 	bl	8020b94 <ASCII_protocol_process_line(unsigned char const*, unsigned int, StreamSink&)>
 802119a:	e7e2      	b.n	8021162 <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x36>
 802119c:	2800      	cmp	r0, #0
 802119e:	d0e4      	beq.n	802116a <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x3e>
 80211a0:	f80b 3001 	strb.w	r3, [fp, r1]
 80211a4:	42a6      	cmp	r6, r4
 80211a6:	f101 0101 	add.w	r1, r1, #1
 80211aa:	6029      	str	r1, [r5, #0]
 80211ac:	d1df      	bne.n	802116e <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)+0x42>
 80211ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211b2:	4770      	bx	lr
 80211b4:	2000d154 	.word	0x2000d154
 80211b8:	200003fc 	.word	0x200003fc
 80211bc:	2000d158 	.word	0x2000d158
 80211c0:	00800009 	.word	0x00800009

080211c4 <UART4Sender::get_free_space()>:
 80211c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80211c8:	4770      	bx	lr
 80211ca:	bf00      	nop

080211cc <uart_server_thread(void*)>:
 80211cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80211d0:	4d1f      	ldr	r5, [pc, #124]	@ (8021250 <uart_server_thread(void*)+0x84>)
 80211d2:	4f20      	ldr	r7, [pc, #128]	@ (8021254 <uart_server_thread(void*)+0x88>)
 80211d4:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 8021260 <uart_server_thread(void*)+0x94>
 80211d8:	2600      	movs	r6, #0
 80211da:	2001      	movs	r0, #1
 80211dc:	f7e6 fc24 	bl	8007a28 <osDelay>
 80211e0:	f895 303a 	ldrb.w	r3, [r5, #58]	@ 0x3a
 80211e4:	2b22      	cmp	r3, #34	@ 0x22
 80211e6:	4628      	mov	r0, r5
 80211e8:	d008      	beq.n	80211fc <uart_server_thread(void*)+0x30>
 80211ea:	f7e5 fe0b 	bl	8006e04 <HAL_UART_AbortReceive>
 80211ee:	2240      	movs	r2, #64	@ 0x40
 80211f0:	4641      	mov	r1, r8
 80211f2:	4628      	mov	r0, r5
 80211f4:	f7e5 fdba 	bl	8006d6c <HAL_UART_Receive_DMA>
 80211f8:	2300      	movs	r3, #0
 80211fa:	603b      	str	r3, [r7, #0]
 80211fc:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80211fe:	681b      	ldr	r3, [r3, #0]
 8021200:	685c      	ldr	r4, [r3, #4]
 8021202:	f1d4 0440 	rsbs	r4, r4, #64	@ 0x40
 8021206:	d3e8      	bcc.n	80211da <uart_server_thread(void*)+0xe>
 8021208:	6839      	ldr	r1, [r7, #0]
 802120a:	42a1      	cmp	r1, r4
 802120c:	d80f      	bhi.n	802122e <uart_server_thread(void*)+0x62>
 802120e:	428c      	cmp	r4, r1
 8021210:	d9e2      	bls.n	80211d8 <uart_server_thread(void*)+0xc>
 8021212:	1a62      	subs	r2, r4, r1
 8021214:	2300      	movs	r3, #0
 8021216:	4441      	add	r1, r8
 8021218:	480f      	ldr	r0, [pc, #60]	@ (8021258 <uart_server_thread(void*)+0x8c>)
 802121a:	f000 fc5f 	bl	8021adc <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)>
 802121e:	6838      	ldr	r0, [r7, #0]
 8021220:	4a0e      	ldr	r2, [pc, #56]	@ (802125c <uart_server_thread(void*)+0x90>)
 8021222:	1a21      	subs	r1, r4, r0
 8021224:	4440      	add	r0, r8
 8021226:	f7ff ff81 	bl	802112c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)>
 802122a:	603c      	str	r4, [r7, #0]
 802122c:	e7d4      	b.n	80211d8 <uart_server_thread(void*)+0xc>
 802122e:	f1c1 0240 	rsb	r2, r1, #64	@ 0x40
 8021232:	2300      	movs	r3, #0
 8021234:	4441      	add	r1, r8
 8021236:	4808      	ldr	r0, [pc, #32]	@ (8021258 <uart_server_thread(void*)+0x8c>)
 8021238:	f000 fc50 	bl	8021adc <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)>
 802123c:	6838      	ldr	r0, [r7, #0]
 802123e:	4a07      	ldr	r2, [pc, #28]	@ (802125c <uart_server_thread(void*)+0x90>)
 8021240:	f1c0 0140 	rsb	r1, r0, #64	@ 0x40
 8021244:	4440      	add	r0, r8
 8021246:	f7ff ff71 	bl	802112c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)>
 802124a:	2100      	movs	r1, #0
 802124c:	603e      	str	r6, [r7, #0]
 802124e:	e7de      	b.n	802120e <uart_server_thread(void*)+0x42>
 8021250:	20000de0 	.word	0x20000de0
 8021254:	2000d380 	.word	0x2000d380
 8021258:	2000d270 	.word	0x2000d270
 802125c:	2000d338 	.word	0x2000d338
 8021260:	2000d384 	.word	0x2000d384

08021264 <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)>:
 8021264:	b36a      	cbz	r2, 80212c2 <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x5e>
 8021266:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802126a:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 80212cc <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x68>
 802126e:	460e      	mov	r6, r1
 8021270:	461f      	mov	r7, r3
 8021272:	4615      	mov	r5, r2
 8021274:	f100 0804 	add.w	r8, r0, #4
 8021278:	2d40      	cmp	r5, #64	@ 0x40
 802127a:	f8d9 0000 	ldr.w	r0, [r9]
 802127e:	f04f 010a 	mov.w	r1, #10
 8021282:	462c      	mov	r4, r5
 8021284:	bf28      	it	cs
 8021286:	2440      	movcs	r4, #64	@ 0x40
 8021288:	f7e6 fc3a 	bl	8007b00 <osSemaphoreWait>
 802128c:	b9a8      	cbnz	r0, 80212ba <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x56>
 802128e:	4622      	mov	r2, r4
 8021290:	4631      	mov	r1, r6
 8021292:	4640      	mov	r0, r8
 8021294:	f003 faf9 	bl	802488a <memcpy>
 8021298:	480b      	ldr	r0, [pc, #44]	@ (80212c8 <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x64>)
 802129a:	b2a2      	uxth	r2, r4
 802129c:	4641      	mov	r1, r8
 802129e:	f7e5 fd29 	bl	8006cf4 <HAL_UART_Transmit_DMA>
 80212a2:	b950      	cbnz	r0, 80212ba <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x56>
 80212a4:	1b2d      	subs	r5, r5, r4
 80212a6:	4426      	add	r6, r4
 80212a8:	b117      	cbz	r7, 80212b0 <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x4c>
 80212aa:	683a      	ldr	r2, [r7, #0]
 80212ac:	4422      	add	r2, r4
 80212ae:	603a      	str	r2, [r7, #0]
 80212b0:	2d00      	cmp	r5, #0
 80212b2:	d1e1      	bne.n	8021278 <UART4Sender::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x14>
 80212b4:	2000      	movs	r0, #0
 80212b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80212ba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80212be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80212c2:	2000      	movs	r0, #0
 80212c4:	4770      	bx	lr
 80212c6:	bf00      	nop
 80212c8:	20000de0 	.word	0x20000de0
 80212cc:	20000808 	.word	0x20000808

080212d0 <start_uart_server>:
 80212d0:	b530      	push	{r4, r5, lr}
 80212d2:	4c0d      	ldr	r4, [pc, #52]	@ (8021308 <start_uart_server+0x38>)
 80212d4:	490d      	ldr	r1, [pc, #52]	@ (802130c <start_uart_server+0x3c>)
 80212d6:	480e      	ldr	r0, [pc, #56]	@ (8021310 <start_uart_server+0x40>)
 80212d8:	b087      	sub	sp, #28
 80212da:	2240      	movs	r2, #64	@ 0x40
 80212dc:	f7e5 fd46 	bl	8006d6c <HAL_UART_Receive_DMA>
 80212e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80212e2:	f10d 0c04 	add.w	ip, sp, #4
 80212e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80212ea:	2500      	movs	r5, #0
 80212ec:	4a09      	ldr	r2, [pc, #36]	@ (8021314 <start_uart_server+0x44>)
 80212ee:	6823      	ldr	r3, [r4, #0]
 80212f0:	f8cc 3000 	str.w	r3, [ip]
 80212f4:	4629      	mov	r1, r5
 80212f6:	a801      	add	r0, sp, #4
 80212f8:	6015      	str	r5, [r2, #0]
 80212fa:	f7e6 fb79 	bl	80079f0 <osThreadCreate>
 80212fe:	4b06      	ldr	r3, [pc, #24]	@ (8021318 <start_uart_server+0x48>)
 8021300:	6018      	str	r0, [r3, #0]
 8021302:	b007      	add	sp, #28
 8021304:	bd30      	pop	{r4, r5, pc}
 8021306:	bf00      	nop
 8021308:	0802954c 	.word	0x0802954c
 802130c:	2000d384 	.word	0x2000d384
 8021310:	20000de0 	.word	0x20000de0
 8021314:	2000d380 	.word	0x2000d380
 8021318:	2000d37c 	.word	0x2000d37c

0802131c <HAL_UART_TxCpltCallback>:
 802131c:	4b01      	ldr	r3, [pc, #4]	@ (8021324 <HAL_UART_TxCpltCallback+0x8>)
 802131e:	6818      	ldr	r0, [r3, #0]
 8021320:	f7e6 bc1a 	b.w	8007b58 <osSemaphoreRelease>
 8021324:	20000808 	.word	0x20000808

08021328 <_GLOBAL__sub_I_uart_thread>:
 8021328:	4912      	ldr	r1, [pc, #72]	@ (8021374 <_GLOBAL__sub_I_uart_thread+0x4c>)
 802132a:	4b13      	ldr	r3, [pc, #76]	@ (8021378 <_GLOBAL__sub_I_uart_thread+0x50>)
 802132c:	4813      	ldr	r0, [pc, #76]	@ (802137c <_GLOBAL__sub_I_uart_thread+0x54>)
 802132e:	4a14      	ldr	r2, [pc, #80]	@ (8021380 <_GLOBAL__sub_I_uart_thread+0x58>)
 8021330:	b570      	push	{r4, r5, r6, lr}
 8021332:	4e14      	ldr	r6, [pc, #80]	@ (8021384 <_GLOBAL__sub_I_uart_thread+0x5c>)
 8021334:	4c14      	ldr	r4, [pc, #80]	@ (8021388 <_GLOBAL__sub_I_uart_thread+0x60>)
 8021336:	6008      	str	r0, [r1, #0]
 8021338:	4814      	ldr	r0, [pc, #80]	@ (802138c <_GLOBAL__sub_I_uart_thread+0x64>)
 802133a:	601a      	str	r2, [r3, #0]
 802133c:	6059      	str	r1, [r3, #4]
 802133e:	2220      	movs	r2, #32
 8021340:	6030      	str	r0, [r6, #0]
 8021342:	2100      	movs	r1, #0
 8021344:	f106 0008 	add.w	r0, r6, #8
 8021348:	6073      	str	r3, [r6, #4]
 802134a:	f003 f9ac 	bl	80246a6 <memset>
 802134e:	4623      	mov	r3, r4
 8021350:	4a0f      	ldr	r2, [pc, #60]	@ (8021390 <_GLOBAL__sub_I_uart_thread+0x68>)
 8021352:	f843 2b04 	str.w	r2, [r3], #4
 8021356:	2500      	movs	r5, #0
 8021358:	2280      	movs	r2, #128	@ 0x80
 802135a:	4629      	mov	r1, r5
 802135c:	f104 000c 	add.w	r0, r4, #12
 8021360:	80a5      	strh	r5, [r4, #4]
 8021362:	60a5      	str	r5, [r4, #8]
 8021364:	709d      	strb	r5, [r3, #2]
 8021366:	f003 f99e 	bl	80246a6 <memset>
 802136a:	e9c4 5523 	strd	r5, r5, [r4, #140]	@ 0x8c
 802136e:	f8c4 6094 	str.w	r6, [r4, #148]	@ 0x94
 8021372:	bd70      	pop	{r4, r5, r6, pc}
 8021374:	2000d338 	.word	0x2000d338
 8021378:	2000d330 	.word	0x2000d330
 802137c:	08036dec 	.word	0x08036dec
 8021380:	08036f70 	.word	0x08036f70
 8021384:	2000d308 	.word	0x2000d308
 8021388:	2000d270 	.word	0x2000d270
 802138c:	08036f7c 	.word	0x08036f7c
 8021390:	08036f60 	.word	0x08036f60

08021394 <TreatPacketSinkAsStreamSink::process_bytes(unsigned char const*, unsigned int, unsigned int*)>:
 8021394:	b302      	cbz	r2, 80213d8 <TreatPacketSinkAsStreamSink::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x44>
 8021396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802139a:	4680      	mov	r8, r0
 802139c:	460e      	mov	r6, r1
 802139e:	461f      	mov	r7, r3
 80213a0:	4615      	mov	r5, r2
 80213a2:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80213a6:	2d40      	cmp	r5, #64	@ 0x40
 80213a8:	6803      	ldr	r3, [r0, #0]
 80213aa:	462c      	mov	r4, r5
 80213ac:	bf28      	it	cs
 80213ae:	2440      	movcs	r4, #64	@ 0x40
 80213b0:	681b      	ldr	r3, [r3, #0]
 80213b2:	4622      	mov	r2, r4
 80213b4:	4631      	mov	r1, r6
 80213b6:	4798      	blx	r3
 80213b8:	b950      	cbnz	r0, 80213d0 <TreatPacketSinkAsStreamSink::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x3c>
 80213ba:	1b2d      	subs	r5, r5, r4
 80213bc:	4426      	add	r6, r4
 80213be:	b117      	cbz	r7, 80213c6 <TreatPacketSinkAsStreamSink::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x32>
 80213c0:	683a      	ldr	r2, [r7, #0]
 80213c2:	4422      	add	r2, r4
 80213c4:	603a      	str	r2, [r7, #0]
 80213c6:	2d00      	cmp	r5, #0
 80213c8:	d1eb      	bne.n	80213a2 <TreatPacketSinkAsStreamSink::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0xe>
 80213ca:	2000      	movs	r0, #0
 80213cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80213d0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80213d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80213d8:	2000      	movs	r0, #0
 80213da:	4770      	bx	lr

080213dc <TreatPacketSinkAsStreamSink::get_free_space()>:
 80213dc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80213e0:	4770      	bx	lr
 80213e2:	bf00      	nop

080213e4 <usb_server_thread(void*)>:
 80213e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80213e8:	4c1c      	ldr	r4, [pc, #112]	@ (802145c <usb_server_thread(void*)+0x78>)
 80213ea:	4f1d      	ldr	r7, [pc, #116]	@ (8021460 <usb_server_thread(void*)+0x7c>)
 80213ec:	4d1d      	ldr	r5, [pc, #116]	@ (8021464 <usb_server_thread(void*)+0x80>)
 80213ee:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 8021478 <usb_server_thread(void*)+0x94>
 80213f2:	4e1d      	ldr	r6, [pc, #116]	@ (8021468 <usb_server_thread(void*)+0x84>)
 80213f4:	6820      	ldr	r0, [r4, #0]
 80213f6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80213fa:	f7e6 fb81 	bl	8007b00 <osSemaphoreWait>
 80213fe:	4603      	mov	r3, r0
 8021400:	2800      	cmp	r0, #0
 8021402:	d1f7      	bne.n	80213f4 <usb_server_thread(void*)+0x10>
 8021404:	683a      	ldr	r2, [r7, #0]
 8021406:	7a29      	ldrb	r1, [r5, #8]
 8021408:	3201      	adds	r2, #1
 802140a:	603a      	str	r2, [r7, #0]
 802140c:	b191      	cbz	r1, 8021434 <usb_server_thread(void*)+0x50>
 802140e:	e9d5 c900 	ldrd	ip, r9, [r5]
 8021412:	f898 e096 	ldrb.w	lr, [r8, #150]	@ 0x96
 8021416:	4a15      	ldr	r2, [pc, #84]	@ (802146c <usb_server_thread(void*)+0x88>)
 8021418:	4815      	ldr	r0, [pc, #84]	@ (8021470 <usb_server_thread(void*)+0x8c>)
 802141a:	722b      	strb	r3, [r5, #8]
 802141c:	4661      	mov	r1, ip
 802141e:	f1be 0f00 	cmp.w	lr, #0
 8021422:	d016      	beq.n	8021452 <usb_server_thread(void*)+0x6e>
 8021424:	4649      	mov	r1, r9
 8021426:	4660      	mov	r0, ip
 8021428:	f7ff fe80 	bl	802112c <ASCII_protocol_parse_stream(unsigned char const*, unsigned int, StreamSink&)>
 802142c:	7a69      	ldrb	r1, [r5, #9]
 802142e:	4811      	ldr	r0, [pc, #68]	@ (8021474 <usb_server_thread(void*)+0x90>)
 8021430:	f7e6 fd4a 	bl	8007ec8 <USBD_CDC_ReceivePacket>
 8021434:	7a33      	ldrb	r3, [r6, #8]
 8021436:	2b00      	cmp	r3, #0
 8021438:	d0dc      	beq.n	80213f4 <usb_server_thread(void*)+0x10>
 802143a:	e9d6 1200 	ldrd	r1, r2, [r6]
 802143e:	2300      	movs	r3, #0
 8021440:	480b      	ldr	r0, [pc, #44]	@ (8021470 <usb_server_thread(void*)+0x8c>)
 8021442:	7233      	strb	r3, [r6, #8]
 8021444:	f000 fafc 	bl	8021a40 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)>
 8021448:	7a71      	ldrb	r1, [r6, #9]
 802144a:	480a      	ldr	r0, [pc, #40]	@ (8021474 <usb_server_thread(void*)+0x90>)
 802144c:	f7e6 fd3c 	bl	8007ec8 <USBD_CDC_ReceivePacket>
 8021450:	e7d0      	b.n	80213f4 <usb_server_thread(void*)+0x10>
 8021452:	464a      	mov	r2, r9
 8021454:	f000 faf4 	bl	8021a40 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)>
 8021458:	e7e8      	b.n	802142c <usb_server_thread(void*)+0x48>
 802145a:	bf00      	nop
 802145c:	20000804 	.word	0x20000804
 8021460:	2000d410 	.word	0x2000d410
 8021464:	20000410 	.word	0x20000410
 8021468:	20000400 	.word	0x20000400
 802146c:	2000d3f0 	.word	0x2000d3f0
 8021470:	2000d3c8 	.word	0x2000d3c8
 8021474:	20001278 	.word	0x20001278
 8021478:	20001840 	.word	0x20001840

0802147c <USBSender::process_packet(unsigned char const*, unsigned int)>:
 802147c:	2a40      	cmp	r2, #64	@ 0x40
 802147e:	d820      	bhi.n	80214c2 <USBSender::process_packet(unsigned char const*, unsigned int)+0x46>
 8021480:	6883      	ldr	r3, [r0, #8]
 8021482:	b570      	push	{r4, r5, r6, lr}
 8021484:	4606      	mov	r6, r0
 8021486:	460d      	mov	r5, r1
 8021488:	6818      	ldr	r0, [r3, #0]
 802148a:	210a      	movs	r1, #10
 802148c:	4614      	mov	r4, r2
 802148e:	f7e6 fb37 	bl	8007b00 <osSemaphoreWait>
 8021492:	b950      	cbnz	r0, 80214aa <USBSender::process_packet(unsigned char const*, unsigned int)+0x2e>
 8021494:	7932      	ldrb	r2, [r6, #4]
 8021496:	b2a1      	uxth	r1, r4
 8021498:	4628      	mov	r0, r5
 802149a:	f7e3 fb13 	bl	8004ac4 <CDC_Transmit_FS>
 802149e:	b948      	cbnz	r0, 80214b4 <USBSender::process_packet(unsigned char const*, unsigned int)+0x38>
 80214a0:	4a09      	ldr	r2, [pc, #36]	@ (80214c8 <USBSender::process_packet(unsigned char const*, unsigned int)+0x4c>)
 80214a2:	6853      	ldr	r3, [r2, #4]
 80214a4:	3301      	adds	r3, #1
 80214a6:	6053      	str	r3, [r2, #4]
 80214a8:	bd70      	pop	{r4, r5, r6, pc}
 80214aa:	4a07      	ldr	r2, [pc, #28]	@ (80214c8 <USBSender::process_packet(unsigned char const*, unsigned int)+0x4c>)
 80214ac:	6893      	ldr	r3, [r2, #8]
 80214ae:	3301      	adds	r3, #1
 80214b0:	6093      	str	r3, [r2, #8]
 80214b2:	e7ef      	b.n	8021494 <USBSender::process_packet(unsigned char const*, unsigned int)+0x18>
 80214b4:	68b3      	ldr	r3, [r6, #8]
 80214b6:	6818      	ldr	r0, [r3, #0]
 80214b8:	f7e6 fb4e 	bl	8007b58 <osSemaphoreRelease>
 80214bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80214c0:	bd70      	pop	{r4, r5, r6, pc}
 80214c2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80214c6:	4770      	bx	lr
 80214c8:	2000d410 	.word	0x2000d410

080214cc <usb_rx_process_packet>:
 80214cc:	b410      	push	{r4}
 80214ce:	4b0b      	ldr	r3, [pc, #44]	@ (80214fc <usb_rx_process_packet+0x30>)
 80214d0:	f893 c009 	ldrb.w	ip, [r3, #9]
 80214d4:	4594      	cmp	ip, r2
 80214d6:	4604      	mov	r4, r0
 80214d8:	d003      	beq.n	80214e2 <usb_rx_process_packet+0x16>
 80214da:	4b09      	ldr	r3, [pc, #36]	@ (8021500 <usb_rx_process_packet+0x34>)
 80214dc:	7a58      	ldrb	r0, [r3, #9]
 80214de:	4290      	cmp	r0, r2
 80214e0:	d109      	bne.n	80214f6 <usb_rx_process_packet+0x2a>
 80214e2:	4808      	ldr	r0, [pc, #32]	@ (8021504 <usb_rx_process_packet+0x38>)
 80214e4:	2201      	movs	r2, #1
 80214e6:	e9c3 4100 	strd	r4, r1, [r3]
 80214ea:	6800      	ldr	r0, [r0, #0]
 80214ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80214f0:	721a      	strb	r2, [r3, #8]
 80214f2:	f7e6 bb31 	b.w	8007b58 <osSemaphoreRelease>
 80214f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80214fa:	4770      	bx	lr
 80214fc:	20000410 	.word	0x20000410
 8021500:	20000400 	.word	0x20000400
 8021504:	20000804 	.word	0x20000804

08021508 <start_usb_server>:
 8021508:	b510      	push	{r4, lr}
 802150a:	4c09      	ldr	r4, [pc, #36]	@ (8021530 <start_usb_server+0x28>)
 802150c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 802150e:	b086      	sub	sp, #24
 8021510:	f10d 0c04 	add.w	ip, sp, #4
 8021514:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8021518:	6823      	ldr	r3, [r4, #0]
 802151a:	f8cc 3000 	str.w	r3, [ip]
 802151e:	2100      	movs	r1, #0
 8021520:	a801      	add	r0, sp, #4
 8021522:	f7e6 fa65 	bl	80079f0 <osThreadCreate>
 8021526:	4b03      	ldr	r3, [pc, #12]	@ (8021534 <start_usb_server+0x2c>)
 8021528:	6018      	str	r0, [r3, #0]
 802152a:	b006      	add	sp, #24
 802152c:	bd10      	pop	{r4, pc}
 802152e:	bf00      	nop
 8021530:	08029560 	.word	0x08029560
 8021534:	2000d41c 	.word	0x2000d41c

08021538 <_GLOBAL__sub_I_usb_thread>:
 8021538:	b538      	push	{r3, r4, r5, lr}
 802153a:	4b0d      	ldr	r3, [pc, #52]	@ (8021570 <_GLOBAL__sub_I_usb_thread+0x38>)
 802153c:	4c0d      	ldr	r4, [pc, #52]	@ (8021574 <_GLOBAL__sub_I_usb_thread+0x3c>)
 802153e:	490e      	ldr	r1, [pc, #56]	@ (8021578 <_GLOBAL__sub_I_usb_thread+0x40>)
 8021540:	4a0e      	ldr	r2, [pc, #56]	@ (802157c <_GLOBAL__sub_I_usb_thread+0x44>)
 8021542:	6019      	str	r1, [r3, #0]
 8021544:	6021      	str	r1, [r4, #0]
 8021546:	2103      	movs	r1, #3
 8021548:	480d      	ldr	r0, [pc, #52]	@ (8021580 <_GLOBAL__sub_I_usb_thread+0x48>)
 802154a:	7121      	strb	r1, [r4, #4]
 802154c:	490d      	ldr	r1, [pc, #52]	@ (8021584 <_GLOBAL__sub_I_usb_thread+0x4c>)
 802154e:	4d0e      	ldr	r5, [pc, #56]	@ (8021588 <_GLOBAL__sub_I_usb_thread+0x50>)
 8021550:	6011      	str	r1, [r2, #0]
 8021552:	490e      	ldr	r1, [pc, #56]	@ (802158c <_GLOBAL__sub_I_usb_thread+0x54>)
 8021554:	6053      	str	r3, [r2, #4]
 8021556:	6001      	str	r1, [r0, #0]
 8021558:	6044      	str	r4, [r0, #4]
 802155a:	60a5      	str	r5, [r4, #8]
 802155c:	2220      	movs	r2, #32
 802155e:	2401      	movs	r4, #1
 8021560:	2100      	movs	r1, #0
 8021562:	3008      	adds	r0, #8
 8021564:	609d      	str	r5, [r3, #8]
 8021566:	711c      	strb	r4, [r3, #4]
 8021568:	f003 f89d 	bl	80246a6 <memset>
 802156c:	bd38      	pop	{r3, r4, r5, pc}
 802156e:	bf00      	nop
 8021570:	2000d404 	.word	0x2000d404
 8021574:	2000d3f8 	.word	0x2000d3f8
 8021578:	08036e5c 	.word	0x08036e5c
 802157c:	2000d3f0 	.word	0x2000d3f0
 8021580:	2000d3c8 	.word	0x2000d3c8
 8021584:	08036e68 	.word	0x08036e68
 8021588:	20000800 	.word	0x20000800
 802158c:	08036f7c 	.word	0x08036f7c

08021590 <operator|=(ODriveIntf::CanIntf::Error&, ODriveIntf::CanIntf::Error) [clone .isra.0]>:
 8021590:	7803      	ldrb	r3, [r0, #0]
 8021592:	4319      	orrs	r1, r3
 8021594:	7001      	strb	r1, [r0, #0]
 8021596:	4770      	bx	lr

08021598 <ODriveCAN::set_baud_rate(unsigned long)>:
 8021598:	b538      	push	{r3, r4, r5, lr}
 802159a:	4b18      	ldr	r3, [pc, #96]	@ (80215fc <ODriveCAN::set_baud_rate(unsigned long)+0x64>)
 802159c:	4299      	cmp	r1, r3
 802159e:	4604      	mov	r4, r0
 80215a0:	d027      	beq.n	80215f2 <ODriveCAN::set_baud_rate(unsigned long)+0x5a>
 80215a2:	d80a      	bhi.n	80215ba <ODriveCAN::set_baud_rate(unsigned long)+0x22>
 80215a4:	4b16      	ldr	r3, [pc, #88]	@ (8021600 <ODriveCAN::set_baud_rate(unsigned long)+0x68>)
 80215a6:	4299      	cmp	r1, r3
 80215a8:	d01f      	beq.n	80215ea <ODriveCAN::set_baud_rate(unsigned long)+0x52>
 80215aa:	4b16      	ldr	r3, [pc, #88]	@ (8021604 <ODriveCAN::set_baud_rate(unsigned long)+0x6c>)
 80215ac:	4299      	cmp	r1, r3
 80215ae:	d115      	bne.n	80215dc <ODriveCAN::set_baud_rate(unsigned long)+0x44>
 80215b0:	e9d0 3005 	ldrd	r3, r0, [r0, #20]
 80215b4:	2208      	movs	r2, #8
 80215b6:	6042      	str	r2, [r0, #4]
 80215b8:	e006      	b.n	80215c8 <ODriveCAN::set_baud_rate(unsigned long)+0x30>
 80215ba:	4b13      	ldr	r3, [pc, #76]	@ (8021608 <ODriveCAN::set_baud_rate(unsigned long)+0x70>)
 80215bc:	4299      	cmp	r1, r3
 80215be:	d10d      	bne.n	80215dc <ODriveCAN::set_baud_rate(unsigned long)+0x44>
 80215c0:	e9d0 3005 	ldrd	r3, r0, [r0, #20]
 80215c4:	2502      	movs	r5, #2
 80215c6:	6045      	str	r5, [r0, #4]
 80215c8:	6019      	str	r1, [r3, #0]
 80215ca:	f7df ff2b 	bl	8001424 <HAL_CAN_Stop>
 80215ce:	69a0      	ldr	r0, [r4, #24]
 80215d0:	f7df fde8 	bl	80011a4 <HAL_CAN_Init>
 80215d4:	69a0      	ldr	r0, [r4, #24]
 80215d6:	f7df fef7 	bl	80013c8 <HAL_CAN_Start>
 80215da:	b100      	cbz	r0, 80215de <ODriveCAN::set_baud_rate(unsigned long)+0x46>
 80215dc:	bd38      	pop	{r3, r4, r5, pc}
 80215de:	69a0      	ldr	r0, [r4, #24]
 80215e0:	2102      	movs	r1, #2
 80215e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80215e6:	f7e0 b855 	b.w	8001694 <HAL_CAN_ActivateNotification>
 80215ea:	e9d0 3005 	ldrd	r3, r0, [r0, #20]
 80215ee:	2210      	movs	r2, #16
 80215f0:	e7e1      	b.n	80215b6 <ODriveCAN::set_baud_rate(unsigned long)+0x1e>
 80215f2:	e9d0 3005 	ldrd	r3, r0, [r0, #20]
 80215f6:	2204      	movs	r2, #4
 80215f8:	e7dd      	b.n	80215b6 <ODriveCAN::set_baud_rate(unsigned long)+0x1e>
 80215fa:	bf00      	nop
 80215fc:	0007a120 	.word	0x0007a120
 8021600:	0001e848 	.word	0x0001e848
 8021604:	0003d090 	.word	0x0003d090
 8021608:	000f4240 	.word	0x000f4240

0802160c <ODriveCAN::ODriveCAN(ODriveCAN::Config_t&, __CAN_HandleTypeDef*)>:
 802160c:	b410      	push	{r4}
 802160e:	4c08      	ldr	r4, [pc, #32]	@ (8021630 <ODriveCAN::ODriveCAN(ODriveCAN::Config_t&, __CAN_HandleTypeDef*)+0x24>)
 8021610:	6004      	str	r4, [r0, #0]
 8021612:	f04f 0c00 	mov.w	ip, #0
 8021616:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 802161a:	60c4      	str	r4, [r0, #12]
 802161c:	e9c0 1205 	strd	r1, r2, [r0, #20]
 8021620:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021624:	f880 c010 	strb.w	ip, [r0, #16]
 8021628:	f880 c011 	strb.w	ip, [r0, #17]
 802162c:	4770      	bx	lr
 802162e:	bf00      	nop
 8021630:	08036eb4 	.word	0x08036eb4

08021634 <ODriveCAN::start_can_server()>:
 8021634:	b530      	push	{r4, r5, lr}
 8021636:	6942      	ldr	r2, [r0, #20]
 8021638:	6803      	ldr	r3, [r0, #0]
 802163a:	6811      	ldr	r1, [r2, #0]
 802163c:	681b      	ldr	r3, [r3, #0]
 802163e:	4604      	mov	r4, r0
 8021640:	b091      	sub	sp, #68	@ 0x44
 8021642:	4798      	blx	r3
 8021644:	69a0      	ldr	r0, [r4, #24]
 8021646:	f7df fdad 	bl	80011a4 <HAL_CAN_Init>
 802164a:	2200      	movs	r2, #0
 802164c:	2300      	movs	r3, #0
 802164e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021652:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8021656:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 802165a:	69a0      	ldr	r0, [r4, #24]
 802165c:	2200      	movs	r2, #0
 802165e:	2301      	movs	r3, #1
 8021660:	2501      	movs	r5, #1
 8021662:	a906      	add	r1, sp, #24
 8021664:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8021668:	950e      	str	r5, [sp, #56]	@ 0x38
 802166a:	f7df fe1b 	bl	80012a4 <HAL_CAN_ConfigFilter>
 802166e:	69a0      	ldr	r0, [r4, #24]
 8021670:	f7df feaa 	bl	80013c8 <HAL_CAN_Start>
 8021674:	b1b8      	cbz	r0, 80216a6 <ODriveCAN::start_can_server()+0x72>
 8021676:	4605      	mov	r5, r0
 8021678:	2200      	movs	r2, #0
 802167a:	e9cd 2203 	strd	r2, r2, [sp, #12]
 802167e:	68e3      	ldr	r3, [r4, #12]
 8021680:	4a0c      	ldr	r2, [pc, #48]	@ (80216b4 <ODriveCAN::start_can_server()+0x80>)
 8021682:	490d      	ldr	r1, [pc, #52]	@ (80216b8 <ODriveCAN::start_can_server()+0x84>)
 8021684:	089b      	lsrs	r3, r3, #2
 8021686:	e9cd 1201 	strd	r1, r2, [sp, #4]
 802168a:	a801      	add	r0, sp, #4
 802168c:	4621      	mov	r1, r4
 802168e:	9305      	str	r3, [sp, #20]
 8021690:	f7e6 f9ae 	bl	80079f0 <osThreadCreate>
 8021694:	60a0      	str	r0, [r4, #8]
 8021696:	1e28      	subs	r0, r5, #0
 8021698:	f04f 0301 	mov.w	r3, #1
 802169c:	bf18      	it	ne
 802169e:	2001      	movne	r0, #1
 80216a0:	7463      	strb	r3, [r4, #17]
 80216a2:	b011      	add	sp, #68	@ 0x44
 80216a4:	bd30      	pop	{r4, r5, pc}
 80216a6:	69a0      	ldr	r0, [r4, #24]
 80216a8:	2102      	movs	r1, #2
 80216aa:	f7df fff3 	bl	8001694 <HAL_CAN_ActivateNotification>
 80216ae:	4605      	mov	r5, r0
 80216b0:	e7e2      	b.n	8021678 <ODriveCAN::start_can_server()+0x44>
 80216b2:	bf00      	nop
 80216b4:	08021805 	.word	0x08021805
 80216b8:	0802abb4 	.word	0x0802abb4

080216bc <ODriveCAN::write(can_Message_t&)>:
 80216bc:	b530      	push	{r4, r5, lr}
 80216be:	4605      	mov	r5, r0
 80216c0:	b089      	sub	sp, #36	@ 0x24
 80216c2:	6980      	ldr	r0, [r0, #24]
 80216c4:	460c      	mov	r4, r1
 80216c6:	f7e0 f955 	bl	8001974 <HAL_CAN_GetError>
 80216ca:	b9d0      	cbnz	r0, 8021702 <ODriveCAN::write(can_Message_t&)+0x46>
 80216cc:	7922      	ldrb	r2, [r4, #4]
 80216ce:	6821      	ldr	r1, [r4, #0]
 80216d0:	0092      	lsls	r2, r2, #2
 80216d2:	9204      	str	r2, [sp, #16]
 80216d4:	79a2      	ldrb	r2, [r4, #6]
 80216d6:	4603      	mov	r3, r0
 80216d8:	69a8      	ldr	r0, [r5, #24]
 80216da:	f88d 301c 	strb.w	r3, [sp, #28]
 80216de:	e9cd 1102 	strd	r1, r1, [sp, #8]
 80216e2:	e9cd 3205 	strd	r3, r2, [sp, #20]
 80216e6:	9301      	str	r3, [sp, #4]
 80216e8:	f7df ff24 	bl	8001534 <HAL_CAN_GetTxMailboxesFreeLevel>
 80216ec:	b910      	cbnz	r0, 80216f4 <ODriveCAN::write(can_Message_t&)+0x38>
 80216ee:	9801      	ldr	r0, [sp, #4]
 80216f0:	b009      	add	sp, #36	@ 0x24
 80216f2:	bd30      	pop	{r4, r5, pc}
 80216f4:	69a8      	ldr	r0, [r5, #24]
 80216f6:	ab01      	add	r3, sp, #4
 80216f8:	1de2      	adds	r2, r4, #7
 80216fa:	a902      	add	r1, sp, #8
 80216fc:	f7df fec2 	bl	8001484 <HAL_CAN_AddTxMessage>
 8021700:	e7f5      	b.n	80216ee <ODriveCAN::write(can_Message_t&)+0x32>
 8021702:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021706:	b009      	add	sp, #36	@ 0x24
 8021708:	bd30      	pop	{r4, r5, pc}
 802170a:	bf00      	nop

0802170c <ODriveCAN::read(can_Message_t&)>:
 802170c:	b530      	push	{r4, r5, lr}
 802170e:	4605      	mov	r5, r0
 8021710:	b089      	sub	sp, #36	@ 0x24
 8021712:	6980      	ldr	r0, [r0, #24]
 8021714:	460c      	mov	r4, r1
 8021716:	2100      	movs	r1, #0
 8021718:	f7df ffa8 	bl	800166c <HAL_CAN_GetRxFifoFillLevel>
 802171c:	4603      	mov	r3, r0
 802171e:	69a8      	ldr	r0, [r5, #24]
 8021720:	b1cb      	cbz	r3, 8021756 <ODriveCAN::read(can_Message_t&)+0x4a>
 8021722:	1de3      	adds	r3, r4, #7
 8021724:	aa01      	add	r2, sp, #4
 8021726:	2100      	movs	r1, #0
 8021728:	f7df ff1c 	bl	8001564 <HAL_CAN_GetRxMessage>
 802172c:	2001      	movs	r0, #1
 802172e:	9903      	ldr	r1, [sp, #12]
 8021730:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8021734:	2900      	cmp	r1, #0
 8021736:	bf18      	it	ne
 8021738:	461a      	movne	r2, r3
 802173a:	e9dd 3504 	ldrd	r3, r5, [sp, #16]
 802173e:	bf14      	ite	ne
 8021740:	2101      	movne	r1, #1
 8021742:	2100      	moveq	r1, #0
 8021744:	3b00      	subs	r3, #0
 8021746:	bf18      	it	ne
 8021748:	2301      	movne	r3, #1
 802174a:	71a5      	strb	r5, [r4, #6]
 802174c:	7121      	strb	r1, [r4, #4]
 802174e:	6022      	str	r2, [r4, #0]
 8021750:	7163      	strb	r3, [r4, #5]
 8021752:	b009      	add	sp, #36	@ 0x24
 8021754:	bd30      	pop	{r4, r5, pc}
 8021756:	2101      	movs	r1, #1
 8021758:	f7df ff88 	bl	800166c <HAL_CAN_GetRxFifoFillLevel>
 802175c:	2800      	cmp	r0, #0
 802175e:	d0e6      	beq.n	802172e <ODriveCAN::read(can_Message_t&)+0x22>
 8021760:	69a8      	ldr	r0, [r5, #24]
 8021762:	1de3      	adds	r3, r4, #7
 8021764:	aa01      	add	r2, sp, #4
 8021766:	2101      	movs	r1, #1
 8021768:	f7df fefc 	bl	8001564 <HAL_CAN_GetRxMessage>
 802176c:	e7de      	b.n	802172c <ODriveCAN::read(can_Message_t&)+0x20>
 802176e:	bf00      	nop

08021770 <ODriveCAN::can_server_thread()>:
 8021770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021774:	4f21      	ldr	r7, [pc, #132]	@ (80217fc <ODriveCAN::can_server_thread()+0x8c>)
 8021776:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 8021800 <ODriveCAN::can_server_thread()+0x90>
 802177a:	b084      	sub	sp, #16
 802177c:	4604      	mov	r4, r0
 802177e:	466e      	mov	r6, sp
 8021780:	69a0      	ldr	r0, [r4, #24]
 8021782:	f7e0 f8f7 	bl	8001974 <HAL_CAN_GetError>
 8021786:	bb28      	cbnz	r0, 80217d4 <ODriveCAN::can_server_thread()+0x64>
 8021788:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 802178c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8021790:	f8d8 0000 	ldr.w	r0, [r8]
 8021794:	210a      	movs	r1, #10
 8021796:	f7e6 f9b3 	bl	8007b00 <osSemaphoreWait>
 802179a:	e004      	b.n	80217a6 <ODriveCAN::can_server_thread()+0x36>
 802179c:	f7ff ffb6 	bl	802170c <ODriveCAN::read(can_Message_t&)>
 80217a0:	6963      	ldr	r3, [r4, #20]
 80217a2:	791b      	ldrb	r3, [r3, #4]
 80217a4:	b333      	cbz	r3, 80217f4 <ODriveCAN::can_server_thread()+0x84>
 80217a6:	2100      	movs	r1, #0
 80217a8:	69a0      	ldr	r0, [r4, #24]
 80217aa:	f7df ff5f 	bl	800166c <HAL_CAN_GetRxFifoFillLevel>
 80217ae:	2101      	movs	r1, #1
 80217b0:	4605      	mov	r5, r0
 80217b2:	69a0      	ldr	r0, [r4, #24]
 80217b4:	f7df ff5a 	bl	800166c <HAL_CAN_GetRxFifoFillLevel>
 80217b8:	4603      	mov	r3, r0
 80217ba:	42dd      	cmn	r5, r3
 80217bc:	4631      	mov	r1, r6
 80217be:	4620      	mov	r0, r4
 80217c0:	d1ec      	bne.n	802179c <ODriveCAN::can_server_thread()+0x2c>
 80217c2:	69a0      	ldr	r0, [r4, #24]
 80217c4:	2102      	movs	r1, #2
 80217c6:	f7df ff65 	bl	8001694 <HAL_CAN_ActivateNotification>
 80217ca:	69a0      	ldr	r0, [r4, #24]
 80217cc:	f7e0 f8d2 	bl	8001974 <HAL_CAN_GetError>
 80217d0:	2800      	cmp	r0, #0
 80217d2:	d0d9      	beq.n	8021788 <ODriveCAN::can_server_thread()+0x18>
 80217d4:	f5b0 3f00 	cmp.w	r0, #131072	@ 0x20000
 80217d8:	d1d2      	bne.n	8021780 <ODriveCAN::can_server_thread()+0x10>
 80217da:	69a0      	ldr	r0, [r4, #24]
 80217dc:	f7e0 f8cc 	bl	8001978 <HAL_CAN_ResetError>
 80217e0:	69a0      	ldr	r0, [r4, #24]
 80217e2:	f7df fdf1 	bl	80013c8 <HAL_CAN_Start>
 80217e6:	2800      	cmp	r0, #0
 80217e8:	d1ca      	bne.n	8021780 <ODriveCAN::can_server_thread()+0x10>
 80217ea:	69a0      	ldr	r0, [r4, #24]
 80217ec:	2102      	movs	r1, #2
 80217ee:	f7df ff51 	bl	8001694 <HAL_CAN_ActivateNotification>
 80217f2:	e7ea      	b.n	80217ca <ODriveCAN::can_server_thread()+0x5a>
 80217f4:	4630      	mov	r0, r6
 80217f6:	f7f0 fec3 	bl	8012580 <CANSimple::handle_can_message(can_Message_t&)>
 80217fa:	e7d4      	b.n	80217a6 <ODriveCAN::can_server_thread()+0x36>
 80217fc:	08029574 	.word	0x08029574
 8021800:	200007fc 	.word	0x200007fc

08021804 <can_server_thread_wrapper(void*)>:
 8021804:	b508      	push	{r3, lr}
 8021806:	f7ff ffb3 	bl	8021770 <ODriveCAN::can_server_thread()>
 802180a:	bf00      	nop

0802180c <ODriveCAN::set_error(ODriveIntf::CanIntf::Error)>:
 802180c:	3010      	adds	r0, #16
 802180e:	f7ff bebf 	b.w	8021590 <operator|=(ODriveIntf::CanIntf::Error&, ODriveIntf::CanIntf::Error) [clone .isra.0]>
 8021812:	bf00      	nop

08021814 <ODriveCAN::send_heartbeat(Axis*)>:
 8021814:	68cb      	ldr	r3, [r1, #12]
 8021816:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8021818:	b903      	cbnz	r3, 802181c <ODriveCAN::send_heartbeat(Axis*)+0x8>
 802181a:	4770      	bx	lr
 802181c:	b570      	push	{r4, r5, r6, lr}
 802181e:	460c      	mov	r4, r1
 8021820:	4605      	mov	r5, r0
 8021822:	f7e6 f8dd 	bl	80079e0 <osKernelSysTick>
 8021826:	68e2      	ldr	r2, [r4, #12]
 8021828:	f8d4 3080 	ldr.w	r3, [r4, #128]	@ 0x80
 802182c:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 802182e:	1ac3      	subs	r3, r0, r3
 8021830:	4293      	cmp	r3, r2
 8021832:	4606      	mov	r6, r0
 8021834:	d304      	bcc.n	8021840 <ODriveCAN::send_heartbeat(Axis*)+0x2c>
 8021836:	696b      	ldr	r3, [r5, #20]
 8021838:	791b      	ldrb	r3, [r3, #4]
 802183a:	b113      	cbz	r3, 8021842 <ODriveCAN::send_heartbeat(Axis*)+0x2e>
 802183c:	f8c4 6080 	str.w	r6, [r4, #128]	@ 0x80
 8021840:	bd70      	pop	{r4, r5, r6, pc}
 8021842:	4620      	mov	r0, r4
 8021844:	f7f0 ffca 	bl	80127dc <CANSimple::send_heartbeat(Axis*)>
 8021848:	e7f8      	b.n	802183c <ODriveCAN::send_heartbeat(Axis*)+0x28>
 802184a:	bf00      	nop

0802184c <ODriveCAN::get_encoder_estimates_callback(Axis*)>:
 802184c:	68cb      	ldr	r3, [r1, #12]
 802184e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8021850:	b903      	cbnz	r3, 8021854 <ODriveCAN::get_encoder_estimates_callback(Axis*)+0x8>
 8021852:	4770      	bx	lr
 8021854:	b570      	push	{r4, r5, r6, lr}
 8021856:	460c      	mov	r4, r1
 8021858:	4605      	mov	r5, r0
 802185a:	f7e6 f8c1 	bl	80079e0 <osKernelSysTick>
 802185e:	68e2      	ldr	r2, [r4, #12]
 8021860:	f8d4 3084 	ldr.w	r3, [r4, #132]	@ 0x84
 8021864:	6f92      	ldr	r2, [r2, #120]	@ 0x78
 8021866:	1ac3      	subs	r3, r0, r3
 8021868:	4293      	cmp	r3, r2
 802186a:	4606      	mov	r6, r0
 802186c:	d304      	bcc.n	8021878 <ODriveCAN::get_encoder_estimates_callback(Axis*)+0x2c>
 802186e:	696b      	ldr	r3, [r5, #20]
 8021870:	791b      	ldrb	r3, [r3, #4]
 8021872:	b113      	cbz	r3, 802187a <ODriveCAN::get_encoder_estimates_callback(Axis*)+0x2e>
 8021874:	f8c4 6084 	str.w	r6, [r4, #132]	@ 0x84
 8021878:	bd70      	pop	{r4, r5, r6, pc}
 802187a:	4620      	mov	r0, r4
 802187c:	f7f0 fe18 	bl	80124b0 <CANSimple::get_encoder_estimates_callback(Axis*)>
 8021880:	e7f8      	b.n	8021874 <ODriveCAN::get_encoder_estimates_callback(Axis*)+0x28>
 8021882:	bf00      	nop

08021884 <HAL_CAN_TxMailbox0CompleteCallback>:
 8021884:	4770      	bx	lr
 8021886:	bf00      	nop

08021888 <HAL_CAN_TxMailbox1CompleteCallback>:
 8021888:	4770      	bx	lr
 802188a:	bf00      	nop

0802188c <HAL_CAN_TxMailbox2CompleteCallback>:
 802188c:	4770      	bx	lr
 802188e:	bf00      	nop

08021890 <HAL_CAN_TxMailbox0AbortCallback>:
 8021890:	4770      	bx	lr
 8021892:	bf00      	nop

08021894 <HAL_CAN_TxMailbox1AbortCallback>:
 8021894:	4770      	bx	lr
 8021896:	bf00      	nop

08021898 <HAL_CAN_TxMailbox2AbortCallback>:
 8021898:	4770      	bx	lr
 802189a:	bf00      	nop

0802189c <HAL_CAN_RxFifo0MsgPendingCallback>:
 802189c:	b508      	push	{r3, lr}
 802189e:	2102      	movs	r1, #2
 80218a0:	f7df ff0e 	bl	80016c0 <HAL_CAN_DeactivateNotification>
 80218a4:	4b02      	ldr	r3, [pc, #8]	@ (80218b0 <HAL_CAN_RxFifo0MsgPendingCallback+0x14>)
 80218a6:	6818      	ldr	r0, [r3, #0]
 80218a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80218ac:	f7e6 b954 	b.w	8007b58 <osSemaphoreRelease>
 80218b0:	200007fc 	.word	0x200007fc

080218b4 <HAL_CAN_RxFifo0FullCallback>:
 80218b4:	4770      	bx	lr
 80218b6:	bf00      	nop

080218b8 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80218b8:	4770      	bx	lr
 80218ba:	bf00      	nop

080218bc <HAL_CAN_RxFifo1FullCallback>:
 80218bc:	4770      	bx	lr
 80218be:	bf00      	nop

080218c0 <HAL_CAN_SleepCallback>:
 80218c0:	4770      	bx	lr
 80218c2:	bf00      	nop

080218c4 <HAL_CAN_WakeUpFromRxMsgCallback>:
 80218c4:	4770      	bx	lr
 80218c6:	bf00      	nop

080218c8 <HAL_CAN_ErrorCallback>:
 80218c8:	f7e0 b856 	b.w	8001978 <HAL_CAN_ResetError>

080218cc <I2CSender::process_packet(unsigned char const*, unsigned int)>:
 80218cc:	3a02      	subs	r2, #2
 80218ce:	2a80      	cmp	r2, #128	@ 0x80
 80218d0:	d901      	bls.n	80218d6 <I2CSender::process_packet(unsigned char const*, unsigned int)+0xa>
 80218d2:	2000      	movs	r0, #0
 80218d4:	4770      	bx	lr
 80218d6:	b508      	push	{r3, lr}
 80218d8:	3102      	adds	r1, #2
 80218da:	4802      	ldr	r0, [pc, #8]	@ (80218e4 <I2CSender::process_packet(unsigned char const*, unsigned int)+0x18>)
 80218dc:	f002 ffd5 	bl	802488a <memcpy>
 80218e0:	2000      	movs	r0, #0
 80218e2:	bd08      	pop	{r3, pc}
 80218e4:	2000d448 	.word	0x2000d448

080218e8 <start_i2c_server>:
 80218e8:	4801      	ldr	r0, [pc, #4]	@ (80218f0 <start_i2c_server+0x8>)
 80218ea:	f7e8 bef5 	b.w	800a6d8 <HAL_I2C_EnableListen_IT>
 80218ee:	bf00      	nop
 80218f0:	20001778 	.word	0x20001778

080218f4 <i2c_handle_packet(I2C_HandleTypeDef*)>:
 80218f4:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 80218f6:	b292      	uxth	r2, r2
 80218f8:	f1c2 0284 	rsb	r2, r2, #132	@ 0x84
 80218fc:	2a04      	cmp	r2, #4
 80218fe:	b538      	push	{r3, r4, r5, lr}
 8021900:	4604      	mov	r4, r0
 8021902:	d807      	bhi.n	8021914 <i2c_handle_packet(I2C_HandleTypeDef*)+0x20>
 8021904:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8021908:	2b2a      	cmp	r3, #42	@ 0x2a
 802190a:	bf04      	itt	eq
 802190c:	2328      	moveq	r3, #40	@ 0x28
 802190e:	f884 303d 	strbeq.w	r3, [r4, #61]	@ 0x3d
 8021912:	bd38      	pop	{r3, r4, r5, pc}
 8021914:	490b      	ldr	r1, [pc, #44]	@ (8021944 <i2c_handle_packet(I2C_HandleTypeDef*)+0x50>)
 8021916:	4d0c      	ldr	r5, [pc, #48]	@ (8021948 <i2c_handle_packet(I2C_HandleTypeDef*)+0x54>)
 8021918:	688b      	ldr	r3, [r1, #8]
 802191a:	3301      	adds	r3, #1
 802191c:	608b      	str	r3, [r1, #8]
 802191e:	796b      	ldrb	r3, [r5, #5]
 8021920:	7929      	ldrb	r1, [r5, #4]
 8021922:	70a9      	strb	r1, [r5, #2]
 8021924:	2000      	movs	r0, #0
 8021926:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 802192a:	8028      	strh	r0, [r5, #0]
 802192c:	70eb      	strb	r3, [r5, #3]
 802192e:	4629      	mov	r1, r5
 8021930:	231e      	movs	r3, #30
 8021932:	4806      	ldr	r0, [pc, #24]	@ (802194c <i2c_handle_packet(I2C_HandleTypeDef*)+0x58>)
 8021934:	80ab      	strh	r3, [r5, #4]
 8021936:	f000 f883 	bl	8021a40 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)>
 802193a:	3504      	adds	r5, #4
 802193c:	2380      	movs	r3, #128	@ 0x80
 802193e:	6265      	str	r5, [r4, #36]	@ 0x24
 8021940:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8021942:	e7df      	b.n	8021904 <i2c_handle_packet(I2C_HandleTypeDef*)+0x10>
 8021944:	2000d54c 	.word	0x2000d54c
 8021948:	2000d4c8 	.word	0x2000d4c8
 802194c:	2000d420 	.word	0x2000d420

08021950 <HAL_I2C_ListenCpltCallback>:
 8021950:	8d42      	ldrh	r2, [r0, #42]	@ 0x2a
 8021952:	b292      	uxth	r2, r2
 8021954:	f1c2 0284 	rsb	r2, r2, #132	@ 0x84
 8021958:	2a04      	cmp	r2, #4
 802195a:	b538      	push	{r3, r4, r5, lr}
 802195c:	4604      	mov	r4, r0
 802195e:	d80b      	bhi.n	8021978 <HAL_I2C_ListenCpltCallback+0x28>
 8021960:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8021964:	2b2a      	cmp	r3, #42	@ 0x2a
 8021966:	bf04      	itt	eq
 8021968:	2328      	moveq	r3, #40	@ 0x28
 802196a:	f884 303d 	strbeq.w	r3, [r4, #61]	@ 0x3d
 802196e:	4620      	mov	r0, r4
 8021970:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021974:	f7e8 beb0 	b.w	800a6d8 <HAL_I2C_EnableListen_IT>
 8021978:	490b      	ldr	r1, [pc, #44]	@ (80219a8 <HAL_I2C_ListenCpltCallback+0x58>)
 802197a:	4d0c      	ldr	r5, [pc, #48]	@ (80219ac <HAL_I2C_ListenCpltCallback+0x5c>)
 802197c:	688b      	ldr	r3, [r1, #8]
 802197e:	3301      	adds	r3, #1
 8021980:	608b      	str	r3, [r1, #8]
 8021982:	796b      	ldrb	r3, [r5, #5]
 8021984:	7929      	ldrb	r1, [r5, #4]
 8021986:	70a9      	strb	r1, [r5, #2]
 8021988:	2000      	movs	r0, #0
 802198a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 802198e:	8028      	strh	r0, [r5, #0]
 8021990:	70eb      	strb	r3, [r5, #3]
 8021992:	4629      	mov	r1, r5
 8021994:	231e      	movs	r3, #30
 8021996:	4806      	ldr	r0, [pc, #24]	@ (80219b0 <HAL_I2C_ListenCpltCallback+0x60>)
 8021998:	80ab      	strh	r3, [r5, #4]
 802199a:	f000 f851 	bl	8021a40 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)>
 802199e:	3504      	adds	r5, #4
 80219a0:	2380      	movs	r3, #128	@ 0x80
 80219a2:	6265      	str	r5, [r4, #36]	@ 0x24
 80219a4:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80219a6:	e7db      	b.n	8021960 <HAL_I2C_ListenCpltCallback+0x10>
 80219a8:	2000d54c 	.word	0x2000d54c
 80219ac:	2000d4c8 	.word	0x2000d4c8
 80219b0:	2000d420 	.word	0x2000d420

080219b4 <HAL_I2C_AddrCallback>:
 80219b4:	4a0d      	ldr	r2, [pc, #52]	@ (80219ec <HAL_I2C_AddrCallback+0x38>)
 80219b6:	6853      	ldr	r3, [r2, #4]
 80219b8:	b570      	push	{r4, r5, r6, lr}
 80219ba:	3301      	adds	r3, #1
 80219bc:	460d      	mov	r5, r1
 80219be:	4604      	mov	r4, r0
 80219c0:	6053      	str	r3, [r2, #4]
 80219c2:	f7ff ff97 	bl	80218f4 <i2c_handle_packet(I2C_HandleTypeDef*)>
 80219c6:	2d01      	cmp	r5, #1
 80219c8:	d007      	beq.n	80219da <HAL_I2C_AddrCallback+0x26>
 80219ca:	4620      	mov	r0, r4
 80219cc:	4908      	ldr	r1, [pc, #32]	@ (80219f0 <HAL_I2C_AddrCallback+0x3c>)
 80219ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80219d2:	2304      	movs	r3, #4
 80219d4:	2280      	movs	r2, #128	@ 0x80
 80219d6:	f7e8 bdff 	b.w	800a5d8 <HAL_I2C_Slave_Sequential_Transmit_IT>
 80219da:	4620      	mov	r0, r4
 80219dc:	4905      	ldr	r1, [pc, #20]	@ (80219f4 <HAL_I2C_AddrCallback+0x40>)
 80219de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80219e2:	2304      	movs	r3, #4
 80219e4:	2280      	movs	r2, #128	@ 0x80
 80219e6:	f7e8 be37 	b.w	800a658 <HAL_I2C_Slave_Sequential_Receive_IT>
 80219ea:	bf00      	nop
 80219ec:	2000d54c 	.word	0x2000d54c
 80219f0:	2000d448 	.word	0x2000d448
 80219f4:	2000d4cc 	.word	0x2000d4cc

080219f8 <HAL_I2C_ErrorCallback>:
 80219f8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80219fa:	f033 0304 	bics.w	r3, r3, #4
 80219fe:	d100      	bne.n	8021a02 <HAL_I2C_ErrorCallback+0xa>
 8021a00:	4770      	bx	lr
 8021a02:	4a03      	ldr	r2, [pc, #12]	@ (8021a10 <HAL_I2C_ErrorCallback+0x18>)
 8021a04:	68d3      	ldr	r3, [r2, #12]
 8021a06:	3301      	adds	r3, #1
 8021a08:	60d3      	str	r3, [r2, #12]
 8021a0a:	f7e8 be65 	b.w	800a6d8 <HAL_I2C_EnableListen_IT>
 8021a0e:	bf00      	nop
 8021a10:	2000d54c 	.word	0x2000d54c

08021a14 <_GLOBAL__sub_I_i2c_stats_>:
 8021a14:	b510      	push	{r4, lr}
 8021a16:	4805      	ldr	r0, [pc, #20]	@ (8021a2c <_GLOBAL__sub_I_i2c_stats_+0x18>)
 8021a18:	4c05      	ldr	r4, [pc, #20]	@ (8021a30 <_GLOBAL__sub_I_i2c_stats_+0x1c>)
 8021a1a:	4b06      	ldr	r3, [pc, #24]	@ (8021a34 <_GLOBAL__sub_I_i2c_stats_+0x20>)
 8021a1c:	2220      	movs	r2, #32
 8021a1e:	e9c0 4300 	strd	r4, r3, [r0]
 8021a22:	2100      	movs	r1, #0
 8021a24:	3008      	adds	r0, #8
 8021a26:	f002 fe3e 	bl	80246a6 <memset>
 8021a2a:	bd10      	pop	{r4, pc}
 8021a2c:	2000d420 	.word	0x2000d420
 8021a30:	08036f7c 	.word	0x08036f7c
 8021a34:	20000420 	.word	0x20000420

08021a38 <StreamToPacketSegmenter::get_free_space()>:
 8021a38:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021a3c:	4770      	bx	lr
 8021a3e:	bf00      	nop

08021a40 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)>:
 8021a40:	2a03      	cmp	r2, #3
 8021a42:	d945      	bls.n	8021ad0 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x90>
 8021a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021a46:	880d      	ldrh	r5, [r1, #0]
 8021a48:	042b      	lsls	r3, r5, #16
 8021a4a:	b085      	sub	sp, #20
 8021a4c:	d436      	bmi.n	8021abc <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x7c>
 8021a4e:	884e      	ldrh	r6, [r1, #2]
 8021a50:	4604      	mov	r4, r0
 8021a52:	f3c6 000e 	ubfx	r0, r6, #0, #15
 8021a56:	1d0b      	adds	r3, r1, #4
 8021a58:	b236      	sxth	r6, r6
 8021a5a:	bb90      	cbnz	r0, 8021ac2 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x82>
 8021a5c:	f04f 0c01 	mov.w	ip, #1
 8021a60:	4413      	add	r3, r2
 8021a62:	f813 7c05 	ldrb.w	r7, [r3, #-5]
 8021a66:	f813 3c06 	ldrb.w	r3, [r3, #-6]
 8021a6a:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 8021a6e:	459c      	cmp	ip, r3
 8021a70:	d12b      	bne.n	8021aca <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x8a>
 8021a72:	888f      	ldrh	r7, [r1, #4]
 8021a74:	3a08      	subs	r2, #8
 8021a76:	3106      	adds	r1, #6
 8021a78:	2f1e      	cmp	r7, #30
 8021a7a:	bf28      	it	cs
 8021a7c:	271e      	movcs	r7, #30
 8021a7e:	440a      	add	r2, r1
 8021a80:	f104 030a 	add.w	r3, r4, #10
 8021a84:	e9cd 1200 	strd	r1, r2, [sp]
 8021a88:	9302      	str	r3, [sp, #8]
 8021a8a:	aa02      	add	r2, sp, #8
 8021a8c:	443b      	add	r3, r7
 8021a8e:	4669      	mov	r1, sp
 8021a90:	9303      	str	r3, [sp, #12]
 8021a92:	f7f5 fd03 	bl	801749c <fibre::endpoint_handler(int, fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)>
 8021a96:	2e00      	cmp	r6, #0
 8021a98:	da10      	bge.n	8021abc <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x7c>
 8021a9a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8021a9e:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 8021aa2:	6860      	ldr	r0, [r4, #4]
 8021aa4:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 8021aa8:	8125      	strh	r5, [r4, #8]
 8021aaa:	1ad2      	subs	r2, r2, r3
 8021aac:	6803      	ldr	r3, [r0, #0]
 8021aae:	f1c2 0202 	rsb	r2, r2, #2
 8021ab2:	681b      	ldr	r3, [r3, #0]
 8021ab4:	443a      	add	r2, r7
 8021ab6:	f104 0108 	add.w	r1, r4, #8
 8021aba:	4798      	blx	r3
 8021abc:	2000      	movs	r0, #0
 8021abe:	b005      	add	sp, #20
 8021ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021ac2:	4f05      	ldr	r7, [pc, #20]	@ (8021ad8 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x98>)
 8021ac4:	f8b7 c000 	ldrh.w	ip, [r7]
 8021ac8:	e7ca      	b.n	8021a60 <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x20>
 8021aca:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021ace:	e7f6      	b.n	8021abe <BidirectionalPacketBasedChannel::process_packet(unsigned char const*, unsigned int)+0x7e>
 8021ad0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021ad4:	4770      	bx	lr
 8021ad6:	bf00      	nop
 8021ad8:	20008e4c 	.word	0x20008e4c

08021adc <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)>:
 8021adc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ae0:	2a00      	cmp	r2, #0
 8021ae2:	f000 808e 	beq.w	8021c02 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x126>
 8021ae6:	f04f 0800 	mov.w	r8, #0
 8021aea:	461e      	mov	r6, r3
 8021aec:	4604      	mov	r4, r0
 8021aee:	460d      	mov	r5, r1
 8021af0:	188f      	adds	r7, r1, r2
 8021af2:	4643      	mov	r3, r8
 8021af4:	68a2      	ldr	r2, [r4, #8]
 8021af6:	2a02      	cmp	r2, #2
 8021af8:	d838      	bhi.n	8021b6c <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x90>
 8021afa:	18a1      	adds	r1, r4, r2
 8021afc:	3201      	adds	r2, #1
 8021afe:	7828      	ldrb	r0, [r5, #0]
 8021b00:	60a2      	str	r2, [r4, #8]
 8021b02:	2a01      	cmp	r2, #1
 8021b04:	7108      	strb	r0, [r1, #4]
 8021b06:	d073      	beq.n	8021bf0 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x114>
 8021b08:	2a02      	cmp	r2, #2
 8021b0a:	d075      	beq.n	8021bf8 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x11c>
 8021b0c:	f104 0c04 	add.w	ip, r4, #4
 8021b10:	f104 0e07 	add.w	lr, r4, #7
 8021b14:	2242      	movs	r2, #66	@ 0x42
 8021b16:	f81c 0b01 	ldrb.w	r0, [ip], #1
 8021b1a:	2108      	movs	r1, #8
 8021b1c:	4042      	eors	r2, r0
 8021b1e:	b250      	sxtb	r0, r2
 8021b20:	0052      	lsls	r2, r2, #1
 8021b22:	2800      	cmp	r0, #0
 8021b24:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
 8021b28:	b2d2      	uxtb	r2, r2
 8021b2a:	bfb8      	it	lt
 8021b2c:	f082 0237 	eorlt.w	r2, r2, #55	@ 0x37
 8021b30:	f011 01ff 	ands.w	r1, r1, #255	@ 0xff
 8021b34:	d1f3      	bne.n	8021b1e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x42>
 8021b36:	45e6      	cmp	lr, ip
 8021b38:	d1ed      	bne.n	8021b16 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x3a>
 8021b3a:	b152      	cbz	r2, 8021b52 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x76>
 8021b3c:	60a3      	str	r3, [r4, #8]
 8021b3e:	3501      	adds	r5, #1
 8021b40:	b116      	cbz	r6, 8021b48 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x6c>
 8021b42:	6832      	ldr	r2, [r6, #0]
 8021b44:	3201      	adds	r2, #1
 8021b46:	6032      	str	r2, [r6, #0]
 8021b48:	42bd      	cmp	r5, r7
 8021b4a:	d1d3      	bne.n	8021af4 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x18>
 8021b4c:	4640      	mov	r0, r8
 8021b4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b52:	f894 a005 	ldrb.w	sl, [r4, #5]
 8021b56:	f8d4 208c 	ldr.w	r2, [r4, #140]	@ 0x8c
 8021b5a:	f10a 0a02 	add.w	sl, sl, #2
 8021b5e:	4592      	cmp	sl, r2
 8021b60:	f8c4 a090 	str.w	sl, [r4, #144]	@ 0x90
 8021b64:	d1eb      	bne.n	8021b3e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x62>
 8021b66:	f104 0b0c 	add.w	fp, r4, #12
 8021b6a:	e015      	b.n	8021b98 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0xbc>
 8021b6c:	f8d4 108c 	ldr.w	r1, [r4, #140]	@ 0x8c
 8021b70:	297f      	cmp	r1, #127	@ 0x7f
 8021b72:	d806      	bhi.n	8021b82 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0xa6>
 8021b74:	f101 0c01 	add.w	ip, r1, #1
 8021b78:	4421      	add	r1, r4
 8021b7a:	7828      	ldrb	r0, [r5, #0]
 8021b7c:	f8c4 c08c 	str.w	ip, [r4, #140]	@ 0x8c
 8021b80:	7308      	strb	r0, [r1, #12]
 8021b82:	2a03      	cmp	r2, #3
 8021b84:	d1db      	bne.n	8021b3e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x62>
 8021b86:	e9d4 2a23 	ldrd	r2, sl, [r4, #140]	@ 0x8c
 8021b8a:	4552      	cmp	r2, sl
 8021b8c:	d1d7      	bne.n	8021b3e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x62>
 8021b8e:	f104 0b0c 	add.w	fp, r4, #12
 8021b92:	f1ba 0f00 	cmp.w	sl, #0
 8021b96:	d028      	beq.n	8021bea <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x10e>
 8021b98:	f10a 090c 	add.w	r9, sl, #12
 8021b9c:	44a1      	add	r9, r4
 8021b9e:	46de      	mov	lr, fp
 8021ba0:	f241 3237 	movw	r2, #4919	@ 0x1337
 8021ba4:	f643 5065 	movw	r0, #15717	@ 0x3d65
 8021ba8:	f81e 1b01 	ldrb.w	r1, [lr], #1
 8021bac:	f04f 0c08 	mov.w	ip, #8
 8021bb0:	ea82 2201 	eor.w	r2, r2, r1, lsl #8
 8021bb4:	b211      	sxth	r1, r2
 8021bb6:	0052      	lsls	r2, r2, #1
 8021bb8:	2900      	cmp	r1, #0
 8021bba:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8021bbe:	b292      	uxth	r2, r2
 8021bc0:	bfb8      	it	lt
 8021bc2:	4042      	eorlt	r2, r0
 8021bc4:	f01c 0cff 	ands.w	ip, ip, #255	@ 0xff
 8021bc8:	d1f4      	bne.n	8021bb4 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0xd8>
 8021bca:	45ce      	cmp	lr, r9
 8021bcc:	d1ec      	bne.n	8021ba8 <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0xcc>
 8021bce:	b962      	cbnz	r2, 8021bea <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x10e>
 8021bd0:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
 8021bd4:	f8d0 c000 	ldr.w	ip, [r0]
 8021bd8:	f1aa 0202 	sub.w	r2, sl, #2
 8021bdc:	f8dc 9000 	ldr.w	r9, [ip]
 8021be0:	4659      	mov	r1, fp
 8021be2:	47c8      	blx	r9
 8021be4:	2300      	movs	r3, #0
 8021be6:	ea48 0800 	orr.w	r8, r8, r0
 8021bea:	e9c4 3323 	strd	r3, r3, [r4, #140]	@ 0x8c
 8021bee:	e7a5      	b.n	8021b3c <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x60>
 8021bf0:	7922      	ldrb	r2, [r4, #4]
 8021bf2:	2aaa      	cmp	r2, #170	@ 0xaa
 8021bf4:	d1a2      	bne.n	8021b3c <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x60>
 8021bf6:	e7a2      	b.n	8021b3e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x62>
 8021bf8:	f994 2005 	ldrsb.w	r2, [r4, #5]
 8021bfc:	2a00      	cmp	r2, #0
 8021bfe:	da9e      	bge.n	8021b3e <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x62>
 8021c00:	e79c      	b.n	8021b3c <StreamToPacketSegmenter::process_bytes(unsigned char const*, unsigned int, unsigned int*)+0x60>
 8021c02:	4690      	mov	r8, r2
 8021c04:	4640      	mov	r0, r8
 8021c06:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c0a:	bf00      	nop

08021c0c <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)>:
 8021c0c:	2a7f      	cmp	r2, #127	@ 0x7f
 8021c0e:	d874      	bhi.n	8021cfa <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xee>
 8021c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021c14:	b082      	sub	sp, #8
 8021c16:	23aa      	movs	r3, #170	@ 0xaa
 8021c18:	fa5f fc82 	uxtb.w	ip, r2
 8021c1c:	4616      	mov	r6, r2
 8021c1e:	f88d 3004 	strb.w	r3, [sp, #4]
 8021c22:	4604      	mov	r4, r0
 8021c24:	460d      	mov	r5, r1
 8021c26:	f88d c005 	strb.w	ip, [sp, #5]
 8021c2a:	2208      	movs	r2, #8
 8021c2c:	23e8      	movs	r3, #232	@ 0xe8
 8021c2e:	b259      	sxtb	r1, r3
 8021c30:	005b      	lsls	r3, r3, #1
 8021c32:	2900      	cmp	r1, #0
 8021c34:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8021c38:	b2db      	uxtb	r3, r3
 8021c3a:	bfb8      	it	lt
 8021c3c:	f083 0337 	eorlt.w	r3, r3, #55	@ 0x37
 8021c40:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8021c44:	d1f3      	bne.n	8021c2e <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0x22>
 8021c46:	ea8c 0c03 	eor.w	ip, ip, r3
 8021c4a:	2708      	movs	r7, #8
 8021c4c:	fa4f f28c 	sxtb.w	r2, ip
 8021c50:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8021c54:	2a00      	cmp	r2, #0
 8021c56:	f107 33ff 	add.w	r3, r7, #4294967295	@ 0xffffffff
 8021c5a:	fa5f fc8c 	uxtb.w	ip, ip
 8021c5e:	bfb8      	it	lt
 8021c60:	f08c 0c37 	eorlt.w	ip, ip, #55	@ 0x37
 8021c64:	f013 07ff 	ands.w	r7, r3, #255	@ 0xff
 8021c68:	d1f0      	bne.n	8021c4c <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0x40>
 8021c6a:	6860      	ldr	r0, [r4, #4]
 8021c6c:	f88d c006 	strb.w	ip, [sp, #6]
 8021c70:	6802      	ldr	r2, [r0, #0]
 8021c72:	463b      	mov	r3, r7
 8021c74:	f8d2 8000 	ldr.w	r8, [r2]
 8021c78:	a901      	add	r1, sp, #4
 8021c7a:	2203      	movs	r2, #3
 8021c7c:	47c0      	blx	r8
 8021c7e:	2800      	cmp	r0, #0
 8021c80:	d138      	bne.n	8021cf4 <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xe8>
 8021c82:	6860      	ldr	r0, [r4, #4]
 8021c84:	6802      	ldr	r2, [r0, #0]
 8021c86:	463b      	mov	r3, r7
 8021c88:	4629      	mov	r1, r5
 8021c8a:	6817      	ldr	r7, [r2, #0]
 8021c8c:	4632      	mov	r2, r6
 8021c8e:	47b8      	blx	r7
 8021c90:	bb80      	cbnz	r0, 8021cf4 <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xe8>
 8021c92:	b366      	cbz	r6, 8021cee <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xe2>
 8021c94:	442e      	add	r6, r5
 8021c96:	f241 3337 	movw	r3, #4919	@ 0x1337
 8021c9a:	f643 5165 	movw	r1, #15717	@ 0x3d65
 8021c9e:	f815 0b01 	ldrb.w	r0, [r5], #1
 8021ca2:	2208      	movs	r2, #8
 8021ca4:	ea83 2300 	eor.w	r3, r3, r0, lsl #8
 8021ca8:	fa0f fc83 	sxth.w	ip, r3
 8021cac:	005b      	lsls	r3, r3, #1
 8021cae:	f1bc 0f00 	cmp.w	ip, #0
 8021cb2:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
 8021cb6:	b29b      	uxth	r3, r3
 8021cb8:	bfb8      	it	lt
 8021cba:	404b      	eorlt	r3, r1
 8021cbc:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8021cc0:	d1f2      	bne.n	8021ca8 <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0x9c>
 8021cc2:	42b5      	cmp	r5, r6
 8021cc4:	d1eb      	bne.n	8021c9e <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0x92>
 8021cc6:	0a1a      	lsrs	r2, r3, #8
 8021cc8:	b2db      	uxtb	r3, r3
 8021cca:	6860      	ldr	r0, [r4, #4]
 8021ccc:	f88d 2000 	strb.w	r2, [sp]
 8021cd0:	6802      	ldr	r2, [r0, #0]
 8021cd2:	f88d 3001 	strb.w	r3, [sp, #1]
 8021cd6:	6814      	ldr	r4, [r2, #0]
 8021cd8:	2300      	movs	r3, #0
 8021cda:	2202      	movs	r2, #2
 8021cdc:	4669      	mov	r1, sp
 8021cde:	47a0      	blx	r4
 8021ce0:	3800      	subs	r0, #0
 8021ce2:	bf18      	it	ne
 8021ce4:	2001      	movne	r0, #1
 8021ce6:	4240      	negs	r0, r0
 8021ce8:	b002      	add	sp, #8
 8021cea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021cee:	2337      	movs	r3, #55	@ 0x37
 8021cf0:	2213      	movs	r2, #19
 8021cf2:	e7ea      	b.n	8021cca <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xbe>
 8021cf4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021cf8:	e7f6      	b.n	8021ce8 <StreamBasedPacketSink::process_packet(unsigned char const*, unsigned int)+0xdc>
 8021cfa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8021cfe:	4770      	bx	lr

08021d00 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)>:
 8021d00:	b538      	push	{r3, r4, r5, lr}
 8021d02:	e9d0 2400 	ldrd	r2, r4, [r0]
 8021d06:	2300      	movs	r3, #0
 8021d08:	460d      	mov	r5, r1
 8021d0a:	469e      	mov	lr, r3
 8021d0c:	b10c      	cbz	r4, 8021d12 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x12>
 8021d0e:	4294      	cmp	r4, r2
 8021d10:	d93c      	bls.n	8021d8c <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x8c>
 8021d12:	f812 cb01 	ldrb.w	ip, [r2], #1
 8021d16:	6002      	str	r2, [r0, #0]
 8021d18:	fa0c fc03 	lsl.w	ip, ip, r3
 8021d1c:	3308      	adds	r3, #8
 8021d1e:	2b20      	cmp	r3, #32
 8021d20:	ea4e 0e0c 	orr.w	lr, lr, ip
 8021d24:	d1f2      	bne.n	8021d0c <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0xc>
 8021d26:	f1be 3fff 	cmp.w	lr, #4294967295	@ 0xffffffff
 8021d2a:	d01c      	beq.n	8021d66 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x66>
 8021d2c:	4b18      	ldr	r3, [pc, #96]	@ (8021d90 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x90>)
 8021d2e:	681b      	ldr	r3, [r3, #0]
 8021d30:	4573      	cmp	r3, lr
 8021d32:	d801      	bhi.n	8021d38 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x38>
 8021d34:	2001      	movs	r0, #1
 8021d36:	bd38      	pop	{r3, r4, r5, pc}
 8021d38:	e9d5 0400 	ldrd	r0, r4, [r5]
 8021d3c:	eba3 030e 	sub.w	r3, r3, lr
 8021d40:	1a24      	subs	r4, r4, r0
 8021d42:	429c      	cmp	r4, r3
 8021d44:	4913      	ldr	r1, [pc, #76]	@ (8021d94 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x94>)
 8021d46:	bf28      	it	cs
 8021d48:	461c      	movcs	r4, r3
 8021d4a:	4622      	mov	r2, r4
 8021d4c:	4471      	add	r1, lr
 8021d4e:	f002 fd9c 	bl	802488a <memcpy>
 8021d52:	e9d5 3200 	ldrd	r3, r2, [r5]
 8021d56:	1ad2      	subs	r2, r2, r3
 8021d58:	42a2      	cmp	r2, r4
 8021d5a:	bf94      	ite	ls
 8021d5c:	189b      	addls	r3, r3, r2
 8021d5e:	191b      	addhi	r3, r3, r4
 8021d60:	602b      	str	r3, [r5, #0]
 8021d62:	2001      	movs	r0, #1
 8021d64:	e7e7      	b.n	8021d36 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x36>
 8021d66:	4b0c      	ldr	r3, [pc, #48]	@ (8021d98 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x98>)
 8021d68:	6869      	ldr	r1, [r5, #4]
 8021d6a:	681c      	ldr	r4, [r3, #0]
 8021d6c:	682b      	ldr	r3, [r5, #0]
 8021d6e:	2200      	movs	r2, #0
 8021d70:	fa24 f002 	lsr.w	r0, r4, r2
 8021d74:	3208      	adds	r2, #8
 8021d76:	b109      	cbz	r1, 8021d7c <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x7c>
 8021d78:	4299      	cmp	r1, r3
 8021d7a:	d907      	bls.n	8021d8c <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x8c>
 8021d7c:	7018      	strb	r0, [r3, #0]
 8021d7e:	682b      	ldr	r3, [r5, #0]
 8021d80:	2a20      	cmp	r2, #32
 8021d82:	f103 0301 	add.w	r3, r3, #1
 8021d86:	602b      	str	r3, [r5, #0]
 8021d88:	d1f2      	bne.n	8021d70 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x70>
 8021d8a:	e7d3      	b.n	8021d34 <fibre::endpoint0_handler(fibre::generic_bufptr_t<unsigned char const>*, fibre::generic_bufptr_t<unsigned char>*)+0x34>
 8021d8c:	2000      	movs	r0, #0
 8021d8e:	bd38      	pop	{r3, r4, r5, pc}
 8021d90:	0802bf78 	.word	0x0802bf78
 8021d94:	0802bf7c 	.word	0x0802bf7c
 8021d98:	20008e48 	.word	0x20008e48

08021d9c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
 8021d9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8021d9e:	2400      	movs	r4, #0
 8021da0:	2310      	movs	r3, #16
 8021da2:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8021da6:	6803      	ldr	r3, [r0, #0]
 8021da8:	4615      	mov	r5, r2
 8021daa:	699e      	ldr	r6, [r3, #24]
 8021dac:	6812      	ldr	r2, [r2, #0]
 8021dae:	466b      	mov	r3, sp
 8021db0:	e9cd 4400 	strd	r4, r4, [sp]
 8021db4:	47b0      	blx	r6
 8021db6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8021dba:	f003 0306 	and.w	r3, r3, #6
 8021dbe:	2b06      	cmp	r3, #6
 8021dc0:	bf03      	ittte	eq
 8021dc2:	9b00      	ldreq	r3, [sp, #0]
 8021dc4:	602b      	streq	r3, [r5, #0]
 8021dc6:	2001      	moveq	r0, #1
 8021dc8:	4620      	movne	r0, r4
 8021dca:	b004      	add	sp, #16
 8021dcc:	bd70      	pop	{r4, r5, r6, pc}

08021dce <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
 8021dce:	9800      	ldr	r0, [sp, #0]
 8021dd0:	4290      	cmp	r0, r2
 8021dd2:	bf0c      	ite	eq
 8021dd4:	2006      	moveq	r0, #6
 8021dd6:	2001      	movne	r0, #1
 8021dd8:	4770      	bx	lr
	...

08021ddc <__cxxabiv1::__class_type_info::~__class_type_info()>:
 8021ddc:	b510      	push	{r4, lr}
 8021dde:	4b03      	ldr	r3, [pc, #12]	@ (8021dec <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
 8021de0:	6003      	str	r3, [r0, #0]
 8021de2:	4604      	mov	r4, r0
 8021de4:	f000 fd35 	bl	8022852 <std::type_info::~type_info()>
 8021de8:	4620      	mov	r0, r4
 8021dea:	bd10      	pop	{r4, pc}
 8021dec:	080377c4 	.word	0x080377c4

08021df0 <__cxxabiv1::__class_type_info::~__class_type_info()>:
 8021df0:	b510      	push	{r4, lr}
 8021df2:	4604      	mov	r4, r0
 8021df4:	f7ff fff2 	bl	8021ddc <__cxxabiv1::__class_type_info::~__class_type_info()>
 8021df8:	4620      	mov	r0, r4
 8021dfa:	2108      	movs	r1, #8
 8021dfc:	f000 f842 	bl	8021e84 <operator delete(void*, unsigned int)>
 8021e00:	4620      	mov	r0, r4
 8021e02:	bd10      	pop	{r4, pc}

08021e04 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
 8021e04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021e08:	461f      	mov	r7, r3
 8021e0a:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
 8021e0e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021e12:	4598      	cmp	r8, r3
 8021e14:	4606      	mov	r6, r0
 8021e16:	4615      	mov	r5, r2
 8021e18:	d107      	bne.n	8021e2a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
 8021e1a:	9907      	ldr	r1, [sp, #28]
 8021e1c:	f000 fd1c 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8021e20:	b118      	cbz	r0, 8021e2a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
 8021e22:	7165      	strb	r5, [r4, #5]
 8021e24:	2000      	movs	r0, #0
 8021e26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021e2a:	4639      	mov	r1, r7
 8021e2c:	4630      	mov	r0, r6
 8021e2e:	f000 fd13 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8021e32:	2800      	cmp	r0, #0
 8021e34:	d0f6      	beq.n	8021e24 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20>
 8021e36:	2301      	movs	r3, #1
 8021e38:	f8c4 8000 	str.w	r8, [r4]
 8021e3c:	7125      	strb	r5, [r4, #4]
 8021e3e:	71a3      	strb	r3, [r4, #6]
 8021e40:	e7f0      	b.n	8021e24 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20>

08021e42 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
 8021e42:	b538      	push	{r3, r4, r5, lr}
 8021e44:	4615      	mov	r5, r2
 8021e46:	461c      	mov	r4, r3
 8021e48:	f000 fd06 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8021e4c:	b120      	cbz	r0, 8021e58 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
 8021e4e:	2308      	movs	r3, #8
 8021e50:	60e3      	str	r3, [r4, #12]
 8021e52:	2306      	movs	r3, #6
 8021e54:	6025      	str	r5, [r4, #0]
 8021e56:	7123      	strb	r3, [r4, #4]
 8021e58:	bd38      	pop	{r3, r4, r5, pc}

08021e5a <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
 8021e5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021e5e:	4605      	mov	r5, r0
 8021e60:	460c      	mov	r4, r1
 8021e62:	4616      	mov	r6, r2
 8021e64:	461f      	mov	r7, r3
 8021e66:	f000 fcf7 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8021e6a:	b948      	cbnz	r0, 8021e80 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
 8021e6c:	2f03      	cmp	r7, #3
 8021e6e:	d807      	bhi.n	8021e80 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
 8021e70:	6823      	ldr	r3, [r4, #0]
 8021e72:	4632      	mov	r2, r6
 8021e74:	4629      	mov	r1, r5
 8021e76:	4620      	mov	r0, r4
 8021e78:	695b      	ldr	r3, [r3, #20]
 8021e7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021e7e:	4718      	bx	r3
 8021e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08021e84 <operator delete(void*, unsigned int)>:
 8021e84:	f000 bf23 	b.w	8022cce <operator delete(void*)>

08021e88 <__dynamic_cast>:
 8021e88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021e8c:	4688      	mov	r8, r1
 8021e8e:	b089      	sub	sp, #36	@ 0x24
 8021e90:	4617      	mov	r7, r2
 8021e92:	461d      	mov	r5, r3
 8021e94:	4606      	mov	r6, r0
 8021e96:	b920      	cbnz	r0, 8021ea2 <__dynamic_cast+0x1a>
 8021e98:	2400      	movs	r4, #0
 8021e9a:	4620      	mov	r0, r4
 8021e9c:	b009      	add	sp, #36	@ 0x24
 8021e9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021ea2:	6802      	ldr	r2, [r0, #0]
 8021ea4:	f852 3c08 	ldr.w	r3, [r2, #-8]
 8021ea8:	f852 9c04 	ldr.w	r9, [r2, #-4]
 8021eac:	2200      	movs	r2, #0
 8021eae:	e9cd 2205 	strd	r2, r2, [sp, #20]
 8021eb2:	2210      	movs	r2, #16
 8021eb4:	9207      	str	r2, [sp, #28]
 8021eb6:	58c2      	ldr	r2, [r0, r3]
 8021eb8:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8021ebc:	454a      	cmp	r2, r9
 8021ebe:	eb00 0403 	add.w	r4, r0, r3
 8021ec2:	d1e9      	bne.n	8021e98 <__dynamic_cast+0x10>
 8021ec4:	2d00      	cmp	r5, #0
 8021ec6:	da2b      	bge.n	8021f20 <__dynamic_cast+0x98>
 8021ec8:	aa05      	add	r2, sp, #20
 8021eca:	f8d9 3000 	ldr.w	r3, [r9]
 8021ece:	e9cd 6202 	strd	r6, r2, [sp, #8]
 8021ed2:	e9cd 4800 	strd	r4, r8, [sp]
 8021ed6:	2206      	movs	r2, #6
 8021ed8:	69dc      	ldr	r4, [r3, #28]
 8021eda:	4629      	mov	r1, r5
 8021edc:	463b      	mov	r3, r7
 8021ede:	4648      	mov	r0, r9
 8021ee0:	47a0      	blx	r4
 8021ee2:	9c05      	ldr	r4, [sp, #20]
 8021ee4:	2c00      	cmp	r4, #0
 8021ee6:	d0d7      	beq.n	8021e98 <__dynamic_cast+0x10>
 8021ee8:	f89d 101a 	ldrb.w	r1, [sp, #26]
 8021eec:	f001 0306 	and.w	r3, r1, #6
 8021ef0:	2b06      	cmp	r3, #6
 8021ef2:	d0d2      	beq.n	8021e9a <__dynamic_cast+0x12>
 8021ef4:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8021ef8:	f89d 2018 	ldrb.w	r2, [sp, #24]
 8021efc:	401a      	ands	r2, r3
 8021efe:	f002 0206 	and.w	r2, r2, #6
 8021f02:	2a06      	cmp	r2, #6
 8021f04:	d0c9      	beq.n	8021e9a <__dynamic_cast+0x12>
 8021f06:	f003 0305 	and.w	r3, r3, #5
 8021f0a:	2b04      	cmp	r3, #4
 8021f0c:	d0c4      	beq.n	8021e98 <__dynamic_cast+0x10>
 8021f0e:	2900      	cmp	r1, #0
 8021f10:	d1c2      	bne.n	8021e98 <__dynamic_cast+0x10>
 8021f12:	2d00      	cmp	r5, #0
 8021f14:	db0d      	blt.n	8021f32 <__dynamic_cast+0xaa>
 8021f16:	442c      	add	r4, r5
 8021f18:	42a6      	cmp	r6, r4
 8021f1a:	d1bd      	bne.n	8021e98 <__dynamic_cast+0x10>
 8021f1c:	9c05      	ldr	r4, [sp, #20]
 8021f1e:	e7bc      	b.n	8021e9a <__dynamic_cast+0x12>
 8021f20:	42dd      	cmn	r5, r3
 8021f22:	d1d1      	bne.n	8021ec8 <__dynamic_cast+0x40>
 8021f24:	4639      	mov	r1, r7
 8021f26:	4648      	mov	r0, r9
 8021f28:	f000 fc96 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8021f2c:	2800      	cmp	r0, #0
 8021f2e:	d0cb      	beq.n	8021ec8 <__dynamic_cast+0x40>
 8021f30:	e7b3      	b.n	8021e9a <__dynamic_cast+0x12>
 8021f32:	1cab      	adds	r3, r5, #2
 8021f34:	d0b0      	beq.n	8021e98 <__dynamic_cast+0x10>
 8021f36:	683b      	ldr	r3, [r7, #0]
 8021f38:	9600      	str	r6, [sp, #0]
 8021f3a:	6a1e      	ldr	r6, [r3, #32]
 8021f3c:	4622      	mov	r2, r4
 8021f3e:	4643      	mov	r3, r8
 8021f40:	4629      	mov	r1, r5
 8021f42:	4638      	mov	r0, r7
 8021f44:	47b0      	blx	r6
 8021f46:	f000 0006 	and.w	r0, r0, #6
 8021f4a:	2806      	cmp	r0, #6
 8021f4c:	e7e5      	b.n	8021f1a <__dynamic_cast+0x92>
	...

08021f50 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const>:
 8021f50:	b570      	push	{r4, r5, r6, lr}
 8021f52:	460d      	mov	r5, r1
 8021f54:	4619      	mov	r1, r3
 8021f56:	6803      	ldr	r3, [r0, #0]
 8021f58:	9e04      	ldr	r6, [sp, #16]
 8021f5a:	429d      	cmp	r5, r3
 8021f5c:	d904      	bls.n	8021f68 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const+0x18>
 8021f5e:	490a      	ldr	r1, [pc, #40]	@ (8021f88 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const+0x38>)
 8021f60:	480a      	ldr	r0, [pc, #40]	@ (8021f8c <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const+0x3c>)
 8021f62:	462a      	mov	r2, r5
 8021f64:	f000 feaf 	bl	8022cc6 <std::__throw_out_of_range_fmt(char const*, ...)>
 8021f68:	1b5c      	subs	r4, r3, r5
 8021f6a:	4294      	cmp	r4, r2
 8021f6c:	bf28      	it	cs
 8021f6e:	4614      	movcs	r4, r2
 8021f70:	42a6      	cmp	r6, r4
 8021f72:	4632      	mov	r2, r6
 8021f74:	bf28      	it	cs
 8021f76:	4622      	movcs	r2, r4
 8021f78:	b122      	cbz	r2, 8021f84 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const+0x34>
 8021f7a:	6840      	ldr	r0, [r0, #4]
 8021f7c:	4428      	add	r0, r5
 8021f7e:	f002 fb69 	bl	8024654 <memcmp>
 8021f82:	b900      	cbnz	r0, 8021f86 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const+0x36>
 8021f84:	1ba0      	subs	r0, r4, r6
 8021f86:	bd70      	pop	{r4, r5, r6, pc}
 8021f88:	0802b056 	.word	0x0802b056
 8021f8c:	0802b070 	.word	0x0802b070

08021f90 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 8021f90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021f94:	4e37      	ldr	r6, [pc, #220]	@ (8022074 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xe4>)
 8021f96:	4838      	ldr	r0, [pc, #224]	@ (8022078 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xe8>)
 8021f98:	b08d      	sub	sp, #52	@ 0x34
 8021f9a:	2500      	movs	r5, #0
 8021f9c:	e9c6 5501 	strd	r5, r5, [r6, #4]
 8021fa0:	60f5      	str	r5, [r6, #12]
 8021fa2:	f001 f8e5 	bl	8023170 <getenv>
 8021fa6:	4b35      	ldr	r3, [pc, #212]	@ (802207c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xec>)
 8021fa8:	9305      	str	r3, [sp, #20]
 8021faa:	2308      	movs	r3, #8
 8021fac:	9306      	str	r3, [sp, #24]
 8021fae:	4b34      	ldr	r3, [pc, #208]	@ (8022080 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xf0>)
 8021fb0:	e9cd 3507 	strd	r3, r5, [sp, #28]
 8021fb4:	2309      	movs	r3, #9
 8021fb6:	9309      	str	r3, [sp, #36]	@ 0x24
 8021fb8:	4b32      	ldr	r3, [pc, #200]	@ (8022084 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xf4>)
 8021fba:	930a      	str	r3, [sp, #40]	@ 0x28
 8021fbc:	f04f 080f 	mov.w	r8, #15
 8021fc0:	2304      	movs	r3, #4
 8021fc2:	4604      	mov	r4, r0
 8021fc4:	f8cd 8010 	str.w	r8, [sp, #16]
 8021fc8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021fca:	b9b4      	cbnz	r4, 8021ffa <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x6a>
 8021fcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021fce:	9d08      	ldr	r5, [sp, #32]
 8021fd0:	2b40      	cmp	r3, #64	@ 0x40
 8021fd2:	bfa8      	it	ge
 8021fd4:	2340      	movge	r3, #64	@ 0x40
 8021fd6:	2d00      	cmp	r5, #0
 8021fd8:	bf08      	it	eq
 8021fda:	2506      	moveq	r5, #6
 8021fdc:	353e      	adds	r5, #62	@ 0x3e
 8021fde:	435d      	muls	r5, r3
 8021fe0:	00ad      	lsls	r5, r5, #2
 8021fe2:	60f5      	str	r5, [r6, #12]
 8021fe4:	b135      	cbz	r5, 8021ff4 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x64>
 8021fe6:	4628      	mov	r0, r5
 8021fe8:	f001 f90a 	bl	8023200 <malloc>
 8021fec:	60b0      	str	r0, [r6, #8]
 8021fee:	2800      	cmp	r0, #0
 8021ff0:	d13c      	bne.n	802206c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xdc>
 8021ff2:	60f4      	str	r4, [r6, #12]
 8021ff4:	b00d      	add	sp, #52	@ 0x34
 8021ff6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021ffa:	7823      	ldrb	r3, [r4, #0]
 8021ffc:	f8cd 8000 	str.w	r8, [sp]
 8022000:	2b3a      	cmp	r3, #58	@ 0x3a
 8022002:	bf08      	it	eq
 8022004:	3401      	addeq	r4, #1
 8022006:	4623      	mov	r3, r4
 8022008:	220f      	movs	r2, #15
 802200a:	2100      	movs	r1, #0
 802200c:	a804      	add	r0, sp, #16
 802200e:	f7ff ff9f 	bl	8021f50 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const>
 8022012:	bb28      	cbnz	r0, 8022060 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xd0>
 8022014:	7be3      	ldrb	r3, [r4, #15]
 8022016:	2b2e      	cmp	r3, #46	@ 0x2e
 8022018:	d122      	bne.n	8022060 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xd0>
 802201a:	3410      	adds	r4, #16
 802201c:	f04f 0903 	mov.w	r9, #3
 8022020:	af06      	add	r7, sp, #24
 8022022:	f1b9 0901 	subs.w	r9, r9, #1
 8022026:	d01b      	beq.n	8022060 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xd0>
 8022028:	683d      	ldr	r5, [r7, #0]
 802202a:	9500      	str	r5, [sp, #0]
 802202c:	462a      	mov	r2, r5
 802202e:	4623      	mov	r3, r4
 8022030:	2100      	movs	r1, #0
 8022032:	4638      	mov	r0, r7
 8022034:	f7ff ff8c 	bl	8021f50 <std::basic_string_view<char, std::char_traits<char> >::compare(unsigned int, unsigned int, char const*, unsigned int) const>
 8022038:	4602      	mov	r2, r0
 802203a:	b910      	cbnz	r0, 8022042 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xb2>
 802203c:	5d63      	ldrb	r3, [r4, r5]
 802203e:	2b3d      	cmp	r3, #61	@ 0x3d
 8022040:	d001      	beq.n	8022046 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xb6>
 8022042:	370c      	adds	r7, #12
 8022044:	e7ed      	b.n	8022022 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x92>
 8022046:	3501      	adds	r5, #1
 8022048:	1960      	adds	r0, r4, r5
 802204a:	a903      	add	r1, sp, #12
 802204c:	f001 fa06 	bl	802345c <strtoul>
 8022050:	9c03      	ldr	r4, [sp, #12]
 8022052:	7823      	ldrb	r3, [r4, #0]
 8022054:	2b3a      	cmp	r3, #58	@ 0x3a
 8022056:	d000      	beq.n	802205a <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xca>
 8022058:	b913      	cbnz	r3, 8022060 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xd0>
 802205a:	2800      	cmp	r0, #0
 802205c:	db00      	blt.n	8022060 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0xd0>
 802205e:	60b8      	str	r0, [r7, #8]
 8022060:	4620      	mov	r0, r4
 8022062:	213a      	movs	r1, #58	@ 0x3a
 8022064:	f002 fb27 	bl	80246b6 <strchr>
 8022068:	4604      	mov	r4, r0
 802206a:	e7ae      	b.n	8021fca <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x3a>
 802206c:	e9c0 5400 	strd	r5, r4, [r0]
 8022070:	6070      	str	r0, [r6, #4]
 8022072:	e7bf      	b.n	8021ff4 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x64>
 8022074:	2000d55c 	.word	0x2000d55c
 8022078:	0802b0a1 	.word	0x0802b0a1
 802207c:	0802b0b2 	.word	0x0802b0b2
 8022080:	0802b0c2 	.word	0x0802b0c2
 8022084:	0802b0cb 	.word	0x0802b0cb

08022088 <__cxa_end_cleanup>:
 8022088:	b41e      	push	{r1, r2, r3, r4}
 802208a:	f000 f890 	bl	80221ae <__gnu_end_cleanup>
 802208e:	bc1e      	pop	{r1, r2, r3, r4}
 8022090:	f7de fee0 	bl	8000e54 <_Unwind_Resume>

08022094 <__cxxabiv1::__is_gxx_exception_class(char*)>:
 8022094:	7803      	ldrb	r3, [r0, #0]
 8022096:	2b47      	cmp	r3, #71	@ 0x47
 8022098:	d117      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 802209a:	7843      	ldrb	r3, [r0, #1]
 802209c:	2b4e      	cmp	r3, #78	@ 0x4e
 802209e:	d114      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220a0:	7883      	ldrb	r3, [r0, #2]
 80220a2:	2b55      	cmp	r3, #85	@ 0x55
 80220a4:	d111      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220a6:	78c3      	ldrb	r3, [r0, #3]
 80220a8:	2b43      	cmp	r3, #67	@ 0x43
 80220aa:	d10e      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220ac:	7903      	ldrb	r3, [r0, #4]
 80220ae:	2b43      	cmp	r3, #67	@ 0x43
 80220b0:	d10b      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220b2:	7943      	ldrb	r3, [r0, #5]
 80220b4:	2b2b      	cmp	r3, #43	@ 0x2b
 80220b6:	d108      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220b8:	7983      	ldrb	r3, [r0, #6]
 80220ba:	2b2b      	cmp	r3, #43	@ 0x2b
 80220bc:	d105      	bne.n	80220ca <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 80220be:	79c0      	ldrb	r0, [r0, #7]
 80220c0:	2801      	cmp	r0, #1
 80220c2:	bf8c      	ite	hi
 80220c4:	2000      	movhi	r0, #0
 80220c6:	2001      	movls	r0, #1
 80220c8:	4770      	bx	lr
 80220ca:	2000      	movs	r0, #0
 80220cc:	4770      	bx	lr
	...

080220d0 <__cxa_type_match>:
 80220d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80220d4:	461f      	mov	r7, r3
 80220d6:	7803      	ldrb	r3, [r0, #0]
 80220d8:	79c4      	ldrb	r4, [r0, #7]
 80220da:	2b47      	cmp	r3, #71	@ 0x47
 80220dc:	4602      	mov	r2, r0
 80220de:	460d      	mov	r5, r1
 80220e0:	d112      	bne.n	8022108 <__cxa_type_match+0x38>
 80220e2:	7843      	ldrb	r3, [r0, #1]
 80220e4:	2b4e      	cmp	r3, #78	@ 0x4e
 80220e6:	d10f      	bne.n	8022108 <__cxa_type_match+0x38>
 80220e8:	7883      	ldrb	r3, [r0, #2]
 80220ea:	2b55      	cmp	r3, #85	@ 0x55
 80220ec:	d10c      	bne.n	8022108 <__cxa_type_match+0x38>
 80220ee:	78c3      	ldrb	r3, [r0, #3]
 80220f0:	2b43      	cmp	r3, #67	@ 0x43
 80220f2:	d109      	bne.n	8022108 <__cxa_type_match+0x38>
 80220f4:	7903      	ldrb	r3, [r0, #4]
 80220f6:	2b46      	cmp	r3, #70	@ 0x46
 80220f8:	d106      	bne.n	8022108 <__cxa_type_match+0x38>
 80220fa:	7943      	ldrb	r3, [r0, #5]
 80220fc:	2b4f      	cmp	r3, #79	@ 0x4f
 80220fe:	d103      	bne.n	8022108 <__cxa_type_match+0x38>
 8022100:	7983      	ldrb	r3, [r0, #6]
 8022102:	2b52      	cmp	r3, #82	@ 0x52
 8022104:	d100      	bne.n	8022108 <__cxa_type_match+0x38>
 8022106:	b1f4      	cbz	r4, 8022146 <__cxa_type_match+0x76>
 8022108:	4610      	mov	r0, r2
 802210a:	f7ff ffc3 	bl	8022094 <__cxxabiv1::__is_gxx_exception_class(char*)>
 802210e:	2300      	movs	r3, #0
 8022110:	9301      	str	r3, [sp, #4]
 8022112:	b9d8      	cbnz	r0, 802214c <__cxa_type_match+0x7c>
 8022114:	4c15      	ldr	r4, [pc, #84]	@ (802216c <__cxa_type_match+0x9c>)
 8022116:	6823      	ldr	r3, [r4, #0]
 8022118:	4620      	mov	r0, r4
 802211a:	689b      	ldr	r3, [r3, #8]
 802211c:	4798      	blx	r3
 802211e:	b300      	cbz	r0, 8022162 <__cxa_type_match+0x92>
 8022120:	9b01      	ldr	r3, [sp, #4]
 8022122:	681b      	ldr	r3, [r3, #0]
 8022124:	9301      	str	r3, [sp, #4]
 8022126:	2602      	movs	r6, #2
 8022128:	682b      	ldr	r3, [r5, #0]
 802212a:	aa01      	add	r2, sp, #4
 802212c:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8022130:	4621      	mov	r1, r4
 8022132:	2301      	movs	r3, #1
 8022134:	4628      	mov	r0, r5
 8022136:	47c0      	blx	r8
 8022138:	b1a8      	cbz	r0, 8022166 <__cxa_type_match+0x96>
 802213a:	9b01      	ldr	r3, [sp, #4]
 802213c:	603b      	str	r3, [r7, #0]
 802213e:	4630      	mov	r0, r6
 8022140:	b002      	add	sp, #8
 8022142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022146:	9401      	str	r4, [sp, #4]
 8022148:	4c09      	ldr	r4, [pc, #36]	@ (8022170 <__cxa_type_match+0xa0>)
 802214a:	e7e4      	b.n	8022116 <__cxa_type_match+0x46>
 802214c:	f852 1c20 	ldr.w	r1, [r2, #-32]
 8022150:	2c01      	cmp	r4, #1
 8022152:	bf1a      	itte	ne
 8022154:	460c      	movne	r4, r1
 8022156:	f102 0158 	addne.w	r1, r2, #88	@ 0x58
 802215a:	f851 4c78 	ldreq.w	r4, [r1, #-120]
 802215e:	9101      	str	r1, [sp, #4]
 8022160:	e7d9      	b.n	8022116 <__cxa_type_match+0x46>
 8022162:	2601      	movs	r6, #1
 8022164:	e7e0      	b.n	8022128 <__cxa_type_match+0x58>
 8022166:	4606      	mov	r6, r0
 8022168:	e7e9      	b.n	802213e <__cxa_type_match+0x6e>
 802216a:	bf00      	nop
 802216c:	08037834 	.word	0x08037834
 8022170:	08037808 	.word	0x08037808

08022174 <__cxa_begin_cleanup>:
 8022174:	b510      	push	{r4, lr}
 8022176:	4604      	mov	r4, r0
 8022178:	f000 f832 	bl	80221e0 <__cxa_get_globals>
 802217c:	4602      	mov	r2, r0
 802217e:	4620      	mov	r0, r4
 8022180:	f1a4 0120 	sub.w	r1, r4, #32
 8022184:	f7ff ff86 	bl	8022094 <__cxxabiv1::__is_gxx_exception_class(char*)>
 8022188:	b160      	cbz	r0, 80221a4 <__cxa_begin_cleanup+0x30>
 802218a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 802218e:	3301      	adds	r3, #1
 8022190:	2b01      	cmp	r3, #1
 8022192:	f844 3c04 	str.w	r3, [r4, #-4]
 8022196:	d103      	bne.n	80221a0 <__cxa_begin_cleanup+0x2c>
 8022198:	6893      	ldr	r3, [r2, #8]
 802219a:	f844 3c08 	str.w	r3, [r4, #-8]
 802219e:	6091      	str	r1, [r2, #8]
 80221a0:	2001      	movs	r0, #1
 80221a2:	bd10      	pop	{r4, pc}
 80221a4:	6893      	ldr	r3, [r2, #8]
 80221a6:	2b00      	cmp	r3, #0
 80221a8:	d0f9      	beq.n	802219e <__cxa_begin_cleanup+0x2a>
 80221aa:	f000 faa9 	bl	8022700 <std::terminate()>

080221ae <__gnu_end_cleanup>:
 80221ae:	b510      	push	{r4, lr}
 80221b0:	f000 f816 	bl	80221e0 <__cxa_get_globals>
 80221b4:	6882      	ldr	r2, [r0, #8]
 80221b6:	4601      	mov	r1, r0
 80221b8:	b90a      	cbnz	r2, 80221be <__gnu_end_cleanup+0x10>
 80221ba:	f000 faa1 	bl	8022700 <std::terminate()>
 80221be:	f102 0420 	add.w	r4, r2, #32
 80221c2:	4620      	mov	r0, r4
 80221c4:	f7ff ff66 	bl	8022094 <__cxxabiv1::__is_gxx_exception_class(char*)>
 80221c8:	b140      	cbz	r0, 80221dc <__gnu_end_cleanup+0x2e>
 80221ca:	69d3      	ldr	r3, [r2, #28]
 80221cc:	3b01      	subs	r3, #1
 80221ce:	61d3      	str	r3, [r2, #28]
 80221d0:	b913      	cbnz	r3, 80221d8 <__gnu_end_cleanup+0x2a>
 80221d2:	6990      	ldr	r0, [r2, #24]
 80221d4:	6088      	str	r0, [r1, #8]
 80221d6:	6193      	str	r3, [r2, #24]
 80221d8:	4620      	mov	r0, r4
 80221da:	bd10      	pop	{r4, pc}
 80221dc:	6088      	str	r0, [r1, #8]
 80221de:	e7fb      	b.n	80221d8 <__gnu_end_cleanup+0x2a>

080221e0 <__cxa_get_globals>:
 80221e0:	4800      	ldr	r0, [pc, #0]	@ (80221e4 <__cxa_get_globals+0x4>)
 80221e2:	4770      	bx	lr
 80221e4:	2000d56c 	.word	0x2000d56c

080221e8 <read_uleb128(unsigned char const*, unsigned long*)>:
 80221e8:	b530      	push	{r4, r5, lr}
 80221ea:	2300      	movs	r3, #0
 80221ec:	461a      	mov	r2, r3
 80221ee:	f810 5b01 	ldrb.w	r5, [r0], #1
 80221f2:	f005 047f 	and.w	r4, r5, #127	@ 0x7f
 80221f6:	4094      	lsls	r4, r2
 80221f8:	4323      	orrs	r3, r4
 80221fa:	062c      	lsls	r4, r5, #24
 80221fc:	f102 0207 	add.w	r2, r2, #7
 8022200:	d4f5      	bmi.n	80221ee <read_uleb128(unsigned char const*, unsigned long*)+0x6>
 8022202:	600b      	str	r3, [r1, #0]
 8022204:	bd30      	pop	{r4, r5, pc}

08022206 <read_sleb128(unsigned char const*, long*)>:
 8022206:	b530      	push	{r4, r5, lr}
 8022208:	2300      	movs	r3, #0
 802220a:	461a      	mov	r2, r3
 802220c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8022210:	f004 057f 	and.w	r5, r4, #127	@ 0x7f
 8022214:	4095      	lsls	r5, r2
 8022216:	432b      	orrs	r3, r5
 8022218:	0625      	lsls	r5, r4, #24
 802221a:	f102 0207 	add.w	r2, r2, #7
 802221e:	d4f5      	bmi.n	802220c <read_sleb128(unsigned char const*, long*)+0x6>
 8022220:	2a1f      	cmp	r2, #31
 8022222:	d806      	bhi.n	8022232 <read_sleb128(unsigned char const*, long*)+0x2c>
 8022224:	0664      	lsls	r4, r4, #25
 8022226:	bf42      	ittt	mi
 8022228:	f04f 34ff 	movmi.w	r4, #4294967295	@ 0xffffffff
 802222c:	fa04 f202 	lslmi.w	r2, r4, r2
 8022230:	4313      	orrmi	r3, r2
 8022232:	600b      	str	r3, [r1, #0]
 8022234:	bd30      	pop	{r4, r5, pc}

08022236 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
 8022236:	2850      	cmp	r0, #80	@ 0x50
 8022238:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802223c:	4606      	mov	r6, r0
 802223e:	4688      	mov	r8, r1
 8022240:	4615      	mov	r5, r2
 8022242:	461f      	mov	r7, r3
 8022244:	d108      	bne.n	8022258 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x22>
 8022246:	1cd0      	adds	r0, r2, #3
 8022248:	f020 0003 	bic.w	r0, r0, #3
 802224c:	f850 4b04 	ldr.w	r4, [r0], #4
 8022250:	603c      	str	r4, [r7, #0]
 8022252:	b002      	add	sp, #8
 8022254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022258:	f000 030f 	and.w	r3, r0, #15
 802225c:	2b0c      	cmp	r3, #12
 802225e:	d82e      	bhi.n	80222be <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x88>
 8022260:	e8df f003 	tbb	[pc, r3]
 8022264:	251d0725 	.word	0x251d0725
 8022268:	2d2d2d29 	.word	0x2d2d2d29
 802226c:	2521182d 	.word	0x2521182d
 8022270:	29          	.byte	0x29
 8022271:	00          	.byte	0x00
 8022272:	a901      	add	r1, sp, #4
 8022274:	4628      	mov	r0, r5
 8022276:	f7ff ffb7 	bl	80221e8 <read_uleb128(unsigned char const*, unsigned long*)>
 802227a:	9c01      	ldr	r4, [sp, #4]
 802227c:	2c00      	cmp	r4, #0
 802227e:	d0e7      	beq.n	8022250 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x1a>
 8022280:	f006 0370 	and.w	r3, r6, #112	@ 0x70
 8022284:	2b10      	cmp	r3, #16
 8022286:	bf08      	it	eq
 8022288:	46a8      	moveq	r8, r5
 802228a:	4444      	add	r4, r8
 802228c:	0633      	lsls	r3, r6, #24
 802228e:	bf48      	it	mi
 8022290:	6824      	ldrmi	r4, [r4, #0]
 8022292:	e7dd      	b.n	8022250 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x1a>
 8022294:	a901      	add	r1, sp, #4
 8022296:	4628      	mov	r0, r5
 8022298:	f7ff ffb5 	bl	8022206 <read_sleb128(unsigned char const*, long*)>
 802229c:	e7ed      	b.n	802227a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x44>
 802229e:	4628      	mov	r0, r5
 80222a0:	f830 4b02 	ldrh.w	r4, [r0], #2
 80222a4:	e7ea      	b.n	802227c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x46>
 80222a6:	4628      	mov	r0, r5
 80222a8:	f930 4b02 	ldrsh.w	r4, [r0], #2
 80222ac:	e7e6      	b.n	802227c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x46>
 80222ae:	4628      	mov	r0, r5
 80222b0:	f850 4b04 	ldr.w	r4, [r0], #4
 80222b4:	e7e2      	b.n	802227c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x46>
 80222b6:	4628      	mov	r0, r5
 80222b8:	f850 4b08 	ldr.w	r4, [r0], #8
 80222bc:	e7de      	b.n	802227c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x46>
 80222be:	f000 ff31 	bl	8023124 <abort>

080222c2 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
 80222c2:	b508      	push	{r3, lr}
 80222c4:	4603      	mov	r3, r0
 80222c6:	2bff      	cmp	r3, #255	@ 0xff
 80222c8:	4608      	mov	r0, r1
 80222ca:	d00d      	beq.n	80222e8 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x26>
 80222cc:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80222d0:	2b30      	cmp	r3, #48	@ 0x30
 80222d2:	d00f      	beq.n	80222f4 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x32>
 80222d4:	d804      	bhi.n	80222e0 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x1e>
 80222d6:	2b20      	cmp	r3, #32
 80222d8:	d008      	beq.n	80222ec <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x2a>
 80222da:	d905      	bls.n	80222e8 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x26>
 80222dc:	f000 ff22 	bl	8023124 <abort>
 80222e0:	2b40      	cmp	r3, #64	@ 0x40
 80222e2:	d00b      	beq.n	80222fc <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3a>
 80222e4:	2b50      	cmp	r3, #80	@ 0x50
 80222e6:	d1f9      	bne.n	80222dc <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x1a>
 80222e8:	2000      	movs	r0, #0
 80222ea:	bd08      	pop	{r3, pc}
 80222ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80222f0:	f007 b89f 	b.w	8029432 <_Unwind_GetTextRelBase>
 80222f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80222f8:	f007 b898 	b.w	802942c <_Unwind_GetDataRelBase>
 80222fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8022300:	f007 b884 	b.w	802940c <_Unwind_GetRegionStart>

08022304 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>:
 8022304:	b570      	push	{r4, r5, r6, lr}
 8022306:	460c      	mov	r4, r1
 8022308:	4601      	mov	r1, r0
 802230a:	4620      	mov	r0, r4
 802230c:	4615      	mov	r5, r2
 802230e:	461e      	mov	r6, r3
 8022310:	f7ff ffd7 	bl	80222c2 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
 8022314:	4633      	mov	r3, r6
 8022316:	4601      	mov	r1, r0
 8022318:	462a      	mov	r2, r5
 802231a:	4620      	mov	r0, r4
 802231c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8022320:	f7ff bf89 	b.w	8022236 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>

08022324 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
 8022324:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8022326:	460c      	mov	r4, r1
 8022328:	4615      	mov	r5, r2
 802232a:	4606      	mov	r6, r0
 802232c:	b108      	cbz	r0, 8022332 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xe>
 802232e:	f007 f86d 	bl	802940c <_Unwind_GetRegionStart>
 8022332:	4622      	mov	r2, r4
 8022334:	6028      	str	r0, [r5, #0]
 8022336:	f812 1b01 	ldrb.w	r1, [r2], #1
 802233a:	29ff      	cmp	r1, #255	@ 0xff
 802233c:	d01c      	beq.n	8022378 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x54>
 802233e:	1d2b      	adds	r3, r5, #4
 8022340:	4630      	mov	r0, r6
 8022342:	f7ff ffdf 	bl	8022304 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
 8022346:	4602      	mov	r2, r0
 8022348:	4610      	mov	r0, r2
 802234a:	f810 3b01 	ldrb.w	r3, [r0], #1
 802234e:	2bff      	cmp	r3, #255	@ 0xff
 8022350:	d014      	beq.n	802237c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x58>
 8022352:	2310      	movs	r3, #16
 8022354:	752b      	strb	r3, [r5, #20]
 8022356:	a901      	add	r1, sp, #4
 8022358:	f7ff ff46 	bl	80221e8 <read_uleb128(unsigned char const*, unsigned long*)>
 802235c:	9b01      	ldr	r3, [sp, #4]
 802235e:	4403      	add	r3, r0
 8022360:	60eb      	str	r3, [r5, #12]
 8022362:	f810 3b01 	ldrb.w	r3, [r0], #1
 8022366:	756b      	strb	r3, [r5, #21]
 8022368:	a901      	add	r1, sp, #4
 802236a:	f7ff ff3d 	bl	80221e8 <read_uleb128(unsigned char const*, unsigned long*)>
 802236e:	9b01      	ldr	r3, [sp, #4]
 8022370:	4403      	add	r3, r0
 8022372:	612b      	str	r3, [r5, #16]
 8022374:	b002      	add	sp, #8
 8022376:	bd70      	pop	{r4, r5, r6, pc}
 8022378:	6068      	str	r0, [r5, #4]
 802237a:	e7e5      	b.n	8022348 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x24>
 802237c:	752b      	strb	r3, [r5, #20]
 802237e:	2300      	movs	r3, #0
 8022380:	e7ee      	b.n	8022360 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x3c>

08022382 <_Unwind_GetGR>:
 8022382:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022384:	ab03      	add	r3, sp, #12
 8022386:	9300      	str	r3, [sp, #0]
 8022388:	2300      	movs	r3, #0
 802238a:	460a      	mov	r2, r1
 802238c:	4619      	mov	r1, r3
 802238e:	f006 fb0f 	bl	80289b0 <_Unwind_VRS_Get>
 8022392:	9803      	ldr	r0, [sp, #12]
 8022394:	b005      	add	sp, #20
 8022396:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0802239c <__gxx_personality_v0>:
 802239c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223a0:	f000 0303 	and.w	r3, r0, #3
 80223a4:	b095      	sub	sp, #84	@ 0x54
 80223a6:	f04f 0900 	mov.w	r9, #0
 80223aa:	2b01      	cmp	r3, #1
 80223ac:	460c      	mov	r4, r1
 80223ae:	4615      	mov	r5, r2
 80223b0:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
 80223b4:	d011      	beq.n	80223da <__gxx_personality_v0+0x3e>
 80223b6:	2b02      	cmp	r3, #2
 80223b8:	d004      	beq.n	80223c4 <__gxx_personality_v0+0x28>
 80223ba:	2b00      	cmp	r3, #0
 80223bc:	d174      	bne.n	80224a8 <__gxx_personality_v0+0x10c>
 80223be:	f010 0608 	ands.w	r6, r0, #8
 80223c2:	d073      	beq.n	80224ac <__gxx_personality_v0+0x110>
 80223c4:	4629      	mov	r1, r5
 80223c6:	4620      	mov	r0, r4
 80223c8:	f007 f80a 	bl	80293e0 <__gnu_unwind_frame>
 80223cc:	b118      	cbz	r0, 80223d6 <__gxx_personality_v0+0x3a>
 80223ce:	2009      	movs	r0, #9
 80223d0:	b015      	add	sp, #84	@ 0x54
 80223d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223d6:	2008      	movs	r0, #8
 80223d8:	e7fa      	b.n	80223d0 <__gxx_personality_v0+0x34>
 80223da:	f010 0608 	ands.w	r6, r0, #8
 80223de:	d05a      	beq.n	8022496 <__gxx_personality_v0+0xfa>
 80223e0:	2302      	movs	r3, #2
 80223e2:	431e      	orrs	r6, r3
 80223e4:	af0e      	add	r7, sp, #56	@ 0x38
 80223e6:	2300      	movs	r3, #0
 80223e8:	9700      	str	r7, [sp, #0]
 80223ea:	220c      	movs	r2, #12
 80223ec:	4619      	mov	r1, r3
 80223ee:	4628      	mov	r0, r5
 80223f0:	940e      	str	r4, [sp, #56]	@ 0x38
 80223f2:	f006 fb05 	bl	8028a00 <_Unwind_VRS_Set>
 80223f6:	2e06      	cmp	r6, #6
 80223f8:	d15a      	bne.n	80224b0 <__gxx_personality_v0+0x114>
 80223fa:	f8d4 8030 	ldr.w	r8, [r4, #48]	@ 0x30
 80223fe:	f1b8 0f00 	cmp.w	r8, #0
 8022402:	f000 8163 	beq.w	80226cc <__gxx_personality_v0+0x330>
 8022406:	e9d4 7a0a 	ldrd	r7, sl, [r4, #40]	@ 0x28
 802240a:	f04f 0b03 	mov.w	fp, #3
 802240e:	2f00      	cmp	r7, #0
 8022410:	da1a      	bge.n	8022448 <__gxx_personality_v0+0xac>
 8022412:	aa0e      	add	r2, sp, #56	@ 0x38
 8022414:	4651      	mov	r1, sl
 8022416:	4628      	mov	r0, r5
 8022418:	f88d 904c 	strb.w	r9, [sp, #76]	@ 0x4c
 802241c:	f7ff ff82 	bl	8022324 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
 8022420:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8022422:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8022426:	4629      	mov	r1, r5
 8022428:	f7ff ff4b 	bl	80222c2 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
 802242c:	43fb      	mvns	r3, r7
 802242e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8022432:	2200      	movs	r2, #0
 8022434:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022438:	2900      	cmp	r1, #0
 802243a:	f040 814a 	bne.w	80226d2 <__gxx_personality_v0+0x336>
 802243e:	e9c4 200a 	strd	r2, r0, [r4, #40]	@ 0x28
 8022442:	2204      	movs	r2, #4
 8022444:	e9c4 230c 	strd	r2, r3, [r4, #48]	@ 0x30
 8022448:	2300      	movs	r3, #0
 802244a:	ae0d      	add	r6, sp, #52	@ 0x34
 802244c:	461a      	mov	r2, r3
 802244e:	4619      	mov	r1, r3
 8022450:	9600      	str	r6, [sp, #0]
 8022452:	4628      	mov	r0, r5
 8022454:	940d      	str	r4, [sp, #52]	@ 0x34
 8022456:	f006 fad3 	bl	8028a00 <_Unwind_VRS_Set>
 802245a:	2300      	movs	r3, #0
 802245c:	4619      	mov	r1, r3
 802245e:	2201      	movs	r2, #1
 8022460:	9600      	str	r6, [sp, #0]
 8022462:	4628      	mov	r0, r5
 8022464:	970d      	str	r7, [sp, #52]	@ 0x34
 8022466:	f006 facb 	bl	8028a00 <_Unwind_VRS_Set>
 802246a:	210f      	movs	r1, #15
 802246c:	4628      	mov	r0, r5
 802246e:	f7ff ff88 	bl	8022382 <_Unwind_GetGR>
 8022472:	f000 0001 	and.w	r0, r0, #1
 8022476:	ea40 0008 	orr.w	r0, r0, r8
 802247a:	2300      	movs	r3, #0
 802247c:	900d      	str	r0, [sp, #52]	@ 0x34
 802247e:	9600      	str	r6, [sp, #0]
 8022480:	220f      	movs	r2, #15
 8022482:	4619      	mov	r1, r3
 8022484:	4628      	mov	r0, r5
 8022486:	f006 fabb 	bl	8028a00 <_Unwind_VRS_Set>
 802248a:	f1bb 0f02 	cmp.w	fp, #2
 802248e:	f000 8122 	beq.w	80226d6 <__gxx_personality_v0+0x33a>
 8022492:	2007      	movs	r0, #7
 8022494:	e79c      	b.n	80223d0 <__gxx_personality_v0+0x34>
 8022496:	6a0f      	ldr	r7, [r1, #32]
 8022498:	4610      	mov	r0, r2
 802249a:	210d      	movs	r1, #13
 802249c:	f7ff ff71 	bl	8022382 <_Unwind_GetGR>
 80224a0:	4287      	cmp	r7, r0
 80224a2:	d19d      	bne.n	80223e0 <__gxx_personality_v0+0x44>
 80224a4:	2306      	movs	r3, #6
 80224a6:	e79c      	b.n	80223e2 <__gxx_personality_v0+0x46>
 80224a8:	f000 fe3c 	bl	8023124 <abort>
 80224ac:	2301      	movs	r3, #1
 80224ae:	e798      	b.n	80223e2 <__gxx_personality_v0+0x46>
 80224b0:	4628      	mov	r0, r5
 80224b2:	f006 ffb1 	bl	8029418 <_Unwind_GetLanguageSpecificData>
 80224b6:	4682      	mov	sl, r0
 80224b8:	2800      	cmp	r0, #0
 80224ba:	d083      	beq.n	80223c4 <__gxx_personality_v0+0x28>
 80224bc:	463a      	mov	r2, r7
 80224be:	4601      	mov	r1, r0
 80224c0:	4628      	mov	r0, r5
 80224c2:	f88d 904c 	strb.w	r9, [sp, #76]	@ 0x4c
 80224c6:	f7ff ff2d 	bl	8022324 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
 80224ca:	f89d 904c 	ldrb.w	r9, [sp, #76]	@ 0x4c
 80224ce:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80224d0:	9303      	str	r3, [sp, #12]
 80224d2:	4629      	mov	r1, r5
 80224d4:	4683      	mov	fp, r0
 80224d6:	4648      	mov	r0, r9
 80224d8:	f7ff fef3 	bl	80222c2 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
 80224dc:	210f      	movs	r1, #15
 80224de:	9004      	str	r0, [sp, #16]
 80224e0:	9010      	str	r0, [sp, #64]	@ 0x40
 80224e2:	4628      	mov	r0, r5
 80224e4:	f7ff ff4d 	bl	8022382 <_Unwind_GetGR>
 80224e8:	f020 0801 	bic.w	r8, r0, #1
 80224ec:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 80224f0:	9305      	str	r3, [sp, #20]
 80224f2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80224f4:	455f      	cmp	r7, fp
 80224f6:	d817      	bhi.n	8022528 <__gxx_personality_v0+0x18c>
 80224f8:	2700      	movs	r7, #0
 80224fa:	46b8      	mov	r8, r7
 80224fc:	f04f 0b01 	mov.w	fp, #1
 8022500:	07f2      	lsls	r2, r6, #31
 8022502:	f140 80d3 	bpl.w	80226ac <__gxx_personality_v0+0x310>
 8022506:	f1bb 0f02 	cmp.w	fp, #2
 802250a:	f43f af5b 	beq.w	80223c4 <__gxx_personality_v0+0x28>
 802250e:	210d      	movs	r1, #13
 8022510:	4628      	mov	r0, r5
 8022512:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022514:	f7ff ff35 	bl	8022382 <_Unwind_GetGR>
 8022518:	e9c4 7a0a 	strd	r7, sl, [r4, #40]	@ 0x28
 802251c:	e9c4 0608 	strd	r0, r6, [r4, #32]
 8022520:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
 8022524:	2006      	movs	r0, #6
 8022526:	e753      	b.n	80223d0 <__gxx_personality_v0+0x34>
 8022528:	f89d 804d 	ldrb.w	r8, [sp, #77]	@ 0x4d
 802252c:	465a      	mov	r2, fp
 802252e:	ab0a      	add	r3, sp, #40	@ 0x28
 8022530:	4641      	mov	r1, r8
 8022532:	2000      	movs	r0, #0
 8022534:	f7ff fee6 	bl	8022304 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
 8022538:	ab0b      	add	r3, sp, #44	@ 0x2c
 802253a:	4602      	mov	r2, r0
 802253c:	4641      	mov	r1, r8
 802253e:	2000      	movs	r0, #0
 8022540:	f7ff fee0 	bl	8022304 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
 8022544:	ab0c      	add	r3, sp, #48	@ 0x30
 8022546:	4602      	mov	r2, r0
 8022548:	4641      	mov	r1, r8
 802254a:	2000      	movs	r0, #0
 802254c:	f7ff feda 	bl	8022304 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
 8022550:	a90d      	add	r1, sp, #52	@ 0x34
 8022552:	f7ff fe49 	bl	80221e8 <read_uleb128(unsigned char const*, unsigned long*)>
 8022556:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022558:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802255a:	4413      	add	r3, r2
 802255c:	9a05      	ldr	r2, [sp, #20]
 802255e:	4293      	cmp	r3, r2
 8022560:	4683      	mov	fp, r0
 8022562:	d855      	bhi.n	8022610 <__gxx_personality_v0+0x274>
 8022564:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022566:	4413      	add	r3, r2
 8022568:	9a05      	ldr	r2, [sp, #20]
 802256a:	4293      	cmp	r3, r2
 802256c:	d9c1      	bls.n	80224f2 <__gxx_personality_v0+0x156>
 802256e:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
 8022572:	f1b8 0f00 	cmp.w	r8, #0
 8022576:	d001      	beq.n	802257c <__gxx_personality_v0+0x1e0>
 8022578:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802257a:	4498      	add	r8, r3
 802257c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802257e:	2800      	cmp	r0, #0
 8022580:	d03e      	beq.n	8022600 <__gxx_personality_v0+0x264>
 8022582:	3801      	subs	r0, #1
 8022584:	4438      	add	r0, r7
 8022586:	f1b8 0f00 	cmp.w	r8, #0
 802258a:	f43f af1b 	beq.w	80223c4 <__gxx_personality_v0+0x28>
 802258e:	f016 0308 	ands.w	r3, r6, #8
 8022592:	9306      	str	r3, [sp, #24]
 8022594:	d03e      	beq.n	8022614 <__gxx_personality_v0+0x278>
 8022596:	2347      	movs	r3, #71	@ 0x47
 8022598:	7023      	strb	r3, [r4, #0]
 802259a:	234e      	movs	r3, #78	@ 0x4e
 802259c:	7063      	strb	r3, [r4, #1]
 802259e:	2355      	movs	r3, #85	@ 0x55
 80225a0:	70a3      	strb	r3, [r4, #2]
 80225a2:	2343      	movs	r3, #67	@ 0x43
 80225a4:	70e3      	strb	r3, [r4, #3]
 80225a6:	2346      	movs	r3, #70	@ 0x46
 80225a8:	7123      	strb	r3, [r4, #4]
 80225aa:	234f      	movs	r3, #79	@ 0x4f
 80225ac:	7163      	strb	r3, [r4, #5]
 80225ae:	2352      	movs	r3, #82	@ 0x52
 80225b0:	71a3      	strb	r3, [r4, #6]
 80225b2:	2300      	movs	r3, #0
 80225b4:	71e3      	strb	r3, [r4, #7]
 80225b6:	2300      	movs	r3, #0
 80225b8:	9305      	str	r3, [sp, #20]
 80225ba:	a90b      	add	r1, sp, #44	@ 0x2c
 80225bc:	f7ff fe23 	bl	8022206 <read_sleb128(unsigned char const*, long*)>
 80225c0:	a90c      	add	r1, sp, #48	@ 0x30
 80225c2:	9007      	str	r0, [sp, #28]
 80225c4:	f7ff fe1f 	bl	8022206 <read_sleb128(unsigned char const*, long*)>
 80225c8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80225ca:	2f00      	cmp	r7, #0
 80225cc:	d06b      	beq.n	80226a6 <__gxx_personality_v0+0x30a>
 80225ce:	2e02      	cmp	r6, #2
 80225d0:	d05d      	beq.n	802268e <__gxx_personality_v0+0x2f2>
 80225d2:	2f00      	cmp	r7, #0
 80225d4:	dd42      	ble.n	802265c <__gxx_personality_v0+0x2c0>
 80225d6:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80225da:	d03b      	beq.n	8022654 <__gxx_personality_v0+0x2b8>
 80225dc:	f009 0307 	and.w	r3, r9, #7
 80225e0:	2b04      	cmp	r3, #4
 80225e2:	f63f af61 	bhi.w	80224a8 <__gxx_personality_v0+0x10c>
 80225e6:	a201      	add	r2, pc, #4	@ (adr r2, 80225ec <__gxx_personality_v0+0x250>)
 80225e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80225ec:	08022627 	.word	0x08022627
 80225f0:	080224a9 	.word	0x080224a9
 80225f4:	08022659 	.word	0x08022659
 80225f8:	08022627 	.word	0x08022627
 80225fc:	08022651 	.word	0x08022651
 8022600:	f1b8 0f00 	cmp.w	r8, #0
 8022604:	f43f aede 	beq.w	80223c4 <__gxx_personality_v0+0x28>
 8022608:	2700      	movs	r7, #0
 802260a:	f04f 0b02 	mov.w	fp, #2
 802260e:	e777      	b.n	8022500 <__gxx_personality_v0+0x164>
 8022610:	46bb      	mov	fp, r7
 8022612:	e76e      	b.n	80224f2 <__gxx_personality_v0+0x156>
 8022614:	79e3      	ldrb	r3, [r4, #7]
 8022616:	2b01      	cmp	r3, #1
 8022618:	bf0c      	ite	eq
 802261a:	f854 3c20 	ldreq.w	r3, [r4, #-32]
 802261e:	f104 0358 	addne.w	r3, r4, #88	@ 0x58
 8022622:	9309      	str	r3, [sp, #36]	@ 0x24
 8022624:	e7c7      	b.n	80225b6 <__gxx_personality_v0+0x21a>
 8022626:	2204      	movs	r2, #4
 8022628:	9903      	ldr	r1, [sp, #12]
 802262a:	ab0d      	add	r3, sp, #52	@ 0x34
 802262c:	fb02 1217 	mls	r2, r2, r7, r1
 8022630:	4648      	mov	r0, r9
 8022632:	9904      	ldr	r1, [sp, #16]
 8022634:	f7ff fdff 	bl	8022236 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
 8022638:	990d      	ldr	r1, [sp, #52]	@ 0x34
 802263a:	b131      	cbz	r1, 802264a <__gxx_personality_v0+0x2ae>
 802263c:	b33c      	cbz	r4, 802268e <__gxx_personality_v0+0x2f2>
 802263e:	ab09      	add	r3, sp, #36	@ 0x24
 8022640:	2200      	movs	r2, #0
 8022642:	4620      	mov	r0, r4
 8022644:	f7ff fd44 	bl	80220d0 <__cxa_type_match>
 8022648:	b308      	cbz	r0, 802268e <__gxx_personality_v0+0x2f2>
 802264a:	f04f 0b03 	mov.w	fp, #3
 802264e:	e757      	b.n	8022500 <__gxx_personality_v0+0x164>
 8022650:	2208      	movs	r2, #8
 8022652:	e7e9      	b.n	8022628 <__gxx_personality_v0+0x28c>
 8022654:	2200      	movs	r2, #0
 8022656:	e7e7      	b.n	8022628 <__gxx_personality_v0+0x28c>
 8022658:	2202      	movs	r2, #2
 802265a:	e7e5      	b.n	8022628 <__gxx_personality_v0+0x28c>
 802265c:	9a03      	ldr	r2, [sp, #12]
 802265e:	f06f 4340 	mvn.w	r3, #3221225472	@ 0xc0000000
 8022662:	1bdb      	subs	r3, r3, r7
 8022664:	eb02 0b83 	add.w	fp, r2, r3, lsl #2
 8022668:	b1bc      	cbz	r4, 802269a <__gxx_personality_v0+0x2fe>
 802266a:	9a06      	ldr	r2, [sp, #24]
 802266c:	b9aa      	cbnz	r2, 802269a <__gxx_personality_v0+0x2fe>
 802266e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022670:	930d      	str	r3, [sp, #52]	@ 0x34
 8022672:	f1ab 0b04 	sub.w	fp, fp, #4
 8022676:	f85b 1f04 	ldr.w	r1, [fp, #4]!
 802267a:	2900      	cmp	r1, #0
 802267c:	d0e5      	beq.n	802264a <__gxx_personality_v0+0x2ae>
 802267e:	ab0d      	add	r3, sp, #52	@ 0x34
 8022680:	2200      	movs	r2, #0
 8022682:	4459      	add	r1, fp
 8022684:	4620      	mov	r0, r4
 8022686:	f7ff fd23 	bl	80220d0 <__cxa_type_match>
 802268a:	2800      	cmp	r0, #0
 802268c:	d0f3      	beq.n	8022676 <__gxx_personality_v0+0x2da>
 802268e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022690:	b328      	cbz	r0, 80226de <__gxx_personality_v0+0x342>
 8022692:	9b07      	ldr	r3, [sp, #28]
 8022694:	4403      	add	r3, r0
 8022696:	4618      	mov	r0, r3
 8022698:	e78f      	b.n	80225ba <__gxx_personality_v0+0x21e>
 802269a:	9a03      	ldr	r2, [sp, #12]
 802269c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80226a0:	2b00      	cmp	r3, #0
 80226a2:	d1f4      	bne.n	802268e <__gxx_personality_v0+0x2f2>
 80226a4:	e7d1      	b.n	802264a <__gxx_personality_v0+0x2ae>
 80226a6:	2301      	movs	r3, #1
 80226a8:	9305      	str	r3, [sp, #20]
 80226aa:	e7f0      	b.n	802268e <__gxx_personality_v0+0x2f2>
 80226ac:	0733      	lsls	r3, r6, #28
 80226ae:	d509      	bpl.n	80226c4 <__gxx_personality_v0+0x328>
 80226b0:	f1bb 0f01 	cmp.w	fp, #1
 80226b4:	d101      	bne.n	80226ba <__gxx_personality_v0+0x31e>
 80226b6:	f000 f823 	bl	8022700 <std::terminate()>
 80226ba:	2f00      	cmp	r7, #0
 80226bc:	f6bf aec4 	bge.w	8022448 <__gxx_personality_v0+0xac>
 80226c0:	f000 f830 	bl	8022724 <std::unexpected()>
 80226c4:	f1bb 0f01 	cmp.w	fp, #1
 80226c8:	f47f aea1 	bne.w	802240e <__gxx_personality_v0+0x72>
 80226cc:	4620      	mov	r0, r4
 80226ce:	f000 fb1d 	bl	8022d0c <__cxa_call_terminate>
 80226d2:	3201      	adds	r2, #1
 80226d4:	e6ae      	b.n	8022434 <__gxx_personality_v0+0x98>
 80226d6:	4620      	mov	r0, r4
 80226d8:	f7ff fd4c 	bl	8022174 <__cxa_begin_cleanup>
 80226dc:	e6d9      	b.n	8022492 <__gxx_personality_v0+0xf6>
 80226de:	9b05      	ldr	r3, [sp, #20]
 80226e0:	2b00      	cmp	r3, #0
 80226e2:	d191      	bne.n	8022608 <__gxx_personality_v0+0x26c>
 80226e4:	e66e      	b.n	80223c4 <__gxx_personality_v0+0x28>
 80226e6:	bf00      	nop

080226e8 <__cxxabiv1::__terminate(void (*)())>:
 80226e8:	b508      	push	{r3, lr}
 80226ea:	4780      	blx	r0
 80226ec:	f000 fd1a 	bl	8023124 <abort>

080226f0 <std::get_terminate()>:
 80226f0:	4b02      	ldr	r3, [pc, #8]	@ (80226fc <std::get_terminate()+0xc>)
 80226f2:	6818      	ldr	r0, [r3, #0]
 80226f4:	f3bf 8f5b 	dmb	ish
 80226f8:	4770      	bx	lr
 80226fa:	bf00      	nop
 80226fc:	20000428 	.word	0x20000428

08022700 <std::terminate()>:
 8022700:	b508      	push	{r3, lr}
 8022702:	f7ff fff5 	bl	80226f0 <std::get_terminate()>
 8022706:	f7ff ffef 	bl	80226e8 <__cxxabiv1::__terminate(void (*)())>

0802270a <__cxxabiv1::__unexpected(void (*)())>:
 802270a:	b508      	push	{r3, lr}
 802270c:	4780      	blx	r0
 802270e:	f7ff fff7 	bl	8022700 <std::terminate()>
	...

08022714 <std::get_unexpected()>:
 8022714:	4b02      	ldr	r3, [pc, #8]	@ (8022720 <std::get_unexpected()+0xc>)
 8022716:	6818      	ldr	r0, [r3, #0]
 8022718:	f3bf 8f5b 	dmb	ish
 802271c:	4770      	bx	lr
 802271e:	bf00      	nop
 8022720:	20000424 	.word	0x20000424

08022724 <std::unexpected()>:
 8022724:	b508      	push	{r3, lr}
 8022726:	f7ff fff5 	bl	8022714 <std::get_unexpected()>
 802272a:	f7ff ffee 	bl	802270a <__cxxabiv1::__unexpected(void (*)())>

0802272e <operator new(unsigned int)>:
 802272e:	2801      	cmp	r0, #1
 8022730:	bf38      	it	cc
 8022732:	2001      	movcc	r0, #1
 8022734:	b510      	push	{r4, lr}
 8022736:	4604      	mov	r4, r0
 8022738:	4620      	mov	r0, r4
 802273a:	f000 fd61 	bl	8023200 <malloc>
 802273e:	b100      	cbz	r0, 8022742 <operator new(unsigned int)+0x14>
 8022740:	bd10      	pop	{r4, pc}
 8022742:	f000 fb4d 	bl	8022de0 <std::get_new_handler()>
 8022746:	b908      	cbnz	r0, 802274c <operator new(unsigned int)+0x1e>
 8022748:	f000 fcec 	bl	8023124 <abort>
 802274c:	4780      	blx	r0
 802274e:	e7f3      	b.n	8022738 <operator new(unsigned int)+0xa>

08022750 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
 8022750:	b510      	push	{r4, lr}
 8022752:	4b03      	ldr	r3, [pc, #12]	@ (8022760 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
 8022754:	6003      	str	r3, [r0, #0]
 8022756:	4604      	mov	r4, r0
 8022758:	f7ff fb40 	bl	8021ddc <__cxxabiv1::__class_type_info::~__class_type_info()>
 802275c:	4620      	mov	r0, r4
 802275e:	bd10      	pop	{r4, pc}
 8022760:	08037878 	.word	0x08037878

08022764 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
 8022764:	b510      	push	{r4, lr}
 8022766:	4604      	mov	r4, r0
 8022768:	f7ff fff2 	bl	8022750 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
 802276c:	4620      	mov	r0, r4
 802276e:	210c      	movs	r1, #12
 8022770:	f7ff fb88 	bl	8021e84 <operator delete(void*, unsigned int)>
 8022774:	4620      	mov	r0, r4
 8022776:	bd10      	pop	{r4, pc}

08022778 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
 8022778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802277c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022780:	4590      	cmp	r8, r2
 8022782:	4606      	mov	r6, r0
 8022784:	460f      	mov	r7, r1
 8022786:	4615      	mov	r5, r2
 8022788:	461c      	mov	r4, r3
 802278a:	d00b      	beq.n	80227a4 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2c>
 802278c:	68b0      	ldr	r0, [r6, #8]
 802278e:	6803      	ldr	r3, [r0, #0]
 8022790:	f8cd 8018 	str.w	r8, [sp, #24]
 8022794:	6a1e      	ldr	r6, [r3, #32]
 8022796:	462a      	mov	r2, r5
 8022798:	4623      	mov	r3, r4
 802279a:	4639      	mov	r1, r7
 802279c:	46b4      	mov	ip, r6
 802279e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80227a2:	4760      	bx	ip
 80227a4:	4619      	mov	r1, r3
 80227a6:	f000 f857 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 80227aa:	2800      	cmp	r0, #0
 80227ac:	d0ee      	beq.n	802278c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
 80227ae:	2006      	movs	r0, #6
 80227b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080227b4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
 80227b4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80227b8:	460d      	mov	r5, r1
 80227ba:	4619      	mov	r1, r3
 80227bc:	e9dd 4b0a 	ldrd	r4, fp, [sp, #40]	@ 0x28
 80227c0:	e9dd a60c 	ldrd	sl, r6, [sp, #48]	@ 0x30
 80227c4:	4681      	mov	r9, r0
 80227c6:	4617      	mov	r7, r2
 80227c8:	4698      	mov	r8, r3
 80227ca:	f000 f845 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 80227ce:	b190      	cbz	r0, 80227f6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x42>
 80227d0:	2d00      	cmp	r5, #0
 80227d2:	6034      	str	r4, [r6, #0]
 80227d4:	7137      	strb	r7, [r6, #4]
 80227d6:	db09      	blt.n	80227ec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x38>
 80227d8:	442c      	add	r4, r5
 80227da:	45a2      	cmp	sl, r4
 80227dc:	bf14      	ite	ne
 80227de:	2401      	movne	r4, #1
 80227e0:	2406      	moveq	r4, #6
 80227e2:	71b4      	strb	r4, [r6, #6]
 80227e4:	2000      	movs	r0, #0
 80227e6:	b001      	add	sp, #4
 80227e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80227ec:	3502      	adds	r5, #2
 80227ee:	d1f9      	bne.n	80227e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
 80227f0:	2301      	movs	r3, #1
 80227f2:	71b3      	strb	r3, [r6, #6]
 80227f4:	e7f6      	b.n	80227e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
 80227f6:	4554      	cmp	r4, sl
 80227f8:	d106      	bne.n	8022808 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
 80227fa:	4659      	mov	r1, fp
 80227fc:	4648      	mov	r0, r9
 80227fe:	f000 f82b 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8022802:	b108      	cbz	r0, 8022808 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
 8022804:	7177      	strb	r7, [r6, #5]
 8022806:	e7ed      	b.n	80227e4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
 8022808:	f8d9 0008 	ldr.w	r0, [r9, #8]
 802280c:	6803      	ldr	r3, [r0, #0]
 802280e:	e9cd a60c 	strd	sl, r6, [sp, #48]	@ 0x30
 8022812:	e9cd 4b0a 	strd	r4, fp, [sp, #40]	@ 0x28
 8022816:	69dc      	ldr	r4, [r3, #28]
 8022818:	463a      	mov	r2, r7
 802281a:	4643      	mov	r3, r8
 802281c:	4629      	mov	r1, r5
 802281e:	46a4      	mov	ip, r4
 8022820:	b001      	add	sp, #4
 8022822:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022826:	4760      	bx	ip

08022828 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
 8022828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802282c:	4607      	mov	r7, r0
 802282e:	460c      	mov	r4, r1
 8022830:	4615      	mov	r5, r2
 8022832:	461e      	mov	r6, r3
 8022834:	f7ff fb05 	bl	8021e42 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
 8022838:	b948      	cbnz	r0, 802284e <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
 802283a:	68b8      	ldr	r0, [r7, #8]
 802283c:	6803      	ldr	r3, [r0, #0]
 802283e:	699f      	ldr	r7, [r3, #24]
 8022840:	462a      	mov	r2, r5
 8022842:	4633      	mov	r3, r6
 8022844:	4621      	mov	r1, r4
 8022846:	46bc      	mov	ip, r7
 8022848:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802284c:	4760      	bx	ip
 802284e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08022852 <std::type_info::~type_info()>:
 8022852:	4770      	bx	lr

08022854 <std::type_info::__is_pointer_p() const>:
 8022854:	2000      	movs	r0, #0
 8022856:	4770      	bx	lr

08022858 <std::type_info::__equal(std::type_info const&) const>:
 8022858:	4281      	cmp	r1, r0
 802285a:	b508      	push	{r3, lr}
 802285c:	d00e      	beq.n	802287c <std::type_info::__equal(std::type_info const&) const+0x24>
 802285e:	6840      	ldr	r0, [r0, #4]
 8022860:	7803      	ldrb	r3, [r0, #0]
 8022862:	2b2a      	cmp	r3, #42	@ 0x2a
 8022864:	d00c      	beq.n	8022880 <std::type_info::__equal(std::type_info const&) const+0x28>
 8022866:	6849      	ldr	r1, [r1, #4]
 8022868:	780b      	ldrb	r3, [r1, #0]
 802286a:	2b2a      	cmp	r3, #42	@ 0x2a
 802286c:	bf08      	it	eq
 802286e:	3101      	addeq	r1, #1
 8022870:	f7dd fc8e 	bl	8000190 <strcmp>
 8022874:	fab0 f080 	clz	r0, r0
 8022878:	0940      	lsrs	r0, r0, #5
 802287a:	bd08      	pop	{r3, pc}
 802287c:	2001      	movs	r0, #1
 802287e:	e7fc      	b.n	802287a <std::type_info::__equal(std::type_info const&) const+0x22>
 8022880:	2000      	movs	r0, #0
 8022882:	e7fa      	b.n	802287a <std::type_info::__equal(std::type_info const&) const+0x22>

08022884 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
 8022884:	b510      	push	{r4, lr}
 8022886:	4b03      	ldr	r3, [pc, #12]	@ (8022894 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
 8022888:	6003      	str	r3, [r0, #0]
 802288a:	4604      	mov	r4, r0
 802288c:	f7ff faa6 	bl	8021ddc <__cxxabiv1::__class_type_info::~__class_type_info()>
 8022890:	4620      	mov	r0, r4
 8022892:	bd10      	pop	{r4, pc}
 8022894:	080378f0 	.word	0x080378f0

08022898 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
 8022898:	b510      	push	{r4, lr}
 802289a:	4604      	mov	r4, r0
 802289c:	f7ff fff2 	bl	8022884 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
 80228a0:	4620      	mov	r0, r4
 80228a2:	2118      	movs	r1, #24
 80228a4:	f7ff faee 	bl	8021e84 <operator delete(void*, unsigned int)>
 80228a8:	4620      	mov	r0, r4
 80228aa:	bd10      	pop	{r4, pc}

080228ac <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
 80228ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228b0:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80228b4:	4552      	cmp	r2, sl
 80228b6:	4605      	mov	r5, r0
 80228b8:	4688      	mov	r8, r1
 80228ba:	4616      	mov	r6, r2
 80228bc:	4699      	mov	r9, r3
 80228be:	d005      	beq.n	80228cc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
 80228c0:	68ef      	ldr	r7, [r5, #12]
 80228c2:	eb05 05c7 	add.w	r5, r5, r7, lsl #3
 80228c6:	b947      	cbnz	r7, 80228da <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2e>
 80228c8:	2001      	movs	r0, #1
 80228ca:	e020      	b.n	802290e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x62>
 80228cc:	4619      	mov	r1, r3
 80228ce:	f7ff ffc3 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 80228d2:	2800      	cmp	r0, #0
 80228d4:	d0f4      	beq.n	80228c0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
 80228d6:	2006      	movs	r0, #6
 80228d8:	e019      	b.n	802290e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x62>
 80228da:	68ec      	ldr	r4, [r5, #12]
 80228dc:	07a3      	lsls	r3, r4, #30
 80228de:	d519      	bpl.n	8022914 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
 80228e0:	1222      	asrs	r2, r4, #8
 80228e2:	f014 0401 	ands.w	r4, r4, #1
 80228e6:	d004      	beq.n	80228f2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x46>
 80228e8:	f118 0f03 	cmn.w	r8, #3
 80228ec:	d012      	beq.n	8022914 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
 80228ee:	6833      	ldr	r3, [r6, #0]
 80228f0:	589a      	ldr	r2, [r3, r2]
 80228f2:	68a8      	ldr	r0, [r5, #8]
 80228f4:	6803      	ldr	r3, [r0, #0]
 80228f6:	f8cd a000 	str.w	sl, [sp]
 80228fa:	f8d3 b020 	ldr.w	fp, [r3, #32]
 80228fe:	4432      	add	r2, r6
 8022900:	464b      	mov	r3, r9
 8022902:	4641      	mov	r1, r8
 8022904:	47d8      	blx	fp
 8022906:	2803      	cmp	r0, #3
 8022908:	d904      	bls.n	8022914 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
 802290a:	4320      	orrs	r0, r4
 802290c:	b2c0      	uxtb	r0, r0
 802290e:	b003      	add	sp, #12
 8022910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022914:	3f01      	subs	r7, #1
 8022916:	3d08      	subs	r5, #8
 8022918:	e7d5      	b.n	80228c6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>

0802291a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
 802291a:	b4f0      	push	{r4, r5, r6, r7}
 802291c:	1e0d      	subs	r5, r1, #0
 802291e:	9c04      	ldr	r4, [sp, #16]
 8022920:	4616      	mov	r6, r2
 8022922:	db06      	blt.n	8022932 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x18>
 8022924:	442e      	add	r6, r5
 8022926:	42b4      	cmp	r4, r6
 8022928:	bf0c      	ite	eq
 802292a:	2006      	moveq	r0, #6
 802292c:	2001      	movne	r0, #1
 802292e:	bcf0      	pop	{r4, r5, r6, r7}
 8022930:	4770      	bx	lr
 8022932:	3502      	adds	r5, #2
 8022934:	d005      	beq.n	8022942 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
 8022936:	6805      	ldr	r5, [r0, #0]
 8022938:	9404      	str	r4, [sp, #16]
 802293a:	6a2c      	ldr	r4, [r5, #32]
 802293c:	46a4      	mov	ip, r4
 802293e:	bcf0      	pop	{r4, r5, r6, r7}
 8022940:	4760      	bx	ip
 8022942:	2001      	movs	r0, #1
 8022944:	e7f3      	b.n	802292e <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>

08022946 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
 8022946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802294a:	b091      	sub	sp, #68	@ 0x44
 802294c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8022950:	9c1d      	ldr	r4, [sp, #116]	@ 0x74
 8022952:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8022954:	68a3      	ldr	r3, [r4, #8]
 8022956:	06db      	lsls	r3, r3, #27
 8022958:	bf44      	itt	mi
 802295a:	6883      	ldrmi	r3, [r0, #8]
 802295c:	60a3      	strmi	r3, [r4, #8]
 802295e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8022960:	4293      	cmp	r3, r2
 8022962:	4681      	mov	r9, r0
 8022964:	460f      	mov	r7, r1
 8022966:	d108      	bne.n	802297a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
 8022968:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 802296a:	f7ff ff75 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 802296e:	b120      	cbz	r0, 802297a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
 8022970:	9b05      	ldr	r3, [sp, #20]
 8022972:	7163      	strb	r3, [r4, #5]
 8022974:	f04f 0800 	mov.w	r8, #0
 8022978:	e082      	b.n	8022a80 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x13a>
 802297a:	9906      	ldr	r1, [sp, #24]
 802297c:	4648      	mov	r0, r9
 802297e:	f7ff ff6b 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8022982:	b198      	cbz	r0, 80229ac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x66>
 8022984:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8022986:	6023      	str	r3, [r4, #0]
 8022988:	2f00      	cmp	r7, #0
 802298a:	9b05      	ldr	r3, [sp, #20]
 802298c:	7123      	strb	r3, [r4, #4]
 802298e:	db08      	blt.n	80229a2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5c>
 8022990:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8022992:	441f      	add	r7, r3
 8022994:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022996:	42bb      	cmp	r3, r7
 8022998:	bf14      	ite	ne
 802299a:	2701      	movne	r7, #1
 802299c:	2706      	moveq	r7, #6
 802299e:	71a7      	strb	r7, [r4, #6]
 80229a0:	e7e8      	b.n	8022974 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
 80229a2:	3702      	adds	r7, #2
 80229a4:	d1e6      	bne.n	8022974 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
 80229a6:	2301      	movs	r3, #1
 80229a8:	71a3      	strb	r3, [r4, #6]
 80229aa:	e7e3      	b.n	8022974 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
 80229ac:	2f00      	cmp	r7, #0
 80229ae:	bfa9      	itett	ge
 80229b0:	9b1c      	ldrge	r3, [sp, #112]	@ 0x70
 80229b2:	9007      	strlt	r0, [sp, #28]
 80229b4:	1bdb      	subge	r3, r3, r7
 80229b6:	9307      	strge	r3, [sp, #28]
 80229b8:	f04f 0c02 	mov.w	ip, #2
 80229bc:	2301      	movs	r3, #1
 80229be:	e9cd c308 	strd	ip, r3, [sp, #32]
 80229c2:	9b05      	ldr	r3, [sp, #20]
 80229c4:	f04f 0800 	mov.w	r8, #0
 80229c8:	f043 0301 	orr.w	r3, r3, #1
 80229cc:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80229d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80229d2:	f8d9 a00c 	ldr.w	sl, [r9, #12]
 80229d6:	eb09 0bca 	add.w	fp, r9, sl, lsl #3
 80229da:	f1ba 0f00 	cmp.w	sl, #0
 80229de:	d109      	bne.n	80229f4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xae>
 80229e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80229e2:	2b00      	cmp	r3, #0
 80229e4:	d04c      	beq.n	8022a80 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x13a>
 80229e6:	9b08      	ldr	r3, [sp, #32]
 80229e8:	2b01      	cmp	r3, #1
 80229ea:	d049      	beq.n	8022a80 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x13a>
 80229ec:	2301      	movs	r3, #1
 80229ee:	e9cd 3a08 	strd	r3, sl, [sp, #32]
 80229f2:	e7ee      	b.n	80229d2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x8c>
 80229f4:	2300      	movs	r3, #0
 80229f6:	e9cd 330d 	strd	r3, r3, [sp, #52]	@ 0x34
 80229fa:	f8db 300c 	ldr.w	r3, [fp, #12]
 80229fe:	68a5      	ldr	r5, [r4, #8]
 8022a00:	950f      	str	r5, [sp, #60]	@ 0x3c
 8022a02:	07de      	lsls	r6, r3, #31
 8022a04:	bf43      	ittte	mi
 8022a06:	981a      	ldrmi	r0, [sp, #104]	@ 0x68
 8022a08:	9a0b      	ldrmi	r2, [sp, #44]	@ 0x2c
 8022a0a:	6800      	ldrmi	r0, [r0, #0]
 8022a0c:	9a05      	ldrpl	r2, [sp, #20]
 8022a0e:	ea4f 2123 	mov.w	r1, r3, asr #8
 8022a12:	bf48      	it	mi
 8022a14:	5841      	ldrmi	r1, [r0, r1]
 8022a16:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8022a18:	4401      	add	r1, r0
 8022a1a:	9807      	ldr	r0, [sp, #28]
 8022a1c:	b138      	cbz	r0, 8022a2e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xe8>
 8022a1e:	4288      	cmp	r0, r1
 8022a20:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8022a22:	bf2c      	ite	cs
 8022a24:	2000      	movcs	r0, #0
 8022a26:	2001      	movcc	r0, #1
 8022a28:	42b0      	cmp	r0, r6
 8022a2a:	f000 80b3 	beq.w	8022b94 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
 8022a2e:	0798      	lsls	r0, r3, #30
 8022a30:	d406      	bmi.n	8022a40 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xfa>
 8022a32:	1cbb      	adds	r3, r7, #2
 8022a34:	d102      	bne.n	8022a3c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xf6>
 8022a36:	07ae      	lsls	r6, r5, #30
 8022a38:	f000 80ae 	beq.w	8022b98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x252>
 8022a3c:	f002 02fd 	and.w	r2, r2, #253	@ 0xfd
 8022a40:	f8db 0008 	ldr.w	r0, [fp, #8]
 8022a44:	ad0d      	add	r5, sp, #52	@ 0x34
 8022a46:	6803      	ldr	r3, [r0, #0]
 8022a48:	9503      	str	r5, [sp, #12]
 8022a4a:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8022a4c:	9502      	str	r5, [sp, #8]
 8022a4e:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8022a50:	e9cd 1500 	strd	r1, r5, [sp]
 8022a54:	4639      	mov	r1, r7
 8022a56:	69dd      	ldr	r5, [r3, #28]
 8022a58:	9b06      	ldr	r3, [sp, #24]
 8022a5a:	47a8      	blx	r5
 8022a5c:	7963      	ldrb	r3, [r4, #5]
 8022a5e:	f89d 2039 	ldrb.w	r2, [sp, #57]	@ 0x39
 8022a62:	f89d 503a 	ldrb.w	r5, [sp, #58]	@ 0x3a
 8022a66:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8022a68:	4313      	orrs	r3, r2
 8022a6a:	2d06      	cmp	r5, #6
 8022a6c:	7163      	strb	r3, [r4, #5]
 8022a6e:	d001      	beq.n	8022a74 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x12e>
 8022a70:	2d02      	cmp	r5, #2
 8022a72:	d109      	bne.n	8022a88 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
 8022a74:	f89d 3038 	ldrb.w	r3, [sp, #56]	@ 0x38
 8022a78:	6021      	str	r1, [r4, #0]
 8022a7a:	7123      	strb	r3, [r4, #4]
 8022a7c:	71a5      	strb	r5, [r4, #6]
 8022a7e:	4680      	mov	r8, r0
 8022a80:	4640      	mov	r0, r8
 8022a82:	b011      	add	sp, #68	@ 0x44
 8022a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a88:	6822      	ldr	r2, [r4, #0]
 8022a8a:	f1b8 0f00 	cmp.w	r8, #0
 8022a8e:	d113      	bne.n	8022ab8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x172>
 8022a90:	b9a2      	cbnz	r2, 8022abc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x176>
 8022a92:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8022a96:	6021      	str	r1, [r4, #0]
 8022a98:	7122      	strb	r2, [r4, #4]
 8022a9a:	b121      	cbz	r1, 8022aa6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x160>
 8022a9c:	b11b      	cbz	r3, 8022aa6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x160>
 8022a9e:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8022aa2:	07dd      	lsls	r5, r3, #31
 8022aa4:	d5eb      	bpl.n	8022a7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x138>
 8022aa6:	7963      	ldrb	r3, [r4, #5]
 8022aa8:	2b04      	cmp	r3, #4
 8022aaa:	d0e8      	beq.n	8022a7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x138>
 8022aac:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8022ab0:	f1ab 0b08 	sub.w	fp, fp, #8
 8022ab4:	4680      	mov	r8, r0
 8022ab6:	e790      	b.n	80229da <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x94>
 8022ab8:	2a00      	cmp	r2, #0
 8022aba:	d037      	beq.n	8022b2c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e6>
 8022abc:	4291      	cmp	r1, r2
 8022abe:	d106      	bne.n	8022ace <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x188>
 8022ac0:	7923      	ldrb	r3, [r4, #4]
 8022ac2:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8022ac6:	4313      	orrs	r3, r2
 8022ac8:	7123      	strb	r3, [r4, #4]
 8022aca:	4640      	mov	r0, r8
 8022acc:	e7eb      	b.n	8022aa6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x160>
 8022ace:	b909      	cbnz	r1, 8022ad4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
 8022ad0:	2800      	cmp	r0, #0
 8022ad2:	d0fa      	beq.n	8022aca <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x184>
 8022ad4:	2b03      	cmp	r3, #3
 8022ad6:	79a6      	ldrb	r6, [r4, #6]
 8022ad8:	d904      	bls.n	8022ae4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19e>
 8022ada:	07d9      	lsls	r1, r3, #31
 8022adc:	d529      	bpl.n	8022b32 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
 8022ade:	68a3      	ldr	r3, [r4, #8]
 8022ae0:	079b      	lsls	r3, r3, #30
 8022ae2:	d526      	bpl.n	8022b32 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
 8022ae4:	b97e      	cbnz	r6, 8022b06 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
 8022ae6:	2d03      	cmp	r5, #3
 8022ae8:	d905      	bls.n	8022af6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b0>
 8022aea:	07ee      	lsls	r6, r5, #31
 8022aec:	d541      	bpl.n	8022b72 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22c>
 8022aee:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8022af2:	0798      	lsls	r0, r3, #30
 8022af4:	d53d      	bpl.n	8022b72 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22c>
 8022af6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022af8:	9300      	str	r3, [sp, #0]
 8022afa:	9806      	ldr	r0, [sp, #24]
 8022afc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022afe:	4639      	mov	r1, r7
 8022b00:	f7ff ff0b 	bl	802291a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
 8022b04:	4606      	mov	r6, r0
 8022b06:	b9e5      	cbnz	r5, 8022b42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fc>
 8022b08:	2e03      	cmp	r6, #3
 8022b0a:	d905      	bls.n	8022b18 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d2>
 8022b0c:	07f1      	lsls	r1, r6, #31
 8022b0e:	d532      	bpl.n	8022b76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x230>
 8022b10:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8022b14:	079a      	lsls	r2, r3, #30
 8022b16:	d52e      	bpl.n	8022b76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x230>
 8022b18:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b1a:	9300      	str	r3, [sp, #0]
 8022b1c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8022b1e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022b20:	9806      	ldr	r0, [sp, #24]
 8022b22:	4639      	mov	r1, r7
 8022b24:	f7ff fef9 	bl	802291a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
 8022b28:	4605      	mov	r5, r0
 8022b2a:	e00a      	b.n	8022b42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fc>
 8022b2c:	2900      	cmp	r1, #0
 8022b2e:	d1d1      	bne.n	8022ad4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
 8022b30:	e7cb      	b.n	8022aca <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x184>
 8022b32:	2e01      	cmp	r6, #1
 8022b34:	bf38      	it	cc
 8022b36:	2601      	movcc	r6, #1
 8022b38:	2d01      	cmp	r5, #1
 8022b3a:	bf38      	it	cc
 8022b3c:	2501      	movcc	r5, #1
 8022b3e:	b2f6      	uxtb	r6, r6
 8022b40:	b2ed      	uxtb	r5, r5
 8022b42:	ea85 0306 	eor.w	r3, r5, r6
 8022b46:	b2db      	uxtb	r3, r3
 8022b48:	2b03      	cmp	r3, #3
 8022b4a:	d916      	bls.n	8022b7a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x234>
 8022b4c:	2d03      	cmp	r5, #3
 8022b4e:	bf81      	itttt	hi
 8022b50:	9b0d      	ldrhi	r3, [sp, #52]	@ 0x34
 8022b52:	6023      	strhi	r3, [r4, #0]
 8022b54:	462e      	movhi	r6, r5
 8022b56:	f89d 3038 	ldrbhi.w	r3, [sp, #56]	@ 0x38
 8022b5a:	bf86      	itte	hi
 8022b5c:	7123      	strbhi	r3, [r4, #4]
 8022b5e:	2000      	movhi	r0, #0
 8022b60:	4640      	movls	r0, r8
 8022b62:	07b3      	lsls	r3, r6, #30
 8022b64:	71a6      	strb	r6, [r4, #6]
 8022b66:	d402      	bmi.n	8022b6e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x228>
 8022b68:	f016 0601 	ands.w	r6, r6, #1
 8022b6c:	d19b      	bne.n	8022aa6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x160>
 8022b6e:	2000      	movs	r0, #0
 8022b70:	e785      	b.n	8022a7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x138>
 8022b72:	2601      	movs	r6, #1
 8022b74:	e7e5      	b.n	8022b42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fc>
 8022b76:	2501      	movs	r5, #1
 8022b78:	e7e3      	b.n	8022b42 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fc>
 8022b7a:	4035      	ands	r5, r6
 8022b7c:	b2ed      	uxtb	r5, r5
 8022b7e:	2300      	movs	r3, #0
 8022b80:	2d03      	cmp	r5, #3
 8022b82:	6023      	str	r3, [r4, #0]
 8022b84:	d903      	bls.n	8022b8e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x248>
 8022b86:	2302      	movs	r3, #2
 8022b88:	71a3      	strb	r3, [r4, #6]
 8022b8a:	2001      	movs	r0, #1
 8022b8c:	e777      	b.n	8022a7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x138>
 8022b8e:	2001      	movs	r0, #1
 8022b90:	71a0      	strb	r0, [r4, #6]
 8022b92:	e788      	b.n	8022aa6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x160>
 8022b94:	2301      	movs	r3, #1
 8022b96:	930a      	str	r3, [sp, #40]	@ 0x28
 8022b98:	4640      	mov	r0, r8
 8022b9a:	e787      	b.n	8022aac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x166>

08022b9c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
 8022b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ba0:	b08b      	sub	sp, #44	@ 0x2c
 8022ba2:	4605      	mov	r5, r0
 8022ba4:	9104      	str	r1, [sp, #16]
 8022ba6:	9201      	str	r2, [sp, #4]
 8022ba8:	461c      	mov	r4, r3
 8022baa:	f7ff f94a 	bl	8021e42 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
 8022bae:	2800      	cmp	r0, #0
 8022bb0:	d163      	bne.n	8022c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xde>
 8022bb2:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8022bb6:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8022bba:	f019 0f10 	tst.w	r9, #16
 8022bbe:	bf18      	it	ne
 8022bc0:	f8d5 9008 	ldrne.w	r9, [r5, #8]
 8022bc4:	f009 0301 	and.w	r3, r9, #1
 8022bc8:	eb05 07c8 	add.w	r7, r5, r8, lsl #3
 8022bcc:	f04f 0a00 	mov.w	sl, #0
 8022bd0:	9305      	str	r3, [sp, #20]
 8022bd2:	f10d 0b18 	add.w	fp, sp, #24
 8022bd6:	f1b8 0f00 	cmp.w	r8, #0
 8022bda:	d104      	bne.n	8022be6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x4a>
 8022bdc:	7920      	ldrb	r0, [r4, #4]
 8022bde:	3800      	subs	r0, #0
 8022be0:	bf18      	it	ne
 8022be2:	2001      	movne	r0, #1
 8022be4:	e04a      	b.n	8022c7c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe0>
 8022be6:	68fa      	ldr	r2, [r7, #12]
 8022be8:	f8cd a018 	str.w	sl, [sp, #24]
 8022bec:	f002 0301 	and.w	r3, r2, #1
 8022bf0:	9302      	str	r3, [sp, #8]
 8022bf2:	f002 0302 	and.w	r3, r2, #2
 8022bf6:	9303      	str	r3, [sp, #12]
 8022bf8:	9b05      	ldr	r3, [sp, #20]
 8022bfa:	f88d a01c 	strb.w	sl, [sp, #28]
 8022bfe:	f002 0102 	and.w	r1, r2, #2
 8022c02:	430b      	orrs	r3, r1
 8022c04:	e9cd 9a08 	strd	r9, sl, [sp, #32]
 8022c08:	d103      	bne.n	8022c12 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
 8022c0a:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8022c0e:	3f08      	subs	r7, #8
 8022c10:	e7e1      	b.n	8022bd6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x3a>
 8022c12:	9b01      	ldr	r3, [sp, #4]
 8022c14:	2b00      	cmp	r3, #0
 8022c16:	d034      	beq.n	8022c82 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe6>
 8022c18:	9b02      	ldr	r3, [sp, #8]
 8022c1a:	1212      	asrs	r2, r2, #8
 8022c1c:	b113      	cbz	r3, 8022c24 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x88>
 8022c1e:	9b01      	ldr	r3, [sp, #4]
 8022c20:	681b      	ldr	r3, [r3, #0]
 8022c22:	589a      	ldr	r2, [r3, r2]
 8022c24:	9b01      	ldr	r3, [sp, #4]
 8022c26:	441a      	add	r2, r3
 8022c28:	68b8      	ldr	r0, [r7, #8]
 8022c2a:	9904      	ldr	r1, [sp, #16]
 8022c2c:	6803      	ldr	r3, [r0, #0]
 8022c2e:	699b      	ldr	r3, [r3, #24]
 8022c30:	461e      	mov	r6, r3
 8022c32:	465b      	mov	r3, fp
 8022c34:	47b0      	blx	r6
 8022c36:	2800      	cmp	r0, #0
 8022c38:	d0e7      	beq.n	8022c0a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6e>
 8022c3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022c3c:	2b08      	cmp	r3, #8
 8022c3e:	d103      	bne.n	8022c48 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xac>
 8022c40:	9b02      	ldr	r3, [sp, #8]
 8022c42:	b10b      	cbz	r3, 8022c48 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xac>
 8022c44:	68bb      	ldr	r3, [r7, #8]
 8022c46:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c48:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8022c4c:	2b03      	cmp	r3, #3
 8022c4e:	d905      	bls.n	8022c5c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc0>
 8022c50:	9a03      	ldr	r2, [sp, #12]
 8022c52:	b91a      	cbnz	r2, 8022c5c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc0>
 8022c54:	f023 0302 	bic.w	r3, r3, #2
 8022c58:	f88d 301c 	strb.w	r3, [sp, #28]
 8022c5c:	68e1      	ldr	r1, [r4, #12]
 8022c5e:	b9c1      	cbnz	r1, 8022c92 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf6>
 8022c60:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 8022c64:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8022c68:	7923      	ldrb	r3, [r4, #4]
 8022c6a:	2b03      	cmp	r3, #3
 8022c6c:	d905      	bls.n	8022c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xde>
 8022c6e:	079a      	lsls	r2, r3, #30
 8022c70:	d509      	bpl.n	8022c86 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xea>
 8022c72:	68ab      	ldr	r3, [r5, #8]
 8022c74:	f013 0f01 	tst.w	r3, #1
 8022c78:	d1c7      	bne.n	8022c0a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6e>
 8022c7a:	2001      	movs	r0, #1
 8022c7c:	b00b      	add	sp, #44	@ 0x2c
 8022c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c82:	9a01      	ldr	r2, [sp, #4]
 8022c84:	e7d0      	b.n	8022c28 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x8c>
 8022c86:	07db      	lsls	r3, r3, #31
 8022c88:	d5f7      	bpl.n	8022c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xde>
 8022c8a:	68ab      	ldr	r3, [r5, #8]
 8022c8c:	f013 0f02 	tst.w	r3, #2
 8022c90:	e7f2      	b.n	8022c78 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
 8022c92:	6823      	ldr	r3, [r4, #0]
 8022c94:	9a06      	ldr	r2, [sp, #24]
 8022c96:	4293      	cmp	r3, r2
 8022c98:	d004      	beq.n	8022ca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x108>
 8022c9a:	2300      	movs	r3, #0
 8022c9c:	6023      	str	r3, [r4, #0]
 8022c9e:	2302      	movs	r3, #2
 8022ca0:	7123      	strb	r3, [r4, #4]
 8022ca2:	e7ea      	b.n	8022c7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xde>
 8022ca4:	b12b      	cbz	r3, 8022cb2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
 8022ca6:	7923      	ldrb	r3, [r4, #4]
 8022ca8:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8022cac:	4313      	orrs	r3, r2
 8022cae:	7123      	strb	r3, [r4, #4]
 8022cb0:	e7ab      	b.n	8022c0a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6e>
 8022cb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022cb4:	2808      	cmp	r0, #8
 8022cb6:	d0f2      	beq.n	8022c9e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
 8022cb8:	2908      	cmp	r1, #8
 8022cba:	d0f0      	beq.n	8022c9e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
 8022cbc:	f7ff fdcc 	bl	8022858 <std::type_info::__equal(std::type_info const&) const>
 8022cc0:	2800      	cmp	r0, #0
 8022cc2:	d1f0      	bne.n	8022ca6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10a>
 8022cc4:	e7eb      	b.n	8022c9e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>

08022cc6 <std::__throw_out_of_range_fmt(char const*, ...)>:
 8022cc6:	b40f      	push	{r0, r1, r2, r3}
 8022cc8:	b508      	push	{r3, lr}
 8022cca:	f000 fa2b 	bl	8023124 <abort>

08022cce <operator delete(void*)>:
 8022cce:	f000 ba9f 	b.w	8023210 <free>

08022cd2 <__cxxabiv1::__is_gxx_exception_class(char*)>:
 8022cd2:	7803      	ldrb	r3, [r0, #0]
 8022cd4:	2b47      	cmp	r3, #71	@ 0x47
 8022cd6:	d117      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cd8:	7843      	ldrb	r3, [r0, #1]
 8022cda:	2b4e      	cmp	r3, #78	@ 0x4e
 8022cdc:	d114      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cde:	7883      	ldrb	r3, [r0, #2]
 8022ce0:	2b55      	cmp	r3, #85	@ 0x55
 8022ce2:	d111      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022ce4:	78c3      	ldrb	r3, [r0, #3]
 8022ce6:	2b43      	cmp	r3, #67	@ 0x43
 8022ce8:	d10e      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cea:	7903      	ldrb	r3, [r0, #4]
 8022cec:	2b43      	cmp	r3, #67	@ 0x43
 8022cee:	d10b      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cf0:	7943      	ldrb	r3, [r0, #5]
 8022cf2:	2b2b      	cmp	r3, #43	@ 0x2b
 8022cf4:	d108      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cf6:	7983      	ldrb	r3, [r0, #6]
 8022cf8:	2b2b      	cmp	r3, #43	@ 0x2b
 8022cfa:	d105      	bne.n	8022d08 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022cfc:	79c0      	ldrb	r0, [r0, #7]
 8022cfe:	2801      	cmp	r0, #1
 8022d00:	bf8c      	ite	hi
 8022d02:	2000      	movhi	r0, #0
 8022d04:	2001      	movls	r0, #1
 8022d06:	4770      	bx	lr
 8022d08:	2000      	movs	r0, #0
 8022d0a:	4770      	bx	lr

08022d0c <__cxa_call_terminate>:
 8022d0c:	b510      	push	{r4, lr}
 8022d0e:	4604      	mov	r4, r0
 8022d10:	b148      	cbz	r0, 8022d26 <__cxa_call_terminate+0x1a>
 8022d12:	f000 f83b 	bl	8022d8c <__cxa_begin_catch>
 8022d16:	4620      	mov	r0, r4
 8022d18:	f7ff ffdb 	bl	8022cd2 <__cxxabiv1::__is_gxx_exception_class(char*)>
 8022d1c:	b118      	cbz	r0, 8022d26 <__cxa_call_terminate+0x1a>
 8022d1e:	f854 0c14 	ldr.w	r0, [r4, #-20]
 8022d22:	f7ff fce1 	bl	80226e8 <__cxxabiv1::__terminate(void (*)())>
 8022d26:	f7ff fceb 	bl	8022700 <std::terminate()>

08022d2a <__cxa_call_unexpected>:
 8022d2a:	b538      	push	{r3, r4, r5, lr}
 8022d2c:	4602      	mov	r2, r0
 8022d2e:	f7ff ffd0 	bl	8022cd2 <__cxxabiv1::__is_gxx_exception_class(char*)>
 8022d32:	4604      	mov	r4, r0
 8022d34:	b140      	cbz	r0, 8022d48 <__cxa_call_unexpected+0x1e>
 8022d36:	f852 4c18 	ldr.w	r4, [r2, #-24]
 8022d3a:	2500      	movs	r5, #0
 8022d3c:	4610      	mov	r0, r2
 8022d3e:	f000 f825 	bl	8022d8c <__cxa_begin_catch>
 8022d42:	b11d      	cbz	r5, 8022d4c <__cxa_call_unexpected+0x22>
 8022d44:	f7ff fcee 	bl	8022724 <std::unexpected()>
 8022d48:	2501      	movs	r5, #1
 8022d4a:	e7f7      	b.n	8022d3c <__cxa_call_unexpected+0x12>
 8022d4c:	4620      	mov	r0, r4
 8022d4e:	f7ff fcdc 	bl	802270a <__cxxabiv1::__unexpected(void (*)())>

08022d52 <__cxxabiv1::__is_gxx_exception_class(char*)>:
 8022d52:	7803      	ldrb	r3, [r0, #0]
 8022d54:	2b47      	cmp	r3, #71	@ 0x47
 8022d56:	d117      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d58:	7843      	ldrb	r3, [r0, #1]
 8022d5a:	2b4e      	cmp	r3, #78	@ 0x4e
 8022d5c:	d114      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d5e:	7883      	ldrb	r3, [r0, #2]
 8022d60:	2b55      	cmp	r3, #85	@ 0x55
 8022d62:	d111      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d64:	78c3      	ldrb	r3, [r0, #3]
 8022d66:	2b43      	cmp	r3, #67	@ 0x43
 8022d68:	d10e      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d6a:	7903      	ldrb	r3, [r0, #4]
 8022d6c:	2b43      	cmp	r3, #67	@ 0x43
 8022d6e:	d10b      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d70:	7943      	ldrb	r3, [r0, #5]
 8022d72:	2b2b      	cmp	r3, #43	@ 0x2b
 8022d74:	d108      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d76:	7983      	ldrb	r3, [r0, #6]
 8022d78:	2b2b      	cmp	r3, #43	@ 0x2b
 8022d7a:	d105      	bne.n	8022d88 <__cxxabiv1::__is_gxx_exception_class(char*)+0x36>
 8022d7c:	79c0      	ldrb	r0, [r0, #7]
 8022d7e:	2801      	cmp	r0, #1
 8022d80:	bf8c      	ite	hi
 8022d82:	2000      	movhi	r0, #0
 8022d84:	2001      	movls	r0, #1
 8022d86:	4770      	bx	lr
 8022d88:	2000      	movs	r0, #0
 8022d8a:	4770      	bx	lr

08022d8c <__cxa_begin_catch>:
 8022d8c:	b538      	push	{r3, r4, r5, lr}
 8022d8e:	4604      	mov	r4, r0
 8022d90:	f7ff fa26 	bl	80221e0 <__cxa_get_globals>
 8022d94:	6805      	ldr	r5, [r0, #0]
 8022d96:	4602      	mov	r2, r0
 8022d98:	4620      	mov	r0, r4
 8022d9a:	f1a4 0120 	sub.w	r1, r4, #32
 8022d9e:	f7ff ffd8 	bl	8022d52 <__cxxabiv1::__is_gxx_exception_class(char*)>
 8022da2:	b928      	cbnz	r0, 8022db0 <__cxa_begin_catch+0x24>
 8022da4:	b10d      	cbz	r5, 8022daa <__cxa_begin_catch+0x1e>
 8022da6:	f7ff fcab 	bl	8022700 <std::terminate()>
 8022daa:	6011      	str	r1, [r2, #0]
 8022dac:	4628      	mov	r0, r5
 8022dae:	bd38      	pop	{r3, r4, r5, pc}
 8022db0:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8022db4:	2b00      	cmp	r3, #0
 8022db6:	bfb4      	ite	lt
 8022db8:	f1c3 0301 	rsblt	r3, r3, #1
 8022dbc:	3301      	addge	r3, #1
 8022dbe:	f844 3c0c 	str.w	r3, [r4, #-12]
 8022dc2:	6853      	ldr	r3, [r2, #4]
 8022dc4:	428d      	cmp	r5, r1
 8022dc6:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8022dca:	6053      	str	r3, [r2, #4]
 8022dcc:	4620      	mov	r0, r4
 8022dce:	bf1c      	itt	ne
 8022dd0:	f844 5c10 	strne.w	r5, [r4, #-16]
 8022dd4:	6011      	strne	r1, [r2, #0]
 8022dd6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8022dd8:	f005 fde8 	bl	80289ac <_Unwind_Complete>
 8022ddc:	e7e6      	b.n	8022dac <__cxa_begin_catch+0x20>
	...

08022de0 <std::get_new_handler()>:
 8022de0:	4b02      	ldr	r3, [pc, #8]	@ (8022dec <std::get_new_handler()+0xc>)
 8022de2:	6818      	ldr	r0, [r3, #0]
 8022de4:	f3bf 8f5b 	dmb	ish
 8022de8:	4770      	bx	lr
 8022dea:	bf00      	nop
 8022dec:	2000d578 	.word	0x2000d578

08022df0 <fmodf>:
 8022df0:	b508      	push	{r3, lr}
 8022df2:	ed2d 8b02 	vpush	{d8}
 8022df6:	eef0 8a40 	vmov.f32	s17, s0
 8022dfa:	eeb0 8a60 	vmov.f32	s16, s1
 8022dfe:	f000 f8cf 	bl	8022fa0 <__ieee754_fmodf>
 8022e02:	eef4 8a48 	vcmp.f32	s17, s16
 8022e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e0a:	d606      	bvs.n	8022e1a <fmodf+0x2a>
 8022e0c:	eddf 8a09 	vldr	s17, [pc, #36]	@ 8022e34 <fmodf+0x44>
 8022e10:	eeb4 8a68 	vcmp.f32	s16, s17
 8022e14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e18:	d002      	beq.n	8022e20 <fmodf+0x30>
 8022e1a:	ecbd 8b02 	vpop	{d8}
 8022e1e:	bd08      	pop	{r3, pc}
 8022e20:	f001 fd06 	bl	8024830 <__errno>
 8022e24:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8022e28:	ecbd 8b02 	vpop	{d8}
 8022e2c:	2321      	movs	r3, #33	@ 0x21
 8022e2e:	6003      	str	r3, [r0, #0]
 8022e30:	bd08      	pop	{r3, pc}
 8022e32:	bf00      	nop
 8022e34:	00000000 	.word	0x00000000

08022e38 <fmaxf>:
 8022e38:	b508      	push	{r3, lr}
 8022e3a:	ed2d 8b02 	vpush	{d8}
 8022e3e:	eef0 8a40 	vmov.f32	s17, s0
 8022e42:	eeb0 8a60 	vmov.f32	s16, s1
 8022e46:	f000 f81f 	bl	8022e88 <__fpclassifyf>
 8022e4a:	b920      	cbnz	r0, 8022e56 <fmaxf+0x1e>
 8022e4c:	eeb0 0a48 	vmov.f32	s0, s16
 8022e50:	ecbd 8b02 	vpop	{d8}
 8022e54:	bd08      	pop	{r3, pc}
 8022e56:	eeb0 0a48 	vmov.f32	s0, s16
 8022e5a:	f000 f815 	bl	8022e88 <__fpclassifyf>
 8022e5e:	b158      	cbz	r0, 8022e78 <fmaxf+0x40>
 8022e60:	eef4 8ac8 	vcmpe.f32	s17, s16
 8022e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e68:	bfc8      	it	gt
 8022e6a:	eeb0 8a68 	vmovgt.f32	s16, s17
 8022e6e:	eeb0 0a48 	vmov.f32	s0, s16
 8022e72:	ecbd 8b02 	vpop	{d8}
 8022e76:	bd08      	pop	{r3, pc}
 8022e78:	eeb0 8a68 	vmov.f32	s16, s17
 8022e7c:	eeb0 0a48 	vmov.f32	s0, s16
 8022e80:	ecbd 8b02 	vpop	{d8}
 8022e84:	bd08      	pop	{r3, pc}
 8022e86:	bf00      	nop

08022e88 <__fpclassifyf>:
 8022e88:	ee10 3a10 	vmov	r3, s0
 8022e8c:	f033 4000 	bics.w	r0, r3, #2147483648	@ 0x80000000
 8022e90:	d00e      	beq.n	8022eb0 <__fpclassifyf+0x28>
 8022e92:	f5a0 0300 	sub.w	r3, r0, #8388608	@ 0x800000
 8022e96:	f1b3 4ffe 	cmp.w	r3, #2130706432	@ 0x7f000000
 8022e9a:	d30d      	bcc.n	8022eb8 <__fpclassifyf+0x30>
 8022e9c:	4b07      	ldr	r3, [pc, #28]	@ (8022ebc <__fpclassifyf+0x34>)
 8022e9e:	1e42      	subs	r2, r0, #1
 8022ea0:	429a      	cmp	r2, r3
 8022ea2:	d907      	bls.n	8022eb4 <__fpclassifyf+0x2c>
 8022ea4:	f1a0 40ff 	sub.w	r0, r0, #2139095040	@ 0x7f800000
 8022ea8:	fab0 f080 	clz	r0, r0
 8022eac:	0940      	lsrs	r0, r0, #5
 8022eae:	4770      	bx	lr
 8022eb0:	2002      	movs	r0, #2
 8022eb2:	4770      	bx	lr
 8022eb4:	2003      	movs	r0, #3
 8022eb6:	4770      	bx	lr
 8022eb8:	2004      	movs	r0, #4
 8022eba:	4770      	bx	lr
 8022ebc:	007ffffe 	.word	0x007ffffe

08022ec0 <floorf>:
 8022ec0:	ee10 2a10 	vmov	r2, s0
 8022ec4:	f3c2 53c7 	ubfx	r3, r2, #23, #8
 8022ec8:	3b7f      	subs	r3, #127	@ 0x7f
 8022eca:	2b16      	cmp	r3, #22
 8022ecc:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8022ed0:	dc1b      	bgt.n	8022f0a <floorf+0x4a>
 8022ed2:	2b00      	cmp	r3, #0
 8022ed4:	4610      	mov	r0, r2
 8022ed6:	db1e      	blt.n	8022f16 <floorf+0x56>
 8022ed8:	491a      	ldr	r1, [pc, #104]	@ (8022f44 <floorf+0x84>)
 8022eda:	4119      	asrs	r1, r3
 8022edc:	420a      	tst	r2, r1
 8022ede:	d023      	beq.n	8022f28 <floorf+0x68>
 8022ee0:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022f48 <floorf+0x88>
 8022ee4:	ee70 7a27 	vadd.f32	s15, s0, s15
 8022ee8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022ef0:	dd1a      	ble.n	8022f28 <floorf+0x68>
 8022ef2:	2a00      	cmp	r2, #0
 8022ef4:	da04      	bge.n	8022f00 <floorf+0x40>
 8022ef6:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8022efa:	fa42 f303 	asr.w	r3, r2, r3
 8022efe:	4418      	add	r0, r3
 8022f00:	ea20 0301 	bic.w	r3, r0, r1
 8022f04:	ee00 3a10 	vmov	s0, r3
 8022f08:	4770      	bx	lr
 8022f0a:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022f0e:	d30b      	bcc.n	8022f28 <floorf+0x68>
 8022f10:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022f14:	4770      	bx	lr
 8022f16:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8022f48 <floorf+0x88>
 8022f1a:	ee70 7a27 	vadd.f32	s15, s0, s15
 8022f1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8022f22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f26:	dc00      	bgt.n	8022f2a <floorf+0x6a>
 8022f28:	4770      	bx	lr
 8022f2a:	2a00      	cmp	r2, #0
 8022f2c:	db02      	blt.n	8022f34 <floorf+0x74>
 8022f2e:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 8022f4c <floorf+0x8c>
 8022f32:	4770      	bx	lr
 8022f34:	b911      	cbnz	r1, 8022f3c <floorf+0x7c>
 8022f36:	ed9f 0a06 	vldr	s0, [pc, #24]	@ 8022f50 <floorf+0x90>
 8022f3a:	4770      	bx	lr
 8022f3c:	eebf 0a00 	vmov.f32	s0, #240	@ 0xbf800000 -1.0
 8022f40:	e7f2      	b.n	8022f28 <floorf+0x68>
 8022f42:	bf00      	nop
 8022f44:	007fffff 	.word	0x007fffff
 8022f48:	7149f2ca 	.word	0x7149f2ca
 8022f4c:	00000000 	.word	0x00000000
 8022f50:	80000000 	.word	0x80000000

08022f54 <roundf>:
 8022f54:	ee10 3a10 	vmov	r3, s0
 8022f58:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022f5c:	3a7f      	subs	r2, #127	@ 0x7f
 8022f5e:	2a16      	cmp	r2, #22
 8022f60:	4619      	mov	r1, r3
 8022f62:	dc0e      	bgt.n	8022f82 <roundf+0x2e>
 8022f64:	2a00      	cmp	r2, #0
 8022f66:	db11      	blt.n	8022f8c <roundf+0x38>
 8022f68:	480c      	ldr	r0, [pc, #48]	@ (8022f9c <roundf+0x48>)
 8022f6a:	4110      	asrs	r0, r2
 8022f6c:	4203      	tst	r3, r0
 8022f6e:	d005      	beq.n	8022f7c <roundf+0x28>
 8022f70:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8022f74:	4113      	asrs	r3, r2
 8022f76:	440b      	add	r3, r1
 8022f78:	ea23 0300 	bic.w	r3, r3, r0
 8022f7c:	ee00 3a10 	vmov	s0, r3
 8022f80:	4770      	bx	lr
 8022f82:	2a80      	cmp	r2, #128	@ 0x80
 8022f84:	d1fa      	bne.n	8022f7c <roundf+0x28>
 8022f86:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022f8a:	4770      	bx	lr
 8022f8c:	3201      	adds	r2, #1
 8022f8e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8022f92:	d1f3      	bne.n	8022f7c <roundf+0x28>
 8022f94:	f043 537e 	orr.w	r3, r3, #1065353216	@ 0x3f800000
 8022f98:	e7f0      	b.n	8022f7c <roundf+0x28>
 8022f9a:	bf00      	nop
 8022f9c:	007fffff 	.word	0x007fffff

08022fa0 <__ieee754_fmodf>:
 8022fa0:	b570      	push	{r4, r5, r6, lr}
 8022fa2:	b082      	sub	sp, #8
 8022fa4:	edcd 0a01 	vstr	s1, [sp, #4]
 8022fa8:	9801      	ldr	r0, [sp, #4]
 8022faa:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8022fae:	1e5a      	subs	r2, r3, #1
 8022fb0:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8022fb4:	d23b      	bcs.n	802302e <__ieee754_fmodf+0x8e>
 8022fb6:	ee10 1a10 	vmov	r1, s0
 8022fba:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
 8022fbe:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8022fc2:	d234      	bcs.n	802302e <__ieee754_fmodf+0x8e>
 8022fc4:	429c      	cmp	r4, r3
 8022fc6:	db38      	blt.n	802303a <__ieee754_fmodf+0x9a>
 8022fc8:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8022fcc:	d058      	beq.n	8023080 <__ieee754_fmodf+0xe0>
 8022fce:	f011 4fff 	tst.w	r1, #2139095040	@ 0x7f800000
 8022fd2:	f000 46ff 	and.w	r6, r0, #2139095040	@ 0x7f800000
 8022fd6:	d13e      	bne.n	8023056 <__ieee754_fmodf+0xb6>
 8022fd8:	ea4f 2c04 	mov.w	ip, r4, lsl #8
 8022fdc:	f06f 057d 	mvn.w	r5, #125	@ 0x7d
 8022fe0:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8022fe4:	f1bc 0f00 	cmp.w	ip, #0
 8022fe8:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 8022fec:	dcf8      	bgt.n	8022fe0 <__ieee754_fmodf+0x40>
 8022fee:	2e00      	cmp	r6, #0
 8022ff0:	d166      	bne.n	80230c0 <__ieee754_fmodf+0x120>
 8022ff2:	0218      	lsls	r0, r3, #8
 8022ff4:	f06f 0e7d 	mvn.w	lr, #125	@ 0x7d
 8022ff8:	0040      	lsls	r0, r0, #1
 8022ffa:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
 8022ffe:	d5fb      	bpl.n	8022ff8 <__ieee754_fmodf+0x58>
 8023000:	f115 0f7e 	cmn.w	r5, #126	@ 0x7e
 8023004:	da77      	bge.n	80230f6 <__ieee754_fmodf+0x156>
 8023006:	f06f 007d 	mvn.w	r0, #125	@ 0x7d
 802300a:	1b41      	subs	r1, r0, r5
 802300c:	fa04 f101 	lsl.w	r1, r4, r1
 8023010:	eba5 050e 	sub.w	r5, r5, lr
 8023014:	eba0 040e 	sub.w	r4, r0, lr
 8023018:	40a3      	lsls	r3, r4
 802301a:	1e68      	subs	r0, r5, #1
 802301c:	b9a5      	cbnz	r5, 8023048 <__ieee754_fmodf+0xa8>
 802301e:	1acb      	subs	r3, r1, r3
 8023020:	2b00      	cmp	r3, #0
 8023022:	db75      	blt.n	8023110 <__ieee754_fmodf+0x170>
 8023024:	d02c      	beq.n	8023080 <__ieee754_fmodf+0xe0>
 8023026:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 802302a:	db35      	blt.n	8023098 <__ieee754_fmodf+0xf8>
 802302c:	e041      	b.n	80230b2 <__ieee754_fmodf+0x112>
 802302e:	eddd 7a01 	vldr	s15, [sp, #4]
 8023032:	ee60 7a27 	vmul.f32	s15, s0, s15
 8023036:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 802303a:	b002      	add	sp, #8
 802303c:	bd70      	pop	{r4, r5, r6, pc}
 802303e:	d01f      	beq.n	8023080 <__ieee754_fmodf+0xe0>
 8023040:	ea4f 014c 	mov.w	r1, ip, lsl #1
 8023044:	3801      	subs	r0, #1
 8023046:	d322      	bcc.n	802308e <__ieee754_fmodf+0xee>
 8023048:	eba1 0c03 	sub.w	ip, r1, r3
 802304c:	f1bc 0f00 	cmp.w	ip, #0
 8023050:	daf5      	bge.n	802303e <__ieee754_fmodf+0x9e>
 8023052:	0049      	lsls	r1, r1, #1
 8023054:	e7f6      	b.n	8023044 <__ieee754_fmodf+0xa4>
 8023056:	15e5      	asrs	r5, r4, #23
 8023058:	b386      	cbz	r6, 80230bc <__ieee754_fmodf+0x11c>
 802305a:	15db      	asrs	r3, r3, #23
 802305c:	f3c0 0016 	ubfx	r0, r0, #0, #23
 8023060:	1aed      	subs	r5, r5, r3
 8023062:	f3c1 0116 	ubfx	r1, r1, #0, #23
 8023066:	f1a3 0e7f 	sub.w	lr, r3, #127	@ 0x7f
 802306a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 802306e:	f440 0300 	orr.w	r3, r0, #8388608	@ 0x800000
 8023072:	1e68      	subs	r0, r5, #1
 8023074:	2d00      	cmp	r5, #0
 8023076:	d1e7      	bne.n	8023048 <__ieee754_fmodf+0xa8>
 8023078:	1acb      	subs	r3, r1, r3
 802307a:	2b00      	cmp	r3, #0
 802307c:	db30      	blt.n	80230e0 <__ieee754_fmodf+0x140>
 802307e:	d10b      	bne.n	8023098 <__ieee754_fmodf+0xf8>
 8023080:	4b27      	ldr	r3, [pc, #156]	@ (8023120 <__ieee754_fmodf+0x180>)
 8023082:	eb03 7352 	add.w	r3, r3, r2, lsr #29
 8023086:	ed93 0a00 	vldr	s0, [r3]
 802308a:	b002      	add	sp, #8
 802308c:	bd70      	pop	{r4, r5, r6, pc}
 802308e:	1acb      	subs	r3, r1, r3
 8023090:	bf48      	it	mi
 8023092:	460b      	movmi	r3, r1
 8023094:	b91b      	cbnz	r3, 802309e <__ieee754_fmodf+0xfe>
 8023096:	e7f3      	b.n	8023080 <__ieee754_fmodf+0xe0>
 8023098:	005b      	lsls	r3, r3, #1
 802309a:	f10e 3eff 	add.w	lr, lr, #4294967295	@ 0xffffffff
 802309e:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80230a2:	dbf9      	blt.n	8023098 <__ieee754_fmodf+0xf8>
 80230a4:	f11e 0f7e 	cmn.w	lr, #126	@ 0x7e
 80230a8:	da1b      	bge.n	80230e2 <__ieee754_fmodf+0x142>
 80230aa:	f06f 047d 	mvn.w	r4, #125	@ 0x7d
 80230ae:	eba4 040e 	sub.w	r4, r4, lr
 80230b2:	4123      	asrs	r3, r4
 80230b4:	4313      	orrs	r3, r2
 80230b6:	ee00 3a10 	vmov	s0, r3
 80230ba:	e7be      	b.n	802303a <__ieee754_fmodf+0x9a>
 80230bc:	3d7f      	subs	r5, #127	@ 0x7f
 80230be:	e798      	b.n	8022ff2 <__ieee754_fmodf+0x52>
 80230c0:	15db      	asrs	r3, r3, #23
 80230c2:	f1a3 0e7f 	sub.w	lr, r3, #127	@ 0x7f
 80230c6:	f3c0 0016 	ubfx	r0, r0, #0, #23
 80230ca:	f06f 017d 	mvn.w	r1, #125	@ 0x7d
 80230ce:	f440 0300 	orr.w	r3, r0, #8388608	@ 0x800000
 80230d2:	1b49      	subs	r1, r1, r5
 80230d4:	eba5 000e 	sub.w	r0, r5, lr
 80230d8:	fa04 f101 	lsl.w	r1, r4, r1
 80230dc:	3801      	subs	r0, #1
 80230de:	e7b3      	b.n	8023048 <__ieee754_fmodf+0xa8>
 80230e0:	460b      	mov	r3, r1
 80230e2:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 80230e6:	f10e 0e7f 	add.w	lr, lr, #127	@ 0x7f
 80230ea:	4313      	orrs	r3, r2
 80230ec:	ea43 53ce 	orr.w	r3, r3, lr, lsl #23
 80230f0:	ee00 3a10 	vmov	s0, r3
 80230f4:	e7a1      	b.n	802303a <__ieee754_fmodf+0x9a>
 80230f6:	f06f 047d 	mvn.w	r4, #125	@ 0x7d
 80230fa:	f3c1 0116 	ubfx	r1, r1, #0, #23
 80230fe:	eba5 000e 	sub.w	r0, r5, lr
 8023102:	eba4 040e 	sub.w	r4, r4, lr
 8023106:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 802310a:	3801      	subs	r0, #1
 802310c:	40a3      	lsls	r3, r4
 802310e:	e79b      	b.n	8023048 <__ieee754_fmodf+0xa8>
 8023110:	2900      	cmp	r1, #0
 8023112:	d0b5      	beq.n	8023080 <__ieee754_fmodf+0xe0>
 8023114:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8023118:	460b      	mov	r3, r1
 802311a:	dbbd      	blt.n	8023098 <__ieee754_fmodf+0xf8>
 802311c:	e7c9      	b.n	80230b2 <__ieee754_fmodf+0x112>
 802311e:	bf00      	nop
 8023120:	08037914 	.word	0x08037914

08023124 <abort>:
 8023124:	b508      	push	{r3, lr}
 8023126:	2006      	movs	r0, #6
 8023128:	f001 fb0c 	bl	8024744 <raise>
 802312c:	2001      	movs	r0, #1
 802312e:	f006 f9bb 	bl	80294a8 <_exit>
	...

08023134 <__assert_func>:
 8023134:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023136:	4614      	mov	r4, r2
 8023138:	461a      	mov	r2, r3
 802313a:	4b09      	ldr	r3, [pc, #36]	@ (8023160 <__assert_func+0x2c>)
 802313c:	681b      	ldr	r3, [r3, #0]
 802313e:	4605      	mov	r5, r0
 8023140:	68d8      	ldr	r0, [r3, #12]
 8023142:	b14c      	cbz	r4, 8023158 <__assert_func+0x24>
 8023144:	4b07      	ldr	r3, [pc, #28]	@ (8023164 <__assert_func+0x30>)
 8023146:	9100      	str	r1, [sp, #0]
 8023148:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802314c:	4906      	ldr	r1, [pc, #24]	@ (8023168 <__assert_func+0x34>)
 802314e:	462b      	mov	r3, r5
 8023150:	f001 f896 	bl	8024280 <fiprintf>
 8023154:	f7ff ffe6 	bl	8023124 <abort>
 8023158:	4b04      	ldr	r3, [pc, #16]	@ (802316c <__assert_func+0x38>)
 802315a:	461c      	mov	r4, r3
 802315c:	e7f3      	b.n	8023146 <__assert_func+0x12>
 802315e:	bf00      	nop
 8023160:	20000438 	.word	0x20000438
 8023164:	0802b0d5 	.word	0x0802b0d5
 8023168:	0802b0e2 	.word	0x0802b0e2
 802316c:	0802b110 	.word	0x0802b110

08023170 <getenv>:
 8023170:	b507      	push	{r0, r1, r2, lr}
 8023172:	4b04      	ldr	r3, [pc, #16]	@ (8023184 <getenv+0x14>)
 8023174:	4601      	mov	r1, r0
 8023176:	aa01      	add	r2, sp, #4
 8023178:	6818      	ldr	r0, [r3, #0]
 802317a:	f000 f805 	bl	8023188 <_findenv_r>
 802317e:	b003      	add	sp, #12
 8023180:	f85d fb04 	ldr.w	pc, [sp], #4
 8023184:	20000438 	.word	0x20000438

08023188 <_findenv_r>:
 8023188:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802318c:	f8df a06c 	ldr.w	sl, [pc, #108]	@ 80231fc <_findenv_r+0x74>
 8023190:	4606      	mov	r6, r0
 8023192:	4689      	mov	r9, r1
 8023194:	4617      	mov	r7, r2
 8023196:	f002 f9f7 	bl	8025588 <__env_lock>
 802319a:	f8da 4000 	ldr.w	r4, [sl]
 802319e:	b134      	cbz	r4, 80231ae <_findenv_r+0x26>
 80231a0:	464b      	mov	r3, r9
 80231a2:	4698      	mov	r8, r3
 80231a4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80231a8:	b13a      	cbz	r2, 80231ba <_findenv_r+0x32>
 80231aa:	2a3d      	cmp	r2, #61	@ 0x3d
 80231ac:	d1f9      	bne.n	80231a2 <_findenv_r+0x1a>
 80231ae:	4630      	mov	r0, r6
 80231b0:	f002 f9f0 	bl	8025594 <__env_unlock>
 80231b4:	2000      	movs	r0, #0
 80231b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ba:	eba8 0809 	sub.w	r8, r8, r9
 80231be:	46a3      	mov	fp, r4
 80231c0:	f854 0b04 	ldr.w	r0, [r4], #4
 80231c4:	2800      	cmp	r0, #0
 80231c6:	d0f2      	beq.n	80231ae <_findenv_r+0x26>
 80231c8:	4642      	mov	r2, r8
 80231ca:	4649      	mov	r1, r9
 80231cc:	f001 fa80 	bl	80246d0 <strncmp>
 80231d0:	2800      	cmp	r0, #0
 80231d2:	d1f4      	bne.n	80231be <_findenv_r+0x36>
 80231d4:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80231d8:	eb03 0508 	add.w	r5, r3, r8
 80231dc:	f813 3008 	ldrb.w	r3, [r3, r8]
 80231e0:	2b3d      	cmp	r3, #61	@ 0x3d
 80231e2:	d1ec      	bne.n	80231be <_findenv_r+0x36>
 80231e4:	f8da 3000 	ldr.w	r3, [sl]
 80231e8:	ebab 0303 	sub.w	r3, fp, r3
 80231ec:	109b      	asrs	r3, r3, #2
 80231ee:	4630      	mov	r0, r6
 80231f0:	603b      	str	r3, [r7, #0]
 80231f2:	f002 f9cf 	bl	8025594 <__env_unlock>
 80231f6:	1c68      	adds	r0, r5, #1
 80231f8:	e7dd      	b.n	80231b6 <_findenv_r+0x2e>
 80231fa:	bf00      	nop
 80231fc:	20000488 	.word	0x20000488

08023200 <malloc>:
 8023200:	4b02      	ldr	r3, [pc, #8]	@ (802320c <malloc+0xc>)
 8023202:	4601      	mov	r1, r0
 8023204:	6818      	ldr	r0, [r3, #0]
 8023206:	f000 b82d 	b.w	8023264 <_malloc_r>
 802320a:	bf00      	nop
 802320c:	20000438 	.word	0x20000438

08023210 <free>:
 8023210:	4b02      	ldr	r3, [pc, #8]	@ (802321c <free+0xc>)
 8023212:	4601      	mov	r1, r0
 8023214:	6818      	ldr	r0, [r3, #0]
 8023216:	f002 b9c3 	b.w	80255a0 <_free_r>
 802321a:	bf00      	nop
 802321c:	20000438 	.word	0x20000438

08023220 <sbrk_aligned>:
 8023220:	b570      	push	{r4, r5, r6, lr}
 8023222:	4e0f      	ldr	r6, [pc, #60]	@ (8023260 <sbrk_aligned+0x40>)
 8023224:	460c      	mov	r4, r1
 8023226:	6831      	ldr	r1, [r6, #0]
 8023228:	4605      	mov	r5, r0
 802322a:	b911      	cbnz	r1, 8023232 <sbrk_aligned+0x12>
 802322c:	f001 fade 	bl	80247ec <_sbrk_r>
 8023230:	6030      	str	r0, [r6, #0]
 8023232:	4621      	mov	r1, r4
 8023234:	4628      	mov	r0, r5
 8023236:	f001 fad9 	bl	80247ec <_sbrk_r>
 802323a:	1c43      	adds	r3, r0, #1
 802323c:	d103      	bne.n	8023246 <sbrk_aligned+0x26>
 802323e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8023242:	4620      	mov	r0, r4
 8023244:	bd70      	pop	{r4, r5, r6, pc}
 8023246:	1cc4      	adds	r4, r0, #3
 8023248:	f024 0403 	bic.w	r4, r4, #3
 802324c:	42a0      	cmp	r0, r4
 802324e:	d0f8      	beq.n	8023242 <sbrk_aligned+0x22>
 8023250:	1a21      	subs	r1, r4, r0
 8023252:	4628      	mov	r0, r5
 8023254:	f001 faca 	bl	80247ec <_sbrk_r>
 8023258:	3001      	adds	r0, #1
 802325a:	d1f2      	bne.n	8023242 <sbrk_aligned+0x22>
 802325c:	e7ef      	b.n	802323e <sbrk_aligned+0x1e>
 802325e:	bf00      	nop
 8023260:	2000d57c 	.word	0x2000d57c

08023264 <_malloc_r>:
 8023264:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023268:	1ccd      	adds	r5, r1, #3
 802326a:	f025 0503 	bic.w	r5, r5, #3
 802326e:	3508      	adds	r5, #8
 8023270:	2d0c      	cmp	r5, #12
 8023272:	bf38      	it	cc
 8023274:	250c      	movcc	r5, #12
 8023276:	2d00      	cmp	r5, #0
 8023278:	4606      	mov	r6, r0
 802327a:	db01      	blt.n	8023280 <_malloc_r+0x1c>
 802327c:	42a9      	cmp	r1, r5
 802327e:	d904      	bls.n	802328a <_malloc_r+0x26>
 8023280:	230c      	movs	r3, #12
 8023282:	6033      	str	r3, [r6, #0]
 8023284:	2000      	movs	r0, #0
 8023286:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802328a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8023360 <_malloc_r+0xfc>
 802328e:	f000 f869 	bl	8023364 <__malloc_lock>
 8023292:	f8d8 3000 	ldr.w	r3, [r8]
 8023296:	461c      	mov	r4, r3
 8023298:	bb44      	cbnz	r4, 80232ec <_malloc_r+0x88>
 802329a:	4629      	mov	r1, r5
 802329c:	4630      	mov	r0, r6
 802329e:	f7ff ffbf 	bl	8023220 <sbrk_aligned>
 80232a2:	1c43      	adds	r3, r0, #1
 80232a4:	4604      	mov	r4, r0
 80232a6:	d158      	bne.n	802335a <_malloc_r+0xf6>
 80232a8:	f8d8 4000 	ldr.w	r4, [r8]
 80232ac:	4627      	mov	r7, r4
 80232ae:	2f00      	cmp	r7, #0
 80232b0:	d143      	bne.n	802333a <_malloc_r+0xd6>
 80232b2:	2c00      	cmp	r4, #0
 80232b4:	d04b      	beq.n	802334e <_malloc_r+0xea>
 80232b6:	6823      	ldr	r3, [r4, #0]
 80232b8:	4639      	mov	r1, r7
 80232ba:	4630      	mov	r0, r6
 80232bc:	eb04 0903 	add.w	r9, r4, r3
 80232c0:	f001 fa94 	bl	80247ec <_sbrk_r>
 80232c4:	4581      	cmp	r9, r0
 80232c6:	d142      	bne.n	802334e <_malloc_r+0xea>
 80232c8:	6821      	ldr	r1, [r4, #0]
 80232ca:	1a6d      	subs	r5, r5, r1
 80232cc:	4629      	mov	r1, r5
 80232ce:	4630      	mov	r0, r6
 80232d0:	f7ff ffa6 	bl	8023220 <sbrk_aligned>
 80232d4:	3001      	adds	r0, #1
 80232d6:	d03a      	beq.n	802334e <_malloc_r+0xea>
 80232d8:	6823      	ldr	r3, [r4, #0]
 80232da:	442b      	add	r3, r5
 80232dc:	6023      	str	r3, [r4, #0]
 80232de:	f8d8 3000 	ldr.w	r3, [r8]
 80232e2:	685a      	ldr	r2, [r3, #4]
 80232e4:	bb62      	cbnz	r2, 8023340 <_malloc_r+0xdc>
 80232e6:	f8c8 7000 	str.w	r7, [r8]
 80232ea:	e00f      	b.n	802330c <_malloc_r+0xa8>
 80232ec:	6822      	ldr	r2, [r4, #0]
 80232ee:	1b52      	subs	r2, r2, r5
 80232f0:	d420      	bmi.n	8023334 <_malloc_r+0xd0>
 80232f2:	2a0b      	cmp	r2, #11
 80232f4:	d917      	bls.n	8023326 <_malloc_r+0xc2>
 80232f6:	1961      	adds	r1, r4, r5
 80232f8:	42a3      	cmp	r3, r4
 80232fa:	6025      	str	r5, [r4, #0]
 80232fc:	bf18      	it	ne
 80232fe:	6059      	strne	r1, [r3, #4]
 8023300:	6863      	ldr	r3, [r4, #4]
 8023302:	bf08      	it	eq
 8023304:	f8c8 1000 	streq.w	r1, [r8]
 8023308:	5162      	str	r2, [r4, r5]
 802330a:	604b      	str	r3, [r1, #4]
 802330c:	4630      	mov	r0, r6
 802330e:	f000 f82f 	bl	8023370 <__malloc_unlock>
 8023312:	f104 000b 	add.w	r0, r4, #11
 8023316:	1d23      	adds	r3, r4, #4
 8023318:	f020 0007 	bic.w	r0, r0, #7
 802331c:	1ac2      	subs	r2, r0, r3
 802331e:	bf1c      	itt	ne
 8023320:	1a1b      	subne	r3, r3, r0
 8023322:	50a3      	strne	r3, [r4, r2]
 8023324:	e7af      	b.n	8023286 <_malloc_r+0x22>
 8023326:	6862      	ldr	r2, [r4, #4]
 8023328:	42a3      	cmp	r3, r4
 802332a:	bf0c      	ite	eq
 802332c:	f8c8 2000 	streq.w	r2, [r8]
 8023330:	605a      	strne	r2, [r3, #4]
 8023332:	e7eb      	b.n	802330c <_malloc_r+0xa8>
 8023334:	4623      	mov	r3, r4
 8023336:	6864      	ldr	r4, [r4, #4]
 8023338:	e7ae      	b.n	8023298 <_malloc_r+0x34>
 802333a:	463c      	mov	r4, r7
 802333c:	687f      	ldr	r7, [r7, #4]
 802333e:	e7b6      	b.n	80232ae <_malloc_r+0x4a>
 8023340:	461a      	mov	r2, r3
 8023342:	685b      	ldr	r3, [r3, #4]
 8023344:	42a3      	cmp	r3, r4
 8023346:	d1fb      	bne.n	8023340 <_malloc_r+0xdc>
 8023348:	2300      	movs	r3, #0
 802334a:	6053      	str	r3, [r2, #4]
 802334c:	e7de      	b.n	802330c <_malloc_r+0xa8>
 802334e:	230c      	movs	r3, #12
 8023350:	6033      	str	r3, [r6, #0]
 8023352:	4630      	mov	r0, r6
 8023354:	f000 f80c 	bl	8023370 <__malloc_unlock>
 8023358:	e794      	b.n	8023284 <_malloc_r+0x20>
 802335a:	6005      	str	r5, [r0, #0]
 802335c:	e7d6      	b.n	802330c <_malloc_r+0xa8>
 802335e:	bf00      	nop
 8023360:	2000d580 	.word	0x2000d580

08023364 <__malloc_lock>:
 8023364:	4801      	ldr	r0, [pc, #4]	@ (802336c <__malloc_lock+0x8>)
 8023366:	f001 ba8e 	b.w	8024886 <__retarget_lock_acquire_recursive>
 802336a:	bf00      	nop
 802336c:	2000d6c5 	.word	0x2000d6c5

08023370 <__malloc_unlock>:
 8023370:	4801      	ldr	r0, [pc, #4]	@ (8023378 <__malloc_unlock+0x8>)
 8023372:	f001 ba89 	b.w	8024888 <__retarget_lock_release_recursive>
 8023376:	bf00      	nop
 8023378:	2000d6c5 	.word	0x2000d6c5

0802337c <_strtoul_l.isra.0>:
 802337c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023380:	4e34      	ldr	r6, [pc, #208]	@ (8023454 <_strtoul_l.isra.0+0xd8>)
 8023382:	4686      	mov	lr, r0
 8023384:	460d      	mov	r5, r1
 8023386:	4628      	mov	r0, r5
 8023388:	f815 4b01 	ldrb.w	r4, [r5], #1
 802338c:	5d37      	ldrb	r7, [r6, r4]
 802338e:	f017 0708 	ands.w	r7, r7, #8
 8023392:	d1f8      	bne.n	8023386 <_strtoul_l.isra.0+0xa>
 8023394:	2c2d      	cmp	r4, #45	@ 0x2d
 8023396:	d110      	bne.n	80233ba <_strtoul_l.isra.0+0x3e>
 8023398:	782c      	ldrb	r4, [r5, #0]
 802339a:	2701      	movs	r7, #1
 802339c:	1c85      	adds	r5, r0, #2
 802339e:	f033 0010 	bics.w	r0, r3, #16
 80233a2:	d115      	bne.n	80233d0 <_strtoul_l.isra.0+0x54>
 80233a4:	2c30      	cmp	r4, #48	@ 0x30
 80233a6:	d10d      	bne.n	80233c4 <_strtoul_l.isra.0+0x48>
 80233a8:	7828      	ldrb	r0, [r5, #0]
 80233aa:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
 80233ae:	2858      	cmp	r0, #88	@ 0x58
 80233b0:	d108      	bne.n	80233c4 <_strtoul_l.isra.0+0x48>
 80233b2:	786c      	ldrb	r4, [r5, #1]
 80233b4:	3502      	adds	r5, #2
 80233b6:	2310      	movs	r3, #16
 80233b8:	e00a      	b.n	80233d0 <_strtoul_l.isra.0+0x54>
 80233ba:	2c2b      	cmp	r4, #43	@ 0x2b
 80233bc:	bf04      	itt	eq
 80233be:	782c      	ldrbeq	r4, [r5, #0]
 80233c0:	1c85      	addeq	r5, r0, #2
 80233c2:	e7ec      	b.n	802339e <_strtoul_l.isra.0+0x22>
 80233c4:	2b00      	cmp	r3, #0
 80233c6:	d1f6      	bne.n	80233b6 <_strtoul_l.isra.0+0x3a>
 80233c8:	2c30      	cmp	r4, #48	@ 0x30
 80233ca:	bf14      	ite	ne
 80233cc:	230a      	movne	r3, #10
 80233ce:	2308      	moveq	r3, #8
 80233d0:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 80233d4:	2600      	movs	r6, #0
 80233d6:	fbb8 f8f3 	udiv	r8, r8, r3
 80233da:	fb03 f908 	mul.w	r9, r3, r8
 80233de:	ea6f 0909 	mvn.w	r9, r9
 80233e2:	4630      	mov	r0, r6
 80233e4:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 80233e8:	f1bc 0f09 	cmp.w	ip, #9
 80233ec:	d810      	bhi.n	8023410 <_strtoul_l.isra.0+0x94>
 80233ee:	4664      	mov	r4, ip
 80233f0:	42a3      	cmp	r3, r4
 80233f2:	dd1e      	ble.n	8023432 <_strtoul_l.isra.0+0xb6>
 80233f4:	f1b6 3fff 	cmp.w	r6, #4294967295	@ 0xffffffff
 80233f8:	d007      	beq.n	802340a <_strtoul_l.isra.0+0x8e>
 80233fa:	4580      	cmp	r8, r0
 80233fc:	d316      	bcc.n	802342c <_strtoul_l.isra.0+0xb0>
 80233fe:	d101      	bne.n	8023404 <_strtoul_l.isra.0+0x88>
 8023400:	45a1      	cmp	r9, r4
 8023402:	db13      	blt.n	802342c <_strtoul_l.isra.0+0xb0>
 8023404:	fb00 4003 	mla	r0, r0, r3, r4
 8023408:	2601      	movs	r6, #1
 802340a:	f815 4b01 	ldrb.w	r4, [r5], #1
 802340e:	e7e9      	b.n	80233e4 <_strtoul_l.isra.0+0x68>
 8023410:	f1a4 0c41 	sub.w	ip, r4, #65	@ 0x41
 8023414:	f1bc 0f19 	cmp.w	ip, #25
 8023418:	d801      	bhi.n	802341e <_strtoul_l.isra.0+0xa2>
 802341a:	3c37      	subs	r4, #55	@ 0x37
 802341c:	e7e8      	b.n	80233f0 <_strtoul_l.isra.0+0x74>
 802341e:	f1a4 0c61 	sub.w	ip, r4, #97	@ 0x61
 8023422:	f1bc 0f19 	cmp.w	ip, #25
 8023426:	d804      	bhi.n	8023432 <_strtoul_l.isra.0+0xb6>
 8023428:	3c57      	subs	r4, #87	@ 0x57
 802342a:	e7e1      	b.n	80233f0 <_strtoul_l.isra.0+0x74>
 802342c:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
 8023430:	e7eb      	b.n	802340a <_strtoul_l.isra.0+0x8e>
 8023432:	1c73      	adds	r3, r6, #1
 8023434:	d106      	bne.n	8023444 <_strtoul_l.isra.0+0xc8>
 8023436:	2322      	movs	r3, #34	@ 0x22
 8023438:	f8ce 3000 	str.w	r3, [lr]
 802343c:	4630      	mov	r0, r6
 802343e:	b932      	cbnz	r2, 802344e <_strtoul_l.isra.0+0xd2>
 8023440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023444:	b107      	cbz	r7, 8023448 <_strtoul_l.isra.0+0xcc>
 8023446:	4240      	negs	r0, r0
 8023448:	2a00      	cmp	r2, #0
 802344a:	d0f9      	beq.n	8023440 <_strtoul_l.isra.0+0xc4>
 802344c:	b106      	cbz	r6, 8023450 <_strtoul_l.isra.0+0xd4>
 802344e:	1e69      	subs	r1, r5, #1
 8023450:	6011      	str	r1, [r2, #0]
 8023452:	e7f5      	b.n	8023440 <_strtoul_l.isra.0+0xc4>
 8023454:	0803791d 	.word	0x0803791d

08023458 <_strtoul_r>:
 8023458:	f7ff bf90 	b.w	802337c <_strtoul_l.isra.0>

0802345c <strtoul>:
 802345c:	4613      	mov	r3, r2
 802345e:	460a      	mov	r2, r1
 8023460:	4601      	mov	r1, r0
 8023462:	4802      	ldr	r0, [pc, #8]	@ (802346c <strtoul+0x10>)
 8023464:	6800      	ldr	r0, [r0, #0]
 8023466:	f7ff bf89 	b.w	802337c <_strtoul_l.isra.0>
 802346a:	bf00      	nop
 802346c:	20000438 	.word	0x20000438

08023470 <__cvt>:
 8023470:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023474:	ec57 6b10 	vmov	r6, r7, d0
 8023478:	2f00      	cmp	r7, #0
 802347a:	460c      	mov	r4, r1
 802347c:	4619      	mov	r1, r3
 802347e:	463b      	mov	r3, r7
 8023480:	bfbb      	ittet	lt
 8023482:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8023486:	461f      	movlt	r7, r3
 8023488:	2300      	movge	r3, #0
 802348a:	232d      	movlt	r3, #45	@ 0x2d
 802348c:	700b      	strb	r3, [r1, #0]
 802348e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023490:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8023494:	4691      	mov	r9, r2
 8023496:	f023 0820 	bic.w	r8, r3, #32
 802349a:	bfbc      	itt	lt
 802349c:	4632      	movlt	r2, r6
 802349e:	4616      	movlt	r6, r2
 80234a0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80234a4:	d005      	beq.n	80234b2 <__cvt+0x42>
 80234a6:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80234aa:	d100      	bne.n	80234ae <__cvt+0x3e>
 80234ac:	3401      	adds	r4, #1
 80234ae:	2102      	movs	r1, #2
 80234b0:	e000      	b.n	80234b4 <__cvt+0x44>
 80234b2:	2103      	movs	r1, #3
 80234b4:	ab03      	add	r3, sp, #12
 80234b6:	9301      	str	r3, [sp, #4]
 80234b8:	ab02      	add	r3, sp, #8
 80234ba:	9300      	str	r3, [sp, #0]
 80234bc:	ec47 6b10 	vmov	d0, r6, r7
 80234c0:	4653      	mov	r3, sl
 80234c2:	4622      	mov	r2, r4
 80234c4:	f001 fa80 	bl	80249c8 <_dtoa_r>
 80234c8:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 80234cc:	4605      	mov	r5, r0
 80234ce:	d119      	bne.n	8023504 <__cvt+0x94>
 80234d0:	f019 0f01 	tst.w	r9, #1
 80234d4:	d00e      	beq.n	80234f4 <__cvt+0x84>
 80234d6:	eb00 0904 	add.w	r9, r0, r4
 80234da:	2200      	movs	r2, #0
 80234dc:	2300      	movs	r3, #0
 80234de:	4630      	mov	r0, r6
 80234e0:	4639      	mov	r1, r7
 80234e2:	f7dd fae1 	bl	8000aa8 <__aeabi_dcmpeq>
 80234e6:	b108      	cbz	r0, 80234ec <__cvt+0x7c>
 80234e8:	f8cd 900c 	str.w	r9, [sp, #12]
 80234ec:	2230      	movs	r2, #48	@ 0x30
 80234ee:	9b03      	ldr	r3, [sp, #12]
 80234f0:	454b      	cmp	r3, r9
 80234f2:	d31e      	bcc.n	8023532 <__cvt+0xc2>
 80234f4:	9b03      	ldr	r3, [sp, #12]
 80234f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80234f8:	1b5b      	subs	r3, r3, r5
 80234fa:	4628      	mov	r0, r5
 80234fc:	6013      	str	r3, [r2, #0]
 80234fe:	b004      	add	sp, #16
 8023500:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023504:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8023508:	eb00 0904 	add.w	r9, r0, r4
 802350c:	d1e5      	bne.n	80234da <__cvt+0x6a>
 802350e:	7803      	ldrb	r3, [r0, #0]
 8023510:	2b30      	cmp	r3, #48	@ 0x30
 8023512:	d10a      	bne.n	802352a <__cvt+0xba>
 8023514:	2200      	movs	r2, #0
 8023516:	2300      	movs	r3, #0
 8023518:	4630      	mov	r0, r6
 802351a:	4639      	mov	r1, r7
 802351c:	f7dd fac4 	bl	8000aa8 <__aeabi_dcmpeq>
 8023520:	b918      	cbnz	r0, 802352a <__cvt+0xba>
 8023522:	f1c4 0401 	rsb	r4, r4, #1
 8023526:	f8ca 4000 	str.w	r4, [sl]
 802352a:	f8da 3000 	ldr.w	r3, [sl]
 802352e:	4499      	add	r9, r3
 8023530:	e7d3      	b.n	80234da <__cvt+0x6a>
 8023532:	1c59      	adds	r1, r3, #1
 8023534:	9103      	str	r1, [sp, #12]
 8023536:	701a      	strb	r2, [r3, #0]
 8023538:	e7d9      	b.n	80234ee <__cvt+0x7e>

0802353a <__exponent>:
 802353a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802353c:	2900      	cmp	r1, #0
 802353e:	bfba      	itte	lt
 8023540:	4249      	neglt	r1, r1
 8023542:	232d      	movlt	r3, #45	@ 0x2d
 8023544:	232b      	movge	r3, #43	@ 0x2b
 8023546:	2909      	cmp	r1, #9
 8023548:	7002      	strb	r2, [r0, #0]
 802354a:	7043      	strb	r3, [r0, #1]
 802354c:	dd29      	ble.n	80235a2 <__exponent+0x68>
 802354e:	f10d 0407 	add.w	r4, sp, #7
 8023552:	4625      	mov	r5, r4
 8023554:	270a      	movs	r7, #10
 8023556:	4622      	mov	r2, r4
 8023558:	fbb1 f6f7 	udiv	r6, r1, r7
 802355c:	fb07 1316 	mls	r3, r7, r6, r1
 8023560:	3330      	adds	r3, #48	@ 0x30
 8023562:	f802 3c01 	strb.w	r3, [r2, #-1]
 8023566:	460b      	mov	r3, r1
 8023568:	2b63      	cmp	r3, #99	@ 0x63
 802356a:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
 802356e:	4631      	mov	r1, r6
 8023570:	dcf1      	bgt.n	8023556 <__exponent+0x1c>
 8023572:	3130      	adds	r1, #48	@ 0x30
 8023574:	1e93      	subs	r3, r2, #2
 8023576:	f804 1c01 	strb.w	r1, [r4, #-1]
 802357a:	1c41      	adds	r1, r0, #1
 802357c:	461c      	mov	r4, r3
 802357e:	42ab      	cmp	r3, r5
 8023580:	d30a      	bcc.n	8023598 <__exponent+0x5e>
 8023582:	f10d 0309 	add.w	r3, sp, #9
 8023586:	1a9b      	subs	r3, r3, r2
 8023588:	42a5      	cmp	r5, r4
 802358a:	bf38      	it	cc
 802358c:	2300      	movcc	r3, #0
 802358e:	1c82      	adds	r2, r0, #2
 8023590:	4413      	add	r3, r2
 8023592:	1a18      	subs	r0, r3, r0
 8023594:	b003      	add	sp, #12
 8023596:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023598:	f813 6b01 	ldrb.w	r6, [r3], #1
 802359c:	f801 6f01 	strb.w	r6, [r1, #1]!
 80235a0:	e7ed      	b.n	802357e <__exponent+0x44>
 80235a2:	2330      	movs	r3, #48	@ 0x30
 80235a4:	3130      	adds	r1, #48	@ 0x30
 80235a6:	7083      	strb	r3, [r0, #2]
 80235a8:	70c1      	strb	r1, [r0, #3]
 80235aa:	1d03      	adds	r3, r0, #4
 80235ac:	e7f1      	b.n	8023592 <__exponent+0x58>
	...

080235b0 <_printf_float>:
 80235b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235b4:	b08d      	sub	sp, #52	@ 0x34
 80235b6:	460c      	mov	r4, r1
 80235b8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80235bc:	4616      	mov	r6, r2
 80235be:	461f      	mov	r7, r3
 80235c0:	4605      	mov	r5, r0
 80235c2:	f001 f8c7 	bl	8024754 <_localeconv_r>
 80235c6:	6803      	ldr	r3, [r0, #0]
 80235c8:	9306      	str	r3, [sp, #24]
 80235ca:	4618      	mov	r0, r3
 80235cc:	f7dc fe40 	bl	8000250 <strlen>
 80235d0:	2300      	movs	r3, #0
 80235d2:	930a      	str	r3, [sp, #40]	@ 0x28
 80235d4:	f8d8 3000 	ldr.w	r3, [r8]
 80235d8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80235dc:	f8d4 b000 	ldr.w	fp, [r4]
 80235e0:	9007      	str	r0, [sp, #28]
 80235e2:	3307      	adds	r3, #7
 80235e4:	f023 0307 	bic.w	r3, r3, #7
 80235e8:	ecb3 7b02 	vldmia	r3!, {d7}
 80235ec:	ed8d 7b04 	vstr	d7, [sp, #16]
 80235f0:	f8c8 3000 	str.w	r3, [r8]
 80235f4:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
 80235f8:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 80235fc:	ed84 7b12 	vstr	d7, [r4, #72]	@ 0x48
 8023600:	4b9c      	ldr	r3, [pc, #624]	@ (8023874 <_printf_float+0x2c4>)
 8023602:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8023606:	4640      	mov	r0, r8
 8023608:	4649      	mov	r1, r9
 802360a:	f7dd fa7f 	bl	8000b0c <__aeabi_dcmpun>
 802360e:	bb70      	cbnz	r0, 802366e <_printf_float+0xbe>
 8023610:	4b98      	ldr	r3, [pc, #608]	@ (8023874 <_printf_float+0x2c4>)
 8023612:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8023616:	4640      	mov	r0, r8
 8023618:	4649      	mov	r1, r9
 802361a:	f7dd fa59 	bl	8000ad0 <__aeabi_dcmple>
 802361e:	bb30      	cbnz	r0, 802366e <_printf_float+0xbe>
 8023620:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8023624:	2200      	movs	r2, #0
 8023626:	2300      	movs	r3, #0
 8023628:	f7dd fa48 	bl	8000abc <__aeabi_dcmplt>
 802362c:	b110      	cbz	r0, 8023634 <_printf_float+0x84>
 802362e:	232d      	movs	r3, #45	@ 0x2d
 8023630:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023634:	4a90      	ldr	r2, [pc, #576]	@ (8023878 <_printf_float+0x2c8>)
 8023636:	4b91      	ldr	r3, [pc, #580]	@ (802387c <_printf_float+0x2cc>)
 8023638:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 802363c:	bf8c      	ite	hi
 802363e:	4690      	movhi	r8, r2
 8023640:	4698      	movls	r8, r3
 8023642:	2303      	movs	r3, #3
 8023644:	6123      	str	r3, [r4, #16]
 8023646:	f02b 0304 	bic.w	r3, fp, #4
 802364a:	6023      	str	r3, [r4, #0]
 802364c:	f04f 0900 	mov.w	r9, #0
 8023650:	9700      	str	r7, [sp, #0]
 8023652:	4633      	mov	r3, r6
 8023654:	aa0b      	add	r2, sp, #44	@ 0x2c
 8023656:	4621      	mov	r1, r4
 8023658:	4628      	mov	r0, r5
 802365a:	f000 f9d1 	bl	8023a00 <_printf_common>
 802365e:	3001      	adds	r0, #1
 8023660:	f040 808c 	bne.w	802377c <_printf_float+0x1cc>
 8023664:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8023668:	b00d      	add	sp, #52	@ 0x34
 802366a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802366e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023672:	4610      	mov	r0, r2
 8023674:	4619      	mov	r1, r3
 8023676:	f7dd fa49 	bl	8000b0c <__aeabi_dcmpun>
 802367a:	b140      	cbz	r0, 802368e <_printf_float+0xde>
 802367c:	9b05      	ldr	r3, [sp, #20]
 802367e:	4a80      	ldr	r2, [pc, #512]	@ (8023880 <_printf_float+0x2d0>)
 8023680:	2b00      	cmp	r3, #0
 8023682:	bfbc      	itt	lt
 8023684:	232d      	movlt	r3, #45	@ 0x2d
 8023686:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 802368a:	4b7e      	ldr	r3, [pc, #504]	@ (8023884 <_printf_float+0x2d4>)
 802368c:	e7d4      	b.n	8023638 <_printf_float+0x88>
 802368e:	6863      	ldr	r3, [r4, #4]
 8023690:	1c5a      	adds	r2, r3, #1
 8023692:	f00a 09df 	and.w	r9, sl, #223	@ 0xdf
 8023696:	d13b      	bne.n	8023710 <_printf_float+0x160>
 8023698:	2306      	movs	r3, #6
 802369a:	6063      	str	r3, [r4, #4]
 802369c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80236a0:	2300      	movs	r3, #0
 80236a2:	6022      	str	r2, [r4, #0]
 80236a4:	9303      	str	r3, [sp, #12]
 80236a6:	ab0a      	add	r3, sp, #40	@ 0x28
 80236a8:	e9cd a301 	strd	sl, r3, [sp, #4]
 80236ac:	ab09      	add	r3, sp, #36	@ 0x24
 80236ae:	9300      	str	r3, [sp, #0]
 80236b0:	6861      	ldr	r1, [r4, #4]
 80236b2:	ed9d 0b04 	vldr	d0, [sp, #16]
 80236b6:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80236ba:	4628      	mov	r0, r5
 80236bc:	f7ff fed8 	bl	8023470 <__cvt>
 80236c0:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 80236c4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80236c6:	4680      	mov	r8, r0
 80236c8:	d129      	bne.n	802371e <_printf_float+0x16e>
 80236ca:	1cc8      	adds	r0, r1, #3
 80236cc:	db02      	blt.n	80236d4 <_printf_float+0x124>
 80236ce:	6863      	ldr	r3, [r4, #4]
 80236d0:	428b      	cmp	r3, r1
 80236d2:	da41      	bge.n	8023758 <_printf_float+0x1a8>
 80236d4:	f1aa 0a02 	sub.w	sl, sl, #2
 80236d8:	fa5f fa8a 	uxtb.w	sl, sl
 80236dc:	3901      	subs	r1, #1
 80236de:	4652      	mov	r2, sl
 80236e0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80236e4:	9109      	str	r1, [sp, #36]	@ 0x24
 80236e6:	f7ff ff28 	bl	802353a <__exponent>
 80236ea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80236ec:	1813      	adds	r3, r2, r0
 80236ee:	2a01      	cmp	r2, #1
 80236f0:	4681      	mov	r9, r0
 80236f2:	6123      	str	r3, [r4, #16]
 80236f4:	dc02      	bgt.n	80236fc <_printf_float+0x14c>
 80236f6:	6822      	ldr	r2, [r4, #0]
 80236f8:	07d2      	lsls	r2, r2, #31
 80236fa:	d501      	bpl.n	8023700 <_printf_float+0x150>
 80236fc:	3301      	adds	r3, #1
 80236fe:	6123      	str	r3, [r4, #16]
 8023700:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8023704:	2b00      	cmp	r3, #0
 8023706:	d0a3      	beq.n	8023650 <_printf_float+0xa0>
 8023708:	232d      	movs	r3, #45	@ 0x2d
 802370a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802370e:	e79f      	b.n	8023650 <_printf_float+0xa0>
 8023710:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 8023714:	d1c2      	bne.n	802369c <_printf_float+0xec>
 8023716:	2b00      	cmp	r3, #0
 8023718:	d1c0      	bne.n	802369c <_printf_float+0xec>
 802371a:	2301      	movs	r3, #1
 802371c:	e7bd      	b.n	802369a <_printf_float+0xea>
 802371e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8023722:	d9db      	bls.n	80236dc <_printf_float+0x12c>
 8023724:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8023728:	d118      	bne.n	802375c <_printf_float+0x1ac>
 802372a:	2900      	cmp	r1, #0
 802372c:	6863      	ldr	r3, [r4, #4]
 802372e:	dd0b      	ble.n	8023748 <_printf_float+0x198>
 8023730:	6121      	str	r1, [r4, #16]
 8023732:	b913      	cbnz	r3, 802373a <_printf_float+0x18a>
 8023734:	6822      	ldr	r2, [r4, #0]
 8023736:	07d0      	lsls	r0, r2, #31
 8023738:	d502      	bpl.n	8023740 <_printf_float+0x190>
 802373a:	3301      	adds	r3, #1
 802373c:	440b      	add	r3, r1
 802373e:	6123      	str	r3, [r4, #16]
 8023740:	65a1      	str	r1, [r4, #88]	@ 0x58
 8023742:	f04f 0900 	mov.w	r9, #0
 8023746:	e7db      	b.n	8023700 <_printf_float+0x150>
 8023748:	b913      	cbnz	r3, 8023750 <_printf_float+0x1a0>
 802374a:	6822      	ldr	r2, [r4, #0]
 802374c:	07d2      	lsls	r2, r2, #31
 802374e:	d501      	bpl.n	8023754 <_printf_float+0x1a4>
 8023750:	3302      	adds	r3, #2
 8023752:	e7f4      	b.n	802373e <_printf_float+0x18e>
 8023754:	2301      	movs	r3, #1
 8023756:	e7f2      	b.n	802373e <_printf_float+0x18e>
 8023758:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 802375c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802375e:	428b      	cmp	r3, r1
 8023760:	dc05      	bgt.n	802376e <_printf_float+0x1be>
 8023762:	6823      	ldr	r3, [r4, #0]
 8023764:	6121      	str	r1, [r4, #16]
 8023766:	07d8      	lsls	r0, r3, #31
 8023768:	d5ea      	bpl.n	8023740 <_printf_float+0x190>
 802376a:	1c4b      	adds	r3, r1, #1
 802376c:	e7e7      	b.n	802373e <_printf_float+0x18e>
 802376e:	2900      	cmp	r1, #0
 8023770:	bfd4      	ite	le
 8023772:	f1c1 0202 	rsble	r2, r1, #2
 8023776:	2201      	movgt	r2, #1
 8023778:	4413      	add	r3, r2
 802377a:	e7e0      	b.n	802373e <_printf_float+0x18e>
 802377c:	6823      	ldr	r3, [r4, #0]
 802377e:	055a      	lsls	r2, r3, #21
 8023780:	d407      	bmi.n	8023792 <_printf_float+0x1e2>
 8023782:	6923      	ldr	r3, [r4, #16]
 8023784:	4642      	mov	r2, r8
 8023786:	4631      	mov	r1, r6
 8023788:	4628      	mov	r0, r5
 802378a:	47b8      	blx	r7
 802378c:	3001      	adds	r0, #1
 802378e:	d12b      	bne.n	80237e8 <_printf_float+0x238>
 8023790:	e768      	b.n	8023664 <_printf_float+0xb4>
 8023792:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8023796:	f240 80dd 	bls.w	8023954 <_printf_float+0x3a4>
 802379a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 802379e:	2200      	movs	r2, #0
 80237a0:	2300      	movs	r3, #0
 80237a2:	f7dd f981 	bl	8000aa8 <__aeabi_dcmpeq>
 80237a6:	2800      	cmp	r0, #0
 80237a8:	d033      	beq.n	8023812 <_printf_float+0x262>
 80237aa:	4a37      	ldr	r2, [pc, #220]	@ (8023888 <_printf_float+0x2d8>)
 80237ac:	2301      	movs	r3, #1
 80237ae:	4631      	mov	r1, r6
 80237b0:	4628      	mov	r0, r5
 80237b2:	47b8      	blx	r7
 80237b4:	3001      	adds	r0, #1
 80237b6:	f43f af55 	beq.w	8023664 <_printf_float+0xb4>
 80237ba:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80237be:	4543      	cmp	r3, r8
 80237c0:	db02      	blt.n	80237c8 <_printf_float+0x218>
 80237c2:	6823      	ldr	r3, [r4, #0]
 80237c4:	07d8      	lsls	r0, r3, #31
 80237c6:	d50f      	bpl.n	80237e8 <_printf_float+0x238>
 80237c8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80237cc:	4631      	mov	r1, r6
 80237ce:	4628      	mov	r0, r5
 80237d0:	47b8      	blx	r7
 80237d2:	3001      	adds	r0, #1
 80237d4:	f43f af46 	beq.w	8023664 <_printf_float+0xb4>
 80237d8:	f04f 0900 	mov.w	r9, #0
 80237dc:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 80237e0:	f104 0a1a 	add.w	sl, r4, #26
 80237e4:	45c8      	cmp	r8, r9
 80237e6:	dc09      	bgt.n	80237fc <_printf_float+0x24c>
 80237e8:	6823      	ldr	r3, [r4, #0]
 80237ea:	079b      	lsls	r3, r3, #30
 80237ec:	f100 8103 	bmi.w	80239f6 <_printf_float+0x446>
 80237f0:	68e0      	ldr	r0, [r4, #12]
 80237f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80237f4:	4298      	cmp	r0, r3
 80237f6:	bfb8      	it	lt
 80237f8:	4618      	movlt	r0, r3
 80237fa:	e735      	b.n	8023668 <_printf_float+0xb8>
 80237fc:	2301      	movs	r3, #1
 80237fe:	4652      	mov	r2, sl
 8023800:	4631      	mov	r1, r6
 8023802:	4628      	mov	r0, r5
 8023804:	47b8      	blx	r7
 8023806:	3001      	adds	r0, #1
 8023808:	f43f af2c 	beq.w	8023664 <_printf_float+0xb4>
 802380c:	f109 0901 	add.w	r9, r9, #1
 8023810:	e7e8      	b.n	80237e4 <_printf_float+0x234>
 8023812:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023814:	2b00      	cmp	r3, #0
 8023816:	dc39      	bgt.n	802388c <_printf_float+0x2dc>
 8023818:	4a1b      	ldr	r2, [pc, #108]	@ (8023888 <_printf_float+0x2d8>)
 802381a:	2301      	movs	r3, #1
 802381c:	4631      	mov	r1, r6
 802381e:	4628      	mov	r0, r5
 8023820:	47b8      	blx	r7
 8023822:	3001      	adds	r0, #1
 8023824:	f43f af1e 	beq.w	8023664 <_printf_float+0xb4>
 8023828:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 802382c:	ea59 0303 	orrs.w	r3, r9, r3
 8023830:	d102      	bne.n	8023838 <_printf_float+0x288>
 8023832:	6823      	ldr	r3, [r4, #0]
 8023834:	07d9      	lsls	r1, r3, #31
 8023836:	d5d7      	bpl.n	80237e8 <_printf_float+0x238>
 8023838:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802383c:	4631      	mov	r1, r6
 802383e:	4628      	mov	r0, r5
 8023840:	47b8      	blx	r7
 8023842:	3001      	adds	r0, #1
 8023844:	f43f af0e 	beq.w	8023664 <_printf_float+0xb4>
 8023848:	f04f 0a00 	mov.w	sl, #0
 802384c:	f104 0b1a 	add.w	fp, r4, #26
 8023850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023852:	425b      	negs	r3, r3
 8023854:	4553      	cmp	r3, sl
 8023856:	dc01      	bgt.n	802385c <_printf_float+0x2ac>
 8023858:	464b      	mov	r3, r9
 802385a:	e793      	b.n	8023784 <_printf_float+0x1d4>
 802385c:	2301      	movs	r3, #1
 802385e:	465a      	mov	r2, fp
 8023860:	4631      	mov	r1, r6
 8023862:	4628      	mov	r0, r5
 8023864:	47b8      	blx	r7
 8023866:	3001      	adds	r0, #1
 8023868:	f43f aefc 	beq.w	8023664 <_printf_float+0xb4>
 802386c:	f10a 0a01 	add.w	sl, sl, #1
 8023870:	e7ee      	b.n	8023850 <_printf_float+0x2a0>
 8023872:	bf00      	nop
 8023874:	7fefffff 	.word	0x7fefffff
 8023878:	0802b115 	.word	0x0802b115
 802387c:	0802b111 	.word	0x0802b111
 8023880:	0802b11d 	.word	0x0802b11d
 8023884:	0802b119 	.word	0x0802b119
 8023888:	0802b259 	.word	0x0802b259
 802388c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802388e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8023892:	4553      	cmp	r3, sl
 8023894:	bfa8      	it	ge
 8023896:	4653      	movge	r3, sl
 8023898:	2b00      	cmp	r3, #0
 802389a:	4699      	mov	r9, r3
 802389c:	dc36      	bgt.n	802390c <_printf_float+0x35c>
 802389e:	f04f 0b00 	mov.w	fp, #0
 80238a2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80238a6:	f104 021a 	add.w	r2, r4, #26
 80238aa:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80238ac:	9304      	str	r3, [sp, #16]
 80238ae:	eba3 0309 	sub.w	r3, r3, r9
 80238b2:	455b      	cmp	r3, fp
 80238b4:	dc31      	bgt.n	802391a <_printf_float+0x36a>
 80238b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80238b8:	459a      	cmp	sl, r3
 80238ba:	dc3a      	bgt.n	8023932 <_printf_float+0x382>
 80238bc:	6823      	ldr	r3, [r4, #0]
 80238be:	07da      	lsls	r2, r3, #31
 80238c0:	d437      	bmi.n	8023932 <_printf_float+0x382>
 80238c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80238c4:	ebaa 0903 	sub.w	r9, sl, r3
 80238c8:	9b04      	ldr	r3, [sp, #16]
 80238ca:	ebaa 0303 	sub.w	r3, sl, r3
 80238ce:	4599      	cmp	r9, r3
 80238d0:	bfa8      	it	ge
 80238d2:	4699      	movge	r9, r3
 80238d4:	f1b9 0f00 	cmp.w	r9, #0
 80238d8:	dc33      	bgt.n	8023942 <_printf_float+0x392>
 80238da:	f04f 0800 	mov.w	r8, #0
 80238de:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80238e2:	f104 0b1a 	add.w	fp, r4, #26
 80238e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80238e8:	ebaa 0303 	sub.w	r3, sl, r3
 80238ec:	eba3 0309 	sub.w	r3, r3, r9
 80238f0:	4543      	cmp	r3, r8
 80238f2:	f77f af79 	ble.w	80237e8 <_printf_float+0x238>
 80238f6:	2301      	movs	r3, #1
 80238f8:	465a      	mov	r2, fp
 80238fa:	4631      	mov	r1, r6
 80238fc:	4628      	mov	r0, r5
 80238fe:	47b8      	blx	r7
 8023900:	3001      	adds	r0, #1
 8023902:	f43f aeaf 	beq.w	8023664 <_printf_float+0xb4>
 8023906:	f108 0801 	add.w	r8, r8, #1
 802390a:	e7ec      	b.n	80238e6 <_printf_float+0x336>
 802390c:	4642      	mov	r2, r8
 802390e:	4631      	mov	r1, r6
 8023910:	4628      	mov	r0, r5
 8023912:	47b8      	blx	r7
 8023914:	3001      	adds	r0, #1
 8023916:	d1c2      	bne.n	802389e <_printf_float+0x2ee>
 8023918:	e6a4      	b.n	8023664 <_printf_float+0xb4>
 802391a:	2301      	movs	r3, #1
 802391c:	4631      	mov	r1, r6
 802391e:	4628      	mov	r0, r5
 8023920:	9204      	str	r2, [sp, #16]
 8023922:	47b8      	blx	r7
 8023924:	3001      	adds	r0, #1
 8023926:	f43f ae9d 	beq.w	8023664 <_printf_float+0xb4>
 802392a:	9a04      	ldr	r2, [sp, #16]
 802392c:	f10b 0b01 	add.w	fp, fp, #1
 8023930:	e7bb      	b.n	80238aa <_printf_float+0x2fa>
 8023932:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023936:	4631      	mov	r1, r6
 8023938:	4628      	mov	r0, r5
 802393a:	47b8      	blx	r7
 802393c:	3001      	adds	r0, #1
 802393e:	d1c0      	bne.n	80238c2 <_printf_float+0x312>
 8023940:	e690      	b.n	8023664 <_printf_float+0xb4>
 8023942:	9a04      	ldr	r2, [sp, #16]
 8023944:	464b      	mov	r3, r9
 8023946:	4442      	add	r2, r8
 8023948:	4631      	mov	r1, r6
 802394a:	4628      	mov	r0, r5
 802394c:	47b8      	blx	r7
 802394e:	3001      	adds	r0, #1
 8023950:	d1c3      	bne.n	80238da <_printf_float+0x32a>
 8023952:	e687      	b.n	8023664 <_printf_float+0xb4>
 8023954:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8023958:	f1ba 0f01 	cmp.w	sl, #1
 802395c:	dc01      	bgt.n	8023962 <_printf_float+0x3b2>
 802395e:	07db      	lsls	r3, r3, #31
 8023960:	d536      	bpl.n	80239d0 <_printf_float+0x420>
 8023962:	2301      	movs	r3, #1
 8023964:	4642      	mov	r2, r8
 8023966:	4631      	mov	r1, r6
 8023968:	4628      	mov	r0, r5
 802396a:	47b8      	blx	r7
 802396c:	3001      	adds	r0, #1
 802396e:	f43f ae79 	beq.w	8023664 <_printf_float+0xb4>
 8023972:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023976:	4631      	mov	r1, r6
 8023978:	4628      	mov	r0, r5
 802397a:	47b8      	blx	r7
 802397c:	3001      	adds	r0, #1
 802397e:	f43f ae71 	beq.w	8023664 <_printf_float+0xb4>
 8023982:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8023986:	2200      	movs	r2, #0
 8023988:	2300      	movs	r3, #0
 802398a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 802398e:	f7dd f88b 	bl	8000aa8 <__aeabi_dcmpeq>
 8023992:	b9c0      	cbnz	r0, 80239c6 <_printf_float+0x416>
 8023994:	4653      	mov	r3, sl
 8023996:	f108 0201 	add.w	r2, r8, #1
 802399a:	4631      	mov	r1, r6
 802399c:	4628      	mov	r0, r5
 802399e:	47b8      	blx	r7
 80239a0:	3001      	adds	r0, #1
 80239a2:	d10c      	bne.n	80239be <_printf_float+0x40e>
 80239a4:	e65e      	b.n	8023664 <_printf_float+0xb4>
 80239a6:	2301      	movs	r3, #1
 80239a8:	465a      	mov	r2, fp
 80239aa:	4631      	mov	r1, r6
 80239ac:	4628      	mov	r0, r5
 80239ae:	47b8      	blx	r7
 80239b0:	3001      	adds	r0, #1
 80239b2:	f43f ae57 	beq.w	8023664 <_printf_float+0xb4>
 80239b6:	f108 0801 	add.w	r8, r8, #1
 80239ba:	45d0      	cmp	r8, sl
 80239bc:	dbf3      	blt.n	80239a6 <_printf_float+0x3f6>
 80239be:	464b      	mov	r3, r9
 80239c0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80239c4:	e6df      	b.n	8023786 <_printf_float+0x1d6>
 80239c6:	f04f 0800 	mov.w	r8, #0
 80239ca:	f104 0b1a 	add.w	fp, r4, #26
 80239ce:	e7f4      	b.n	80239ba <_printf_float+0x40a>
 80239d0:	2301      	movs	r3, #1
 80239d2:	4642      	mov	r2, r8
 80239d4:	e7e1      	b.n	802399a <_printf_float+0x3ea>
 80239d6:	2301      	movs	r3, #1
 80239d8:	464a      	mov	r2, r9
 80239da:	4631      	mov	r1, r6
 80239dc:	4628      	mov	r0, r5
 80239de:	47b8      	blx	r7
 80239e0:	3001      	adds	r0, #1
 80239e2:	f43f ae3f 	beq.w	8023664 <_printf_float+0xb4>
 80239e6:	f108 0801 	add.w	r8, r8, #1
 80239ea:	68e3      	ldr	r3, [r4, #12]
 80239ec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80239ee:	1a5b      	subs	r3, r3, r1
 80239f0:	4543      	cmp	r3, r8
 80239f2:	dcf0      	bgt.n	80239d6 <_printf_float+0x426>
 80239f4:	e6fc      	b.n	80237f0 <_printf_float+0x240>
 80239f6:	f04f 0800 	mov.w	r8, #0
 80239fa:	f104 0919 	add.w	r9, r4, #25
 80239fe:	e7f4      	b.n	80239ea <_printf_float+0x43a>

08023a00 <_printf_common>:
 8023a00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023a04:	4616      	mov	r6, r2
 8023a06:	4698      	mov	r8, r3
 8023a08:	688a      	ldr	r2, [r1, #8]
 8023a0a:	690b      	ldr	r3, [r1, #16]
 8023a0c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023a10:	4293      	cmp	r3, r2
 8023a12:	bfb8      	it	lt
 8023a14:	4613      	movlt	r3, r2
 8023a16:	6033      	str	r3, [r6, #0]
 8023a18:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8023a1c:	4607      	mov	r7, r0
 8023a1e:	460c      	mov	r4, r1
 8023a20:	b10a      	cbz	r2, 8023a26 <_printf_common+0x26>
 8023a22:	3301      	adds	r3, #1
 8023a24:	6033      	str	r3, [r6, #0]
 8023a26:	6823      	ldr	r3, [r4, #0]
 8023a28:	0699      	lsls	r1, r3, #26
 8023a2a:	bf42      	ittt	mi
 8023a2c:	6833      	ldrmi	r3, [r6, #0]
 8023a2e:	3302      	addmi	r3, #2
 8023a30:	6033      	strmi	r3, [r6, #0]
 8023a32:	6825      	ldr	r5, [r4, #0]
 8023a34:	f015 0506 	ands.w	r5, r5, #6
 8023a38:	d106      	bne.n	8023a48 <_printf_common+0x48>
 8023a3a:	f104 0a19 	add.w	sl, r4, #25
 8023a3e:	68e3      	ldr	r3, [r4, #12]
 8023a40:	6832      	ldr	r2, [r6, #0]
 8023a42:	1a9b      	subs	r3, r3, r2
 8023a44:	42ab      	cmp	r3, r5
 8023a46:	dc26      	bgt.n	8023a96 <_printf_common+0x96>
 8023a48:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8023a4c:	6822      	ldr	r2, [r4, #0]
 8023a4e:	3b00      	subs	r3, #0
 8023a50:	bf18      	it	ne
 8023a52:	2301      	movne	r3, #1
 8023a54:	0692      	lsls	r2, r2, #26
 8023a56:	d42b      	bmi.n	8023ab0 <_printf_common+0xb0>
 8023a58:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8023a5c:	4641      	mov	r1, r8
 8023a5e:	4638      	mov	r0, r7
 8023a60:	47c8      	blx	r9
 8023a62:	3001      	adds	r0, #1
 8023a64:	d01e      	beq.n	8023aa4 <_printf_common+0xa4>
 8023a66:	6823      	ldr	r3, [r4, #0]
 8023a68:	6922      	ldr	r2, [r4, #16]
 8023a6a:	f003 0306 	and.w	r3, r3, #6
 8023a6e:	2b04      	cmp	r3, #4
 8023a70:	bf02      	ittt	eq
 8023a72:	68e5      	ldreq	r5, [r4, #12]
 8023a74:	6833      	ldreq	r3, [r6, #0]
 8023a76:	1aed      	subeq	r5, r5, r3
 8023a78:	68a3      	ldr	r3, [r4, #8]
 8023a7a:	bf0c      	ite	eq
 8023a7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023a80:	2500      	movne	r5, #0
 8023a82:	4293      	cmp	r3, r2
 8023a84:	bfc4      	itt	gt
 8023a86:	1a9b      	subgt	r3, r3, r2
 8023a88:	18ed      	addgt	r5, r5, r3
 8023a8a:	2600      	movs	r6, #0
 8023a8c:	341a      	adds	r4, #26
 8023a8e:	42b5      	cmp	r5, r6
 8023a90:	d11a      	bne.n	8023ac8 <_printf_common+0xc8>
 8023a92:	2000      	movs	r0, #0
 8023a94:	e008      	b.n	8023aa8 <_printf_common+0xa8>
 8023a96:	2301      	movs	r3, #1
 8023a98:	4652      	mov	r2, sl
 8023a9a:	4641      	mov	r1, r8
 8023a9c:	4638      	mov	r0, r7
 8023a9e:	47c8      	blx	r9
 8023aa0:	3001      	adds	r0, #1
 8023aa2:	d103      	bne.n	8023aac <_printf_common+0xac>
 8023aa4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8023aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023aac:	3501      	adds	r5, #1
 8023aae:	e7c6      	b.n	8023a3e <_printf_common+0x3e>
 8023ab0:	18e1      	adds	r1, r4, r3
 8023ab2:	1c5a      	adds	r2, r3, #1
 8023ab4:	2030      	movs	r0, #48	@ 0x30
 8023ab6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8023aba:	4422      	add	r2, r4
 8023abc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8023ac0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023ac4:	3302      	adds	r3, #2
 8023ac6:	e7c7      	b.n	8023a58 <_printf_common+0x58>
 8023ac8:	2301      	movs	r3, #1
 8023aca:	4622      	mov	r2, r4
 8023acc:	4641      	mov	r1, r8
 8023ace:	4638      	mov	r0, r7
 8023ad0:	47c8      	blx	r9
 8023ad2:	3001      	adds	r0, #1
 8023ad4:	d0e6      	beq.n	8023aa4 <_printf_common+0xa4>
 8023ad6:	3601      	adds	r6, #1
 8023ad8:	e7d9      	b.n	8023a8e <_printf_common+0x8e>
	...

08023adc <_printf_i>:
 8023adc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023ae0:	7e0f      	ldrb	r7, [r1, #24]
 8023ae2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023ae4:	2f78      	cmp	r7, #120	@ 0x78
 8023ae6:	4691      	mov	r9, r2
 8023ae8:	4680      	mov	r8, r0
 8023aea:	460c      	mov	r4, r1
 8023aec:	469a      	mov	sl, r3
 8023aee:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8023af2:	d807      	bhi.n	8023b04 <_printf_i+0x28>
 8023af4:	2f62      	cmp	r7, #98	@ 0x62
 8023af6:	d80a      	bhi.n	8023b0e <_printf_i+0x32>
 8023af8:	2f00      	cmp	r7, #0
 8023afa:	f000 80d2 	beq.w	8023ca2 <_printf_i+0x1c6>
 8023afe:	2f58      	cmp	r7, #88	@ 0x58
 8023b00:	f000 80b7 	beq.w	8023c72 <_printf_i+0x196>
 8023b04:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023b08:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8023b0c:	e03a      	b.n	8023b84 <_printf_i+0xa8>
 8023b0e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8023b12:	2b15      	cmp	r3, #21
 8023b14:	d8f6      	bhi.n	8023b04 <_printf_i+0x28>
 8023b16:	a101      	add	r1, pc, #4	@ (adr r1, 8023b1c <_printf_i+0x40>)
 8023b18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023b1c:	08023b75 	.word	0x08023b75
 8023b20:	08023b89 	.word	0x08023b89
 8023b24:	08023b05 	.word	0x08023b05
 8023b28:	08023b05 	.word	0x08023b05
 8023b2c:	08023b05 	.word	0x08023b05
 8023b30:	08023b05 	.word	0x08023b05
 8023b34:	08023b89 	.word	0x08023b89
 8023b38:	08023b05 	.word	0x08023b05
 8023b3c:	08023b05 	.word	0x08023b05
 8023b40:	08023b05 	.word	0x08023b05
 8023b44:	08023b05 	.word	0x08023b05
 8023b48:	08023c89 	.word	0x08023c89
 8023b4c:	08023bb3 	.word	0x08023bb3
 8023b50:	08023c3f 	.word	0x08023c3f
 8023b54:	08023b05 	.word	0x08023b05
 8023b58:	08023b05 	.word	0x08023b05
 8023b5c:	08023cab 	.word	0x08023cab
 8023b60:	08023b05 	.word	0x08023b05
 8023b64:	08023bb3 	.word	0x08023bb3
 8023b68:	08023b05 	.word	0x08023b05
 8023b6c:	08023b05 	.word	0x08023b05
 8023b70:	08023c47 	.word	0x08023c47
 8023b74:	6833      	ldr	r3, [r6, #0]
 8023b76:	1d1a      	adds	r2, r3, #4
 8023b78:	681b      	ldr	r3, [r3, #0]
 8023b7a:	6032      	str	r2, [r6, #0]
 8023b7c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023b80:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8023b84:	2301      	movs	r3, #1
 8023b86:	e09d      	b.n	8023cc4 <_printf_i+0x1e8>
 8023b88:	6833      	ldr	r3, [r6, #0]
 8023b8a:	6820      	ldr	r0, [r4, #0]
 8023b8c:	1d19      	adds	r1, r3, #4
 8023b8e:	6031      	str	r1, [r6, #0]
 8023b90:	0606      	lsls	r6, r0, #24
 8023b92:	d501      	bpl.n	8023b98 <_printf_i+0xbc>
 8023b94:	681d      	ldr	r5, [r3, #0]
 8023b96:	e003      	b.n	8023ba0 <_printf_i+0xc4>
 8023b98:	0645      	lsls	r5, r0, #25
 8023b9a:	d5fb      	bpl.n	8023b94 <_printf_i+0xb8>
 8023b9c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8023ba0:	2d00      	cmp	r5, #0
 8023ba2:	da03      	bge.n	8023bac <_printf_i+0xd0>
 8023ba4:	232d      	movs	r3, #45	@ 0x2d
 8023ba6:	426d      	negs	r5, r5
 8023ba8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023bac:	4859      	ldr	r0, [pc, #356]	@ (8023d14 <_printf_i+0x238>)
 8023bae:	230a      	movs	r3, #10
 8023bb0:	e010      	b.n	8023bd4 <_printf_i+0xf8>
 8023bb2:	6821      	ldr	r1, [r4, #0]
 8023bb4:	6833      	ldr	r3, [r6, #0]
 8023bb6:	0608      	lsls	r0, r1, #24
 8023bb8:	f853 5b04 	ldr.w	r5, [r3], #4
 8023bbc:	d402      	bmi.n	8023bc4 <_printf_i+0xe8>
 8023bbe:	0649      	lsls	r1, r1, #25
 8023bc0:	bf48      	it	mi
 8023bc2:	b2ad      	uxthmi	r5, r5
 8023bc4:	2f6f      	cmp	r7, #111	@ 0x6f
 8023bc6:	4853      	ldr	r0, [pc, #332]	@ (8023d14 <_printf_i+0x238>)
 8023bc8:	6033      	str	r3, [r6, #0]
 8023bca:	d159      	bne.n	8023c80 <_printf_i+0x1a4>
 8023bcc:	2308      	movs	r3, #8
 8023bce:	2100      	movs	r1, #0
 8023bd0:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023bd4:	6866      	ldr	r6, [r4, #4]
 8023bd6:	60a6      	str	r6, [r4, #8]
 8023bd8:	2e00      	cmp	r6, #0
 8023bda:	db05      	blt.n	8023be8 <_printf_i+0x10c>
 8023bdc:	6821      	ldr	r1, [r4, #0]
 8023bde:	432e      	orrs	r6, r5
 8023be0:	f021 0104 	bic.w	r1, r1, #4
 8023be4:	6021      	str	r1, [r4, #0]
 8023be6:	d04d      	beq.n	8023c84 <_printf_i+0x1a8>
 8023be8:	4616      	mov	r6, r2
 8023bea:	fbb5 f1f3 	udiv	r1, r5, r3
 8023bee:	fb03 5711 	mls	r7, r3, r1, r5
 8023bf2:	5dc7      	ldrb	r7, [r0, r7]
 8023bf4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023bf8:	462f      	mov	r7, r5
 8023bfa:	42bb      	cmp	r3, r7
 8023bfc:	460d      	mov	r5, r1
 8023bfe:	d9f4      	bls.n	8023bea <_printf_i+0x10e>
 8023c00:	2b08      	cmp	r3, #8
 8023c02:	d10b      	bne.n	8023c1c <_printf_i+0x140>
 8023c04:	6823      	ldr	r3, [r4, #0]
 8023c06:	07df      	lsls	r7, r3, #31
 8023c08:	d508      	bpl.n	8023c1c <_printf_i+0x140>
 8023c0a:	6923      	ldr	r3, [r4, #16]
 8023c0c:	6861      	ldr	r1, [r4, #4]
 8023c0e:	4299      	cmp	r1, r3
 8023c10:	bfde      	ittt	le
 8023c12:	2330      	movle	r3, #48	@ 0x30
 8023c14:	f806 3c01 	strble.w	r3, [r6, #-1]
 8023c18:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8023c1c:	1b92      	subs	r2, r2, r6
 8023c1e:	6122      	str	r2, [r4, #16]
 8023c20:	f8cd a000 	str.w	sl, [sp]
 8023c24:	464b      	mov	r3, r9
 8023c26:	aa03      	add	r2, sp, #12
 8023c28:	4621      	mov	r1, r4
 8023c2a:	4640      	mov	r0, r8
 8023c2c:	f7ff fee8 	bl	8023a00 <_printf_common>
 8023c30:	3001      	adds	r0, #1
 8023c32:	d14c      	bne.n	8023cce <_printf_i+0x1f2>
 8023c34:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8023c38:	b004      	add	sp, #16
 8023c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023c3e:	6823      	ldr	r3, [r4, #0]
 8023c40:	f043 0320 	orr.w	r3, r3, #32
 8023c44:	6023      	str	r3, [r4, #0]
 8023c46:	4834      	ldr	r0, [pc, #208]	@ (8023d18 <_printf_i+0x23c>)
 8023c48:	2778      	movs	r7, #120	@ 0x78
 8023c4a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8023c4e:	6823      	ldr	r3, [r4, #0]
 8023c50:	6831      	ldr	r1, [r6, #0]
 8023c52:	061f      	lsls	r7, r3, #24
 8023c54:	f851 5b04 	ldr.w	r5, [r1], #4
 8023c58:	d402      	bmi.n	8023c60 <_printf_i+0x184>
 8023c5a:	065f      	lsls	r7, r3, #25
 8023c5c:	bf48      	it	mi
 8023c5e:	b2ad      	uxthmi	r5, r5
 8023c60:	6031      	str	r1, [r6, #0]
 8023c62:	07d9      	lsls	r1, r3, #31
 8023c64:	bf44      	itt	mi
 8023c66:	f043 0320 	orrmi.w	r3, r3, #32
 8023c6a:	6023      	strmi	r3, [r4, #0]
 8023c6c:	b11d      	cbz	r5, 8023c76 <_printf_i+0x19a>
 8023c6e:	2310      	movs	r3, #16
 8023c70:	e7ad      	b.n	8023bce <_printf_i+0xf2>
 8023c72:	4828      	ldr	r0, [pc, #160]	@ (8023d14 <_printf_i+0x238>)
 8023c74:	e7e9      	b.n	8023c4a <_printf_i+0x16e>
 8023c76:	6823      	ldr	r3, [r4, #0]
 8023c78:	f023 0320 	bic.w	r3, r3, #32
 8023c7c:	6023      	str	r3, [r4, #0]
 8023c7e:	e7f6      	b.n	8023c6e <_printf_i+0x192>
 8023c80:	230a      	movs	r3, #10
 8023c82:	e7a4      	b.n	8023bce <_printf_i+0xf2>
 8023c84:	4616      	mov	r6, r2
 8023c86:	e7bb      	b.n	8023c00 <_printf_i+0x124>
 8023c88:	6833      	ldr	r3, [r6, #0]
 8023c8a:	6825      	ldr	r5, [r4, #0]
 8023c8c:	6961      	ldr	r1, [r4, #20]
 8023c8e:	1d18      	adds	r0, r3, #4
 8023c90:	6030      	str	r0, [r6, #0]
 8023c92:	062e      	lsls	r6, r5, #24
 8023c94:	681b      	ldr	r3, [r3, #0]
 8023c96:	d501      	bpl.n	8023c9c <_printf_i+0x1c0>
 8023c98:	6019      	str	r1, [r3, #0]
 8023c9a:	e002      	b.n	8023ca2 <_printf_i+0x1c6>
 8023c9c:	0668      	lsls	r0, r5, #25
 8023c9e:	d5fb      	bpl.n	8023c98 <_printf_i+0x1bc>
 8023ca0:	8019      	strh	r1, [r3, #0]
 8023ca2:	2300      	movs	r3, #0
 8023ca4:	6123      	str	r3, [r4, #16]
 8023ca6:	4616      	mov	r6, r2
 8023ca8:	e7ba      	b.n	8023c20 <_printf_i+0x144>
 8023caa:	6833      	ldr	r3, [r6, #0]
 8023cac:	1d1a      	adds	r2, r3, #4
 8023cae:	6032      	str	r2, [r6, #0]
 8023cb0:	681e      	ldr	r6, [r3, #0]
 8023cb2:	6862      	ldr	r2, [r4, #4]
 8023cb4:	2100      	movs	r1, #0
 8023cb6:	4630      	mov	r0, r6
 8023cb8:	f7dc fa7a 	bl	80001b0 <memchr>
 8023cbc:	b108      	cbz	r0, 8023cc2 <_printf_i+0x1e6>
 8023cbe:	1b80      	subs	r0, r0, r6
 8023cc0:	6060      	str	r0, [r4, #4]
 8023cc2:	6863      	ldr	r3, [r4, #4]
 8023cc4:	6123      	str	r3, [r4, #16]
 8023cc6:	2300      	movs	r3, #0
 8023cc8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023ccc:	e7a8      	b.n	8023c20 <_printf_i+0x144>
 8023cce:	6923      	ldr	r3, [r4, #16]
 8023cd0:	4632      	mov	r2, r6
 8023cd2:	4649      	mov	r1, r9
 8023cd4:	4640      	mov	r0, r8
 8023cd6:	47d0      	blx	sl
 8023cd8:	3001      	adds	r0, #1
 8023cda:	d0ab      	beq.n	8023c34 <_printf_i+0x158>
 8023cdc:	6823      	ldr	r3, [r4, #0]
 8023cde:	079b      	lsls	r3, r3, #30
 8023ce0:	d413      	bmi.n	8023d0a <_printf_i+0x22e>
 8023ce2:	68e0      	ldr	r0, [r4, #12]
 8023ce4:	9b03      	ldr	r3, [sp, #12]
 8023ce6:	4298      	cmp	r0, r3
 8023ce8:	bfb8      	it	lt
 8023cea:	4618      	movlt	r0, r3
 8023cec:	e7a4      	b.n	8023c38 <_printf_i+0x15c>
 8023cee:	2301      	movs	r3, #1
 8023cf0:	4632      	mov	r2, r6
 8023cf2:	4649      	mov	r1, r9
 8023cf4:	4640      	mov	r0, r8
 8023cf6:	47d0      	blx	sl
 8023cf8:	3001      	adds	r0, #1
 8023cfa:	d09b      	beq.n	8023c34 <_printf_i+0x158>
 8023cfc:	3501      	adds	r5, #1
 8023cfe:	68e3      	ldr	r3, [r4, #12]
 8023d00:	9903      	ldr	r1, [sp, #12]
 8023d02:	1a5b      	subs	r3, r3, r1
 8023d04:	42ab      	cmp	r3, r5
 8023d06:	dcf2      	bgt.n	8023cee <_printf_i+0x212>
 8023d08:	e7eb      	b.n	8023ce2 <_printf_i+0x206>
 8023d0a:	2500      	movs	r5, #0
 8023d0c:	f104 0619 	add.w	r6, r4, #25
 8023d10:	e7f5      	b.n	8023cfe <_printf_i+0x222>
 8023d12:	bf00      	nop
 8023d14:	0802b121 	.word	0x0802b121
 8023d18:	0802b132 	.word	0x0802b132

08023d1c <_scanf_float>:
 8023d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d20:	b087      	sub	sp, #28
 8023d22:	4691      	mov	r9, r2
 8023d24:	9303      	str	r3, [sp, #12]
 8023d26:	688b      	ldr	r3, [r1, #8]
 8023d28:	1e5a      	subs	r2, r3, #1
 8023d2a:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8023d2e:	bf81      	itttt	hi
 8023d30:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8023d34:	eb03 0b05 	addhi.w	fp, r3, r5
 8023d38:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8023d3c:	608b      	strhi	r3, [r1, #8]
 8023d3e:	680b      	ldr	r3, [r1, #0]
 8023d40:	460a      	mov	r2, r1
 8023d42:	f04f 0500 	mov.w	r5, #0
 8023d46:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8023d4a:	f842 3b1c 	str.w	r3, [r2], #28
 8023d4e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8023d52:	4680      	mov	r8, r0
 8023d54:	460c      	mov	r4, r1
 8023d56:	bf98      	it	ls
 8023d58:	f04f 0b00 	movls.w	fp, #0
 8023d5c:	9201      	str	r2, [sp, #4]
 8023d5e:	4616      	mov	r6, r2
 8023d60:	46aa      	mov	sl, r5
 8023d62:	462f      	mov	r7, r5
 8023d64:	9502      	str	r5, [sp, #8]
 8023d66:	68a2      	ldr	r2, [r4, #8]
 8023d68:	b15a      	cbz	r2, 8023d82 <_scanf_float+0x66>
 8023d6a:	f8d9 3000 	ldr.w	r3, [r9]
 8023d6e:	781b      	ldrb	r3, [r3, #0]
 8023d70:	2b4e      	cmp	r3, #78	@ 0x4e
 8023d72:	d863      	bhi.n	8023e3c <_scanf_float+0x120>
 8023d74:	2b40      	cmp	r3, #64	@ 0x40
 8023d76:	d83b      	bhi.n	8023df0 <_scanf_float+0xd4>
 8023d78:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8023d7c:	b2c8      	uxtb	r0, r1
 8023d7e:	280e      	cmp	r0, #14
 8023d80:	d939      	bls.n	8023df6 <_scanf_float+0xda>
 8023d82:	b11f      	cbz	r7, 8023d8c <_scanf_float+0x70>
 8023d84:	6823      	ldr	r3, [r4, #0]
 8023d86:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8023d8a:	6023      	str	r3, [r4, #0]
 8023d8c:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8023d90:	f1ba 0f01 	cmp.w	sl, #1
 8023d94:	f200 8114 	bhi.w	8023fc0 <_scanf_float+0x2a4>
 8023d98:	9b01      	ldr	r3, [sp, #4]
 8023d9a:	429e      	cmp	r6, r3
 8023d9c:	f200 8105 	bhi.w	8023faa <_scanf_float+0x28e>
 8023da0:	2001      	movs	r0, #1
 8023da2:	b007      	add	sp, #28
 8023da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023da8:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8023dac:	2a0d      	cmp	r2, #13
 8023dae:	d8e8      	bhi.n	8023d82 <_scanf_float+0x66>
 8023db0:	a101      	add	r1, pc, #4	@ (adr r1, 8023db8 <_scanf_float+0x9c>)
 8023db2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8023db6:	bf00      	nop
 8023db8:	08023f01 	.word	0x08023f01
 8023dbc:	08023d83 	.word	0x08023d83
 8023dc0:	08023d83 	.word	0x08023d83
 8023dc4:	08023d83 	.word	0x08023d83
 8023dc8:	08023f5d 	.word	0x08023f5d
 8023dcc:	08023f37 	.word	0x08023f37
 8023dd0:	08023d83 	.word	0x08023d83
 8023dd4:	08023d83 	.word	0x08023d83
 8023dd8:	08023f0f 	.word	0x08023f0f
 8023ddc:	08023d83 	.word	0x08023d83
 8023de0:	08023d83 	.word	0x08023d83
 8023de4:	08023d83 	.word	0x08023d83
 8023de8:	08023d83 	.word	0x08023d83
 8023dec:	08023ecb 	.word	0x08023ecb
 8023df0:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8023df4:	e7da      	b.n	8023dac <_scanf_float+0x90>
 8023df6:	290e      	cmp	r1, #14
 8023df8:	d8c3      	bhi.n	8023d82 <_scanf_float+0x66>
 8023dfa:	a001      	add	r0, pc, #4	@ (adr r0, 8023e00 <_scanf_float+0xe4>)
 8023dfc:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8023e00:	08023ebb 	.word	0x08023ebb
 8023e04:	08023d83 	.word	0x08023d83
 8023e08:	08023ebb 	.word	0x08023ebb
 8023e0c:	08023f4b 	.word	0x08023f4b
 8023e10:	08023d83 	.word	0x08023d83
 8023e14:	08023e5d 	.word	0x08023e5d
 8023e18:	08023ea1 	.word	0x08023ea1
 8023e1c:	08023ea1 	.word	0x08023ea1
 8023e20:	08023ea1 	.word	0x08023ea1
 8023e24:	08023ea1 	.word	0x08023ea1
 8023e28:	08023ea1 	.word	0x08023ea1
 8023e2c:	08023ea1 	.word	0x08023ea1
 8023e30:	08023ea1 	.word	0x08023ea1
 8023e34:	08023ea1 	.word	0x08023ea1
 8023e38:	08023ea1 	.word	0x08023ea1
 8023e3c:	2b6e      	cmp	r3, #110	@ 0x6e
 8023e3e:	d809      	bhi.n	8023e54 <_scanf_float+0x138>
 8023e40:	2b60      	cmp	r3, #96	@ 0x60
 8023e42:	d8b1      	bhi.n	8023da8 <_scanf_float+0x8c>
 8023e44:	2b54      	cmp	r3, #84	@ 0x54
 8023e46:	d07b      	beq.n	8023f40 <_scanf_float+0x224>
 8023e48:	2b59      	cmp	r3, #89	@ 0x59
 8023e4a:	d19a      	bne.n	8023d82 <_scanf_float+0x66>
 8023e4c:	2d07      	cmp	r5, #7
 8023e4e:	d198      	bne.n	8023d82 <_scanf_float+0x66>
 8023e50:	2508      	movs	r5, #8
 8023e52:	e02f      	b.n	8023eb4 <_scanf_float+0x198>
 8023e54:	2b74      	cmp	r3, #116	@ 0x74
 8023e56:	d073      	beq.n	8023f40 <_scanf_float+0x224>
 8023e58:	2b79      	cmp	r3, #121	@ 0x79
 8023e5a:	e7f6      	b.n	8023e4a <_scanf_float+0x12e>
 8023e5c:	6821      	ldr	r1, [r4, #0]
 8023e5e:	05c8      	lsls	r0, r1, #23
 8023e60:	d51e      	bpl.n	8023ea0 <_scanf_float+0x184>
 8023e62:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8023e66:	6021      	str	r1, [r4, #0]
 8023e68:	3701      	adds	r7, #1
 8023e6a:	f1bb 0f00 	cmp.w	fp, #0
 8023e6e:	d003      	beq.n	8023e78 <_scanf_float+0x15c>
 8023e70:	3201      	adds	r2, #1
 8023e72:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8023e76:	60a2      	str	r2, [r4, #8]
 8023e78:	68a3      	ldr	r3, [r4, #8]
 8023e7a:	3b01      	subs	r3, #1
 8023e7c:	60a3      	str	r3, [r4, #8]
 8023e7e:	6923      	ldr	r3, [r4, #16]
 8023e80:	3301      	adds	r3, #1
 8023e82:	6123      	str	r3, [r4, #16]
 8023e84:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8023e88:	3b01      	subs	r3, #1
 8023e8a:	2b00      	cmp	r3, #0
 8023e8c:	f8c9 3004 	str.w	r3, [r9, #4]
 8023e90:	f340 8082 	ble.w	8023f98 <_scanf_float+0x27c>
 8023e94:	f8d9 3000 	ldr.w	r3, [r9]
 8023e98:	3301      	adds	r3, #1
 8023e9a:	f8c9 3000 	str.w	r3, [r9]
 8023e9e:	e762      	b.n	8023d66 <_scanf_float+0x4a>
 8023ea0:	eb1a 0105 	adds.w	r1, sl, r5
 8023ea4:	f47f af6d 	bne.w	8023d82 <_scanf_float+0x66>
 8023ea8:	6822      	ldr	r2, [r4, #0]
 8023eaa:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8023eae:	6022      	str	r2, [r4, #0]
 8023eb0:	460d      	mov	r5, r1
 8023eb2:	468a      	mov	sl, r1
 8023eb4:	f806 3b01 	strb.w	r3, [r6], #1
 8023eb8:	e7de      	b.n	8023e78 <_scanf_float+0x15c>
 8023eba:	6822      	ldr	r2, [r4, #0]
 8023ebc:	0610      	lsls	r0, r2, #24
 8023ebe:	f57f af60 	bpl.w	8023d82 <_scanf_float+0x66>
 8023ec2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8023ec6:	6022      	str	r2, [r4, #0]
 8023ec8:	e7f4      	b.n	8023eb4 <_scanf_float+0x198>
 8023eca:	f1ba 0f00 	cmp.w	sl, #0
 8023ece:	d10c      	bne.n	8023eea <_scanf_float+0x1ce>
 8023ed0:	b977      	cbnz	r7, 8023ef0 <_scanf_float+0x1d4>
 8023ed2:	6822      	ldr	r2, [r4, #0]
 8023ed4:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8023ed8:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8023edc:	d108      	bne.n	8023ef0 <_scanf_float+0x1d4>
 8023ede:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8023ee2:	6022      	str	r2, [r4, #0]
 8023ee4:	f04f 0a01 	mov.w	sl, #1
 8023ee8:	e7e4      	b.n	8023eb4 <_scanf_float+0x198>
 8023eea:	f1ba 0f02 	cmp.w	sl, #2
 8023eee:	d050      	beq.n	8023f92 <_scanf_float+0x276>
 8023ef0:	2d01      	cmp	r5, #1
 8023ef2:	d002      	beq.n	8023efa <_scanf_float+0x1de>
 8023ef4:	2d04      	cmp	r5, #4
 8023ef6:	f47f af44 	bne.w	8023d82 <_scanf_float+0x66>
 8023efa:	3501      	adds	r5, #1
 8023efc:	b2ed      	uxtb	r5, r5
 8023efe:	e7d9      	b.n	8023eb4 <_scanf_float+0x198>
 8023f00:	f1ba 0f01 	cmp.w	sl, #1
 8023f04:	f47f af3d 	bne.w	8023d82 <_scanf_float+0x66>
 8023f08:	f04f 0a02 	mov.w	sl, #2
 8023f0c:	e7d2      	b.n	8023eb4 <_scanf_float+0x198>
 8023f0e:	b975      	cbnz	r5, 8023f2e <_scanf_float+0x212>
 8023f10:	2f00      	cmp	r7, #0
 8023f12:	f47f af37 	bne.w	8023d84 <_scanf_float+0x68>
 8023f16:	6822      	ldr	r2, [r4, #0]
 8023f18:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8023f1c:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8023f20:	f040 8102 	bne.w	8024128 <_scanf_float+0x40c>
 8023f24:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8023f28:	6022      	str	r2, [r4, #0]
 8023f2a:	2501      	movs	r5, #1
 8023f2c:	e7c2      	b.n	8023eb4 <_scanf_float+0x198>
 8023f2e:	2d03      	cmp	r5, #3
 8023f30:	d0e3      	beq.n	8023efa <_scanf_float+0x1de>
 8023f32:	2d05      	cmp	r5, #5
 8023f34:	e7df      	b.n	8023ef6 <_scanf_float+0x1da>
 8023f36:	2d02      	cmp	r5, #2
 8023f38:	f47f af23 	bne.w	8023d82 <_scanf_float+0x66>
 8023f3c:	2503      	movs	r5, #3
 8023f3e:	e7b9      	b.n	8023eb4 <_scanf_float+0x198>
 8023f40:	2d06      	cmp	r5, #6
 8023f42:	f47f af1e 	bne.w	8023d82 <_scanf_float+0x66>
 8023f46:	2507      	movs	r5, #7
 8023f48:	e7b4      	b.n	8023eb4 <_scanf_float+0x198>
 8023f4a:	6822      	ldr	r2, [r4, #0]
 8023f4c:	0591      	lsls	r1, r2, #22
 8023f4e:	f57f af18 	bpl.w	8023d82 <_scanf_float+0x66>
 8023f52:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8023f56:	6022      	str	r2, [r4, #0]
 8023f58:	9702      	str	r7, [sp, #8]
 8023f5a:	e7ab      	b.n	8023eb4 <_scanf_float+0x198>
 8023f5c:	6822      	ldr	r2, [r4, #0]
 8023f5e:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8023f62:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8023f66:	d005      	beq.n	8023f74 <_scanf_float+0x258>
 8023f68:	0550      	lsls	r0, r2, #21
 8023f6a:	f57f af0a 	bpl.w	8023d82 <_scanf_float+0x66>
 8023f6e:	2f00      	cmp	r7, #0
 8023f70:	f000 80da 	beq.w	8024128 <_scanf_float+0x40c>
 8023f74:	0591      	lsls	r1, r2, #22
 8023f76:	bf58      	it	pl
 8023f78:	9902      	ldrpl	r1, [sp, #8]
 8023f7a:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8023f7e:	bf58      	it	pl
 8023f80:	1a79      	subpl	r1, r7, r1
 8023f82:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8023f86:	bf58      	it	pl
 8023f88:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8023f8c:	6022      	str	r2, [r4, #0]
 8023f8e:	2700      	movs	r7, #0
 8023f90:	e790      	b.n	8023eb4 <_scanf_float+0x198>
 8023f92:	f04f 0a03 	mov.w	sl, #3
 8023f96:	e78d      	b.n	8023eb4 <_scanf_float+0x198>
 8023f98:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8023f9c:	4649      	mov	r1, r9
 8023f9e:	4640      	mov	r0, r8
 8023fa0:	4798      	blx	r3
 8023fa2:	2800      	cmp	r0, #0
 8023fa4:	f43f aedf 	beq.w	8023d66 <_scanf_float+0x4a>
 8023fa8:	e6eb      	b.n	8023d82 <_scanf_float+0x66>
 8023faa:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8023fae:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8023fb2:	464a      	mov	r2, r9
 8023fb4:	4640      	mov	r0, r8
 8023fb6:	4798      	blx	r3
 8023fb8:	6923      	ldr	r3, [r4, #16]
 8023fba:	3b01      	subs	r3, #1
 8023fbc:	6123      	str	r3, [r4, #16]
 8023fbe:	e6eb      	b.n	8023d98 <_scanf_float+0x7c>
 8023fc0:	1e6b      	subs	r3, r5, #1
 8023fc2:	2b06      	cmp	r3, #6
 8023fc4:	d824      	bhi.n	8024010 <_scanf_float+0x2f4>
 8023fc6:	2d02      	cmp	r5, #2
 8023fc8:	d836      	bhi.n	8024038 <_scanf_float+0x31c>
 8023fca:	9b01      	ldr	r3, [sp, #4]
 8023fcc:	429e      	cmp	r6, r3
 8023fce:	f67f aee7 	bls.w	8023da0 <_scanf_float+0x84>
 8023fd2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8023fd6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8023fda:	464a      	mov	r2, r9
 8023fdc:	4640      	mov	r0, r8
 8023fde:	4798      	blx	r3
 8023fe0:	6923      	ldr	r3, [r4, #16]
 8023fe2:	3b01      	subs	r3, #1
 8023fe4:	6123      	str	r3, [r4, #16]
 8023fe6:	e7f0      	b.n	8023fca <_scanf_float+0x2ae>
 8023fe8:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8023fec:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8023ff0:	464a      	mov	r2, r9
 8023ff2:	4640      	mov	r0, r8
 8023ff4:	4798      	blx	r3
 8023ff6:	6923      	ldr	r3, [r4, #16]
 8023ff8:	3b01      	subs	r3, #1
 8023ffa:	6123      	str	r3, [r4, #16]
 8023ffc:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8024000:	fa5f fa8a 	uxtb.w	sl, sl
 8024004:	f1ba 0f02 	cmp.w	sl, #2
 8024008:	d1ee      	bne.n	8023fe8 <_scanf_float+0x2cc>
 802400a:	3d03      	subs	r5, #3
 802400c:	b2ed      	uxtb	r5, r5
 802400e:	1b76      	subs	r6, r6, r5
 8024010:	6823      	ldr	r3, [r4, #0]
 8024012:	05da      	lsls	r2, r3, #23
 8024014:	d530      	bpl.n	8024078 <_scanf_float+0x35c>
 8024016:	055d      	lsls	r5, r3, #21
 8024018:	d511      	bpl.n	802403e <_scanf_float+0x322>
 802401a:	9b01      	ldr	r3, [sp, #4]
 802401c:	429e      	cmp	r6, r3
 802401e:	f67f aebf 	bls.w	8023da0 <_scanf_float+0x84>
 8024022:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8024026:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 802402a:	464a      	mov	r2, r9
 802402c:	4640      	mov	r0, r8
 802402e:	4798      	blx	r3
 8024030:	6923      	ldr	r3, [r4, #16]
 8024032:	3b01      	subs	r3, #1
 8024034:	6123      	str	r3, [r4, #16]
 8024036:	e7f0      	b.n	802401a <_scanf_float+0x2fe>
 8024038:	46aa      	mov	sl, r5
 802403a:	46b3      	mov	fp, r6
 802403c:	e7de      	b.n	8023ffc <_scanf_float+0x2e0>
 802403e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8024042:	6923      	ldr	r3, [r4, #16]
 8024044:	2965      	cmp	r1, #101	@ 0x65
 8024046:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 802404a:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
 802404e:	6123      	str	r3, [r4, #16]
 8024050:	d00c      	beq.n	802406c <_scanf_float+0x350>
 8024052:	2945      	cmp	r1, #69	@ 0x45
 8024054:	d00a      	beq.n	802406c <_scanf_float+0x350>
 8024056:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 802405a:	464a      	mov	r2, r9
 802405c:	4640      	mov	r0, r8
 802405e:	4798      	blx	r3
 8024060:	6923      	ldr	r3, [r4, #16]
 8024062:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8024066:	3b01      	subs	r3, #1
 8024068:	1eb5      	subs	r5, r6, #2
 802406a:	6123      	str	r3, [r4, #16]
 802406c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8024070:	464a      	mov	r2, r9
 8024072:	4640      	mov	r0, r8
 8024074:	4798      	blx	r3
 8024076:	462e      	mov	r6, r5
 8024078:	6822      	ldr	r2, [r4, #0]
 802407a:	f012 0210 	ands.w	r2, r2, #16
 802407e:	d001      	beq.n	8024084 <_scanf_float+0x368>
 8024080:	2000      	movs	r0, #0
 8024082:	e68e      	b.n	8023da2 <_scanf_float+0x86>
 8024084:	7032      	strb	r2, [r6, #0]
 8024086:	6823      	ldr	r3, [r4, #0]
 8024088:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 802408c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8024090:	d124      	bne.n	80240dc <_scanf_float+0x3c0>
 8024092:	9b02      	ldr	r3, [sp, #8]
 8024094:	429f      	cmp	r7, r3
 8024096:	d00a      	beq.n	80240ae <_scanf_float+0x392>
 8024098:	1bda      	subs	r2, r3, r7
 802409a:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 802409e:	429e      	cmp	r6, r3
 80240a0:	bf28      	it	cs
 80240a2:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 80240a6:	4921      	ldr	r1, [pc, #132]	@ (802412c <_scanf_float+0x410>)
 80240a8:	4630      	mov	r0, r6
 80240aa:	f000 f9ad 	bl	8024408 <siprintf>
 80240ae:	9901      	ldr	r1, [sp, #4]
 80240b0:	2200      	movs	r2, #0
 80240b2:	4640      	mov	r0, r8
 80240b4:	f002 fd70 	bl	8026b98 <_strtod_r>
 80240b8:	9b03      	ldr	r3, [sp, #12]
 80240ba:	6821      	ldr	r1, [r4, #0]
 80240bc:	681b      	ldr	r3, [r3, #0]
 80240be:	0788      	lsls	r0, r1, #30
 80240c0:	ec57 6b10 	vmov	r6, r7, d0
 80240c4:	f103 0204 	add.w	r2, r3, #4
 80240c8:	d515      	bpl.n	80240f6 <_scanf_float+0x3da>
 80240ca:	9903      	ldr	r1, [sp, #12]
 80240cc:	600a      	str	r2, [r1, #0]
 80240ce:	681b      	ldr	r3, [r3, #0]
 80240d0:	e9c3 6700 	strd	r6, r7, [r3]
 80240d4:	68e3      	ldr	r3, [r4, #12]
 80240d6:	3301      	adds	r3, #1
 80240d8:	60e3      	str	r3, [r4, #12]
 80240da:	e7d1      	b.n	8024080 <_scanf_float+0x364>
 80240dc:	9b04      	ldr	r3, [sp, #16]
 80240de:	2b00      	cmp	r3, #0
 80240e0:	d0e5      	beq.n	80240ae <_scanf_float+0x392>
 80240e2:	9905      	ldr	r1, [sp, #20]
 80240e4:	230a      	movs	r3, #10
 80240e6:	3101      	adds	r1, #1
 80240e8:	4640      	mov	r0, r8
 80240ea:	f002 fdd5 	bl	8026c98 <_strtol_r>
 80240ee:	9b04      	ldr	r3, [sp, #16]
 80240f0:	9e05      	ldr	r6, [sp, #20]
 80240f2:	1ac2      	subs	r2, r0, r3
 80240f4:	e7d1      	b.n	802409a <_scanf_float+0x37e>
 80240f6:	f011 0f04 	tst.w	r1, #4
 80240fa:	9903      	ldr	r1, [sp, #12]
 80240fc:	600a      	str	r2, [r1, #0]
 80240fe:	d1e6      	bne.n	80240ce <_scanf_float+0x3b2>
 8024100:	681d      	ldr	r5, [r3, #0]
 8024102:	4632      	mov	r2, r6
 8024104:	463b      	mov	r3, r7
 8024106:	4630      	mov	r0, r6
 8024108:	4639      	mov	r1, r7
 802410a:	f7dc fcff 	bl	8000b0c <__aeabi_dcmpun>
 802410e:	b128      	cbz	r0, 802411c <_scanf_float+0x400>
 8024110:	4807      	ldr	r0, [pc, #28]	@ (8024130 <_scanf_float+0x414>)
 8024112:	f000 fbc9 	bl	80248a8 <nanf>
 8024116:	ed85 0a00 	vstr	s0, [r5]
 802411a:	e7db      	b.n	80240d4 <_scanf_float+0x3b8>
 802411c:	4630      	mov	r0, r6
 802411e:	4639      	mov	r1, r7
 8024120:	f7dc fd52 	bl	8000bc8 <__aeabi_d2f>
 8024124:	6028      	str	r0, [r5, #0]
 8024126:	e7d5      	b.n	80240d4 <_scanf_float+0x3b8>
 8024128:	2700      	movs	r7, #0
 802412a:	e62f      	b.n	8023d8c <_scanf_float+0x70>
 802412c:	0802b143 	.word	0x0802b143
 8024130:	0802b110 	.word	0x0802b110

08024134 <std>:
 8024134:	2300      	movs	r3, #0
 8024136:	b510      	push	{r4, lr}
 8024138:	4604      	mov	r4, r0
 802413a:	e9c0 3300 	strd	r3, r3, [r0]
 802413e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8024142:	6083      	str	r3, [r0, #8]
 8024144:	8181      	strh	r1, [r0, #12]
 8024146:	6643      	str	r3, [r0, #100]	@ 0x64
 8024148:	81c2      	strh	r2, [r0, #14]
 802414a:	6183      	str	r3, [r0, #24]
 802414c:	4619      	mov	r1, r3
 802414e:	2208      	movs	r2, #8
 8024150:	305c      	adds	r0, #92	@ 0x5c
 8024152:	f000 faa8 	bl	80246a6 <memset>
 8024156:	4b0d      	ldr	r3, [pc, #52]	@ (802418c <std+0x58>)
 8024158:	6263      	str	r3, [r4, #36]	@ 0x24
 802415a:	4b0d      	ldr	r3, [pc, #52]	@ (8024190 <std+0x5c>)
 802415c:	62a3      	str	r3, [r4, #40]	@ 0x28
 802415e:	4b0d      	ldr	r3, [pc, #52]	@ (8024194 <std+0x60>)
 8024160:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8024162:	4b0d      	ldr	r3, [pc, #52]	@ (8024198 <std+0x64>)
 8024164:	6323      	str	r3, [r4, #48]	@ 0x30
 8024166:	4b0d      	ldr	r3, [pc, #52]	@ (802419c <std+0x68>)
 8024168:	6224      	str	r4, [r4, #32]
 802416a:	429c      	cmp	r4, r3
 802416c:	d006      	beq.n	802417c <std+0x48>
 802416e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8024172:	4294      	cmp	r4, r2
 8024174:	d002      	beq.n	802417c <std+0x48>
 8024176:	33d0      	adds	r3, #208	@ 0xd0
 8024178:	429c      	cmp	r4, r3
 802417a:	d105      	bne.n	8024188 <std+0x54>
 802417c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8024180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024184:	f000 bb7e 	b.w	8024884 <__retarget_lock_init_recursive>
 8024188:	bd10      	pop	{r4, pc}
 802418a:	bf00      	nop
 802418c:	080244a5 	.word	0x080244a5
 8024190:	080244cb 	.word	0x080244cb
 8024194:	08024503 	.word	0x08024503
 8024198:	08024529 	.word	0x08024529
 802419c:	2000d584 	.word	0x2000d584

080241a0 <stdio_exit_handler>:
 80241a0:	4a02      	ldr	r2, [pc, #8]	@ (80241ac <stdio_exit_handler+0xc>)
 80241a2:	4903      	ldr	r1, [pc, #12]	@ (80241b0 <stdio_exit_handler+0x10>)
 80241a4:	4803      	ldr	r0, [pc, #12]	@ (80241b4 <stdio_exit_handler+0x14>)
 80241a6:	f000 b87d 	b.w	80242a4 <_fwalk_sglue>
 80241aa:	bf00      	nop
 80241ac:	2000042c 	.word	0x2000042c
 80241b0:	08027925 	.word	0x08027925
 80241b4:	2000043c 	.word	0x2000043c

080241b8 <cleanup_stdio>:
 80241b8:	6841      	ldr	r1, [r0, #4]
 80241ba:	4b0c      	ldr	r3, [pc, #48]	@ (80241ec <cleanup_stdio+0x34>)
 80241bc:	4299      	cmp	r1, r3
 80241be:	b510      	push	{r4, lr}
 80241c0:	4604      	mov	r4, r0
 80241c2:	d001      	beq.n	80241c8 <cleanup_stdio+0x10>
 80241c4:	f003 fbae 	bl	8027924 <_fflush_r>
 80241c8:	68a1      	ldr	r1, [r4, #8]
 80241ca:	4b09      	ldr	r3, [pc, #36]	@ (80241f0 <cleanup_stdio+0x38>)
 80241cc:	4299      	cmp	r1, r3
 80241ce:	d002      	beq.n	80241d6 <cleanup_stdio+0x1e>
 80241d0:	4620      	mov	r0, r4
 80241d2:	f003 fba7 	bl	8027924 <_fflush_r>
 80241d6:	68e1      	ldr	r1, [r4, #12]
 80241d8:	4b06      	ldr	r3, [pc, #24]	@ (80241f4 <cleanup_stdio+0x3c>)
 80241da:	4299      	cmp	r1, r3
 80241dc:	d004      	beq.n	80241e8 <cleanup_stdio+0x30>
 80241de:	4620      	mov	r0, r4
 80241e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80241e4:	f003 bb9e 	b.w	8027924 <_fflush_r>
 80241e8:	bd10      	pop	{r4, pc}
 80241ea:	bf00      	nop
 80241ec:	2000d584 	.word	0x2000d584
 80241f0:	2000d5ec 	.word	0x2000d5ec
 80241f4:	2000d654 	.word	0x2000d654

080241f8 <global_stdio_init.part.0>:
 80241f8:	4b0c      	ldr	r3, [pc, #48]	@ (802422c <global_stdio_init.part.0+0x34>)
 80241fa:	4a0d      	ldr	r2, [pc, #52]	@ (8024230 <global_stdio_init.part.0+0x38>)
 80241fc:	480d      	ldr	r0, [pc, #52]	@ (8024234 <global_stdio_init.part.0+0x3c>)
 80241fe:	b510      	push	{r4, lr}
 8024200:	2104      	movs	r1, #4
 8024202:	601a      	str	r2, [r3, #0]
 8024204:	2200      	movs	r2, #0
 8024206:	f7ff ff95 	bl	8024134 <std>
 802420a:	4b0a      	ldr	r3, [pc, #40]	@ (8024234 <global_stdio_init.part.0+0x3c>)
 802420c:	2201      	movs	r2, #1
 802420e:	461c      	mov	r4, r3
 8024210:	2109      	movs	r1, #9
 8024212:	f103 0068 	add.w	r0, r3, #104	@ 0x68
 8024216:	f7ff ff8d 	bl	8024134 <std>
 802421a:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802421e:	2202      	movs	r2, #2
 8024220:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024224:	2112      	movs	r1, #18
 8024226:	f7ff bf85 	b.w	8024134 <std>
 802422a:	bf00      	nop
 802422c:	2000d6bc 	.word	0x2000d6bc
 8024230:	080241a1 	.word	0x080241a1
 8024234:	2000d584 	.word	0x2000d584

08024238 <__sfp_lock_acquire>:
 8024238:	4801      	ldr	r0, [pc, #4]	@ (8024240 <__sfp_lock_acquire+0x8>)
 802423a:	f000 bb24 	b.w	8024886 <__retarget_lock_acquire_recursive>
 802423e:	bf00      	nop
 8024240:	2000d6c6 	.word	0x2000d6c6

08024244 <__sfp_lock_release>:
 8024244:	4801      	ldr	r0, [pc, #4]	@ (802424c <__sfp_lock_release+0x8>)
 8024246:	f000 bb1f 	b.w	8024888 <__retarget_lock_release_recursive>
 802424a:	bf00      	nop
 802424c:	2000d6c6 	.word	0x2000d6c6

08024250 <__sinit>:
 8024250:	b510      	push	{r4, lr}
 8024252:	4604      	mov	r4, r0
 8024254:	f7ff fff0 	bl	8024238 <__sfp_lock_acquire>
 8024258:	6a23      	ldr	r3, [r4, #32]
 802425a:	b11b      	cbz	r3, 8024264 <__sinit+0x14>
 802425c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024260:	f7ff bff0 	b.w	8024244 <__sfp_lock_release>
 8024264:	4b04      	ldr	r3, [pc, #16]	@ (8024278 <__sinit+0x28>)
 8024266:	6223      	str	r3, [r4, #32]
 8024268:	4b04      	ldr	r3, [pc, #16]	@ (802427c <__sinit+0x2c>)
 802426a:	681b      	ldr	r3, [r3, #0]
 802426c:	2b00      	cmp	r3, #0
 802426e:	d1f5      	bne.n	802425c <__sinit+0xc>
 8024270:	f7ff ffc2 	bl	80241f8 <global_stdio_init.part.0>
 8024274:	e7f2      	b.n	802425c <__sinit+0xc>
 8024276:	bf00      	nop
 8024278:	080241b9 	.word	0x080241b9
 802427c:	2000d6bc 	.word	0x2000d6bc

08024280 <fiprintf>:
 8024280:	b40e      	push	{r1, r2, r3}
 8024282:	b503      	push	{r0, r1, lr}
 8024284:	4601      	mov	r1, r0
 8024286:	ab03      	add	r3, sp, #12
 8024288:	4805      	ldr	r0, [pc, #20]	@ (80242a0 <fiprintf+0x20>)
 802428a:	f853 2b04 	ldr.w	r2, [r3], #4
 802428e:	6800      	ldr	r0, [r0, #0]
 8024290:	9301      	str	r3, [sp, #4]
 8024292:	f003 f861 	bl	8027358 <_vfiprintf_r>
 8024296:	b002      	add	sp, #8
 8024298:	f85d eb04 	ldr.w	lr, [sp], #4
 802429c:	b003      	add	sp, #12
 802429e:	4770      	bx	lr
 80242a0:	20000438 	.word	0x20000438

080242a4 <_fwalk_sglue>:
 80242a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80242a8:	4607      	mov	r7, r0
 80242aa:	4688      	mov	r8, r1
 80242ac:	4614      	mov	r4, r2
 80242ae:	2600      	movs	r6, #0
 80242b0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80242b4:	f1b9 0901 	subs.w	r9, r9, #1
 80242b8:	d505      	bpl.n	80242c6 <_fwalk_sglue+0x22>
 80242ba:	6824      	ldr	r4, [r4, #0]
 80242bc:	2c00      	cmp	r4, #0
 80242be:	d1f7      	bne.n	80242b0 <_fwalk_sglue+0xc>
 80242c0:	4630      	mov	r0, r6
 80242c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80242c6:	89ab      	ldrh	r3, [r5, #12]
 80242c8:	2b01      	cmp	r3, #1
 80242ca:	d907      	bls.n	80242dc <_fwalk_sglue+0x38>
 80242cc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80242d0:	3301      	adds	r3, #1
 80242d2:	d003      	beq.n	80242dc <_fwalk_sglue+0x38>
 80242d4:	4629      	mov	r1, r5
 80242d6:	4638      	mov	r0, r7
 80242d8:	47c0      	blx	r8
 80242da:	4306      	orrs	r6, r0
 80242dc:	3568      	adds	r5, #104	@ 0x68
 80242de:	e7e9      	b.n	80242b4 <_fwalk_sglue+0x10>

080242e0 <_puts_r>:
 80242e0:	6a03      	ldr	r3, [r0, #32]
 80242e2:	b570      	push	{r4, r5, r6, lr}
 80242e4:	6884      	ldr	r4, [r0, #8]
 80242e6:	4605      	mov	r5, r0
 80242e8:	460e      	mov	r6, r1
 80242ea:	b90b      	cbnz	r3, 80242f0 <_puts_r+0x10>
 80242ec:	f7ff ffb0 	bl	8024250 <__sinit>
 80242f0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80242f2:	07db      	lsls	r3, r3, #31
 80242f4:	d405      	bmi.n	8024302 <_puts_r+0x22>
 80242f6:	89a3      	ldrh	r3, [r4, #12]
 80242f8:	0598      	lsls	r0, r3, #22
 80242fa:	d402      	bmi.n	8024302 <_puts_r+0x22>
 80242fc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80242fe:	f000 fac2 	bl	8024886 <__retarget_lock_acquire_recursive>
 8024302:	89a3      	ldrh	r3, [r4, #12]
 8024304:	0719      	lsls	r1, r3, #28
 8024306:	d502      	bpl.n	802430e <_puts_r+0x2e>
 8024308:	6923      	ldr	r3, [r4, #16]
 802430a:	2b00      	cmp	r3, #0
 802430c:	d135      	bne.n	802437a <_puts_r+0x9a>
 802430e:	4621      	mov	r1, r4
 8024310:	4628      	mov	r0, r5
 8024312:	f000 f94b 	bl	80245ac <__swsetup_r>
 8024316:	b380      	cbz	r0, 802437a <_puts_r+0x9a>
 8024318:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 802431c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802431e:	07da      	lsls	r2, r3, #31
 8024320:	d405      	bmi.n	802432e <_puts_r+0x4e>
 8024322:	89a3      	ldrh	r3, [r4, #12]
 8024324:	059b      	lsls	r3, r3, #22
 8024326:	d402      	bmi.n	802432e <_puts_r+0x4e>
 8024328:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802432a:	f000 faad 	bl	8024888 <__retarget_lock_release_recursive>
 802432e:	4628      	mov	r0, r5
 8024330:	bd70      	pop	{r4, r5, r6, pc}
 8024332:	2b00      	cmp	r3, #0
 8024334:	da04      	bge.n	8024340 <_puts_r+0x60>
 8024336:	69a2      	ldr	r2, [r4, #24]
 8024338:	4293      	cmp	r3, r2
 802433a:	db17      	blt.n	802436c <_puts_r+0x8c>
 802433c:	290a      	cmp	r1, #10
 802433e:	d015      	beq.n	802436c <_puts_r+0x8c>
 8024340:	6823      	ldr	r3, [r4, #0]
 8024342:	1c5a      	adds	r2, r3, #1
 8024344:	6022      	str	r2, [r4, #0]
 8024346:	7019      	strb	r1, [r3, #0]
 8024348:	68a3      	ldr	r3, [r4, #8]
 802434a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802434e:	3b01      	subs	r3, #1
 8024350:	60a3      	str	r3, [r4, #8]
 8024352:	2900      	cmp	r1, #0
 8024354:	d1ed      	bne.n	8024332 <_puts_r+0x52>
 8024356:	2b00      	cmp	r3, #0
 8024358:	da11      	bge.n	802437e <_puts_r+0x9e>
 802435a:	4622      	mov	r2, r4
 802435c:	210a      	movs	r1, #10
 802435e:	4628      	mov	r0, r5
 8024360:	f000 f8e6 	bl	8024530 <__swbuf_r>
 8024364:	3001      	adds	r0, #1
 8024366:	d0d7      	beq.n	8024318 <_puts_r+0x38>
 8024368:	250a      	movs	r5, #10
 802436a:	e7d7      	b.n	802431c <_puts_r+0x3c>
 802436c:	4622      	mov	r2, r4
 802436e:	4628      	mov	r0, r5
 8024370:	f000 f8de 	bl	8024530 <__swbuf_r>
 8024374:	3001      	adds	r0, #1
 8024376:	d1e7      	bne.n	8024348 <_puts_r+0x68>
 8024378:	e7ce      	b.n	8024318 <_puts_r+0x38>
 802437a:	3e01      	subs	r6, #1
 802437c:	e7e4      	b.n	8024348 <_puts_r+0x68>
 802437e:	6823      	ldr	r3, [r4, #0]
 8024380:	1c5a      	adds	r2, r3, #1
 8024382:	6022      	str	r2, [r4, #0]
 8024384:	220a      	movs	r2, #10
 8024386:	701a      	strb	r2, [r3, #0]
 8024388:	e7ee      	b.n	8024368 <_puts_r+0x88>
	...

0802438c <puts>:
 802438c:	4b02      	ldr	r3, [pc, #8]	@ (8024398 <puts+0xc>)
 802438e:	4601      	mov	r1, r0
 8024390:	6818      	ldr	r0, [r3, #0]
 8024392:	f7ff bfa5 	b.w	80242e0 <_puts_r>
 8024396:	bf00      	nop
 8024398:	20000438 	.word	0x20000438

0802439c <sniprintf>:
 802439c:	b40c      	push	{r2, r3}
 802439e:	b530      	push	{r4, r5, lr}
 80243a0:	4b18      	ldr	r3, [pc, #96]	@ (8024404 <sniprintf+0x68>)
 80243a2:	1e0c      	subs	r4, r1, #0
 80243a4:	681d      	ldr	r5, [r3, #0]
 80243a6:	b09d      	sub	sp, #116	@ 0x74
 80243a8:	da08      	bge.n	80243bc <sniprintf+0x20>
 80243aa:	238b      	movs	r3, #139	@ 0x8b
 80243ac:	602b      	str	r3, [r5, #0]
 80243ae:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80243b2:	b01d      	add	sp, #116	@ 0x74
 80243b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80243b8:	b002      	add	sp, #8
 80243ba:	4770      	bx	lr
 80243bc:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80243c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80243c4:	f04f 0300 	mov.w	r3, #0
 80243c8:	931b      	str	r3, [sp, #108]	@ 0x6c
 80243ca:	bf14      	ite	ne
 80243cc:	f104 33ff 	addne.w	r3, r4, #4294967295	@ 0xffffffff
 80243d0:	4623      	moveq	r3, r4
 80243d2:	9304      	str	r3, [sp, #16]
 80243d4:	9307      	str	r3, [sp, #28]
 80243d6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80243da:	9002      	str	r0, [sp, #8]
 80243dc:	9006      	str	r0, [sp, #24]
 80243de:	f8ad 3016 	strh.w	r3, [sp, #22]
 80243e2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80243e4:	ab21      	add	r3, sp, #132	@ 0x84
 80243e6:	a902      	add	r1, sp, #8
 80243e8:	4628      	mov	r0, r5
 80243ea:	9301      	str	r3, [sp, #4]
 80243ec:	f002 fcb6 	bl	8026d5c <_svfiprintf_r>
 80243f0:	1c43      	adds	r3, r0, #1
 80243f2:	bfbc      	itt	lt
 80243f4:	238b      	movlt	r3, #139	@ 0x8b
 80243f6:	602b      	strlt	r3, [r5, #0]
 80243f8:	2c00      	cmp	r4, #0
 80243fa:	d0da      	beq.n	80243b2 <sniprintf+0x16>
 80243fc:	9b02      	ldr	r3, [sp, #8]
 80243fe:	2200      	movs	r2, #0
 8024400:	701a      	strb	r2, [r3, #0]
 8024402:	e7d6      	b.n	80243b2 <sniprintf+0x16>
 8024404:	20000438 	.word	0x20000438

08024408 <siprintf>:
 8024408:	b40e      	push	{r1, r2, r3}
 802440a:	b510      	push	{r4, lr}
 802440c:	b09d      	sub	sp, #116	@ 0x74
 802440e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8024410:	9002      	str	r0, [sp, #8]
 8024412:	9006      	str	r0, [sp, #24]
 8024414:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8024418:	480a      	ldr	r0, [pc, #40]	@ (8024444 <siprintf+0x3c>)
 802441a:	9107      	str	r1, [sp, #28]
 802441c:	9104      	str	r1, [sp, #16]
 802441e:	490a      	ldr	r1, [pc, #40]	@ (8024448 <siprintf+0x40>)
 8024420:	f853 2b04 	ldr.w	r2, [r3], #4
 8024424:	9105      	str	r1, [sp, #20]
 8024426:	2400      	movs	r4, #0
 8024428:	a902      	add	r1, sp, #8
 802442a:	6800      	ldr	r0, [r0, #0]
 802442c:	9301      	str	r3, [sp, #4]
 802442e:	941b      	str	r4, [sp, #108]	@ 0x6c
 8024430:	f002 fc94 	bl	8026d5c <_svfiprintf_r>
 8024434:	9b02      	ldr	r3, [sp, #8]
 8024436:	701c      	strb	r4, [r3, #0]
 8024438:	b01d      	add	sp, #116	@ 0x74
 802443a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802443e:	b003      	add	sp, #12
 8024440:	4770      	bx	lr
 8024442:	bf00      	nop
 8024444:	20000438 	.word	0x20000438
 8024448:	ffff0208 	.word	0xffff0208

0802444c <siscanf>:
 802444c:	b40e      	push	{r1, r2, r3}
 802444e:	b570      	push	{r4, r5, r6, lr}
 8024450:	b09d      	sub	sp, #116	@ 0x74
 8024452:	ac21      	add	r4, sp, #132	@ 0x84
 8024454:	2500      	movs	r5, #0
 8024456:	f44f 7201 	mov.w	r2, #516	@ 0x204
 802445a:	f854 6b04 	ldr.w	r6, [r4], #4
 802445e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8024462:	951b      	str	r5, [sp, #108]	@ 0x6c
 8024464:	9002      	str	r0, [sp, #8]
 8024466:	9006      	str	r0, [sp, #24]
 8024468:	f7db fef2 	bl	8000250 <strlen>
 802446c:	4b0b      	ldr	r3, [pc, #44]	@ (802449c <siscanf+0x50>)
 802446e:	9003      	str	r0, [sp, #12]
 8024470:	9007      	str	r0, [sp, #28]
 8024472:	480b      	ldr	r0, [pc, #44]	@ (80244a0 <siscanf+0x54>)
 8024474:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024476:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 802447a:	f8ad 3016 	strh.w	r3, [sp, #22]
 802447e:	4632      	mov	r2, r6
 8024480:	4623      	mov	r3, r4
 8024482:	a902      	add	r1, sp, #8
 8024484:	6800      	ldr	r0, [r0, #0]
 8024486:	950f      	str	r5, [sp, #60]	@ 0x3c
 8024488:	9514      	str	r5, [sp, #80]	@ 0x50
 802448a:	9401      	str	r4, [sp, #4]
 802448c:	f002 fdbc 	bl	8027008 <__ssvfiscanf_r>
 8024490:	b01d      	add	sp, #116	@ 0x74
 8024492:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8024496:	b003      	add	sp, #12
 8024498:	4770      	bx	lr
 802449a:	bf00      	nop
 802449c:	080244c7 	.word	0x080244c7
 80244a0:	20000438 	.word	0x20000438

080244a4 <__sread>:
 80244a4:	b510      	push	{r4, lr}
 80244a6:	460c      	mov	r4, r1
 80244a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80244ac:	f000 f978 	bl	80247a0 <_read_r>
 80244b0:	2800      	cmp	r0, #0
 80244b2:	bfab      	itete	ge
 80244b4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80244b6:	89a3      	ldrhlt	r3, [r4, #12]
 80244b8:	181b      	addge	r3, r3, r0
 80244ba:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80244be:	bfac      	ite	ge
 80244c0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80244c2:	81a3      	strhlt	r3, [r4, #12]
 80244c4:	bd10      	pop	{r4, pc}

080244c6 <__seofread>:
 80244c6:	2000      	movs	r0, #0
 80244c8:	4770      	bx	lr

080244ca <__swrite>:
 80244ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80244ce:	461f      	mov	r7, r3
 80244d0:	898b      	ldrh	r3, [r1, #12]
 80244d2:	05db      	lsls	r3, r3, #23
 80244d4:	4605      	mov	r5, r0
 80244d6:	460c      	mov	r4, r1
 80244d8:	4616      	mov	r6, r2
 80244da:	d505      	bpl.n	80244e8 <__swrite+0x1e>
 80244dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80244e0:	2302      	movs	r3, #2
 80244e2:	2200      	movs	r2, #0
 80244e4:	f000 f94a 	bl	802477c <_lseek_r>
 80244e8:	89a3      	ldrh	r3, [r4, #12]
 80244ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80244ee:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80244f2:	81a3      	strh	r3, [r4, #12]
 80244f4:	4632      	mov	r2, r6
 80244f6:	463b      	mov	r3, r7
 80244f8:	4628      	mov	r0, r5
 80244fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80244fe:	f000 b985 	b.w	802480c <_write_r>

08024502 <__sseek>:
 8024502:	b510      	push	{r4, lr}
 8024504:	460c      	mov	r4, r1
 8024506:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802450a:	f000 f937 	bl	802477c <_lseek_r>
 802450e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024512:	1c42      	adds	r2, r0, #1
 8024514:	bf0b      	itete	eq
 8024516:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802451a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802451e:	81a3      	strheq	r3, [r4, #12]
 8024520:	81a3      	strhne	r3, [r4, #12]
 8024522:	bf18      	it	ne
 8024524:	6560      	strne	r0, [r4, #84]	@ 0x54
 8024526:	bd10      	pop	{r4, pc}

08024528 <__sclose>:
 8024528:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802452c:	f000 b916 	b.w	802475c <_close_r>

08024530 <__swbuf_r>:
 8024530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024532:	460e      	mov	r6, r1
 8024534:	4614      	mov	r4, r2
 8024536:	4605      	mov	r5, r0
 8024538:	b118      	cbz	r0, 8024542 <__swbuf_r+0x12>
 802453a:	6a03      	ldr	r3, [r0, #32]
 802453c:	b90b      	cbnz	r3, 8024542 <__swbuf_r+0x12>
 802453e:	f7ff fe87 	bl	8024250 <__sinit>
 8024542:	69a3      	ldr	r3, [r4, #24]
 8024544:	60a3      	str	r3, [r4, #8]
 8024546:	89a3      	ldrh	r3, [r4, #12]
 8024548:	071a      	lsls	r2, r3, #28
 802454a:	d501      	bpl.n	8024550 <__swbuf_r+0x20>
 802454c:	6923      	ldr	r3, [r4, #16]
 802454e:	b943      	cbnz	r3, 8024562 <__swbuf_r+0x32>
 8024550:	4621      	mov	r1, r4
 8024552:	4628      	mov	r0, r5
 8024554:	f000 f82a 	bl	80245ac <__swsetup_r>
 8024558:	b118      	cbz	r0, 8024562 <__swbuf_r+0x32>
 802455a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 802455e:	4638      	mov	r0, r7
 8024560:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024562:	6823      	ldr	r3, [r4, #0]
 8024564:	6922      	ldr	r2, [r4, #16]
 8024566:	1a98      	subs	r0, r3, r2
 8024568:	6963      	ldr	r3, [r4, #20]
 802456a:	b2f6      	uxtb	r6, r6
 802456c:	4283      	cmp	r3, r0
 802456e:	4637      	mov	r7, r6
 8024570:	dc05      	bgt.n	802457e <__swbuf_r+0x4e>
 8024572:	4621      	mov	r1, r4
 8024574:	4628      	mov	r0, r5
 8024576:	f003 f9d5 	bl	8027924 <_fflush_r>
 802457a:	2800      	cmp	r0, #0
 802457c:	d1ed      	bne.n	802455a <__swbuf_r+0x2a>
 802457e:	68a3      	ldr	r3, [r4, #8]
 8024580:	3b01      	subs	r3, #1
 8024582:	60a3      	str	r3, [r4, #8]
 8024584:	6823      	ldr	r3, [r4, #0]
 8024586:	1c5a      	adds	r2, r3, #1
 8024588:	6022      	str	r2, [r4, #0]
 802458a:	701e      	strb	r6, [r3, #0]
 802458c:	6962      	ldr	r2, [r4, #20]
 802458e:	1c43      	adds	r3, r0, #1
 8024590:	429a      	cmp	r2, r3
 8024592:	d004      	beq.n	802459e <__swbuf_r+0x6e>
 8024594:	89a3      	ldrh	r3, [r4, #12]
 8024596:	07db      	lsls	r3, r3, #31
 8024598:	d5e1      	bpl.n	802455e <__swbuf_r+0x2e>
 802459a:	2e0a      	cmp	r6, #10
 802459c:	d1df      	bne.n	802455e <__swbuf_r+0x2e>
 802459e:	4621      	mov	r1, r4
 80245a0:	4628      	mov	r0, r5
 80245a2:	f003 f9bf 	bl	8027924 <_fflush_r>
 80245a6:	2800      	cmp	r0, #0
 80245a8:	d0d9      	beq.n	802455e <__swbuf_r+0x2e>
 80245aa:	e7d6      	b.n	802455a <__swbuf_r+0x2a>

080245ac <__swsetup_r>:
 80245ac:	b538      	push	{r3, r4, r5, lr}
 80245ae:	4b28      	ldr	r3, [pc, #160]	@ (8024650 <__swsetup_r+0xa4>)
 80245b0:	4605      	mov	r5, r0
 80245b2:	6818      	ldr	r0, [r3, #0]
 80245b4:	460c      	mov	r4, r1
 80245b6:	b118      	cbz	r0, 80245c0 <__swsetup_r+0x14>
 80245b8:	6a03      	ldr	r3, [r0, #32]
 80245ba:	b90b      	cbnz	r3, 80245c0 <__swsetup_r+0x14>
 80245bc:	f7ff fe48 	bl	8024250 <__sinit>
 80245c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80245c4:	071a      	lsls	r2, r3, #28
 80245c6:	d421      	bmi.n	802460c <__swsetup_r+0x60>
 80245c8:	06d8      	lsls	r0, r3, #27
 80245ca:	d407      	bmi.n	80245dc <__swsetup_r+0x30>
 80245cc:	2209      	movs	r2, #9
 80245ce:	602a      	str	r2, [r5, #0]
 80245d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80245d4:	81a3      	strh	r3, [r4, #12]
 80245d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80245da:	e030      	b.n	802463e <__swsetup_r+0x92>
 80245dc:	0759      	lsls	r1, r3, #29
 80245de:	d512      	bpl.n	8024606 <__swsetup_r+0x5a>
 80245e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80245e2:	b141      	cbz	r1, 80245f6 <__swsetup_r+0x4a>
 80245e4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80245e8:	4299      	cmp	r1, r3
 80245ea:	d002      	beq.n	80245f2 <__swsetup_r+0x46>
 80245ec:	4628      	mov	r0, r5
 80245ee:	f000 ffd7 	bl	80255a0 <_free_r>
 80245f2:	2300      	movs	r3, #0
 80245f4:	6363      	str	r3, [r4, #52]	@ 0x34
 80245f6:	2200      	movs	r2, #0
 80245f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80245fc:	6062      	str	r2, [r4, #4]
 80245fe:	6922      	ldr	r2, [r4, #16]
 8024600:	6022      	str	r2, [r4, #0]
 8024602:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8024606:	f043 0308 	orr.w	r3, r3, #8
 802460a:	81a3      	strh	r3, [r4, #12]
 802460c:	6922      	ldr	r2, [r4, #16]
 802460e:	b93a      	cbnz	r2, 8024620 <__swsetup_r+0x74>
 8024610:	059a      	lsls	r2, r3, #22
 8024612:	d501      	bpl.n	8024618 <__swsetup_r+0x6c>
 8024614:	0618      	lsls	r0, r3, #24
 8024616:	d503      	bpl.n	8024620 <__swsetup_r+0x74>
 8024618:	4621      	mov	r1, r4
 802461a:	4628      	mov	r0, r5
 802461c:	f003 f9ce 	bl	80279bc <__smakebuf_r>
 8024620:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024624:	f013 0201 	ands.w	r2, r3, #1
 8024628:	d00a      	beq.n	8024640 <__swsetup_r+0x94>
 802462a:	2200      	movs	r2, #0
 802462c:	60a2      	str	r2, [r4, #8]
 802462e:	6962      	ldr	r2, [r4, #20]
 8024630:	4252      	negs	r2, r2
 8024632:	61a2      	str	r2, [r4, #24]
 8024634:	6922      	ldr	r2, [r4, #16]
 8024636:	b942      	cbnz	r2, 802464a <__swsetup_r+0x9e>
 8024638:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802463c:	d1c8      	bne.n	80245d0 <__swsetup_r+0x24>
 802463e:	bd38      	pop	{r3, r4, r5, pc}
 8024640:	0799      	lsls	r1, r3, #30
 8024642:	bf58      	it	pl
 8024644:	6962      	ldrpl	r2, [r4, #20]
 8024646:	60a2      	str	r2, [r4, #8]
 8024648:	e7f4      	b.n	8024634 <__swsetup_r+0x88>
 802464a:	2000      	movs	r0, #0
 802464c:	e7f7      	b.n	802463e <__swsetup_r+0x92>
 802464e:	bf00      	nop
 8024650:	20000438 	.word	0x20000438

08024654 <memcmp>:
 8024654:	b510      	push	{r4, lr}
 8024656:	3901      	subs	r1, #1
 8024658:	4402      	add	r2, r0
 802465a:	4290      	cmp	r0, r2
 802465c:	d101      	bne.n	8024662 <memcmp+0xe>
 802465e:	2000      	movs	r0, #0
 8024660:	e005      	b.n	802466e <memcmp+0x1a>
 8024662:	7803      	ldrb	r3, [r0, #0]
 8024664:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8024668:	42a3      	cmp	r3, r4
 802466a:	d001      	beq.n	8024670 <memcmp+0x1c>
 802466c:	1b18      	subs	r0, r3, r4
 802466e:	bd10      	pop	{r4, pc}
 8024670:	3001      	adds	r0, #1
 8024672:	e7f2      	b.n	802465a <memcmp+0x6>

08024674 <memmove>:
 8024674:	4288      	cmp	r0, r1
 8024676:	b510      	push	{r4, lr}
 8024678:	eb01 0402 	add.w	r4, r1, r2
 802467c:	d902      	bls.n	8024684 <memmove+0x10>
 802467e:	4284      	cmp	r4, r0
 8024680:	4623      	mov	r3, r4
 8024682:	d807      	bhi.n	8024694 <memmove+0x20>
 8024684:	1e43      	subs	r3, r0, #1
 8024686:	42a1      	cmp	r1, r4
 8024688:	d007      	beq.n	802469a <memmove+0x26>
 802468a:	f811 2b01 	ldrb.w	r2, [r1], #1
 802468e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8024692:	e7f8      	b.n	8024686 <memmove+0x12>
 8024694:	4402      	add	r2, r0
 8024696:	4282      	cmp	r2, r0
 8024698:	d100      	bne.n	802469c <memmove+0x28>
 802469a:	bd10      	pop	{r4, pc}
 802469c:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 80246a0:	f802 1d01 	strb.w	r1, [r2, #-1]!
 80246a4:	e7f7      	b.n	8024696 <memmove+0x22>

080246a6 <memset>:
 80246a6:	4402      	add	r2, r0
 80246a8:	4603      	mov	r3, r0
 80246aa:	4293      	cmp	r3, r2
 80246ac:	d100      	bne.n	80246b0 <memset+0xa>
 80246ae:	4770      	bx	lr
 80246b0:	f803 1b01 	strb.w	r1, [r3], #1
 80246b4:	e7f9      	b.n	80246aa <memset+0x4>

080246b6 <strchr>:
 80246b6:	b2c9      	uxtb	r1, r1
 80246b8:	4603      	mov	r3, r0
 80246ba:	4618      	mov	r0, r3
 80246bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80246c0:	b112      	cbz	r2, 80246c8 <strchr+0x12>
 80246c2:	428a      	cmp	r2, r1
 80246c4:	d1f9      	bne.n	80246ba <strchr+0x4>
 80246c6:	4770      	bx	lr
 80246c8:	2900      	cmp	r1, #0
 80246ca:	bf18      	it	ne
 80246cc:	2000      	movne	r0, #0
 80246ce:	4770      	bx	lr

080246d0 <strncmp>:
 80246d0:	b510      	push	{r4, lr}
 80246d2:	b16a      	cbz	r2, 80246f0 <strncmp+0x20>
 80246d4:	3901      	subs	r1, #1
 80246d6:	1884      	adds	r4, r0, r2
 80246d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80246dc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80246e0:	429a      	cmp	r2, r3
 80246e2:	d103      	bne.n	80246ec <strncmp+0x1c>
 80246e4:	42a0      	cmp	r0, r4
 80246e6:	d001      	beq.n	80246ec <strncmp+0x1c>
 80246e8:	2a00      	cmp	r2, #0
 80246ea:	d1f5      	bne.n	80246d8 <strncmp+0x8>
 80246ec:	1ad0      	subs	r0, r2, r3
 80246ee:	bd10      	pop	{r4, pc}
 80246f0:	4610      	mov	r0, r2
 80246f2:	e7fc      	b.n	80246ee <strncmp+0x1e>

080246f4 <_raise_r>:
 80246f4:	291f      	cmp	r1, #31
 80246f6:	b538      	push	{r3, r4, r5, lr}
 80246f8:	4605      	mov	r5, r0
 80246fa:	460c      	mov	r4, r1
 80246fc:	d904      	bls.n	8024708 <_raise_r+0x14>
 80246fe:	2316      	movs	r3, #22
 8024700:	6003      	str	r3, [r0, #0]
 8024702:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8024706:	bd38      	pop	{r3, r4, r5, pc}
 8024708:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802470a:	b112      	cbz	r2, 8024712 <_raise_r+0x1e>
 802470c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8024710:	b94b      	cbnz	r3, 8024726 <_raise_r+0x32>
 8024712:	4628      	mov	r0, r5
 8024714:	f000 f868 	bl	80247e8 <_getpid_r>
 8024718:	4622      	mov	r2, r4
 802471a:	4601      	mov	r1, r0
 802471c:	4628      	mov	r0, r5
 802471e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024722:	f000 b84f 	b.w	80247c4 <_kill_r>
 8024726:	2b01      	cmp	r3, #1
 8024728:	d00a      	beq.n	8024740 <_raise_r+0x4c>
 802472a:	1c59      	adds	r1, r3, #1
 802472c:	d103      	bne.n	8024736 <_raise_r+0x42>
 802472e:	2316      	movs	r3, #22
 8024730:	6003      	str	r3, [r0, #0]
 8024732:	2001      	movs	r0, #1
 8024734:	e7e7      	b.n	8024706 <_raise_r+0x12>
 8024736:	2100      	movs	r1, #0
 8024738:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802473c:	4620      	mov	r0, r4
 802473e:	4798      	blx	r3
 8024740:	2000      	movs	r0, #0
 8024742:	e7e0      	b.n	8024706 <_raise_r+0x12>

08024744 <raise>:
 8024744:	4b02      	ldr	r3, [pc, #8]	@ (8024750 <raise+0xc>)
 8024746:	4601      	mov	r1, r0
 8024748:	6818      	ldr	r0, [r3, #0]
 802474a:	f7ff bfd3 	b.w	80246f4 <_raise_r>
 802474e:	bf00      	nop
 8024750:	20000438 	.word	0x20000438

08024754 <_localeconv_r>:
 8024754:	4800      	ldr	r0, [pc, #0]	@ (8024758 <_localeconv_r+0x4>)
 8024756:	4770      	bx	lr
 8024758:	2000057c 	.word	0x2000057c

0802475c <_close_r>:
 802475c:	b538      	push	{r3, r4, r5, lr}
 802475e:	4d06      	ldr	r5, [pc, #24]	@ (8024778 <_close_r+0x1c>)
 8024760:	2300      	movs	r3, #0
 8024762:	4604      	mov	r4, r0
 8024764:	4608      	mov	r0, r1
 8024766:	602b      	str	r3, [r5, #0]
 8024768:	f004 fe66 	bl	8029438 <_close>
 802476c:	1c43      	adds	r3, r0, #1
 802476e:	d102      	bne.n	8024776 <_close_r+0x1a>
 8024770:	682b      	ldr	r3, [r5, #0]
 8024772:	b103      	cbz	r3, 8024776 <_close_r+0x1a>
 8024774:	6023      	str	r3, [r4, #0]
 8024776:	bd38      	pop	{r3, r4, r5, pc}
 8024778:	2000d6c0 	.word	0x2000d6c0

0802477c <_lseek_r>:
 802477c:	b538      	push	{r3, r4, r5, lr}
 802477e:	4d07      	ldr	r5, [pc, #28]	@ (802479c <_lseek_r+0x20>)
 8024780:	4604      	mov	r4, r0
 8024782:	4608      	mov	r0, r1
 8024784:	4611      	mov	r1, r2
 8024786:	2200      	movs	r2, #0
 8024788:	602a      	str	r2, [r5, #0]
 802478a:	461a      	mov	r2, r3
 802478c:	f004 fe7c 	bl	8029488 <_lseek>
 8024790:	1c43      	adds	r3, r0, #1
 8024792:	d102      	bne.n	802479a <_lseek_r+0x1e>
 8024794:	682b      	ldr	r3, [r5, #0]
 8024796:	b103      	cbz	r3, 802479a <_lseek_r+0x1e>
 8024798:	6023      	str	r3, [r4, #0]
 802479a:	bd38      	pop	{r3, r4, r5, pc}
 802479c:	2000d6c0 	.word	0x2000d6c0

080247a0 <_read_r>:
 80247a0:	b538      	push	{r3, r4, r5, lr}
 80247a2:	4d07      	ldr	r5, [pc, #28]	@ (80247c0 <_read_r+0x20>)
 80247a4:	4604      	mov	r4, r0
 80247a6:	4608      	mov	r0, r1
 80247a8:	4611      	mov	r1, r2
 80247aa:	2200      	movs	r2, #0
 80247ac:	602a      	str	r2, [r5, #0]
 80247ae:	461a      	mov	r2, r3
 80247b0:	f004 fe72 	bl	8029498 <_read>
 80247b4:	1c43      	adds	r3, r0, #1
 80247b6:	d102      	bne.n	80247be <_read_r+0x1e>
 80247b8:	682b      	ldr	r3, [r5, #0]
 80247ba:	b103      	cbz	r3, 80247be <_read_r+0x1e>
 80247bc:	6023      	str	r3, [r4, #0]
 80247be:	bd38      	pop	{r3, r4, r5, pc}
 80247c0:	2000d6c0 	.word	0x2000d6c0

080247c4 <_kill_r>:
 80247c4:	b538      	push	{r3, r4, r5, lr}
 80247c6:	4d07      	ldr	r5, [pc, #28]	@ (80247e4 <_kill_r+0x20>)
 80247c8:	2300      	movs	r3, #0
 80247ca:	4604      	mov	r4, r0
 80247cc:	4608      	mov	r0, r1
 80247ce:	4611      	mov	r1, r2
 80247d0:	602b      	str	r3, [r5, #0]
 80247d2:	f004 fe51 	bl	8029478 <_kill>
 80247d6:	1c43      	adds	r3, r0, #1
 80247d8:	d102      	bne.n	80247e0 <_kill_r+0x1c>
 80247da:	682b      	ldr	r3, [r5, #0]
 80247dc:	b103      	cbz	r3, 80247e0 <_kill_r+0x1c>
 80247de:	6023      	str	r3, [r4, #0]
 80247e0:	bd38      	pop	{r3, r4, r5, pc}
 80247e2:	bf00      	nop
 80247e4:	2000d6c0 	.word	0x2000d6c0

080247e8 <_getpid_r>:
 80247e8:	f004 be36 	b.w	8029458 <_getpid>

080247ec <_sbrk_r>:
 80247ec:	b538      	push	{r3, r4, r5, lr}
 80247ee:	4d06      	ldr	r5, [pc, #24]	@ (8024808 <_sbrk_r+0x1c>)
 80247f0:	2300      	movs	r3, #0
 80247f2:	4604      	mov	r4, r0
 80247f4:	4608      	mov	r0, r1
 80247f6:	602b      	str	r3, [r5, #0]
 80247f8:	f7e6 fdaa 	bl	800b350 <_sbrk>
 80247fc:	1c43      	adds	r3, r0, #1
 80247fe:	d102      	bne.n	8024806 <_sbrk_r+0x1a>
 8024800:	682b      	ldr	r3, [r5, #0]
 8024802:	b103      	cbz	r3, 8024806 <_sbrk_r+0x1a>
 8024804:	6023      	str	r3, [r4, #0]
 8024806:	bd38      	pop	{r3, r4, r5, pc}
 8024808:	2000d6c0 	.word	0x2000d6c0

0802480c <_write_r>:
 802480c:	b538      	push	{r3, r4, r5, lr}
 802480e:	4d07      	ldr	r5, [pc, #28]	@ (802482c <_write_r+0x20>)
 8024810:	4604      	mov	r4, r0
 8024812:	4608      	mov	r0, r1
 8024814:	4611      	mov	r1, r2
 8024816:	2200      	movs	r2, #0
 8024818:	602a      	str	r2, [r5, #0]
 802481a:	461a      	mov	r2, r3
 802481c:	f7ef fc38 	bl	8014090 <_write>
 8024820:	1c43      	adds	r3, r0, #1
 8024822:	d102      	bne.n	802482a <_write_r+0x1e>
 8024824:	682b      	ldr	r3, [r5, #0]
 8024826:	b103      	cbz	r3, 802482a <_write_r+0x1e>
 8024828:	6023      	str	r3, [r4, #0]
 802482a:	bd38      	pop	{r3, r4, r5, pc}
 802482c:	2000d6c0 	.word	0x2000d6c0

08024830 <__errno>:
 8024830:	4b01      	ldr	r3, [pc, #4]	@ (8024838 <__errno+0x8>)
 8024832:	6818      	ldr	r0, [r3, #0]
 8024834:	4770      	bx	lr
 8024836:	bf00      	nop
 8024838:	20000438 	.word	0x20000438

0802483c <__libc_init_array>:
 802483c:	b570      	push	{r4, r5, r6, lr}
 802483e:	4b0d      	ldr	r3, [pc, #52]	@ (8024874 <__libc_init_array+0x38>)
 8024840:	4d0d      	ldr	r5, [pc, #52]	@ (8024878 <__libc_init_array+0x3c>)
 8024842:	1b5b      	subs	r3, r3, r5
 8024844:	109c      	asrs	r4, r3, #2
 8024846:	2600      	movs	r6, #0
 8024848:	42a6      	cmp	r6, r4
 802484a:	d109      	bne.n	8024860 <__libc_init_array+0x24>
 802484c:	f004 fe2e 	bl	80294ac <_init>
 8024850:	4d0a      	ldr	r5, [pc, #40]	@ (802487c <__libc_init_array+0x40>)
 8024852:	4b0b      	ldr	r3, [pc, #44]	@ (8024880 <__libc_init_array+0x44>)
 8024854:	1b5b      	subs	r3, r3, r5
 8024856:	109c      	asrs	r4, r3, #2
 8024858:	2600      	movs	r6, #0
 802485a:	42a6      	cmp	r6, r4
 802485c:	d105      	bne.n	802486a <__libc_init_array+0x2e>
 802485e:	bd70      	pop	{r4, r5, r6, pc}
 8024860:	f855 3b04 	ldr.w	r3, [r5], #4
 8024864:	4798      	blx	r3
 8024866:	3601      	adds	r6, #1
 8024868:	e7ee      	b.n	8024848 <__libc_init_array+0xc>
 802486a:	f855 3b04 	ldr.w	r3, [r5], #4
 802486e:	4798      	blx	r3
 8024870:	3601      	adds	r6, #1
 8024872:	e7f2      	b.n	802485a <__libc_init_array+0x1e>
 8024874:	08038970 	.word	0x08038970
 8024878:	08038970 	.word	0x08038970
 802487c:	08038970 	.word	0x08038970
 8024880:	08038994 	.word	0x08038994

08024884 <__retarget_lock_init_recursive>:
 8024884:	4770      	bx	lr

08024886 <__retarget_lock_acquire_recursive>:
 8024886:	4770      	bx	lr

08024888 <__retarget_lock_release_recursive>:
 8024888:	4770      	bx	lr

0802488a <memcpy>:
 802488a:	440a      	add	r2, r1
 802488c:	4291      	cmp	r1, r2
 802488e:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8024892:	d100      	bne.n	8024896 <memcpy+0xc>
 8024894:	4770      	bx	lr
 8024896:	b510      	push	{r4, lr}
 8024898:	f811 4b01 	ldrb.w	r4, [r1], #1
 802489c:	f803 4f01 	strb.w	r4, [r3, #1]!
 80248a0:	4291      	cmp	r1, r2
 80248a2:	d1f9      	bne.n	8024898 <memcpy+0xe>
 80248a4:	bd10      	pop	{r4, pc}
	...

080248a8 <nanf>:
 80248a8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80248b0 <nanf+0x8>
 80248ac:	4770      	bx	lr
 80248ae:	bf00      	nop
 80248b0:	7fc00000 	.word	0x7fc00000

080248b4 <quorem>:
 80248b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248b8:	6903      	ldr	r3, [r0, #16]
 80248ba:	690c      	ldr	r4, [r1, #16]
 80248bc:	42a3      	cmp	r3, r4
 80248be:	4607      	mov	r7, r0
 80248c0:	db7e      	blt.n	80249c0 <quorem+0x10c>
 80248c2:	3c01      	subs	r4, #1
 80248c4:	f101 0814 	add.w	r8, r1, #20
 80248c8:	00a3      	lsls	r3, r4, #2
 80248ca:	f100 0514 	add.w	r5, r0, #20
 80248ce:	9300      	str	r3, [sp, #0]
 80248d0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80248d4:	9301      	str	r3, [sp, #4]
 80248d6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80248da:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80248de:	3301      	adds	r3, #1
 80248e0:	429a      	cmp	r2, r3
 80248e2:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80248e6:	fbb2 f6f3 	udiv	r6, r2, r3
 80248ea:	d32e      	bcc.n	802494a <quorem+0x96>
 80248ec:	f04f 0a00 	mov.w	sl, #0
 80248f0:	46c4      	mov	ip, r8
 80248f2:	46ae      	mov	lr, r5
 80248f4:	46d3      	mov	fp, sl
 80248f6:	f85c 3b04 	ldr.w	r3, [ip], #4
 80248fa:	b298      	uxth	r0, r3
 80248fc:	fb06 a000 	mla	r0, r6, r0, sl
 8024900:	0c02      	lsrs	r2, r0, #16
 8024902:	0c1b      	lsrs	r3, r3, #16
 8024904:	fb06 2303 	mla	r3, r6, r3, r2
 8024908:	f8de 2000 	ldr.w	r2, [lr]
 802490c:	b280      	uxth	r0, r0
 802490e:	b292      	uxth	r2, r2
 8024910:	1a12      	subs	r2, r2, r0
 8024912:	445a      	add	r2, fp
 8024914:	f8de 0000 	ldr.w	r0, [lr]
 8024918:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 802491c:	b29b      	uxth	r3, r3
 802491e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8024922:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8024926:	b292      	uxth	r2, r2
 8024928:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 802492c:	45e1      	cmp	r9, ip
 802492e:	f84e 2b04 	str.w	r2, [lr], #4
 8024932:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8024936:	d2de      	bcs.n	80248f6 <quorem+0x42>
 8024938:	9b00      	ldr	r3, [sp, #0]
 802493a:	58eb      	ldr	r3, [r5, r3]
 802493c:	b92b      	cbnz	r3, 802494a <quorem+0x96>
 802493e:	9b01      	ldr	r3, [sp, #4]
 8024940:	3b04      	subs	r3, #4
 8024942:	429d      	cmp	r5, r3
 8024944:	461a      	mov	r2, r3
 8024946:	d32f      	bcc.n	80249a8 <quorem+0xf4>
 8024948:	613c      	str	r4, [r7, #16]
 802494a:	4638      	mov	r0, r7
 802494c:	f001 f938 	bl	8025bc0 <__mcmp>
 8024950:	2800      	cmp	r0, #0
 8024952:	db25      	blt.n	80249a0 <quorem+0xec>
 8024954:	4629      	mov	r1, r5
 8024956:	2000      	movs	r0, #0
 8024958:	f858 2b04 	ldr.w	r2, [r8], #4
 802495c:	f8d1 c000 	ldr.w	ip, [r1]
 8024960:	fa1f fe82 	uxth.w	lr, r2
 8024964:	fa1f f38c 	uxth.w	r3, ip
 8024968:	eba3 030e 	sub.w	r3, r3, lr
 802496c:	4403      	add	r3, r0
 802496e:	0c12      	lsrs	r2, r2, #16
 8024970:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8024974:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8024978:	b29b      	uxth	r3, r3
 802497a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802497e:	45c1      	cmp	r9, r8
 8024980:	f841 3b04 	str.w	r3, [r1], #4
 8024984:	ea4f 4022 	mov.w	r0, r2, asr #16
 8024988:	d2e6      	bcs.n	8024958 <quorem+0xa4>
 802498a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802498e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8024992:	b922      	cbnz	r2, 802499e <quorem+0xea>
 8024994:	3b04      	subs	r3, #4
 8024996:	429d      	cmp	r5, r3
 8024998:	461a      	mov	r2, r3
 802499a:	d30b      	bcc.n	80249b4 <quorem+0x100>
 802499c:	613c      	str	r4, [r7, #16]
 802499e:	3601      	adds	r6, #1
 80249a0:	4630      	mov	r0, r6
 80249a2:	b003      	add	sp, #12
 80249a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80249a8:	6812      	ldr	r2, [r2, #0]
 80249aa:	3b04      	subs	r3, #4
 80249ac:	2a00      	cmp	r2, #0
 80249ae:	d1cb      	bne.n	8024948 <quorem+0x94>
 80249b0:	3c01      	subs	r4, #1
 80249b2:	e7c6      	b.n	8024942 <quorem+0x8e>
 80249b4:	6812      	ldr	r2, [r2, #0]
 80249b6:	3b04      	subs	r3, #4
 80249b8:	2a00      	cmp	r2, #0
 80249ba:	d1ef      	bne.n	802499c <quorem+0xe8>
 80249bc:	3c01      	subs	r4, #1
 80249be:	e7ea      	b.n	8024996 <quorem+0xe2>
 80249c0:	2000      	movs	r0, #0
 80249c2:	e7ee      	b.n	80249a2 <quorem+0xee>
 80249c4:	0000      	movs	r0, r0
	...

080249c8 <_dtoa_r>:
 80249c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249cc:	b099      	sub	sp, #100	@ 0x64
 80249ce:	ed8d 0b0e 	vstr	d0, [sp, #56]	@ 0x38
 80249d2:	920c      	str	r2, [sp, #48]	@ 0x30
 80249d4:	69c2      	ldr	r2, [r0, #28]
 80249d6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80249d8:	910a      	str	r1, [sp, #40]	@ 0x28
 80249da:	ec57 6b10 	vmov	r6, r7, d0
 80249de:	4681      	mov	r9, r0
 80249e0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80249e2:	b982      	cbnz	r2, 8024a06 <_dtoa_r+0x3e>
 80249e4:	2010      	movs	r0, #16
 80249e6:	f7fe fc0b 	bl	8023200 <malloc>
 80249ea:	4602      	mov	r2, r0
 80249ec:	f8c9 001c 	str.w	r0, [r9, #28]
 80249f0:	b920      	cbnz	r0, 80249fc <_dtoa_r+0x34>
 80249f2:	4bad      	ldr	r3, [pc, #692]	@ (8024ca8 <_dtoa_r+0x2e0>)
 80249f4:	21ef      	movs	r1, #239	@ 0xef
 80249f6:	48ad      	ldr	r0, [pc, #692]	@ (8024cac <_dtoa_r+0x2e4>)
 80249f8:	f7fe fb9c 	bl	8023134 <__assert_func>
 80249fc:	2300      	movs	r3, #0
 80249fe:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8024a02:	6003      	str	r3, [r0, #0]
 8024a04:	60c3      	str	r3, [r0, #12]
 8024a06:	6811      	ldr	r1, [r2, #0]
 8024a08:	b159      	cbz	r1, 8024a22 <_dtoa_r+0x5a>
 8024a0a:	6852      	ldr	r2, [r2, #4]
 8024a0c:	604a      	str	r2, [r1, #4]
 8024a0e:	2301      	movs	r3, #1
 8024a10:	4093      	lsls	r3, r2
 8024a12:	608b      	str	r3, [r1, #8]
 8024a14:	4648      	mov	r0, r9
 8024a16:	f000 fe4b 	bl	80256b0 <_Bfree>
 8024a1a:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8024a1e:	2200      	movs	r2, #0
 8024a20:	601a      	str	r2, [r3, #0]
 8024a22:	f1b7 0800 	subs.w	r8, r7, #0
 8024a26:	bfb5      	itete	lt
 8024a28:	2301      	movlt	r3, #1
 8024a2a:	2300      	movge	r3, #0
 8024a2c:	6023      	strlt	r3, [r4, #0]
 8024a2e:	6023      	strge	r3, [r4, #0]
 8024a30:	4b9f      	ldr	r3, [pc, #636]	@ (8024cb0 <_dtoa_r+0x2e8>)
 8024a32:	bfbc      	itt	lt
 8024a34:	f028 4800 	biclt.w	r8, r8, #2147483648	@ 0x80000000
 8024a38:	f8cd 803c 	strlt.w	r8, [sp, #60]	@ 0x3c
 8024a3c:	ea33 0308 	bics.w	r3, r3, r8
 8024a40:	d11a      	bne.n	8024a78 <_dtoa_r+0xb0>
 8024a42:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8024a44:	f3c8 0813 	ubfx	r8, r8, #0, #20
 8024a48:	f242 730f 	movw	r3, #9999	@ 0x270f
 8024a4c:	ea58 0806 	orrs.w	r8, r8, r6
 8024a50:	6013      	str	r3, [r2, #0]
 8024a52:	f000 856c 	beq.w	802552e <_dtoa_r+0xb66>
 8024a56:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024a58:	b953      	cbnz	r3, 8024a70 <_dtoa_r+0xa8>
 8024a5a:	4b96      	ldr	r3, [pc, #600]	@ (8024cb4 <_dtoa_r+0x2ec>)
 8024a5c:	e021      	b.n	8024aa2 <_dtoa_r+0xda>
 8024a5e:	4b96      	ldr	r3, [pc, #600]	@ (8024cb8 <_dtoa_r+0x2f0>)
 8024a60:	9300      	str	r3, [sp, #0]
 8024a62:	3308      	adds	r3, #8
 8024a64:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8024a66:	6013      	str	r3, [r2, #0]
 8024a68:	9800      	ldr	r0, [sp, #0]
 8024a6a:	b019      	add	sp, #100	@ 0x64
 8024a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024a70:	4b90      	ldr	r3, [pc, #576]	@ (8024cb4 <_dtoa_r+0x2ec>)
 8024a72:	9300      	str	r3, [sp, #0]
 8024a74:	3303      	adds	r3, #3
 8024a76:	e7f5      	b.n	8024a64 <_dtoa_r+0x9c>
 8024a78:	ed9d 7b0e 	vldr	d7, [sp, #56]	@ 0x38
 8024a7c:	2200      	movs	r2, #0
 8024a7e:	ec51 0b17 	vmov	r0, r1, d7
 8024a82:	2300      	movs	r3, #0
 8024a84:	ed8d 7b06 	vstr	d7, [sp, #24]
 8024a88:	f7dc f80e 	bl	8000aa8 <__aeabi_dcmpeq>
 8024a8c:	4682      	mov	sl, r0
 8024a8e:	b150      	cbz	r0, 8024aa6 <_dtoa_r+0xde>
 8024a90:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8024a92:	2301      	movs	r3, #1
 8024a94:	6013      	str	r3, [r2, #0]
 8024a96:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024a98:	b113      	cbz	r3, 8024aa0 <_dtoa_r+0xd8>
 8024a9a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8024a9c:	4b87      	ldr	r3, [pc, #540]	@ (8024cbc <_dtoa_r+0x2f4>)
 8024a9e:	6013      	str	r3, [r2, #0]
 8024aa0:	4b87      	ldr	r3, [pc, #540]	@ (8024cc0 <_dtoa_r+0x2f8>)
 8024aa2:	9300      	str	r3, [sp, #0]
 8024aa4:	e7e0      	b.n	8024a68 <_dtoa_r+0xa0>
 8024aa6:	ed9d 0b06 	vldr	d0, [sp, #24]
 8024aaa:	aa16      	add	r2, sp, #88	@ 0x58
 8024aac:	a917      	add	r1, sp, #92	@ 0x5c
 8024aae:	4648      	mov	r0, r9
 8024ab0:	f001 f9aa 	bl	8025e08 <__d2b>
 8024ab4:	ea5f 5418 	movs.w	r4, r8, lsr #20
 8024ab8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8024aba:	9001      	str	r0, [sp, #4]
 8024abc:	d079      	beq.n	8024bb2 <_dtoa_r+0x1ea>
 8024abe:	9b07      	ldr	r3, [sp, #28]
 8024ac0:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
 8024ac4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8024ac8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024acc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8024ad0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8024ad4:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 8024ad8:	4619      	mov	r1, r3
 8024ada:	2200      	movs	r2, #0
 8024adc:	4b79      	ldr	r3, [pc, #484]	@ (8024cc4 <_dtoa_r+0x2fc>)
 8024ade:	f7db fbc3 	bl	8000268 <__aeabi_dsub>
 8024ae2:	a36b      	add	r3, pc, #428	@ (adr r3, 8024c90 <_dtoa_r+0x2c8>)
 8024ae4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024ae8:	f7db fd76 	bl	80005d8 <__aeabi_dmul>
 8024aec:	a36a      	add	r3, pc, #424	@ (adr r3, 8024c98 <_dtoa_r+0x2d0>)
 8024aee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024af2:	f7db fbbb 	bl	800026c <__adddf3>
 8024af6:	4606      	mov	r6, r0
 8024af8:	4620      	mov	r0, r4
 8024afa:	460f      	mov	r7, r1
 8024afc:	f7db fd02 	bl	8000504 <__aeabi_i2d>
 8024b00:	a367      	add	r3, pc, #412	@ (adr r3, 8024ca0 <_dtoa_r+0x2d8>)
 8024b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024b06:	f7db fd67 	bl	80005d8 <__aeabi_dmul>
 8024b0a:	4602      	mov	r2, r0
 8024b0c:	460b      	mov	r3, r1
 8024b0e:	4630      	mov	r0, r6
 8024b10:	4639      	mov	r1, r7
 8024b12:	f7db fbab 	bl	800026c <__adddf3>
 8024b16:	4606      	mov	r6, r0
 8024b18:	460f      	mov	r7, r1
 8024b1a:	f7dc f80d 	bl	8000b38 <__aeabi_d2iz>
 8024b1e:	2200      	movs	r2, #0
 8024b20:	4680      	mov	r8, r0
 8024b22:	2300      	movs	r3, #0
 8024b24:	4630      	mov	r0, r6
 8024b26:	4639      	mov	r1, r7
 8024b28:	f7db ffc8 	bl	8000abc <__aeabi_dcmplt>
 8024b2c:	b148      	cbz	r0, 8024b42 <_dtoa_r+0x17a>
 8024b2e:	4640      	mov	r0, r8
 8024b30:	f7db fce8 	bl	8000504 <__aeabi_i2d>
 8024b34:	4632      	mov	r2, r6
 8024b36:	463b      	mov	r3, r7
 8024b38:	f7db ffb6 	bl	8000aa8 <__aeabi_dcmpeq>
 8024b3c:	b908      	cbnz	r0, 8024b42 <_dtoa_r+0x17a>
 8024b3e:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8024b42:	f1b8 0f16 	cmp.w	r8, #22
 8024b46:	d851      	bhi.n	8024bec <_dtoa_r+0x224>
 8024b48:	4b5f      	ldr	r3, [pc, #380]	@ (8024cc8 <_dtoa_r+0x300>)
 8024b4a:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8024b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024b52:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024b56:	f7db ffb1 	bl	8000abc <__aeabi_dcmplt>
 8024b5a:	2800      	cmp	r0, #0
 8024b5c:	d048      	beq.n	8024bf0 <_dtoa_r+0x228>
 8024b5e:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8024b62:	2300      	movs	r3, #0
 8024b64:	9312      	str	r3, [sp, #72]	@ 0x48
 8024b66:	1b2d      	subs	r5, r5, r4
 8024b68:	1e6b      	subs	r3, r5, #1
 8024b6a:	9308      	str	r3, [sp, #32]
 8024b6c:	bf43      	ittte	mi
 8024b6e:	2300      	movmi	r3, #0
 8024b70:	f1c5 0701 	rsbmi	r7, r5, #1
 8024b74:	9308      	strmi	r3, [sp, #32]
 8024b76:	2700      	movpl	r7, #0
 8024b78:	f1b8 0f00 	cmp.w	r8, #0
 8024b7c:	db3a      	blt.n	8024bf4 <_dtoa_r+0x22c>
 8024b7e:	9b08      	ldr	r3, [sp, #32]
 8024b80:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
 8024b84:	4443      	add	r3, r8
 8024b86:	9308      	str	r3, [sp, #32]
 8024b88:	2300      	movs	r3, #0
 8024b8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8024b8c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024b8e:	2b09      	cmp	r3, #9
 8024b90:	d864      	bhi.n	8024c5c <_dtoa_r+0x294>
 8024b92:	2b05      	cmp	r3, #5
 8024b94:	bfc4      	itt	gt
 8024b96:	3b04      	subgt	r3, #4
 8024b98:	930a      	strgt	r3, [sp, #40]	@ 0x28
 8024b9a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024b9c:	f1a3 0302 	sub.w	r3, r3, #2
 8024ba0:	bfcc      	ite	gt
 8024ba2:	2400      	movgt	r4, #0
 8024ba4:	2401      	movle	r4, #1
 8024ba6:	2b03      	cmp	r3, #3
 8024ba8:	d864      	bhi.n	8024c74 <_dtoa_r+0x2ac>
 8024baa:	e8df f003 	tbb	[pc, r3]
 8024bae:	5553      	.short	0x5553
 8024bb0:	2b36      	.short	0x2b36
 8024bb2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8024bb4:	442c      	add	r4, r5
 8024bb6:	f204 4332 	addw	r3, r4, #1074	@ 0x432
 8024bba:	2b20      	cmp	r3, #32
 8024bbc:	bfc1      	itttt	gt
 8024bbe:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8024bc2:	fa08 f803 	lslgt.w	r8, r8, r3
 8024bc6:	f204 4312 	addwgt	r3, r4, #1042	@ 0x412
 8024bca:	fa26 f303 	lsrgt.w	r3, r6, r3
 8024bce:	bfd6      	itet	le
 8024bd0:	f1c3 0320 	rsble	r3, r3, #32
 8024bd4:	ea48 0003 	orrgt.w	r0, r8, r3
 8024bd8:	fa06 f003 	lslle.w	r0, r6, r3
 8024bdc:	f7db fc82 	bl	80004e4 <__aeabi_ui2d>
 8024be0:	2201      	movs	r2, #1
 8024be2:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8024be6:	3c01      	subs	r4, #1
 8024be8:	9214      	str	r2, [sp, #80]	@ 0x50
 8024bea:	e775      	b.n	8024ad8 <_dtoa_r+0x110>
 8024bec:	2301      	movs	r3, #1
 8024bee:	e7b9      	b.n	8024b64 <_dtoa_r+0x19c>
 8024bf0:	9012      	str	r0, [sp, #72]	@ 0x48
 8024bf2:	e7b8      	b.n	8024b66 <_dtoa_r+0x19e>
 8024bf4:	f1c8 0300 	rsb	r3, r8, #0
 8024bf8:	9309      	str	r3, [sp, #36]	@ 0x24
 8024bfa:	2300      	movs	r3, #0
 8024bfc:	eba7 0708 	sub.w	r7, r7, r8
 8024c00:	930d      	str	r3, [sp, #52]	@ 0x34
 8024c02:	e7c3      	b.n	8024b8c <_dtoa_r+0x1c4>
 8024c04:	2301      	movs	r3, #1
 8024c06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024c08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c0a:	4443      	add	r3, r8
 8024c0c:	9305      	str	r3, [sp, #20]
 8024c0e:	3301      	adds	r3, #1
 8024c10:	2b01      	cmp	r3, #1
 8024c12:	9304      	str	r3, [sp, #16]
 8024c14:	bfb8      	it	lt
 8024c16:	2301      	movlt	r3, #1
 8024c18:	e006      	b.n	8024c28 <_dtoa_r+0x260>
 8024c1a:	2301      	movs	r3, #1
 8024c1c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024c1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024c20:	2b00      	cmp	r3, #0
 8024c22:	dd2a      	ble.n	8024c7a <_dtoa_r+0x2b2>
 8024c24:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8024c28:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8024c2c:	2100      	movs	r1, #0
 8024c2e:	2204      	movs	r2, #4
 8024c30:	f102 0514 	add.w	r5, r2, #20
 8024c34:	429d      	cmp	r5, r3
 8024c36:	f101 0601 	add.w	r6, r1, #1
 8024c3a:	d923      	bls.n	8024c84 <_dtoa_r+0x2bc>
 8024c3c:	6041      	str	r1, [r0, #4]
 8024c3e:	4648      	mov	r0, r9
 8024c40:	f000 fcf8 	bl	8025634 <_Balloc>
 8024c44:	9000      	str	r0, [sp, #0]
 8024c46:	2800      	cmp	r0, #0
 8024c48:	d142      	bne.n	8024cd0 <_dtoa_r+0x308>
 8024c4a:	4b20      	ldr	r3, [pc, #128]	@ (8024ccc <_dtoa_r+0x304>)
 8024c4c:	4602      	mov	r2, r0
 8024c4e:	f240 11af 	movw	r1, #431	@ 0x1af
 8024c52:	e6d0      	b.n	80249f6 <_dtoa_r+0x2e>
 8024c54:	2300      	movs	r3, #0
 8024c56:	e7e1      	b.n	8024c1c <_dtoa_r+0x254>
 8024c58:	2300      	movs	r3, #0
 8024c5a:	e7d4      	b.n	8024c06 <_dtoa_r+0x23e>
 8024c5c:	2401      	movs	r4, #1
 8024c5e:	2300      	movs	r3, #0
 8024c60:	e9cd 340a 	strd	r3, r4, [sp, #40]	@ 0x28
 8024c64:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8024c68:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8024c6c:	2200      	movs	r2, #0
 8024c6e:	2312      	movs	r3, #18
 8024c70:	920c      	str	r2, [sp, #48]	@ 0x30
 8024c72:	e7d9      	b.n	8024c28 <_dtoa_r+0x260>
 8024c74:	2301      	movs	r3, #1
 8024c76:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024c78:	e7f4      	b.n	8024c64 <_dtoa_r+0x29c>
 8024c7a:	2301      	movs	r3, #1
 8024c7c:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8024c80:	461a      	mov	r2, r3
 8024c82:	e7f5      	b.n	8024c70 <_dtoa_r+0x2a8>
 8024c84:	0052      	lsls	r2, r2, #1
 8024c86:	4631      	mov	r1, r6
 8024c88:	e7d2      	b.n	8024c30 <_dtoa_r+0x268>
 8024c8a:	bf00      	nop
 8024c8c:	f3af 8000 	nop.w
 8024c90:	636f4361 	.word	0x636f4361
 8024c94:	3fd287a7 	.word	0x3fd287a7
 8024c98:	8b60c8b3 	.word	0x8b60c8b3
 8024c9c:	3fc68a28 	.word	0x3fc68a28
 8024ca0:	509f79fb 	.word	0x509f79fb
 8024ca4:	3fd34413 	.word	0x3fd34413
 8024ca8:	0802b155 	.word	0x0802b155
 8024cac:	0802b16c 	.word	0x0802b16c
 8024cb0:	7ff00000 	.word	0x7ff00000
 8024cb4:	0802b151 	.word	0x0802b151
 8024cb8:	0802b148 	.word	0x0802b148
 8024cbc:	0802b25a 	.word	0x0802b25a
 8024cc0:	0802b259 	.word	0x0802b259
 8024cc4:	3ff80000 	.word	0x3ff80000
 8024cc8:	08037a58 	.word	0x08037a58
 8024ccc:	0802b1c5 	.word	0x0802b1c5
 8024cd0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8024cd4:	9a00      	ldr	r2, [sp, #0]
 8024cd6:	601a      	str	r2, [r3, #0]
 8024cd8:	9b04      	ldr	r3, [sp, #16]
 8024cda:	2b0e      	cmp	r3, #14
 8024cdc:	f200 80a1 	bhi.w	8024e22 <_dtoa_r+0x45a>
 8024ce0:	2c00      	cmp	r4, #0
 8024ce2:	f000 809e 	beq.w	8024e22 <_dtoa_r+0x45a>
 8024ce6:	f1b8 0f00 	cmp.w	r8, #0
 8024cea:	dd36      	ble.n	8024d5a <_dtoa_r+0x392>
 8024cec:	4b9e      	ldr	r3, [pc, #632]	@ (8024f68 <_dtoa_r+0x5a0>)
 8024cee:	f008 020f 	and.w	r2, r8, #15
 8024cf2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024cf6:	f418 7f80 	tst.w	r8, #256	@ 0x100
 8024cfa:	e9d3 ab00 	ldrd	sl, fp, [r3]
 8024cfe:	ea4f 1528 	mov.w	r5, r8, asr #4
 8024d02:	d016      	beq.n	8024d32 <_dtoa_r+0x36a>
 8024d04:	4b99      	ldr	r3, [pc, #612]	@ (8024f6c <_dtoa_r+0x5a4>)
 8024d06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024d0a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8024d0e:	f7db fd8d 	bl	800082c <__aeabi_ddiv>
 8024d12:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8024d16:	f005 050f 	and.w	r5, r5, #15
 8024d1a:	2403      	movs	r4, #3
 8024d1c:	4e93      	ldr	r6, [pc, #588]	@ (8024f6c <_dtoa_r+0x5a4>)
 8024d1e:	b975      	cbnz	r5, 8024d3e <_dtoa_r+0x376>
 8024d20:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024d24:	4652      	mov	r2, sl
 8024d26:	465b      	mov	r3, fp
 8024d28:	f7db fd80 	bl	800082c <__aeabi_ddiv>
 8024d2c:	4682      	mov	sl, r0
 8024d2e:	468b      	mov	fp, r1
 8024d30:	e02d      	b.n	8024d8e <_dtoa_r+0x3c6>
 8024d32:	ed9d 7b06 	vldr	d7, [sp, #24]
 8024d36:	2402      	movs	r4, #2
 8024d38:	ed8d 7b02 	vstr	d7, [sp, #8]
 8024d3c:	e7ee      	b.n	8024d1c <_dtoa_r+0x354>
 8024d3e:	07e9      	lsls	r1, r5, #31
 8024d40:	d508      	bpl.n	8024d54 <_dtoa_r+0x38c>
 8024d42:	4650      	mov	r0, sl
 8024d44:	4659      	mov	r1, fp
 8024d46:	e9d6 2300 	ldrd	r2, r3, [r6]
 8024d4a:	f7db fc45 	bl	80005d8 <__aeabi_dmul>
 8024d4e:	3401      	adds	r4, #1
 8024d50:	4682      	mov	sl, r0
 8024d52:	468b      	mov	fp, r1
 8024d54:	106d      	asrs	r5, r5, #1
 8024d56:	3608      	adds	r6, #8
 8024d58:	e7e1      	b.n	8024d1e <_dtoa_r+0x356>
 8024d5a:	f000 80ad 	beq.w	8024eb8 <_dtoa_r+0x4f0>
 8024d5e:	f1c8 0500 	rsb	r5, r8, #0
 8024d62:	4b81      	ldr	r3, [pc, #516]	@ (8024f68 <_dtoa_r+0x5a0>)
 8024d64:	4e81      	ldr	r6, [pc, #516]	@ (8024f6c <_dtoa_r+0x5a4>)
 8024d66:	f005 020f 	and.w	r2, r5, #15
 8024d6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024d6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024d72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024d76:	f7db fc2f 	bl	80005d8 <__aeabi_dmul>
 8024d7a:	112d      	asrs	r5, r5, #4
 8024d7c:	4682      	mov	sl, r0
 8024d7e:	468b      	mov	fp, r1
 8024d80:	2300      	movs	r3, #0
 8024d82:	2402      	movs	r4, #2
 8024d84:	2d00      	cmp	r5, #0
 8024d86:	f040 808c 	bne.w	8024ea2 <_dtoa_r+0x4da>
 8024d8a:	2b00      	cmp	r3, #0
 8024d8c:	d1ce      	bne.n	8024d2c <_dtoa_r+0x364>
 8024d8e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8024d90:	2b00      	cmp	r3, #0
 8024d92:	f000 8095 	beq.w	8024ec0 <_dtoa_r+0x4f8>
 8024d96:	4b76      	ldr	r3, [pc, #472]	@ (8024f70 <_dtoa_r+0x5a8>)
 8024d98:	2200      	movs	r2, #0
 8024d9a:	4650      	mov	r0, sl
 8024d9c:	4659      	mov	r1, fp
 8024d9e:	f7db fe8d 	bl	8000abc <__aeabi_dcmplt>
 8024da2:	2800      	cmp	r0, #0
 8024da4:	f000 808c 	beq.w	8024ec0 <_dtoa_r+0x4f8>
 8024da8:	9b04      	ldr	r3, [sp, #16]
 8024daa:	2b00      	cmp	r3, #0
 8024dac:	f000 8088 	beq.w	8024ec0 <_dtoa_r+0x4f8>
 8024db0:	9b05      	ldr	r3, [sp, #20]
 8024db2:	2b00      	cmp	r3, #0
 8024db4:	dd35      	ble.n	8024e22 <_dtoa_r+0x45a>
 8024db6:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8024dba:	9302      	str	r3, [sp, #8]
 8024dbc:	4650      	mov	r0, sl
 8024dbe:	4659      	mov	r1, fp
 8024dc0:	4b6c      	ldr	r3, [pc, #432]	@ (8024f74 <_dtoa_r+0x5ac>)
 8024dc2:	2200      	movs	r2, #0
 8024dc4:	f7db fc08 	bl	80005d8 <__aeabi_dmul>
 8024dc8:	9e05      	ldr	r6, [sp, #20]
 8024dca:	4682      	mov	sl, r0
 8024dcc:	468b      	mov	fp, r1
 8024dce:	3401      	adds	r4, #1
 8024dd0:	4620      	mov	r0, r4
 8024dd2:	f7db fb97 	bl	8000504 <__aeabi_i2d>
 8024dd6:	4652      	mov	r2, sl
 8024dd8:	465b      	mov	r3, fp
 8024dda:	f7db fbfd 	bl	80005d8 <__aeabi_dmul>
 8024dde:	4b66      	ldr	r3, [pc, #408]	@ (8024f78 <_dtoa_r+0x5b0>)
 8024de0:	2200      	movs	r2, #0
 8024de2:	f7db fa43 	bl	800026c <__adddf3>
 8024de6:	4604      	mov	r4, r0
 8024de8:	f1a1 7550 	sub.w	r5, r1, #54525952	@ 0x3400000
 8024dec:	e9cd 4510 	strd	r4, r5, [sp, #64]	@ 0x40
 8024df0:	2e00      	cmp	r6, #0
 8024df2:	d169      	bne.n	8024ec8 <_dtoa_r+0x500>
 8024df4:	4b61      	ldr	r3, [pc, #388]	@ (8024f7c <_dtoa_r+0x5b4>)
 8024df6:	2200      	movs	r2, #0
 8024df8:	4650      	mov	r0, sl
 8024dfa:	4659      	mov	r1, fp
 8024dfc:	f7db fa34 	bl	8000268 <__aeabi_dsub>
 8024e00:	4622      	mov	r2, r4
 8024e02:	462b      	mov	r3, r5
 8024e04:	4682      	mov	sl, r0
 8024e06:	468b      	mov	fp, r1
 8024e08:	f7db fe76 	bl	8000af8 <__aeabi_dcmpgt>
 8024e0c:	2800      	cmp	r0, #0
 8024e0e:	f040 8294 	bne.w	802533a <_dtoa_r+0x972>
 8024e12:	4622      	mov	r2, r4
 8024e14:	f105 4300 	add.w	r3, r5, #2147483648	@ 0x80000000
 8024e18:	4650      	mov	r0, sl
 8024e1a:	4659      	mov	r1, fp
 8024e1c:	f7db fe4e 	bl	8000abc <__aeabi_dcmplt>
 8024e20:	bb20      	cbnz	r0, 8024e6c <_dtoa_r+0x4a4>
 8024e22:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024e24:	2b00      	cmp	r3, #0
 8024e26:	f2c0 8160 	blt.w	80250ea <_dtoa_r+0x722>
 8024e2a:	f1b8 0f0e 	cmp.w	r8, #14
 8024e2e:	f300 815c 	bgt.w	80250ea <_dtoa_r+0x722>
 8024e32:	4b4d      	ldr	r3, [pc, #308]	@ (8024f68 <_dtoa_r+0x5a0>)
 8024e34:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8024e38:	e9d3 ab00 	ldrd	sl, fp, [r3]
 8024e3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024e3e:	2b00      	cmp	r3, #0
 8024e40:	f280 80ee 	bge.w	8025020 <_dtoa_r+0x658>
 8024e44:	9b04      	ldr	r3, [sp, #16]
 8024e46:	2b00      	cmp	r3, #0
 8024e48:	f300 80ea 	bgt.w	8025020 <_dtoa_r+0x658>
 8024e4c:	d10e      	bne.n	8024e6c <_dtoa_r+0x4a4>
 8024e4e:	4b4b      	ldr	r3, [pc, #300]	@ (8024f7c <_dtoa_r+0x5b4>)
 8024e50:	2200      	movs	r2, #0
 8024e52:	4650      	mov	r0, sl
 8024e54:	4659      	mov	r1, fp
 8024e56:	f7db fbbf 	bl	80005d8 <__aeabi_dmul>
 8024e5a:	4602      	mov	r2, r0
 8024e5c:	460b      	mov	r3, r1
 8024e5e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024e62:	f7db fe35 	bl	8000ad0 <__aeabi_dcmple>
 8024e66:	2800      	cmp	r0, #0
 8024e68:	f000 826a 	beq.w	8025340 <_dtoa_r+0x978>
 8024e6c:	2500      	movs	r5, #0
 8024e6e:	462c      	mov	r4, r5
 8024e70:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024e72:	9e00      	ldr	r6, [sp, #0]
 8024e74:	43db      	mvns	r3, r3
 8024e76:	9302      	str	r3, [sp, #8]
 8024e78:	4627      	mov	r7, r4
 8024e7a:	2400      	movs	r4, #0
 8024e7c:	4629      	mov	r1, r5
 8024e7e:	4648      	mov	r0, r9
 8024e80:	f000 fc16 	bl	80256b0 <_Bfree>
 8024e84:	2f00      	cmp	r7, #0
 8024e86:	f000 80c1 	beq.w	802500c <_dtoa_r+0x644>
 8024e8a:	b12c      	cbz	r4, 8024e98 <_dtoa_r+0x4d0>
 8024e8c:	42bc      	cmp	r4, r7
 8024e8e:	d003      	beq.n	8024e98 <_dtoa_r+0x4d0>
 8024e90:	4621      	mov	r1, r4
 8024e92:	4648      	mov	r0, r9
 8024e94:	f000 fc0c 	bl	80256b0 <_Bfree>
 8024e98:	4639      	mov	r1, r7
 8024e9a:	4648      	mov	r0, r9
 8024e9c:	f000 fc08 	bl	80256b0 <_Bfree>
 8024ea0:	e0b4      	b.n	802500c <_dtoa_r+0x644>
 8024ea2:	07ea      	lsls	r2, r5, #31
 8024ea4:	d505      	bpl.n	8024eb2 <_dtoa_r+0x4ea>
 8024ea6:	e9d6 2300 	ldrd	r2, r3, [r6]
 8024eaa:	f7db fb95 	bl	80005d8 <__aeabi_dmul>
 8024eae:	3401      	adds	r4, #1
 8024eb0:	2301      	movs	r3, #1
 8024eb2:	106d      	asrs	r5, r5, #1
 8024eb4:	3608      	adds	r6, #8
 8024eb6:	e765      	b.n	8024d84 <_dtoa_r+0x3bc>
 8024eb8:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
 8024ebc:	2402      	movs	r4, #2
 8024ebe:	e766      	b.n	8024d8e <_dtoa_r+0x3c6>
 8024ec0:	9e04      	ldr	r6, [sp, #16]
 8024ec2:	f8cd 8008 	str.w	r8, [sp, #8]
 8024ec6:	e783      	b.n	8024dd0 <_dtoa_r+0x408>
 8024ec8:	4b27      	ldr	r3, [pc, #156]	@ (8024f68 <_dtoa_r+0x5a0>)
 8024eca:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8024ece:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8024ed2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8024ed4:	2b00      	cmp	r3, #0
 8024ed6:	d055      	beq.n	8024f84 <_dtoa_r+0x5bc>
 8024ed8:	4602      	mov	r2, r0
 8024eda:	460b      	mov	r3, r1
 8024edc:	2000      	movs	r0, #0
 8024ede:	4928      	ldr	r1, [pc, #160]	@ (8024f80 <_dtoa_r+0x5b8>)
 8024ee0:	f7db fca4 	bl	800082c <__aeabi_ddiv>
 8024ee4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8024ee8:	f7db f9be 	bl	8000268 <__aeabi_dsub>
 8024eec:	9b00      	ldr	r3, [sp, #0]
 8024eee:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8024ef2:	199d      	adds	r5, r3, r6
 8024ef4:	461e      	mov	r6, r3
 8024ef6:	4659      	mov	r1, fp
 8024ef8:	4650      	mov	r0, sl
 8024efa:	f7db fe1d 	bl	8000b38 <__aeabi_d2iz>
 8024efe:	4604      	mov	r4, r0
 8024f00:	f7db fb00 	bl	8000504 <__aeabi_i2d>
 8024f04:	4602      	mov	r2, r0
 8024f06:	460b      	mov	r3, r1
 8024f08:	4650      	mov	r0, sl
 8024f0a:	4659      	mov	r1, fp
 8024f0c:	f7db f9ac 	bl	8000268 <__aeabi_dsub>
 8024f10:	3430      	adds	r4, #48	@ 0x30
 8024f12:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8024f16:	f806 4b01 	strb.w	r4, [r6], #1
 8024f1a:	4682      	mov	sl, r0
 8024f1c:	468b      	mov	fp, r1
 8024f1e:	f7db fdcd 	bl	8000abc <__aeabi_dcmplt>
 8024f22:	2800      	cmp	r0, #0
 8024f24:	d172      	bne.n	802500c <_dtoa_r+0x644>
 8024f26:	4652      	mov	r2, sl
 8024f28:	465b      	mov	r3, fp
 8024f2a:	4911      	ldr	r1, [pc, #68]	@ (8024f70 <_dtoa_r+0x5a8>)
 8024f2c:	2000      	movs	r0, #0
 8024f2e:	f7db f99b 	bl	8000268 <__aeabi_dsub>
 8024f32:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8024f36:	f7db fdc1 	bl	8000abc <__aeabi_dcmplt>
 8024f3a:	2800      	cmp	r0, #0
 8024f3c:	f040 80b6 	bne.w	80250ac <_dtoa_r+0x6e4>
 8024f40:	42ae      	cmp	r6, r5
 8024f42:	f43f af6e 	beq.w	8024e22 <_dtoa_r+0x45a>
 8024f46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8024f4a:	4b0a      	ldr	r3, [pc, #40]	@ (8024f74 <_dtoa_r+0x5ac>)
 8024f4c:	2200      	movs	r2, #0
 8024f4e:	f7db fb43 	bl	80005d8 <__aeabi_dmul>
 8024f52:	4b08      	ldr	r3, [pc, #32]	@ (8024f74 <_dtoa_r+0x5ac>)
 8024f54:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8024f58:	2200      	movs	r2, #0
 8024f5a:	4650      	mov	r0, sl
 8024f5c:	4659      	mov	r1, fp
 8024f5e:	f7db fb3b 	bl	80005d8 <__aeabi_dmul>
 8024f62:	4682      	mov	sl, r0
 8024f64:	468b      	mov	fp, r1
 8024f66:	e7c6      	b.n	8024ef6 <_dtoa_r+0x52e>
 8024f68:	08037a58 	.word	0x08037a58
 8024f6c:	08037a30 	.word	0x08037a30
 8024f70:	3ff00000 	.word	0x3ff00000
 8024f74:	40240000 	.word	0x40240000
 8024f78:	401c0000 	.word	0x401c0000
 8024f7c:	40140000 	.word	0x40140000
 8024f80:	3fe00000 	.word	0x3fe00000
 8024f84:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8024f88:	f7db fb26 	bl	80005d8 <__aeabi_dmul>
 8024f8c:	9b00      	ldr	r3, [sp, #0]
 8024f8e:	9d00      	ldr	r5, [sp, #0]
 8024f90:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8024f94:	4433      	add	r3, r6
 8024f96:	9315      	str	r3, [sp, #84]	@ 0x54
 8024f98:	4659      	mov	r1, fp
 8024f9a:	4650      	mov	r0, sl
 8024f9c:	f7db fdcc 	bl	8000b38 <__aeabi_d2iz>
 8024fa0:	4604      	mov	r4, r0
 8024fa2:	f7db faaf 	bl	8000504 <__aeabi_i2d>
 8024fa6:	3430      	adds	r4, #48	@ 0x30
 8024fa8:	460b      	mov	r3, r1
 8024faa:	4602      	mov	r2, r0
 8024fac:	4659      	mov	r1, fp
 8024fae:	4650      	mov	r0, sl
 8024fb0:	f7db f95a 	bl	8000268 <__aeabi_dsub>
 8024fb4:	f805 4b01 	strb.w	r4, [r5], #1
 8024fb8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8024fba:	429d      	cmp	r5, r3
 8024fbc:	4682      	mov	sl, r0
 8024fbe:	468b      	mov	fp, r1
 8024fc0:	d127      	bne.n	8025012 <_dtoa_r+0x64a>
 8024fc2:	9b00      	ldr	r3, [sp, #0]
 8024fc4:	2200      	movs	r2, #0
 8024fc6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8024fca:	441e      	add	r6, r3
 8024fcc:	4bb3      	ldr	r3, [pc, #716]	@ (802529c <_dtoa_r+0x8d4>)
 8024fce:	f7db f94d 	bl	800026c <__adddf3>
 8024fd2:	4602      	mov	r2, r0
 8024fd4:	460b      	mov	r3, r1
 8024fd6:	4650      	mov	r0, sl
 8024fd8:	4659      	mov	r1, fp
 8024fda:	f7db fd8d 	bl	8000af8 <__aeabi_dcmpgt>
 8024fde:	2800      	cmp	r0, #0
 8024fe0:	d164      	bne.n	80250ac <_dtoa_r+0x6e4>
 8024fe2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8024fe6:	49ad      	ldr	r1, [pc, #692]	@ (802529c <_dtoa_r+0x8d4>)
 8024fe8:	2000      	movs	r0, #0
 8024fea:	f7db f93d 	bl	8000268 <__aeabi_dsub>
 8024fee:	4602      	mov	r2, r0
 8024ff0:	460b      	mov	r3, r1
 8024ff2:	4650      	mov	r0, sl
 8024ff4:	4659      	mov	r1, fp
 8024ff6:	f7db fd61 	bl	8000abc <__aeabi_dcmplt>
 8024ffa:	2800      	cmp	r0, #0
 8024ffc:	f43f af11 	beq.w	8024e22 <_dtoa_r+0x45a>
 8025000:	4633      	mov	r3, r6
 8025002:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8025006:	2a30      	cmp	r2, #48	@ 0x30
 8025008:	d0fa      	beq.n	8025000 <_dtoa_r+0x638>
 802500a:	461e      	mov	r6, r3
 802500c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8025010:	e03a      	b.n	8025088 <_dtoa_r+0x6c0>
 8025012:	4ba3      	ldr	r3, [pc, #652]	@ (80252a0 <_dtoa_r+0x8d8>)
 8025014:	2200      	movs	r2, #0
 8025016:	f7db fadf 	bl	80005d8 <__aeabi_dmul>
 802501a:	4682      	mov	sl, r0
 802501c:	468b      	mov	fp, r1
 802501e:	e7bb      	b.n	8024f98 <_dtoa_r+0x5d0>
 8025020:	9e00      	ldr	r6, [sp, #0]
 8025022:	4652      	mov	r2, sl
 8025024:	465b      	mov	r3, fp
 8025026:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802502a:	f7db fbff 	bl	800082c <__aeabi_ddiv>
 802502e:	f7db fd83 	bl	8000b38 <__aeabi_d2iz>
 8025032:	4607      	mov	r7, r0
 8025034:	f7db fa66 	bl	8000504 <__aeabi_i2d>
 8025038:	4652      	mov	r2, sl
 802503a:	465b      	mov	r3, fp
 802503c:	f7db facc 	bl	80005d8 <__aeabi_dmul>
 8025040:	4602      	mov	r2, r0
 8025042:	460b      	mov	r3, r1
 8025044:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8025048:	f7db f90e 	bl	8000268 <__aeabi_dsub>
 802504c:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
 8025050:	9c00      	ldr	r4, [sp, #0]
 8025052:	f806 cb01 	strb.w	ip, [r6], #1
 8025056:	eba6 0c04 	sub.w	ip, r6, r4
 802505a:	9c04      	ldr	r4, [sp, #16]
 802505c:	4564      	cmp	r4, ip
 802505e:	4602      	mov	r2, r0
 8025060:	460b      	mov	r3, r1
 8025062:	d133      	bne.n	80250cc <_dtoa_r+0x704>
 8025064:	f7db f902 	bl	800026c <__adddf3>
 8025068:	4652      	mov	r2, sl
 802506a:	465b      	mov	r3, fp
 802506c:	4604      	mov	r4, r0
 802506e:	460d      	mov	r5, r1
 8025070:	f7db fd42 	bl	8000af8 <__aeabi_dcmpgt>
 8025074:	b9c0      	cbnz	r0, 80250a8 <_dtoa_r+0x6e0>
 8025076:	4652      	mov	r2, sl
 8025078:	465b      	mov	r3, fp
 802507a:	4620      	mov	r0, r4
 802507c:	4629      	mov	r1, r5
 802507e:	f7db fd13 	bl	8000aa8 <__aeabi_dcmpeq>
 8025082:	b108      	cbz	r0, 8025088 <_dtoa_r+0x6c0>
 8025084:	07fb      	lsls	r3, r7, #31
 8025086:	d40f      	bmi.n	80250a8 <_dtoa_r+0x6e0>
 8025088:	9901      	ldr	r1, [sp, #4]
 802508a:	4648      	mov	r0, r9
 802508c:	f000 fb10 	bl	80256b0 <_Bfree>
 8025090:	2300      	movs	r3, #0
 8025092:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8025094:	7033      	strb	r3, [r6, #0]
 8025096:	f108 0301 	add.w	r3, r8, #1
 802509a:	6013      	str	r3, [r2, #0]
 802509c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802509e:	2b00      	cmp	r3, #0
 80250a0:	f43f ace2 	beq.w	8024a68 <_dtoa_r+0xa0>
 80250a4:	601e      	str	r6, [r3, #0]
 80250a6:	e4df      	b.n	8024a68 <_dtoa_r+0xa0>
 80250a8:	f8cd 8008 	str.w	r8, [sp, #8]
 80250ac:	4633      	mov	r3, r6
 80250ae:	461e      	mov	r6, r3
 80250b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80250b4:	2a39      	cmp	r2, #57	@ 0x39
 80250b6:	d106      	bne.n	80250c6 <_dtoa_r+0x6fe>
 80250b8:	9a00      	ldr	r2, [sp, #0]
 80250ba:	429a      	cmp	r2, r3
 80250bc:	d1f7      	bne.n	80250ae <_dtoa_r+0x6e6>
 80250be:	9a02      	ldr	r2, [sp, #8]
 80250c0:	3201      	adds	r2, #1
 80250c2:	9202      	str	r2, [sp, #8]
 80250c4:	2230      	movs	r2, #48	@ 0x30
 80250c6:	3201      	adds	r2, #1
 80250c8:	701a      	strb	r2, [r3, #0]
 80250ca:	e79f      	b.n	802500c <_dtoa_r+0x644>
 80250cc:	4b74      	ldr	r3, [pc, #464]	@ (80252a0 <_dtoa_r+0x8d8>)
 80250ce:	2200      	movs	r2, #0
 80250d0:	f7db fa82 	bl	80005d8 <__aeabi_dmul>
 80250d4:	4602      	mov	r2, r0
 80250d6:	460b      	mov	r3, r1
 80250d8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80250dc:	2200      	movs	r2, #0
 80250de:	2300      	movs	r3, #0
 80250e0:	f7db fce2 	bl	8000aa8 <__aeabi_dcmpeq>
 80250e4:	2800      	cmp	r0, #0
 80250e6:	d09c      	beq.n	8025022 <_dtoa_r+0x65a>
 80250e8:	e7ce      	b.n	8025088 <_dtoa_r+0x6c0>
 80250ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80250ec:	2a00      	cmp	r2, #0
 80250ee:	f000 80e3 	beq.w	80252b8 <_dtoa_r+0x8f0>
 80250f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80250f4:	2a01      	cmp	r2, #1
 80250f6:	f300 80c2 	bgt.w	802527e <_dtoa_r+0x8b6>
 80250fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80250fc:	2a00      	cmp	r2, #0
 80250fe:	f000 80ba 	beq.w	8025276 <_dtoa_r+0x8ae>
 8025102:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8025106:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025108:	463e      	mov	r6, r7
 802510a:	9a08      	ldr	r2, [sp, #32]
 802510c:	2101      	movs	r1, #1
 802510e:	441a      	add	r2, r3
 8025110:	4648      	mov	r0, r9
 8025112:	441f      	add	r7, r3
 8025114:	9208      	str	r2, [sp, #32]
 8025116:	f000 fbc9 	bl	80258ac <__i2b>
 802511a:	4604      	mov	r4, r0
 802511c:	b156      	cbz	r6, 8025134 <_dtoa_r+0x76c>
 802511e:	9b08      	ldr	r3, [sp, #32]
 8025120:	2b00      	cmp	r3, #0
 8025122:	dd07      	ble.n	8025134 <_dtoa_r+0x76c>
 8025124:	42b3      	cmp	r3, r6
 8025126:	9a08      	ldr	r2, [sp, #32]
 8025128:	bfa8      	it	ge
 802512a:	4633      	movge	r3, r6
 802512c:	1aff      	subs	r7, r7, r3
 802512e:	1af6      	subs	r6, r6, r3
 8025130:	1ad3      	subs	r3, r2, r3
 8025132:	9308      	str	r3, [sp, #32]
 8025134:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025136:	b30b      	cbz	r3, 802517c <_dtoa_r+0x7b4>
 8025138:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802513a:	2b00      	cmp	r3, #0
 802513c:	f000 80c3 	beq.w	80252c6 <_dtoa_r+0x8fe>
 8025140:	2d00      	cmp	r5, #0
 8025142:	f000 80bd 	beq.w	80252c0 <_dtoa_r+0x8f8>
 8025146:	4621      	mov	r1, r4
 8025148:	462a      	mov	r2, r5
 802514a:	4648      	mov	r0, r9
 802514c:	f000 fc6e 	bl	8025a2c <__pow5mult>
 8025150:	9a01      	ldr	r2, [sp, #4]
 8025152:	4601      	mov	r1, r0
 8025154:	4604      	mov	r4, r0
 8025156:	4648      	mov	r0, r9
 8025158:	f000 fbbe 	bl	80258d8 <__multiply>
 802515c:	9901      	ldr	r1, [sp, #4]
 802515e:	4682      	mov	sl, r0
 8025160:	4648      	mov	r0, r9
 8025162:	f000 faa5 	bl	80256b0 <_Bfree>
 8025166:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025168:	1b5b      	subs	r3, r3, r5
 802516a:	9309      	str	r3, [sp, #36]	@ 0x24
 802516c:	f000 80ae 	beq.w	80252cc <_dtoa_r+0x904>
 8025170:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025172:	4651      	mov	r1, sl
 8025174:	4648      	mov	r0, r9
 8025176:	f000 fc59 	bl	8025a2c <__pow5mult>
 802517a:	9001      	str	r0, [sp, #4]
 802517c:	2101      	movs	r1, #1
 802517e:	4648      	mov	r0, r9
 8025180:	f000 fb94 	bl	80258ac <__i2b>
 8025184:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025186:	4605      	mov	r5, r0
 8025188:	2b00      	cmp	r3, #0
 802518a:	f000 81d7 	beq.w	802553c <_dtoa_r+0xb74>
 802518e:	461a      	mov	r2, r3
 8025190:	4601      	mov	r1, r0
 8025192:	4648      	mov	r0, r9
 8025194:	f000 fc4a 	bl	8025a2c <__pow5mult>
 8025198:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802519a:	2b01      	cmp	r3, #1
 802519c:	4605      	mov	r5, r0
 802519e:	f300 809d 	bgt.w	80252dc <_dtoa_r+0x914>
 80251a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80251a4:	2b00      	cmp	r3, #0
 80251a6:	f040 8094 	bne.w	80252d2 <_dtoa_r+0x90a>
 80251aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80251ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80251b0:	2b00      	cmp	r3, #0
 80251b2:	f040 808e 	bne.w	80252d2 <_dtoa_r+0x90a>
 80251b6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80251b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80251bc:	0d1b      	lsrs	r3, r3, #20
 80251be:	051b      	lsls	r3, r3, #20
 80251c0:	2b00      	cmp	r3, #0
 80251c2:	f000 8089 	beq.w	80252d8 <_dtoa_r+0x910>
 80251c6:	9b08      	ldr	r3, [sp, #32]
 80251c8:	3301      	adds	r3, #1
 80251ca:	3701      	adds	r7, #1
 80251cc:	9308      	str	r3, [sp, #32]
 80251ce:	f04f 0a01 	mov.w	sl, #1
 80251d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80251d4:	2b00      	cmp	r3, #0
 80251d6:	f000 81b7 	beq.w	8025548 <_dtoa_r+0xb80>
 80251da:	692b      	ldr	r3, [r5, #16]
 80251dc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80251e0:	6918      	ldr	r0, [r3, #16]
 80251e2:	f000 fb17 	bl	8025814 <__hi0bits>
 80251e6:	f1c0 0020 	rsb	r0, r0, #32
 80251ea:	9b08      	ldr	r3, [sp, #32]
 80251ec:	4418      	add	r0, r3
 80251ee:	f010 001f 	ands.w	r0, r0, #31
 80251f2:	d07e      	beq.n	80252f2 <_dtoa_r+0x92a>
 80251f4:	f1c0 0320 	rsb	r3, r0, #32
 80251f8:	2b04      	cmp	r3, #4
 80251fa:	dd72      	ble.n	80252e2 <_dtoa_r+0x91a>
 80251fc:	9b08      	ldr	r3, [sp, #32]
 80251fe:	f1c0 001c 	rsb	r0, r0, #28
 8025202:	4403      	add	r3, r0
 8025204:	4407      	add	r7, r0
 8025206:	4406      	add	r6, r0
 8025208:	9308      	str	r3, [sp, #32]
 802520a:	2f00      	cmp	r7, #0
 802520c:	dd05      	ble.n	802521a <_dtoa_r+0x852>
 802520e:	9901      	ldr	r1, [sp, #4]
 8025210:	463a      	mov	r2, r7
 8025212:	4648      	mov	r0, r9
 8025214:	f000 fc66 	bl	8025ae4 <__lshift>
 8025218:	9001      	str	r0, [sp, #4]
 802521a:	9b08      	ldr	r3, [sp, #32]
 802521c:	2b00      	cmp	r3, #0
 802521e:	dd05      	ble.n	802522c <_dtoa_r+0x864>
 8025220:	4629      	mov	r1, r5
 8025222:	461a      	mov	r2, r3
 8025224:	4648      	mov	r0, r9
 8025226:	f000 fc5d 	bl	8025ae4 <__lshift>
 802522a:	4605      	mov	r5, r0
 802522c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802522e:	2b00      	cmp	r3, #0
 8025230:	d061      	beq.n	80252f6 <_dtoa_r+0x92e>
 8025232:	9801      	ldr	r0, [sp, #4]
 8025234:	4629      	mov	r1, r5
 8025236:	f000 fcc3 	bl	8025bc0 <__mcmp>
 802523a:	2800      	cmp	r0, #0
 802523c:	da5b      	bge.n	80252f6 <_dtoa_r+0x92e>
 802523e:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 8025242:	9302      	str	r3, [sp, #8]
 8025244:	9901      	ldr	r1, [sp, #4]
 8025246:	2300      	movs	r3, #0
 8025248:	220a      	movs	r2, #10
 802524a:	4648      	mov	r0, r9
 802524c:	f000 fa52 	bl	80256f4 <__multadd>
 8025250:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025252:	9001      	str	r0, [sp, #4]
 8025254:	2b00      	cmp	r3, #0
 8025256:	f000 8179 	beq.w	802554c <_dtoa_r+0xb84>
 802525a:	2300      	movs	r3, #0
 802525c:	4621      	mov	r1, r4
 802525e:	220a      	movs	r2, #10
 8025260:	4648      	mov	r0, r9
 8025262:	f000 fa47 	bl	80256f4 <__multadd>
 8025266:	9b05      	ldr	r3, [sp, #20]
 8025268:	2b00      	cmp	r3, #0
 802526a:	4604      	mov	r4, r0
 802526c:	dc72      	bgt.n	8025354 <_dtoa_r+0x98c>
 802526e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025270:	2b02      	cmp	r3, #2
 8025272:	dc49      	bgt.n	8025308 <_dtoa_r+0x940>
 8025274:	e06e      	b.n	8025354 <_dtoa_r+0x98c>
 8025276:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025278:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 802527c:	e743      	b.n	8025106 <_dtoa_r+0x73e>
 802527e:	9b04      	ldr	r3, [sp, #16]
 8025280:	1e5d      	subs	r5, r3, #1
 8025282:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025284:	42ab      	cmp	r3, r5
 8025286:	db0d      	blt.n	80252a4 <_dtoa_r+0x8dc>
 8025288:	1b5d      	subs	r5, r3, r5
 802528a:	9b04      	ldr	r3, [sp, #16]
 802528c:	2b00      	cmp	r3, #0
 802528e:	f6bf af3b 	bge.w	8025108 <_dtoa_r+0x740>
 8025292:	9b04      	ldr	r3, [sp, #16]
 8025294:	1afe      	subs	r6, r7, r3
 8025296:	2300      	movs	r3, #0
 8025298:	e737      	b.n	802510a <_dtoa_r+0x742>
 802529a:	bf00      	nop
 802529c:	3fe00000 	.word	0x3fe00000
 80252a0:	40240000 	.word	0x40240000
 80252a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80252a6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80252a8:	9509      	str	r5, [sp, #36]	@ 0x24
 80252aa:	1aeb      	subs	r3, r5, r3
 80252ac:	441a      	add	r2, r3
 80252ae:	920d      	str	r2, [sp, #52]	@ 0x34
 80252b0:	9b04      	ldr	r3, [sp, #16]
 80252b2:	463e      	mov	r6, r7
 80252b4:	2500      	movs	r5, #0
 80252b6:	e728      	b.n	802510a <_dtoa_r+0x742>
 80252b8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80252ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80252bc:	463e      	mov	r6, r7
 80252be:	e72d      	b.n	802511c <_dtoa_r+0x754>
 80252c0:	f8dd a004 	ldr.w	sl, [sp, #4]
 80252c4:	e754      	b.n	8025170 <_dtoa_r+0x7a8>
 80252c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80252c8:	9901      	ldr	r1, [sp, #4]
 80252ca:	e753      	b.n	8025174 <_dtoa_r+0x7ac>
 80252cc:	f8cd a004 	str.w	sl, [sp, #4]
 80252d0:	e754      	b.n	802517c <_dtoa_r+0x7b4>
 80252d2:	f04f 0a00 	mov.w	sl, #0
 80252d6:	e77c      	b.n	80251d2 <_dtoa_r+0x80a>
 80252d8:	469a      	mov	sl, r3
 80252da:	e77a      	b.n	80251d2 <_dtoa_r+0x80a>
 80252dc:	f04f 0a00 	mov.w	sl, #0
 80252e0:	e77b      	b.n	80251da <_dtoa_r+0x812>
 80252e2:	d092      	beq.n	802520a <_dtoa_r+0x842>
 80252e4:	9a08      	ldr	r2, [sp, #32]
 80252e6:	331c      	adds	r3, #28
 80252e8:	441a      	add	r2, r3
 80252ea:	441f      	add	r7, r3
 80252ec:	441e      	add	r6, r3
 80252ee:	9208      	str	r2, [sp, #32]
 80252f0:	e78b      	b.n	802520a <_dtoa_r+0x842>
 80252f2:	4603      	mov	r3, r0
 80252f4:	e7f6      	b.n	80252e4 <_dtoa_r+0x91c>
 80252f6:	9b04      	ldr	r3, [sp, #16]
 80252f8:	f8cd 8008 	str.w	r8, [sp, #8]
 80252fc:	2b00      	cmp	r3, #0
 80252fe:	dc23      	bgt.n	8025348 <_dtoa_r+0x980>
 8025300:	9305      	str	r3, [sp, #20]
 8025302:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025304:	2b02      	cmp	r3, #2
 8025306:	dd21      	ble.n	802534c <_dtoa_r+0x984>
 8025308:	9b05      	ldr	r3, [sp, #20]
 802530a:	2b00      	cmp	r3, #0
 802530c:	f47f adb0 	bne.w	8024e70 <_dtoa_r+0x4a8>
 8025310:	4629      	mov	r1, r5
 8025312:	2205      	movs	r2, #5
 8025314:	4648      	mov	r0, r9
 8025316:	f000 f9ed 	bl	80256f4 <__multadd>
 802531a:	4601      	mov	r1, r0
 802531c:	4605      	mov	r5, r0
 802531e:	9801      	ldr	r0, [sp, #4]
 8025320:	f000 fc4e 	bl	8025bc0 <__mcmp>
 8025324:	2800      	cmp	r0, #0
 8025326:	f77f ada3 	ble.w	8024e70 <_dtoa_r+0x4a8>
 802532a:	9e00      	ldr	r6, [sp, #0]
 802532c:	2331      	movs	r3, #49	@ 0x31
 802532e:	f806 3b01 	strb.w	r3, [r6], #1
 8025332:	9b02      	ldr	r3, [sp, #8]
 8025334:	3301      	adds	r3, #1
 8025336:	9302      	str	r3, [sp, #8]
 8025338:	e59e      	b.n	8024e78 <_dtoa_r+0x4b0>
 802533a:	4635      	mov	r5, r6
 802533c:	462c      	mov	r4, r5
 802533e:	e7f4      	b.n	802532a <_dtoa_r+0x962>
 8025340:	9d04      	ldr	r5, [sp, #16]
 8025342:	f8cd 8008 	str.w	r8, [sp, #8]
 8025346:	e7f9      	b.n	802533c <_dtoa_r+0x974>
 8025348:	9b04      	ldr	r3, [sp, #16]
 802534a:	9305      	str	r3, [sp, #20]
 802534c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802534e:	2b00      	cmp	r3, #0
 8025350:	f000 8100 	beq.w	8025554 <_dtoa_r+0xb8c>
 8025354:	2e00      	cmp	r6, #0
 8025356:	dd05      	ble.n	8025364 <_dtoa_r+0x99c>
 8025358:	4621      	mov	r1, r4
 802535a:	4632      	mov	r2, r6
 802535c:	4648      	mov	r0, r9
 802535e:	f000 fbc1 	bl	8025ae4 <__lshift>
 8025362:	4604      	mov	r4, r0
 8025364:	f1ba 0f00 	cmp.w	sl, #0
 8025368:	d05a      	beq.n	8025420 <_dtoa_r+0xa58>
 802536a:	6861      	ldr	r1, [r4, #4]
 802536c:	4648      	mov	r0, r9
 802536e:	f000 f961 	bl	8025634 <_Balloc>
 8025372:	4606      	mov	r6, r0
 8025374:	b928      	cbnz	r0, 8025382 <_dtoa_r+0x9ba>
 8025376:	4b82      	ldr	r3, [pc, #520]	@ (8025580 <_dtoa_r+0xbb8>)
 8025378:	4602      	mov	r2, r0
 802537a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 802537e:	f7ff bb3a 	b.w	80249f6 <_dtoa_r+0x2e>
 8025382:	6922      	ldr	r2, [r4, #16]
 8025384:	3202      	adds	r2, #2
 8025386:	0092      	lsls	r2, r2, #2
 8025388:	f104 010c 	add.w	r1, r4, #12
 802538c:	300c      	adds	r0, #12
 802538e:	f7ff fa7c 	bl	802488a <memcpy>
 8025392:	2201      	movs	r2, #1
 8025394:	4631      	mov	r1, r6
 8025396:	4648      	mov	r0, r9
 8025398:	f000 fba4 	bl	8025ae4 <__lshift>
 802539c:	4607      	mov	r7, r0
 802539e:	9b00      	ldr	r3, [sp, #0]
 80253a0:	9a00      	ldr	r2, [sp, #0]
 80253a2:	f103 0b01 	add.w	fp, r3, #1
 80253a6:	9b05      	ldr	r3, [sp, #20]
 80253a8:	4413      	add	r3, r2
 80253aa:	9306      	str	r3, [sp, #24]
 80253ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80253ae:	f003 0301 	and.w	r3, r3, #1
 80253b2:	9308      	str	r3, [sp, #32]
 80253b4:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
 80253b8:	4629      	mov	r1, r5
 80253ba:	9801      	ldr	r0, [sp, #4]
 80253bc:	9304      	str	r3, [sp, #16]
 80253be:	f7ff fa79 	bl	80248b4 <quorem>
 80253c2:	4621      	mov	r1, r4
 80253c4:	9005      	str	r0, [sp, #20]
 80253c6:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 80253ca:	9801      	ldr	r0, [sp, #4]
 80253cc:	f000 fbf8 	bl	8025bc0 <__mcmp>
 80253d0:	463a      	mov	r2, r7
 80253d2:	4680      	mov	r8, r0
 80253d4:	4629      	mov	r1, r5
 80253d6:	4648      	mov	r0, r9
 80253d8:	f000 fc0e 	bl	8025bf8 <__mdiff>
 80253dc:	68c2      	ldr	r2, [r0, #12]
 80253de:	4606      	mov	r6, r0
 80253e0:	bb02      	cbnz	r2, 8025424 <_dtoa_r+0xa5c>
 80253e2:	4601      	mov	r1, r0
 80253e4:	9801      	ldr	r0, [sp, #4]
 80253e6:	f000 fbeb 	bl	8025bc0 <__mcmp>
 80253ea:	4602      	mov	r2, r0
 80253ec:	4631      	mov	r1, r6
 80253ee:	4648      	mov	r0, r9
 80253f0:	9209      	str	r2, [sp, #36]	@ 0x24
 80253f2:	f000 f95d 	bl	80256b0 <_Bfree>
 80253f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	@ 0x24
 80253fa:	ea42 0103 	orr.w	r1, r2, r3
 80253fe:	9b08      	ldr	r3, [sp, #32]
 8025400:	4319      	orrs	r1, r3
 8025402:	465e      	mov	r6, fp
 8025404:	d110      	bne.n	8025428 <_dtoa_r+0xa60>
 8025406:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 802540a:	d02b      	beq.n	8025464 <_dtoa_r+0xa9c>
 802540c:	f1b8 0f00 	cmp.w	r8, #0
 8025410:	dd02      	ble.n	8025418 <_dtoa_r+0xa50>
 8025412:	9b05      	ldr	r3, [sp, #20]
 8025414:	f103 0a31 	add.w	sl, r3, #49	@ 0x31
 8025418:	9b04      	ldr	r3, [sp, #16]
 802541a:	f883 a000 	strb.w	sl, [r3]
 802541e:	e52d      	b.n	8024e7c <_dtoa_r+0x4b4>
 8025420:	4627      	mov	r7, r4
 8025422:	e7bc      	b.n	802539e <_dtoa_r+0x9d6>
 8025424:	2201      	movs	r2, #1
 8025426:	e7e1      	b.n	80253ec <_dtoa_r+0xa24>
 8025428:	f1b8 0f00 	cmp.w	r8, #0
 802542c:	db06      	blt.n	802543c <_dtoa_r+0xa74>
 802542e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025430:	ea48 0803 	orr.w	r8, r8, r3
 8025434:	9b08      	ldr	r3, [sp, #32]
 8025436:	ea58 0803 	orrs.w	r8, r8, r3
 802543a:	d120      	bne.n	802547e <_dtoa_r+0xab6>
 802543c:	2a00      	cmp	r2, #0
 802543e:	ddeb      	ble.n	8025418 <_dtoa_r+0xa50>
 8025440:	9901      	ldr	r1, [sp, #4]
 8025442:	2201      	movs	r2, #1
 8025444:	4648      	mov	r0, r9
 8025446:	f000 fb4d 	bl	8025ae4 <__lshift>
 802544a:	4629      	mov	r1, r5
 802544c:	9001      	str	r0, [sp, #4]
 802544e:	f000 fbb7 	bl	8025bc0 <__mcmp>
 8025452:	2800      	cmp	r0, #0
 8025454:	dc03      	bgt.n	802545e <_dtoa_r+0xa96>
 8025456:	d1df      	bne.n	8025418 <_dtoa_r+0xa50>
 8025458:	f01a 0f01 	tst.w	sl, #1
 802545c:	d0dc      	beq.n	8025418 <_dtoa_r+0xa50>
 802545e:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8025462:	d1d6      	bne.n	8025412 <_dtoa_r+0xa4a>
 8025464:	9a04      	ldr	r2, [sp, #16]
 8025466:	2339      	movs	r3, #57	@ 0x39
 8025468:	7013      	strb	r3, [r2, #0]
 802546a:	4633      	mov	r3, r6
 802546c:	461e      	mov	r6, r3
 802546e:	3b01      	subs	r3, #1
 8025470:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8025474:	2a39      	cmp	r2, #57	@ 0x39
 8025476:	d052      	beq.n	802551e <_dtoa_r+0xb56>
 8025478:	3201      	adds	r2, #1
 802547a:	701a      	strb	r2, [r3, #0]
 802547c:	e4fe      	b.n	8024e7c <_dtoa_r+0x4b4>
 802547e:	2a00      	cmp	r2, #0
 8025480:	dd07      	ble.n	8025492 <_dtoa_r+0xaca>
 8025482:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 8025486:	d0ed      	beq.n	8025464 <_dtoa_r+0xa9c>
 8025488:	9a04      	ldr	r2, [sp, #16]
 802548a:	f10a 0301 	add.w	r3, sl, #1
 802548e:	7013      	strb	r3, [r2, #0]
 8025490:	e4f4      	b.n	8024e7c <_dtoa_r+0x4b4>
 8025492:	9b06      	ldr	r3, [sp, #24]
 8025494:	f80b ac01 	strb.w	sl, [fp, #-1]
 8025498:	455b      	cmp	r3, fp
 802549a:	d02a      	beq.n	80254f2 <_dtoa_r+0xb2a>
 802549c:	9901      	ldr	r1, [sp, #4]
 802549e:	2300      	movs	r3, #0
 80254a0:	220a      	movs	r2, #10
 80254a2:	4648      	mov	r0, r9
 80254a4:	f000 f926 	bl	80256f4 <__multadd>
 80254a8:	42bc      	cmp	r4, r7
 80254aa:	9001      	str	r0, [sp, #4]
 80254ac:	f04f 0300 	mov.w	r3, #0
 80254b0:	f04f 020a 	mov.w	r2, #10
 80254b4:	4621      	mov	r1, r4
 80254b6:	4648      	mov	r0, r9
 80254b8:	d106      	bne.n	80254c8 <_dtoa_r+0xb00>
 80254ba:	f000 f91b 	bl	80256f4 <__multadd>
 80254be:	4604      	mov	r4, r0
 80254c0:	4607      	mov	r7, r0
 80254c2:	f10b 0b01 	add.w	fp, fp, #1
 80254c6:	e775      	b.n	80253b4 <_dtoa_r+0x9ec>
 80254c8:	f000 f914 	bl	80256f4 <__multadd>
 80254cc:	4639      	mov	r1, r7
 80254ce:	4604      	mov	r4, r0
 80254d0:	2300      	movs	r3, #0
 80254d2:	220a      	movs	r2, #10
 80254d4:	4648      	mov	r0, r9
 80254d6:	f000 f90d 	bl	80256f4 <__multadd>
 80254da:	4607      	mov	r7, r0
 80254dc:	e7f1      	b.n	80254c2 <_dtoa_r+0xafa>
 80254de:	9b05      	ldr	r3, [sp, #20]
 80254e0:	1e5e      	subs	r6, r3, #1
 80254e2:	2b00      	cmp	r3, #0
 80254e4:	9b00      	ldr	r3, [sp, #0]
 80254e6:	bfd8      	it	le
 80254e8:	2600      	movle	r6, #0
 80254ea:	1c5a      	adds	r2, r3, #1
 80254ec:	4627      	mov	r7, r4
 80254ee:	4416      	add	r6, r2
 80254f0:	2400      	movs	r4, #0
 80254f2:	9901      	ldr	r1, [sp, #4]
 80254f4:	2201      	movs	r2, #1
 80254f6:	4648      	mov	r0, r9
 80254f8:	f000 faf4 	bl	8025ae4 <__lshift>
 80254fc:	4629      	mov	r1, r5
 80254fe:	9001      	str	r0, [sp, #4]
 8025500:	f000 fb5e 	bl	8025bc0 <__mcmp>
 8025504:	2800      	cmp	r0, #0
 8025506:	dcb0      	bgt.n	802546a <_dtoa_r+0xaa2>
 8025508:	d102      	bne.n	8025510 <_dtoa_r+0xb48>
 802550a:	f01a 0f01 	tst.w	sl, #1
 802550e:	d1ac      	bne.n	802546a <_dtoa_r+0xaa2>
 8025510:	4633      	mov	r3, r6
 8025512:	461e      	mov	r6, r3
 8025514:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8025518:	2a30      	cmp	r2, #48	@ 0x30
 802551a:	d0fa      	beq.n	8025512 <_dtoa_r+0xb4a>
 802551c:	e4ae      	b.n	8024e7c <_dtoa_r+0x4b4>
 802551e:	9a00      	ldr	r2, [sp, #0]
 8025520:	429a      	cmp	r2, r3
 8025522:	d1a3      	bne.n	802546c <_dtoa_r+0xaa4>
 8025524:	9b02      	ldr	r3, [sp, #8]
 8025526:	3301      	adds	r3, #1
 8025528:	9302      	str	r3, [sp, #8]
 802552a:	2331      	movs	r3, #49	@ 0x31
 802552c:	e7af      	b.n	802548e <_dtoa_r+0xac6>
 802552e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8025530:	2b00      	cmp	r3, #0
 8025532:	f47f aa94 	bne.w	8024a5e <_dtoa_r+0x96>
 8025536:	4b13      	ldr	r3, [pc, #76]	@ (8025584 <_dtoa_r+0xbbc>)
 8025538:	f7ff bab3 	b.w	8024aa2 <_dtoa_r+0xda>
 802553c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802553e:	2b01      	cmp	r3, #1
 8025540:	f77f ae2f 	ble.w	80251a2 <_dtoa_r+0x7da>
 8025544:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 8025548:	2001      	movs	r0, #1
 802554a:	e64e      	b.n	80251ea <_dtoa_r+0x822>
 802554c:	9b05      	ldr	r3, [sp, #20]
 802554e:	2b00      	cmp	r3, #0
 8025550:	f77f aed7 	ble.w	8025302 <_dtoa_r+0x93a>
 8025554:	9e00      	ldr	r6, [sp, #0]
 8025556:	9801      	ldr	r0, [sp, #4]
 8025558:	4629      	mov	r1, r5
 802555a:	f7ff f9ab 	bl	80248b4 <quorem>
 802555e:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 8025562:	9b00      	ldr	r3, [sp, #0]
 8025564:	f806 ab01 	strb.w	sl, [r6], #1
 8025568:	1af2      	subs	r2, r6, r3
 802556a:	9b05      	ldr	r3, [sp, #20]
 802556c:	4293      	cmp	r3, r2
 802556e:	ddb6      	ble.n	80254de <_dtoa_r+0xb16>
 8025570:	9901      	ldr	r1, [sp, #4]
 8025572:	2300      	movs	r3, #0
 8025574:	220a      	movs	r2, #10
 8025576:	4648      	mov	r0, r9
 8025578:	f000 f8bc 	bl	80256f4 <__multadd>
 802557c:	9001      	str	r0, [sp, #4]
 802557e:	e7ea      	b.n	8025556 <_dtoa_r+0xb8e>
 8025580:	0802b1c5 	.word	0x0802b1c5
 8025584:	0802b148 	.word	0x0802b148

08025588 <__env_lock>:
 8025588:	4801      	ldr	r0, [pc, #4]	@ (8025590 <__env_lock+0x8>)
 802558a:	f7ff b97c 	b.w	8024886 <__retarget_lock_acquire_recursive>
 802558e:	bf00      	nop
 8025590:	2000d6c4 	.word	0x2000d6c4

08025594 <__env_unlock>:
 8025594:	4801      	ldr	r0, [pc, #4]	@ (802559c <__env_unlock+0x8>)
 8025596:	f7ff b977 	b.w	8024888 <__retarget_lock_release_recursive>
 802559a:	bf00      	nop
 802559c:	2000d6c4 	.word	0x2000d6c4

080255a0 <_free_r>:
 80255a0:	b538      	push	{r3, r4, r5, lr}
 80255a2:	4605      	mov	r5, r0
 80255a4:	2900      	cmp	r1, #0
 80255a6:	d041      	beq.n	802562c <_free_r+0x8c>
 80255a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80255ac:	1f0c      	subs	r4, r1, #4
 80255ae:	2b00      	cmp	r3, #0
 80255b0:	bfb8      	it	lt
 80255b2:	18e4      	addlt	r4, r4, r3
 80255b4:	f7fd fed6 	bl	8023364 <__malloc_lock>
 80255b8:	4a1d      	ldr	r2, [pc, #116]	@ (8025630 <_free_r+0x90>)
 80255ba:	6813      	ldr	r3, [r2, #0]
 80255bc:	b933      	cbnz	r3, 80255cc <_free_r+0x2c>
 80255be:	6063      	str	r3, [r4, #4]
 80255c0:	6014      	str	r4, [r2, #0]
 80255c2:	4628      	mov	r0, r5
 80255c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80255c8:	f7fd bed2 	b.w	8023370 <__malloc_unlock>
 80255cc:	42a3      	cmp	r3, r4
 80255ce:	d908      	bls.n	80255e2 <_free_r+0x42>
 80255d0:	6820      	ldr	r0, [r4, #0]
 80255d2:	1821      	adds	r1, r4, r0
 80255d4:	428b      	cmp	r3, r1
 80255d6:	bf01      	itttt	eq
 80255d8:	6819      	ldreq	r1, [r3, #0]
 80255da:	685b      	ldreq	r3, [r3, #4]
 80255dc:	1809      	addeq	r1, r1, r0
 80255de:	6021      	streq	r1, [r4, #0]
 80255e0:	e7ed      	b.n	80255be <_free_r+0x1e>
 80255e2:	461a      	mov	r2, r3
 80255e4:	685b      	ldr	r3, [r3, #4]
 80255e6:	b10b      	cbz	r3, 80255ec <_free_r+0x4c>
 80255e8:	42a3      	cmp	r3, r4
 80255ea:	d9fa      	bls.n	80255e2 <_free_r+0x42>
 80255ec:	6811      	ldr	r1, [r2, #0]
 80255ee:	1850      	adds	r0, r2, r1
 80255f0:	42a0      	cmp	r0, r4
 80255f2:	d10b      	bne.n	802560c <_free_r+0x6c>
 80255f4:	6820      	ldr	r0, [r4, #0]
 80255f6:	4401      	add	r1, r0
 80255f8:	1850      	adds	r0, r2, r1
 80255fa:	4283      	cmp	r3, r0
 80255fc:	6011      	str	r1, [r2, #0]
 80255fe:	d1e0      	bne.n	80255c2 <_free_r+0x22>
 8025600:	6818      	ldr	r0, [r3, #0]
 8025602:	685b      	ldr	r3, [r3, #4]
 8025604:	6053      	str	r3, [r2, #4]
 8025606:	4408      	add	r0, r1
 8025608:	6010      	str	r0, [r2, #0]
 802560a:	e7da      	b.n	80255c2 <_free_r+0x22>
 802560c:	d902      	bls.n	8025614 <_free_r+0x74>
 802560e:	230c      	movs	r3, #12
 8025610:	602b      	str	r3, [r5, #0]
 8025612:	e7d6      	b.n	80255c2 <_free_r+0x22>
 8025614:	6820      	ldr	r0, [r4, #0]
 8025616:	1821      	adds	r1, r4, r0
 8025618:	428b      	cmp	r3, r1
 802561a:	bf04      	itt	eq
 802561c:	6819      	ldreq	r1, [r3, #0]
 802561e:	685b      	ldreq	r3, [r3, #4]
 8025620:	6063      	str	r3, [r4, #4]
 8025622:	bf04      	itt	eq
 8025624:	1809      	addeq	r1, r1, r0
 8025626:	6021      	streq	r1, [r4, #0]
 8025628:	6054      	str	r4, [r2, #4]
 802562a:	e7ca      	b.n	80255c2 <_free_r+0x22>
 802562c:	bd38      	pop	{r3, r4, r5, pc}
 802562e:	bf00      	nop
 8025630:	2000d580 	.word	0x2000d580

08025634 <_Balloc>:
 8025634:	b570      	push	{r4, r5, r6, lr}
 8025636:	69c4      	ldr	r4, [r0, #28]
 8025638:	4605      	mov	r5, r0
 802563a:	460e      	mov	r6, r1
 802563c:	b984      	cbnz	r4, 8025660 <_Balloc+0x2c>
 802563e:	2010      	movs	r0, #16
 8025640:	f7fd fdde 	bl	8023200 <malloc>
 8025644:	4604      	mov	r4, r0
 8025646:	61e8      	str	r0, [r5, #28]
 8025648:	b928      	cbnz	r0, 8025656 <_Balloc+0x22>
 802564a:	4602      	mov	r2, r0
 802564c:	4b16      	ldr	r3, [pc, #88]	@ (80256a8 <_Balloc+0x74>)
 802564e:	4817      	ldr	r0, [pc, #92]	@ (80256ac <_Balloc+0x78>)
 8025650:	216b      	movs	r1, #107	@ 0x6b
 8025652:	f7fd fd6f 	bl	8023134 <__assert_func>
 8025656:	2300      	movs	r3, #0
 8025658:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802565c:	6003      	str	r3, [r0, #0]
 802565e:	60c3      	str	r3, [r0, #12]
 8025660:	68e3      	ldr	r3, [r4, #12]
 8025662:	b953      	cbnz	r3, 802567a <_Balloc+0x46>
 8025664:	2221      	movs	r2, #33	@ 0x21
 8025666:	2104      	movs	r1, #4
 8025668:	4628      	mov	r0, r5
 802566a:	f002 fa7d 	bl	8027b68 <_calloc_r>
 802566e:	69eb      	ldr	r3, [r5, #28]
 8025670:	60e0      	str	r0, [r4, #12]
 8025672:	68db      	ldr	r3, [r3, #12]
 8025674:	b90b      	cbnz	r3, 802567a <_Balloc+0x46>
 8025676:	2000      	movs	r0, #0
 8025678:	bd70      	pop	{r4, r5, r6, pc}
 802567a:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 802567e:	b130      	cbz	r0, 802568e <_Balloc+0x5a>
 8025680:	6802      	ldr	r2, [r0, #0]
 8025682:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8025686:	2300      	movs	r3, #0
 8025688:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802568c:	e7f4      	b.n	8025678 <_Balloc+0x44>
 802568e:	2101      	movs	r1, #1
 8025690:	fa01 f406 	lsl.w	r4, r1, r6
 8025694:	1d62      	adds	r2, r4, #5
 8025696:	0092      	lsls	r2, r2, #2
 8025698:	4628      	mov	r0, r5
 802569a:	f002 fa65 	bl	8027b68 <_calloc_r>
 802569e:	2800      	cmp	r0, #0
 80256a0:	d0e9      	beq.n	8025676 <_Balloc+0x42>
 80256a2:	e9c0 6401 	strd	r6, r4, [r0, #4]
 80256a6:	e7ee      	b.n	8025686 <_Balloc+0x52>
 80256a8:	0802b155 	.word	0x0802b155
 80256ac:	0802b1d6 	.word	0x0802b1d6

080256b0 <_Bfree>:
 80256b0:	b570      	push	{r4, r5, r6, lr}
 80256b2:	69c6      	ldr	r6, [r0, #28]
 80256b4:	4605      	mov	r5, r0
 80256b6:	460c      	mov	r4, r1
 80256b8:	b976      	cbnz	r6, 80256d8 <_Bfree+0x28>
 80256ba:	2010      	movs	r0, #16
 80256bc:	f7fd fda0 	bl	8023200 <malloc>
 80256c0:	4602      	mov	r2, r0
 80256c2:	61e8      	str	r0, [r5, #28]
 80256c4:	b920      	cbnz	r0, 80256d0 <_Bfree+0x20>
 80256c6:	4b09      	ldr	r3, [pc, #36]	@ (80256ec <_Bfree+0x3c>)
 80256c8:	4809      	ldr	r0, [pc, #36]	@ (80256f0 <_Bfree+0x40>)
 80256ca:	218f      	movs	r1, #143	@ 0x8f
 80256cc:	f7fd fd32 	bl	8023134 <__assert_func>
 80256d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80256d4:	6006      	str	r6, [r0, #0]
 80256d6:	60c6      	str	r6, [r0, #12]
 80256d8:	b13c      	cbz	r4, 80256ea <_Bfree+0x3a>
 80256da:	69eb      	ldr	r3, [r5, #28]
 80256dc:	6862      	ldr	r2, [r4, #4]
 80256de:	68db      	ldr	r3, [r3, #12]
 80256e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80256e4:	6021      	str	r1, [r4, #0]
 80256e6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80256ea:	bd70      	pop	{r4, r5, r6, pc}
 80256ec:	0802b155 	.word	0x0802b155
 80256f0:	0802b1d6 	.word	0x0802b1d6

080256f4 <__multadd>:
 80256f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80256f8:	690d      	ldr	r5, [r1, #16]
 80256fa:	4607      	mov	r7, r0
 80256fc:	460c      	mov	r4, r1
 80256fe:	461e      	mov	r6, r3
 8025700:	f101 0c14 	add.w	ip, r1, #20
 8025704:	2000      	movs	r0, #0
 8025706:	f8dc 3000 	ldr.w	r3, [ip]
 802570a:	b299      	uxth	r1, r3
 802570c:	fb02 6101 	mla	r1, r2, r1, r6
 8025710:	0c1e      	lsrs	r6, r3, #16
 8025712:	0c0b      	lsrs	r3, r1, #16
 8025714:	fb02 3306 	mla	r3, r2, r6, r3
 8025718:	b289      	uxth	r1, r1
 802571a:	3001      	adds	r0, #1
 802571c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8025720:	4285      	cmp	r5, r0
 8025722:	f84c 1b04 	str.w	r1, [ip], #4
 8025726:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802572a:	dcec      	bgt.n	8025706 <__multadd+0x12>
 802572c:	b30e      	cbz	r6, 8025772 <__multadd+0x7e>
 802572e:	68a3      	ldr	r3, [r4, #8]
 8025730:	42ab      	cmp	r3, r5
 8025732:	dc19      	bgt.n	8025768 <__multadd+0x74>
 8025734:	6861      	ldr	r1, [r4, #4]
 8025736:	4638      	mov	r0, r7
 8025738:	3101      	adds	r1, #1
 802573a:	f7ff ff7b 	bl	8025634 <_Balloc>
 802573e:	4680      	mov	r8, r0
 8025740:	b928      	cbnz	r0, 802574e <__multadd+0x5a>
 8025742:	4602      	mov	r2, r0
 8025744:	4b0c      	ldr	r3, [pc, #48]	@ (8025778 <__multadd+0x84>)
 8025746:	480d      	ldr	r0, [pc, #52]	@ (802577c <__multadd+0x88>)
 8025748:	21ba      	movs	r1, #186	@ 0xba
 802574a:	f7fd fcf3 	bl	8023134 <__assert_func>
 802574e:	6922      	ldr	r2, [r4, #16]
 8025750:	3202      	adds	r2, #2
 8025752:	f104 010c 	add.w	r1, r4, #12
 8025756:	0092      	lsls	r2, r2, #2
 8025758:	300c      	adds	r0, #12
 802575a:	f7ff f896 	bl	802488a <memcpy>
 802575e:	4621      	mov	r1, r4
 8025760:	4638      	mov	r0, r7
 8025762:	f7ff ffa5 	bl	80256b0 <_Bfree>
 8025766:	4644      	mov	r4, r8
 8025768:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 802576c:	3501      	adds	r5, #1
 802576e:	615e      	str	r6, [r3, #20]
 8025770:	6125      	str	r5, [r4, #16]
 8025772:	4620      	mov	r0, r4
 8025774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025778:	0802b1c5 	.word	0x0802b1c5
 802577c:	0802b1d6 	.word	0x0802b1d6

08025780 <__s2b>:
 8025780:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025784:	460c      	mov	r4, r1
 8025786:	4615      	mov	r5, r2
 8025788:	461f      	mov	r7, r3
 802578a:	2209      	movs	r2, #9
 802578c:	3308      	adds	r3, #8
 802578e:	4606      	mov	r6, r0
 8025790:	fb93 f3f2 	sdiv	r3, r3, r2
 8025794:	2100      	movs	r1, #0
 8025796:	2201      	movs	r2, #1
 8025798:	429a      	cmp	r2, r3
 802579a:	db09      	blt.n	80257b0 <__s2b+0x30>
 802579c:	4630      	mov	r0, r6
 802579e:	f7ff ff49 	bl	8025634 <_Balloc>
 80257a2:	b940      	cbnz	r0, 80257b6 <__s2b+0x36>
 80257a4:	4602      	mov	r2, r0
 80257a6:	4b19      	ldr	r3, [pc, #100]	@ (802580c <__s2b+0x8c>)
 80257a8:	4819      	ldr	r0, [pc, #100]	@ (8025810 <__s2b+0x90>)
 80257aa:	21d3      	movs	r1, #211	@ 0xd3
 80257ac:	f7fd fcc2 	bl	8023134 <__assert_func>
 80257b0:	0052      	lsls	r2, r2, #1
 80257b2:	3101      	adds	r1, #1
 80257b4:	e7f0      	b.n	8025798 <__s2b+0x18>
 80257b6:	9b08      	ldr	r3, [sp, #32]
 80257b8:	6143      	str	r3, [r0, #20]
 80257ba:	2d09      	cmp	r5, #9
 80257bc:	f04f 0301 	mov.w	r3, #1
 80257c0:	6103      	str	r3, [r0, #16]
 80257c2:	dd16      	ble.n	80257f2 <__s2b+0x72>
 80257c4:	f104 0809 	add.w	r8, r4, #9
 80257c8:	46c1      	mov	r9, r8
 80257ca:	442c      	add	r4, r5
 80257cc:	f819 3b01 	ldrb.w	r3, [r9], #1
 80257d0:	4601      	mov	r1, r0
 80257d2:	3b30      	subs	r3, #48	@ 0x30
 80257d4:	220a      	movs	r2, #10
 80257d6:	4630      	mov	r0, r6
 80257d8:	f7ff ff8c 	bl	80256f4 <__multadd>
 80257dc:	45a1      	cmp	r9, r4
 80257de:	d1f5      	bne.n	80257cc <__s2b+0x4c>
 80257e0:	44a8      	add	r8, r5
 80257e2:	f1a8 0408 	sub.w	r4, r8, #8
 80257e6:	1b2d      	subs	r5, r5, r4
 80257e8:	1963      	adds	r3, r4, r5
 80257ea:	429f      	cmp	r7, r3
 80257ec:	dc04      	bgt.n	80257f8 <__s2b+0x78>
 80257ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80257f2:	340a      	adds	r4, #10
 80257f4:	2509      	movs	r5, #9
 80257f6:	e7f6      	b.n	80257e6 <__s2b+0x66>
 80257f8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80257fc:	4601      	mov	r1, r0
 80257fe:	3b30      	subs	r3, #48	@ 0x30
 8025800:	220a      	movs	r2, #10
 8025802:	4630      	mov	r0, r6
 8025804:	f7ff ff76 	bl	80256f4 <__multadd>
 8025808:	e7ee      	b.n	80257e8 <__s2b+0x68>
 802580a:	bf00      	nop
 802580c:	0802b1c5 	.word	0x0802b1c5
 8025810:	0802b1d6 	.word	0x0802b1d6

08025814 <__hi0bits>:
 8025814:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8025818:	4603      	mov	r3, r0
 802581a:	bf36      	itet	cc
 802581c:	0403      	lslcc	r3, r0, #16
 802581e:	2000      	movcs	r0, #0
 8025820:	2010      	movcc	r0, #16
 8025822:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8025826:	bf3c      	itt	cc
 8025828:	021b      	lslcc	r3, r3, #8
 802582a:	3008      	addcc	r0, #8
 802582c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8025830:	bf3c      	itt	cc
 8025832:	011b      	lslcc	r3, r3, #4
 8025834:	3004      	addcc	r0, #4
 8025836:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 802583a:	bf3c      	itt	cc
 802583c:	009b      	lslcc	r3, r3, #2
 802583e:	3002      	addcc	r0, #2
 8025840:	2b00      	cmp	r3, #0
 8025842:	db05      	blt.n	8025850 <__hi0bits+0x3c>
 8025844:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8025848:	f100 0001 	add.w	r0, r0, #1
 802584c:	bf08      	it	eq
 802584e:	2020      	moveq	r0, #32
 8025850:	4770      	bx	lr

08025852 <__lo0bits>:
 8025852:	6803      	ldr	r3, [r0, #0]
 8025854:	4602      	mov	r2, r0
 8025856:	f013 0007 	ands.w	r0, r3, #7
 802585a:	d00b      	beq.n	8025874 <__lo0bits+0x22>
 802585c:	07d9      	lsls	r1, r3, #31
 802585e:	d421      	bmi.n	80258a4 <__lo0bits+0x52>
 8025860:	0798      	lsls	r0, r3, #30
 8025862:	bf49      	itett	mi
 8025864:	085b      	lsrmi	r3, r3, #1
 8025866:	089b      	lsrpl	r3, r3, #2
 8025868:	2001      	movmi	r0, #1
 802586a:	6013      	strmi	r3, [r2, #0]
 802586c:	bf5c      	itt	pl
 802586e:	6013      	strpl	r3, [r2, #0]
 8025870:	2002      	movpl	r0, #2
 8025872:	4770      	bx	lr
 8025874:	b299      	uxth	r1, r3
 8025876:	b909      	cbnz	r1, 802587c <__lo0bits+0x2a>
 8025878:	0c1b      	lsrs	r3, r3, #16
 802587a:	2010      	movs	r0, #16
 802587c:	b2d9      	uxtb	r1, r3
 802587e:	b909      	cbnz	r1, 8025884 <__lo0bits+0x32>
 8025880:	3008      	adds	r0, #8
 8025882:	0a1b      	lsrs	r3, r3, #8
 8025884:	0719      	lsls	r1, r3, #28
 8025886:	bf04      	itt	eq
 8025888:	091b      	lsreq	r3, r3, #4
 802588a:	3004      	addeq	r0, #4
 802588c:	0799      	lsls	r1, r3, #30
 802588e:	bf04      	itt	eq
 8025890:	089b      	lsreq	r3, r3, #2
 8025892:	3002      	addeq	r0, #2
 8025894:	07d9      	lsls	r1, r3, #31
 8025896:	d403      	bmi.n	80258a0 <__lo0bits+0x4e>
 8025898:	085b      	lsrs	r3, r3, #1
 802589a:	f100 0001 	add.w	r0, r0, #1
 802589e:	d003      	beq.n	80258a8 <__lo0bits+0x56>
 80258a0:	6013      	str	r3, [r2, #0]
 80258a2:	4770      	bx	lr
 80258a4:	2000      	movs	r0, #0
 80258a6:	4770      	bx	lr
 80258a8:	2020      	movs	r0, #32
 80258aa:	4770      	bx	lr

080258ac <__i2b>:
 80258ac:	b510      	push	{r4, lr}
 80258ae:	460c      	mov	r4, r1
 80258b0:	2101      	movs	r1, #1
 80258b2:	f7ff febf 	bl	8025634 <_Balloc>
 80258b6:	4602      	mov	r2, r0
 80258b8:	b928      	cbnz	r0, 80258c6 <__i2b+0x1a>
 80258ba:	4b05      	ldr	r3, [pc, #20]	@ (80258d0 <__i2b+0x24>)
 80258bc:	4805      	ldr	r0, [pc, #20]	@ (80258d4 <__i2b+0x28>)
 80258be:	f240 1145 	movw	r1, #325	@ 0x145
 80258c2:	f7fd fc37 	bl	8023134 <__assert_func>
 80258c6:	2301      	movs	r3, #1
 80258c8:	6144      	str	r4, [r0, #20]
 80258ca:	6103      	str	r3, [r0, #16]
 80258cc:	bd10      	pop	{r4, pc}
 80258ce:	bf00      	nop
 80258d0:	0802b1c5 	.word	0x0802b1c5
 80258d4:	0802b1d6 	.word	0x0802b1d6

080258d8 <__multiply>:
 80258d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80258dc:	f8d1 9010 	ldr.w	r9, [r1, #16]
 80258e0:	f8d2 a010 	ldr.w	sl, [r2, #16]
 80258e4:	45d1      	cmp	r9, sl
 80258e6:	b085      	sub	sp, #20
 80258e8:	4688      	mov	r8, r1
 80258ea:	4614      	mov	r4, r2
 80258ec:	db04      	blt.n	80258f8 <__multiply+0x20>
 80258ee:	4653      	mov	r3, sl
 80258f0:	460c      	mov	r4, r1
 80258f2:	46ca      	mov	sl, r9
 80258f4:	4690      	mov	r8, r2
 80258f6:	4699      	mov	r9, r3
 80258f8:	68a3      	ldr	r3, [r4, #8]
 80258fa:	6861      	ldr	r1, [r4, #4]
 80258fc:	eb0a 0609 	add.w	r6, sl, r9
 8025900:	42b3      	cmp	r3, r6
 8025902:	bfb8      	it	lt
 8025904:	3101      	addlt	r1, #1
 8025906:	f7ff fe95 	bl	8025634 <_Balloc>
 802590a:	b930      	cbnz	r0, 802591a <__multiply+0x42>
 802590c:	4602      	mov	r2, r0
 802590e:	4b45      	ldr	r3, [pc, #276]	@ (8025a24 <__multiply+0x14c>)
 8025910:	4845      	ldr	r0, [pc, #276]	@ (8025a28 <__multiply+0x150>)
 8025912:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8025916:	f7fd fc0d 	bl	8023134 <__assert_func>
 802591a:	f100 0514 	add.w	r5, r0, #20
 802591e:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 8025922:	462b      	mov	r3, r5
 8025924:	2200      	movs	r2, #0
 8025926:	42bb      	cmp	r3, r7
 8025928:	d31f      	bcc.n	802596a <__multiply+0x92>
 802592a:	f104 0c14 	add.w	ip, r4, #20
 802592e:	f108 0114 	add.w	r1, r8, #20
 8025932:	eb0c 038a 	add.w	r3, ip, sl, lsl #2
 8025936:	eb01 0289 	add.w	r2, r1, r9, lsl #2
 802593a:	9202      	str	r2, [sp, #8]
 802593c:	1b1a      	subs	r2, r3, r4
 802593e:	3a15      	subs	r2, #21
 8025940:	f022 0203 	bic.w	r2, r2, #3
 8025944:	3415      	adds	r4, #21
 8025946:	429c      	cmp	r4, r3
 8025948:	bf88      	it	hi
 802594a:	2200      	movhi	r2, #0
 802594c:	9201      	str	r2, [sp, #4]
 802594e:	9a02      	ldr	r2, [sp, #8]
 8025950:	9103      	str	r1, [sp, #12]
 8025952:	428a      	cmp	r2, r1
 8025954:	d80c      	bhi.n	8025970 <__multiply+0x98>
 8025956:	2e00      	cmp	r6, #0
 8025958:	dd03      	ble.n	8025962 <__multiply+0x8a>
 802595a:	f857 3d04 	ldr.w	r3, [r7, #-4]!
 802595e:	2b00      	cmp	r3, #0
 8025960:	d05d      	beq.n	8025a1e <__multiply+0x146>
 8025962:	6106      	str	r6, [r0, #16]
 8025964:	b005      	add	sp, #20
 8025966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802596a:	f843 2b04 	str.w	r2, [r3], #4
 802596e:	e7da      	b.n	8025926 <__multiply+0x4e>
 8025970:	f8b1 a000 	ldrh.w	sl, [r1]
 8025974:	f1ba 0f00 	cmp.w	sl, #0
 8025978:	d024      	beq.n	80259c4 <__multiply+0xec>
 802597a:	46e0      	mov	r8, ip
 802597c:	46a9      	mov	r9, r5
 802597e:	f04f 0e00 	mov.w	lr, #0
 8025982:	f858 2b04 	ldr.w	r2, [r8], #4
 8025986:	f8d9 4000 	ldr.w	r4, [r9]
 802598a:	fa1f fb82 	uxth.w	fp, r2
 802598e:	b2a4      	uxth	r4, r4
 8025990:	fb0a 440b 	mla	r4, sl, fp, r4
 8025994:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8025998:	f8d9 2000 	ldr.w	r2, [r9]
 802599c:	4474      	add	r4, lr
 802599e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80259a2:	fb0a e20b 	mla	r2, sl, fp, lr
 80259a6:	eb02 4214 	add.w	r2, r2, r4, lsr #16
 80259aa:	b2a4      	uxth	r4, r4
 80259ac:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80259b0:	4543      	cmp	r3, r8
 80259b2:	f849 4b04 	str.w	r4, [r9], #4
 80259b6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80259ba:	d8e2      	bhi.n	8025982 <__multiply+0xaa>
 80259bc:	9a01      	ldr	r2, [sp, #4]
 80259be:	18aa      	adds	r2, r5, r2
 80259c0:	f8c2 e004 	str.w	lr, [r2, #4]
 80259c4:	9a03      	ldr	r2, [sp, #12]
 80259c6:	f8b2 8002 	ldrh.w	r8, [r2, #2]
 80259ca:	3104      	adds	r1, #4
 80259cc:	f1b8 0f00 	cmp.w	r8, #0
 80259d0:	d023      	beq.n	8025a1a <__multiply+0x142>
 80259d2:	682a      	ldr	r2, [r5, #0]
 80259d4:	46e6      	mov	lr, ip
 80259d6:	4691      	mov	r9, r2
 80259d8:	46aa      	mov	sl, r5
 80259da:	f04f 0b00 	mov.w	fp, #0
 80259de:	f8be 4000 	ldrh.w	r4, [lr]
 80259e2:	fb08 b404 	mla	r4, r8, r4, fp
 80259e6:	eb04 4419 	add.w	r4, r4, r9, lsr #16
 80259ea:	b292      	uxth	r2, r2
 80259ec:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80259f0:	f84a 2b04 	str.w	r2, [sl], #4
 80259f4:	f85e 2b04 	ldr.w	r2, [lr], #4
 80259f8:	f8da 9000 	ldr.w	r9, [sl]
 80259fc:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8025a00:	fa1f f289 	uxth.w	r2, r9
 8025a04:	fb08 220b 	mla	r2, r8, fp, r2
 8025a08:	eb02 4214 	add.w	r2, r2, r4, lsr #16
 8025a0c:	4573      	cmp	r3, lr
 8025a0e:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8025a12:	d8e4      	bhi.n	80259de <__multiply+0x106>
 8025a14:	9c01      	ldr	r4, [sp, #4]
 8025a16:	192c      	adds	r4, r5, r4
 8025a18:	6062      	str	r2, [r4, #4]
 8025a1a:	3504      	adds	r5, #4
 8025a1c:	e797      	b.n	802594e <__multiply+0x76>
 8025a1e:	3e01      	subs	r6, #1
 8025a20:	e799      	b.n	8025956 <__multiply+0x7e>
 8025a22:	bf00      	nop
 8025a24:	0802b1c5 	.word	0x0802b1c5
 8025a28:	0802b1d6 	.word	0x0802b1d6

08025a2c <__pow5mult>:
 8025a2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025a30:	4617      	mov	r7, r2
 8025a32:	f012 0203 	ands.w	r2, r2, #3
 8025a36:	4680      	mov	r8, r0
 8025a38:	460d      	mov	r5, r1
 8025a3a:	d007      	beq.n	8025a4c <__pow5mult+0x20>
 8025a3c:	4c26      	ldr	r4, [pc, #152]	@ (8025ad8 <__pow5mult+0xac>)
 8025a3e:	3a01      	subs	r2, #1
 8025a40:	2300      	movs	r3, #0
 8025a42:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8025a46:	f7ff fe55 	bl	80256f4 <__multadd>
 8025a4a:	4605      	mov	r5, r0
 8025a4c:	10bf      	asrs	r7, r7, #2
 8025a4e:	d03f      	beq.n	8025ad0 <__pow5mult+0xa4>
 8025a50:	f8d8 401c 	ldr.w	r4, [r8, #28]
 8025a54:	b994      	cbnz	r4, 8025a7c <__pow5mult+0x50>
 8025a56:	2010      	movs	r0, #16
 8025a58:	f7fd fbd2 	bl	8023200 <malloc>
 8025a5c:	4604      	mov	r4, r0
 8025a5e:	f8c8 001c 	str.w	r0, [r8, #28]
 8025a62:	b930      	cbnz	r0, 8025a72 <__pow5mult+0x46>
 8025a64:	4602      	mov	r2, r0
 8025a66:	4b1d      	ldr	r3, [pc, #116]	@ (8025adc <__pow5mult+0xb0>)
 8025a68:	481d      	ldr	r0, [pc, #116]	@ (8025ae0 <__pow5mult+0xb4>)
 8025a6a:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8025a6e:	f7fd fb61 	bl	8023134 <__assert_func>
 8025a72:	2300      	movs	r3, #0
 8025a74:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8025a78:	6003      	str	r3, [r0, #0]
 8025a7a:	60c3      	str	r3, [r0, #12]
 8025a7c:	68a6      	ldr	r6, [r4, #8]
 8025a7e:	b946      	cbnz	r6, 8025a92 <__pow5mult+0x66>
 8025a80:	f240 2171 	movw	r1, #625	@ 0x271
 8025a84:	4640      	mov	r0, r8
 8025a86:	f7ff ff11 	bl	80258ac <__i2b>
 8025a8a:	2300      	movs	r3, #0
 8025a8c:	60a0      	str	r0, [r4, #8]
 8025a8e:	4606      	mov	r6, r0
 8025a90:	6003      	str	r3, [r0, #0]
 8025a92:	462c      	mov	r4, r5
 8025a94:	f04f 0900 	mov.w	r9, #0
 8025a98:	f007 0301 	and.w	r3, r7, #1
 8025a9c:	107f      	asrs	r7, r7, #1
 8025a9e:	b153      	cbz	r3, 8025ab6 <__pow5mult+0x8a>
 8025aa0:	4629      	mov	r1, r5
 8025aa2:	4632      	mov	r2, r6
 8025aa4:	4640      	mov	r0, r8
 8025aa6:	f7ff ff17 	bl	80258d8 <__multiply>
 8025aaa:	4621      	mov	r1, r4
 8025aac:	4605      	mov	r5, r0
 8025aae:	4640      	mov	r0, r8
 8025ab0:	f7ff fdfe 	bl	80256b0 <_Bfree>
 8025ab4:	b167      	cbz	r7, 8025ad0 <__pow5mult+0xa4>
 8025ab6:	6830      	ldr	r0, [r6, #0]
 8025ab8:	b938      	cbnz	r0, 8025aca <__pow5mult+0x9e>
 8025aba:	4632      	mov	r2, r6
 8025abc:	4631      	mov	r1, r6
 8025abe:	4640      	mov	r0, r8
 8025ac0:	f7ff ff0a 	bl	80258d8 <__multiply>
 8025ac4:	6030      	str	r0, [r6, #0]
 8025ac6:	f8c0 9000 	str.w	r9, [r0]
 8025aca:	4606      	mov	r6, r0
 8025acc:	462c      	mov	r4, r5
 8025ace:	e7e3      	b.n	8025a98 <__pow5mult+0x6c>
 8025ad0:	4628      	mov	r0, r5
 8025ad2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025ad6:	bf00      	nop
 8025ad8:	08037a20 	.word	0x08037a20
 8025adc:	0802b155 	.word	0x0802b155
 8025ae0:	0802b1d6 	.word	0x0802b1d6

08025ae4 <__lshift>:
 8025ae4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ae8:	460c      	mov	r4, r1
 8025aea:	6849      	ldr	r1, [r1, #4]
 8025aec:	6923      	ldr	r3, [r4, #16]
 8025aee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8025af2:	68a3      	ldr	r3, [r4, #8]
 8025af4:	4607      	mov	r7, r0
 8025af6:	4615      	mov	r5, r2
 8025af8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8025afc:	f108 0901 	add.w	r9, r8, #1
 8025b00:	454b      	cmp	r3, r9
 8025b02:	db0b      	blt.n	8025b1c <__lshift+0x38>
 8025b04:	4638      	mov	r0, r7
 8025b06:	f7ff fd95 	bl	8025634 <_Balloc>
 8025b0a:	4606      	mov	r6, r0
 8025b0c:	b948      	cbnz	r0, 8025b22 <__lshift+0x3e>
 8025b0e:	4602      	mov	r2, r0
 8025b10:	4b29      	ldr	r3, [pc, #164]	@ (8025bb8 <__lshift+0xd4>)
 8025b12:	482a      	ldr	r0, [pc, #168]	@ (8025bbc <__lshift+0xd8>)
 8025b14:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8025b18:	f7fd fb0c 	bl	8023134 <__assert_func>
 8025b1c:	3101      	adds	r1, #1
 8025b1e:	005b      	lsls	r3, r3, #1
 8025b20:	e7ee      	b.n	8025b00 <__lshift+0x1c>
 8025b22:	2300      	movs	r3, #0
 8025b24:	f100 0c14 	add.w	ip, r0, #20
 8025b28:	f100 0210 	add.w	r2, r0, #16
 8025b2c:	4619      	mov	r1, r3
 8025b2e:	4553      	cmp	r3, sl
 8025b30:	db35      	blt.n	8025b9e <__lshift+0xba>
 8025b32:	6922      	ldr	r2, [r4, #16]
 8025b34:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8025b38:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8025b3c:	f104 0314 	add.w	r3, r4, #20
 8025b40:	f015 0e1f 	ands.w	lr, r5, #31
 8025b44:	4661      	mov	r1, ip
 8025b46:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8025b4a:	d02c      	beq.n	8025ba6 <__lshift+0xc2>
 8025b4c:	f1ce 0a20 	rsb	sl, lr, #32
 8025b50:	2500      	movs	r5, #0
 8025b52:	6818      	ldr	r0, [r3, #0]
 8025b54:	468b      	mov	fp, r1
 8025b56:	fa00 f00e 	lsl.w	r0, r0, lr
 8025b5a:	4328      	orrs	r0, r5
 8025b5c:	f8cb 0000 	str.w	r0, [fp]
 8025b60:	f853 5b04 	ldr.w	r5, [r3], #4
 8025b64:	429a      	cmp	r2, r3
 8025b66:	f101 0104 	add.w	r1, r1, #4
 8025b6a:	fa25 f50a 	lsr.w	r5, r5, sl
 8025b6e:	d8f0      	bhi.n	8025b52 <__lshift+0x6e>
 8025b70:	1b13      	subs	r3, r2, r4
 8025b72:	3b15      	subs	r3, #21
 8025b74:	f023 0303 	bic.w	r3, r3, #3
 8025b78:	f104 0115 	add.w	r1, r4, #21
 8025b7c:	428a      	cmp	r2, r1
 8025b7e:	bf38      	it	cc
 8025b80:	2300      	movcc	r3, #0
 8025b82:	449c      	add	ip, r3
 8025b84:	f8cc 5004 	str.w	r5, [ip, #4]
 8025b88:	b905      	cbnz	r5, 8025b8c <__lshift+0xa8>
 8025b8a:	46c1      	mov	r9, r8
 8025b8c:	4638      	mov	r0, r7
 8025b8e:	f8c6 9010 	str.w	r9, [r6, #16]
 8025b92:	4621      	mov	r1, r4
 8025b94:	f7ff fd8c 	bl	80256b0 <_Bfree>
 8025b98:	4630      	mov	r0, r6
 8025b9a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025b9e:	f842 1f04 	str.w	r1, [r2, #4]!
 8025ba2:	3301      	adds	r3, #1
 8025ba4:	e7c3      	b.n	8025b2e <__lshift+0x4a>
 8025ba6:	f853 5b04 	ldr.w	r5, [r3], #4
 8025baa:	600d      	str	r5, [r1, #0]
 8025bac:	429a      	cmp	r2, r3
 8025bae:	f101 0104 	add.w	r1, r1, #4
 8025bb2:	d8f8      	bhi.n	8025ba6 <__lshift+0xc2>
 8025bb4:	e7e9      	b.n	8025b8a <__lshift+0xa6>
 8025bb6:	bf00      	nop
 8025bb8:	0802b1c5 	.word	0x0802b1c5
 8025bbc:	0802b1d6 	.word	0x0802b1d6

08025bc0 <__mcmp>:
 8025bc0:	690a      	ldr	r2, [r1, #16]
 8025bc2:	4603      	mov	r3, r0
 8025bc4:	6900      	ldr	r0, [r0, #16]
 8025bc6:	1a80      	subs	r0, r0, r2
 8025bc8:	b530      	push	{r4, r5, lr}
 8025bca:	d10e      	bne.n	8025bea <__mcmp+0x2a>
 8025bcc:	3314      	adds	r3, #20
 8025bce:	3114      	adds	r1, #20
 8025bd0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8025bd4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8025bd8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8025bdc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8025be0:	4295      	cmp	r5, r2
 8025be2:	d003      	beq.n	8025bec <__mcmp+0x2c>
 8025be4:	d205      	bcs.n	8025bf2 <__mcmp+0x32>
 8025be6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8025bea:	bd30      	pop	{r4, r5, pc}
 8025bec:	42a3      	cmp	r3, r4
 8025bee:	d3f3      	bcc.n	8025bd8 <__mcmp+0x18>
 8025bf0:	e7fb      	b.n	8025bea <__mcmp+0x2a>
 8025bf2:	2001      	movs	r0, #1
 8025bf4:	e7f9      	b.n	8025bea <__mcmp+0x2a>
	...

08025bf8 <__mdiff>:
 8025bf8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025bfc:	468a      	mov	sl, r1
 8025bfe:	4606      	mov	r6, r0
 8025c00:	4611      	mov	r1, r2
 8025c02:	4650      	mov	r0, sl
 8025c04:	4614      	mov	r4, r2
 8025c06:	f7ff ffdb 	bl	8025bc0 <__mcmp>
 8025c0a:	1e05      	subs	r5, r0, #0
 8025c0c:	d112      	bne.n	8025c34 <__mdiff+0x3c>
 8025c0e:	4629      	mov	r1, r5
 8025c10:	4630      	mov	r0, r6
 8025c12:	f7ff fd0f 	bl	8025634 <_Balloc>
 8025c16:	4602      	mov	r2, r0
 8025c18:	b928      	cbnz	r0, 8025c26 <__mdiff+0x2e>
 8025c1a:	4b41      	ldr	r3, [pc, #260]	@ (8025d20 <__mdiff+0x128>)
 8025c1c:	f240 2137 	movw	r1, #567	@ 0x237
 8025c20:	4840      	ldr	r0, [pc, #256]	@ (8025d24 <__mdiff+0x12c>)
 8025c22:	f7fd fa87 	bl	8023134 <__assert_func>
 8025c26:	2301      	movs	r3, #1
 8025c28:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8025c2c:	4610      	mov	r0, r2
 8025c2e:	b003      	add	sp, #12
 8025c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c34:	bfbc      	itt	lt
 8025c36:	4653      	movlt	r3, sl
 8025c38:	46a2      	movlt	sl, r4
 8025c3a:	4630      	mov	r0, r6
 8025c3c:	f8da 1004 	ldr.w	r1, [sl, #4]
 8025c40:	bfba      	itte	lt
 8025c42:	461c      	movlt	r4, r3
 8025c44:	2501      	movlt	r5, #1
 8025c46:	2500      	movge	r5, #0
 8025c48:	f7ff fcf4 	bl	8025634 <_Balloc>
 8025c4c:	4602      	mov	r2, r0
 8025c4e:	b918      	cbnz	r0, 8025c58 <__mdiff+0x60>
 8025c50:	4b33      	ldr	r3, [pc, #204]	@ (8025d20 <__mdiff+0x128>)
 8025c52:	f240 2145 	movw	r1, #581	@ 0x245
 8025c56:	e7e3      	b.n	8025c20 <__mdiff+0x28>
 8025c58:	f8da 7010 	ldr.w	r7, [sl, #16]
 8025c5c:	6926      	ldr	r6, [r4, #16]
 8025c5e:	60c5      	str	r5, [r0, #12]
 8025c60:	f10a 0914 	add.w	r9, sl, #20
 8025c64:	f104 0e14 	add.w	lr, r4, #20
 8025c68:	f100 0514 	add.w	r5, r0, #20
 8025c6c:	f10a 0310 	add.w	r3, sl, #16
 8025c70:	eb09 0887 	add.w	r8, r9, r7, lsl #2
 8025c74:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8025c78:	9301      	str	r3, [sp, #4]
 8025c7a:	46ab      	mov	fp, r5
 8025c7c:	f04f 0c00 	mov.w	ip, #0
 8025c80:	9b01      	ldr	r3, [sp, #4]
 8025c82:	f85e 0b04 	ldr.w	r0, [lr], #4
 8025c86:	f853 af04 	ldr.w	sl, [r3, #4]!
 8025c8a:	9301      	str	r3, [sp, #4]
 8025c8c:	fa1f f38a 	uxth.w	r3, sl
 8025c90:	4619      	mov	r1, r3
 8025c92:	b283      	uxth	r3, r0
 8025c94:	1acb      	subs	r3, r1, r3
 8025c96:	0c00      	lsrs	r0, r0, #16
 8025c98:	4463      	add	r3, ip
 8025c9a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8025c9e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8025ca2:	b29b      	uxth	r3, r3
 8025ca4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8025ca8:	4576      	cmp	r6, lr
 8025caa:	f84b 3b04 	str.w	r3, [fp], #4
 8025cae:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8025cb2:	d8e5      	bhi.n	8025c80 <__mdiff+0x88>
 8025cb4:	1b33      	subs	r3, r6, r4
 8025cb6:	3b15      	subs	r3, #21
 8025cb8:	3415      	adds	r4, #21
 8025cba:	f023 0303 	bic.w	r3, r3, #3
 8025cbe:	42a6      	cmp	r6, r4
 8025cc0:	bf38      	it	cc
 8025cc2:	2300      	movcc	r3, #0
 8025cc4:	18e8      	adds	r0, r5, r3
 8025cc6:	444b      	add	r3, r9
 8025cc8:	1d1c      	adds	r4, r3, #4
 8025cca:	3004      	adds	r0, #4
 8025ccc:	4626      	mov	r6, r4
 8025cce:	eba5 0509 	sub.w	r5, r5, r9
 8025cd2:	4546      	cmp	r6, r8
 8025cd4:	eb06 0e05 	add.w	lr, r6, r5
 8025cd8:	d30e      	bcc.n	8025cf8 <__mdiff+0x100>
 8025cda:	f108 0103 	add.w	r1, r8, #3
 8025cde:	1b09      	subs	r1, r1, r4
 8025ce0:	f021 0103 	bic.w	r1, r1, #3
 8025ce4:	3301      	adds	r3, #1
 8025ce6:	4598      	cmp	r8, r3
 8025ce8:	bf38      	it	cc
 8025cea:	2100      	movcc	r1, #0
 8025cec:	4401      	add	r1, r0
 8025cee:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8025cf2:	b19b      	cbz	r3, 8025d1c <__mdiff+0x124>
 8025cf4:	6117      	str	r7, [r2, #16]
 8025cf6:	e799      	b.n	8025c2c <__mdiff+0x34>
 8025cf8:	f856 1b04 	ldr.w	r1, [r6], #4
 8025cfc:	46e2      	mov	sl, ip
 8025cfe:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8025d02:	fa1c fc81 	uxtah	ip, ip, r1
 8025d06:	4451      	add	r1, sl
 8025d08:	eb09 492c 	add.w	r9, r9, ip, asr #16
 8025d0c:	b289      	uxth	r1, r1
 8025d0e:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8025d12:	ea4f 4c29 	mov.w	ip, r9, asr #16
 8025d16:	f8ce 1000 	str.w	r1, [lr]
 8025d1a:	e7da      	b.n	8025cd2 <__mdiff+0xda>
 8025d1c:	3f01      	subs	r7, #1
 8025d1e:	e7e6      	b.n	8025cee <__mdiff+0xf6>
 8025d20:	0802b1c5 	.word	0x0802b1c5
 8025d24:	0802b1d6 	.word	0x0802b1d6

08025d28 <__ulp>:
 8025d28:	b082      	sub	sp, #8
 8025d2a:	ed8d 0b00 	vstr	d0, [sp]
 8025d2e:	9a01      	ldr	r2, [sp, #4]
 8025d30:	4b0f      	ldr	r3, [pc, #60]	@ (8025d70 <__ulp+0x48>)
 8025d32:	4013      	ands	r3, r2
 8025d34:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8025d38:	2b00      	cmp	r3, #0
 8025d3a:	dc08      	bgt.n	8025d4e <__ulp+0x26>
 8025d3c:	425b      	negs	r3, r3
 8025d3e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8025d42:	ea4f 5223 	mov.w	r2, r3, asr #20
 8025d46:	da04      	bge.n	8025d52 <__ulp+0x2a>
 8025d48:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8025d4c:	4113      	asrs	r3, r2
 8025d4e:	2200      	movs	r2, #0
 8025d50:	e008      	b.n	8025d64 <__ulp+0x3c>
 8025d52:	f1a2 0314 	sub.w	r3, r2, #20
 8025d56:	2b1e      	cmp	r3, #30
 8025d58:	bfda      	itte	le
 8025d5a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8025d5e:	40da      	lsrle	r2, r3
 8025d60:	2201      	movgt	r2, #1
 8025d62:	2300      	movs	r3, #0
 8025d64:	4619      	mov	r1, r3
 8025d66:	4610      	mov	r0, r2
 8025d68:	ec41 0b10 	vmov	d0, r0, r1
 8025d6c:	b002      	add	sp, #8
 8025d6e:	4770      	bx	lr
 8025d70:	7ff00000 	.word	0x7ff00000

08025d74 <__b2d>:
 8025d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025d78:	6906      	ldr	r6, [r0, #16]
 8025d7a:	f100 0814 	add.w	r8, r0, #20
 8025d7e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8025d82:	1f37      	subs	r7, r6, #4
 8025d84:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8025d88:	4610      	mov	r0, r2
 8025d8a:	f7ff fd43 	bl	8025814 <__hi0bits>
 8025d8e:	f1c0 0320 	rsb	r3, r0, #32
 8025d92:	280a      	cmp	r0, #10
 8025d94:	600b      	str	r3, [r1, #0]
 8025d96:	491b      	ldr	r1, [pc, #108]	@ (8025e04 <__b2d+0x90>)
 8025d98:	dc15      	bgt.n	8025dc6 <__b2d+0x52>
 8025d9a:	f1c0 0c0b 	rsb	ip, r0, #11
 8025d9e:	fa22 f30c 	lsr.w	r3, r2, ip
 8025da2:	45b8      	cmp	r8, r7
 8025da4:	ea43 0501 	orr.w	r5, r3, r1
 8025da8:	bf34      	ite	cc
 8025daa:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8025dae:	2300      	movcs	r3, #0
 8025db0:	3015      	adds	r0, #21
 8025db2:	fa02 f000 	lsl.w	r0, r2, r0
 8025db6:	fa23 f30c 	lsr.w	r3, r3, ip
 8025dba:	4303      	orrs	r3, r0
 8025dbc:	461c      	mov	r4, r3
 8025dbe:	ec45 4b10 	vmov	d0, r4, r5
 8025dc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025dc6:	45b8      	cmp	r8, r7
 8025dc8:	bf3a      	itte	cc
 8025dca:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8025dce:	f1a6 0708 	subcc.w	r7, r6, #8
 8025dd2:	2300      	movcs	r3, #0
 8025dd4:	380b      	subs	r0, #11
 8025dd6:	d012      	beq.n	8025dfe <__b2d+0x8a>
 8025dd8:	f1c0 0120 	rsb	r1, r0, #32
 8025ddc:	fa23 f401 	lsr.w	r4, r3, r1
 8025de0:	4082      	lsls	r2, r0
 8025de2:	4322      	orrs	r2, r4
 8025de4:	4547      	cmp	r7, r8
 8025de6:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 8025dea:	bf8c      	ite	hi
 8025dec:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8025df0:	2200      	movls	r2, #0
 8025df2:	4083      	lsls	r3, r0
 8025df4:	40ca      	lsrs	r2, r1
 8025df6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 8025dfa:	4313      	orrs	r3, r2
 8025dfc:	e7de      	b.n	8025dbc <__b2d+0x48>
 8025dfe:	ea42 0501 	orr.w	r5, r2, r1
 8025e02:	e7db      	b.n	8025dbc <__b2d+0x48>
 8025e04:	3ff00000 	.word	0x3ff00000

08025e08 <__d2b>:
 8025e08:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8025e0c:	460f      	mov	r7, r1
 8025e0e:	2101      	movs	r1, #1
 8025e10:	ec59 8b10 	vmov	r8, r9, d0
 8025e14:	4616      	mov	r6, r2
 8025e16:	f7ff fc0d 	bl	8025634 <_Balloc>
 8025e1a:	4604      	mov	r4, r0
 8025e1c:	b930      	cbnz	r0, 8025e2c <__d2b+0x24>
 8025e1e:	4602      	mov	r2, r0
 8025e20:	4b23      	ldr	r3, [pc, #140]	@ (8025eb0 <__d2b+0xa8>)
 8025e22:	4824      	ldr	r0, [pc, #144]	@ (8025eb4 <__d2b+0xac>)
 8025e24:	f240 310f 	movw	r1, #783	@ 0x30f
 8025e28:	f7fd f984 	bl	8023134 <__assert_func>
 8025e2c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8025e30:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8025e34:	b10d      	cbz	r5, 8025e3a <__d2b+0x32>
 8025e36:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8025e3a:	9301      	str	r3, [sp, #4]
 8025e3c:	f1b8 0300 	subs.w	r3, r8, #0
 8025e40:	d023      	beq.n	8025e8a <__d2b+0x82>
 8025e42:	4668      	mov	r0, sp
 8025e44:	9300      	str	r3, [sp, #0]
 8025e46:	f7ff fd04 	bl	8025852 <__lo0bits>
 8025e4a:	9900      	ldr	r1, [sp, #0]
 8025e4c:	b1d8      	cbz	r0, 8025e86 <__d2b+0x7e>
 8025e4e:	9a01      	ldr	r2, [sp, #4]
 8025e50:	f1c0 0320 	rsb	r3, r0, #32
 8025e54:	fa02 f303 	lsl.w	r3, r2, r3
 8025e58:	430b      	orrs	r3, r1
 8025e5a:	40c2      	lsrs	r2, r0
 8025e5c:	6163      	str	r3, [r4, #20]
 8025e5e:	9201      	str	r2, [sp, #4]
 8025e60:	9b01      	ldr	r3, [sp, #4]
 8025e62:	61a3      	str	r3, [r4, #24]
 8025e64:	2b00      	cmp	r3, #0
 8025e66:	bf0c      	ite	eq
 8025e68:	2201      	moveq	r2, #1
 8025e6a:	2202      	movne	r2, #2
 8025e6c:	6122      	str	r2, [r4, #16]
 8025e6e:	b1a5      	cbz	r5, 8025e9a <__d2b+0x92>
 8025e70:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8025e74:	4405      	add	r5, r0
 8025e76:	603d      	str	r5, [r7, #0]
 8025e78:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8025e7c:	6030      	str	r0, [r6, #0]
 8025e7e:	4620      	mov	r0, r4
 8025e80:	b003      	add	sp, #12
 8025e82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025e86:	6161      	str	r1, [r4, #20]
 8025e88:	e7ea      	b.n	8025e60 <__d2b+0x58>
 8025e8a:	a801      	add	r0, sp, #4
 8025e8c:	f7ff fce1 	bl	8025852 <__lo0bits>
 8025e90:	9b01      	ldr	r3, [sp, #4]
 8025e92:	6163      	str	r3, [r4, #20]
 8025e94:	3020      	adds	r0, #32
 8025e96:	2201      	movs	r2, #1
 8025e98:	e7e8      	b.n	8025e6c <__d2b+0x64>
 8025e9a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8025e9e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8025ea2:	6038      	str	r0, [r7, #0]
 8025ea4:	6918      	ldr	r0, [r3, #16]
 8025ea6:	f7ff fcb5 	bl	8025814 <__hi0bits>
 8025eaa:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8025eae:	e7e5      	b.n	8025e7c <__d2b+0x74>
 8025eb0:	0802b1c5 	.word	0x0802b1c5
 8025eb4:	0802b1d6 	.word	0x0802b1d6

08025eb8 <__ratio>:
 8025eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ebc:	b085      	sub	sp, #20
 8025ebe:	e9cd 1000 	strd	r1, r0, [sp]
 8025ec2:	a902      	add	r1, sp, #8
 8025ec4:	f7ff ff56 	bl	8025d74 <__b2d>
 8025ec8:	9800      	ldr	r0, [sp, #0]
 8025eca:	a903      	add	r1, sp, #12
 8025ecc:	ec55 4b10 	vmov	r4, r5, d0
 8025ed0:	f7ff ff50 	bl	8025d74 <__b2d>
 8025ed4:	9b01      	ldr	r3, [sp, #4]
 8025ed6:	6919      	ldr	r1, [r3, #16]
 8025ed8:	9b00      	ldr	r3, [sp, #0]
 8025eda:	691b      	ldr	r3, [r3, #16]
 8025edc:	1ac9      	subs	r1, r1, r3
 8025ede:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8025ee2:	1a9b      	subs	r3, r3, r2
 8025ee4:	ec5b ab10 	vmov	sl, fp, d0
 8025ee8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8025eec:	2b00      	cmp	r3, #0
 8025eee:	bfce      	itee	gt
 8025ef0:	462a      	movgt	r2, r5
 8025ef2:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8025ef6:	465a      	movle	r2, fp
 8025ef8:	462f      	mov	r7, r5
 8025efa:	46d9      	mov	r9, fp
 8025efc:	bfcc      	ite	gt
 8025efe:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8025f02:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8025f06:	464b      	mov	r3, r9
 8025f08:	4652      	mov	r2, sl
 8025f0a:	4620      	mov	r0, r4
 8025f0c:	4639      	mov	r1, r7
 8025f0e:	f7da fc8d 	bl	800082c <__aeabi_ddiv>
 8025f12:	ec41 0b10 	vmov	d0, r0, r1
 8025f16:	b005      	add	sp, #20
 8025f18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025f1c <__copybits>:
 8025f1c:	3901      	subs	r1, #1
 8025f1e:	b570      	push	{r4, r5, r6, lr}
 8025f20:	1149      	asrs	r1, r1, #5
 8025f22:	6914      	ldr	r4, [r2, #16]
 8025f24:	3101      	adds	r1, #1
 8025f26:	f102 0314 	add.w	r3, r2, #20
 8025f2a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8025f2e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8025f32:	1f05      	subs	r5, r0, #4
 8025f34:	42a3      	cmp	r3, r4
 8025f36:	d30c      	bcc.n	8025f52 <__copybits+0x36>
 8025f38:	1aa3      	subs	r3, r4, r2
 8025f3a:	3b11      	subs	r3, #17
 8025f3c:	f023 0303 	bic.w	r3, r3, #3
 8025f40:	3211      	adds	r2, #17
 8025f42:	4294      	cmp	r4, r2
 8025f44:	bf38      	it	cc
 8025f46:	2300      	movcc	r3, #0
 8025f48:	4418      	add	r0, r3
 8025f4a:	2300      	movs	r3, #0
 8025f4c:	4288      	cmp	r0, r1
 8025f4e:	d305      	bcc.n	8025f5c <__copybits+0x40>
 8025f50:	bd70      	pop	{r4, r5, r6, pc}
 8025f52:	f853 6b04 	ldr.w	r6, [r3], #4
 8025f56:	f845 6f04 	str.w	r6, [r5, #4]!
 8025f5a:	e7eb      	b.n	8025f34 <__copybits+0x18>
 8025f5c:	f840 3b04 	str.w	r3, [r0], #4
 8025f60:	e7f4      	b.n	8025f4c <__copybits+0x30>

08025f62 <__any_on>:
 8025f62:	f100 0214 	add.w	r2, r0, #20
 8025f66:	6900      	ldr	r0, [r0, #16]
 8025f68:	114b      	asrs	r3, r1, #5
 8025f6a:	4298      	cmp	r0, r3
 8025f6c:	b510      	push	{r4, lr}
 8025f6e:	db11      	blt.n	8025f94 <__any_on+0x32>
 8025f70:	dd0a      	ble.n	8025f88 <__any_on+0x26>
 8025f72:	f011 011f 	ands.w	r1, r1, #31
 8025f76:	d007      	beq.n	8025f88 <__any_on+0x26>
 8025f78:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8025f7c:	fa24 f001 	lsr.w	r0, r4, r1
 8025f80:	fa00 f101 	lsl.w	r1, r0, r1
 8025f84:	428c      	cmp	r4, r1
 8025f86:	d10b      	bne.n	8025fa0 <__any_on+0x3e>
 8025f88:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8025f8c:	4293      	cmp	r3, r2
 8025f8e:	d803      	bhi.n	8025f98 <__any_on+0x36>
 8025f90:	2000      	movs	r0, #0
 8025f92:	bd10      	pop	{r4, pc}
 8025f94:	4603      	mov	r3, r0
 8025f96:	e7f7      	b.n	8025f88 <__any_on+0x26>
 8025f98:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8025f9c:	2900      	cmp	r1, #0
 8025f9e:	d0f5      	beq.n	8025f8c <__any_on+0x2a>
 8025fa0:	2001      	movs	r0, #1
 8025fa2:	e7f6      	b.n	8025f92 <__any_on+0x30>

08025fa4 <sulp>:
 8025fa4:	b570      	push	{r4, r5, r6, lr}
 8025fa6:	4604      	mov	r4, r0
 8025fa8:	460d      	mov	r5, r1
 8025faa:	ec45 4b10 	vmov	d0, r4, r5
 8025fae:	4616      	mov	r6, r2
 8025fb0:	f7ff feba 	bl	8025d28 <__ulp>
 8025fb4:	ec51 0b10 	vmov	r0, r1, d0
 8025fb8:	b17e      	cbz	r6, 8025fda <sulp+0x36>
 8025fba:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8025fbe:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8025fc2:	2b00      	cmp	r3, #0
 8025fc4:	dd09      	ble.n	8025fda <sulp+0x36>
 8025fc6:	051b      	lsls	r3, r3, #20
 8025fc8:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8025fcc:	2400      	movs	r4, #0
 8025fce:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8025fd2:	4622      	mov	r2, r4
 8025fd4:	462b      	mov	r3, r5
 8025fd6:	f7da faff 	bl	80005d8 <__aeabi_dmul>
 8025fda:	ec41 0b10 	vmov	d0, r0, r1
 8025fde:	bd70      	pop	{r4, r5, r6, pc}

08025fe0 <_strtod_l>:
 8025fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025fe4:	b09d      	sub	sp, #116	@ 0x74
 8025fe6:	460e      	mov	r6, r1
 8025fe8:	9215      	str	r2, [sp, #84]	@ 0x54
 8025fea:	2200      	movs	r2, #0
 8025fec:	9004      	str	r0, [sp, #16]
 8025fee:	9218      	str	r2, [sp, #96]	@ 0x60
 8025ff0:	f04f 0800 	mov.w	r8, #0
 8025ff4:	f04f 0900 	mov.w	r9, #0
 8025ff8:	9117      	str	r1, [sp, #92]	@ 0x5c
 8025ffa:	780a      	ldrb	r2, [r1, #0]
 8025ffc:	2a2b      	cmp	r2, #43	@ 0x2b
 8025ffe:	460d      	mov	r5, r1
 8026000:	f101 0101 	add.w	r1, r1, #1
 8026004:	d01d      	beq.n	8026042 <_strtod_l+0x62>
 8026006:	d80b      	bhi.n	8026020 <_strtod_l+0x40>
 8026008:	2a0d      	cmp	r2, #13
 802600a:	d806      	bhi.n	802601a <_strtod_l+0x3a>
 802600c:	2a08      	cmp	r2, #8
 802600e:	d8f3      	bhi.n	8025ff8 <_strtod_l+0x18>
 8026010:	b17a      	cbz	r2, 8026032 <_strtod_l+0x52>
 8026012:	2300      	movs	r3, #0
 8026014:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026016:	469a      	mov	sl, r3
 8026018:	e083      	b.n	8026122 <_strtod_l+0x142>
 802601a:	2a20      	cmp	r2, #32
 802601c:	d0ec      	beq.n	8025ff8 <_strtod_l+0x18>
 802601e:	e7f8      	b.n	8026012 <_strtod_l+0x32>
 8026020:	2a2d      	cmp	r2, #45	@ 0x2d
 8026022:	d110      	bne.n	8026046 <_strtod_l+0x66>
 8026024:	2201      	movs	r2, #1
 8026026:	1c69      	adds	r1, r5, #1
 8026028:	9117      	str	r1, [sp, #92]	@ 0x5c
 802602a:	920b      	str	r2, [sp, #44]	@ 0x2c
 802602c:	786a      	ldrb	r2, [r5, #1]
 802602e:	2a00      	cmp	r2, #0
 8026030:	d137      	bne.n	80260a2 <_strtod_l+0xc2>
 8026032:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8026034:	9617      	str	r6, [sp, #92]	@ 0x5c
 8026036:	2b00      	cmp	r3, #0
 8026038:	f040 8595 	bne.w	8026b66 <_strtod_l+0xb86>
 802603c:	4642      	mov	r2, r8
 802603e:	464b      	mov	r3, r9
 8026040:	e02a      	b.n	8026098 <_strtod_l+0xb8>
 8026042:	2200      	movs	r2, #0
 8026044:	e7ef      	b.n	8026026 <_strtod_l+0x46>
 8026046:	2100      	movs	r1, #0
 8026048:	910b      	str	r1, [sp, #44]	@ 0x2c
 802604a:	2a30      	cmp	r2, #48	@ 0x30
 802604c:	f040 809b 	bne.w	8026186 <_strtod_l+0x1a6>
 8026050:	786a      	ldrb	r2, [r5, #1]
 8026052:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8026056:	2a58      	cmp	r2, #88	@ 0x58
 8026058:	d15a      	bne.n	8026110 <_strtod_l+0x130>
 802605a:	9302      	str	r3, [sp, #8]
 802605c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802605e:	9301      	str	r3, [sp, #4]
 8026060:	ab18      	add	r3, sp, #96	@ 0x60
 8026062:	9300      	str	r3, [sp, #0]
 8026064:	4a81      	ldr	r2, [pc, #516]	@ (802626c <_strtod_l+0x28c>)
 8026066:	9804      	ldr	r0, [sp, #16]
 8026068:	ab19      	add	r3, sp, #100	@ 0x64
 802606a:	a917      	add	r1, sp, #92	@ 0x5c
 802606c:	f001 fdf8 	bl	8027c60 <__gethex>
 8026070:	f010 060f 	ands.w	r6, r0, #15
 8026074:	4604      	mov	r4, r0
 8026076:	d005      	beq.n	8026084 <_strtod_l+0xa4>
 8026078:	2e06      	cmp	r6, #6
 802607a:	d114      	bne.n	80260a6 <_strtod_l+0xc6>
 802607c:	3501      	adds	r5, #1
 802607e:	2300      	movs	r3, #0
 8026080:	9517      	str	r5, [sp, #92]	@ 0x5c
 8026082:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026084:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8026086:	2b00      	cmp	r3, #0
 8026088:	f040 856f 	bne.w	8026b6a <_strtod_l+0xb8a>
 802608c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802608e:	2b00      	cmp	r3, #0
 8026090:	d0d4      	beq.n	802603c <_strtod_l+0x5c>
 8026092:	4642      	mov	r2, r8
 8026094:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8026098:	ec43 2b10 	vmov	d0, r2, r3
 802609c:	b01d      	add	sp, #116	@ 0x74
 802609e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260a2:	460d      	mov	r5, r1
 80260a4:	e7d1      	b.n	802604a <_strtod_l+0x6a>
 80260a6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80260a8:	b13a      	cbz	r2, 80260ba <_strtod_l+0xda>
 80260aa:	2135      	movs	r1, #53	@ 0x35
 80260ac:	a81a      	add	r0, sp, #104	@ 0x68
 80260ae:	f7ff ff35 	bl	8025f1c <__copybits>
 80260b2:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80260b4:	9804      	ldr	r0, [sp, #16]
 80260b6:	f7ff fafb 	bl	80256b0 <_Bfree>
 80260ba:	3e01      	subs	r6, #1
 80260bc:	2e04      	cmp	r6, #4
 80260be:	d806      	bhi.n	80260ce <_strtod_l+0xee>
 80260c0:	e8df f006 	tbb	[pc, r6]
 80260c4:	211e0314 	.word	0x211e0314
 80260c8:	14          	.byte	0x14
 80260c9:	00          	.byte	0x00
 80260ca:	e9dd 891a 	ldrd	r8, r9, [sp, #104]	@ 0x68
 80260ce:	05e0      	lsls	r0, r4, #23
 80260d0:	bf48      	it	mi
 80260d2:	f049 4900 	orrmi.w	r9, r9, #2147483648	@ 0x80000000
 80260d6:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80260da:	0d1b      	lsrs	r3, r3, #20
 80260dc:	051b      	lsls	r3, r3, #20
 80260de:	2b00      	cmp	r3, #0
 80260e0:	d1d0      	bne.n	8026084 <_strtod_l+0xa4>
 80260e2:	f7fe fba5 	bl	8024830 <__errno>
 80260e6:	2322      	movs	r3, #34	@ 0x22
 80260e8:	6003      	str	r3, [r0, #0]
 80260ea:	e7cb      	b.n	8026084 <_strtod_l+0xa4>
 80260ec:	e9dd 831a 	ldrd	r8, r3, [sp, #104]	@ 0x68
 80260f0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80260f2:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80260f6:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 80260fa:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80260fe:	e7e6      	b.n	80260ce <_strtod_l+0xee>
 8026100:	f8df 9170 	ldr.w	r9, [pc, #368]	@ 8026274 <_strtod_l+0x294>
 8026104:	e7e3      	b.n	80260ce <_strtod_l+0xee>
 8026106:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
 802610a:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 802610e:	e7de      	b.n	80260ce <_strtod_l+0xee>
 8026110:	3501      	adds	r5, #1
 8026112:	9517      	str	r5, [sp, #92]	@ 0x5c
 8026114:	782b      	ldrb	r3, [r5, #0]
 8026116:	2b30      	cmp	r3, #48	@ 0x30
 8026118:	d0fa      	beq.n	8026110 <_strtod_l+0x130>
 802611a:	2b00      	cmp	r3, #0
 802611c:	d0b2      	beq.n	8026084 <_strtod_l+0xa4>
 802611e:	f04f 0a01 	mov.w	sl, #1
 8026122:	2700      	movs	r7, #0
 8026124:	462b      	mov	r3, r5
 8026126:	970e      	str	r7, [sp, #56]	@ 0x38
 8026128:	46bb      	mov	fp, r7
 802612a:	210a      	movs	r1, #10
 802612c:	4618      	mov	r0, r3
 802612e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8026132:	f1a4 0230 	sub.w	r2, r4, #48	@ 0x30
 8026136:	2a09      	cmp	r2, #9
 8026138:	d928      	bls.n	802618c <_strtod_l+0x1ac>
 802613a:	494d      	ldr	r1, [pc, #308]	@ (8026270 <_strtod_l+0x290>)
 802613c:	2201      	movs	r2, #1
 802613e:	f7fe fac7 	bl	80246d0 <strncmp>
 8026142:	2800      	cmp	r0, #0
 8026144:	d034      	beq.n	80261b0 <_strtod_l+0x1d0>
 8026146:	2000      	movs	r0, #0
 8026148:	e9cd 0006 	strd	r0, r0, [sp, #24]
 802614c:	4622      	mov	r2, r4
 802614e:	465c      	mov	r4, fp
 8026150:	2a65      	cmp	r2, #101	@ 0x65
 8026152:	d001      	beq.n	8026158 <_strtod_l+0x178>
 8026154:	2a45      	cmp	r2, #69	@ 0x45
 8026156:	d114      	bne.n	8026182 <_strtod_l+0x1a2>
 8026158:	b924      	cbnz	r4, 8026164 <_strtod_l+0x184>
 802615a:	ea5a 0300 	orrs.w	r3, sl, r0
 802615e:	f43f af68 	beq.w	8026032 <_strtod_l+0x52>
 8026162:	2400      	movs	r4, #0
 8026164:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8026166:	1c73      	adds	r3, r6, #1
 8026168:	9317      	str	r3, [sp, #92]	@ 0x5c
 802616a:	7872      	ldrb	r2, [r6, #1]
 802616c:	2a2b      	cmp	r2, #43	@ 0x2b
 802616e:	d073      	beq.n	8026258 <_strtod_l+0x278>
 8026170:	2a2d      	cmp	r2, #45	@ 0x2d
 8026172:	d077      	beq.n	8026264 <_strtod_l+0x284>
 8026174:	f04f 0c00 	mov.w	ip, #0
 8026178:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 802617c:	2b09      	cmp	r3, #9
 802617e:	d97f      	bls.n	8026280 <_strtod_l+0x2a0>
 8026180:	9617      	str	r6, [sp, #92]	@ 0x5c
 8026182:	2300      	movs	r3, #0
 8026184:	e09e      	b.n	80262c4 <_strtod_l+0x2e4>
 8026186:	f04f 0a00 	mov.w	sl, #0
 802618a:	e7ca      	b.n	8026122 <_strtod_l+0x142>
 802618c:	f1bb 0f08 	cmp.w	fp, #8
 8026190:	bfd8      	it	le
 8026192:	9a0e      	ldrle	r2, [sp, #56]	@ 0x38
 8026194:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026196:	bfdb      	ittet	le
 8026198:	fb01 4202 	mlale	r2, r1, r2, r4
 802619c:	3a30      	suble	r2, #48	@ 0x30
 802619e:	fb01 4207 	mlagt	r2, r1, r7, r4
 80261a2:	920e      	strle	r2, [sp, #56]	@ 0x38
 80261a4:	bfc8      	it	gt
 80261a6:	f1a2 0730 	subgt.w	r7, r2, #48	@ 0x30
 80261aa:	f10b 0b01 	add.w	fp, fp, #1
 80261ae:	e7bd      	b.n	802612c <_strtod_l+0x14c>
 80261b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80261b2:	1c5a      	adds	r2, r3, #1
 80261b4:	9217      	str	r2, [sp, #92]	@ 0x5c
 80261b6:	785a      	ldrb	r2, [r3, #1]
 80261b8:	f1bb 0f00 	cmp.w	fp, #0
 80261bc:	d034      	beq.n	8026228 <_strtod_l+0x248>
 80261be:	9006      	str	r0, [sp, #24]
 80261c0:	465c      	mov	r4, fp
 80261c2:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 80261c6:	2b09      	cmp	r3, #9
 80261c8:	d912      	bls.n	80261f0 <_strtod_l+0x210>
 80261ca:	2301      	movs	r3, #1
 80261cc:	9307      	str	r3, [sp, #28]
 80261ce:	e7bf      	b.n	8026150 <_strtod_l+0x170>
 80261d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80261d2:	1c5a      	adds	r2, r3, #1
 80261d4:	9217      	str	r2, [sp, #92]	@ 0x5c
 80261d6:	785a      	ldrb	r2, [r3, #1]
 80261d8:	3001      	adds	r0, #1
 80261da:	2a30      	cmp	r2, #48	@ 0x30
 80261dc:	d0f8      	beq.n	80261d0 <_strtod_l+0x1f0>
 80261de:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 80261e2:	2b08      	cmp	r3, #8
 80261e4:	f200 84c6 	bhi.w	8026b74 <_strtod_l+0xb94>
 80261e8:	9006      	str	r0, [sp, #24]
 80261ea:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
 80261ec:	2000      	movs	r0, #0
 80261ee:	4604      	mov	r4, r0
 80261f0:	3a30      	subs	r2, #48	@ 0x30
 80261f2:	f100 0301 	add.w	r3, r0, #1
 80261f6:	d011      	beq.n	802621c <_strtod_l+0x23c>
 80261f8:	9906      	ldr	r1, [sp, #24]
 80261fa:	4419      	add	r1, r3
 80261fc:	9106      	str	r1, [sp, #24]
 80261fe:	4623      	mov	r3, r4
 8026200:	4420      	add	r0, r4
 8026202:	210a      	movs	r1, #10
 8026204:	4283      	cmp	r3, r0
 8026206:	f103 0401 	add.w	r4, r3, #1
 802620a:	d10f      	bne.n	802622c <_strtod_l+0x24c>
 802620c:	2b08      	cmp	r3, #8
 802620e:	dc18      	bgt.n	8026242 <_strtod_l+0x262>
 8026210:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8026212:	230a      	movs	r3, #10
 8026214:	fb03 2301 	mla	r3, r3, r1, r2
 8026218:	930e      	str	r3, [sp, #56]	@ 0x38
 802621a:	2300      	movs	r3, #0
 802621c:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 802621e:	1c51      	adds	r1, r2, #1
 8026220:	9117      	str	r1, [sp, #92]	@ 0x5c
 8026222:	7852      	ldrb	r2, [r2, #1]
 8026224:	4618      	mov	r0, r3
 8026226:	e7cc      	b.n	80261c2 <_strtod_l+0x1e2>
 8026228:	4658      	mov	r0, fp
 802622a:	e7d6      	b.n	80261da <_strtod_l+0x1fa>
 802622c:	2b08      	cmp	r3, #8
 802622e:	dc04      	bgt.n	802623a <_strtod_l+0x25a>
 8026230:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8026232:	434c      	muls	r4, r1
 8026234:	940e      	str	r4, [sp, #56]	@ 0x38
 8026236:	3301      	adds	r3, #1
 8026238:	e7e4      	b.n	8026204 <_strtod_l+0x224>
 802623a:	2c10      	cmp	r4, #16
 802623c:	bfd8      	it	le
 802623e:	434f      	mulle	r7, r1
 8026240:	e7f9      	b.n	8026236 <_strtod_l+0x256>
 8026242:	2b0f      	cmp	r3, #15
 8026244:	bfdc      	itt	le
 8026246:	230a      	movle	r3, #10
 8026248:	fb03 2707 	mlale	r7, r3, r7, r2
 802624c:	e7e5      	b.n	802621a <_strtod_l+0x23a>
 802624e:	2100      	movs	r1, #0
 8026250:	2301      	movs	r3, #1
 8026252:	e9cd 1306 	strd	r1, r3, [sp, #24]
 8026256:	e780      	b.n	802615a <_strtod_l+0x17a>
 8026258:	f04f 0c00 	mov.w	ip, #0
 802625c:	1cb3      	adds	r3, r6, #2
 802625e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026260:	78b2      	ldrb	r2, [r6, #2]
 8026262:	e789      	b.n	8026178 <_strtod_l+0x198>
 8026264:	f04f 0c01 	mov.w	ip, #1
 8026268:	e7f8      	b.n	802625c <_strtod_l+0x27c>
 802626a:	bf00      	nop
 802626c:	08037b34 	.word	0x08037b34
 8026270:	0802b230 	.word	0x0802b230
 8026274:	7ff00000 	.word	0x7ff00000
 8026278:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802627a:	1c5a      	adds	r2, r3, #1
 802627c:	9217      	str	r2, [sp, #92]	@ 0x5c
 802627e:	785a      	ldrb	r2, [r3, #1]
 8026280:	2a30      	cmp	r2, #48	@ 0x30
 8026282:	d0f9      	beq.n	8026278 <_strtod_l+0x298>
 8026284:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8026288:	2b08      	cmp	r3, #8
 802628a:	f63f af7a 	bhi.w	8026182 <_strtod_l+0x1a2>
 802628e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026290:	9305      	str	r3, [sp, #20]
 8026292:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8026296:	3301      	adds	r3, #1
 8026298:	9317      	str	r3, [sp, #92]	@ 0x5c
 802629a:	781a      	ldrb	r2, [r3, #0]
 802629c:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80262a0:	2909      	cmp	r1, #9
 80262a2:	d93c      	bls.n	802631e <_strtod_l+0x33e>
 80262a4:	9905      	ldr	r1, [sp, #20]
 80262a6:	1a5b      	subs	r3, r3, r1
 80262a8:	2b08      	cmp	r3, #8
 80262aa:	f644 631f 	movw	r3, #19999	@ 0x4e1f
 80262ae:	dc3c      	bgt.n	802632a <_strtod_l+0x34a>
 80262b0:	459e      	cmp	lr, r3
 80262b2:	4671      	mov	r1, lr
 80262b4:	bfa8      	it	ge
 80262b6:	4619      	movge	r1, r3
 80262b8:	9105      	str	r1, [sp, #20]
 80262ba:	f1bc 0f00 	cmp.w	ip, #0
 80262be:	d002      	beq.n	80262c6 <_strtod_l+0x2e6>
 80262c0:	9b05      	ldr	r3, [sp, #20]
 80262c2:	425b      	negs	r3, r3
 80262c4:	9305      	str	r3, [sp, #20]
 80262c6:	2c00      	cmp	r4, #0
 80262c8:	d150      	bne.n	802636c <_strtod_l+0x38c>
 80262ca:	ea5a 0000 	orrs.w	r0, sl, r0
 80262ce:	f47f aed9 	bne.w	8026084 <_strtod_l+0xa4>
 80262d2:	9b07      	ldr	r3, [sp, #28]
 80262d4:	2b00      	cmp	r3, #0
 80262d6:	f47f aeac 	bne.w	8026032 <_strtod_l+0x52>
 80262da:	2a69      	cmp	r2, #105	@ 0x69
 80262dc:	d029      	beq.n	8026332 <_strtod_l+0x352>
 80262de:	dc26      	bgt.n	802632e <_strtod_l+0x34e>
 80262e0:	2a49      	cmp	r2, #73	@ 0x49
 80262e2:	d026      	beq.n	8026332 <_strtod_l+0x352>
 80262e4:	2a4e      	cmp	r2, #78	@ 0x4e
 80262e6:	f47f aea4 	bne.w	8026032 <_strtod_l+0x52>
 80262ea:	49a1      	ldr	r1, [pc, #644]	@ (8026570 <_strtod_l+0x590>)
 80262ec:	a817      	add	r0, sp, #92	@ 0x5c
 80262ee:	f001 fed9 	bl	80280a4 <__match>
 80262f2:	2800      	cmp	r0, #0
 80262f4:	f43f ae9d 	beq.w	8026032 <_strtod_l+0x52>
 80262f8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80262fa:	781b      	ldrb	r3, [r3, #0]
 80262fc:	2b28      	cmp	r3, #40	@ 0x28
 80262fe:	d12f      	bne.n	8026360 <_strtod_l+0x380>
 8026300:	499c      	ldr	r1, [pc, #624]	@ (8026574 <_strtod_l+0x594>)
 8026302:	aa1a      	add	r2, sp, #104	@ 0x68
 8026304:	a817      	add	r0, sp, #92	@ 0x5c
 8026306:	f001 fee1 	bl	80280cc <__hexnan>
 802630a:	2805      	cmp	r0, #5
 802630c:	d128      	bne.n	8026360 <_strtod_l+0x380>
 802630e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026310:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8026314:	f043 49ff 	orr.w	r9, r3, #2139095040	@ 0x7f800000
 8026318:	f449 09e0 	orr.w	r9, r9, #7340032	@ 0x700000
 802631c:	e6b2      	b.n	8026084 <_strtod_l+0xa4>
 802631e:	210a      	movs	r1, #10
 8026320:	fb01 220e 	mla	r2, r1, lr, r2
 8026324:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8026328:	e7b5      	b.n	8026296 <_strtod_l+0x2b6>
 802632a:	9305      	str	r3, [sp, #20]
 802632c:	e7c5      	b.n	80262ba <_strtod_l+0x2da>
 802632e:	2a6e      	cmp	r2, #110	@ 0x6e
 8026330:	e7d9      	b.n	80262e6 <_strtod_l+0x306>
 8026332:	4991      	ldr	r1, [pc, #580]	@ (8026578 <_strtod_l+0x598>)
 8026334:	a817      	add	r0, sp, #92	@ 0x5c
 8026336:	f001 feb5 	bl	80280a4 <__match>
 802633a:	2800      	cmp	r0, #0
 802633c:	f43f ae79 	beq.w	8026032 <_strtod_l+0x52>
 8026340:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026342:	498e      	ldr	r1, [pc, #568]	@ (802657c <_strtod_l+0x59c>)
 8026344:	3b01      	subs	r3, #1
 8026346:	a817      	add	r0, sp, #92	@ 0x5c
 8026348:	9317      	str	r3, [sp, #92]	@ 0x5c
 802634a:	f001 feab 	bl	80280a4 <__match>
 802634e:	b910      	cbnz	r0, 8026356 <_strtod_l+0x376>
 8026350:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026352:	3301      	adds	r3, #1
 8026354:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026356:	f8df 9234 	ldr.w	r9, [pc, #564]	@ 802658c <_strtod_l+0x5ac>
 802635a:	f04f 0800 	mov.w	r8, #0
 802635e:	e691      	b.n	8026084 <_strtod_l+0xa4>
 8026360:	4887      	ldr	r0, [pc, #540]	@ (8026580 <_strtod_l+0x5a0>)
 8026362:	f001 fbf9 	bl	8027b58 <nan>
 8026366:	ec59 8b10 	vmov	r8, r9, d0
 802636a:	e68b      	b.n	8026084 <_strtod_l+0xa4>
 802636c:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8026370:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8026372:	1a9b      	subs	r3, r3, r2
 8026374:	f1bb 0f00 	cmp.w	fp, #0
 8026378:	bf08      	it	eq
 802637a:	46a3      	moveq	fp, r4
 802637c:	2c10      	cmp	r4, #16
 802637e:	930a      	str	r3, [sp, #40]	@ 0x28
 8026380:	46a2      	mov	sl, r4
 8026382:	bfa8      	it	ge
 8026384:	f04f 0a10 	movge.w	sl, #16
 8026388:	f7da f8ac 	bl	80004e4 <__aeabi_ui2d>
 802638c:	2c09      	cmp	r4, #9
 802638e:	4680      	mov	r8, r0
 8026390:	4689      	mov	r9, r1
 8026392:	dc13      	bgt.n	80263bc <_strtod_l+0x3dc>
 8026394:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026396:	2b00      	cmp	r3, #0
 8026398:	f43f ae74 	beq.w	8026084 <_strtod_l+0xa4>
 802639c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802639e:	dd73      	ble.n	8026488 <_strtod_l+0x4a8>
 80263a0:	2b16      	cmp	r3, #22
 80263a2:	dc5a      	bgt.n	802645a <_strtod_l+0x47a>
 80263a4:	4977      	ldr	r1, [pc, #476]	@ (8026584 <_strtod_l+0x5a4>)
 80263a6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80263aa:	e9d1 0100 	ldrd	r0, r1, [r1]
 80263ae:	4642      	mov	r2, r8
 80263b0:	464b      	mov	r3, r9
 80263b2:	f7da f911 	bl	80005d8 <__aeabi_dmul>
 80263b6:	4680      	mov	r8, r0
 80263b8:	4689      	mov	r9, r1
 80263ba:	e663      	b.n	8026084 <_strtod_l+0xa4>
 80263bc:	4b71      	ldr	r3, [pc, #452]	@ (8026584 <_strtod_l+0x5a4>)
 80263be:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80263c2:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 80263c6:	f7da f907 	bl	80005d8 <__aeabi_dmul>
 80263ca:	4680      	mov	r8, r0
 80263cc:	4638      	mov	r0, r7
 80263ce:	4689      	mov	r9, r1
 80263d0:	f7da f888 	bl	80004e4 <__aeabi_ui2d>
 80263d4:	4602      	mov	r2, r0
 80263d6:	460b      	mov	r3, r1
 80263d8:	4640      	mov	r0, r8
 80263da:	4649      	mov	r1, r9
 80263dc:	f7d9 ff46 	bl	800026c <__adddf3>
 80263e0:	2c0f      	cmp	r4, #15
 80263e2:	4680      	mov	r8, r0
 80263e4:	4689      	mov	r9, r1
 80263e6:	ddd5      	ble.n	8026394 <_strtod_l+0x3b4>
 80263e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80263ea:	eba4 0a0a 	sub.w	sl, r4, sl
 80263ee:	449a      	add	sl, r3
 80263f0:	f1ba 0f00 	cmp.w	sl, #0
 80263f4:	f340 8097 	ble.w	8026526 <_strtod_l+0x546>
 80263f8:	f02a 060f 	bic.w	r6, sl, #15
 80263fc:	f01a 0a0f 	ands.w	sl, sl, #15
 8026400:	d151      	bne.n	80264a6 <_strtod_l+0x4c6>
 8026402:	f5b6 7f9a 	cmp.w	r6, #308	@ 0x134
 8026406:	dc5e      	bgt.n	80264c6 <_strtod_l+0x4e6>
 8026408:	2300      	movs	r3, #0
 802640a:	f8df a17c 	ldr.w	sl, [pc, #380]	@ 8026588 <_strtod_l+0x5a8>
 802640e:	1136      	asrs	r6, r6, #4
 8026410:	4640      	mov	r0, r8
 8026412:	4649      	mov	r1, r9
 8026414:	461f      	mov	r7, r3
 8026416:	2e01      	cmp	r6, #1
 8026418:	d179      	bne.n	802650e <_strtod_l+0x52e>
 802641a:	b10b      	cbz	r3, 8026420 <_strtod_l+0x440>
 802641c:	4680      	mov	r8, r0
 802641e:	4689      	mov	r9, r1
 8026420:	4959      	ldr	r1, [pc, #356]	@ (8026588 <_strtod_l+0x5a8>)
 8026422:	f1a9 7954 	sub.w	r9, r9, #55574528	@ 0x3500000
 8026426:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 802642a:	4642      	mov	r2, r8
 802642c:	464b      	mov	r3, r9
 802642e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8026432:	f7da f8d1 	bl	80005d8 <__aeabi_dmul>
 8026436:	4b55      	ldr	r3, [pc, #340]	@ (802658c <_strtod_l+0x5ac>)
 8026438:	460a      	mov	r2, r1
 802643a:	400b      	ands	r3, r1
 802643c:	4954      	ldr	r1, [pc, #336]	@ (8026590 <_strtod_l+0x5b0>)
 802643e:	428b      	cmp	r3, r1
 8026440:	4680      	mov	r8, r0
 8026442:	d840      	bhi.n	80264c6 <_strtod_l+0x4e6>
 8026444:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8026448:	428b      	cmp	r3, r1
 802644a:	bf86      	itte	hi
 802644c:	f8df 9144 	ldrhi.w	r9, [pc, #324]	@ 8026594 <_strtod_l+0x5b4>
 8026450:	f04f 38ff 	movhi.w	r8, #4294967295	@ 0xffffffff
 8026454:	f102 7954 	addls.w	r9, r2, #55574528	@ 0x3500000
 8026458:	e032      	b.n	80264c0 <_strtod_l+0x4e0>
 802645a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802645c:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
 8026460:	4293      	cmp	r3, r2
 8026462:	dbc1      	blt.n	80263e8 <_strtod_l+0x408>
 8026464:	4d47      	ldr	r5, [pc, #284]	@ (8026584 <_strtod_l+0x5a4>)
 8026466:	f1c4 040f 	rsb	r4, r4, #15
 802646a:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 802646e:	4642      	mov	r2, r8
 8026470:	464b      	mov	r3, r9
 8026472:	e9d1 0100 	ldrd	r0, r1, [r1]
 8026476:	f7da f8af 	bl	80005d8 <__aeabi_dmul>
 802647a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802647c:	1b1c      	subs	r4, r3, r4
 802647e:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8026482:	e9d5 2300 	ldrd	r2, r3, [r5]
 8026486:	e794      	b.n	80263b2 <_strtod_l+0x3d2>
 8026488:	3316      	adds	r3, #22
 802648a:	dbad      	blt.n	80263e8 <_strtod_l+0x408>
 802648c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 8026490:	1a9a      	subs	r2, r3, r2
 8026492:	4b3c      	ldr	r3, [pc, #240]	@ (8026584 <_strtod_l+0x5a4>)
 8026494:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8026498:	e9d3 2300 	ldrd	r2, r3, [r3]
 802649c:	4640      	mov	r0, r8
 802649e:	4649      	mov	r1, r9
 80264a0:	f7da f9c4 	bl	800082c <__aeabi_ddiv>
 80264a4:	e787      	b.n	80263b6 <_strtod_l+0x3d6>
 80264a6:	4937      	ldr	r1, [pc, #220]	@ (8026584 <_strtod_l+0x5a4>)
 80264a8:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80264ac:	4642      	mov	r2, r8
 80264ae:	464b      	mov	r3, r9
 80264b0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80264b4:	f7da f890 	bl	80005d8 <__aeabi_dmul>
 80264b8:	4680      	mov	r8, r0
 80264ba:	4689      	mov	r9, r1
 80264bc:	2e00      	cmp	r6, #0
 80264be:	d1a0      	bne.n	8026402 <_strtod_l+0x422>
 80264c0:	2300      	movs	r3, #0
 80264c2:	9307      	str	r3, [sp, #28]
 80264c4:	e0a0      	b.n	8026608 <_strtod_l+0x628>
 80264c6:	2400      	movs	r4, #0
 80264c8:	9405      	str	r4, [sp, #20]
 80264ca:	940e      	str	r4, [sp, #56]	@ 0x38
 80264cc:	9406      	str	r4, [sp, #24]
 80264ce:	9a04      	ldr	r2, [sp, #16]
 80264d0:	f8df 90b8 	ldr.w	r9, [pc, #184]	@ 802658c <_strtod_l+0x5ac>
 80264d4:	2322      	movs	r3, #34	@ 0x22
 80264d6:	6013      	str	r3, [r2, #0]
 80264d8:	f04f 0800 	mov.w	r8, #0
 80264dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80264de:	2b00      	cmp	r3, #0
 80264e0:	f43f add0 	beq.w	8026084 <_strtod_l+0xa4>
 80264e4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80264e6:	9804      	ldr	r0, [sp, #16]
 80264e8:	f7ff f8e2 	bl	80256b0 <_Bfree>
 80264ec:	9906      	ldr	r1, [sp, #24]
 80264ee:	9804      	ldr	r0, [sp, #16]
 80264f0:	f7ff f8de 	bl	80256b0 <_Bfree>
 80264f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80264f8:	f7ff f8da 	bl	80256b0 <_Bfree>
 80264fc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80264fe:	9804      	ldr	r0, [sp, #16]
 8026500:	f7ff f8d6 	bl	80256b0 <_Bfree>
 8026504:	9804      	ldr	r0, [sp, #16]
 8026506:	4621      	mov	r1, r4
 8026508:	f7ff f8d2 	bl	80256b0 <_Bfree>
 802650c:	e5ba      	b.n	8026084 <_strtod_l+0xa4>
 802650e:	07f2      	lsls	r2, r6, #31
 8026510:	d504      	bpl.n	802651c <_strtod_l+0x53c>
 8026512:	e9da 2300 	ldrd	r2, r3, [sl]
 8026516:	f7da f85f 	bl	80005d8 <__aeabi_dmul>
 802651a:	2301      	movs	r3, #1
 802651c:	3701      	adds	r7, #1
 802651e:	1076      	asrs	r6, r6, #1
 8026520:	f10a 0a08 	add.w	sl, sl, #8
 8026524:	e777      	b.n	8026416 <_strtod_l+0x436>
 8026526:	d0cb      	beq.n	80264c0 <_strtod_l+0x4e0>
 8026528:	f1ca 0a00 	rsb	sl, sl, #0
 802652c:	ea4f 162a 	mov.w	r6, sl, asr #4
 8026530:	f01a 0a0f 	ands.w	sl, sl, #15
 8026534:	d10d      	bne.n	8026552 <_strtod_l+0x572>
 8026536:	2e1f      	cmp	r6, #31
 8026538:	dd2e      	ble.n	8026598 <_strtod_l+0x5b8>
 802653a:	2400      	movs	r4, #0
 802653c:	9405      	str	r4, [sp, #20]
 802653e:	940e      	str	r4, [sp, #56]	@ 0x38
 8026540:	9406      	str	r4, [sp, #24]
 8026542:	9a04      	ldr	r2, [sp, #16]
 8026544:	2322      	movs	r3, #34	@ 0x22
 8026546:	f04f 0800 	mov.w	r8, #0
 802654a:	f04f 0900 	mov.w	r9, #0
 802654e:	6013      	str	r3, [r2, #0]
 8026550:	e7c4      	b.n	80264dc <_strtod_l+0x4fc>
 8026552:	4b0c      	ldr	r3, [pc, #48]	@ (8026584 <_strtod_l+0x5a4>)
 8026554:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8026558:	4640      	mov	r0, r8
 802655a:	4649      	mov	r1, r9
 802655c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026560:	f7da f964 	bl	800082c <__aeabi_ddiv>
 8026564:	4680      	mov	r8, r0
 8026566:	4689      	mov	r9, r1
 8026568:	2e00      	cmp	r6, #0
 802656a:	d0a9      	beq.n	80264c0 <_strtod_l+0x4e0>
 802656c:	e7e3      	b.n	8026536 <_strtod_l+0x556>
 802656e:	bf00      	nop
 8026570:	0802b11e 	.word	0x0802b11e
 8026574:	08037b20 	.word	0x08037b20
 8026578:	0802b116 	.word	0x0802b116
 802657c:	0802b14b 	.word	0x0802b14b
 8026580:	0802b110 	.word	0x0802b110
 8026584:	08037a58 	.word	0x08037a58
 8026588:	08037a30 	.word	0x08037a30
 802658c:	7ff00000 	.word	0x7ff00000
 8026590:	7ca00000 	.word	0x7ca00000
 8026594:	7fefffff 	.word	0x7fefffff
 8026598:	f016 0310 	ands.w	r3, r6, #16
 802659c:	bf18      	it	ne
 802659e:	236a      	movne	r3, #106	@ 0x6a
 80265a0:	4f76      	ldr	r7, [pc, #472]	@ (802677c <_strtod_l+0x79c>)
 80265a2:	9307      	str	r3, [sp, #28]
 80265a4:	4640      	mov	r0, r8
 80265a6:	4649      	mov	r1, r9
 80265a8:	2300      	movs	r3, #0
 80265aa:	07f2      	lsls	r2, r6, #31
 80265ac:	d504      	bpl.n	80265b8 <_strtod_l+0x5d8>
 80265ae:	e9d7 2300 	ldrd	r2, r3, [r7]
 80265b2:	f7da f811 	bl	80005d8 <__aeabi_dmul>
 80265b6:	2301      	movs	r3, #1
 80265b8:	1076      	asrs	r6, r6, #1
 80265ba:	f107 0708 	add.w	r7, r7, #8
 80265be:	d1f4      	bne.n	80265aa <_strtod_l+0x5ca>
 80265c0:	b10b      	cbz	r3, 80265c6 <_strtod_l+0x5e6>
 80265c2:	4680      	mov	r8, r0
 80265c4:	4689      	mov	r9, r1
 80265c6:	9b07      	ldr	r3, [sp, #28]
 80265c8:	b1b3      	cbz	r3, 80265f8 <_strtod_l+0x618>
 80265ca:	f3c9 520a 	ubfx	r2, r9, #20, #11
 80265ce:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80265d2:	2b00      	cmp	r3, #0
 80265d4:	4649      	mov	r1, r9
 80265d6:	dd0f      	ble.n	80265f8 <_strtod_l+0x618>
 80265d8:	2b1f      	cmp	r3, #31
 80265da:	dd57      	ble.n	802668c <_strtod_l+0x6ac>
 80265dc:	2b34      	cmp	r3, #52	@ 0x34
 80265de:	bfde      	ittt	le
 80265e0:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 80265e4:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 80265e8:	4093      	lslle	r3, r2
 80265ea:	f04f 0800 	mov.w	r8, #0
 80265ee:	bfcc      	ite	gt
 80265f0:	f04f 795c 	movgt.w	r9, #57671680	@ 0x3700000
 80265f4:	ea03 0901 	andle.w	r9, r3, r1
 80265f8:	2200      	movs	r2, #0
 80265fa:	2300      	movs	r3, #0
 80265fc:	4640      	mov	r0, r8
 80265fe:	4649      	mov	r1, r9
 8026600:	f7da fa52 	bl	8000aa8 <__aeabi_dcmpeq>
 8026604:	2800      	cmp	r0, #0
 8026606:	d198      	bne.n	802653a <_strtod_l+0x55a>
 8026608:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802660a:	9300      	str	r3, [sp, #0]
 802660c:	9804      	ldr	r0, [sp, #16]
 802660e:	4623      	mov	r3, r4
 8026610:	465a      	mov	r2, fp
 8026612:	4629      	mov	r1, r5
 8026614:	f7ff f8b4 	bl	8025780 <__s2b>
 8026618:	900e      	str	r0, [sp, #56]	@ 0x38
 802661a:	2800      	cmp	r0, #0
 802661c:	f43f af53 	beq.w	80264c6 <_strtod_l+0x4e6>
 8026620:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 8026624:	1a9b      	subs	r3, r3, r2
 8026626:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026628:	2a00      	cmp	r2, #0
 802662a:	bfa8      	it	ge
 802662c:	2300      	movge	r3, #0
 802662e:	9312      	str	r3, [sp, #72]	@ 0x48
 8026630:	2400      	movs	r4, #0
 8026632:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8026636:	9314      	str	r3, [sp, #80]	@ 0x50
 8026638:	9405      	str	r4, [sp, #20]
 802663a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802663c:	9804      	ldr	r0, [sp, #16]
 802663e:	6859      	ldr	r1, [r3, #4]
 8026640:	f7fe fff8 	bl	8025634 <_Balloc>
 8026644:	9006      	str	r0, [sp, #24]
 8026646:	2800      	cmp	r0, #0
 8026648:	f43f af41 	beq.w	80264ce <_strtod_l+0x4ee>
 802664c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802664e:	691a      	ldr	r2, [r3, #16]
 8026650:	3202      	adds	r2, #2
 8026652:	f103 010c 	add.w	r1, r3, #12
 8026656:	0092      	lsls	r2, r2, #2
 8026658:	300c      	adds	r0, #12
 802665a:	f7fe f916 	bl	802488a <memcpy>
 802665e:	ec49 8b10 	vmov	d0, r8, r9
 8026662:	9804      	ldr	r0, [sp, #16]
 8026664:	aa1a      	add	r2, sp, #104	@ 0x68
 8026666:	a919      	add	r1, sp, #100	@ 0x64
 8026668:	e9cd 890c 	strd	r8, r9, [sp, #48]	@ 0x30
 802666c:	f7ff fbcc 	bl	8025e08 <__d2b>
 8026670:	9018      	str	r0, [sp, #96]	@ 0x60
 8026672:	2800      	cmp	r0, #0
 8026674:	f43f af2b 	beq.w	80264ce <_strtod_l+0x4ee>
 8026678:	9804      	ldr	r0, [sp, #16]
 802667a:	2101      	movs	r1, #1
 802667c:	f7ff f916 	bl	80258ac <__i2b>
 8026680:	9005      	str	r0, [sp, #20]
 8026682:	4603      	mov	r3, r0
 8026684:	b948      	cbnz	r0, 802669a <_strtod_l+0x6ba>
 8026686:	2300      	movs	r3, #0
 8026688:	9305      	str	r3, [sp, #20]
 802668a:	e720      	b.n	80264ce <_strtod_l+0x4ee>
 802668c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8026690:	fa02 f303 	lsl.w	r3, r2, r3
 8026694:	ea03 0808 	and.w	r8, r3, r8
 8026698:	e7ae      	b.n	80265f8 <_strtod_l+0x618>
 802669a:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 802669c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 802669e:	2d00      	cmp	r5, #0
 80266a0:	bfab      	itete	ge
 80266a2:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80266a4:	9b14      	ldrlt	r3, [sp, #80]	@ 0x50
 80266a6:	9e14      	ldrge	r6, [sp, #80]	@ 0x50
 80266a8:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80266aa:	bfac      	ite	ge
 80266ac:	18ef      	addge	r7, r5, r3
 80266ae:	1b5e      	sublt	r6, r3, r5
 80266b0:	9b07      	ldr	r3, [sp, #28]
 80266b2:	1aed      	subs	r5, r5, r3
 80266b4:	4415      	add	r5, r2
 80266b6:	4b32      	ldr	r3, [pc, #200]	@ (8026780 <_strtod_l+0x7a0>)
 80266b8:	3d01      	subs	r5, #1
 80266ba:	429d      	cmp	r5, r3
 80266bc:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80266c0:	da4f      	bge.n	8026762 <_strtod_l+0x782>
 80266c2:	1b5b      	subs	r3, r3, r5
 80266c4:	2b1f      	cmp	r3, #31
 80266c6:	eba2 0203 	sub.w	r2, r2, r3
 80266ca:	f04f 0101 	mov.w	r1, #1
 80266ce:	dc3c      	bgt.n	802674a <_strtod_l+0x76a>
 80266d0:	fa01 fa03 	lsl.w	sl, r1, r3
 80266d4:	f04f 0b00 	mov.w	fp, #0
 80266d8:	18bd      	adds	r5, r7, r2
 80266da:	9b07      	ldr	r3, [sp, #28]
 80266dc:	42af      	cmp	r7, r5
 80266de:	4416      	add	r6, r2
 80266e0:	441e      	add	r6, r3
 80266e2:	463b      	mov	r3, r7
 80266e4:	bfa8      	it	ge
 80266e6:	462b      	movge	r3, r5
 80266e8:	42b3      	cmp	r3, r6
 80266ea:	bfa8      	it	ge
 80266ec:	4633      	movge	r3, r6
 80266ee:	2b00      	cmp	r3, #0
 80266f0:	bfc2      	ittt	gt
 80266f2:	1aed      	subgt	r5, r5, r3
 80266f4:	1af6      	subgt	r6, r6, r3
 80266f6:	1aff      	subgt	r7, r7, r3
 80266f8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80266fa:	2b00      	cmp	r3, #0
 80266fc:	dd16      	ble.n	802672c <_strtod_l+0x74c>
 80266fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8026702:	461a      	mov	r2, r3
 8026704:	f7ff f992 	bl	8025a2c <__pow5mult>
 8026708:	9005      	str	r0, [sp, #20]
 802670a:	2800      	cmp	r0, #0
 802670c:	d0bb      	beq.n	8026686 <_strtod_l+0x6a6>
 802670e:	4601      	mov	r1, r0
 8026710:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8026712:	9804      	ldr	r0, [sp, #16]
 8026714:	f7ff f8e0 	bl	80258d8 <__multiply>
 8026718:	900f      	str	r0, [sp, #60]	@ 0x3c
 802671a:	2800      	cmp	r0, #0
 802671c:	f43f aed7 	beq.w	80264ce <_strtod_l+0x4ee>
 8026720:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8026722:	9804      	ldr	r0, [sp, #16]
 8026724:	f7fe ffc4 	bl	80256b0 <_Bfree>
 8026728:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802672a:	9318      	str	r3, [sp, #96]	@ 0x60
 802672c:	2d00      	cmp	r5, #0
 802672e:	dc1b      	bgt.n	8026768 <_strtod_l+0x788>
 8026730:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026732:	2b00      	cmp	r3, #0
 8026734:	dd26      	ble.n	8026784 <_strtod_l+0x7a4>
 8026736:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8026738:	9906      	ldr	r1, [sp, #24]
 802673a:	9804      	ldr	r0, [sp, #16]
 802673c:	f7ff f976 	bl	8025a2c <__pow5mult>
 8026740:	9006      	str	r0, [sp, #24]
 8026742:	b9f8      	cbnz	r0, 8026784 <_strtod_l+0x7a4>
 8026744:	2300      	movs	r3, #0
 8026746:	9306      	str	r3, [sp, #24]
 8026748:	e6c1      	b.n	80264ce <_strtod_l+0x4ee>
 802674a:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 802674e:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8026752:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8026756:	35e2      	adds	r5, #226	@ 0xe2
 8026758:	fa01 fb05 	lsl.w	fp, r1, r5
 802675c:	f04f 0a01 	mov.w	sl, #1
 8026760:	e7ba      	b.n	80266d8 <_strtod_l+0x6f8>
 8026762:	f04f 0b00 	mov.w	fp, #0
 8026766:	e7f9      	b.n	802675c <_strtod_l+0x77c>
 8026768:	9918      	ldr	r1, [sp, #96]	@ 0x60
 802676a:	9804      	ldr	r0, [sp, #16]
 802676c:	462a      	mov	r2, r5
 802676e:	f7ff f9b9 	bl	8025ae4 <__lshift>
 8026772:	9018      	str	r0, [sp, #96]	@ 0x60
 8026774:	2800      	cmp	r0, #0
 8026776:	d1db      	bne.n	8026730 <_strtod_l+0x750>
 8026778:	e6a9      	b.n	80264ce <_strtod_l+0x4ee>
 802677a:	bf00      	nop
 802677c:	08037b48 	.word	0x08037b48
 8026780:	fffffc02 	.word	0xfffffc02
 8026784:	2e00      	cmp	r6, #0
 8026786:	dd07      	ble.n	8026798 <_strtod_l+0x7b8>
 8026788:	9906      	ldr	r1, [sp, #24]
 802678a:	9804      	ldr	r0, [sp, #16]
 802678c:	4632      	mov	r2, r6
 802678e:	f7ff f9a9 	bl	8025ae4 <__lshift>
 8026792:	9006      	str	r0, [sp, #24]
 8026794:	2800      	cmp	r0, #0
 8026796:	d0d5      	beq.n	8026744 <_strtod_l+0x764>
 8026798:	2f00      	cmp	r7, #0
 802679a:	dd08      	ble.n	80267ae <_strtod_l+0x7ce>
 802679c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80267a0:	463a      	mov	r2, r7
 80267a2:	f7ff f99f 	bl	8025ae4 <__lshift>
 80267a6:	9005      	str	r0, [sp, #20]
 80267a8:	2800      	cmp	r0, #0
 80267aa:	f43f ae90 	beq.w	80264ce <_strtod_l+0x4ee>
 80267ae:	9a06      	ldr	r2, [sp, #24]
 80267b0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80267b2:	9804      	ldr	r0, [sp, #16]
 80267b4:	f7ff fa20 	bl	8025bf8 <__mdiff>
 80267b8:	4604      	mov	r4, r0
 80267ba:	2800      	cmp	r0, #0
 80267bc:	f43f ae87 	beq.w	80264ce <_strtod_l+0x4ee>
 80267c0:	68c3      	ldr	r3, [r0, #12]
 80267c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80267c4:	2300      	movs	r3, #0
 80267c6:	9905      	ldr	r1, [sp, #20]
 80267c8:	60c3      	str	r3, [r0, #12]
 80267ca:	f7ff f9f9 	bl	8025bc0 <__mcmp>
 80267ce:	2800      	cmp	r0, #0
 80267d0:	da3c      	bge.n	802684c <_strtod_l+0x86c>
 80267d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80267d4:	ea53 0308 	orrs.w	r3, r3, r8
 80267d8:	d15e      	bne.n	8026898 <_strtod_l+0x8b8>
 80267da:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80267de:	464d      	mov	r5, r9
 80267e0:	2b00      	cmp	r3, #0
 80267e2:	d159      	bne.n	8026898 <_strtod_l+0x8b8>
 80267e4:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80267e8:	0d1b      	lsrs	r3, r3, #20
 80267ea:	051b      	lsls	r3, r3, #20
 80267ec:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80267f0:	d952      	bls.n	8026898 <_strtod_l+0x8b8>
 80267f2:	6963      	ldr	r3, [r4, #20]
 80267f4:	b913      	cbnz	r3, 80267fc <_strtod_l+0x81c>
 80267f6:	6923      	ldr	r3, [r4, #16]
 80267f8:	2b01      	cmp	r3, #1
 80267fa:	dd4d      	ble.n	8026898 <_strtod_l+0x8b8>
 80267fc:	4621      	mov	r1, r4
 80267fe:	2201      	movs	r2, #1
 8026800:	9804      	ldr	r0, [sp, #16]
 8026802:	f7ff f96f 	bl	8025ae4 <__lshift>
 8026806:	9905      	ldr	r1, [sp, #20]
 8026808:	4604      	mov	r4, r0
 802680a:	f7ff f9d9 	bl	8025bc0 <__mcmp>
 802680e:	2800      	cmp	r0, #0
 8026810:	dd42      	ble.n	8026898 <_strtod_l+0x8b8>
 8026812:	4bad      	ldr	r3, [pc, #692]	@ (8026ac8 <_strtod_l+0xae8>)
 8026814:	9a07      	ldr	r2, [sp, #28]
 8026816:	402b      	ands	r3, r5
 8026818:	2a00      	cmp	r2, #0
 802681a:	d05f      	beq.n	80268dc <_strtod_l+0x8fc>
 802681c:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8026820:	d85c      	bhi.n	80268dc <_strtod_l+0x8fc>
 8026822:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8026826:	f67f ae8c 	bls.w	8026542 <_strtod_l+0x562>
 802682a:	4ba8      	ldr	r3, [pc, #672]	@ (8026acc <_strtod_l+0xaec>)
 802682c:	4640      	mov	r0, r8
 802682e:	4649      	mov	r1, r9
 8026830:	2200      	movs	r2, #0
 8026832:	f7d9 fed1 	bl	80005d8 <__aeabi_dmul>
 8026836:	4ba4      	ldr	r3, [pc, #656]	@ (8026ac8 <_strtod_l+0xae8>)
 8026838:	400b      	ands	r3, r1
 802683a:	4680      	mov	r8, r0
 802683c:	4689      	mov	r9, r1
 802683e:	2b00      	cmp	r3, #0
 8026840:	f47f ae50 	bne.w	80264e4 <_strtod_l+0x504>
 8026844:	9a04      	ldr	r2, [sp, #16]
 8026846:	2322      	movs	r3, #34	@ 0x22
 8026848:	6013      	str	r3, [r2, #0]
 802684a:	e64b      	b.n	80264e4 <_strtod_l+0x504>
 802684c:	464d      	mov	r5, r9
 802684e:	d162      	bne.n	8026916 <_strtod_l+0x936>
 8026850:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026852:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8026856:	b342      	cbz	r2, 80268aa <_strtod_l+0x8ca>
 8026858:	4a9d      	ldr	r2, [pc, #628]	@ (8026ad0 <_strtod_l+0xaf0>)
 802685a:	4293      	cmp	r3, r2
 802685c:	d128      	bne.n	80268b0 <_strtod_l+0x8d0>
 802685e:	9b07      	ldr	r3, [sp, #28]
 8026860:	4641      	mov	r1, r8
 8026862:	b1eb      	cbz	r3, 80268a0 <_strtod_l+0x8c0>
 8026864:	4b98      	ldr	r3, [pc, #608]	@ (8026ac8 <_strtod_l+0xae8>)
 8026866:	402b      	ands	r3, r5
 8026868:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 802686c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8026870:	d819      	bhi.n	80268a6 <_strtod_l+0x8c6>
 8026872:	0d1b      	lsrs	r3, r3, #20
 8026874:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8026878:	fa02 f303 	lsl.w	r3, r2, r3
 802687c:	4299      	cmp	r1, r3
 802687e:	d117      	bne.n	80268b0 <_strtod_l+0x8d0>
 8026880:	4b94      	ldr	r3, [pc, #592]	@ (8026ad4 <_strtod_l+0xaf4>)
 8026882:	429d      	cmp	r5, r3
 8026884:	d102      	bne.n	802688c <_strtod_l+0x8ac>
 8026886:	3101      	adds	r1, #1
 8026888:	f43f ae21 	beq.w	80264ce <_strtod_l+0x4ee>
 802688c:	4b8e      	ldr	r3, [pc, #568]	@ (8026ac8 <_strtod_l+0xae8>)
 802688e:	402b      	ands	r3, r5
 8026890:	f503 1980 	add.w	r9, r3, #1048576	@ 0x100000
 8026894:	f04f 0800 	mov.w	r8, #0
 8026898:	9b07      	ldr	r3, [sp, #28]
 802689a:	2b00      	cmp	r3, #0
 802689c:	d1c5      	bne.n	802682a <_strtod_l+0x84a>
 802689e:	e621      	b.n	80264e4 <_strtod_l+0x504>
 80268a0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80268a4:	e7ea      	b.n	802687c <_strtod_l+0x89c>
 80268a6:	4613      	mov	r3, r2
 80268a8:	e7e8      	b.n	802687c <_strtod_l+0x89c>
 80268aa:	ea53 0308 	orrs.w	r3, r3, r8
 80268ae:	d0b0      	beq.n	8026812 <_strtod_l+0x832>
 80268b0:	f1bb 0f00 	cmp.w	fp, #0
 80268b4:	d01b      	beq.n	80268ee <_strtod_l+0x90e>
 80268b6:	ea1b 0f05 	tst.w	fp, r5
 80268ba:	d0ed      	beq.n	8026898 <_strtod_l+0x8b8>
 80268bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80268be:	9a07      	ldr	r2, [sp, #28]
 80268c0:	4640      	mov	r0, r8
 80268c2:	4649      	mov	r1, r9
 80268c4:	b1b3      	cbz	r3, 80268f4 <_strtod_l+0x914>
 80268c6:	f7ff fb6d 	bl	8025fa4 <sulp>
 80268ca:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80268ce:	ec53 2b10 	vmov	r2, r3, d0
 80268d2:	f7d9 fccb 	bl	800026c <__adddf3>
 80268d6:	4680      	mov	r8, r0
 80268d8:	4689      	mov	r9, r1
 80268da:	e7dd      	b.n	8026898 <_strtod_l+0x8b8>
 80268dc:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80268e0:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 80268e4:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 80268e8:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 80268ec:	e7d4      	b.n	8026898 <_strtod_l+0x8b8>
 80268ee:	ea1a 0f08 	tst.w	sl, r8
 80268f2:	e7e2      	b.n	80268ba <_strtod_l+0x8da>
 80268f4:	f7ff fb56 	bl	8025fa4 <sulp>
 80268f8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80268fc:	ec53 2b10 	vmov	r2, r3, d0
 8026900:	f7d9 fcb2 	bl	8000268 <__aeabi_dsub>
 8026904:	2200      	movs	r2, #0
 8026906:	2300      	movs	r3, #0
 8026908:	4680      	mov	r8, r0
 802690a:	4689      	mov	r9, r1
 802690c:	f7da f8cc 	bl	8000aa8 <__aeabi_dcmpeq>
 8026910:	2800      	cmp	r0, #0
 8026912:	d0c1      	beq.n	8026898 <_strtod_l+0x8b8>
 8026914:	e615      	b.n	8026542 <_strtod_l+0x562>
 8026916:	9905      	ldr	r1, [sp, #20]
 8026918:	4620      	mov	r0, r4
 802691a:	f7ff facd 	bl	8025eb8 <__ratio>
 802691e:	ec57 6b10 	vmov	r6, r7, d0
 8026922:	2200      	movs	r2, #0
 8026924:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8026928:	4630      	mov	r0, r6
 802692a:	4639      	mov	r1, r7
 802692c:	f7da f8d0 	bl	8000ad0 <__aeabi_dcmple>
 8026930:	2800      	cmp	r0, #0
 8026932:	d070      	beq.n	8026a16 <_strtod_l+0xa36>
 8026934:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026936:	2b00      	cmp	r3, #0
 8026938:	d17b      	bne.n	8026a32 <_strtod_l+0xa52>
 802693a:	f1b8 0f00 	cmp.w	r8, #0
 802693e:	d156      	bne.n	80269ee <_strtod_l+0xa0e>
 8026940:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8026944:	2b00      	cmp	r3, #0
 8026946:	d158      	bne.n	80269fa <_strtod_l+0xa1a>
 8026948:	4b63      	ldr	r3, [pc, #396]	@ (8026ad8 <_strtod_l+0xaf8>)
 802694a:	2200      	movs	r2, #0
 802694c:	4630      	mov	r0, r6
 802694e:	4639      	mov	r1, r7
 8026950:	f7da f8b4 	bl	8000abc <__aeabi_dcmplt>
 8026954:	2800      	cmp	r0, #0
 8026956:	d159      	bne.n	8026a0c <_strtod_l+0xa2c>
 8026958:	4b60      	ldr	r3, [pc, #384]	@ (8026adc <_strtod_l+0xafc>)
 802695a:	2200      	movs	r2, #0
 802695c:	4630      	mov	r0, r6
 802695e:	4639      	mov	r1, r7
 8026960:	f7d9 fe3a 	bl	80005d8 <__aeabi_dmul>
 8026964:	4682      	mov	sl, r0
 8026966:	468b      	mov	fp, r1
 8026968:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 802696c:	f8cd a020 	str.w	sl, [sp, #32]
 8026970:	9309      	str	r3, [sp, #36]	@ 0x24
 8026972:	4b55      	ldr	r3, [pc, #340]	@ (8026ac8 <_strtod_l+0xae8>)
 8026974:	4a54      	ldr	r2, [pc, #336]	@ (8026ac8 <_strtod_l+0xae8>)
 8026976:	402b      	ands	r3, r5
 8026978:	9313      	str	r3, [sp, #76]	@ 0x4c
 802697a:	4b59      	ldr	r3, [pc, #356]	@ (8026ae0 <_strtod_l+0xb00>)
 802697c:	402a      	ands	r2, r5
 802697e:	429a      	cmp	r2, r3
 8026980:	e9dd 6708 	ldrd	r6, r7, [sp, #32]
 8026984:	f040 80b0 	bne.w	8026ae8 <_strtod_l+0xb08>
 8026988:	f1a5 7954 	sub.w	r9, r5, #55574528	@ 0x3500000
 802698c:	ec49 8b10 	vmov	d0, r8, r9
 8026990:	f7ff f9ca 	bl	8025d28 <__ulp>
 8026994:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8026998:	ec51 0b10 	vmov	r0, r1, d0
 802699c:	f7d9 fe1c 	bl	80005d8 <__aeabi_dmul>
 80269a0:	4642      	mov	r2, r8
 80269a2:	464b      	mov	r3, r9
 80269a4:	f7d9 fc62 	bl	800026c <__adddf3>
 80269a8:	4d47      	ldr	r5, [pc, #284]	@ (8026ac8 <_strtod_l+0xae8>)
 80269aa:	4a4e      	ldr	r2, [pc, #312]	@ (8026ae4 <_strtod_l+0xb04>)
 80269ac:	400d      	ands	r5, r1
 80269ae:	4295      	cmp	r5, r2
 80269b0:	4680      	mov	r8, r0
 80269b2:	d945      	bls.n	8026a40 <_strtod_l+0xa60>
 80269b4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80269b6:	4b47      	ldr	r3, [pc, #284]	@ (8026ad4 <_strtod_l+0xaf4>)
 80269b8:	429a      	cmp	r2, r3
 80269ba:	d103      	bne.n	80269c4 <_strtod_l+0x9e4>
 80269bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80269be:	3301      	adds	r3, #1
 80269c0:	f43f ad85 	beq.w	80264ce <_strtod_l+0x4ee>
 80269c4:	f8df 910c 	ldr.w	r9, [pc, #268]	@ 8026ad4 <_strtod_l+0xaf4>
 80269c8:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 80269cc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80269ce:	9804      	ldr	r0, [sp, #16]
 80269d0:	f7fe fe6e 	bl	80256b0 <_Bfree>
 80269d4:	9906      	ldr	r1, [sp, #24]
 80269d6:	9804      	ldr	r0, [sp, #16]
 80269d8:	f7fe fe6a 	bl	80256b0 <_Bfree>
 80269dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80269e0:	f7fe fe66 	bl	80256b0 <_Bfree>
 80269e4:	9804      	ldr	r0, [sp, #16]
 80269e6:	4621      	mov	r1, r4
 80269e8:	f7fe fe62 	bl	80256b0 <_Bfree>
 80269ec:	e625      	b.n	802663a <_strtod_l+0x65a>
 80269ee:	f1b8 0f01 	cmp.w	r8, #1
 80269f2:	d102      	bne.n	80269fa <_strtod_l+0xa1a>
 80269f4:	2d00      	cmp	r5, #0
 80269f6:	f43f ada4 	beq.w	8026542 <_strtod_l+0x562>
 80269fa:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 8026aa8 <_strtod_l+0xac8>
 80269fe:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8026ad8 <_strtod_l+0xaf8>
 8026a02:	ed8d 7b08 	vstr	d7, [sp, #32]
 8026a06:	f04f 0a00 	mov.w	sl, #0
 8026a0a:	e7b2      	b.n	8026972 <_strtod_l+0x992>
 8026a0c:	f8df b0cc 	ldr.w	fp, [pc, #204]	@ 8026adc <_strtod_l+0xafc>
 8026a10:	f04f 0a00 	mov.w	sl, #0
 8026a14:	e7a8      	b.n	8026968 <_strtod_l+0x988>
 8026a16:	4b31      	ldr	r3, [pc, #196]	@ (8026adc <_strtod_l+0xafc>)
 8026a18:	2200      	movs	r2, #0
 8026a1a:	4630      	mov	r0, r6
 8026a1c:	4639      	mov	r1, r7
 8026a1e:	f7d9 fddb 	bl	80005d8 <__aeabi_dmul>
 8026a22:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026a24:	4682      	mov	sl, r0
 8026a26:	468b      	mov	fp, r1
 8026a28:	2b00      	cmp	r3, #0
 8026a2a:	d09d      	beq.n	8026968 <_strtod_l+0x988>
 8026a2c:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8026a30:	e79f      	b.n	8026972 <_strtod_l+0x992>
 8026a32:	ed9f 7b1f 	vldr	d7, [pc, #124]	@ 8026ab0 <_strtod_l+0xad0>
 8026a36:	ed8d 7b08 	vstr	d7, [sp, #32]
 8026a3a:	ec5b ab17 	vmov	sl, fp, d7
 8026a3e:	e798      	b.n	8026972 <_strtod_l+0x992>
 8026a40:	f101 7954 	add.w	r9, r1, #55574528	@ 0x3500000
 8026a44:	9b07      	ldr	r3, [sp, #28]
 8026a46:	2b00      	cmp	r3, #0
 8026a48:	d1c0      	bne.n	80269cc <_strtod_l+0x9ec>
 8026a4a:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8026a4e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8026a50:	0d1b      	lsrs	r3, r3, #20
 8026a52:	051b      	lsls	r3, r3, #20
 8026a54:	429a      	cmp	r2, r3
 8026a56:	d1b9      	bne.n	80269cc <_strtod_l+0x9ec>
 8026a58:	4650      	mov	r0, sl
 8026a5a:	4659      	mov	r1, fp
 8026a5c:	f001 fc28 	bl	80282b0 <__aeabi_d2lz>
 8026a60:	f7d9 fd8c 	bl	800057c <__aeabi_l2d>
 8026a64:	4602      	mov	r2, r0
 8026a66:	460b      	mov	r3, r1
 8026a68:	4650      	mov	r0, sl
 8026a6a:	4659      	mov	r1, fp
 8026a6c:	f7d9 fbfc 	bl	8000268 <__aeabi_dsub>
 8026a70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026a72:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8026a76:	ea43 0308 	orr.w	r3, r3, r8
 8026a7a:	4313      	orrs	r3, r2
 8026a7c:	4606      	mov	r6, r0
 8026a7e:	460f      	mov	r7, r1
 8026a80:	d06b      	beq.n	8026b5a <_strtod_l+0xb7a>
 8026a82:	a30d      	add	r3, pc, #52	@ (adr r3, 8026ab8 <_strtod_l+0xad8>)
 8026a84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026a88:	f7da f818 	bl	8000abc <__aeabi_dcmplt>
 8026a8c:	2800      	cmp	r0, #0
 8026a8e:	f47f ad29 	bne.w	80264e4 <_strtod_l+0x504>
 8026a92:	a30b      	add	r3, pc, #44	@ (adr r3, 8026ac0 <_strtod_l+0xae0>)
 8026a94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026a98:	4630      	mov	r0, r6
 8026a9a:	4639      	mov	r1, r7
 8026a9c:	f7da f82c 	bl	8000af8 <__aeabi_dcmpgt>
 8026aa0:	2800      	cmp	r0, #0
 8026aa2:	d093      	beq.n	80269cc <_strtod_l+0x9ec>
 8026aa4:	e51e      	b.n	80264e4 <_strtod_l+0x504>
 8026aa6:	bf00      	nop
 8026aa8:	00000000 	.word	0x00000000
 8026aac:	bff00000 	.word	0xbff00000
 8026ab0:	00000000 	.word	0x00000000
 8026ab4:	3ff00000 	.word	0x3ff00000
 8026ab8:	94a03595 	.word	0x94a03595
 8026abc:	3fdfffff 	.word	0x3fdfffff
 8026ac0:	35afe535 	.word	0x35afe535
 8026ac4:	3fe00000 	.word	0x3fe00000
 8026ac8:	7ff00000 	.word	0x7ff00000
 8026acc:	39500000 	.word	0x39500000
 8026ad0:	000fffff 	.word	0x000fffff
 8026ad4:	7fefffff 	.word	0x7fefffff
 8026ad8:	3ff00000 	.word	0x3ff00000
 8026adc:	3fe00000 	.word	0x3fe00000
 8026ae0:	7fe00000 	.word	0x7fe00000
 8026ae4:	7c9fffff 	.word	0x7c9fffff
 8026ae8:	9b07      	ldr	r3, [sp, #28]
 8026aea:	b313      	cbz	r3, 8026b32 <_strtod_l+0xb52>
 8026aec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8026aee:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8026af2:	d81e      	bhi.n	8026b32 <_strtod_l+0xb52>
 8026af4:	a324      	add	r3, pc, #144	@ (adr r3, 8026b88 <_strtod_l+0xba8>)
 8026af6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026afa:	4650      	mov	r0, sl
 8026afc:	4659      	mov	r1, fp
 8026afe:	f7d9 ffe7 	bl	8000ad0 <__aeabi_dcmple>
 8026b02:	b190      	cbz	r0, 8026b2a <_strtod_l+0xb4a>
 8026b04:	4659      	mov	r1, fp
 8026b06:	4650      	mov	r0, sl
 8026b08:	f7da f83e 	bl	8000b88 <__aeabi_d2uiz>
 8026b0c:	2801      	cmp	r0, #1
 8026b0e:	bf38      	it	cc
 8026b10:	2001      	movcc	r0, #1
 8026b12:	f7d9 fce7 	bl	80004e4 <__aeabi_ui2d>
 8026b16:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8026b18:	4682      	mov	sl, r0
 8026b1a:	468b      	mov	fp, r1
 8026b1c:	b9d3      	cbnz	r3, 8026b54 <_strtod_l+0xb74>
 8026b1e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8026b22:	9010      	str	r0, [sp, #64]	@ 0x40
 8026b24:	9311      	str	r3, [sp, #68]	@ 0x44
 8026b26:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	@ 0x40
 8026b2a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8026b2c:	f107 63d6 	add.w	r3, r7, #112197632	@ 0x6b00000
 8026b30:	1a9f      	subs	r7, r3, r2
 8026b32:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8026b36:	f7ff f8f7 	bl	8025d28 <__ulp>
 8026b3a:	4630      	mov	r0, r6
 8026b3c:	ec53 2b10 	vmov	r2, r3, d0
 8026b40:	4639      	mov	r1, r7
 8026b42:	f7d9 fd49 	bl	80005d8 <__aeabi_dmul>
 8026b46:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8026b4a:	f7d9 fb8f 	bl	800026c <__adddf3>
 8026b4e:	4680      	mov	r8, r0
 8026b50:	4689      	mov	r9, r1
 8026b52:	e777      	b.n	8026a44 <_strtod_l+0xa64>
 8026b54:	e9cd ab10 	strd	sl, fp, [sp, #64]	@ 0x40
 8026b58:	e7e5      	b.n	8026b26 <_strtod_l+0xb46>
 8026b5a:	a30d      	add	r3, pc, #52	@ (adr r3, 8026b90 <_strtod_l+0xbb0>)
 8026b5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026b60:	f7d9 ffac 	bl	8000abc <__aeabi_dcmplt>
 8026b64:	e79c      	b.n	8026aa0 <_strtod_l+0xac0>
 8026b66:	2300      	movs	r3, #0
 8026b68:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026b6a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8026b6c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026b6e:	6013      	str	r3, [r2, #0]
 8026b70:	f7ff ba8c 	b.w	802608c <_strtod_l+0xac>
 8026b74:	2a65      	cmp	r2, #101	@ 0x65
 8026b76:	f43f ab6a 	beq.w	802624e <_strtod_l+0x26e>
 8026b7a:	2a45      	cmp	r2, #69	@ 0x45
 8026b7c:	f43f ab67 	beq.w	802624e <_strtod_l+0x26e>
 8026b80:	2301      	movs	r3, #1
 8026b82:	9307      	str	r3, [sp, #28]
 8026b84:	f7ff bba1 	b.w	80262ca <_strtod_l+0x2ea>
 8026b88:	ffc00000 	.word	0xffc00000
 8026b8c:	41dfffff 	.word	0x41dfffff
 8026b90:	94a03595 	.word	0x94a03595
 8026b94:	3fcfffff 	.word	0x3fcfffff

08026b98 <_strtod_r>:
 8026b98:	4b01      	ldr	r3, [pc, #4]	@ (8026ba0 <_strtod_r+0x8>)
 8026b9a:	f7ff ba21 	b.w	8025fe0 <_strtod_l>
 8026b9e:	bf00      	nop
 8026ba0:	2000048c 	.word	0x2000048c

08026ba4 <_strtol_l.isra.0>:
 8026ba4:	2b24      	cmp	r3, #36	@ 0x24
 8026ba6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026baa:	4686      	mov	lr, r0
 8026bac:	4690      	mov	r8, r2
 8026bae:	d801      	bhi.n	8026bb4 <_strtol_l.isra.0+0x10>
 8026bb0:	2b01      	cmp	r3, #1
 8026bb2:	d106      	bne.n	8026bc2 <_strtol_l.isra.0+0x1e>
 8026bb4:	f7fd fe3c 	bl	8024830 <__errno>
 8026bb8:	2316      	movs	r3, #22
 8026bba:	6003      	str	r3, [r0, #0]
 8026bbc:	2000      	movs	r0, #0
 8026bbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026bc2:	4834      	ldr	r0, [pc, #208]	@ (8026c94 <_strtol_l.isra.0+0xf0>)
 8026bc4:	460d      	mov	r5, r1
 8026bc6:	462a      	mov	r2, r5
 8026bc8:	f815 4b01 	ldrb.w	r4, [r5], #1
 8026bcc:	5d06      	ldrb	r6, [r0, r4]
 8026bce:	f016 0608 	ands.w	r6, r6, #8
 8026bd2:	d1f8      	bne.n	8026bc6 <_strtol_l.isra.0+0x22>
 8026bd4:	2c2d      	cmp	r4, #45	@ 0x2d
 8026bd6:	d110      	bne.n	8026bfa <_strtol_l.isra.0+0x56>
 8026bd8:	782c      	ldrb	r4, [r5, #0]
 8026bda:	2601      	movs	r6, #1
 8026bdc:	1c95      	adds	r5, r2, #2
 8026bde:	f033 0210 	bics.w	r2, r3, #16
 8026be2:	d115      	bne.n	8026c10 <_strtol_l.isra.0+0x6c>
 8026be4:	2c30      	cmp	r4, #48	@ 0x30
 8026be6:	d10d      	bne.n	8026c04 <_strtol_l.isra.0+0x60>
 8026be8:	782a      	ldrb	r2, [r5, #0]
 8026bea:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8026bee:	2a58      	cmp	r2, #88	@ 0x58
 8026bf0:	d108      	bne.n	8026c04 <_strtol_l.isra.0+0x60>
 8026bf2:	786c      	ldrb	r4, [r5, #1]
 8026bf4:	3502      	adds	r5, #2
 8026bf6:	2310      	movs	r3, #16
 8026bf8:	e00a      	b.n	8026c10 <_strtol_l.isra.0+0x6c>
 8026bfa:	2c2b      	cmp	r4, #43	@ 0x2b
 8026bfc:	bf04      	itt	eq
 8026bfe:	782c      	ldrbeq	r4, [r5, #0]
 8026c00:	1c95      	addeq	r5, r2, #2
 8026c02:	e7ec      	b.n	8026bde <_strtol_l.isra.0+0x3a>
 8026c04:	2b00      	cmp	r3, #0
 8026c06:	d1f6      	bne.n	8026bf6 <_strtol_l.isra.0+0x52>
 8026c08:	2c30      	cmp	r4, #48	@ 0x30
 8026c0a:	bf14      	ite	ne
 8026c0c:	230a      	movne	r3, #10
 8026c0e:	2308      	moveq	r3, #8
 8026c10:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8026c14:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8026c18:	2200      	movs	r2, #0
 8026c1a:	fbbc f9f3 	udiv	r9, ip, r3
 8026c1e:	4610      	mov	r0, r2
 8026c20:	fb03 ca19 	mls	sl, r3, r9, ip
 8026c24:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8026c28:	2f09      	cmp	r7, #9
 8026c2a:	d80f      	bhi.n	8026c4c <_strtol_l.isra.0+0xa8>
 8026c2c:	463c      	mov	r4, r7
 8026c2e:	42a3      	cmp	r3, r4
 8026c30:	dd1b      	ble.n	8026c6a <_strtol_l.isra.0+0xc6>
 8026c32:	1c57      	adds	r7, r2, #1
 8026c34:	d007      	beq.n	8026c46 <_strtol_l.isra.0+0xa2>
 8026c36:	4581      	cmp	r9, r0
 8026c38:	d314      	bcc.n	8026c64 <_strtol_l.isra.0+0xc0>
 8026c3a:	d101      	bne.n	8026c40 <_strtol_l.isra.0+0x9c>
 8026c3c:	45a2      	cmp	sl, r4
 8026c3e:	db11      	blt.n	8026c64 <_strtol_l.isra.0+0xc0>
 8026c40:	fb00 4003 	mla	r0, r0, r3, r4
 8026c44:	2201      	movs	r2, #1
 8026c46:	f815 4b01 	ldrb.w	r4, [r5], #1
 8026c4a:	e7eb      	b.n	8026c24 <_strtol_l.isra.0+0x80>
 8026c4c:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8026c50:	2f19      	cmp	r7, #25
 8026c52:	d801      	bhi.n	8026c58 <_strtol_l.isra.0+0xb4>
 8026c54:	3c37      	subs	r4, #55	@ 0x37
 8026c56:	e7ea      	b.n	8026c2e <_strtol_l.isra.0+0x8a>
 8026c58:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8026c5c:	2f19      	cmp	r7, #25
 8026c5e:	d804      	bhi.n	8026c6a <_strtol_l.isra.0+0xc6>
 8026c60:	3c57      	subs	r4, #87	@ 0x57
 8026c62:	e7e4      	b.n	8026c2e <_strtol_l.isra.0+0x8a>
 8026c64:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8026c68:	e7ed      	b.n	8026c46 <_strtol_l.isra.0+0xa2>
 8026c6a:	1c53      	adds	r3, r2, #1
 8026c6c:	d108      	bne.n	8026c80 <_strtol_l.isra.0+0xdc>
 8026c6e:	2322      	movs	r3, #34	@ 0x22
 8026c70:	f8ce 3000 	str.w	r3, [lr]
 8026c74:	4660      	mov	r0, ip
 8026c76:	f1b8 0f00 	cmp.w	r8, #0
 8026c7a:	d0a0      	beq.n	8026bbe <_strtol_l.isra.0+0x1a>
 8026c7c:	1e69      	subs	r1, r5, #1
 8026c7e:	e006      	b.n	8026c8e <_strtol_l.isra.0+0xea>
 8026c80:	b106      	cbz	r6, 8026c84 <_strtol_l.isra.0+0xe0>
 8026c82:	4240      	negs	r0, r0
 8026c84:	f1b8 0f00 	cmp.w	r8, #0
 8026c88:	d099      	beq.n	8026bbe <_strtol_l.isra.0+0x1a>
 8026c8a:	2a00      	cmp	r2, #0
 8026c8c:	d1f6      	bne.n	8026c7c <_strtol_l.isra.0+0xd8>
 8026c8e:	f8c8 1000 	str.w	r1, [r8]
 8026c92:	e794      	b.n	8026bbe <_strtol_l.isra.0+0x1a>
 8026c94:	0803791d 	.word	0x0803791d

08026c98 <_strtol_r>:
 8026c98:	f7ff bf84 	b.w	8026ba4 <_strtol_l.isra.0>

08026c9c <__ssputs_r>:
 8026c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026ca0:	688e      	ldr	r6, [r1, #8]
 8026ca2:	461f      	mov	r7, r3
 8026ca4:	42be      	cmp	r6, r7
 8026ca6:	4682      	mov	sl, r0
 8026ca8:	460c      	mov	r4, r1
 8026caa:	4690      	mov	r8, r2
 8026cac:	4633      	mov	r3, r6
 8026cae:	d853      	bhi.n	8026d58 <__ssputs_r+0xbc>
 8026cb0:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 8026cb4:	f410 6f90 	tst.w	r0, #1152	@ 0x480
 8026cb8:	d02b      	beq.n	8026d12 <__ssputs_r+0x76>
 8026cba:	6965      	ldr	r5, [r4, #20]
 8026cbc:	6823      	ldr	r3, [r4, #0]
 8026cbe:	6909      	ldr	r1, [r1, #16]
 8026cc0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8026cc4:	eba3 0901 	sub.w	r9, r3, r1
 8026cc8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8026ccc:	1c7b      	adds	r3, r7, #1
 8026cce:	106d      	asrs	r5, r5, #1
 8026cd0:	444b      	add	r3, r9
 8026cd2:	42ab      	cmp	r3, r5
 8026cd4:	462a      	mov	r2, r5
 8026cd6:	bf84      	itt	hi
 8026cd8:	461d      	movhi	r5, r3
 8026cda:	462a      	movhi	r2, r5
 8026cdc:	0543      	lsls	r3, r0, #21
 8026cde:	d527      	bpl.n	8026d30 <__ssputs_r+0x94>
 8026ce0:	4611      	mov	r1, r2
 8026ce2:	4650      	mov	r0, sl
 8026ce4:	f7fc fabe 	bl	8023264 <_malloc_r>
 8026ce8:	4606      	mov	r6, r0
 8026cea:	b358      	cbz	r0, 8026d44 <__ssputs_r+0xa8>
 8026cec:	6921      	ldr	r1, [r4, #16]
 8026cee:	464a      	mov	r2, r9
 8026cf0:	f7fd fdcb 	bl	802488a <memcpy>
 8026cf4:	89a3      	ldrh	r3, [r4, #12]
 8026cf6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8026cfa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026cfe:	81a3      	strh	r3, [r4, #12]
 8026d00:	6126      	str	r6, [r4, #16]
 8026d02:	6165      	str	r5, [r4, #20]
 8026d04:	444e      	add	r6, r9
 8026d06:	eba5 0509 	sub.w	r5, r5, r9
 8026d0a:	6026      	str	r6, [r4, #0]
 8026d0c:	60a5      	str	r5, [r4, #8]
 8026d0e:	463e      	mov	r6, r7
 8026d10:	463b      	mov	r3, r7
 8026d12:	461f      	mov	r7, r3
 8026d14:	6820      	ldr	r0, [r4, #0]
 8026d16:	463a      	mov	r2, r7
 8026d18:	4641      	mov	r1, r8
 8026d1a:	f7fd fcab 	bl	8024674 <memmove>
 8026d1e:	68a3      	ldr	r3, [r4, #8]
 8026d20:	1b9b      	subs	r3, r3, r6
 8026d22:	60a3      	str	r3, [r4, #8]
 8026d24:	6823      	ldr	r3, [r4, #0]
 8026d26:	443b      	add	r3, r7
 8026d28:	6023      	str	r3, [r4, #0]
 8026d2a:	2000      	movs	r0, #0
 8026d2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026d30:	4650      	mov	r0, sl
 8026d32:	f001 fa7a 	bl	802822a <_realloc_r>
 8026d36:	4606      	mov	r6, r0
 8026d38:	2800      	cmp	r0, #0
 8026d3a:	d1e1      	bne.n	8026d00 <__ssputs_r+0x64>
 8026d3c:	6921      	ldr	r1, [r4, #16]
 8026d3e:	4650      	mov	r0, sl
 8026d40:	f7fe fc2e 	bl	80255a0 <_free_r>
 8026d44:	230c      	movs	r3, #12
 8026d46:	f8ca 3000 	str.w	r3, [sl]
 8026d4a:	89a3      	ldrh	r3, [r4, #12]
 8026d4c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026d50:	81a3      	strh	r3, [r4, #12]
 8026d52:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8026d56:	e7e9      	b.n	8026d2c <__ssputs_r+0x90>
 8026d58:	463e      	mov	r6, r7
 8026d5a:	e7db      	b.n	8026d14 <__ssputs_r+0x78>

08026d5c <_svfiprintf_r>:
 8026d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d60:	4698      	mov	r8, r3
 8026d62:	898b      	ldrh	r3, [r1, #12]
 8026d64:	061b      	lsls	r3, r3, #24
 8026d66:	b09d      	sub	sp, #116	@ 0x74
 8026d68:	4607      	mov	r7, r0
 8026d6a:	460d      	mov	r5, r1
 8026d6c:	4614      	mov	r4, r2
 8026d6e:	d510      	bpl.n	8026d92 <_svfiprintf_r+0x36>
 8026d70:	690b      	ldr	r3, [r1, #16]
 8026d72:	b973      	cbnz	r3, 8026d92 <_svfiprintf_r+0x36>
 8026d74:	2140      	movs	r1, #64	@ 0x40
 8026d76:	f7fc fa75 	bl	8023264 <_malloc_r>
 8026d7a:	6028      	str	r0, [r5, #0]
 8026d7c:	6128      	str	r0, [r5, #16]
 8026d7e:	b930      	cbnz	r0, 8026d8e <_svfiprintf_r+0x32>
 8026d80:	230c      	movs	r3, #12
 8026d82:	603b      	str	r3, [r7, #0]
 8026d84:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8026d88:	b01d      	add	sp, #116	@ 0x74
 8026d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d8e:	2340      	movs	r3, #64	@ 0x40
 8026d90:	616b      	str	r3, [r5, #20]
 8026d92:	2300      	movs	r3, #0
 8026d94:	9309      	str	r3, [sp, #36]	@ 0x24
 8026d96:	2320      	movs	r3, #32
 8026d98:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026d9c:	f8cd 800c 	str.w	r8, [sp, #12]
 8026da0:	2330      	movs	r3, #48	@ 0x30
 8026da2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8026f40 <_svfiprintf_r+0x1e4>
 8026da6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8026daa:	f04f 0901 	mov.w	r9, #1
 8026dae:	4623      	mov	r3, r4
 8026db0:	469a      	mov	sl, r3
 8026db2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026db6:	b10a      	cbz	r2, 8026dbc <_svfiprintf_r+0x60>
 8026db8:	2a25      	cmp	r2, #37	@ 0x25
 8026dba:	d1f9      	bne.n	8026db0 <_svfiprintf_r+0x54>
 8026dbc:	ebba 0b04 	subs.w	fp, sl, r4
 8026dc0:	d00b      	beq.n	8026dda <_svfiprintf_r+0x7e>
 8026dc2:	465b      	mov	r3, fp
 8026dc4:	4622      	mov	r2, r4
 8026dc6:	4629      	mov	r1, r5
 8026dc8:	4638      	mov	r0, r7
 8026dca:	f7ff ff67 	bl	8026c9c <__ssputs_r>
 8026dce:	3001      	adds	r0, #1
 8026dd0:	f000 80a7 	beq.w	8026f22 <_svfiprintf_r+0x1c6>
 8026dd4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026dd6:	445a      	add	r2, fp
 8026dd8:	9209      	str	r2, [sp, #36]	@ 0x24
 8026dda:	f89a 3000 	ldrb.w	r3, [sl]
 8026dde:	2b00      	cmp	r3, #0
 8026de0:	f000 809f 	beq.w	8026f22 <_svfiprintf_r+0x1c6>
 8026de4:	2300      	movs	r3, #0
 8026de6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8026dea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026dee:	f10a 0a01 	add.w	sl, sl, #1
 8026df2:	9304      	str	r3, [sp, #16]
 8026df4:	9307      	str	r3, [sp, #28]
 8026df6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8026dfa:	931a      	str	r3, [sp, #104]	@ 0x68
 8026dfc:	4654      	mov	r4, sl
 8026dfe:	2205      	movs	r2, #5
 8026e00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026e04:	484e      	ldr	r0, [pc, #312]	@ (8026f40 <_svfiprintf_r+0x1e4>)
 8026e06:	f7d9 f9d3 	bl	80001b0 <memchr>
 8026e0a:	9a04      	ldr	r2, [sp, #16]
 8026e0c:	b9d8      	cbnz	r0, 8026e46 <_svfiprintf_r+0xea>
 8026e0e:	06d0      	lsls	r0, r2, #27
 8026e10:	bf44      	itt	mi
 8026e12:	2320      	movmi	r3, #32
 8026e14:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026e18:	0711      	lsls	r1, r2, #28
 8026e1a:	bf44      	itt	mi
 8026e1c:	232b      	movmi	r3, #43	@ 0x2b
 8026e1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026e22:	f89a 3000 	ldrb.w	r3, [sl]
 8026e26:	2b2a      	cmp	r3, #42	@ 0x2a
 8026e28:	d015      	beq.n	8026e56 <_svfiprintf_r+0xfa>
 8026e2a:	9a07      	ldr	r2, [sp, #28]
 8026e2c:	4654      	mov	r4, sl
 8026e2e:	2000      	movs	r0, #0
 8026e30:	f04f 0c0a 	mov.w	ip, #10
 8026e34:	4621      	mov	r1, r4
 8026e36:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026e3a:	3b30      	subs	r3, #48	@ 0x30
 8026e3c:	2b09      	cmp	r3, #9
 8026e3e:	d94b      	bls.n	8026ed8 <_svfiprintf_r+0x17c>
 8026e40:	b1b0      	cbz	r0, 8026e70 <_svfiprintf_r+0x114>
 8026e42:	9207      	str	r2, [sp, #28]
 8026e44:	e014      	b.n	8026e70 <_svfiprintf_r+0x114>
 8026e46:	eba0 0308 	sub.w	r3, r0, r8
 8026e4a:	fa09 f303 	lsl.w	r3, r9, r3
 8026e4e:	4313      	orrs	r3, r2
 8026e50:	9304      	str	r3, [sp, #16]
 8026e52:	46a2      	mov	sl, r4
 8026e54:	e7d2      	b.n	8026dfc <_svfiprintf_r+0xa0>
 8026e56:	9b03      	ldr	r3, [sp, #12]
 8026e58:	1d19      	adds	r1, r3, #4
 8026e5a:	681b      	ldr	r3, [r3, #0]
 8026e5c:	9103      	str	r1, [sp, #12]
 8026e5e:	2b00      	cmp	r3, #0
 8026e60:	bfbb      	ittet	lt
 8026e62:	425b      	neglt	r3, r3
 8026e64:	f042 0202 	orrlt.w	r2, r2, #2
 8026e68:	9307      	strge	r3, [sp, #28]
 8026e6a:	9307      	strlt	r3, [sp, #28]
 8026e6c:	bfb8      	it	lt
 8026e6e:	9204      	strlt	r2, [sp, #16]
 8026e70:	7823      	ldrb	r3, [r4, #0]
 8026e72:	2b2e      	cmp	r3, #46	@ 0x2e
 8026e74:	d10a      	bne.n	8026e8c <_svfiprintf_r+0x130>
 8026e76:	7863      	ldrb	r3, [r4, #1]
 8026e78:	2b2a      	cmp	r3, #42	@ 0x2a
 8026e7a:	d132      	bne.n	8026ee2 <_svfiprintf_r+0x186>
 8026e7c:	9b03      	ldr	r3, [sp, #12]
 8026e7e:	1d1a      	adds	r2, r3, #4
 8026e80:	681b      	ldr	r3, [r3, #0]
 8026e82:	9203      	str	r2, [sp, #12]
 8026e84:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8026e88:	3402      	adds	r4, #2
 8026e8a:	9305      	str	r3, [sp, #20]
 8026e8c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8026f50 <_svfiprintf_r+0x1f4>
 8026e90:	7821      	ldrb	r1, [r4, #0]
 8026e92:	2203      	movs	r2, #3
 8026e94:	4650      	mov	r0, sl
 8026e96:	f7d9 f98b 	bl	80001b0 <memchr>
 8026e9a:	b138      	cbz	r0, 8026eac <_svfiprintf_r+0x150>
 8026e9c:	9b04      	ldr	r3, [sp, #16]
 8026e9e:	eba0 000a 	sub.w	r0, r0, sl
 8026ea2:	2240      	movs	r2, #64	@ 0x40
 8026ea4:	4082      	lsls	r2, r0
 8026ea6:	4313      	orrs	r3, r2
 8026ea8:	3401      	adds	r4, #1
 8026eaa:	9304      	str	r3, [sp, #16]
 8026eac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026eb0:	4824      	ldr	r0, [pc, #144]	@ (8026f44 <_svfiprintf_r+0x1e8>)
 8026eb2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8026eb6:	2206      	movs	r2, #6
 8026eb8:	f7d9 f97a 	bl	80001b0 <memchr>
 8026ebc:	2800      	cmp	r0, #0
 8026ebe:	d036      	beq.n	8026f2e <_svfiprintf_r+0x1d2>
 8026ec0:	4b21      	ldr	r3, [pc, #132]	@ (8026f48 <_svfiprintf_r+0x1ec>)
 8026ec2:	bb1b      	cbnz	r3, 8026f0c <_svfiprintf_r+0x1b0>
 8026ec4:	9b03      	ldr	r3, [sp, #12]
 8026ec6:	3307      	adds	r3, #7
 8026ec8:	f023 0307 	bic.w	r3, r3, #7
 8026ecc:	3308      	adds	r3, #8
 8026ece:	9303      	str	r3, [sp, #12]
 8026ed0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026ed2:	4433      	add	r3, r6
 8026ed4:	9309      	str	r3, [sp, #36]	@ 0x24
 8026ed6:	e76a      	b.n	8026dae <_svfiprintf_r+0x52>
 8026ed8:	fb0c 3202 	mla	r2, ip, r2, r3
 8026edc:	460c      	mov	r4, r1
 8026ede:	2001      	movs	r0, #1
 8026ee0:	e7a8      	b.n	8026e34 <_svfiprintf_r+0xd8>
 8026ee2:	2300      	movs	r3, #0
 8026ee4:	3401      	adds	r4, #1
 8026ee6:	9305      	str	r3, [sp, #20]
 8026ee8:	4619      	mov	r1, r3
 8026eea:	f04f 0c0a 	mov.w	ip, #10
 8026eee:	4620      	mov	r0, r4
 8026ef0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026ef4:	3a30      	subs	r2, #48	@ 0x30
 8026ef6:	2a09      	cmp	r2, #9
 8026ef8:	d903      	bls.n	8026f02 <_svfiprintf_r+0x1a6>
 8026efa:	2b00      	cmp	r3, #0
 8026efc:	d0c6      	beq.n	8026e8c <_svfiprintf_r+0x130>
 8026efe:	9105      	str	r1, [sp, #20]
 8026f00:	e7c4      	b.n	8026e8c <_svfiprintf_r+0x130>
 8026f02:	fb0c 2101 	mla	r1, ip, r1, r2
 8026f06:	4604      	mov	r4, r0
 8026f08:	2301      	movs	r3, #1
 8026f0a:	e7f0      	b.n	8026eee <_svfiprintf_r+0x192>
 8026f0c:	ab03      	add	r3, sp, #12
 8026f0e:	9300      	str	r3, [sp, #0]
 8026f10:	462a      	mov	r2, r5
 8026f12:	4b0e      	ldr	r3, [pc, #56]	@ (8026f4c <_svfiprintf_r+0x1f0>)
 8026f14:	a904      	add	r1, sp, #16
 8026f16:	4638      	mov	r0, r7
 8026f18:	f7fc fb4a 	bl	80235b0 <_printf_float>
 8026f1c:	1c42      	adds	r2, r0, #1
 8026f1e:	4606      	mov	r6, r0
 8026f20:	d1d6      	bne.n	8026ed0 <_svfiprintf_r+0x174>
 8026f22:	89ab      	ldrh	r3, [r5, #12]
 8026f24:	065b      	lsls	r3, r3, #25
 8026f26:	f53f af2d 	bmi.w	8026d84 <_svfiprintf_r+0x28>
 8026f2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026f2c:	e72c      	b.n	8026d88 <_svfiprintf_r+0x2c>
 8026f2e:	ab03      	add	r3, sp, #12
 8026f30:	9300      	str	r3, [sp, #0]
 8026f32:	462a      	mov	r2, r5
 8026f34:	4b05      	ldr	r3, [pc, #20]	@ (8026f4c <_svfiprintf_r+0x1f0>)
 8026f36:	a904      	add	r1, sp, #16
 8026f38:	4638      	mov	r0, r7
 8026f3a:	f7fc fdcf 	bl	8023adc <_printf_i>
 8026f3e:	e7ed      	b.n	8026f1c <_svfiprintf_r+0x1c0>
 8026f40:	0802b232 	.word	0x0802b232
 8026f44:	0802b23c 	.word	0x0802b23c
 8026f48:	080235b1 	.word	0x080235b1
 8026f4c:	08026c9d 	.word	0x08026c9d
 8026f50:	0802b238 	.word	0x0802b238

08026f54 <_sungetc_r>:
 8026f54:	b538      	push	{r3, r4, r5, lr}
 8026f56:	1c4b      	adds	r3, r1, #1
 8026f58:	4614      	mov	r4, r2
 8026f5a:	d103      	bne.n	8026f64 <_sungetc_r+0x10>
 8026f5c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8026f60:	4628      	mov	r0, r5
 8026f62:	bd38      	pop	{r3, r4, r5, pc}
 8026f64:	8993      	ldrh	r3, [r2, #12]
 8026f66:	f023 0320 	bic.w	r3, r3, #32
 8026f6a:	8193      	strh	r3, [r2, #12]
 8026f6c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8026f6e:	6852      	ldr	r2, [r2, #4]
 8026f70:	b2cd      	uxtb	r5, r1
 8026f72:	b18b      	cbz	r3, 8026f98 <_sungetc_r+0x44>
 8026f74:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8026f76:	4293      	cmp	r3, r2
 8026f78:	dd08      	ble.n	8026f8c <_sungetc_r+0x38>
 8026f7a:	6823      	ldr	r3, [r4, #0]
 8026f7c:	1e5a      	subs	r2, r3, #1
 8026f7e:	6022      	str	r2, [r4, #0]
 8026f80:	f803 5c01 	strb.w	r5, [r3, #-1]
 8026f84:	6863      	ldr	r3, [r4, #4]
 8026f86:	3301      	adds	r3, #1
 8026f88:	6063      	str	r3, [r4, #4]
 8026f8a:	e7e9      	b.n	8026f60 <_sungetc_r+0xc>
 8026f8c:	4621      	mov	r1, r4
 8026f8e:	f000 fd87 	bl	8027aa0 <__submore>
 8026f92:	2800      	cmp	r0, #0
 8026f94:	d0f1      	beq.n	8026f7a <_sungetc_r+0x26>
 8026f96:	e7e1      	b.n	8026f5c <_sungetc_r+0x8>
 8026f98:	6921      	ldr	r1, [r4, #16]
 8026f9a:	6823      	ldr	r3, [r4, #0]
 8026f9c:	b151      	cbz	r1, 8026fb4 <_sungetc_r+0x60>
 8026f9e:	4299      	cmp	r1, r3
 8026fa0:	d208      	bcs.n	8026fb4 <_sungetc_r+0x60>
 8026fa2:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8026fa6:	42a9      	cmp	r1, r5
 8026fa8:	d104      	bne.n	8026fb4 <_sungetc_r+0x60>
 8026faa:	3b01      	subs	r3, #1
 8026fac:	3201      	adds	r2, #1
 8026fae:	6023      	str	r3, [r4, #0]
 8026fb0:	6062      	str	r2, [r4, #4]
 8026fb2:	e7d5      	b.n	8026f60 <_sungetc_r+0xc>
 8026fb4:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8026fb8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026fbc:	6363      	str	r3, [r4, #52]	@ 0x34
 8026fbe:	2303      	movs	r3, #3
 8026fc0:	63a3      	str	r3, [r4, #56]	@ 0x38
 8026fc2:	4623      	mov	r3, r4
 8026fc4:	f803 5f46 	strb.w	r5, [r3, #70]!
 8026fc8:	6023      	str	r3, [r4, #0]
 8026fca:	2301      	movs	r3, #1
 8026fcc:	e7dc      	b.n	8026f88 <_sungetc_r+0x34>

08026fce <__ssrefill_r>:
 8026fce:	b510      	push	{r4, lr}
 8026fd0:	460c      	mov	r4, r1
 8026fd2:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8026fd4:	b169      	cbz	r1, 8026ff2 <__ssrefill_r+0x24>
 8026fd6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026fda:	4299      	cmp	r1, r3
 8026fdc:	d001      	beq.n	8026fe2 <__ssrefill_r+0x14>
 8026fde:	f7fe fadf 	bl	80255a0 <_free_r>
 8026fe2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8026fe4:	6063      	str	r3, [r4, #4]
 8026fe6:	2000      	movs	r0, #0
 8026fe8:	6360      	str	r0, [r4, #52]	@ 0x34
 8026fea:	b113      	cbz	r3, 8026ff2 <__ssrefill_r+0x24>
 8026fec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8026fee:	6023      	str	r3, [r4, #0]
 8026ff0:	bd10      	pop	{r4, pc}
 8026ff2:	6923      	ldr	r3, [r4, #16]
 8026ff4:	6023      	str	r3, [r4, #0]
 8026ff6:	2300      	movs	r3, #0
 8026ff8:	6063      	str	r3, [r4, #4]
 8026ffa:	89a3      	ldrh	r3, [r4, #12]
 8026ffc:	f043 0320 	orr.w	r3, r3, #32
 8027000:	81a3      	strh	r3, [r4, #12]
 8027002:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8027006:	e7f3      	b.n	8026ff0 <__ssrefill_r+0x22>

08027008 <__ssvfiscanf_r>:
 8027008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802700c:	f5ad 7d23 	sub.w	sp, sp, #652	@ 0x28c
 8027010:	ac41      	add	r4, sp, #260	@ 0x104
 8027012:	460d      	mov	r5, r1
 8027014:	2100      	movs	r1, #0
 8027016:	e9c4 1103 	strd	r1, r1, [r4, #12]
 802701a:	a901      	add	r1, sp, #4
 802701c:	6161      	str	r1, [r4, #20]
 802701e:	49af      	ldr	r1, [pc, #700]	@ (80272dc <__ssvfiscanf_r+0x2d4>)
 8027020:	f8c4 117c 	str.w	r1, [r4, #380]	@ 0x17c
 8027024:	f8df b2c4 	ldr.w	fp, [pc, #708]	@ 80272ec <__ssvfiscanf_r+0x2e4>
 8027028:	49ad      	ldr	r1, [pc, #692]	@ (80272e0 <__ssvfiscanf_r+0x2d8>)
 802702a:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
 802702e:	4607      	mov	r7, r0
 8027030:	46e8      	mov	r8, sp
 8027032:	9300      	str	r3, [sp, #0]
 8027034:	f892 9000 	ldrb.w	r9, [r2]
 8027038:	f1b9 0f00 	cmp.w	r9, #0
 802703c:	f000 8160 	beq.w	8027300 <__ssvfiscanf_r+0x2f8>
 8027040:	f81b 3009 	ldrb.w	r3, [fp, r9]
 8027044:	f013 0308 	ands.w	r3, r3, #8
 8027048:	f102 0601 	add.w	r6, r2, #1
 802704c:	d01b      	beq.n	8027086 <__ssvfiscanf_r+0x7e>
 802704e:	686b      	ldr	r3, [r5, #4]
 8027050:	2b00      	cmp	r3, #0
 8027052:	dd10      	ble.n	8027076 <__ssvfiscanf_r+0x6e>
 8027054:	682b      	ldr	r3, [r5, #0]
 8027056:	781a      	ldrb	r2, [r3, #0]
 8027058:	f81b 2002 	ldrb.w	r2, [fp, r2]
 802705c:	0712      	lsls	r2, r2, #28
 802705e:	d401      	bmi.n	8027064 <__ssvfiscanf_r+0x5c>
 8027060:	4632      	mov	r2, r6
 8027062:	e7e7      	b.n	8027034 <__ssvfiscanf_r+0x2c>
 8027064:	6922      	ldr	r2, [r4, #16]
 8027066:	3201      	adds	r2, #1
 8027068:	6122      	str	r2, [r4, #16]
 802706a:	686a      	ldr	r2, [r5, #4]
 802706c:	3301      	adds	r3, #1
 802706e:	3a01      	subs	r2, #1
 8027070:	606a      	str	r2, [r5, #4]
 8027072:	602b      	str	r3, [r5, #0]
 8027074:	e7eb      	b.n	802704e <__ssvfiscanf_r+0x46>
 8027076:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 802707a:	4629      	mov	r1, r5
 802707c:	4638      	mov	r0, r7
 802707e:	4798      	blx	r3
 8027080:	2800      	cmp	r0, #0
 8027082:	d0e7      	beq.n	8027054 <__ssvfiscanf_r+0x4c>
 8027084:	e7ec      	b.n	8027060 <__ssvfiscanf_r+0x58>
 8027086:	f1b9 0f25 	cmp.w	r9, #37	@ 0x25
 802708a:	f040 8084 	bne.w	8027196 <__ssvfiscanf_r+0x18e>
 802708e:	6023      	str	r3, [r4, #0]
 8027090:	60a3      	str	r3, [r4, #8]
 8027092:	7853      	ldrb	r3, [r2, #1]
 8027094:	2b2a      	cmp	r3, #42	@ 0x2a
 8027096:	bf02      	ittt	eq
 8027098:	2310      	moveq	r3, #16
 802709a:	1c96      	addeq	r6, r2, #2
 802709c:	6023      	streq	r3, [r4, #0]
 802709e:	220a      	movs	r2, #10
 80270a0:	46b2      	mov	sl, r6
 80270a2:	f81a 1b01 	ldrb.w	r1, [sl], #1
 80270a6:	f1a1 0330 	sub.w	r3, r1, #48	@ 0x30
 80270aa:	2b09      	cmp	r3, #9
 80270ac:	d91d      	bls.n	80270ea <__ssvfiscanf_r+0xe2>
 80270ae:	4b8d      	ldr	r3, [pc, #564]	@ (80272e4 <__ssvfiscanf_r+0x2dc>)
 80270b0:	2203      	movs	r2, #3
 80270b2:	4618      	mov	r0, r3
 80270b4:	f7d9 f87c 	bl	80001b0 <memchr>
 80270b8:	b138      	cbz	r0, 80270ca <__ssvfiscanf_r+0xc2>
 80270ba:	4b8a      	ldr	r3, [pc, #552]	@ (80272e4 <__ssvfiscanf_r+0x2dc>)
 80270bc:	6822      	ldr	r2, [r4, #0]
 80270be:	1ac0      	subs	r0, r0, r3
 80270c0:	2301      	movs	r3, #1
 80270c2:	4083      	lsls	r3, r0
 80270c4:	4313      	orrs	r3, r2
 80270c6:	6023      	str	r3, [r4, #0]
 80270c8:	4656      	mov	r6, sl
 80270ca:	f816 3b01 	ldrb.w	r3, [r6], #1
 80270ce:	2b78      	cmp	r3, #120	@ 0x78
 80270d0:	d806      	bhi.n	80270e0 <__ssvfiscanf_r+0xd8>
 80270d2:	2b57      	cmp	r3, #87	@ 0x57
 80270d4:	d810      	bhi.n	80270f8 <__ssvfiscanf_r+0xf0>
 80270d6:	2b25      	cmp	r3, #37	@ 0x25
 80270d8:	d05d      	beq.n	8027196 <__ssvfiscanf_r+0x18e>
 80270da:	d857      	bhi.n	802718c <__ssvfiscanf_r+0x184>
 80270dc:	2b00      	cmp	r3, #0
 80270de:	d076      	beq.n	80271ce <__ssvfiscanf_r+0x1c6>
 80270e0:	2303      	movs	r3, #3
 80270e2:	61a3      	str	r3, [r4, #24]
 80270e4:	230a      	movs	r3, #10
 80270e6:	6063      	str	r3, [r4, #4]
 80270e8:	e089      	b.n	80271fe <__ssvfiscanf_r+0x1f6>
 80270ea:	68a3      	ldr	r3, [r4, #8]
 80270ec:	fb02 1103 	mla	r1, r2, r3, r1
 80270f0:	3930      	subs	r1, #48	@ 0x30
 80270f2:	60a1      	str	r1, [r4, #8]
 80270f4:	4656      	mov	r6, sl
 80270f6:	e7d3      	b.n	80270a0 <__ssvfiscanf_r+0x98>
 80270f8:	f1a3 0258 	sub.w	r2, r3, #88	@ 0x58
 80270fc:	2a20      	cmp	r2, #32
 80270fe:	d8ef      	bhi.n	80270e0 <__ssvfiscanf_r+0xd8>
 8027100:	a101      	add	r1, pc, #4	@ (adr r1, 8027108 <__ssvfiscanf_r+0x100>)
 8027102:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8027106:	bf00      	nop
 8027108:	080271dd 	.word	0x080271dd
 802710c:	080270e1 	.word	0x080270e1
 8027110:	080270e1 	.word	0x080270e1
 8027114:	08027239 	.word	0x08027239
 8027118:	080270e1 	.word	0x080270e1
 802711c:	080270e1 	.word	0x080270e1
 8027120:	080270e1 	.word	0x080270e1
 8027124:	080270e1 	.word	0x080270e1
 8027128:	080270e1 	.word	0x080270e1
 802712c:	080270e1 	.word	0x080270e1
 8027130:	080270e1 	.word	0x080270e1
 8027134:	0802724f 	.word	0x0802724f
 8027138:	08027235 	.word	0x08027235
 802713c:	08027193 	.word	0x08027193
 8027140:	08027193 	.word	0x08027193
 8027144:	08027193 	.word	0x08027193
 8027148:	080270e1 	.word	0x080270e1
 802714c:	080271ef 	.word	0x080271ef
 8027150:	080270e1 	.word	0x080270e1
 8027154:	080270e1 	.word	0x080270e1
 8027158:	080270e1 	.word	0x080270e1
 802715c:	080270e1 	.word	0x080270e1
 8027160:	0802725f 	.word	0x0802725f
 8027164:	080271f7 	.word	0x080271f7
 8027168:	080271d5 	.word	0x080271d5
 802716c:	080270e1 	.word	0x080270e1
 8027170:	080270e1 	.word	0x080270e1
 8027174:	0802725b 	.word	0x0802725b
 8027178:	080270e1 	.word	0x080270e1
 802717c:	08027235 	.word	0x08027235
 8027180:	080270e1 	.word	0x080270e1
 8027184:	080270e1 	.word	0x080270e1
 8027188:	080271dd 	.word	0x080271dd
 802718c:	3b45      	subs	r3, #69	@ 0x45
 802718e:	2b02      	cmp	r3, #2
 8027190:	d8a6      	bhi.n	80270e0 <__ssvfiscanf_r+0xd8>
 8027192:	2305      	movs	r3, #5
 8027194:	e032      	b.n	80271fc <__ssvfiscanf_r+0x1f4>
 8027196:	686b      	ldr	r3, [r5, #4]
 8027198:	2b00      	cmp	r3, #0
 802719a:	dd0d      	ble.n	80271b8 <__ssvfiscanf_r+0x1b0>
 802719c:	682b      	ldr	r3, [r5, #0]
 802719e:	781a      	ldrb	r2, [r3, #0]
 80271a0:	454a      	cmp	r2, r9
 80271a2:	f040 80ad 	bne.w	8027300 <__ssvfiscanf_r+0x2f8>
 80271a6:	3301      	adds	r3, #1
 80271a8:	686a      	ldr	r2, [r5, #4]
 80271aa:	602b      	str	r3, [r5, #0]
 80271ac:	6923      	ldr	r3, [r4, #16]
 80271ae:	3a01      	subs	r2, #1
 80271b0:	3301      	adds	r3, #1
 80271b2:	606a      	str	r2, [r5, #4]
 80271b4:	6123      	str	r3, [r4, #16]
 80271b6:	e753      	b.n	8027060 <__ssvfiscanf_r+0x58>
 80271b8:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 80271bc:	4629      	mov	r1, r5
 80271be:	4638      	mov	r0, r7
 80271c0:	4798      	blx	r3
 80271c2:	2800      	cmp	r0, #0
 80271c4:	d0ea      	beq.n	802719c <__ssvfiscanf_r+0x194>
 80271c6:	68e0      	ldr	r0, [r4, #12]
 80271c8:	2800      	cmp	r0, #0
 80271ca:	f040 8091 	bne.w	80272f0 <__ssvfiscanf_r+0x2e8>
 80271ce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80271d2:	e091      	b.n	80272f8 <__ssvfiscanf_r+0x2f0>
 80271d4:	6822      	ldr	r2, [r4, #0]
 80271d6:	f042 0220 	orr.w	r2, r2, #32
 80271da:	6022      	str	r2, [r4, #0]
 80271dc:	6822      	ldr	r2, [r4, #0]
 80271de:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80271e2:	6022      	str	r2, [r4, #0]
 80271e4:	2210      	movs	r2, #16
 80271e6:	2b6e      	cmp	r3, #110	@ 0x6e
 80271e8:	6062      	str	r2, [r4, #4]
 80271ea:	d806      	bhi.n	80271fa <__ssvfiscanf_r+0x1f2>
 80271ec:	e001      	b.n	80271f2 <__ssvfiscanf_r+0x1ea>
 80271ee:	2300      	movs	r3, #0
 80271f0:	6063      	str	r3, [r4, #4]
 80271f2:	2303      	movs	r3, #3
 80271f4:	e002      	b.n	80271fc <__ssvfiscanf_r+0x1f4>
 80271f6:	2308      	movs	r3, #8
 80271f8:	6063      	str	r3, [r4, #4]
 80271fa:	2304      	movs	r3, #4
 80271fc:	61a3      	str	r3, [r4, #24]
 80271fe:	686b      	ldr	r3, [r5, #4]
 8027200:	2b00      	cmp	r3, #0
 8027202:	dd3c      	ble.n	802727e <__ssvfiscanf_r+0x276>
 8027204:	6823      	ldr	r3, [r4, #0]
 8027206:	0659      	lsls	r1, r3, #25
 8027208:	d405      	bmi.n	8027216 <__ssvfiscanf_r+0x20e>
 802720a:	682b      	ldr	r3, [r5, #0]
 802720c:	781a      	ldrb	r2, [r3, #0]
 802720e:	f81b 2002 	ldrb.w	r2, [fp, r2]
 8027212:	0712      	lsls	r2, r2, #28
 8027214:	d43b      	bmi.n	802728e <__ssvfiscanf_r+0x286>
 8027216:	69a3      	ldr	r3, [r4, #24]
 8027218:	2b02      	cmp	r3, #2
 802721a:	dc4b      	bgt.n	80272b4 <__ssvfiscanf_r+0x2ac>
 802721c:	4643      	mov	r3, r8
 802721e:	462a      	mov	r2, r5
 8027220:	4621      	mov	r1, r4
 8027222:	4638      	mov	r0, r7
 8027224:	f000 f9b0 	bl	8027588 <_scanf_chars>
 8027228:	2801      	cmp	r0, #1
 802722a:	d069      	beq.n	8027300 <__ssvfiscanf_r+0x2f8>
 802722c:	2802      	cmp	r0, #2
 802722e:	f47f af17 	bne.w	8027060 <__ssvfiscanf_r+0x58>
 8027232:	e7c8      	b.n	80271c6 <__ssvfiscanf_r+0x1be>
 8027234:	220a      	movs	r2, #10
 8027236:	e7d6      	b.n	80271e6 <__ssvfiscanf_r+0x1de>
 8027238:	4631      	mov	r1, r6
 802723a:	a801      	add	r0, sp, #4
 802723c:	f000 fbf7 	bl	8027a2e <__sccl>
 8027240:	6823      	ldr	r3, [r4, #0]
 8027242:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8027246:	6023      	str	r3, [r4, #0]
 8027248:	4606      	mov	r6, r0
 802724a:	2301      	movs	r3, #1
 802724c:	e7d6      	b.n	80271fc <__ssvfiscanf_r+0x1f4>
 802724e:	6823      	ldr	r3, [r4, #0]
 8027250:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8027254:	6023      	str	r3, [r4, #0]
 8027256:	2300      	movs	r3, #0
 8027258:	e7d0      	b.n	80271fc <__ssvfiscanf_r+0x1f4>
 802725a:	2302      	movs	r3, #2
 802725c:	e7ce      	b.n	80271fc <__ssvfiscanf_r+0x1f4>
 802725e:	6820      	ldr	r0, [r4, #0]
 8027260:	06c3      	lsls	r3, r0, #27
 8027262:	f53f aefd 	bmi.w	8027060 <__ssvfiscanf_r+0x58>
 8027266:	f8d8 3000 	ldr.w	r3, [r8]
 802726a:	6922      	ldr	r2, [r4, #16]
 802726c:	1d19      	adds	r1, r3, #4
 802726e:	f8c8 1000 	str.w	r1, [r8]
 8027272:	681b      	ldr	r3, [r3, #0]
 8027274:	07c0      	lsls	r0, r0, #31
 8027276:	bf4c      	ite	mi
 8027278:	801a      	strhmi	r2, [r3, #0]
 802727a:	601a      	strpl	r2, [r3, #0]
 802727c:	e6f0      	b.n	8027060 <__ssvfiscanf_r+0x58>
 802727e:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8027282:	4629      	mov	r1, r5
 8027284:	4638      	mov	r0, r7
 8027286:	4798      	blx	r3
 8027288:	2800      	cmp	r0, #0
 802728a:	d0bb      	beq.n	8027204 <__ssvfiscanf_r+0x1fc>
 802728c:	e79b      	b.n	80271c6 <__ssvfiscanf_r+0x1be>
 802728e:	6922      	ldr	r2, [r4, #16]
 8027290:	3201      	adds	r2, #1
 8027292:	6122      	str	r2, [r4, #16]
 8027294:	686a      	ldr	r2, [r5, #4]
 8027296:	3a01      	subs	r2, #1
 8027298:	2a00      	cmp	r2, #0
 802729a:	606a      	str	r2, [r5, #4]
 802729c:	dd02      	ble.n	80272a4 <__ssvfiscanf_r+0x29c>
 802729e:	3301      	adds	r3, #1
 80272a0:	602b      	str	r3, [r5, #0]
 80272a2:	e7b2      	b.n	802720a <__ssvfiscanf_r+0x202>
 80272a4:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 80272a8:	4629      	mov	r1, r5
 80272aa:	4638      	mov	r0, r7
 80272ac:	4798      	blx	r3
 80272ae:	2800      	cmp	r0, #0
 80272b0:	d0ab      	beq.n	802720a <__ssvfiscanf_r+0x202>
 80272b2:	e788      	b.n	80271c6 <__ssvfiscanf_r+0x1be>
 80272b4:	2b04      	cmp	r3, #4
 80272b6:	dc06      	bgt.n	80272c6 <__ssvfiscanf_r+0x2be>
 80272b8:	4643      	mov	r3, r8
 80272ba:	462a      	mov	r2, r5
 80272bc:	4621      	mov	r1, r4
 80272be:	4638      	mov	r0, r7
 80272c0:	f000 f9bc 	bl	802763c <_scanf_i>
 80272c4:	e7b0      	b.n	8027228 <__ssvfiscanf_r+0x220>
 80272c6:	4b08      	ldr	r3, [pc, #32]	@ (80272e8 <__ssvfiscanf_r+0x2e0>)
 80272c8:	2b00      	cmp	r3, #0
 80272ca:	f43f aec9 	beq.w	8027060 <__ssvfiscanf_r+0x58>
 80272ce:	4643      	mov	r3, r8
 80272d0:	462a      	mov	r2, r5
 80272d2:	4621      	mov	r1, r4
 80272d4:	4638      	mov	r0, r7
 80272d6:	f7fc fd21 	bl	8023d1c <_scanf_float>
 80272da:	e7a5      	b.n	8027228 <__ssvfiscanf_r+0x220>
 80272dc:	08026f55 	.word	0x08026f55
 80272e0:	08026fcf 	.word	0x08026fcf
 80272e4:	0802b238 	.word	0x0802b238
 80272e8:	08023d1d 	.word	0x08023d1d
 80272ec:	0803791d 	.word	0x0803791d
 80272f0:	89ab      	ldrh	r3, [r5, #12]
 80272f2:	065b      	lsls	r3, r3, #25
 80272f4:	f53f af6b 	bmi.w	80271ce <__ssvfiscanf_r+0x1c6>
 80272f8:	f50d 7d23 	add.w	sp, sp, #652	@ 0x28c
 80272fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027300:	68e0      	ldr	r0, [r4, #12]
 8027302:	e7f9      	b.n	80272f8 <__ssvfiscanf_r+0x2f0>

08027304 <__sfputc_r>:
 8027304:	6893      	ldr	r3, [r2, #8]
 8027306:	3b01      	subs	r3, #1
 8027308:	2b00      	cmp	r3, #0
 802730a:	b410      	push	{r4}
 802730c:	6093      	str	r3, [r2, #8]
 802730e:	da08      	bge.n	8027322 <__sfputc_r+0x1e>
 8027310:	6994      	ldr	r4, [r2, #24]
 8027312:	42a3      	cmp	r3, r4
 8027314:	db01      	blt.n	802731a <__sfputc_r+0x16>
 8027316:	290a      	cmp	r1, #10
 8027318:	d103      	bne.n	8027322 <__sfputc_r+0x1e>
 802731a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802731e:	f7fd b907 	b.w	8024530 <__swbuf_r>
 8027322:	6813      	ldr	r3, [r2, #0]
 8027324:	1c58      	adds	r0, r3, #1
 8027326:	6010      	str	r0, [r2, #0]
 8027328:	7019      	strb	r1, [r3, #0]
 802732a:	4608      	mov	r0, r1
 802732c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027330:	4770      	bx	lr

08027332 <__sfputs_r>:
 8027332:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027334:	4606      	mov	r6, r0
 8027336:	460f      	mov	r7, r1
 8027338:	4614      	mov	r4, r2
 802733a:	18d5      	adds	r5, r2, r3
 802733c:	42ac      	cmp	r4, r5
 802733e:	d101      	bne.n	8027344 <__sfputs_r+0x12>
 8027340:	2000      	movs	r0, #0
 8027342:	e007      	b.n	8027354 <__sfputs_r+0x22>
 8027344:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027348:	463a      	mov	r2, r7
 802734a:	4630      	mov	r0, r6
 802734c:	f7ff ffda 	bl	8027304 <__sfputc_r>
 8027350:	1c43      	adds	r3, r0, #1
 8027352:	d1f3      	bne.n	802733c <__sfputs_r+0xa>
 8027354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08027358 <_vfiprintf_r>:
 8027358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802735c:	460d      	mov	r5, r1
 802735e:	b09d      	sub	sp, #116	@ 0x74
 8027360:	4614      	mov	r4, r2
 8027362:	4698      	mov	r8, r3
 8027364:	4606      	mov	r6, r0
 8027366:	b118      	cbz	r0, 8027370 <_vfiprintf_r+0x18>
 8027368:	6a03      	ldr	r3, [r0, #32]
 802736a:	b90b      	cbnz	r3, 8027370 <_vfiprintf_r+0x18>
 802736c:	f7fc ff70 	bl	8024250 <__sinit>
 8027370:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8027372:	07d9      	lsls	r1, r3, #31
 8027374:	d405      	bmi.n	8027382 <_vfiprintf_r+0x2a>
 8027376:	89ab      	ldrh	r3, [r5, #12]
 8027378:	059a      	lsls	r2, r3, #22
 802737a:	d402      	bmi.n	8027382 <_vfiprintf_r+0x2a>
 802737c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802737e:	f7fd fa82 	bl	8024886 <__retarget_lock_acquire_recursive>
 8027382:	89ab      	ldrh	r3, [r5, #12]
 8027384:	071b      	lsls	r3, r3, #28
 8027386:	d501      	bpl.n	802738c <_vfiprintf_r+0x34>
 8027388:	692b      	ldr	r3, [r5, #16]
 802738a:	b99b      	cbnz	r3, 80273b4 <_vfiprintf_r+0x5c>
 802738c:	4629      	mov	r1, r5
 802738e:	4630      	mov	r0, r6
 8027390:	f7fd f90c 	bl	80245ac <__swsetup_r>
 8027394:	b170      	cbz	r0, 80273b4 <_vfiprintf_r+0x5c>
 8027396:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8027398:	07dc      	lsls	r4, r3, #31
 802739a:	d504      	bpl.n	80273a6 <_vfiprintf_r+0x4e>
 802739c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80273a0:	b01d      	add	sp, #116	@ 0x74
 80273a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273a6:	89ab      	ldrh	r3, [r5, #12]
 80273a8:	0598      	lsls	r0, r3, #22
 80273aa:	d4f7      	bmi.n	802739c <_vfiprintf_r+0x44>
 80273ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80273ae:	f7fd fa6b 	bl	8024888 <__retarget_lock_release_recursive>
 80273b2:	e7f3      	b.n	802739c <_vfiprintf_r+0x44>
 80273b4:	2300      	movs	r3, #0
 80273b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80273b8:	2320      	movs	r3, #32
 80273ba:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80273be:	f8cd 800c 	str.w	r8, [sp, #12]
 80273c2:	2330      	movs	r3, #48	@ 0x30
 80273c4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8027574 <_vfiprintf_r+0x21c>
 80273c8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80273cc:	f04f 0901 	mov.w	r9, #1
 80273d0:	4623      	mov	r3, r4
 80273d2:	469a      	mov	sl, r3
 80273d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80273d8:	b10a      	cbz	r2, 80273de <_vfiprintf_r+0x86>
 80273da:	2a25      	cmp	r2, #37	@ 0x25
 80273dc:	d1f9      	bne.n	80273d2 <_vfiprintf_r+0x7a>
 80273de:	ebba 0b04 	subs.w	fp, sl, r4
 80273e2:	d00b      	beq.n	80273fc <_vfiprintf_r+0xa4>
 80273e4:	465b      	mov	r3, fp
 80273e6:	4622      	mov	r2, r4
 80273e8:	4629      	mov	r1, r5
 80273ea:	4630      	mov	r0, r6
 80273ec:	f7ff ffa1 	bl	8027332 <__sfputs_r>
 80273f0:	3001      	adds	r0, #1
 80273f2:	f000 80a7 	beq.w	8027544 <_vfiprintf_r+0x1ec>
 80273f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80273f8:	445a      	add	r2, fp
 80273fa:	9209      	str	r2, [sp, #36]	@ 0x24
 80273fc:	f89a 3000 	ldrb.w	r3, [sl]
 8027400:	2b00      	cmp	r3, #0
 8027402:	f000 809f 	beq.w	8027544 <_vfiprintf_r+0x1ec>
 8027406:	2300      	movs	r3, #0
 8027408:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 802740c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027410:	f10a 0a01 	add.w	sl, sl, #1
 8027414:	9304      	str	r3, [sp, #16]
 8027416:	9307      	str	r3, [sp, #28]
 8027418:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802741c:	931a      	str	r3, [sp, #104]	@ 0x68
 802741e:	4654      	mov	r4, sl
 8027420:	2205      	movs	r2, #5
 8027422:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027426:	4853      	ldr	r0, [pc, #332]	@ (8027574 <_vfiprintf_r+0x21c>)
 8027428:	f7d8 fec2 	bl	80001b0 <memchr>
 802742c:	9a04      	ldr	r2, [sp, #16]
 802742e:	b9d8      	cbnz	r0, 8027468 <_vfiprintf_r+0x110>
 8027430:	06d1      	lsls	r1, r2, #27
 8027432:	bf44      	itt	mi
 8027434:	2320      	movmi	r3, #32
 8027436:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802743a:	0713      	lsls	r3, r2, #28
 802743c:	bf44      	itt	mi
 802743e:	232b      	movmi	r3, #43	@ 0x2b
 8027440:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8027444:	f89a 3000 	ldrb.w	r3, [sl]
 8027448:	2b2a      	cmp	r3, #42	@ 0x2a
 802744a:	d015      	beq.n	8027478 <_vfiprintf_r+0x120>
 802744c:	9a07      	ldr	r2, [sp, #28]
 802744e:	4654      	mov	r4, sl
 8027450:	2000      	movs	r0, #0
 8027452:	f04f 0c0a 	mov.w	ip, #10
 8027456:	4621      	mov	r1, r4
 8027458:	f811 3b01 	ldrb.w	r3, [r1], #1
 802745c:	3b30      	subs	r3, #48	@ 0x30
 802745e:	2b09      	cmp	r3, #9
 8027460:	d94b      	bls.n	80274fa <_vfiprintf_r+0x1a2>
 8027462:	b1b0      	cbz	r0, 8027492 <_vfiprintf_r+0x13a>
 8027464:	9207      	str	r2, [sp, #28]
 8027466:	e014      	b.n	8027492 <_vfiprintf_r+0x13a>
 8027468:	eba0 0308 	sub.w	r3, r0, r8
 802746c:	fa09 f303 	lsl.w	r3, r9, r3
 8027470:	4313      	orrs	r3, r2
 8027472:	9304      	str	r3, [sp, #16]
 8027474:	46a2      	mov	sl, r4
 8027476:	e7d2      	b.n	802741e <_vfiprintf_r+0xc6>
 8027478:	9b03      	ldr	r3, [sp, #12]
 802747a:	1d19      	adds	r1, r3, #4
 802747c:	681b      	ldr	r3, [r3, #0]
 802747e:	9103      	str	r1, [sp, #12]
 8027480:	2b00      	cmp	r3, #0
 8027482:	bfbb      	ittet	lt
 8027484:	425b      	neglt	r3, r3
 8027486:	f042 0202 	orrlt.w	r2, r2, #2
 802748a:	9307      	strge	r3, [sp, #28]
 802748c:	9307      	strlt	r3, [sp, #28]
 802748e:	bfb8      	it	lt
 8027490:	9204      	strlt	r2, [sp, #16]
 8027492:	7823      	ldrb	r3, [r4, #0]
 8027494:	2b2e      	cmp	r3, #46	@ 0x2e
 8027496:	d10a      	bne.n	80274ae <_vfiprintf_r+0x156>
 8027498:	7863      	ldrb	r3, [r4, #1]
 802749a:	2b2a      	cmp	r3, #42	@ 0x2a
 802749c:	d132      	bne.n	8027504 <_vfiprintf_r+0x1ac>
 802749e:	9b03      	ldr	r3, [sp, #12]
 80274a0:	1d1a      	adds	r2, r3, #4
 80274a2:	681b      	ldr	r3, [r3, #0]
 80274a4:	9203      	str	r2, [sp, #12]
 80274a6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80274aa:	3402      	adds	r4, #2
 80274ac:	9305      	str	r3, [sp, #20]
 80274ae:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8027584 <_vfiprintf_r+0x22c>
 80274b2:	7821      	ldrb	r1, [r4, #0]
 80274b4:	2203      	movs	r2, #3
 80274b6:	4650      	mov	r0, sl
 80274b8:	f7d8 fe7a 	bl	80001b0 <memchr>
 80274bc:	b138      	cbz	r0, 80274ce <_vfiprintf_r+0x176>
 80274be:	9b04      	ldr	r3, [sp, #16]
 80274c0:	eba0 000a 	sub.w	r0, r0, sl
 80274c4:	2240      	movs	r2, #64	@ 0x40
 80274c6:	4082      	lsls	r2, r0
 80274c8:	4313      	orrs	r3, r2
 80274ca:	3401      	adds	r4, #1
 80274cc:	9304      	str	r3, [sp, #16]
 80274ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80274d2:	4829      	ldr	r0, [pc, #164]	@ (8027578 <_vfiprintf_r+0x220>)
 80274d4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80274d8:	2206      	movs	r2, #6
 80274da:	f7d8 fe69 	bl	80001b0 <memchr>
 80274de:	2800      	cmp	r0, #0
 80274e0:	d03f      	beq.n	8027562 <_vfiprintf_r+0x20a>
 80274e2:	4b26      	ldr	r3, [pc, #152]	@ (802757c <_vfiprintf_r+0x224>)
 80274e4:	bb1b      	cbnz	r3, 802752e <_vfiprintf_r+0x1d6>
 80274e6:	9b03      	ldr	r3, [sp, #12]
 80274e8:	3307      	adds	r3, #7
 80274ea:	f023 0307 	bic.w	r3, r3, #7
 80274ee:	3308      	adds	r3, #8
 80274f0:	9303      	str	r3, [sp, #12]
 80274f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80274f4:	443b      	add	r3, r7
 80274f6:	9309      	str	r3, [sp, #36]	@ 0x24
 80274f8:	e76a      	b.n	80273d0 <_vfiprintf_r+0x78>
 80274fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80274fe:	460c      	mov	r4, r1
 8027500:	2001      	movs	r0, #1
 8027502:	e7a8      	b.n	8027456 <_vfiprintf_r+0xfe>
 8027504:	2300      	movs	r3, #0
 8027506:	3401      	adds	r4, #1
 8027508:	9305      	str	r3, [sp, #20]
 802750a:	4619      	mov	r1, r3
 802750c:	f04f 0c0a 	mov.w	ip, #10
 8027510:	4620      	mov	r0, r4
 8027512:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027516:	3a30      	subs	r2, #48	@ 0x30
 8027518:	2a09      	cmp	r2, #9
 802751a:	d903      	bls.n	8027524 <_vfiprintf_r+0x1cc>
 802751c:	2b00      	cmp	r3, #0
 802751e:	d0c6      	beq.n	80274ae <_vfiprintf_r+0x156>
 8027520:	9105      	str	r1, [sp, #20]
 8027522:	e7c4      	b.n	80274ae <_vfiprintf_r+0x156>
 8027524:	fb0c 2101 	mla	r1, ip, r1, r2
 8027528:	4604      	mov	r4, r0
 802752a:	2301      	movs	r3, #1
 802752c:	e7f0      	b.n	8027510 <_vfiprintf_r+0x1b8>
 802752e:	ab03      	add	r3, sp, #12
 8027530:	9300      	str	r3, [sp, #0]
 8027532:	462a      	mov	r2, r5
 8027534:	4b12      	ldr	r3, [pc, #72]	@ (8027580 <_vfiprintf_r+0x228>)
 8027536:	a904      	add	r1, sp, #16
 8027538:	4630      	mov	r0, r6
 802753a:	f7fc f839 	bl	80235b0 <_printf_float>
 802753e:	4607      	mov	r7, r0
 8027540:	1c78      	adds	r0, r7, #1
 8027542:	d1d6      	bne.n	80274f2 <_vfiprintf_r+0x19a>
 8027544:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8027546:	07d9      	lsls	r1, r3, #31
 8027548:	d405      	bmi.n	8027556 <_vfiprintf_r+0x1fe>
 802754a:	89ab      	ldrh	r3, [r5, #12]
 802754c:	059a      	lsls	r2, r3, #22
 802754e:	d402      	bmi.n	8027556 <_vfiprintf_r+0x1fe>
 8027550:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8027552:	f7fd f999 	bl	8024888 <__retarget_lock_release_recursive>
 8027556:	89ab      	ldrh	r3, [r5, #12]
 8027558:	065b      	lsls	r3, r3, #25
 802755a:	f53f af1f 	bmi.w	802739c <_vfiprintf_r+0x44>
 802755e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8027560:	e71e      	b.n	80273a0 <_vfiprintf_r+0x48>
 8027562:	ab03      	add	r3, sp, #12
 8027564:	9300      	str	r3, [sp, #0]
 8027566:	462a      	mov	r2, r5
 8027568:	4b05      	ldr	r3, [pc, #20]	@ (8027580 <_vfiprintf_r+0x228>)
 802756a:	a904      	add	r1, sp, #16
 802756c:	4630      	mov	r0, r6
 802756e:	f7fc fab5 	bl	8023adc <_printf_i>
 8027572:	e7e4      	b.n	802753e <_vfiprintf_r+0x1e6>
 8027574:	0802b232 	.word	0x0802b232
 8027578:	0802b23c 	.word	0x0802b23c
 802757c:	080235b1 	.word	0x080235b1
 8027580:	08027333 	.word	0x08027333
 8027584:	0802b238 	.word	0x0802b238

08027588 <_scanf_chars>:
 8027588:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802758c:	4615      	mov	r5, r2
 802758e:	688a      	ldr	r2, [r1, #8]
 8027590:	4680      	mov	r8, r0
 8027592:	460c      	mov	r4, r1
 8027594:	b932      	cbnz	r2, 80275a4 <_scanf_chars+0x1c>
 8027596:	698a      	ldr	r2, [r1, #24]
 8027598:	2a00      	cmp	r2, #0
 802759a:	bf14      	ite	ne
 802759c:	f04f 32ff 	movne.w	r2, #4294967295	@ 0xffffffff
 80275a0:	2201      	moveq	r2, #1
 80275a2:	608a      	str	r2, [r1, #8]
 80275a4:	6822      	ldr	r2, [r4, #0]
 80275a6:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8027638 <_scanf_chars+0xb0>
 80275aa:	06d1      	lsls	r1, r2, #27
 80275ac:	bf5f      	itttt	pl
 80275ae:	681a      	ldrpl	r2, [r3, #0]
 80275b0:	1d11      	addpl	r1, r2, #4
 80275b2:	6019      	strpl	r1, [r3, #0]
 80275b4:	6816      	ldrpl	r6, [r2, #0]
 80275b6:	2700      	movs	r7, #0
 80275b8:	69a0      	ldr	r0, [r4, #24]
 80275ba:	b188      	cbz	r0, 80275e0 <_scanf_chars+0x58>
 80275bc:	2801      	cmp	r0, #1
 80275be:	d107      	bne.n	80275d0 <_scanf_chars+0x48>
 80275c0:	682b      	ldr	r3, [r5, #0]
 80275c2:	781a      	ldrb	r2, [r3, #0]
 80275c4:	6963      	ldr	r3, [r4, #20]
 80275c6:	5c9b      	ldrb	r3, [r3, r2]
 80275c8:	b953      	cbnz	r3, 80275e0 <_scanf_chars+0x58>
 80275ca:	2f00      	cmp	r7, #0
 80275cc:	d031      	beq.n	8027632 <_scanf_chars+0xaa>
 80275ce:	e022      	b.n	8027616 <_scanf_chars+0x8e>
 80275d0:	2802      	cmp	r0, #2
 80275d2:	d120      	bne.n	8027616 <_scanf_chars+0x8e>
 80275d4:	682b      	ldr	r3, [r5, #0]
 80275d6:	781b      	ldrb	r3, [r3, #0]
 80275d8:	f819 3003 	ldrb.w	r3, [r9, r3]
 80275dc:	071b      	lsls	r3, r3, #28
 80275de:	d41a      	bmi.n	8027616 <_scanf_chars+0x8e>
 80275e0:	6823      	ldr	r3, [r4, #0]
 80275e2:	06da      	lsls	r2, r3, #27
 80275e4:	bf5e      	ittt	pl
 80275e6:	682b      	ldrpl	r3, [r5, #0]
 80275e8:	781b      	ldrbpl	r3, [r3, #0]
 80275ea:	f806 3b01 	strbpl.w	r3, [r6], #1
 80275ee:	682a      	ldr	r2, [r5, #0]
 80275f0:	686b      	ldr	r3, [r5, #4]
 80275f2:	3201      	adds	r2, #1
 80275f4:	602a      	str	r2, [r5, #0]
 80275f6:	68a2      	ldr	r2, [r4, #8]
 80275f8:	3b01      	subs	r3, #1
 80275fa:	3a01      	subs	r2, #1
 80275fc:	606b      	str	r3, [r5, #4]
 80275fe:	3701      	adds	r7, #1
 8027600:	60a2      	str	r2, [r4, #8]
 8027602:	b142      	cbz	r2, 8027616 <_scanf_chars+0x8e>
 8027604:	2b00      	cmp	r3, #0
 8027606:	dcd7      	bgt.n	80275b8 <_scanf_chars+0x30>
 8027608:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 802760c:	4629      	mov	r1, r5
 802760e:	4640      	mov	r0, r8
 8027610:	4798      	blx	r3
 8027612:	2800      	cmp	r0, #0
 8027614:	d0d0      	beq.n	80275b8 <_scanf_chars+0x30>
 8027616:	6823      	ldr	r3, [r4, #0]
 8027618:	f013 0310 	ands.w	r3, r3, #16
 802761c:	d105      	bne.n	802762a <_scanf_chars+0xa2>
 802761e:	68e2      	ldr	r2, [r4, #12]
 8027620:	3201      	adds	r2, #1
 8027622:	60e2      	str	r2, [r4, #12]
 8027624:	69a2      	ldr	r2, [r4, #24]
 8027626:	b102      	cbz	r2, 802762a <_scanf_chars+0xa2>
 8027628:	7033      	strb	r3, [r6, #0]
 802762a:	6923      	ldr	r3, [r4, #16]
 802762c:	443b      	add	r3, r7
 802762e:	6123      	str	r3, [r4, #16]
 8027630:	2000      	movs	r0, #0
 8027632:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027636:	bf00      	nop
 8027638:	0803791d 	.word	0x0803791d

0802763c <_scanf_i>:
 802763c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027640:	4698      	mov	r8, r3
 8027642:	4b73      	ldr	r3, [pc, #460]	@ (8027810 <_scanf_i+0x1d4>)
 8027644:	460c      	mov	r4, r1
 8027646:	4682      	mov	sl, r0
 8027648:	4616      	mov	r6, r2
 802764a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 802764e:	b087      	sub	sp, #28
 8027650:	ab03      	add	r3, sp, #12
 8027652:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8027656:	4b6f      	ldr	r3, [pc, #444]	@ (8027814 <_scanf_i+0x1d8>)
 8027658:	69a1      	ldr	r1, [r4, #24]
 802765a:	4a6f      	ldr	r2, [pc, #444]	@ (8027818 <_scanf_i+0x1dc>)
 802765c:	2903      	cmp	r1, #3
 802765e:	bf08      	it	eq
 8027660:	461a      	moveq	r2, r3
 8027662:	68a3      	ldr	r3, [r4, #8]
 8027664:	9201      	str	r2, [sp, #4]
 8027666:	1e5a      	subs	r2, r3, #1
 8027668:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 802766c:	bf88      	it	hi
 802766e:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8027672:	4627      	mov	r7, r4
 8027674:	bf82      	ittt	hi
 8027676:	eb03 0905 	addhi.w	r9, r3, r5
 802767a:	f240 135d 	movwhi	r3, #349	@ 0x15d
 802767e:	60a3      	strhi	r3, [r4, #8]
 8027680:	f857 3b1c 	ldr.w	r3, [r7], #28
 8027684:	f443 6350 	orr.w	r3, r3, #3328	@ 0xd00
 8027688:	bf98      	it	ls
 802768a:	f04f 0900 	movls.w	r9, #0
 802768e:	6023      	str	r3, [r4, #0]
 8027690:	463d      	mov	r5, r7
 8027692:	f04f 0b00 	mov.w	fp, #0
 8027696:	6831      	ldr	r1, [r6, #0]
 8027698:	ab03      	add	r3, sp, #12
 802769a:	7809      	ldrb	r1, [r1, #0]
 802769c:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 80276a0:	2202      	movs	r2, #2
 80276a2:	f7d8 fd85 	bl	80001b0 <memchr>
 80276a6:	b328      	cbz	r0, 80276f4 <_scanf_i+0xb8>
 80276a8:	f1bb 0f01 	cmp.w	fp, #1
 80276ac:	d158      	bne.n	8027760 <_scanf_i+0x124>
 80276ae:	6862      	ldr	r2, [r4, #4]
 80276b0:	b92a      	cbnz	r2, 80276be <_scanf_i+0x82>
 80276b2:	6822      	ldr	r2, [r4, #0]
 80276b4:	2108      	movs	r1, #8
 80276b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80276ba:	6061      	str	r1, [r4, #4]
 80276bc:	6022      	str	r2, [r4, #0]
 80276be:	6822      	ldr	r2, [r4, #0]
 80276c0:	f422 62a0 	bic.w	r2, r2, #1280	@ 0x500
 80276c4:	6022      	str	r2, [r4, #0]
 80276c6:	68a2      	ldr	r2, [r4, #8]
 80276c8:	1e51      	subs	r1, r2, #1
 80276ca:	60a1      	str	r1, [r4, #8]
 80276cc:	b192      	cbz	r2, 80276f4 <_scanf_i+0xb8>
 80276ce:	6832      	ldr	r2, [r6, #0]
 80276d0:	1c51      	adds	r1, r2, #1
 80276d2:	6031      	str	r1, [r6, #0]
 80276d4:	7812      	ldrb	r2, [r2, #0]
 80276d6:	f805 2b01 	strb.w	r2, [r5], #1
 80276da:	6872      	ldr	r2, [r6, #4]
 80276dc:	3a01      	subs	r2, #1
 80276de:	2a00      	cmp	r2, #0
 80276e0:	6072      	str	r2, [r6, #4]
 80276e2:	dc07      	bgt.n	80276f4 <_scanf_i+0xb8>
 80276e4:	f8d4 2180 	ldr.w	r2, [r4, #384]	@ 0x180
 80276e8:	4631      	mov	r1, r6
 80276ea:	4650      	mov	r0, sl
 80276ec:	4790      	blx	r2
 80276ee:	2800      	cmp	r0, #0
 80276f0:	f040 8083 	bne.w	80277fa <_scanf_i+0x1be>
 80276f4:	f10b 0b01 	add.w	fp, fp, #1
 80276f8:	f1bb 0f03 	cmp.w	fp, #3
 80276fc:	d1cb      	bne.n	8027696 <_scanf_i+0x5a>
 80276fe:	6861      	ldr	r1, [r4, #4]
 8027700:	b909      	cbnz	r1, 8027706 <_scanf_i+0xca>
 8027702:	210a      	movs	r1, #10
 8027704:	6061      	str	r1, [r4, #4]
 8027706:	4b45      	ldr	r3, [pc, #276]	@ (802781c <_scanf_i+0x1e0>)
 8027708:	6960      	ldr	r0, [r4, #20]
 802770a:	1a59      	subs	r1, r3, r1
 802770c:	f000 f98f 	bl	8027a2e <__sccl>
 8027710:	f04f 0b00 	mov.w	fp, #0
 8027714:	68a3      	ldr	r3, [r4, #8]
 8027716:	6822      	ldr	r2, [r4, #0]
 8027718:	2b00      	cmp	r3, #0
 802771a:	d03d      	beq.n	8027798 <_scanf_i+0x15c>
 802771c:	6831      	ldr	r1, [r6, #0]
 802771e:	6960      	ldr	r0, [r4, #20]
 8027720:	f891 c000 	ldrb.w	ip, [r1]
 8027724:	f810 000c 	ldrb.w	r0, [r0, ip]
 8027728:	2800      	cmp	r0, #0
 802772a:	d035      	beq.n	8027798 <_scanf_i+0x15c>
 802772c:	f1bc 0f30 	cmp.w	ip, #48	@ 0x30
 8027730:	d124      	bne.n	802777c <_scanf_i+0x140>
 8027732:	0510      	lsls	r0, r2, #20
 8027734:	d522      	bpl.n	802777c <_scanf_i+0x140>
 8027736:	f10b 0b01 	add.w	fp, fp, #1
 802773a:	f1b9 0f00 	cmp.w	r9, #0
 802773e:	d003      	beq.n	8027748 <_scanf_i+0x10c>
 8027740:	3301      	adds	r3, #1
 8027742:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 8027746:	60a3      	str	r3, [r4, #8]
 8027748:	6873      	ldr	r3, [r6, #4]
 802774a:	3b01      	subs	r3, #1
 802774c:	2b00      	cmp	r3, #0
 802774e:	6073      	str	r3, [r6, #4]
 8027750:	dd1b      	ble.n	802778a <_scanf_i+0x14e>
 8027752:	6833      	ldr	r3, [r6, #0]
 8027754:	3301      	adds	r3, #1
 8027756:	6033      	str	r3, [r6, #0]
 8027758:	68a3      	ldr	r3, [r4, #8]
 802775a:	3b01      	subs	r3, #1
 802775c:	60a3      	str	r3, [r4, #8]
 802775e:	e7d9      	b.n	8027714 <_scanf_i+0xd8>
 8027760:	f1bb 0f02 	cmp.w	fp, #2
 8027764:	d1af      	bne.n	80276c6 <_scanf_i+0x8a>
 8027766:	6822      	ldr	r2, [r4, #0]
 8027768:	f402 61c0 	and.w	r1, r2, #1536	@ 0x600
 802776c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8027770:	d1c5      	bne.n	80276fe <_scanf_i+0xc2>
 8027772:	2110      	movs	r1, #16
 8027774:	6061      	str	r1, [r4, #4]
 8027776:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 802777a:	e7a3      	b.n	80276c4 <_scanf_i+0x88>
 802777c:	f422 6210 	bic.w	r2, r2, #2304	@ 0x900
 8027780:	6022      	str	r2, [r4, #0]
 8027782:	780b      	ldrb	r3, [r1, #0]
 8027784:	f805 3b01 	strb.w	r3, [r5], #1
 8027788:	e7de      	b.n	8027748 <_scanf_i+0x10c>
 802778a:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 802778e:	4631      	mov	r1, r6
 8027790:	4650      	mov	r0, sl
 8027792:	4798      	blx	r3
 8027794:	2800      	cmp	r0, #0
 8027796:	d0df      	beq.n	8027758 <_scanf_i+0x11c>
 8027798:	6823      	ldr	r3, [r4, #0]
 802779a:	05db      	lsls	r3, r3, #23
 802779c:	d50d      	bpl.n	80277ba <_scanf_i+0x17e>
 802779e:	42bd      	cmp	r5, r7
 80277a0:	d909      	bls.n	80277b6 <_scanf_i+0x17a>
 80277a2:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 80277a6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80277aa:	4632      	mov	r2, r6
 80277ac:	4650      	mov	r0, sl
 80277ae:	4798      	blx	r3
 80277b0:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
 80277b4:	464d      	mov	r5, r9
 80277b6:	42bd      	cmp	r5, r7
 80277b8:	d027      	beq.n	802780a <_scanf_i+0x1ce>
 80277ba:	6822      	ldr	r2, [r4, #0]
 80277bc:	f012 0210 	ands.w	r2, r2, #16
 80277c0:	d112      	bne.n	80277e8 <_scanf_i+0x1ac>
 80277c2:	702a      	strb	r2, [r5, #0]
 80277c4:	6863      	ldr	r3, [r4, #4]
 80277c6:	9e01      	ldr	r6, [sp, #4]
 80277c8:	4639      	mov	r1, r7
 80277ca:	4650      	mov	r0, sl
 80277cc:	47b0      	blx	r6
 80277ce:	f8d8 3000 	ldr.w	r3, [r8]
 80277d2:	6821      	ldr	r1, [r4, #0]
 80277d4:	1d1a      	adds	r2, r3, #4
 80277d6:	f8c8 2000 	str.w	r2, [r8]
 80277da:	068e      	lsls	r6, r1, #26
 80277dc:	681b      	ldr	r3, [r3, #0]
 80277de:	d50f      	bpl.n	8027800 <_scanf_i+0x1c4>
 80277e0:	6018      	str	r0, [r3, #0]
 80277e2:	68e3      	ldr	r3, [r4, #12]
 80277e4:	3301      	adds	r3, #1
 80277e6:	60e3      	str	r3, [r4, #12]
 80277e8:	6923      	ldr	r3, [r4, #16]
 80277ea:	1bed      	subs	r5, r5, r7
 80277ec:	445d      	add	r5, fp
 80277ee:	442b      	add	r3, r5
 80277f0:	6123      	str	r3, [r4, #16]
 80277f2:	2000      	movs	r0, #0
 80277f4:	b007      	add	sp, #28
 80277f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277fa:	f04f 0b00 	mov.w	fp, #0
 80277fe:	e7cb      	b.n	8027798 <_scanf_i+0x15c>
 8027800:	07ca      	lsls	r2, r1, #31
 8027802:	bf4c      	ite	mi
 8027804:	8018      	strhmi	r0, [r3, #0]
 8027806:	6018      	strpl	r0, [r3, #0]
 8027808:	e7eb      	b.n	80277e2 <_scanf_i+0x1a6>
 802780a:	2001      	movs	r0, #1
 802780c:	e7f2      	b.n	80277f4 <_scanf_i+0x1b8>
 802780e:	bf00      	nop
 8027810:	08029584 	.word	0x08029584
 8027814:	08026c99 	.word	0x08026c99
 8027818:	08023459 	.word	0x08023459
 802781c:	0802b253 	.word	0x0802b253

08027820 <__sflush_r>:
 8027820:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8027824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027828:	0716      	lsls	r6, r2, #28
 802782a:	4605      	mov	r5, r0
 802782c:	460c      	mov	r4, r1
 802782e:	d451      	bmi.n	80278d4 <__sflush_r+0xb4>
 8027830:	684b      	ldr	r3, [r1, #4]
 8027832:	2b00      	cmp	r3, #0
 8027834:	dc02      	bgt.n	802783c <__sflush_r+0x1c>
 8027836:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8027838:	2b00      	cmp	r3, #0
 802783a:	dd49      	ble.n	80278d0 <__sflush_r+0xb0>
 802783c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802783e:	2e00      	cmp	r6, #0
 8027840:	d046      	beq.n	80278d0 <__sflush_r+0xb0>
 8027842:	2300      	movs	r3, #0
 8027844:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8027848:	682f      	ldr	r7, [r5, #0]
 802784a:	602b      	str	r3, [r5, #0]
 802784c:	d031      	beq.n	80278b2 <__sflush_r+0x92>
 802784e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8027850:	89a3      	ldrh	r3, [r4, #12]
 8027852:	0759      	lsls	r1, r3, #29
 8027854:	d505      	bpl.n	8027862 <__sflush_r+0x42>
 8027856:	6863      	ldr	r3, [r4, #4]
 8027858:	1ad2      	subs	r2, r2, r3
 802785a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802785c:	b10b      	cbz	r3, 8027862 <__sflush_r+0x42>
 802785e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8027860:	1ad2      	subs	r2, r2, r3
 8027862:	2300      	movs	r3, #0
 8027864:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8027866:	6a21      	ldr	r1, [r4, #32]
 8027868:	4628      	mov	r0, r5
 802786a:	47b0      	blx	r6
 802786c:	1c42      	adds	r2, r0, #1
 802786e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027872:	d106      	bne.n	8027882 <__sflush_r+0x62>
 8027874:	6829      	ldr	r1, [r5, #0]
 8027876:	291d      	cmp	r1, #29
 8027878:	d846      	bhi.n	8027908 <__sflush_r+0xe8>
 802787a:	4a29      	ldr	r2, [pc, #164]	@ (8027920 <__sflush_r+0x100>)
 802787c:	40ca      	lsrs	r2, r1
 802787e:	07d6      	lsls	r6, r2, #31
 8027880:	d542      	bpl.n	8027908 <__sflush_r+0xe8>
 8027882:	2200      	movs	r2, #0
 8027884:	6062      	str	r2, [r4, #4]
 8027886:	04d9      	lsls	r1, r3, #19
 8027888:	6922      	ldr	r2, [r4, #16]
 802788a:	6022      	str	r2, [r4, #0]
 802788c:	d504      	bpl.n	8027898 <__sflush_r+0x78>
 802788e:	1c42      	adds	r2, r0, #1
 8027890:	d101      	bne.n	8027896 <__sflush_r+0x76>
 8027892:	682b      	ldr	r3, [r5, #0]
 8027894:	b903      	cbnz	r3, 8027898 <__sflush_r+0x78>
 8027896:	6560      	str	r0, [r4, #84]	@ 0x54
 8027898:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802789a:	602f      	str	r7, [r5, #0]
 802789c:	b1c1      	cbz	r1, 80278d0 <__sflush_r+0xb0>
 802789e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80278a2:	4299      	cmp	r1, r3
 80278a4:	d002      	beq.n	80278ac <__sflush_r+0x8c>
 80278a6:	4628      	mov	r0, r5
 80278a8:	f7fd fe7a 	bl	80255a0 <_free_r>
 80278ac:	2300      	movs	r3, #0
 80278ae:	6363      	str	r3, [r4, #52]	@ 0x34
 80278b0:	e00e      	b.n	80278d0 <__sflush_r+0xb0>
 80278b2:	6a21      	ldr	r1, [r4, #32]
 80278b4:	2301      	movs	r3, #1
 80278b6:	4628      	mov	r0, r5
 80278b8:	47b0      	blx	r6
 80278ba:	4602      	mov	r2, r0
 80278bc:	1c50      	adds	r0, r2, #1
 80278be:	d1c7      	bne.n	8027850 <__sflush_r+0x30>
 80278c0:	682b      	ldr	r3, [r5, #0]
 80278c2:	2b00      	cmp	r3, #0
 80278c4:	d0c4      	beq.n	8027850 <__sflush_r+0x30>
 80278c6:	2b1d      	cmp	r3, #29
 80278c8:	d001      	beq.n	80278ce <__sflush_r+0xae>
 80278ca:	2b16      	cmp	r3, #22
 80278cc:	d11a      	bne.n	8027904 <__sflush_r+0xe4>
 80278ce:	602f      	str	r7, [r5, #0]
 80278d0:	2000      	movs	r0, #0
 80278d2:	e01e      	b.n	8027912 <__sflush_r+0xf2>
 80278d4:	690f      	ldr	r7, [r1, #16]
 80278d6:	2f00      	cmp	r7, #0
 80278d8:	d0fa      	beq.n	80278d0 <__sflush_r+0xb0>
 80278da:	0793      	lsls	r3, r2, #30
 80278dc:	680e      	ldr	r6, [r1, #0]
 80278de:	bf08      	it	eq
 80278e0:	694b      	ldreq	r3, [r1, #20]
 80278e2:	600f      	str	r7, [r1, #0]
 80278e4:	bf18      	it	ne
 80278e6:	2300      	movne	r3, #0
 80278e8:	eba6 0807 	sub.w	r8, r6, r7
 80278ec:	608b      	str	r3, [r1, #8]
 80278ee:	f1b8 0f00 	cmp.w	r8, #0
 80278f2:	dded      	ble.n	80278d0 <__sflush_r+0xb0>
 80278f4:	6a21      	ldr	r1, [r4, #32]
 80278f6:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80278f8:	4643      	mov	r3, r8
 80278fa:	463a      	mov	r2, r7
 80278fc:	4628      	mov	r0, r5
 80278fe:	47b0      	blx	r6
 8027900:	2800      	cmp	r0, #0
 8027902:	dc08      	bgt.n	8027916 <__sflush_r+0xf6>
 8027904:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027908:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802790c:	81a3      	strh	r3, [r4, #12]
 802790e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8027912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027916:	4407      	add	r7, r0
 8027918:	eba8 0800 	sub.w	r8, r8, r0
 802791c:	e7e7      	b.n	80278ee <__sflush_r+0xce>
 802791e:	bf00      	nop
 8027920:	20400001 	.word	0x20400001

08027924 <_fflush_r>:
 8027924:	b538      	push	{r3, r4, r5, lr}
 8027926:	690b      	ldr	r3, [r1, #16]
 8027928:	4605      	mov	r5, r0
 802792a:	460c      	mov	r4, r1
 802792c:	b913      	cbnz	r3, 8027934 <_fflush_r+0x10>
 802792e:	2500      	movs	r5, #0
 8027930:	4628      	mov	r0, r5
 8027932:	bd38      	pop	{r3, r4, r5, pc}
 8027934:	b118      	cbz	r0, 802793e <_fflush_r+0x1a>
 8027936:	6a03      	ldr	r3, [r0, #32]
 8027938:	b90b      	cbnz	r3, 802793e <_fflush_r+0x1a>
 802793a:	f7fc fc89 	bl	8024250 <__sinit>
 802793e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027942:	2b00      	cmp	r3, #0
 8027944:	d0f3      	beq.n	802792e <_fflush_r+0xa>
 8027946:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8027948:	07d0      	lsls	r0, r2, #31
 802794a:	d404      	bmi.n	8027956 <_fflush_r+0x32>
 802794c:	0599      	lsls	r1, r3, #22
 802794e:	d402      	bmi.n	8027956 <_fflush_r+0x32>
 8027950:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8027952:	f7fc ff98 	bl	8024886 <__retarget_lock_acquire_recursive>
 8027956:	4628      	mov	r0, r5
 8027958:	4621      	mov	r1, r4
 802795a:	f7ff ff61 	bl	8027820 <__sflush_r>
 802795e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8027960:	07da      	lsls	r2, r3, #31
 8027962:	4605      	mov	r5, r0
 8027964:	d4e4      	bmi.n	8027930 <_fflush_r+0xc>
 8027966:	89a3      	ldrh	r3, [r4, #12]
 8027968:	059b      	lsls	r3, r3, #22
 802796a:	d4e1      	bmi.n	8027930 <_fflush_r+0xc>
 802796c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802796e:	f7fc ff8b 	bl	8024888 <__retarget_lock_release_recursive>
 8027972:	e7dd      	b.n	8027930 <_fflush_r+0xc>

08027974 <__swhatbuf_r>:
 8027974:	b570      	push	{r4, r5, r6, lr}
 8027976:	460c      	mov	r4, r1
 8027978:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802797c:	2900      	cmp	r1, #0
 802797e:	b096      	sub	sp, #88	@ 0x58
 8027980:	4615      	mov	r5, r2
 8027982:	461e      	mov	r6, r3
 8027984:	da0a      	bge.n	802799c <__swhatbuf_r+0x28>
 8027986:	89a1      	ldrh	r1, [r4, #12]
 8027988:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 802798c:	d113      	bne.n	80279b6 <__swhatbuf_r+0x42>
 802798e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8027992:	2000      	movs	r0, #0
 8027994:	6031      	str	r1, [r6, #0]
 8027996:	602a      	str	r2, [r5, #0]
 8027998:	b016      	add	sp, #88	@ 0x58
 802799a:	bd70      	pop	{r4, r5, r6, pc}
 802799c:	466a      	mov	r2, sp
 802799e:	f000 f8b9 	bl	8027b14 <_fstat_r>
 80279a2:	2800      	cmp	r0, #0
 80279a4:	dbef      	blt.n	8027986 <__swhatbuf_r+0x12>
 80279a6:	9901      	ldr	r1, [sp, #4]
 80279a8:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80279ac:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80279b0:	4259      	negs	r1, r3
 80279b2:	4159      	adcs	r1, r3
 80279b4:	e7eb      	b.n	802798e <__swhatbuf_r+0x1a>
 80279b6:	2100      	movs	r1, #0
 80279b8:	2240      	movs	r2, #64	@ 0x40
 80279ba:	e7ea      	b.n	8027992 <__swhatbuf_r+0x1e>

080279bc <__smakebuf_r>:
 80279bc:	898b      	ldrh	r3, [r1, #12]
 80279be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80279c0:	079e      	lsls	r6, r3, #30
 80279c2:	4605      	mov	r5, r0
 80279c4:	460c      	mov	r4, r1
 80279c6:	d507      	bpl.n	80279d8 <__smakebuf_r+0x1c>
 80279c8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80279cc:	6023      	str	r3, [r4, #0]
 80279ce:	6123      	str	r3, [r4, #16]
 80279d0:	2301      	movs	r3, #1
 80279d2:	6163      	str	r3, [r4, #20]
 80279d4:	b002      	add	sp, #8
 80279d6:	bd70      	pop	{r4, r5, r6, pc}
 80279d8:	ab01      	add	r3, sp, #4
 80279da:	466a      	mov	r2, sp
 80279dc:	f7ff ffca 	bl	8027974 <__swhatbuf_r>
 80279e0:	9e00      	ldr	r6, [sp, #0]
 80279e2:	4628      	mov	r0, r5
 80279e4:	4631      	mov	r1, r6
 80279e6:	f7fb fc3d 	bl	8023264 <_malloc_r>
 80279ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80279ee:	b938      	cbnz	r0, 8027a00 <__smakebuf_r+0x44>
 80279f0:	059a      	lsls	r2, r3, #22
 80279f2:	d4ef      	bmi.n	80279d4 <__smakebuf_r+0x18>
 80279f4:	f023 0303 	bic.w	r3, r3, #3
 80279f8:	f043 0302 	orr.w	r3, r3, #2
 80279fc:	81a3      	strh	r3, [r4, #12]
 80279fe:	e7e3      	b.n	80279c8 <__smakebuf_r+0xc>
 8027a00:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8027a04:	81a3      	strh	r3, [r4, #12]
 8027a06:	9b01      	ldr	r3, [sp, #4]
 8027a08:	6020      	str	r0, [r4, #0]
 8027a0a:	e9c4 0604 	strd	r0, r6, [r4, #16]
 8027a0e:	2b00      	cmp	r3, #0
 8027a10:	d0e0      	beq.n	80279d4 <__smakebuf_r+0x18>
 8027a12:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027a16:	4628      	mov	r0, r5
 8027a18:	f000 f88e 	bl	8027b38 <_isatty_r>
 8027a1c:	2800      	cmp	r0, #0
 8027a1e:	d0d9      	beq.n	80279d4 <__smakebuf_r+0x18>
 8027a20:	89a3      	ldrh	r3, [r4, #12]
 8027a22:	f023 0303 	bic.w	r3, r3, #3
 8027a26:	f043 0301 	orr.w	r3, r3, #1
 8027a2a:	81a3      	strh	r3, [r4, #12]
 8027a2c:	e7d2      	b.n	80279d4 <__smakebuf_r+0x18>

08027a2e <__sccl>:
 8027a2e:	b570      	push	{r4, r5, r6, lr}
 8027a30:	780b      	ldrb	r3, [r1, #0]
 8027a32:	4604      	mov	r4, r0
 8027a34:	2b5e      	cmp	r3, #94	@ 0x5e
 8027a36:	bf0b      	itete	eq
 8027a38:	784b      	ldrbeq	r3, [r1, #1]
 8027a3a:	1c4a      	addne	r2, r1, #1
 8027a3c:	1c8a      	addeq	r2, r1, #2
 8027a3e:	2100      	movne	r1, #0
 8027a40:	bf08      	it	eq
 8027a42:	2101      	moveq	r1, #1
 8027a44:	3801      	subs	r0, #1
 8027a46:	f104 05ff 	add.w	r5, r4, #255	@ 0xff
 8027a4a:	f800 1f01 	strb.w	r1, [r0, #1]!
 8027a4e:	42a8      	cmp	r0, r5
 8027a50:	d1fb      	bne.n	8027a4a <__sccl+0x1c>
 8027a52:	b90b      	cbnz	r3, 8027a58 <__sccl+0x2a>
 8027a54:	1e50      	subs	r0, r2, #1
 8027a56:	bd70      	pop	{r4, r5, r6, pc}
 8027a58:	f081 0101 	eor.w	r1, r1, #1
 8027a5c:	54e1      	strb	r1, [r4, r3]
 8027a5e:	4610      	mov	r0, r2
 8027a60:	4602      	mov	r2, r0
 8027a62:	f812 5b01 	ldrb.w	r5, [r2], #1
 8027a66:	2d2d      	cmp	r5, #45	@ 0x2d
 8027a68:	d005      	beq.n	8027a76 <__sccl+0x48>
 8027a6a:	2d5d      	cmp	r5, #93	@ 0x5d
 8027a6c:	d016      	beq.n	8027a9c <__sccl+0x6e>
 8027a6e:	2d00      	cmp	r5, #0
 8027a70:	d0f1      	beq.n	8027a56 <__sccl+0x28>
 8027a72:	462b      	mov	r3, r5
 8027a74:	e7f2      	b.n	8027a5c <__sccl+0x2e>
 8027a76:	7846      	ldrb	r6, [r0, #1]
 8027a78:	2e5d      	cmp	r6, #93	@ 0x5d
 8027a7a:	d0fa      	beq.n	8027a72 <__sccl+0x44>
 8027a7c:	42b3      	cmp	r3, r6
 8027a7e:	dcf8      	bgt.n	8027a72 <__sccl+0x44>
 8027a80:	3002      	adds	r0, #2
 8027a82:	461a      	mov	r2, r3
 8027a84:	3201      	adds	r2, #1
 8027a86:	4296      	cmp	r6, r2
 8027a88:	54a1      	strb	r1, [r4, r2]
 8027a8a:	dcfb      	bgt.n	8027a84 <__sccl+0x56>
 8027a8c:	1af2      	subs	r2, r6, r3
 8027a8e:	3a01      	subs	r2, #1
 8027a90:	42b3      	cmp	r3, r6
 8027a92:	bfa8      	it	ge
 8027a94:	2200      	movge	r2, #0
 8027a96:	3301      	adds	r3, #1
 8027a98:	4413      	add	r3, r2
 8027a9a:	e7e1      	b.n	8027a60 <__sccl+0x32>
 8027a9c:	4610      	mov	r0, r2
 8027a9e:	e7da      	b.n	8027a56 <__sccl+0x28>

08027aa0 <__submore>:
 8027aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027aa4:	460c      	mov	r4, r1
 8027aa6:	6b49      	ldr	r1, [r1, #52]	@ 0x34
 8027aa8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8027aac:	4299      	cmp	r1, r3
 8027aae:	d11d      	bne.n	8027aec <__submore+0x4c>
 8027ab0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8027ab4:	f7fb fbd6 	bl	8023264 <_malloc_r>
 8027ab8:	b918      	cbnz	r0, 8027ac2 <__submore+0x22>
 8027aba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8027abe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ac2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8027ac6:	63a3      	str	r3, [r4, #56]	@ 0x38
 8027ac8:	f894 3046 	ldrb.w	r3, [r4, #70]	@ 0x46
 8027acc:	6360      	str	r0, [r4, #52]	@ 0x34
 8027ace:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
 8027ad2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8027ad6:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
 8027ada:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8027ade:	f880 33fd 	strb.w	r3, [r0, #1021]	@ 0x3fd
 8027ae2:	f200 30fd 	addw	r0, r0, #1021	@ 0x3fd
 8027ae6:	6020      	str	r0, [r4, #0]
 8027ae8:	2000      	movs	r0, #0
 8027aea:	e7e8      	b.n	8027abe <__submore+0x1e>
 8027aec:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
 8027aee:	0077      	lsls	r7, r6, #1
 8027af0:	463a      	mov	r2, r7
 8027af2:	f000 fb9a 	bl	802822a <_realloc_r>
 8027af6:	4605      	mov	r5, r0
 8027af8:	2800      	cmp	r0, #0
 8027afa:	d0de      	beq.n	8027aba <__submore+0x1a>
 8027afc:	eb00 0806 	add.w	r8, r0, r6
 8027b00:	4601      	mov	r1, r0
 8027b02:	4632      	mov	r2, r6
 8027b04:	4640      	mov	r0, r8
 8027b06:	f7fc fec0 	bl	802488a <memcpy>
 8027b0a:	e9c4 570d 	strd	r5, r7, [r4, #52]	@ 0x34
 8027b0e:	f8c4 8000 	str.w	r8, [r4]
 8027b12:	e7e9      	b.n	8027ae8 <__submore+0x48>

08027b14 <_fstat_r>:
 8027b14:	b538      	push	{r3, r4, r5, lr}
 8027b16:	4d07      	ldr	r5, [pc, #28]	@ (8027b34 <_fstat_r+0x20>)
 8027b18:	2300      	movs	r3, #0
 8027b1a:	4604      	mov	r4, r0
 8027b1c:	4608      	mov	r0, r1
 8027b1e:	4611      	mov	r1, r2
 8027b20:	602b      	str	r3, [r5, #0]
 8027b22:	f001 fc91 	bl	8029448 <_fstat>
 8027b26:	1c43      	adds	r3, r0, #1
 8027b28:	d102      	bne.n	8027b30 <_fstat_r+0x1c>
 8027b2a:	682b      	ldr	r3, [r5, #0]
 8027b2c:	b103      	cbz	r3, 8027b30 <_fstat_r+0x1c>
 8027b2e:	6023      	str	r3, [r4, #0]
 8027b30:	bd38      	pop	{r3, r4, r5, pc}
 8027b32:	bf00      	nop
 8027b34:	2000d6c0 	.word	0x2000d6c0

08027b38 <_isatty_r>:
 8027b38:	b538      	push	{r3, r4, r5, lr}
 8027b3a:	4d06      	ldr	r5, [pc, #24]	@ (8027b54 <_isatty_r+0x1c>)
 8027b3c:	2300      	movs	r3, #0
 8027b3e:	4604      	mov	r4, r0
 8027b40:	4608      	mov	r0, r1
 8027b42:	602b      	str	r3, [r5, #0]
 8027b44:	f001 fc90 	bl	8029468 <_isatty>
 8027b48:	1c43      	adds	r3, r0, #1
 8027b4a:	d102      	bne.n	8027b52 <_isatty_r+0x1a>
 8027b4c:	682b      	ldr	r3, [r5, #0]
 8027b4e:	b103      	cbz	r3, 8027b52 <_isatty_r+0x1a>
 8027b50:	6023      	str	r3, [r4, #0]
 8027b52:	bd38      	pop	{r3, r4, r5, pc}
 8027b54:	2000d6c0 	.word	0x2000d6c0

08027b58 <nan>:
 8027b58:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8027b60 <nan+0x8>
 8027b5c:	4770      	bx	lr
 8027b5e:	bf00      	nop
 8027b60:	00000000 	.word	0x00000000
 8027b64:	7ff80000 	.word	0x7ff80000

08027b68 <_calloc_r>:
 8027b68:	b570      	push	{r4, r5, r6, lr}
 8027b6a:	fba1 5402 	umull	r5, r4, r1, r2
 8027b6e:	b934      	cbnz	r4, 8027b7e <_calloc_r+0x16>
 8027b70:	4629      	mov	r1, r5
 8027b72:	f7fb fb77 	bl	8023264 <_malloc_r>
 8027b76:	4606      	mov	r6, r0
 8027b78:	b928      	cbnz	r0, 8027b86 <_calloc_r+0x1e>
 8027b7a:	4630      	mov	r0, r6
 8027b7c:	bd70      	pop	{r4, r5, r6, pc}
 8027b7e:	220c      	movs	r2, #12
 8027b80:	6002      	str	r2, [r0, #0]
 8027b82:	2600      	movs	r6, #0
 8027b84:	e7f9      	b.n	8027b7a <_calloc_r+0x12>
 8027b86:	462a      	mov	r2, r5
 8027b88:	4621      	mov	r1, r4
 8027b8a:	f7fc fd8c 	bl	80246a6 <memset>
 8027b8e:	e7f4      	b.n	8027b7a <_calloc_r+0x12>

08027b90 <rshift>:
 8027b90:	6903      	ldr	r3, [r0, #16]
 8027b92:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8027b96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8027b9a:	ea4f 1261 	mov.w	r2, r1, asr #5
 8027b9e:	f100 0414 	add.w	r4, r0, #20
 8027ba2:	dd45      	ble.n	8027c30 <rshift+0xa0>
 8027ba4:	f011 011f 	ands.w	r1, r1, #31
 8027ba8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8027bac:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8027bb0:	d10c      	bne.n	8027bcc <rshift+0x3c>
 8027bb2:	f100 0710 	add.w	r7, r0, #16
 8027bb6:	4629      	mov	r1, r5
 8027bb8:	42b1      	cmp	r1, r6
 8027bba:	d334      	bcc.n	8027c26 <rshift+0x96>
 8027bbc:	1a9b      	subs	r3, r3, r2
 8027bbe:	009b      	lsls	r3, r3, #2
 8027bc0:	1eea      	subs	r2, r5, #3
 8027bc2:	4296      	cmp	r6, r2
 8027bc4:	bf38      	it	cc
 8027bc6:	2300      	movcc	r3, #0
 8027bc8:	4423      	add	r3, r4
 8027bca:	e015      	b.n	8027bf8 <rshift+0x68>
 8027bcc:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8027bd0:	f1c1 0820 	rsb	r8, r1, #32
 8027bd4:	40cf      	lsrs	r7, r1
 8027bd6:	f105 0e04 	add.w	lr, r5, #4
 8027bda:	46a1      	mov	r9, r4
 8027bdc:	4576      	cmp	r6, lr
 8027bde:	46f4      	mov	ip, lr
 8027be0:	d815      	bhi.n	8027c0e <rshift+0x7e>
 8027be2:	1a9a      	subs	r2, r3, r2
 8027be4:	0092      	lsls	r2, r2, #2
 8027be6:	3a04      	subs	r2, #4
 8027be8:	3501      	adds	r5, #1
 8027bea:	42ae      	cmp	r6, r5
 8027bec:	bf38      	it	cc
 8027bee:	2200      	movcc	r2, #0
 8027bf0:	18a3      	adds	r3, r4, r2
 8027bf2:	50a7      	str	r7, [r4, r2]
 8027bf4:	b107      	cbz	r7, 8027bf8 <rshift+0x68>
 8027bf6:	3304      	adds	r3, #4
 8027bf8:	1b1a      	subs	r2, r3, r4
 8027bfa:	42a3      	cmp	r3, r4
 8027bfc:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8027c00:	bf08      	it	eq
 8027c02:	2300      	moveq	r3, #0
 8027c04:	6102      	str	r2, [r0, #16]
 8027c06:	bf08      	it	eq
 8027c08:	6143      	streq	r3, [r0, #20]
 8027c0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8027c0e:	f8dc c000 	ldr.w	ip, [ip]
 8027c12:	fa0c fc08 	lsl.w	ip, ip, r8
 8027c16:	ea4c 0707 	orr.w	r7, ip, r7
 8027c1a:	f849 7b04 	str.w	r7, [r9], #4
 8027c1e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8027c22:	40cf      	lsrs	r7, r1
 8027c24:	e7da      	b.n	8027bdc <rshift+0x4c>
 8027c26:	f851 cb04 	ldr.w	ip, [r1], #4
 8027c2a:	f847 cf04 	str.w	ip, [r7, #4]!
 8027c2e:	e7c3      	b.n	8027bb8 <rshift+0x28>
 8027c30:	4623      	mov	r3, r4
 8027c32:	e7e1      	b.n	8027bf8 <rshift+0x68>

08027c34 <__hexdig_fun>:
 8027c34:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8027c38:	2b09      	cmp	r3, #9
 8027c3a:	d802      	bhi.n	8027c42 <__hexdig_fun+0xe>
 8027c3c:	3820      	subs	r0, #32
 8027c3e:	b2c0      	uxtb	r0, r0
 8027c40:	4770      	bx	lr
 8027c42:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8027c46:	2b05      	cmp	r3, #5
 8027c48:	d801      	bhi.n	8027c4e <__hexdig_fun+0x1a>
 8027c4a:	3847      	subs	r0, #71	@ 0x47
 8027c4c:	e7f7      	b.n	8027c3e <__hexdig_fun+0xa>
 8027c4e:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8027c52:	2b05      	cmp	r3, #5
 8027c54:	d801      	bhi.n	8027c5a <__hexdig_fun+0x26>
 8027c56:	3827      	subs	r0, #39	@ 0x27
 8027c58:	e7f1      	b.n	8027c3e <__hexdig_fun+0xa>
 8027c5a:	2000      	movs	r0, #0
 8027c5c:	4770      	bx	lr
	...

08027c60 <__gethex>:
 8027c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c64:	b085      	sub	sp, #20
 8027c66:	468a      	mov	sl, r1
 8027c68:	9302      	str	r3, [sp, #8]
 8027c6a:	680b      	ldr	r3, [r1, #0]
 8027c6c:	9001      	str	r0, [sp, #4]
 8027c6e:	4690      	mov	r8, r2
 8027c70:	1c9c      	adds	r4, r3, #2
 8027c72:	46a1      	mov	r9, r4
 8027c74:	f814 0b01 	ldrb.w	r0, [r4], #1
 8027c78:	2830      	cmp	r0, #48	@ 0x30
 8027c7a:	d0fa      	beq.n	8027c72 <__gethex+0x12>
 8027c7c:	eba9 0303 	sub.w	r3, r9, r3
 8027c80:	f1a3 0b02 	sub.w	fp, r3, #2
 8027c84:	f7ff ffd6 	bl	8027c34 <__hexdig_fun>
 8027c88:	4605      	mov	r5, r0
 8027c8a:	2800      	cmp	r0, #0
 8027c8c:	d168      	bne.n	8027d60 <__gethex+0x100>
 8027c8e:	49a0      	ldr	r1, [pc, #640]	@ (8027f10 <__gethex+0x2b0>)
 8027c90:	2201      	movs	r2, #1
 8027c92:	4648      	mov	r0, r9
 8027c94:	f7fc fd1c 	bl	80246d0 <strncmp>
 8027c98:	4607      	mov	r7, r0
 8027c9a:	2800      	cmp	r0, #0
 8027c9c:	d167      	bne.n	8027d6e <__gethex+0x10e>
 8027c9e:	f899 0001 	ldrb.w	r0, [r9, #1]
 8027ca2:	4626      	mov	r6, r4
 8027ca4:	f7ff ffc6 	bl	8027c34 <__hexdig_fun>
 8027ca8:	2800      	cmp	r0, #0
 8027caa:	d062      	beq.n	8027d72 <__gethex+0x112>
 8027cac:	4623      	mov	r3, r4
 8027cae:	7818      	ldrb	r0, [r3, #0]
 8027cb0:	2830      	cmp	r0, #48	@ 0x30
 8027cb2:	4699      	mov	r9, r3
 8027cb4:	f103 0301 	add.w	r3, r3, #1
 8027cb8:	d0f9      	beq.n	8027cae <__gethex+0x4e>
 8027cba:	f7ff ffbb 	bl	8027c34 <__hexdig_fun>
 8027cbe:	fab0 f580 	clz	r5, r0
 8027cc2:	096d      	lsrs	r5, r5, #5
 8027cc4:	f04f 0b01 	mov.w	fp, #1
 8027cc8:	464a      	mov	r2, r9
 8027cca:	4616      	mov	r6, r2
 8027ccc:	3201      	adds	r2, #1
 8027cce:	7830      	ldrb	r0, [r6, #0]
 8027cd0:	f7ff ffb0 	bl	8027c34 <__hexdig_fun>
 8027cd4:	2800      	cmp	r0, #0
 8027cd6:	d1f8      	bne.n	8027cca <__gethex+0x6a>
 8027cd8:	498d      	ldr	r1, [pc, #564]	@ (8027f10 <__gethex+0x2b0>)
 8027cda:	2201      	movs	r2, #1
 8027cdc:	4630      	mov	r0, r6
 8027cde:	f7fc fcf7 	bl	80246d0 <strncmp>
 8027ce2:	2800      	cmp	r0, #0
 8027ce4:	d13f      	bne.n	8027d66 <__gethex+0x106>
 8027ce6:	b944      	cbnz	r4, 8027cfa <__gethex+0x9a>
 8027ce8:	1c74      	adds	r4, r6, #1
 8027cea:	4622      	mov	r2, r4
 8027cec:	4616      	mov	r6, r2
 8027cee:	3201      	adds	r2, #1
 8027cf0:	7830      	ldrb	r0, [r6, #0]
 8027cf2:	f7ff ff9f 	bl	8027c34 <__hexdig_fun>
 8027cf6:	2800      	cmp	r0, #0
 8027cf8:	d1f8      	bne.n	8027cec <__gethex+0x8c>
 8027cfa:	1ba4      	subs	r4, r4, r6
 8027cfc:	00a7      	lsls	r7, r4, #2
 8027cfe:	7833      	ldrb	r3, [r6, #0]
 8027d00:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8027d04:	2b50      	cmp	r3, #80	@ 0x50
 8027d06:	d13e      	bne.n	8027d86 <__gethex+0x126>
 8027d08:	7873      	ldrb	r3, [r6, #1]
 8027d0a:	2b2b      	cmp	r3, #43	@ 0x2b
 8027d0c:	d033      	beq.n	8027d76 <__gethex+0x116>
 8027d0e:	2b2d      	cmp	r3, #45	@ 0x2d
 8027d10:	d034      	beq.n	8027d7c <__gethex+0x11c>
 8027d12:	1c71      	adds	r1, r6, #1
 8027d14:	2400      	movs	r4, #0
 8027d16:	7808      	ldrb	r0, [r1, #0]
 8027d18:	f7ff ff8c 	bl	8027c34 <__hexdig_fun>
 8027d1c:	1e43      	subs	r3, r0, #1
 8027d1e:	b2db      	uxtb	r3, r3
 8027d20:	2b18      	cmp	r3, #24
 8027d22:	d830      	bhi.n	8027d86 <__gethex+0x126>
 8027d24:	f1a0 0210 	sub.w	r2, r0, #16
 8027d28:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8027d2c:	f7ff ff82 	bl	8027c34 <__hexdig_fun>
 8027d30:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8027d34:	fa5f fc8c 	uxtb.w	ip, ip
 8027d38:	f1bc 0f18 	cmp.w	ip, #24
 8027d3c:	f04f 030a 	mov.w	r3, #10
 8027d40:	d91e      	bls.n	8027d80 <__gethex+0x120>
 8027d42:	b104      	cbz	r4, 8027d46 <__gethex+0xe6>
 8027d44:	4252      	negs	r2, r2
 8027d46:	4417      	add	r7, r2
 8027d48:	f8ca 1000 	str.w	r1, [sl]
 8027d4c:	b1ed      	cbz	r5, 8027d8a <__gethex+0x12a>
 8027d4e:	f1bb 0f00 	cmp.w	fp, #0
 8027d52:	bf0c      	ite	eq
 8027d54:	2506      	moveq	r5, #6
 8027d56:	2500      	movne	r5, #0
 8027d58:	4628      	mov	r0, r5
 8027d5a:	b005      	add	sp, #20
 8027d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d60:	2500      	movs	r5, #0
 8027d62:	462c      	mov	r4, r5
 8027d64:	e7b0      	b.n	8027cc8 <__gethex+0x68>
 8027d66:	2c00      	cmp	r4, #0
 8027d68:	d1c7      	bne.n	8027cfa <__gethex+0x9a>
 8027d6a:	4627      	mov	r7, r4
 8027d6c:	e7c7      	b.n	8027cfe <__gethex+0x9e>
 8027d6e:	464e      	mov	r6, r9
 8027d70:	462f      	mov	r7, r5
 8027d72:	2501      	movs	r5, #1
 8027d74:	e7c3      	b.n	8027cfe <__gethex+0x9e>
 8027d76:	2400      	movs	r4, #0
 8027d78:	1cb1      	adds	r1, r6, #2
 8027d7a:	e7cc      	b.n	8027d16 <__gethex+0xb6>
 8027d7c:	2401      	movs	r4, #1
 8027d7e:	e7fb      	b.n	8027d78 <__gethex+0x118>
 8027d80:	fb03 0002 	mla	r0, r3, r2, r0
 8027d84:	e7ce      	b.n	8027d24 <__gethex+0xc4>
 8027d86:	4631      	mov	r1, r6
 8027d88:	e7de      	b.n	8027d48 <__gethex+0xe8>
 8027d8a:	eba6 0309 	sub.w	r3, r6, r9
 8027d8e:	3b01      	subs	r3, #1
 8027d90:	4629      	mov	r1, r5
 8027d92:	2b07      	cmp	r3, #7
 8027d94:	dc0a      	bgt.n	8027dac <__gethex+0x14c>
 8027d96:	9801      	ldr	r0, [sp, #4]
 8027d98:	f7fd fc4c 	bl	8025634 <_Balloc>
 8027d9c:	4604      	mov	r4, r0
 8027d9e:	b940      	cbnz	r0, 8027db2 <__gethex+0x152>
 8027da0:	4b5c      	ldr	r3, [pc, #368]	@ (8027f14 <__gethex+0x2b4>)
 8027da2:	4602      	mov	r2, r0
 8027da4:	21e4      	movs	r1, #228	@ 0xe4
 8027da6:	485c      	ldr	r0, [pc, #368]	@ (8027f18 <__gethex+0x2b8>)
 8027da8:	f7fb f9c4 	bl	8023134 <__assert_func>
 8027dac:	3101      	adds	r1, #1
 8027dae:	105b      	asrs	r3, r3, #1
 8027db0:	e7ef      	b.n	8027d92 <__gethex+0x132>
 8027db2:	f100 0a14 	add.w	sl, r0, #20
 8027db6:	2300      	movs	r3, #0
 8027db8:	4655      	mov	r5, sl
 8027dba:	469b      	mov	fp, r3
 8027dbc:	45b1      	cmp	r9, r6
 8027dbe:	d337      	bcc.n	8027e30 <__gethex+0x1d0>
 8027dc0:	f845 bb04 	str.w	fp, [r5], #4
 8027dc4:	eba5 050a 	sub.w	r5, r5, sl
 8027dc8:	10ad      	asrs	r5, r5, #2
 8027dca:	6125      	str	r5, [r4, #16]
 8027dcc:	4658      	mov	r0, fp
 8027dce:	f7fd fd21 	bl	8025814 <__hi0bits>
 8027dd2:	016d      	lsls	r5, r5, #5
 8027dd4:	f8d8 6000 	ldr.w	r6, [r8]
 8027dd8:	1a2d      	subs	r5, r5, r0
 8027dda:	42b5      	cmp	r5, r6
 8027ddc:	dd54      	ble.n	8027e88 <__gethex+0x228>
 8027dde:	1bad      	subs	r5, r5, r6
 8027de0:	4629      	mov	r1, r5
 8027de2:	4620      	mov	r0, r4
 8027de4:	f7fe f8bd 	bl	8025f62 <__any_on>
 8027de8:	4681      	mov	r9, r0
 8027dea:	b178      	cbz	r0, 8027e0c <__gethex+0x1ac>
 8027dec:	1e6b      	subs	r3, r5, #1
 8027dee:	1159      	asrs	r1, r3, #5
 8027df0:	f003 021f 	and.w	r2, r3, #31
 8027df4:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8027df8:	f04f 0901 	mov.w	r9, #1
 8027dfc:	fa09 f202 	lsl.w	r2, r9, r2
 8027e00:	420a      	tst	r2, r1
 8027e02:	d003      	beq.n	8027e0c <__gethex+0x1ac>
 8027e04:	454b      	cmp	r3, r9
 8027e06:	dc36      	bgt.n	8027e76 <__gethex+0x216>
 8027e08:	f04f 0902 	mov.w	r9, #2
 8027e0c:	4629      	mov	r1, r5
 8027e0e:	4620      	mov	r0, r4
 8027e10:	f7ff febe 	bl	8027b90 <rshift>
 8027e14:	442f      	add	r7, r5
 8027e16:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8027e1a:	42bb      	cmp	r3, r7
 8027e1c:	da42      	bge.n	8027ea4 <__gethex+0x244>
 8027e1e:	9801      	ldr	r0, [sp, #4]
 8027e20:	4621      	mov	r1, r4
 8027e22:	f7fd fc45 	bl	80256b0 <_Bfree>
 8027e26:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8027e28:	2300      	movs	r3, #0
 8027e2a:	6013      	str	r3, [r2, #0]
 8027e2c:	25a3      	movs	r5, #163	@ 0xa3
 8027e2e:	e793      	b.n	8027d58 <__gethex+0xf8>
 8027e30:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8027e34:	2a2e      	cmp	r2, #46	@ 0x2e
 8027e36:	d012      	beq.n	8027e5e <__gethex+0x1fe>
 8027e38:	2b20      	cmp	r3, #32
 8027e3a:	d104      	bne.n	8027e46 <__gethex+0x1e6>
 8027e3c:	f845 bb04 	str.w	fp, [r5], #4
 8027e40:	f04f 0b00 	mov.w	fp, #0
 8027e44:	465b      	mov	r3, fp
 8027e46:	7830      	ldrb	r0, [r6, #0]
 8027e48:	9303      	str	r3, [sp, #12]
 8027e4a:	f7ff fef3 	bl	8027c34 <__hexdig_fun>
 8027e4e:	9b03      	ldr	r3, [sp, #12]
 8027e50:	f000 000f 	and.w	r0, r0, #15
 8027e54:	4098      	lsls	r0, r3
 8027e56:	ea4b 0b00 	orr.w	fp, fp, r0
 8027e5a:	3304      	adds	r3, #4
 8027e5c:	e7ae      	b.n	8027dbc <__gethex+0x15c>
 8027e5e:	45b1      	cmp	r9, r6
 8027e60:	d8ea      	bhi.n	8027e38 <__gethex+0x1d8>
 8027e62:	492b      	ldr	r1, [pc, #172]	@ (8027f10 <__gethex+0x2b0>)
 8027e64:	9303      	str	r3, [sp, #12]
 8027e66:	2201      	movs	r2, #1
 8027e68:	4630      	mov	r0, r6
 8027e6a:	f7fc fc31 	bl	80246d0 <strncmp>
 8027e6e:	9b03      	ldr	r3, [sp, #12]
 8027e70:	2800      	cmp	r0, #0
 8027e72:	d1e1      	bne.n	8027e38 <__gethex+0x1d8>
 8027e74:	e7a2      	b.n	8027dbc <__gethex+0x15c>
 8027e76:	1ea9      	subs	r1, r5, #2
 8027e78:	4620      	mov	r0, r4
 8027e7a:	f7fe f872 	bl	8025f62 <__any_on>
 8027e7e:	2800      	cmp	r0, #0
 8027e80:	d0c2      	beq.n	8027e08 <__gethex+0x1a8>
 8027e82:	f04f 0903 	mov.w	r9, #3
 8027e86:	e7c1      	b.n	8027e0c <__gethex+0x1ac>
 8027e88:	da09      	bge.n	8027e9e <__gethex+0x23e>
 8027e8a:	1b75      	subs	r5, r6, r5
 8027e8c:	4621      	mov	r1, r4
 8027e8e:	9801      	ldr	r0, [sp, #4]
 8027e90:	462a      	mov	r2, r5
 8027e92:	f7fd fe27 	bl	8025ae4 <__lshift>
 8027e96:	1b7f      	subs	r7, r7, r5
 8027e98:	4604      	mov	r4, r0
 8027e9a:	f100 0a14 	add.w	sl, r0, #20
 8027e9e:	f04f 0900 	mov.w	r9, #0
 8027ea2:	e7b8      	b.n	8027e16 <__gethex+0x1b6>
 8027ea4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027ea8:	42bd      	cmp	r5, r7
 8027eaa:	dd6f      	ble.n	8027f8c <__gethex+0x32c>
 8027eac:	1bed      	subs	r5, r5, r7
 8027eae:	42ae      	cmp	r6, r5
 8027eb0:	dc34      	bgt.n	8027f1c <__gethex+0x2bc>
 8027eb2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8027eb6:	2b02      	cmp	r3, #2
 8027eb8:	d022      	beq.n	8027f00 <__gethex+0x2a0>
 8027eba:	2b03      	cmp	r3, #3
 8027ebc:	d024      	beq.n	8027f08 <__gethex+0x2a8>
 8027ebe:	2b01      	cmp	r3, #1
 8027ec0:	d115      	bne.n	8027eee <__gethex+0x28e>
 8027ec2:	42ae      	cmp	r6, r5
 8027ec4:	d113      	bne.n	8027eee <__gethex+0x28e>
 8027ec6:	2e01      	cmp	r6, #1
 8027ec8:	d10b      	bne.n	8027ee2 <__gethex+0x282>
 8027eca:	9a02      	ldr	r2, [sp, #8]
 8027ecc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8027ed0:	6013      	str	r3, [r2, #0]
 8027ed2:	2301      	movs	r3, #1
 8027ed4:	6123      	str	r3, [r4, #16]
 8027ed6:	f8ca 3000 	str.w	r3, [sl]
 8027eda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027edc:	2562      	movs	r5, #98	@ 0x62
 8027ede:	601c      	str	r4, [r3, #0]
 8027ee0:	e73a      	b.n	8027d58 <__gethex+0xf8>
 8027ee2:	1e71      	subs	r1, r6, #1
 8027ee4:	4620      	mov	r0, r4
 8027ee6:	f7fe f83c 	bl	8025f62 <__any_on>
 8027eea:	2800      	cmp	r0, #0
 8027eec:	d1ed      	bne.n	8027eca <__gethex+0x26a>
 8027eee:	9801      	ldr	r0, [sp, #4]
 8027ef0:	4621      	mov	r1, r4
 8027ef2:	f7fd fbdd 	bl	80256b0 <_Bfree>
 8027ef6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8027ef8:	2300      	movs	r3, #0
 8027efa:	6013      	str	r3, [r2, #0]
 8027efc:	2550      	movs	r5, #80	@ 0x50
 8027efe:	e72b      	b.n	8027d58 <__gethex+0xf8>
 8027f00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027f02:	2b00      	cmp	r3, #0
 8027f04:	d1f3      	bne.n	8027eee <__gethex+0x28e>
 8027f06:	e7e0      	b.n	8027eca <__gethex+0x26a>
 8027f08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027f0a:	2b00      	cmp	r3, #0
 8027f0c:	d1dd      	bne.n	8027eca <__gethex+0x26a>
 8027f0e:	e7ee      	b.n	8027eee <__gethex+0x28e>
 8027f10:	0802b230 	.word	0x0802b230
 8027f14:	0802b1c5 	.word	0x0802b1c5
 8027f18:	0802b266 	.word	0x0802b266
 8027f1c:	1e6f      	subs	r7, r5, #1
 8027f1e:	f1b9 0f00 	cmp.w	r9, #0
 8027f22:	d130      	bne.n	8027f86 <__gethex+0x326>
 8027f24:	b127      	cbz	r7, 8027f30 <__gethex+0x2d0>
 8027f26:	4639      	mov	r1, r7
 8027f28:	4620      	mov	r0, r4
 8027f2a:	f7fe f81a 	bl	8025f62 <__any_on>
 8027f2e:	4681      	mov	r9, r0
 8027f30:	117a      	asrs	r2, r7, #5
 8027f32:	2301      	movs	r3, #1
 8027f34:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8027f38:	f007 071f 	and.w	r7, r7, #31
 8027f3c:	40bb      	lsls	r3, r7
 8027f3e:	4213      	tst	r3, r2
 8027f40:	4629      	mov	r1, r5
 8027f42:	4620      	mov	r0, r4
 8027f44:	bf18      	it	ne
 8027f46:	f049 0902 	orrne.w	r9, r9, #2
 8027f4a:	f7ff fe21 	bl	8027b90 <rshift>
 8027f4e:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8027f52:	1b76      	subs	r6, r6, r5
 8027f54:	2502      	movs	r5, #2
 8027f56:	f1b9 0f00 	cmp.w	r9, #0
 8027f5a:	d047      	beq.n	8027fec <__gethex+0x38c>
 8027f5c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8027f60:	2b02      	cmp	r3, #2
 8027f62:	d015      	beq.n	8027f90 <__gethex+0x330>
 8027f64:	2b03      	cmp	r3, #3
 8027f66:	d017      	beq.n	8027f98 <__gethex+0x338>
 8027f68:	2b01      	cmp	r3, #1
 8027f6a:	d109      	bne.n	8027f80 <__gethex+0x320>
 8027f6c:	f019 0f02 	tst.w	r9, #2
 8027f70:	d006      	beq.n	8027f80 <__gethex+0x320>
 8027f72:	f8da 3000 	ldr.w	r3, [sl]
 8027f76:	ea49 0903 	orr.w	r9, r9, r3
 8027f7a:	f019 0f01 	tst.w	r9, #1
 8027f7e:	d10e      	bne.n	8027f9e <__gethex+0x33e>
 8027f80:	f045 0510 	orr.w	r5, r5, #16
 8027f84:	e032      	b.n	8027fec <__gethex+0x38c>
 8027f86:	f04f 0901 	mov.w	r9, #1
 8027f8a:	e7d1      	b.n	8027f30 <__gethex+0x2d0>
 8027f8c:	2501      	movs	r5, #1
 8027f8e:	e7e2      	b.n	8027f56 <__gethex+0x2f6>
 8027f90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027f92:	f1c3 0301 	rsb	r3, r3, #1
 8027f96:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027f98:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8027f9a:	2b00      	cmp	r3, #0
 8027f9c:	d0f0      	beq.n	8027f80 <__gethex+0x320>
 8027f9e:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8027fa2:	f104 0314 	add.w	r3, r4, #20
 8027fa6:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8027faa:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8027fae:	f04f 0c00 	mov.w	ip, #0
 8027fb2:	4618      	mov	r0, r3
 8027fb4:	f853 2b04 	ldr.w	r2, [r3], #4
 8027fb8:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 8027fbc:	d01b      	beq.n	8027ff6 <__gethex+0x396>
 8027fbe:	3201      	adds	r2, #1
 8027fc0:	6002      	str	r2, [r0, #0]
 8027fc2:	2d02      	cmp	r5, #2
 8027fc4:	f104 0314 	add.w	r3, r4, #20
 8027fc8:	d13c      	bne.n	8028044 <__gethex+0x3e4>
 8027fca:	f8d8 2000 	ldr.w	r2, [r8]
 8027fce:	3a01      	subs	r2, #1
 8027fd0:	42b2      	cmp	r2, r6
 8027fd2:	d109      	bne.n	8027fe8 <__gethex+0x388>
 8027fd4:	1171      	asrs	r1, r6, #5
 8027fd6:	2201      	movs	r2, #1
 8027fd8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8027fdc:	f006 061f 	and.w	r6, r6, #31
 8027fe0:	fa02 f606 	lsl.w	r6, r2, r6
 8027fe4:	421e      	tst	r6, r3
 8027fe6:	d13a      	bne.n	802805e <__gethex+0x3fe>
 8027fe8:	f045 0520 	orr.w	r5, r5, #32
 8027fec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027fee:	601c      	str	r4, [r3, #0]
 8027ff0:	9b02      	ldr	r3, [sp, #8]
 8027ff2:	601f      	str	r7, [r3, #0]
 8027ff4:	e6b0      	b.n	8027d58 <__gethex+0xf8>
 8027ff6:	4299      	cmp	r1, r3
 8027ff8:	f843 cc04 	str.w	ip, [r3, #-4]
 8027ffc:	d8d9      	bhi.n	8027fb2 <__gethex+0x352>
 8027ffe:	68a3      	ldr	r3, [r4, #8]
 8028000:	459b      	cmp	fp, r3
 8028002:	db17      	blt.n	8028034 <__gethex+0x3d4>
 8028004:	6861      	ldr	r1, [r4, #4]
 8028006:	9801      	ldr	r0, [sp, #4]
 8028008:	3101      	adds	r1, #1
 802800a:	f7fd fb13 	bl	8025634 <_Balloc>
 802800e:	4681      	mov	r9, r0
 8028010:	b918      	cbnz	r0, 802801a <__gethex+0x3ba>
 8028012:	4b1a      	ldr	r3, [pc, #104]	@ (802807c <__gethex+0x41c>)
 8028014:	4602      	mov	r2, r0
 8028016:	2184      	movs	r1, #132	@ 0x84
 8028018:	e6c5      	b.n	8027da6 <__gethex+0x146>
 802801a:	6922      	ldr	r2, [r4, #16]
 802801c:	3202      	adds	r2, #2
 802801e:	f104 010c 	add.w	r1, r4, #12
 8028022:	0092      	lsls	r2, r2, #2
 8028024:	300c      	adds	r0, #12
 8028026:	f7fc fc30 	bl	802488a <memcpy>
 802802a:	4621      	mov	r1, r4
 802802c:	9801      	ldr	r0, [sp, #4]
 802802e:	f7fd fb3f 	bl	80256b0 <_Bfree>
 8028032:	464c      	mov	r4, r9
 8028034:	6923      	ldr	r3, [r4, #16]
 8028036:	1c5a      	adds	r2, r3, #1
 8028038:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 802803c:	6122      	str	r2, [r4, #16]
 802803e:	2201      	movs	r2, #1
 8028040:	615a      	str	r2, [r3, #20]
 8028042:	e7be      	b.n	8027fc2 <__gethex+0x362>
 8028044:	6922      	ldr	r2, [r4, #16]
 8028046:	455a      	cmp	r2, fp
 8028048:	dd0b      	ble.n	8028062 <__gethex+0x402>
 802804a:	2101      	movs	r1, #1
 802804c:	4620      	mov	r0, r4
 802804e:	f7ff fd9f 	bl	8027b90 <rshift>
 8028052:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8028056:	3701      	adds	r7, #1
 8028058:	42bb      	cmp	r3, r7
 802805a:	f6ff aee0 	blt.w	8027e1e <__gethex+0x1be>
 802805e:	2501      	movs	r5, #1
 8028060:	e7c2      	b.n	8027fe8 <__gethex+0x388>
 8028062:	f016 061f 	ands.w	r6, r6, #31
 8028066:	d0fa      	beq.n	802805e <__gethex+0x3fe>
 8028068:	4453      	add	r3, sl
 802806a:	f1c6 0620 	rsb	r6, r6, #32
 802806e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8028072:	f7fd fbcf 	bl	8025814 <__hi0bits>
 8028076:	42b0      	cmp	r0, r6
 8028078:	dbe7      	blt.n	802804a <__gethex+0x3ea>
 802807a:	e7f0      	b.n	802805e <__gethex+0x3fe>
 802807c:	0802b1c5 	.word	0x0802b1c5

08028080 <L_shift>:
 8028080:	f1c2 0208 	rsb	r2, r2, #8
 8028084:	0092      	lsls	r2, r2, #2
 8028086:	b570      	push	{r4, r5, r6, lr}
 8028088:	f1c2 0620 	rsb	r6, r2, #32
 802808c:	6843      	ldr	r3, [r0, #4]
 802808e:	6804      	ldr	r4, [r0, #0]
 8028090:	fa03 f506 	lsl.w	r5, r3, r6
 8028094:	432c      	orrs	r4, r5
 8028096:	40d3      	lsrs	r3, r2
 8028098:	6004      	str	r4, [r0, #0]
 802809a:	f840 3f04 	str.w	r3, [r0, #4]!
 802809e:	4288      	cmp	r0, r1
 80280a0:	d3f4      	bcc.n	802808c <L_shift+0xc>
 80280a2:	bd70      	pop	{r4, r5, r6, pc}

080280a4 <__match>:
 80280a4:	b530      	push	{r4, r5, lr}
 80280a6:	6803      	ldr	r3, [r0, #0]
 80280a8:	3301      	adds	r3, #1
 80280aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80280ae:	b914      	cbnz	r4, 80280b6 <__match+0x12>
 80280b0:	6003      	str	r3, [r0, #0]
 80280b2:	2001      	movs	r0, #1
 80280b4:	bd30      	pop	{r4, r5, pc}
 80280b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80280ba:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80280be:	2d19      	cmp	r5, #25
 80280c0:	bf98      	it	ls
 80280c2:	3220      	addls	r2, #32
 80280c4:	42a2      	cmp	r2, r4
 80280c6:	d0f0      	beq.n	80280aa <__match+0x6>
 80280c8:	2000      	movs	r0, #0
 80280ca:	e7f3      	b.n	80280b4 <__match+0x10>

080280cc <__hexnan>:
 80280cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80280d0:	680b      	ldr	r3, [r1, #0]
 80280d2:	6801      	ldr	r1, [r0, #0]
 80280d4:	115e      	asrs	r6, r3, #5
 80280d6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80280da:	f013 031f 	ands.w	r3, r3, #31
 80280de:	b087      	sub	sp, #28
 80280e0:	bf18      	it	ne
 80280e2:	3604      	addne	r6, #4
 80280e4:	2500      	movs	r5, #0
 80280e6:	1f37      	subs	r7, r6, #4
 80280e8:	4682      	mov	sl, r0
 80280ea:	4690      	mov	r8, r2
 80280ec:	9301      	str	r3, [sp, #4]
 80280ee:	f846 5c04 	str.w	r5, [r6, #-4]
 80280f2:	46b9      	mov	r9, r7
 80280f4:	463c      	mov	r4, r7
 80280f6:	9502      	str	r5, [sp, #8]
 80280f8:	46ab      	mov	fp, r5
 80280fa:	784a      	ldrb	r2, [r1, #1]
 80280fc:	1c4b      	adds	r3, r1, #1
 80280fe:	9303      	str	r3, [sp, #12]
 8028100:	b342      	cbz	r2, 8028154 <__hexnan+0x88>
 8028102:	4610      	mov	r0, r2
 8028104:	9105      	str	r1, [sp, #20]
 8028106:	9204      	str	r2, [sp, #16]
 8028108:	f7ff fd94 	bl	8027c34 <__hexdig_fun>
 802810c:	2800      	cmp	r0, #0
 802810e:	d153      	bne.n	80281b8 <__hexnan+0xec>
 8028110:	9a04      	ldr	r2, [sp, #16]
 8028112:	9905      	ldr	r1, [sp, #20]
 8028114:	2a20      	cmp	r2, #32
 8028116:	d818      	bhi.n	802814a <__hexnan+0x7e>
 8028118:	9b02      	ldr	r3, [sp, #8]
 802811a:	459b      	cmp	fp, r3
 802811c:	dd13      	ble.n	8028146 <__hexnan+0x7a>
 802811e:	454c      	cmp	r4, r9
 8028120:	d206      	bcs.n	8028130 <__hexnan+0x64>
 8028122:	2d07      	cmp	r5, #7
 8028124:	dc04      	bgt.n	8028130 <__hexnan+0x64>
 8028126:	462a      	mov	r2, r5
 8028128:	4649      	mov	r1, r9
 802812a:	4620      	mov	r0, r4
 802812c:	f7ff ffa8 	bl	8028080 <L_shift>
 8028130:	4544      	cmp	r4, r8
 8028132:	d954      	bls.n	80281de <__hexnan+0x112>
 8028134:	2300      	movs	r3, #0
 8028136:	f1a4 0904 	sub.w	r9, r4, #4
 802813a:	f844 3c04 	str.w	r3, [r4, #-4]
 802813e:	f8cd b008 	str.w	fp, [sp, #8]
 8028142:	464c      	mov	r4, r9
 8028144:	461d      	mov	r5, r3
 8028146:	9903      	ldr	r1, [sp, #12]
 8028148:	e7d7      	b.n	80280fa <__hexnan+0x2e>
 802814a:	2a29      	cmp	r2, #41	@ 0x29
 802814c:	d159      	bne.n	8028202 <__hexnan+0x136>
 802814e:	3102      	adds	r1, #2
 8028150:	f8ca 1000 	str.w	r1, [sl]
 8028154:	f1bb 0f00 	cmp.w	fp, #0
 8028158:	d053      	beq.n	8028202 <__hexnan+0x136>
 802815a:	454c      	cmp	r4, r9
 802815c:	d206      	bcs.n	802816c <__hexnan+0xa0>
 802815e:	2d07      	cmp	r5, #7
 8028160:	dc04      	bgt.n	802816c <__hexnan+0xa0>
 8028162:	462a      	mov	r2, r5
 8028164:	4649      	mov	r1, r9
 8028166:	4620      	mov	r0, r4
 8028168:	f7ff ff8a 	bl	8028080 <L_shift>
 802816c:	4544      	cmp	r4, r8
 802816e:	d938      	bls.n	80281e2 <__hexnan+0x116>
 8028170:	f1a8 0204 	sub.w	r2, r8, #4
 8028174:	4623      	mov	r3, r4
 8028176:	f853 1b04 	ldr.w	r1, [r3], #4
 802817a:	f842 1f04 	str.w	r1, [r2, #4]!
 802817e:	429f      	cmp	r7, r3
 8028180:	d2f9      	bcs.n	8028176 <__hexnan+0xaa>
 8028182:	1b3b      	subs	r3, r7, r4
 8028184:	f023 0303 	bic.w	r3, r3, #3
 8028188:	3401      	adds	r4, #1
 802818a:	3e03      	subs	r6, #3
 802818c:	42b4      	cmp	r4, r6
 802818e:	bf88      	it	hi
 8028190:	2300      	movhi	r3, #0
 8028192:	f108 0204 	add.w	r2, r8, #4
 8028196:	4413      	add	r3, r2
 8028198:	2100      	movs	r1, #0
 802819a:	461a      	mov	r2, r3
 802819c:	3304      	adds	r3, #4
 802819e:	429f      	cmp	r7, r3
 80281a0:	6011      	str	r1, [r2, #0]
 80281a2:	d2fa      	bcs.n	802819a <__hexnan+0xce>
 80281a4:	683b      	ldr	r3, [r7, #0]
 80281a6:	b91b      	cbnz	r3, 80281b0 <__hexnan+0xe4>
 80281a8:	4547      	cmp	r7, r8
 80281aa:	d128      	bne.n	80281fe <__hexnan+0x132>
 80281ac:	2301      	movs	r3, #1
 80281ae:	603b      	str	r3, [r7, #0]
 80281b0:	2005      	movs	r0, #5
 80281b2:	b007      	add	sp, #28
 80281b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80281b8:	3501      	adds	r5, #1
 80281ba:	2d08      	cmp	r5, #8
 80281bc:	f10b 0b01 	add.w	fp, fp, #1
 80281c0:	dd06      	ble.n	80281d0 <__hexnan+0x104>
 80281c2:	4544      	cmp	r4, r8
 80281c4:	d9bf      	bls.n	8028146 <__hexnan+0x7a>
 80281c6:	2300      	movs	r3, #0
 80281c8:	f844 3c04 	str.w	r3, [r4, #-4]
 80281cc:	2501      	movs	r5, #1
 80281ce:	3c04      	subs	r4, #4
 80281d0:	6822      	ldr	r2, [r4, #0]
 80281d2:	f000 000f 	and.w	r0, r0, #15
 80281d6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80281da:	6020      	str	r0, [r4, #0]
 80281dc:	e7b3      	b.n	8028146 <__hexnan+0x7a>
 80281de:	2508      	movs	r5, #8
 80281e0:	e7b1      	b.n	8028146 <__hexnan+0x7a>
 80281e2:	9b01      	ldr	r3, [sp, #4]
 80281e4:	2b00      	cmp	r3, #0
 80281e6:	d0dd      	beq.n	80281a4 <__hexnan+0xd8>
 80281e8:	f1c3 0320 	rsb	r3, r3, #32
 80281ec:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80281f0:	40da      	lsrs	r2, r3
 80281f2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80281f6:	4013      	ands	r3, r2
 80281f8:	f846 3c04 	str.w	r3, [r6, #-4]
 80281fc:	e7d2      	b.n	80281a4 <__hexnan+0xd8>
 80281fe:	3f04      	subs	r7, #4
 8028200:	e7d0      	b.n	80281a4 <__hexnan+0xd8>
 8028202:	2004      	movs	r0, #4
 8028204:	e7d5      	b.n	80281b2 <__hexnan+0xe6>

08028206 <__ascii_mbtowc>:
 8028206:	b082      	sub	sp, #8
 8028208:	b901      	cbnz	r1, 802820c <__ascii_mbtowc+0x6>
 802820a:	a901      	add	r1, sp, #4
 802820c:	b142      	cbz	r2, 8028220 <__ascii_mbtowc+0x1a>
 802820e:	b14b      	cbz	r3, 8028224 <__ascii_mbtowc+0x1e>
 8028210:	7813      	ldrb	r3, [r2, #0]
 8028212:	600b      	str	r3, [r1, #0]
 8028214:	7812      	ldrb	r2, [r2, #0]
 8028216:	1e10      	subs	r0, r2, #0
 8028218:	bf18      	it	ne
 802821a:	2001      	movne	r0, #1
 802821c:	b002      	add	sp, #8
 802821e:	4770      	bx	lr
 8028220:	4610      	mov	r0, r2
 8028222:	e7fb      	b.n	802821c <__ascii_mbtowc+0x16>
 8028224:	f06f 0001 	mvn.w	r0, #1
 8028228:	e7f8      	b.n	802821c <__ascii_mbtowc+0x16>

0802822a <_realloc_r>:
 802822a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802822e:	4607      	mov	r7, r0
 8028230:	4614      	mov	r4, r2
 8028232:	460d      	mov	r5, r1
 8028234:	b921      	cbnz	r1, 8028240 <_realloc_r+0x16>
 8028236:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802823a:	4611      	mov	r1, r2
 802823c:	f7fb b812 	b.w	8023264 <_malloc_r>
 8028240:	b92a      	cbnz	r2, 802824e <_realloc_r+0x24>
 8028242:	f7fd f9ad 	bl	80255a0 <_free_r>
 8028246:	4625      	mov	r5, r4
 8028248:	4628      	mov	r0, r5
 802824a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802824e:	f000 f827 	bl	80282a0 <_malloc_usable_size_r>
 8028252:	4284      	cmp	r4, r0
 8028254:	4606      	mov	r6, r0
 8028256:	d802      	bhi.n	802825e <_realloc_r+0x34>
 8028258:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802825c:	d8f4      	bhi.n	8028248 <_realloc_r+0x1e>
 802825e:	4621      	mov	r1, r4
 8028260:	4638      	mov	r0, r7
 8028262:	f7fa ffff 	bl	8023264 <_malloc_r>
 8028266:	4680      	mov	r8, r0
 8028268:	b908      	cbnz	r0, 802826e <_realloc_r+0x44>
 802826a:	4645      	mov	r5, r8
 802826c:	e7ec      	b.n	8028248 <_realloc_r+0x1e>
 802826e:	42b4      	cmp	r4, r6
 8028270:	4622      	mov	r2, r4
 8028272:	4629      	mov	r1, r5
 8028274:	bf28      	it	cs
 8028276:	4632      	movcs	r2, r6
 8028278:	f7fc fb07 	bl	802488a <memcpy>
 802827c:	4629      	mov	r1, r5
 802827e:	4638      	mov	r0, r7
 8028280:	f7fd f98e 	bl	80255a0 <_free_r>
 8028284:	e7f1      	b.n	802826a <_realloc_r+0x40>

08028286 <__ascii_wctomb>:
 8028286:	4603      	mov	r3, r0
 8028288:	4608      	mov	r0, r1
 802828a:	b141      	cbz	r1, 802829e <__ascii_wctomb+0x18>
 802828c:	2aff      	cmp	r2, #255	@ 0xff
 802828e:	d904      	bls.n	802829a <__ascii_wctomb+0x14>
 8028290:	228a      	movs	r2, #138	@ 0x8a
 8028292:	601a      	str	r2, [r3, #0]
 8028294:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8028298:	4770      	bx	lr
 802829a:	700a      	strb	r2, [r1, #0]
 802829c:	2001      	movs	r0, #1
 802829e:	4770      	bx	lr

080282a0 <_malloc_usable_size_r>:
 80282a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80282a4:	1f18      	subs	r0, r3, #4
 80282a6:	2b00      	cmp	r3, #0
 80282a8:	bfbc      	itt	lt
 80282aa:	580b      	ldrlt	r3, [r1, r0]
 80282ac:	18c0      	addlt	r0, r0, r3
 80282ae:	4770      	bx	lr

080282b0 <__aeabi_d2lz>:
 80282b0:	b538      	push	{r3, r4, r5, lr}
 80282b2:	2200      	movs	r2, #0
 80282b4:	2300      	movs	r3, #0
 80282b6:	4604      	mov	r4, r0
 80282b8:	460d      	mov	r5, r1
 80282ba:	f7d8 fbff 	bl	8000abc <__aeabi_dcmplt>
 80282be:	b928      	cbnz	r0, 80282cc <__aeabi_d2lz+0x1c>
 80282c0:	4620      	mov	r0, r4
 80282c2:	4629      	mov	r1, r5
 80282c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80282c8:	f000 b80a 	b.w	80282e0 <__aeabi_d2ulz>
 80282cc:	4620      	mov	r0, r4
 80282ce:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 80282d2:	f000 f805 	bl	80282e0 <__aeabi_d2ulz>
 80282d6:	4240      	negs	r0, r0
 80282d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80282dc:	bd38      	pop	{r3, r4, r5, pc}
 80282de:	bf00      	nop

080282e0 <__aeabi_d2ulz>:
 80282e0:	b5d0      	push	{r4, r6, r7, lr}
 80282e2:	4b0c      	ldr	r3, [pc, #48]	@ (8028314 <__aeabi_d2ulz+0x34>)
 80282e4:	2200      	movs	r2, #0
 80282e6:	4606      	mov	r6, r0
 80282e8:	460f      	mov	r7, r1
 80282ea:	f7d8 f975 	bl	80005d8 <__aeabi_dmul>
 80282ee:	f7d8 fc4b 	bl	8000b88 <__aeabi_d2uiz>
 80282f2:	4604      	mov	r4, r0
 80282f4:	f7d8 f8f6 	bl	80004e4 <__aeabi_ui2d>
 80282f8:	4b07      	ldr	r3, [pc, #28]	@ (8028318 <__aeabi_d2ulz+0x38>)
 80282fa:	2200      	movs	r2, #0
 80282fc:	f7d8 f96c 	bl	80005d8 <__aeabi_dmul>
 8028300:	4602      	mov	r2, r0
 8028302:	460b      	mov	r3, r1
 8028304:	4630      	mov	r0, r6
 8028306:	4639      	mov	r1, r7
 8028308:	f7d7 ffae 	bl	8000268 <__aeabi_dsub>
 802830c:	f7d8 fc3c 	bl	8000b88 <__aeabi_d2uiz>
 8028310:	4621      	mov	r1, r4
 8028312:	bdd0      	pop	{r4, r6, r7, pc}
 8028314:	3df00000 	.word	0x3df00000
 8028318:	41f00000 	.word	0x41f00000

0802831c <__udivmoddi4>:
 802831c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028320:	9d08      	ldr	r5, [sp, #32]
 8028322:	460f      	mov	r7, r1
 8028324:	4604      	mov	r4, r0
 8028326:	468c      	mov	ip, r1
 8028328:	2b00      	cmp	r3, #0
 802832a:	d148      	bne.n	80283be <__udivmoddi4+0xa2>
 802832c:	428a      	cmp	r2, r1
 802832e:	4616      	mov	r6, r2
 8028330:	d961      	bls.n	80283f6 <__udivmoddi4+0xda>
 8028332:	fab2 f382 	clz	r3, r2
 8028336:	b14b      	cbz	r3, 802834c <__udivmoddi4+0x30>
 8028338:	f1c3 0220 	rsb	r2, r3, #32
 802833c:	fa01 fc03 	lsl.w	ip, r1, r3
 8028340:	fa20 f202 	lsr.w	r2, r0, r2
 8028344:	409e      	lsls	r6, r3
 8028346:	ea42 0c0c 	orr.w	ip, r2, ip
 802834a:	409c      	lsls	r4, r3
 802834c:	ea4f 4e16 	mov.w	lr, r6, lsr #16
 8028350:	b2b7      	uxth	r7, r6
 8028352:	fbbc f1fe 	udiv	r1, ip, lr
 8028356:	0c22      	lsrs	r2, r4, #16
 8028358:	fb0e cc11 	mls	ip, lr, r1, ip
 802835c:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8028360:	fb01 f007 	mul.w	r0, r1, r7
 8028364:	4290      	cmp	r0, r2
 8028366:	d909      	bls.n	802837c <__udivmoddi4+0x60>
 8028368:	18b2      	adds	r2, r6, r2
 802836a:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
 802836e:	f080 80ee 	bcs.w	802854e <__udivmoddi4+0x232>
 8028372:	4290      	cmp	r0, r2
 8028374:	f240 80eb 	bls.w	802854e <__udivmoddi4+0x232>
 8028378:	3902      	subs	r1, #2
 802837a:	4432      	add	r2, r6
 802837c:	1a12      	subs	r2, r2, r0
 802837e:	b2a4      	uxth	r4, r4
 8028380:	fbb2 f0fe 	udiv	r0, r2, lr
 8028384:	fb0e 2210 	mls	r2, lr, r0, r2
 8028388:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 802838c:	fb00 f707 	mul.w	r7, r0, r7
 8028390:	42a7      	cmp	r7, r4
 8028392:	d909      	bls.n	80283a8 <__udivmoddi4+0x8c>
 8028394:	1934      	adds	r4, r6, r4
 8028396:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 802839a:	f080 80da 	bcs.w	8028552 <__udivmoddi4+0x236>
 802839e:	42a7      	cmp	r7, r4
 80283a0:	f240 80d7 	bls.w	8028552 <__udivmoddi4+0x236>
 80283a4:	4434      	add	r4, r6
 80283a6:	3802      	subs	r0, #2
 80283a8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80283ac:	1be4      	subs	r4, r4, r7
 80283ae:	2100      	movs	r1, #0
 80283b0:	b11d      	cbz	r5, 80283ba <__udivmoddi4+0x9e>
 80283b2:	40dc      	lsrs	r4, r3
 80283b4:	2300      	movs	r3, #0
 80283b6:	e9c5 4300 	strd	r4, r3, [r5]
 80283ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80283be:	428b      	cmp	r3, r1
 80283c0:	d906      	bls.n	80283d0 <__udivmoddi4+0xb4>
 80283c2:	b10d      	cbz	r5, 80283c8 <__udivmoddi4+0xac>
 80283c4:	e9c5 0100 	strd	r0, r1, [r5]
 80283c8:	2100      	movs	r1, #0
 80283ca:	4608      	mov	r0, r1
 80283cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80283d0:	fab3 f183 	clz	r1, r3
 80283d4:	2900      	cmp	r1, #0
 80283d6:	d148      	bne.n	802846a <__udivmoddi4+0x14e>
 80283d8:	42bb      	cmp	r3, r7
 80283da:	d302      	bcc.n	80283e2 <__udivmoddi4+0xc6>
 80283dc:	4282      	cmp	r2, r0
 80283de:	f200 8107 	bhi.w	80285f0 <__udivmoddi4+0x2d4>
 80283e2:	1a84      	subs	r4, r0, r2
 80283e4:	eb67 0203 	sbc.w	r2, r7, r3
 80283e8:	2001      	movs	r0, #1
 80283ea:	4694      	mov	ip, r2
 80283ec:	2d00      	cmp	r5, #0
 80283ee:	d0e4      	beq.n	80283ba <__udivmoddi4+0x9e>
 80283f0:	e9c5 4c00 	strd	r4, ip, [r5]
 80283f4:	e7e1      	b.n	80283ba <__udivmoddi4+0x9e>
 80283f6:	2a00      	cmp	r2, #0
 80283f8:	f000 8092 	beq.w	8028520 <__udivmoddi4+0x204>
 80283fc:	fab2 f382 	clz	r3, r2
 8028400:	2b00      	cmp	r3, #0
 8028402:	f040 80a8 	bne.w	8028556 <__udivmoddi4+0x23a>
 8028406:	1a8a      	subs	r2, r1, r2
 8028408:	ea4f 4e16 	mov.w	lr, r6, lsr #16
 802840c:	fa1f fc86 	uxth.w	ip, r6
 8028410:	2101      	movs	r1, #1
 8028412:	0c20      	lsrs	r0, r4, #16
 8028414:	fbb2 f7fe 	udiv	r7, r2, lr
 8028418:	fb0e 2217 	mls	r2, lr, r7, r2
 802841c:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
 8028420:	fb0c f007 	mul.w	r0, ip, r7
 8028424:	4290      	cmp	r0, r2
 8028426:	d907      	bls.n	8028438 <__udivmoddi4+0x11c>
 8028428:	18b2      	adds	r2, r6, r2
 802842a:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 802842e:	d202      	bcs.n	8028436 <__udivmoddi4+0x11a>
 8028430:	4290      	cmp	r0, r2
 8028432:	f200 80e2 	bhi.w	80285fa <__udivmoddi4+0x2de>
 8028436:	4647      	mov	r7, r8
 8028438:	1a12      	subs	r2, r2, r0
 802843a:	b2a4      	uxth	r4, r4
 802843c:	fbb2 f0fe 	udiv	r0, r2, lr
 8028440:	fb0e 2210 	mls	r2, lr, r0, r2
 8028444:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8028448:	fb0c fc00 	mul.w	ip, ip, r0
 802844c:	45a4      	cmp	ip, r4
 802844e:	d907      	bls.n	8028460 <__udivmoddi4+0x144>
 8028450:	1934      	adds	r4, r6, r4
 8028452:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 8028456:	d202      	bcs.n	802845e <__udivmoddi4+0x142>
 8028458:	45a4      	cmp	ip, r4
 802845a:	f200 80cb 	bhi.w	80285f4 <__udivmoddi4+0x2d8>
 802845e:	4610      	mov	r0, r2
 8028460:	eba4 040c 	sub.w	r4, r4, ip
 8028464:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8028468:	e7a2      	b.n	80283b0 <__udivmoddi4+0x94>
 802846a:	f1c1 0620 	rsb	r6, r1, #32
 802846e:	408b      	lsls	r3, r1
 8028470:	fa22 fc06 	lsr.w	ip, r2, r6
 8028474:	ea4c 0c03 	orr.w	ip, ip, r3
 8028478:	fa07 f401 	lsl.w	r4, r7, r1
 802847c:	fa20 f306 	lsr.w	r3, r0, r6
 8028480:	40f7      	lsrs	r7, r6
 8028482:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8028486:	4323      	orrs	r3, r4
 8028488:	fa00 f801 	lsl.w	r8, r0, r1
 802848c:	fa1f fe8c 	uxth.w	lr, ip
 8028490:	fbb7 f0f9 	udiv	r0, r7, r9
 8028494:	0c1c      	lsrs	r4, r3, #16
 8028496:	fb09 7710 	mls	r7, r9, r0, r7
 802849a:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 802849e:	fb00 f70e 	mul.w	r7, r0, lr
 80284a2:	42a7      	cmp	r7, r4
 80284a4:	fa02 f201 	lsl.w	r2, r2, r1
 80284a8:	d90a      	bls.n	80284c0 <__udivmoddi4+0x1a4>
 80284aa:	eb1c 0404 	adds.w	r4, ip, r4
 80284ae:	f100 3aff 	add.w	sl, r0, #4294967295	@ 0xffffffff
 80284b2:	f080 809b 	bcs.w	80285ec <__udivmoddi4+0x2d0>
 80284b6:	42a7      	cmp	r7, r4
 80284b8:	f240 8098 	bls.w	80285ec <__udivmoddi4+0x2d0>
 80284bc:	3802      	subs	r0, #2
 80284be:	4464      	add	r4, ip
 80284c0:	1be4      	subs	r4, r4, r7
 80284c2:	b29f      	uxth	r7, r3
 80284c4:	fbb4 f3f9 	udiv	r3, r4, r9
 80284c8:	fb09 4413 	mls	r4, r9, r3, r4
 80284cc:	ea47 4404 	orr.w	r4, r7, r4, lsl #16
 80284d0:	fb03 fe0e 	mul.w	lr, r3, lr
 80284d4:	45a6      	cmp	lr, r4
 80284d6:	d909      	bls.n	80284ec <__udivmoddi4+0x1d0>
 80284d8:	eb1c 0404 	adds.w	r4, ip, r4
 80284dc:	f103 37ff 	add.w	r7, r3, #4294967295	@ 0xffffffff
 80284e0:	f080 8082 	bcs.w	80285e8 <__udivmoddi4+0x2cc>
 80284e4:	45a6      	cmp	lr, r4
 80284e6:	d97f      	bls.n	80285e8 <__udivmoddi4+0x2cc>
 80284e8:	3b02      	subs	r3, #2
 80284ea:	4464      	add	r4, ip
 80284ec:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80284f0:	eba4 040e 	sub.w	r4, r4, lr
 80284f4:	fba0 e702 	umull	lr, r7, r0, r2
 80284f8:	42bc      	cmp	r4, r7
 80284fa:	4673      	mov	r3, lr
 80284fc:	46b9      	mov	r9, r7
 80284fe:	d363      	bcc.n	80285c8 <__udivmoddi4+0x2ac>
 8028500:	d060      	beq.n	80285c4 <__udivmoddi4+0x2a8>
 8028502:	b15d      	cbz	r5, 802851c <__udivmoddi4+0x200>
 8028504:	ebb8 0203 	subs.w	r2, r8, r3
 8028508:	eb64 0409 	sbc.w	r4, r4, r9
 802850c:	fa04 f606 	lsl.w	r6, r4, r6
 8028510:	fa22 f301 	lsr.w	r3, r2, r1
 8028514:	431e      	orrs	r6, r3
 8028516:	40cc      	lsrs	r4, r1
 8028518:	e9c5 6400 	strd	r6, r4, [r5]
 802851c:	2100      	movs	r1, #0
 802851e:	e74c      	b.n	80283ba <__udivmoddi4+0x9e>
 8028520:	0862      	lsrs	r2, r4, #1
 8028522:	0848      	lsrs	r0, r1, #1
 8028524:	ea42 71c1 	orr.w	r1, r2, r1, lsl #31
 8028528:	0c0b      	lsrs	r3, r1, #16
 802852a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 802852e:	b28a      	uxth	r2, r1
 8028530:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8028534:	fbb3 f1f6 	udiv	r1, r3, r6
 8028538:	07e4      	lsls	r4, r4, #31
 802853a:	46b4      	mov	ip, r6
 802853c:	4637      	mov	r7, r6
 802853e:	46b6      	mov	lr, r6
 8028540:	231f      	movs	r3, #31
 8028542:	fbb0 f0f6 	udiv	r0, r0, r6
 8028546:	1bd2      	subs	r2, r2, r7
 8028548:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 802854c:	e761      	b.n	8028412 <__udivmoddi4+0xf6>
 802854e:	4661      	mov	r1, ip
 8028550:	e714      	b.n	802837c <__udivmoddi4+0x60>
 8028552:	4610      	mov	r0, r2
 8028554:	e728      	b.n	80283a8 <__udivmoddi4+0x8c>
 8028556:	f1c3 0120 	rsb	r1, r3, #32
 802855a:	fa20 f201 	lsr.w	r2, r0, r1
 802855e:	409e      	lsls	r6, r3
 8028560:	fa27 f101 	lsr.w	r1, r7, r1
 8028564:	409f      	lsls	r7, r3
 8028566:	433a      	orrs	r2, r7
 8028568:	ea4f 4e16 	mov.w	lr, r6, lsr #16
 802856c:	fa1f fc86 	uxth.w	ip, r6
 8028570:	fbb1 f7fe 	udiv	r7, r1, lr
 8028574:	fb0e 1017 	mls	r0, lr, r7, r1
 8028578:	0c11      	lsrs	r1, r2, #16
 802857a:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 802857e:	fb07 f80c 	mul.w	r8, r7, ip
 8028582:	4588      	cmp	r8, r1
 8028584:	fa04 f403 	lsl.w	r4, r4, r3
 8028588:	d93a      	bls.n	8028600 <__udivmoddi4+0x2e4>
 802858a:	1871      	adds	r1, r6, r1
 802858c:	f107 30ff 	add.w	r0, r7, #4294967295	@ 0xffffffff
 8028590:	d201      	bcs.n	8028596 <__udivmoddi4+0x27a>
 8028592:	4588      	cmp	r8, r1
 8028594:	d81f      	bhi.n	80285d6 <__udivmoddi4+0x2ba>
 8028596:	eba1 0108 	sub.w	r1, r1, r8
 802859a:	fbb1 f8fe 	udiv	r8, r1, lr
 802859e:	fb08 f70c 	mul.w	r7, r8, ip
 80285a2:	fb0e 1118 	mls	r1, lr, r8, r1
 80285a6:	b292      	uxth	r2, r2
 80285a8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80285ac:	42ba      	cmp	r2, r7
 80285ae:	d22f      	bcs.n	8028610 <__udivmoddi4+0x2f4>
 80285b0:	18b2      	adds	r2, r6, r2
 80285b2:	f108 31ff 	add.w	r1, r8, #4294967295	@ 0xffffffff
 80285b6:	d2c6      	bcs.n	8028546 <__udivmoddi4+0x22a>
 80285b8:	42ba      	cmp	r2, r7
 80285ba:	d2c4      	bcs.n	8028546 <__udivmoddi4+0x22a>
 80285bc:	f1a8 0102 	sub.w	r1, r8, #2
 80285c0:	4432      	add	r2, r6
 80285c2:	e7c0      	b.n	8028546 <__udivmoddi4+0x22a>
 80285c4:	45f0      	cmp	r8, lr
 80285c6:	d29c      	bcs.n	8028502 <__udivmoddi4+0x1e6>
 80285c8:	ebbe 0302 	subs.w	r3, lr, r2
 80285cc:	eb67 070c 	sbc.w	r7, r7, ip
 80285d0:	3801      	subs	r0, #1
 80285d2:	46b9      	mov	r9, r7
 80285d4:	e795      	b.n	8028502 <__udivmoddi4+0x1e6>
 80285d6:	eba6 0808 	sub.w	r8, r6, r8
 80285da:	4441      	add	r1, r8
 80285dc:	1eb8      	subs	r0, r7, #2
 80285de:	fbb1 f8fe 	udiv	r8, r1, lr
 80285e2:	fb08 f70c 	mul.w	r7, r8, ip
 80285e6:	e7dc      	b.n	80285a2 <__udivmoddi4+0x286>
 80285e8:	463b      	mov	r3, r7
 80285ea:	e77f      	b.n	80284ec <__udivmoddi4+0x1d0>
 80285ec:	4650      	mov	r0, sl
 80285ee:	e767      	b.n	80284c0 <__udivmoddi4+0x1a4>
 80285f0:	4608      	mov	r0, r1
 80285f2:	e6fb      	b.n	80283ec <__udivmoddi4+0xd0>
 80285f4:	4434      	add	r4, r6
 80285f6:	3802      	subs	r0, #2
 80285f8:	e732      	b.n	8028460 <__udivmoddi4+0x144>
 80285fa:	3f02      	subs	r7, #2
 80285fc:	4432      	add	r2, r6
 80285fe:	e71b      	b.n	8028438 <__udivmoddi4+0x11c>
 8028600:	eba1 0108 	sub.w	r1, r1, r8
 8028604:	4638      	mov	r0, r7
 8028606:	fbb1 f8fe 	udiv	r8, r1, lr
 802860a:	fb08 f70c 	mul.w	r7, r8, ip
 802860e:	e7c8      	b.n	80285a2 <__udivmoddi4+0x286>
 8028610:	4641      	mov	r1, r8
 8028612:	e798      	b.n	8028546 <__udivmoddi4+0x22a>

08028614 <selfrel_offset31>:
 8028614:	6803      	ldr	r3, [r0, #0]
 8028616:	005a      	lsls	r2, r3, #1
 8028618:	bf4c      	ite	mi
 802861a:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 802861e:	f023 4300 	bicpl.w	r3, r3, #2147483648	@ 0x80000000
 8028622:	4418      	add	r0, r3
 8028624:	4770      	bx	lr
 8028626:	bf00      	nop

08028628 <search_EIT_table>:
 8028628:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802862c:	b359      	cbz	r1, 8028686 <search_EIT_table+0x5e>
 802862e:	f101 38ff 	add.w	r8, r1, #4294967295	@ 0xffffffff
 8028632:	4605      	mov	r5, r0
 8028634:	4616      	mov	r6, r2
 8028636:	4647      	mov	r7, r8
 8028638:	f04f 0a00 	mov.w	sl, #0
 802863c:	eb0a 0107 	add.w	r1, sl, r7
 8028640:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8028644:	1049      	asrs	r1, r1, #1
 8028646:	eb05 09c1 	add.w	r9, r5, r1, lsl #3
 802864a:	4648      	mov	r0, r9
 802864c:	f7ff ffe2 	bl	8028614 <selfrel_offset31>
 8028650:	4588      	cmp	r8, r1
 8028652:	ea4f 04c1 	mov.w	r4, r1, lsl #3
 8028656:	4603      	mov	r3, r0
 8028658:	d010      	beq.n	802867c <search_EIT_table+0x54>
 802865a:	f104 0008 	add.w	r0, r4, #8
 802865e:	42b3      	cmp	r3, r6
 8028660:	4428      	add	r0, r5
 8028662:	d807      	bhi.n	8028674 <search_EIT_table+0x4c>
 8028664:	f7ff ffd6 	bl	8028614 <selfrel_offset31>
 8028668:	3801      	subs	r0, #1
 802866a:	42b0      	cmp	r0, r6
 802866c:	d208      	bcs.n	8028680 <search_EIT_table+0x58>
 802866e:	f101 0a01 	add.w	sl, r1, #1
 8028672:	e7e3      	b.n	802863c <search_EIT_table+0x14>
 8028674:	458a      	cmp	sl, r1
 8028676:	d006      	beq.n	8028686 <search_EIT_table+0x5e>
 8028678:	1e4f      	subs	r7, r1, #1
 802867a:	e7df      	b.n	802863c <search_EIT_table+0x14>
 802867c:	42b0      	cmp	r0, r6
 802867e:	d8f9      	bhi.n	8028674 <search_EIT_table+0x4c>
 8028680:	4648      	mov	r0, r9
 8028682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028686:	f04f 0900 	mov.w	r9, #0
 802868a:	4648      	mov	r0, r9
 802868c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08028690 <__gnu_unwind_get_pr_addr>:
 8028690:	2801      	cmp	r0, #1
 8028692:	d006      	beq.n	80286a2 <__gnu_unwind_get_pr_addr+0x12>
 8028694:	2802      	cmp	r0, #2
 8028696:	d002      	beq.n	802869e <__gnu_unwind_get_pr_addr+0xe>
 8028698:	b928      	cbnz	r0, 80286a6 <__gnu_unwind_get_pr_addr+0x16>
 802869a:	4804      	ldr	r0, [pc, #16]	@ (80286ac <__gnu_unwind_get_pr_addr+0x1c>)
 802869c:	4770      	bx	lr
 802869e:	4804      	ldr	r0, [pc, #16]	@ (80286b0 <__gnu_unwind_get_pr_addr+0x20>)
 80286a0:	4770      	bx	lr
 80286a2:	4804      	ldr	r0, [pc, #16]	@ (80286b4 <__gnu_unwind_get_pr_addr+0x24>)
 80286a4:	4770      	bx	lr
 80286a6:	2000      	movs	r0, #0
 80286a8:	4770      	bx	lr
 80286aa:	bf00      	nop
 80286ac:	08028d85 	.word	0x08028d85
 80286b0:	08028d95 	.word	0x08028d95
 80286b4:	08028d8d 	.word	0x08028d8d

080286b8 <get_eit_entry>:
 80286b8:	b530      	push	{r4, r5, lr}
 80286ba:	4b22      	ldr	r3, [pc, #136]	@ (8028744 <get_eit_entry+0x8c>)
 80286bc:	b083      	sub	sp, #12
 80286be:	4604      	mov	r4, r0
 80286c0:	1e8d      	subs	r5, r1, #2
 80286c2:	b343      	cbz	r3, 8028716 <get_eit_entry+0x5e>
 80286c4:	a901      	add	r1, sp, #4
 80286c6:	4628      	mov	r0, r5
 80286c8:	f3af 8000 	nop.w
 80286cc:	b1f0      	cbz	r0, 802870c <get_eit_entry+0x54>
 80286ce:	9901      	ldr	r1, [sp, #4]
 80286d0:	462a      	mov	r2, r5
 80286d2:	f7ff ffa9 	bl	8028628 <search_EIT_table>
 80286d6:	4601      	mov	r1, r0
 80286d8:	b1c0      	cbz	r0, 802870c <get_eit_entry+0x54>
 80286da:	f7ff ff9b 	bl	8028614 <selfrel_offset31>
 80286de:	684b      	ldr	r3, [r1, #4]
 80286e0:	64a0      	str	r0, [r4, #72]	@ 0x48
 80286e2:	2b01      	cmp	r3, #1
 80286e4:	d02b      	beq.n	802873e <get_eit_entry+0x86>
 80286e6:	2b00      	cmp	r3, #0
 80286e8:	f101 0004 	add.w	r0, r1, #4
 80286ec:	db25      	blt.n	802873a <get_eit_entry+0x82>
 80286ee:	f7ff ff91 	bl	8028614 <selfrel_offset31>
 80286f2:	2300      	movs	r3, #0
 80286f4:	6523      	str	r3, [r4, #80]	@ 0x50
 80286f6:	6803      	ldr	r3, [r0, #0]
 80286f8:	64e0      	str	r0, [r4, #76]	@ 0x4c
 80286fa:	2b00      	cmp	r3, #0
 80286fc:	db12      	blt.n	8028724 <get_eit_entry+0x6c>
 80286fe:	f7ff ff89 	bl	8028614 <selfrel_offset31>
 8028702:	4603      	mov	r3, r0
 8028704:	2000      	movs	r0, #0
 8028706:	6123      	str	r3, [r4, #16]
 8028708:	b003      	add	sp, #12
 802870a:	bd30      	pop	{r4, r5, pc}
 802870c:	2300      	movs	r3, #0
 802870e:	2009      	movs	r0, #9
 8028710:	6123      	str	r3, [r4, #16]
 8028712:	b003      	add	sp, #12
 8028714:	bd30      	pop	{r4, r5, pc}
 8028716:	4b0c      	ldr	r3, [pc, #48]	@ (8028748 <get_eit_entry+0x90>)
 8028718:	490c      	ldr	r1, [pc, #48]	@ (802874c <get_eit_entry+0x94>)
 802871a:	1ac9      	subs	r1, r1, r3
 802871c:	10c9      	asrs	r1, r1, #3
 802871e:	4618      	mov	r0, r3
 8028720:	9101      	str	r1, [sp, #4]
 8028722:	e7d5      	b.n	80286d0 <get_eit_entry+0x18>
 8028724:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8028728:	f7ff ffb2 	bl	8028690 <__gnu_unwind_get_pr_addr>
 802872c:	1e03      	subs	r3, r0, #0
 802872e:	bf0c      	ite	eq
 8028730:	2009      	moveq	r0, #9
 8028732:	2000      	movne	r0, #0
 8028734:	6123      	str	r3, [r4, #16]
 8028736:	b003      	add	sp, #12
 8028738:	bd30      	pop	{r4, r5, pc}
 802873a:	2301      	movs	r3, #1
 802873c:	e7da      	b.n	80286f4 <get_eit_entry+0x3c>
 802873e:	2300      	movs	r3, #0
 8028740:	2005      	movs	r0, #5
 8028742:	e7e0      	b.n	8028706 <get_eit_entry+0x4e>
 8028744:	00000000 	.word	0x00000000
 8028748:	08037e90 	.word	0x08037e90
 802874c:	08038970 	.word	0x08038970

08028750 <restore_non_core_regs>:
 8028750:	6803      	ldr	r3, [r0, #0]
 8028752:	07da      	lsls	r2, r3, #31
 8028754:	b510      	push	{r4, lr}
 8028756:	4604      	mov	r4, r0
 8028758:	d406      	bmi.n	8028768 <restore_non_core_regs+0x18>
 802875a:	079b      	lsls	r3, r3, #30
 802875c:	f100 0050 	add.w	r0, r0, #80	@ 0x50
 8028760:	d509      	bpl.n	8028776 <restore_non_core_regs+0x26>
 8028762:	f7d8 fafd 	bl	8000d60 <__gnu_Unwind_Restore_VFP_D>
 8028766:	6823      	ldr	r3, [r4, #0]
 8028768:	0759      	lsls	r1, r3, #29
 802876a:	d509      	bpl.n	8028780 <restore_non_core_regs+0x30>
 802876c:	071a      	lsls	r2, r3, #28
 802876e:	d50e      	bpl.n	802878e <restore_non_core_regs+0x3e>
 8028770:	06db      	lsls	r3, r3, #27
 8028772:	d513      	bpl.n	802879c <restore_non_core_regs+0x4c>
 8028774:	bd10      	pop	{r4, pc}
 8028776:	f7d8 faeb 	bl	8000d50 <__gnu_Unwind_Restore_VFP>
 802877a:	6823      	ldr	r3, [r4, #0]
 802877c:	0759      	lsls	r1, r3, #29
 802877e:	d4f5      	bmi.n	802876c <restore_non_core_regs+0x1c>
 8028780:	f104 00d8 	add.w	r0, r4, #216	@ 0xd8
 8028784:	f7d8 faf4 	bl	8000d70 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8028788:	6823      	ldr	r3, [r4, #0]
 802878a:	071a      	lsls	r2, r3, #28
 802878c:	d4f0      	bmi.n	8028770 <restore_non_core_regs+0x20>
 802878e:	f504 70ac 	add.w	r0, r4, #344	@ 0x158
 8028792:	f7d8 faf5 	bl	8000d80 <__gnu_Unwind_Restore_WMMXD>
 8028796:	6823      	ldr	r3, [r4, #0]
 8028798:	06db      	lsls	r3, r3, #27
 802879a:	d4eb      	bmi.n	8028774 <restore_non_core_regs+0x24>
 802879c:	f504 70ec 	add.w	r0, r4, #472	@ 0x1d8
 80287a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80287a4:	f7d8 bb30 	b.w	8000e08 <__gnu_Unwind_Restore_WMMXC>

080287a8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
 80287a8:	4603      	mov	r3, r0
 80287aa:	6800      	ldr	r0, [r0, #0]
 80287ac:	b100      	cbz	r0, 80287b0 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
 80287ae:	4418      	add	r0, r3
 80287b0:	4770      	bx	lr
 80287b2:	bf00      	nop

080287b4 <_Unwind_DebugHook>:
 80287b4:	4770      	bx	lr
 80287b6:	bf00      	nop

080287b8 <unwind_phase2>:
 80287b8:	b570      	push	{r4, r5, r6, lr}
 80287ba:	4604      	mov	r4, r0
 80287bc:	460e      	mov	r6, r1
 80287be:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 80287c0:	4620      	mov	r0, r4
 80287c2:	f7ff ff79 	bl	80286b8 <get_eit_entry>
 80287c6:	4605      	mov	r5, r0
 80287c8:	b988      	cbnz	r0, 80287ee <unwind_phase2+0x36>
 80287ca:	6c32      	ldr	r2, [r6, #64]	@ 0x40
 80287cc:	6162      	str	r2, [r4, #20]
 80287ce:	6923      	ldr	r3, [r4, #16]
 80287d0:	4632      	mov	r2, r6
 80287d2:	4621      	mov	r1, r4
 80287d4:	2001      	movs	r0, #1
 80287d6:	4798      	blx	r3
 80287d8:	2808      	cmp	r0, #8
 80287da:	d0f0      	beq.n	80287be <unwind_phase2+0x6>
 80287dc:	2807      	cmp	r0, #7
 80287de:	d106      	bne.n	80287ee <unwind_phase2+0x36>
 80287e0:	4628      	mov	r0, r5
 80287e2:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 80287e4:	f7ff ffe6 	bl	80287b4 <_Unwind_DebugHook>
 80287e8:	1d30      	adds	r0, r6, #4
 80287ea:	f7d8 faa5 	bl	8000d38 <__restore_core_regs>
 80287ee:	f7fa fc99 	bl	8023124 <abort>
 80287f2:	bf00      	nop

080287f4 <unwind_phase2_forced>:
 80287f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80287f8:	1d0d      	adds	r5, r1, #4
 80287fa:	f8d0 900c 	ldr.w	r9, [r0, #12]
 80287fe:	f8d0 a018 	ldr.w	sl, [r0, #24]
 8028802:	4607      	mov	r7, r0
 8028804:	4614      	mov	r4, r2
 8028806:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028808:	f5ad 7d77 	sub.w	sp, sp, #988	@ 0x3dc
 802880c:	f10d 0c0c 	add.w	ip, sp, #12
 8028810:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8028814:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028816:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 802881a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802881c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8028820:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028824:	ae02      	add	r6, sp, #8
 8028826:	f04f 0e00 	mov.w	lr, #0
 802882a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 802882e:	f50d 78f8 	add.w	r8, sp, #496	@ 0x1f0
 8028832:	f8c6 e000 	str.w	lr, [r6]
 8028836:	e021      	b.n	802887c <unwind_phase2_forced+0x88>
 8028838:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 802883a:	617b      	str	r3, [r7, #20]
 802883c:	f44f 72f4 	mov.w	r2, #488	@ 0x1e8
 8028840:	4631      	mov	r1, r6
 8028842:	4640      	mov	r0, r8
 8028844:	f7fc f821 	bl	802488a <memcpy>
 8028848:	693b      	ldr	r3, [r7, #16]
 802884a:	4642      	mov	r2, r8
 802884c:	4639      	mov	r1, r7
 802884e:	4658      	mov	r0, fp
 8028850:	4798      	blx	r3
 8028852:	f8d8 3038 	ldr.w	r3, [r8, #56]	@ 0x38
 8028856:	64b3      	str	r3, [r6, #72]	@ 0x48
 8028858:	4621      	mov	r1, r4
 802885a:	e9cd 6a00 	strd	r6, sl, [sp]
 802885e:	4605      	mov	r5, r0
 8028860:	463b      	mov	r3, r7
 8028862:	2001      	movs	r0, #1
 8028864:	463a      	mov	r2, r7
 8028866:	47c8      	blx	r9
 8028868:	4604      	mov	r4, r0
 802886a:	bb18      	cbnz	r0, 80288b4 <unwind_phase2_forced+0xc0>
 802886c:	f44f 72f4 	mov.w	r2, #488	@ 0x1e8
 8028870:	4641      	mov	r1, r8
 8028872:	4630      	mov	r0, r6
 8028874:	f7fc f809 	bl	802488a <memcpy>
 8028878:	2d08      	cmp	r5, #8
 802887a:	d119      	bne.n	80288b0 <unwind_phase2_forced+0xbc>
 802887c:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 802887e:	4638      	mov	r0, r7
 8028880:	f7ff ff1a 	bl	80286b8 <get_eit_entry>
 8028884:	3409      	adds	r4, #9
 8028886:	4605      	mov	r5, r0
 8028888:	fa5f fb84 	uxtb.w	fp, r4
 802888c:	2800      	cmp	r0, #0
 802888e:	d0d3      	beq.n	8028838 <unwind_phase2_forced+0x44>
 8028890:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8028892:	64b3      	str	r3, [r6, #72]	@ 0x48
 8028894:	463a      	mov	r2, r7
 8028896:	e9cd 6a00 	strd	r6, sl, [sp]
 802889a:	463b      	mov	r3, r7
 802889c:	f04b 0110 	orr.w	r1, fp, #16
 80288a0:	2001      	movs	r0, #1
 80288a2:	47c8      	blx	r9
 80288a4:	b930      	cbnz	r0, 80288b4 <unwind_phase2_forced+0xc0>
 80288a6:	4628      	mov	r0, r5
 80288a8:	f50d 7d77 	add.w	sp, sp, #988	@ 0x3dc
 80288ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80288b0:	2d07      	cmp	r5, #7
 80288b2:	d005      	beq.n	80288c0 <unwind_phase2_forced+0xcc>
 80288b4:	2509      	movs	r5, #9
 80288b6:	4628      	mov	r0, r5
 80288b8:	f50d 7d77 	add.w	sp, sp, #988	@ 0x3dc
 80288bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80288c0:	4620      	mov	r0, r4
 80288c2:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 80288c4:	f7ff ff76 	bl	80287b4 <_Unwind_DebugHook>
 80288c8:	a803      	add	r0, sp, #12
 80288ca:	f7d8 fa35 	bl	8000d38 <__restore_core_regs>
 80288ce:	bf00      	nop

080288d0 <__gnu_Unwind_RaiseException>:
 80288d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80288d2:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 80288d4:	b0fb      	sub	sp, #492	@ 0x1ec
 80288d6:	f101 0c04 	add.w	ip, r1, #4
 80288da:	640b      	str	r3, [r1, #64]	@ 0x40
 80288dc:	460f      	mov	r7, r1
 80288de:	4605      	mov	r5, r0
 80288e0:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80288e4:	ac01      	add	r4, sp, #4
 80288e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288e8:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80288ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288ee:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80288f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288f4:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 80288f8:	f04f 3eff 	mov.w	lr, #4294967295	@ 0xffffffff
 80288fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8028900:	466e      	mov	r6, sp
 8028902:	f8cd e000 	str.w	lr, [sp]
 8028906:	e006      	b.n	8028916 <__gnu_Unwind_RaiseException+0x46>
 8028908:	692b      	ldr	r3, [r5, #16]
 802890a:	4632      	mov	r2, r6
 802890c:	4629      	mov	r1, r5
 802890e:	4798      	blx	r3
 8028910:	2808      	cmp	r0, #8
 8028912:	4604      	mov	r4, r0
 8028914:	d108      	bne.n	8028928 <__gnu_Unwind_RaiseException+0x58>
 8028916:	6c31      	ldr	r1, [r6, #64]	@ 0x40
 8028918:	4628      	mov	r0, r5
 802891a:	f7ff fecd 	bl	80286b8 <get_eit_entry>
 802891e:	2800      	cmp	r0, #0
 8028920:	d0f2      	beq.n	8028908 <__gnu_Unwind_RaiseException+0x38>
 8028922:	2009      	movs	r0, #9
 8028924:	b07b      	add	sp, #492	@ 0x1ec
 8028926:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028928:	4630      	mov	r0, r6
 802892a:	f7ff ff11 	bl	8028750 <restore_non_core_regs>
 802892e:	2c06      	cmp	r4, #6
 8028930:	d1f7      	bne.n	8028922 <__gnu_Unwind_RaiseException+0x52>
 8028932:	4639      	mov	r1, r7
 8028934:	4628      	mov	r0, r5
 8028936:	f7ff ff3f 	bl	80287b8 <unwind_phase2>
 802893a:	bf00      	nop

0802893c <__gnu_Unwind_ForcedUnwind>:
 802893c:	60c1      	str	r1, [r0, #12]
 802893e:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8028940:	6182      	str	r2, [r0, #24]
 8028942:	6419      	str	r1, [r3, #64]	@ 0x40
 8028944:	2200      	movs	r2, #0
 8028946:	4619      	mov	r1, r3
 8028948:	f7ff bf54 	b.w	80287f4 <unwind_phase2_forced>

0802894c <__gnu_Unwind_Resume>:
 802894c:	b570      	push	{r4, r5, r6, lr}
 802894e:	68c6      	ldr	r6, [r0, #12]
 8028950:	6943      	ldr	r3, [r0, #20]
 8028952:	640b      	str	r3, [r1, #64]	@ 0x40
 8028954:	b9ae      	cbnz	r6, 8028982 <__gnu_Unwind_Resume+0x36>
 8028956:	6903      	ldr	r3, [r0, #16]
 8028958:	460a      	mov	r2, r1
 802895a:	4604      	mov	r4, r0
 802895c:	460d      	mov	r5, r1
 802895e:	4601      	mov	r1, r0
 8028960:	2002      	movs	r0, #2
 8028962:	4798      	blx	r3
 8028964:	2807      	cmp	r0, #7
 8028966:	d005      	beq.n	8028974 <__gnu_Unwind_Resume+0x28>
 8028968:	2808      	cmp	r0, #8
 802896a:	d10f      	bne.n	802898c <__gnu_Unwind_Resume+0x40>
 802896c:	4629      	mov	r1, r5
 802896e:	4620      	mov	r0, r4
 8028970:	f7ff ff22 	bl	80287b8 <unwind_phase2>
 8028974:	4630      	mov	r0, r6
 8028976:	6c29      	ldr	r1, [r5, #64]	@ 0x40
 8028978:	f7ff ff1c 	bl	80287b4 <_Unwind_DebugHook>
 802897c:	1d28      	adds	r0, r5, #4
 802897e:	f7d8 f9db 	bl	8000d38 <__restore_core_regs>
 8028982:	2201      	movs	r2, #1
 8028984:	f7ff ff36 	bl	80287f4 <unwind_phase2_forced>
 8028988:	f7fa fbcc 	bl	8023124 <abort>
 802898c:	f7fa fbca 	bl	8023124 <abort>

08028990 <__gnu_Unwind_Resume_or_Rethrow>:
 8028990:	68c2      	ldr	r2, [r0, #12]
 8028992:	b508      	push	{r3, lr}
 8028994:	b132      	cbz	r2, 80289a4 <__gnu_Unwind_Resume_or_Rethrow+0x14>
 8028996:	6bca      	ldr	r2, [r1, #60]	@ 0x3c
 8028998:	640a      	str	r2, [r1, #64]	@ 0x40
 802899a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802899e:	2200      	movs	r2, #0
 80289a0:	f7ff bf28 	b.w	80287f4 <unwind_phase2_forced>
 80289a4:	f7ff ff94 	bl	80288d0 <__gnu_Unwind_RaiseException>
 80289a8:	2009      	movs	r0, #9
 80289aa:	bd08      	pop	{r3, pc}

080289ac <_Unwind_Complete>:
 80289ac:	4770      	bx	lr
 80289ae:	bf00      	nop

080289b0 <_Unwind_VRS_Get>:
 80289b0:	2905      	cmp	r1, #5
 80289b2:	d815      	bhi.n	80289e0 <_Unwind_VRS_Get+0x30>
 80289b4:	e8df f001 	tbb	[pc, r1]
 80289b8:	0314030a 	.word	0x0314030a
 80289bc:	0503      	.short	0x0503
 80289be:	2001      	movs	r0, #1
 80289c0:	4770      	bx	lr
 80289c2:	9a00      	ldr	r2, [sp, #0]
 80289c4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80289c6:	6013      	str	r3, [r2, #0]
 80289c8:	2000      	movs	r0, #0
 80289ca:	4770      	bx	lr
 80289cc:	b943      	cbnz	r3, 80289e0 <_Unwind_VRS_Get+0x30>
 80289ce:	2a0f      	cmp	r2, #15
 80289d0:	d806      	bhi.n	80289e0 <_Unwind_VRS_Get+0x30>
 80289d2:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80289d6:	2000      	movs	r0, #0
 80289d8:	6853      	ldr	r3, [r2, #4]
 80289da:	9a00      	ldr	r2, [sp, #0]
 80289dc:	6013      	str	r3, [r2, #0]
 80289de:	4770      	bx	lr
 80289e0:	2002      	movs	r0, #2
 80289e2:	4770      	bx	lr

080289e4 <_Unwind_GetGR>:
 80289e4:	b500      	push	{lr}
 80289e6:	b085      	sub	sp, #20
 80289e8:	460a      	mov	r2, r1
 80289ea:	2300      	movs	r3, #0
 80289ec:	a903      	add	r1, sp, #12
 80289ee:	9100      	str	r1, [sp, #0]
 80289f0:	4619      	mov	r1, r3
 80289f2:	f7ff ffdd 	bl	80289b0 <_Unwind_VRS_Get>
 80289f6:	9803      	ldr	r0, [sp, #12]
 80289f8:	b005      	add	sp, #20
 80289fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80289fe:	bf00      	nop

08028a00 <_Unwind_VRS_Set>:
 8028a00:	2905      	cmp	r1, #5
 8028a02:	d815      	bhi.n	8028a30 <_Unwind_VRS_Set+0x30>
 8028a04:	e8df f001 	tbb	[pc, r1]
 8028a08:	0314030a 	.word	0x0314030a
 8028a0c:	0503      	.short	0x0503
 8028a0e:	2001      	movs	r0, #1
 8028a10:	4770      	bx	lr
 8028a12:	9b00      	ldr	r3, [sp, #0]
 8028a14:	681b      	ldr	r3, [r3, #0]
 8028a16:	6443      	str	r3, [r0, #68]	@ 0x44
 8028a18:	2000      	movs	r0, #0
 8028a1a:	4770      	bx	lr
 8028a1c:	b943      	cbnz	r3, 8028a30 <_Unwind_VRS_Set+0x30>
 8028a1e:	2a0f      	cmp	r2, #15
 8028a20:	d806      	bhi.n	8028a30 <_Unwind_VRS_Set+0x30>
 8028a22:	9b00      	ldr	r3, [sp, #0]
 8028a24:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8028a28:	681b      	ldr	r3, [r3, #0]
 8028a2a:	6053      	str	r3, [r2, #4]
 8028a2c:	2000      	movs	r0, #0
 8028a2e:	4770      	bx	lr
 8028a30:	2002      	movs	r0, #2
 8028a32:	4770      	bx	lr

08028a34 <_Unwind_SetGR>:
 8028a34:	b510      	push	{r4, lr}
 8028a36:	b084      	sub	sp, #16
 8028a38:	2300      	movs	r3, #0
 8028a3a:	ac03      	add	r4, sp, #12
 8028a3c:	9203      	str	r2, [sp, #12]
 8028a3e:	9400      	str	r4, [sp, #0]
 8028a40:	460a      	mov	r2, r1
 8028a42:	4619      	mov	r1, r3
 8028a44:	f7ff ffdc 	bl	8028a00 <_Unwind_VRS_Set>
 8028a48:	b004      	add	sp, #16
 8028a4a:	bd10      	pop	{r4, pc}

08028a4c <__gnu_Unwind_Backtrace>:
 8028a4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a50:	6bd3      	ldr	r3, [r2, #60]	@ 0x3c
 8028a52:	f5ad 7d10 	sub.w	sp, sp, #576	@ 0x240
 8028a56:	f102 0c04 	add.w	ip, r2, #4
 8028a5a:	6413      	str	r3, [r2, #64]	@ 0x40
 8028a5c:	4607      	mov	r7, r0
 8028a5e:	460e      	mov	r6, r1
 8028a60:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8028a64:	f10d 0e5c 	add.w	lr, sp, #92	@ 0x5c
 8028a68:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8028a6c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8028a70:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8028a74:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8028a78:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8028a7c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 8028a80:	ac16      	add	r4, sp, #88	@ 0x58
 8028a82:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
 8028a86:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 8028a8a:	466d      	mov	r5, sp
 8028a8c:	f8c4 8000 	str.w	r8, [r4]
 8028a90:	e010      	b.n	8028ab4 <__gnu_Unwind_Backtrace+0x68>
 8028a92:	f7ff ffcf 	bl	8028a34 <_Unwind_SetGR>
 8028a96:	4631      	mov	r1, r6
 8028a98:	4620      	mov	r0, r4
 8028a9a:	47b8      	blx	r7
 8028a9c:	4603      	mov	r3, r0
 8028a9e:	4622      	mov	r2, r4
 8028aa0:	2008      	movs	r0, #8
 8028aa2:	4629      	mov	r1, r5
 8028aa4:	b983      	cbnz	r3, 8028ac8 <__gnu_Unwind_Backtrace+0x7c>
 8028aa6:	692b      	ldr	r3, [r5, #16]
 8028aa8:	4798      	blx	r3
 8028aaa:	2805      	cmp	r0, #5
 8028aac:	4680      	mov	r8, r0
 8028aae:	d00d      	beq.n	8028acc <__gnu_Unwind_Backtrace+0x80>
 8028ab0:	2809      	cmp	r0, #9
 8028ab2:	d009      	beq.n	8028ac8 <__gnu_Unwind_Backtrace+0x7c>
 8028ab4:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8028ab6:	4628      	mov	r0, r5
 8028ab8:	f7ff fdfe 	bl	80286b8 <get_eit_entry>
 8028abc:	4603      	mov	r3, r0
 8028abe:	210c      	movs	r1, #12
 8028ac0:	462a      	mov	r2, r5
 8028ac2:	4620      	mov	r0, r4
 8028ac4:	2b00      	cmp	r3, #0
 8028ac6:	d0e4      	beq.n	8028a92 <__gnu_Unwind_Backtrace+0x46>
 8028ac8:	f04f 0809 	mov.w	r8, #9
 8028acc:	4620      	mov	r0, r4
 8028ace:	f7ff fe3f 	bl	8028750 <restore_non_core_regs>
 8028ad2:	4640      	mov	r0, r8
 8028ad4:	f50d 7d10 	add.w	sp, sp, #576	@ 0x240
 8028ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028adc <__gnu_unwind_pr_common>:
 8028adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028ae0:	4616      	mov	r6, r2
 8028ae2:	6cca      	ldr	r2, [r1, #76]	@ 0x4c
 8028ae4:	b089      	sub	sp, #36	@ 0x24
 8028ae6:	460d      	mov	r5, r1
 8028ae8:	f852 1b04 	ldr.w	r1, [r2], #4
 8028aec:	9206      	str	r2, [sp, #24]
 8028aee:	f000 0c03 	and.w	ip, r0, #3
 8028af2:	b1e3      	cbz	r3, 8028b2e <__gnu_unwind_pr_common+0x52>
 8028af4:	0c0c      	lsrs	r4, r1, #16
 8028af6:	f88d 401d 	strb.w	r4, [sp, #29]
 8028afa:	0409      	lsls	r1, r1, #16
 8028afc:	b2e4      	uxtb	r4, r4
 8028afe:	9105      	str	r1, [sp, #20]
 8028b00:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8028b04:	2102      	movs	r1, #2
 8028b06:	f88d 101c 	strb.w	r1, [sp, #28]
 8028b0a:	6d29      	ldr	r1, [r5, #80]	@ 0x50
 8028b0c:	f1bc 0f02 	cmp.w	ip, #2
 8028b10:	bf08      	it	eq
 8028b12:	6baa      	ldreq	r2, [r5, #56]	@ 0x38
 8028b14:	f011 0801 	ands.w	r8, r1, #1
 8028b18:	d00f      	beq.n	8028b3a <__gnu_unwind_pr_common+0x5e>
 8028b1a:	a905      	add	r1, sp, #20
 8028b1c:	4630      	mov	r0, r6
 8028b1e:	f000 fadf 	bl	80290e0 <__gnu_unwind_execute>
 8028b22:	2800      	cmp	r0, #0
 8028b24:	d139      	bne.n	8028b9a <__gnu_unwind_pr_common+0xbe>
 8028b26:	2008      	movs	r0, #8
 8028b28:	b009      	add	sp, #36	@ 0x24
 8028b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b2e:	0209      	lsls	r1, r1, #8
 8028b30:	9105      	str	r1, [sp, #20]
 8028b32:	f88d 301d 	strb.w	r3, [sp, #29]
 8028b36:	2103      	movs	r1, #3
 8028b38:	e7e5      	b.n	8028b06 <__gnu_unwind_pr_common+0x2a>
 8028b3a:	6817      	ldr	r7, [r2, #0]
 8028b3c:	2f00      	cmp	r7, #0
 8028b3e:	d0ec      	beq.n	8028b1a <__gnu_unwind_pr_common+0x3e>
 8028b40:	f000 0108 	and.w	r1, r0, #8
 8028b44:	9101      	str	r1, [sp, #4]
 8028b46:	46e3      	mov	fp, ip
 8028b48:	f8cd 8008 	str.w	r8, [sp, #8]
 8028b4c:	469a      	mov	sl, r3
 8028b4e:	f1ba 0f02 	cmp.w	sl, #2
 8028b52:	d026      	beq.n	8028ba2 <__gnu_unwind_pr_common+0xc6>
 8028b54:	8817      	ldrh	r7, [r2, #0]
 8028b56:	8854      	ldrh	r4, [r2, #2]
 8028b58:	f102 0904 	add.w	r9, r2, #4
 8028b5c:	6caa      	ldr	r2, [r5, #72]	@ 0x48
 8028b5e:	f024 0301 	bic.w	r3, r4, #1
 8028b62:	210f      	movs	r1, #15
 8028b64:	4630      	mov	r0, r6
 8028b66:	eb03 0802 	add.w	r8, r3, r2
 8028b6a:	f7ff ff3b 	bl	80289e4 <_Unwind_GetGR>
 8028b6e:	4580      	cmp	r8, r0
 8028b70:	d815      	bhi.n	8028b9e <__gnu_unwind_pr_common+0xc2>
 8028b72:	f027 0201 	bic.w	r2, r7, #1
 8028b76:	eb02 0308 	add.w	r3, r2, r8
 8028b7a:	4283      	cmp	r3, r0
 8028b7c:	bf94      	ite	ls
 8028b7e:	2300      	movls	r3, #0
 8028b80:	2301      	movhi	r3, #1
 8028b82:	0064      	lsls	r4, r4, #1
 8028b84:	f004 0402 	and.w	r4, r4, #2
 8028b88:	f007 0701 	and.w	r7, r7, #1
 8028b8c:	4327      	orrs	r7, r4
 8028b8e:	2f01      	cmp	r7, #1
 8028b90:	d00b      	beq.n	8028baa <__gnu_unwind_pr_common+0xce>
 8028b92:	2f02      	cmp	r7, #2
 8028b94:	d050      	beq.n	8028c38 <__gnu_unwind_pr_common+0x15c>
 8028b96:	2f00      	cmp	r7, #0
 8028b98:	d045      	beq.n	8028c26 <__gnu_unwind_pr_common+0x14a>
 8028b9a:	2009      	movs	r0, #9
 8028b9c:	e7c4      	b.n	8028b28 <__gnu_unwind_pr_common+0x4c>
 8028b9e:	2300      	movs	r3, #0
 8028ba0:	e7ef      	b.n	8028b82 <__gnu_unwind_pr_common+0xa6>
 8028ba2:	6854      	ldr	r4, [r2, #4]
 8028ba4:	f102 0908 	add.w	r9, r2, #8
 8028ba8:	e7d8      	b.n	8028b5c <__gnu_unwind_pr_common+0x80>
 8028baa:	f1bb 0f00 	cmp.w	fp, #0
 8028bae:	d173      	bne.n	8028c98 <__gnu_unwind_pr_common+0x1bc>
 8028bb0:	b1cb      	cbz	r3, 8028be6 <__gnu_unwind_pr_common+0x10a>
 8028bb2:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8028bb6:	f8d9 2000 	ldr.w	r2, [r9]
 8028bba:	1c99      	adds	r1, r3, #2
 8028bbc:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8028bc0:	d0eb      	beq.n	8028b9a <__gnu_unwind_pr_common+0xbe>
 8028bc2:	f105 0458 	add.w	r4, r5, #88	@ 0x58
 8028bc6:	3301      	adds	r3, #1
 8028bc8:	9404      	str	r4, [sp, #16]
 8028bca:	f000 80cc 	beq.w	8028d66 <__gnu_unwind_pr_common+0x28a>
 8028bce:	f109 0004 	add.w	r0, r9, #4
 8028bd2:	f7ff fde9 	bl	80287a8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 8028bd6:	ab04      	add	r3, sp, #16
 8028bd8:	4601      	mov	r1, r0
 8028bda:	4628      	mov	r0, r5
 8028bdc:	f7f9 fa78 	bl	80220d0 <__cxa_type_match>
 8028be0:	2800      	cmp	r0, #0
 8028be2:	f040 8097 	bne.w	8028d14 <__gnu_unwind_pr_common+0x238>
 8028be6:	f109 0208 	add.w	r2, r9, #8
 8028bea:	6817      	ldr	r7, [r2, #0]
 8028bec:	2f00      	cmp	r7, #0
 8028bee:	d1ae      	bne.n	8028b4e <__gnu_unwind_pr_common+0x72>
 8028bf0:	a905      	add	r1, sp, #20
 8028bf2:	4630      	mov	r0, r6
 8028bf4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028bf8:	f000 fa72 	bl	80290e0 <__gnu_unwind_execute>
 8028bfc:	2800      	cmp	r0, #0
 8028bfe:	d1cc      	bne.n	8028b9a <__gnu_unwind_pr_common+0xbe>
 8028c00:	f1b8 0f00 	cmp.w	r8, #0
 8028c04:	d08f      	beq.n	8028b26 <__gnu_unwind_pr_common+0x4a>
 8028c06:	210f      	movs	r1, #15
 8028c08:	4630      	mov	r0, r6
 8028c0a:	f7ff feeb 	bl	80289e4 <_Unwind_GetGR>
 8028c0e:	210e      	movs	r1, #14
 8028c10:	4602      	mov	r2, r0
 8028c12:	4630      	mov	r0, r6
 8028c14:	f7ff ff0e 	bl	8028a34 <_Unwind_SetGR>
 8028c18:	4a59      	ldr	r2, [pc, #356]	@ (8028d80 <__gnu_unwind_pr_common+0x2a4>)
 8028c1a:	210f      	movs	r1, #15
 8028c1c:	4630      	mov	r0, r6
 8028c1e:	f7ff ff09 	bl	8028a34 <_Unwind_SetGR>
 8028c22:	2007      	movs	r0, #7
 8028c24:	e780      	b.n	8028b28 <__gnu_unwind_pr_common+0x4c>
 8028c26:	f1bb 0f00 	cmp.w	fp, #0
 8028c2a:	d002      	beq.n	8028c32 <__gnu_unwind_pr_common+0x156>
 8028c2c:	2b00      	cmp	r3, #0
 8028c2e:	f040 8087 	bne.w	8028d40 <__gnu_unwind_pr_common+0x264>
 8028c32:	f109 0204 	add.w	r2, r9, #4
 8028c36:	e7d8      	b.n	8028bea <__gnu_unwind_pr_common+0x10e>
 8028c38:	f8d9 4000 	ldr.w	r4, [r9]
 8028c3c:	f024 4800 	bic.w	r8, r4, #2147483648	@ 0x80000000
 8028c40:	f1bb 0f00 	cmp.w	fp, #0
 8028c44:	d10f      	bne.n	8028c66 <__gnu_unwind_pr_common+0x18a>
 8028c46:	b12b      	cbz	r3, 8028c54 <__gnu_unwind_pr_common+0x178>
 8028c48:	9b01      	ldr	r3, [sp, #4]
 8028c4a:	2b00      	cmp	r3, #0
 8028c4c:	d03c      	beq.n	8028cc8 <__gnu_unwind_pr_common+0x1ec>
 8028c4e:	f1b8 0f00 	cmp.w	r8, #0
 8028c52:	d039      	beq.n	8028cc8 <__gnu_unwind_pr_common+0x1ec>
 8028c54:	2c00      	cmp	r4, #0
 8028c56:	da01      	bge.n	8028c5c <__gnu_unwind_pr_common+0x180>
 8028c58:	f109 0904 	add.w	r9, r9, #4
 8028c5c:	f108 0201 	add.w	r2, r8, #1
 8028c60:	eb09 0282 	add.w	r2, r9, r2, lsl #2
 8028c64:	e7c1      	b.n	8028bea <__gnu_unwind_pr_common+0x10e>
 8028c66:	210d      	movs	r1, #13
 8028c68:	4630      	mov	r0, r6
 8028c6a:	f7ff febb 	bl	80289e4 <_Unwind_GetGR>
 8028c6e:	6a2f      	ldr	r7, [r5, #32]
 8028c70:	4287      	cmp	r7, r0
 8028c72:	d1ef      	bne.n	8028c54 <__gnu_unwind_pr_common+0x178>
 8028c74:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8028c76:	4599      	cmp	r9, r3
 8028c78:	d1ec      	bne.n	8028c54 <__gnu_unwind_pr_common+0x178>
 8028c7a:	2400      	movs	r4, #0
 8028c7c:	2304      	movs	r3, #4
 8028c7e:	e9c5 430b 	strd	r4, r3, [r5, #44]	@ 0x2c
 8028c82:	444b      	add	r3, r9
 8028c84:	f8c5 8028 	str.w	r8, [r5, #40]	@ 0x28
 8028c88:	636b      	str	r3, [r5, #52]	@ 0x34
 8028c8a:	f8d9 3000 	ldr.w	r3, [r9]
 8028c8e:	42a3      	cmp	r3, r4
 8028c90:	db70      	blt.n	8028d74 <__gnu_unwind_pr_common+0x298>
 8028c92:	2301      	movs	r3, #1
 8028c94:	9302      	str	r3, [sp, #8]
 8028c96:	e7e1      	b.n	8028c5c <__gnu_unwind_pr_common+0x180>
 8028c98:	210d      	movs	r1, #13
 8028c9a:	4630      	mov	r0, r6
 8028c9c:	f7ff fea2 	bl	80289e4 <_Unwind_GetGR>
 8028ca0:	6a2c      	ldr	r4, [r5, #32]
 8028ca2:	4284      	cmp	r4, r0
 8028ca4:	d19f      	bne.n	8028be6 <__gnu_unwind_pr_common+0x10a>
 8028ca6:	6aab      	ldr	r3, [r5, #40]	@ 0x28
 8028ca8:	4599      	cmp	r9, r3
 8028caa:	d19c      	bne.n	8028be6 <__gnu_unwind_pr_common+0x10a>
 8028cac:	4648      	mov	r0, r9
 8028cae:	f7ff fcb1 	bl	8028614 <selfrel_offset31>
 8028cb2:	210f      	movs	r1, #15
 8028cb4:	4602      	mov	r2, r0
 8028cb6:	4630      	mov	r0, r6
 8028cb8:	f7ff febc 	bl	8028a34 <_Unwind_SetGR>
 8028cbc:	462a      	mov	r2, r5
 8028cbe:	2100      	movs	r1, #0
 8028cc0:	4630      	mov	r0, r6
 8028cc2:	f7ff feb7 	bl	8028a34 <_Unwind_SetGR>
 8028cc6:	e7ac      	b.n	8028c22 <__gnu_unwind_pr_common+0x146>
 8028cc8:	f105 0358 	add.w	r3, r5, #88	@ 0x58
 8028ccc:	f8cd b00c 	str.w	fp, [sp, #12]
 8028cd0:	f109 0704 	add.w	r7, r9, #4
 8028cd4:	46b3      	mov	fp, r6
 8028cd6:	2400      	movs	r4, #0
 8028cd8:	461e      	mov	r6, r3
 8028cda:	e00b      	b.n	8028cf4 <__gnu_unwind_pr_common+0x218>
 8028cdc:	4638      	mov	r0, r7
 8028cde:	9604      	str	r6, [sp, #16]
 8028ce0:	f7ff fd62 	bl	80287a8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 8028ce4:	2200      	movs	r2, #0
 8028ce6:	4601      	mov	r1, r0
 8028ce8:	ab04      	add	r3, sp, #16
 8028cea:	4628      	mov	r0, r5
 8028cec:	f7f9 f9f0 	bl	80220d0 <__cxa_type_match>
 8028cf0:	3704      	adds	r7, #4
 8028cf2:	b9f8      	cbnz	r0, 8028d34 <__gnu_unwind_pr_common+0x258>
 8028cf4:	4544      	cmp	r4, r8
 8028cf6:	f104 0401 	add.w	r4, r4, #1
 8028cfa:	d1ef      	bne.n	8028cdc <__gnu_unwind_pr_common+0x200>
 8028cfc:	210d      	movs	r1, #13
 8028cfe:	4658      	mov	r0, fp
 8028d00:	f7ff fe70 	bl	80289e4 <_Unwind_GetGR>
 8028d04:	9b04      	ldr	r3, [sp, #16]
 8028d06:	f8c5 9028 	str.w	r9, [r5, #40]	@ 0x28
 8028d0a:	4602      	mov	r2, r0
 8028d0c:	e9c5 2308 	strd	r2, r3, [r5, #32]
 8028d10:	2006      	movs	r0, #6
 8028d12:	e709      	b.n	8028b28 <__gnu_unwind_pr_common+0x4c>
 8028d14:	4604      	mov	r4, r0
 8028d16:	210d      	movs	r1, #13
 8028d18:	4630      	mov	r0, r6
 8028d1a:	f7ff fe63 	bl	80289e4 <_Unwind_GetGR>
 8028d1e:	9e04      	ldr	r6, [sp, #16]
 8028d20:	6228      	str	r0, [r5, #32]
 8028d22:	2c02      	cmp	r4, #2
 8028d24:	bf04      	itt	eq
 8028d26:	62ee      	streq	r6, [r5, #44]	@ 0x2c
 8028d28:	f105 062c 	addeq.w	r6, r5, #44	@ 0x2c
 8028d2c:	e9c5 6909 	strd	r6, r9, [r5, #36]	@ 0x24
 8028d30:	2006      	movs	r0, #6
 8028d32:	e6f9      	b.n	8028b28 <__gnu_unwind_pr_common+0x4c>
 8028d34:	465e      	mov	r6, fp
 8028d36:	f8d9 4000 	ldr.w	r4, [r9]
 8028d3a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8028d3e:	e789      	b.n	8028c54 <__gnu_unwind_pr_common+0x178>
 8028d40:	4648      	mov	r0, r9
 8028d42:	f7ff fc67 	bl	8028614 <selfrel_offset31>
 8028d46:	f109 0304 	add.w	r3, r9, #4
 8028d4a:	4604      	mov	r4, r0
 8028d4c:	63ab      	str	r3, [r5, #56]	@ 0x38
 8028d4e:	4628      	mov	r0, r5
 8028d50:	f7f9 fa10 	bl	8022174 <__cxa_begin_cleanup>
 8028d54:	2800      	cmp	r0, #0
 8028d56:	f43f af20 	beq.w	8028b9a <__gnu_unwind_pr_common+0xbe>
 8028d5a:	4622      	mov	r2, r4
 8028d5c:	210f      	movs	r1, #15
 8028d5e:	4630      	mov	r0, r6
 8028d60:	f7ff fe68 	bl	8028a34 <_Unwind_SetGR>
 8028d64:	e75d      	b.n	8028c22 <__gnu_unwind_pr_common+0x146>
 8028d66:	4630      	mov	r0, r6
 8028d68:	210d      	movs	r1, #13
 8028d6a:	f7ff fe3b 	bl	80289e4 <_Unwind_GetGR>
 8028d6e:	4626      	mov	r6, r4
 8028d70:	6228      	str	r0, [r5, #32]
 8028d72:	e7db      	b.n	8028d2c <__gnu_unwind_pr_common+0x250>
 8028d74:	f108 0201 	add.w	r2, r8, #1
 8028d78:	eb09 0082 	add.w	r0, r9, r2, lsl #2
 8028d7c:	e797      	b.n	8028cae <__gnu_unwind_pr_common+0x1d2>
 8028d7e:	bf00      	nop
 8028d80:	08022d2b 	.word	0x08022d2b

08028d84 <__aeabi_unwind_cpp_pr0>:
 8028d84:	2300      	movs	r3, #0
 8028d86:	f7ff bea9 	b.w	8028adc <__gnu_unwind_pr_common>
 8028d8a:	bf00      	nop

08028d8c <__aeabi_unwind_cpp_pr1>:
 8028d8c:	2301      	movs	r3, #1
 8028d8e:	f7ff bea5 	b.w	8028adc <__gnu_unwind_pr_common>
 8028d92:	bf00      	nop

08028d94 <__aeabi_unwind_cpp_pr2>:
 8028d94:	2302      	movs	r3, #2
 8028d96:	f7ff bea1 	b.w	8028adc <__gnu_unwind_pr_common>
 8028d9a:	bf00      	nop

08028d9c <_Unwind_VRS_Pop>:
 8028d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028da0:	4606      	mov	r6, r0
 8028da2:	b0c4      	sub	sp, #272	@ 0x110
 8028da4:	4614      	mov	r4, r2
 8028da6:	2905      	cmp	r1, #5
 8028da8:	d808      	bhi.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028daa:	e8df f001 	tbb	[pc, r1]
 8028dae:	3016      	.short	0x3016
 8028db0:	0b987307 	.word	0x0b987307
 8028db4:	193a      	adds	r2, r7, r4
 8028db6:	2a10      	cmp	r2, #16
 8028db8:	f240 80b7 	bls.w	8028f2a <_Unwind_VRS_Pop+0x18e>
 8028dbc:	2002      	movs	r0, #2
 8028dbe:	b044      	add	sp, #272	@ 0x110
 8028dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028dc4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8028dc6:	2c00      	cmp	r4, #0
 8028dc8:	d1f8      	bne.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028dca:	f853 2b04 	ldr.w	r2, [r3], #4
 8028dce:	6442      	str	r2, [r0, #68]	@ 0x44
 8028dd0:	6383      	str	r3, [r0, #56]	@ 0x38
 8028dd2:	2000      	movs	r0, #0
 8028dd4:	b044      	add	sp, #272	@ 0x110
 8028dd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028dda:	2b00      	cmp	r3, #0
 8028ddc:	d1ee      	bne.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028dde:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 8028de0:	fa1f fc84 	uxth.w	ip, r4
 8028de4:	2001      	movs	r0, #1
 8028de6:	f106 0e04 	add.w	lr, r6, #4
 8028dea:	fa00 f103 	lsl.w	r1, r0, r3
 8028dee:	ea11 0f0c 	tst.w	r1, ip
 8028df2:	462a      	mov	r2, r5
 8028df4:	d004      	beq.n	8028e00 <_Unwind_VRS_Pop+0x64>
 8028df6:	f852 1b04 	ldr.w	r1, [r2], #4
 8028dfa:	f84e 1023 	str.w	r1, [lr, r3, lsl #2]
 8028dfe:	4615      	mov	r5, r2
 8028e00:	3301      	adds	r3, #1
 8028e02:	2b10      	cmp	r3, #16
 8028e04:	d1f1      	bne.n	8028dea <_Unwind_VRS_Pop+0x4e>
 8028e06:	04a0      	lsls	r0, r4, #18
 8028e08:	d4e3      	bmi.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028e0a:	63b5      	str	r5, [r6, #56]	@ 0x38
 8028e0c:	e7e1      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028e0e:	2b01      	cmp	r3, #1
 8028e10:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8028e14:	b2a4      	uxth	r4, r4
 8028e16:	d0cd      	beq.n	8028db4 <_Unwind_VRS_Pop+0x18>
 8028e18:	2b05      	cmp	r3, #5
 8028e1a:	d1cf      	bne.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028e1c:	eb07 0804 	add.w	r8, r7, r4
 8028e20:	f1b8 0f20 	cmp.w	r8, #32
 8028e24:	d8ca      	bhi.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028e26:	2f0f      	cmp	r7, #15
 8028e28:	f240 80bd 	bls.w	8028fa6 <_Unwind_VRS_Pop+0x20a>
 8028e2c:	2c00      	cmp	r4, #0
 8028e2e:	d0d0      	beq.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028e30:	6802      	ldr	r2, [r0, #0]
 8028e32:	0751      	lsls	r1, r2, #29
 8028e34:	46a0      	mov	r8, r4
 8028e36:	f100 811b 	bmi.w	8029070 <_Unwind_VRS_Pop+0x2d4>
 8028e3a:	9301      	str	r3, [sp, #4]
 8028e3c:	ac02      	add	r4, sp, #8
 8028e3e:	4620      	mov	r0, r4
 8028e40:	f7d7 ff9a 	bl	8000d78 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8028e44:	f8d6 c038 	ldr.w	ip, [r6, #56]	@ 0x38
 8028e48:	9b01      	ldr	r3, [sp, #4]
 8028e4a:	2f10      	cmp	r7, #16
 8028e4c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8028e50:	4639      	mov	r1, r7
 8028e52:	f04f 0e02 	mov.w	lr, #2
 8028e56:	bf38      	it	cc
 8028e58:	2110      	movcc	r1, #16
 8028e5a:	fb18 2e0e 	smlabb	lr, r8, lr, r2
 8028e5e:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8028e62:	3984      	subs	r1, #132	@ 0x84
 8028e64:	4672      	mov	r2, lr
 8028e66:	4660      	mov	r0, ip
 8028e68:	f850 5b04 	ldr.w	r5, [r0], #4
 8028e6c:	f841 5f04 	str.w	r5, [r1, #4]!
 8028e70:	3a01      	subs	r2, #1
 8028e72:	1c55      	adds	r5, r2, #1
 8028e74:	d1f8      	bne.n	8028e68 <_Unwind_VRS_Pop+0xcc>
 8028e76:	f10c 0c04 	add.w	ip, ip, #4
 8028e7a:	2b01      	cmp	r3, #1
 8028e7c:	eb0c 028e 	add.w	r2, ip, lr, lsl #2
 8028e80:	f000 80d5 	beq.w	802902e <_Unwind_VRS_Pop+0x292>
 8028e84:	2f0f      	cmp	r7, #15
 8028e86:	63b2      	str	r2, [r6, #56]	@ 0x38
 8028e88:	f240 80fa 	bls.w	8029080 <_Unwind_VRS_Pop+0x2e4>
 8028e8c:	4620      	mov	r0, r4
 8028e8e:	f7d7 ff6f 	bl	8000d70 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8028e92:	e79e      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028e94:	2b03      	cmp	r3, #3
 8028e96:	d191      	bne.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028e98:	b2a7      	uxth	r7, r4
 8028e9a:	eb07 4314 	add.w	r3, r7, r4, lsr #16
 8028e9e:	2b10      	cmp	r3, #16
 8028ea0:	ea4f 4414 	mov.w	r4, r4, lsr #16
 8028ea4:	d88a      	bhi.n	8028dbc <_Unwind_VRS_Pop+0x20>
 8028ea6:	6803      	ldr	r3, [r0, #0]
 8028ea8:	0719      	lsls	r1, r3, #28
 8028eaa:	f100 80a3 	bmi.w	8028ff4 <_Unwind_VRS_Pop+0x258>
 8028eae:	ad22      	add	r5, sp, #136	@ 0x88
 8028eb0:	4628      	mov	r0, r5
 8028eb2:	f7d7 ff87 	bl	8000dc4 <__gnu_Unwind_Save_WMMXD>
 8028eb6:	007a      	lsls	r2, r7, #1
 8028eb8:	6bb0      	ldr	r0, [r6, #56]	@ 0x38
 8028eba:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
 8028ebe:	1e53      	subs	r3, r2, #1
 8028ec0:	b142      	cbz	r2, 8028ed4 <_Unwind_VRS_Pop+0x138>
 8028ec2:	1b01      	subs	r1, r0, r4
 8028ec4:	5862      	ldr	r2, [r4, r1]
 8028ec6:	f844 2b04 	str.w	r2, [r4], #4
 8028eca:	3b01      	subs	r3, #1
 8028ecc:	1c5a      	adds	r2, r3, #1
 8028ece:	d1f9      	bne.n	8028ec4 <_Unwind_VRS_Pop+0x128>
 8028ed0:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
 8028ed4:	63b0      	str	r0, [r6, #56]	@ 0x38
 8028ed6:	4628      	mov	r0, r5
 8028ed8:	f7d7 ff52 	bl	8000d80 <__gnu_Unwind_Restore_WMMXD>
 8028edc:	e779      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028ede:	2b00      	cmp	r3, #0
 8028ee0:	f47f af6c 	bne.w	8028dbc <_Unwind_VRS_Pop+0x20>
 8028ee4:	2c10      	cmp	r4, #16
 8028ee6:	f63f af69 	bhi.w	8028dbc <_Unwind_VRS_Pop+0x20>
 8028eea:	6803      	ldr	r3, [r0, #0]
 8028eec:	06d8      	lsls	r0, r3, #27
 8028eee:	d479      	bmi.n	8028fe4 <_Unwind_VRS_Pop+0x248>
 8028ef0:	ad22      	add	r5, sp, #136	@ 0x88
 8028ef2:	4628      	mov	r0, r5
 8028ef4:	f7d7 ff92 	bl	8000e1c <__gnu_Unwind_Save_WMMXC>
 8028ef8:	6bb7      	ldr	r7, [r6, #56]	@ 0x38
 8028efa:	4629      	mov	r1, r5
 8028efc:	2300      	movs	r3, #0
 8028efe:	f04f 0c01 	mov.w	ip, #1
 8028f02:	fa0c f203 	lsl.w	r2, ip, r3
 8028f06:	4222      	tst	r2, r4
 8028f08:	4638      	mov	r0, r7
 8028f0a:	f103 0301 	add.w	r3, r3, #1
 8028f0e:	d003      	beq.n	8028f18 <_Unwind_VRS_Pop+0x17c>
 8028f10:	f850 2b04 	ldr.w	r2, [r0], #4
 8028f14:	600a      	str	r2, [r1, #0]
 8028f16:	4607      	mov	r7, r0
 8028f18:	2b04      	cmp	r3, #4
 8028f1a:	f101 0104 	add.w	r1, r1, #4
 8028f1e:	d1f0      	bne.n	8028f02 <_Unwind_VRS_Pop+0x166>
 8028f20:	63b7      	str	r7, [r6, #56]	@ 0x38
 8028f22:	4628      	mov	r0, r5
 8028f24:	f7d7 ff70 	bl	8000e08 <__gnu_Unwind_Restore_WMMXC>
 8028f28:	e753      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028f2a:	2f10      	cmp	r7, #16
 8028f2c:	f43f af46 	beq.w	8028dbc <_Unwind_VRS_Pop+0x20>
 8028f30:	6802      	ldr	r2, [r0, #0]
 8028f32:	07d1      	lsls	r1, r2, #31
 8028f34:	d508      	bpl.n	8028f48 <_Unwind_VRS_Pop+0x1ac>
 8028f36:	4630      	mov	r0, r6
 8028f38:	f022 0203 	bic.w	r2, r2, #3
 8028f3c:	f840 2b50 	str.w	r2, [r0], #80
 8028f40:	9301      	str	r3, [sp, #4]
 8028f42:	f7d7 ff09 	bl	8000d58 <__gnu_Unwind_Save_VFP>
 8028f46:	9b01      	ldr	r3, [sp, #4]
 8028f48:	9301      	str	r3, [sp, #4]
 8028f4a:	ad22      	add	r5, sp, #136	@ 0x88
 8028f4c:	4628      	mov	r0, r5
 8028f4e:	f7d7 ff03 	bl	8000d58 <__gnu_Unwind_Save_VFP>
 8028f52:	f8d6 c038 	ldr.w	ip, [r6, #56]	@ 0x38
 8028f56:	2c00      	cmp	r4, #0
 8028f58:	d06b      	beq.n	8029032 <_Unwind_VRS_Pop+0x296>
 8028f5a:	9b01      	ldr	r3, [sp, #4]
 8028f5c:	f04f 0800 	mov.w	r8, #0
 8028f60:	2102      	movs	r1, #2
 8028f62:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8028f66:	fb14 2e01 	smlabb	lr, r4, r1, r2
 8028f6a:	eb05 01c7 	add.w	r1, r5, r7, lsl #3
 8028f6e:	3904      	subs	r1, #4
 8028f70:	4672      	mov	r2, lr
 8028f72:	4660      	mov	r0, ip
 8028f74:	f850 4b04 	ldr.w	r4, [r0], #4
 8028f78:	f841 4f04 	str.w	r4, [r1, #4]!
 8028f7c:	3a01      	subs	r2, #1
 8028f7e:	1c54      	adds	r4, r2, #1
 8028f80:	d1f8      	bne.n	8028f74 <_Unwind_VRS_Pop+0x1d8>
 8028f82:	f10c 0c04 	add.w	ip, ip, #4
 8028f86:	eb0c 0c8e 	add.w	ip, ip, lr, lsl #2
 8028f8a:	f1b8 0f00 	cmp.w	r8, #0
 8028f8e:	d139      	bne.n	8029004 <_Unwind_VRS_Pop+0x268>
 8028f90:	2b01      	cmp	r3, #1
 8028f92:	d04e      	beq.n	8029032 <_Unwind_VRS_Pop+0x296>
 8028f94:	2f0f      	cmp	r7, #15
 8028f96:	f8c6 c038 	str.w	ip, [r6, #56]	@ 0x38
 8028f9a:	f63f af1a 	bhi.w	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028f9e:	4628      	mov	r0, r5
 8028fa0:	f7d7 fede 	bl	8000d60 <__gnu_Unwind_Restore_VFP_D>
 8028fa4:	e715      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8028fa6:	6802      	ldr	r2, [r0, #0]
 8028fa8:	f1b8 0f10 	cmp.w	r8, #16
 8028fac:	f002 0101 	and.w	r1, r2, #1
 8028fb0:	d82a      	bhi.n	8029008 <_Unwind_VRS_Pop+0x26c>
 8028fb2:	b151      	cbz	r1, 8028fca <_Unwind_VRS_Pop+0x22e>
 8028fb4:	4630      	mov	r0, r6
 8028fb6:	f022 0201 	bic.w	r2, r2, #1
 8028fba:	f042 0202 	orr.w	r2, r2, #2
 8028fbe:	f840 2b50 	str.w	r2, [r0], #80
 8028fc2:	9301      	str	r3, [sp, #4]
 8028fc4:	f7d7 fed0 	bl	8000d68 <__gnu_Unwind_Save_VFP_D>
 8028fc8:	9b01      	ldr	r3, [sp, #4]
 8028fca:	9301      	str	r3, [sp, #4]
 8028fcc:	ad22      	add	r5, sp, #136	@ 0x88
 8028fce:	4628      	mov	r0, r5
 8028fd0:	f7d7 feca 	bl	8000d68 <__gnu_Unwind_Save_VFP_D>
 8028fd4:	9b01      	ldr	r3, [sp, #4]
 8028fd6:	2c00      	cmp	r4, #0
 8028fd8:	d0e1      	beq.n	8028f9e <_Unwind_VRS_Pop+0x202>
 8028fda:	f8d6 c038 	ldr.w	ip, [r6, #56]	@ 0x38
 8028fde:	f04f 0800 	mov.w	r8, #0
 8028fe2:	e7bd      	b.n	8028f60 <_Unwind_VRS_Pop+0x1c4>
 8028fe4:	f023 0310 	bic.w	r3, r3, #16
 8028fe8:	6033      	str	r3, [r6, #0]
 8028fea:	f506 70ec 	add.w	r0, r6, #472	@ 0x1d8
 8028fee:	f7d7 ff15 	bl	8000e1c <__gnu_Unwind_Save_WMMXC>
 8028ff2:	e77d      	b.n	8028ef0 <_Unwind_VRS_Pop+0x154>
 8028ff4:	f023 0308 	bic.w	r3, r3, #8
 8028ff8:	6003      	str	r3, [r0, #0]
 8028ffa:	f500 70ac 	add.w	r0, r0, #344	@ 0x158
 8028ffe:	f7d7 fee1 	bl	8000dc4 <__gnu_Unwind_Save_WMMXD>
 8029002:	e754      	b.n	8028eae <_Unwind_VRS_Pop+0x112>
 8029004:	ac02      	add	r4, sp, #8
 8029006:	e720      	b.n	8028e4a <_Unwind_VRS_Pop+0xae>
 8029008:	b9d1      	cbnz	r1, 8029040 <_Unwind_VRS_Pop+0x2a4>
 802900a:	0755      	lsls	r5, r2, #29
 802900c:	d426      	bmi.n	802905c <_Unwind_VRS_Pop+0x2c0>
 802900e:	ad22      	add	r5, sp, #136	@ 0x88
 8029010:	4628      	mov	r0, r5
 8029012:	9301      	str	r3, [sp, #4]
 8029014:	f7d7 fea8 	bl	8000d68 <__gnu_Unwind_Save_VFP_D>
 8029018:	a802      	add	r0, sp, #8
 802901a:	f7d7 fead 	bl	8000d78 <__gnu_Unwind_Save_VFP_D_16_to_31>
 802901e:	f1a8 0810 	sub.w	r8, r8, #16
 8029022:	f8d6 c038 	ldr.w	ip, [r6, #56]	@ 0x38
 8029026:	9b01      	ldr	r3, [sp, #4]
 8029028:	f1c7 0410 	rsb	r4, r7, #16
 802902c:	e798      	b.n	8028f60 <_Unwind_VRS_Pop+0x1c4>
 802902e:	4694      	mov	ip, r2
 8029030:	ad22      	add	r5, sp, #136	@ 0x88
 8029032:	f10c 0304 	add.w	r3, ip, #4
 8029036:	63b3      	str	r3, [r6, #56]	@ 0x38
 8029038:	4628      	mov	r0, r5
 802903a:	f7d7 fe89 	bl	8000d50 <__gnu_Unwind_Restore_VFP>
 802903e:	e6c8      	b.n	8028dd2 <_Unwind_VRS_Pop+0x36>
 8029040:	f022 0201 	bic.w	r2, r2, #1
 8029044:	f042 0202 	orr.w	r2, r2, #2
 8029048:	f840 2b50 	str.w	r2, [r0], #80
 802904c:	9301      	str	r3, [sp, #4]
 802904e:	f7d7 fe8b 	bl	8000d68 <__gnu_Unwind_Save_VFP_D>
 8029052:	6832      	ldr	r2, [r6, #0]
 8029054:	9b01      	ldr	r3, [sp, #4]
 8029056:	f012 0f04 	tst.w	r2, #4
 802905a:	d0d8      	beq.n	802900e <_Unwind_VRS_Pop+0x272>
 802905c:	4630      	mov	r0, r6
 802905e:	f022 0204 	bic.w	r2, r2, #4
 8029062:	f840 2bd8 	str.w	r2, [r0], #216
 8029066:	9301      	str	r3, [sp, #4]
 8029068:	f7d7 fe86 	bl	8000d78 <__gnu_Unwind_Save_VFP_D_16_to_31>
 802906c:	9b01      	ldr	r3, [sp, #4]
 802906e:	e7ce      	b.n	802900e <_Unwind_VRS_Pop+0x272>
 8029070:	f022 0204 	bic.w	r2, r2, #4
 8029074:	f840 2bd8 	str.w	r2, [r0], #216
 8029078:	9301      	str	r3, [sp, #4]
 802907a:	f7d7 fe7d 	bl	8000d78 <__gnu_Unwind_Save_VFP_D_16_to_31>
 802907e:	e6dd      	b.n	8028e3c <_Unwind_VRS_Pop+0xa0>
 8029080:	a822      	add	r0, sp, #136	@ 0x88
 8029082:	f7d7 fe6d 	bl	8000d60 <__gnu_Unwind_Restore_VFP_D>
 8029086:	e701      	b.n	8028e8c <_Unwind_VRS_Pop+0xf0>

08029088 <next_unwind_byte>:
 8029088:	7a02      	ldrb	r2, [r0, #8]
 802908a:	4603      	mov	r3, r0
 802908c:	b97a      	cbnz	r2, 80290ae <next_unwind_byte+0x26>
 802908e:	7a42      	ldrb	r2, [r0, #9]
 8029090:	b1a2      	cbz	r2, 80290bc <next_unwind_byte+0x34>
 8029092:	6841      	ldr	r1, [r0, #4]
 8029094:	3a01      	subs	r2, #1
 8029096:	b410      	push	{r4}
 8029098:	7242      	strb	r2, [r0, #9]
 802909a:	6808      	ldr	r0, [r1, #0]
 802909c:	2203      	movs	r2, #3
 802909e:	1d0c      	adds	r4, r1, #4
 80290a0:	721a      	strb	r2, [r3, #8]
 80290a2:	0202      	lsls	r2, r0, #8
 80290a4:	605c      	str	r4, [r3, #4]
 80290a6:	0e00      	lsrs	r0, r0, #24
 80290a8:	bc10      	pop	{r4}
 80290aa:	601a      	str	r2, [r3, #0]
 80290ac:	4770      	bx	lr
 80290ae:	6800      	ldr	r0, [r0, #0]
 80290b0:	3a01      	subs	r2, #1
 80290b2:	721a      	strb	r2, [r3, #8]
 80290b4:	0202      	lsls	r2, r0, #8
 80290b6:	601a      	str	r2, [r3, #0]
 80290b8:	0e00      	lsrs	r0, r0, #24
 80290ba:	4770      	bx	lr
 80290bc:	20b0      	movs	r0, #176	@ 0xb0
 80290be:	4770      	bx	lr

080290c0 <_Unwind_GetGR.constprop.0>:
 80290c0:	b500      	push	{lr}
 80290c2:	b085      	sub	sp, #20
 80290c4:	aa03      	add	r2, sp, #12
 80290c6:	2300      	movs	r3, #0
 80290c8:	9200      	str	r2, [sp, #0]
 80290ca:	4619      	mov	r1, r3
 80290cc:	220c      	movs	r2, #12
 80290ce:	f7ff fc6f 	bl	80289b0 <_Unwind_VRS_Get>
 80290d2:	9803      	ldr	r0, [sp, #12]
 80290d4:	b005      	add	sp, #20
 80290d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80290da:	bf00      	nop

080290dc <unwind_UCB_from_context>:
 80290dc:	f7ff bff0 	b.w	80290c0 <_Unwind_GetGR.constprop.0>

080290e0 <__gnu_unwind_execute>:
 80290e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80290e4:	4606      	mov	r6, r0
 80290e6:	b085      	sub	sp, #20
 80290e8:	460d      	mov	r5, r1
 80290ea:	2700      	movs	r7, #0
 80290ec:	4628      	mov	r0, r5
 80290ee:	f7ff ffcb 	bl	8029088 <next_unwind_byte>
 80290f2:	28b0      	cmp	r0, #176	@ 0xb0
 80290f4:	4604      	mov	r4, r0
 80290f6:	f000 8121 	beq.w	802933c <__gnu_unwind_execute+0x25c>
 80290fa:	0603      	lsls	r3, r0, #24
 80290fc:	d55e      	bpl.n	80291bc <__gnu_unwind_execute+0xdc>
 80290fe:	f000 03f0 	and.w	r3, r0, #240	@ 0xf0
 8029102:	2ba0      	cmp	r3, #160	@ 0xa0
 8029104:	d01d      	beq.n	8029142 <__gnu_unwind_execute+0x62>
 8029106:	d833      	bhi.n	8029170 <__gnu_unwind_execute+0x90>
 8029108:	2b80      	cmp	r3, #128	@ 0x80
 802910a:	f000 8087 	beq.w	802921c <__gnu_unwind_execute+0x13c>
 802910e:	2b90      	cmp	r3, #144	@ 0x90
 8029110:	d12a      	bne.n	8029168 <__gnu_unwind_execute+0x88>
 8029112:	f000 030d 	and.w	r3, r0, #13
 8029116:	2b0d      	cmp	r3, #13
 8029118:	d026      	beq.n	8029168 <__gnu_unwind_execute+0x88>
 802911a:	f10d 0808 	add.w	r8, sp, #8
 802911e:	2300      	movs	r3, #0
 8029120:	f000 020f 	and.w	r2, r0, #15
 8029124:	4619      	mov	r1, r3
 8029126:	f8cd 8000 	str.w	r8, [sp]
 802912a:	4630      	mov	r0, r6
 802912c:	f7ff fc40 	bl	80289b0 <_Unwind_VRS_Get>
 8029130:	2300      	movs	r3, #0
 8029132:	f8cd 8000 	str.w	r8, [sp]
 8029136:	220d      	movs	r2, #13
 8029138:	4619      	mov	r1, r3
 802913a:	4630      	mov	r0, r6
 802913c:	f7ff fc60 	bl	8028a00 <_Unwind_VRS_Set>
 8029140:	e7d4      	b.n	80290ec <__gnu_unwind_execute+0xc>
 8029142:	43c3      	mvns	r3, r0
 8029144:	f003 0307 	and.w	r3, r3, #7
 8029148:	f44f 627f 	mov.w	r2, #4080	@ 0xff0
 802914c:	411a      	asrs	r2, r3
 802914e:	0701      	lsls	r1, r0, #28
 8029150:	f402 627f 	and.w	r2, r2, #4080	@ 0xff0
 8029154:	d501      	bpl.n	802915a <__gnu_unwind_execute+0x7a>
 8029156:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 802915a:	2300      	movs	r3, #0
 802915c:	4619      	mov	r1, r3
 802915e:	4630      	mov	r0, r6
 8029160:	f7ff fe1c 	bl	8028d9c <_Unwind_VRS_Pop>
 8029164:	2800      	cmp	r0, #0
 8029166:	d0c1      	beq.n	80290ec <__gnu_unwind_execute+0xc>
 8029168:	2009      	movs	r0, #9
 802916a:	b005      	add	sp, #20
 802916c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8029170:	2bb0      	cmp	r3, #176	@ 0xb0
 8029172:	d068      	beq.n	8029246 <__gnu_unwind_execute+0x166>
 8029174:	2bc0      	cmp	r3, #192	@ 0xc0
 8029176:	d13f      	bne.n	80291f8 <__gnu_unwind_execute+0x118>
 8029178:	28c6      	cmp	r0, #198	@ 0xc6
 802917a:	f000 80cc 	beq.w	8029316 <__gnu_unwind_execute+0x236>
 802917e:	28c7      	cmp	r0, #199	@ 0xc7
 8029180:	f000 80df 	beq.w	8029342 <__gnu_unwind_execute+0x262>
 8029184:	f000 03f8 	and.w	r3, r0, #248	@ 0xf8
 8029188:	2bc0      	cmp	r3, #192	@ 0xc0
 802918a:	f000 80ec 	beq.w	8029366 <__gnu_unwind_execute+0x286>
 802918e:	28c8      	cmp	r0, #200	@ 0xc8
 8029190:	f000 80f7 	beq.w	8029382 <__gnu_unwind_execute+0x2a2>
 8029194:	28c9      	cmp	r0, #201	@ 0xc9
 8029196:	d1e7      	bne.n	8029168 <__gnu_unwind_execute+0x88>
 8029198:	4628      	mov	r0, r5
 802919a:	f7ff ff75 	bl	8029088 <next_unwind_byte>
 802919e:	0302      	lsls	r2, r0, #12
 80291a0:	f000 000f 	and.w	r0, r0, #15
 80291a4:	f402 2270 	and.w	r2, r2, #983040	@ 0xf0000
 80291a8:	3001      	adds	r0, #1
 80291aa:	4302      	orrs	r2, r0
 80291ac:	2101      	movs	r1, #1
 80291ae:	2305      	movs	r3, #5
 80291b0:	4630      	mov	r0, r6
 80291b2:	f7ff fdf3 	bl	8028d9c <_Unwind_VRS_Pop>
 80291b6:	2800      	cmp	r0, #0
 80291b8:	d098      	beq.n	80290ec <__gnu_unwind_execute+0xc>
 80291ba:	e7d5      	b.n	8029168 <__gnu_unwind_execute+0x88>
 80291bc:	0083      	lsls	r3, r0, #2
 80291be:	b2db      	uxtb	r3, r3
 80291c0:	f103 0804 	add.w	r8, r3, #4
 80291c4:	f10d 0908 	add.w	r9, sp, #8
 80291c8:	2300      	movs	r3, #0
 80291ca:	4619      	mov	r1, r3
 80291cc:	f8cd 9000 	str.w	r9, [sp]
 80291d0:	220d      	movs	r2, #13
 80291d2:	4630      	mov	r0, r6
 80291d4:	f7ff fbec 	bl	80289b0 <_Unwind_VRS_Get>
 80291d8:	9a02      	ldr	r2, [sp, #8]
 80291da:	f8cd 9000 	str.w	r9, [sp]
 80291de:	0660      	lsls	r0, r4, #25
 80291e0:	bf4c      	ite	mi
 80291e2:	eba2 0208 	submi.w	r2, r2, r8
 80291e6:	4442      	addpl	r2, r8
 80291e8:	2300      	movs	r3, #0
 80291ea:	9202      	str	r2, [sp, #8]
 80291ec:	4619      	mov	r1, r3
 80291ee:	220d      	movs	r2, #13
 80291f0:	4630      	mov	r0, r6
 80291f2:	f7ff fc05 	bl	8028a00 <_Unwind_VRS_Set>
 80291f6:	e779      	b.n	80290ec <__gnu_unwind_execute+0xc>
 80291f8:	f000 03f8 	and.w	r3, r0, #248	@ 0xf8
 80291fc:	2bd0      	cmp	r3, #208	@ 0xd0
 80291fe:	d1b3      	bne.n	8029168 <__gnu_unwind_execute+0x88>
 8029200:	f000 0207 	and.w	r2, r0, #7
 8029204:	3201      	adds	r2, #1
 8029206:	2305      	movs	r3, #5
 8029208:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 802920c:	2101      	movs	r1, #1
 802920e:	4630      	mov	r0, r6
 8029210:	f7ff fdc4 	bl	8028d9c <_Unwind_VRS_Pop>
 8029214:	2800      	cmp	r0, #0
 8029216:	f43f af69 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 802921a:	e7a5      	b.n	8029168 <__gnu_unwind_execute+0x88>
 802921c:	4628      	mov	r0, r5
 802921e:	f7ff ff33 	bl	8029088 <next_unwind_byte>
 8029222:	0224      	lsls	r4, r4, #8
 8029224:	4320      	orrs	r0, r4
 8029226:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
 802922a:	d09d      	beq.n	8029168 <__gnu_unwind_execute+0x88>
 802922c:	0104      	lsls	r4, r0, #4
 802922e:	2300      	movs	r3, #0
 8029230:	b2a2      	uxth	r2, r4
 8029232:	4619      	mov	r1, r3
 8029234:	4630      	mov	r0, r6
 8029236:	f7ff fdb1 	bl	8028d9c <_Unwind_VRS_Pop>
 802923a:	2800      	cmp	r0, #0
 802923c:	d194      	bne.n	8029168 <__gnu_unwind_execute+0x88>
 802923e:	f3c4 30c0 	ubfx	r0, r4, #15, #1
 8029242:	4307      	orrs	r7, r0
 8029244:	e752      	b.n	80290ec <__gnu_unwind_execute+0xc>
 8029246:	f1a0 03b1 	sub.w	r3, r0, #177	@ 0xb1
 802924a:	2b04      	cmp	r3, #4
 802924c:	f200 80b5 	bhi.w	80293ba <__gnu_unwind_execute+0x2da>
 8029250:	e8df f003 	tbb	[pc, r3]
 8029254:	0c162957 	.word	0x0c162957
 8029258:	03          	.byte	0x03
 8029259:	00          	.byte	0x00
 802925a:	aa03      	add	r2, sp, #12
 802925c:	2300      	movs	r3, #0
 802925e:	9200      	str	r2, [sp, #0]
 8029260:	4619      	mov	r1, r3
 8029262:	220d      	movs	r2, #13
 8029264:	4630      	mov	r0, r6
 8029266:	f7ff fba3 	bl	80289b0 <_Unwind_VRS_Get>
 802926a:	e73f      	b.n	80290ec <__gnu_unwind_execute+0xc>
 802926c:	2300      	movs	r3, #0
 802926e:	461a      	mov	r2, r3
 8029270:	2105      	movs	r1, #5
 8029272:	4630      	mov	r0, r6
 8029274:	f7ff fd92 	bl	8028d9c <_Unwind_VRS_Pop>
 8029278:	2800      	cmp	r0, #0
 802927a:	f43f af37 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 802927e:	e773      	b.n	8029168 <__gnu_unwind_execute+0x88>
 8029280:	4628      	mov	r0, r5
 8029282:	f7ff ff01 	bl	8029088 <next_unwind_byte>
 8029286:	0302      	lsls	r2, r0, #12
 8029288:	f000 000f 	and.w	r0, r0, #15
 802928c:	3001      	adds	r0, #1
 802928e:	f402 2270 	and.w	r2, r2, #983040	@ 0xf0000
 8029292:	2301      	movs	r3, #1
 8029294:	4302      	orrs	r2, r0
 8029296:	4619      	mov	r1, r3
 8029298:	4630      	mov	r0, r6
 802929a:	f7ff fd7f 	bl	8028d9c <_Unwind_VRS_Pop>
 802929e:	2800      	cmp	r0, #0
 80292a0:	f43f af24 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 80292a4:	e760      	b.n	8029168 <__gnu_unwind_execute+0x88>
 80292a6:	2300      	movs	r3, #0
 80292a8:	f10d 0908 	add.w	r9, sp, #8
 80292ac:	220d      	movs	r2, #13
 80292ae:	4619      	mov	r1, r3
 80292b0:	f8cd 9000 	str.w	r9, [sp]
 80292b4:	4630      	mov	r0, r6
 80292b6:	f7ff fb7b 	bl	80289b0 <_Unwind_VRS_Get>
 80292ba:	4628      	mov	r0, r5
 80292bc:	f7ff fee4 	bl	8029088 <next_unwind_byte>
 80292c0:	0602      	lsls	r2, r0, #24
 80292c2:	9c02      	ldr	r4, [sp, #8]
 80292c4:	f04f 0802 	mov.w	r8, #2
 80292c8:	d50c      	bpl.n	80292e4 <__gnu_unwind_execute+0x204>
 80292ca:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80292ce:	fa00 f008 	lsl.w	r0, r0, r8
 80292d2:	4404      	add	r4, r0
 80292d4:	4628      	mov	r0, r5
 80292d6:	9402      	str	r4, [sp, #8]
 80292d8:	f7ff fed6 	bl	8029088 <next_unwind_byte>
 80292dc:	0603      	lsls	r3, r0, #24
 80292de:	f108 0807 	add.w	r8, r8, #7
 80292e2:	d4f2      	bmi.n	80292ca <__gnu_unwind_execute+0x1ea>
 80292e4:	fa00 f008 	lsl.w	r0, r0, r8
 80292e8:	f504 7401 	add.w	r4, r4, #516	@ 0x204
 80292ec:	4420      	add	r0, r4
 80292ee:	2300      	movs	r3, #0
 80292f0:	9002      	str	r0, [sp, #8]
 80292f2:	f8cd 9000 	str.w	r9, [sp]
 80292f6:	220d      	movs	r2, #13
 80292f8:	4619      	mov	r1, r3
 80292fa:	4630      	mov	r0, r6
 80292fc:	f7ff fb80 	bl	8028a00 <_Unwind_VRS_Set>
 8029300:	e6f4      	b.n	80290ec <__gnu_unwind_execute+0xc>
 8029302:	4628      	mov	r0, r5
 8029304:	f7ff fec0 	bl	8029088 <next_unwind_byte>
 8029308:	1e43      	subs	r3, r0, #1
 802930a:	b2db      	uxtb	r3, r3
 802930c:	2b0e      	cmp	r3, #14
 802930e:	4602      	mov	r2, r0
 8029310:	f67f af23 	bls.w	802915a <__gnu_unwind_execute+0x7a>
 8029314:	e728      	b.n	8029168 <__gnu_unwind_execute+0x88>
 8029316:	4628      	mov	r0, r5
 8029318:	f7ff feb6 	bl	8029088 <next_unwind_byte>
 802931c:	0302      	lsls	r2, r0, #12
 802931e:	f000 000f 	and.w	r0, r0, #15
 8029322:	3001      	adds	r0, #1
 8029324:	f402 2270 	and.w	r2, r2, #983040	@ 0xf0000
 8029328:	2303      	movs	r3, #3
 802932a:	4302      	orrs	r2, r0
 802932c:	4619      	mov	r1, r3
 802932e:	4630      	mov	r0, r6
 8029330:	f7ff fd34 	bl	8028d9c <_Unwind_VRS_Pop>
 8029334:	2800      	cmp	r0, #0
 8029336:	f43f aed9 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 802933a:	e715      	b.n	8029168 <__gnu_unwind_execute+0x88>
 802933c:	b36f      	cbz	r7, 802939a <__gnu_unwind_execute+0x2ba>
 802933e:	2000      	movs	r0, #0
 8029340:	e713      	b.n	802916a <__gnu_unwind_execute+0x8a>
 8029342:	4628      	mov	r0, r5
 8029344:	f7ff fea0 	bl	8029088 <next_unwind_byte>
 8029348:	1e43      	subs	r3, r0, #1
 802934a:	b2db      	uxtb	r3, r3
 802934c:	2b0e      	cmp	r3, #14
 802934e:	4602      	mov	r2, r0
 8029350:	f63f af0a 	bhi.w	8029168 <__gnu_unwind_execute+0x88>
 8029354:	2300      	movs	r3, #0
 8029356:	2104      	movs	r1, #4
 8029358:	4630      	mov	r0, r6
 802935a:	f7ff fd1f 	bl	8028d9c <_Unwind_VRS_Pop>
 802935e:	2800      	cmp	r0, #0
 8029360:	f43f aec4 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 8029364:	e700      	b.n	8029168 <__gnu_unwind_execute+0x88>
 8029366:	f000 020f 	and.w	r2, r0, #15
 802936a:	3201      	adds	r2, #1
 802936c:	2303      	movs	r3, #3
 802936e:	f442 2220 	orr.w	r2, r2, #655360	@ 0xa0000
 8029372:	4619      	mov	r1, r3
 8029374:	4630      	mov	r0, r6
 8029376:	f7ff fd11 	bl	8028d9c <_Unwind_VRS_Pop>
 802937a:	2800      	cmp	r0, #0
 802937c:	f43f aeb6 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 8029380:	e6f2      	b.n	8029168 <__gnu_unwind_execute+0x88>
 8029382:	4628      	mov	r0, r5
 8029384:	f7ff fe80 	bl	8029088 <next_unwind_byte>
 8029388:	f000 02f0 	and.w	r2, r0, #240	@ 0xf0
 802938c:	f000 030f 	and.w	r3, r0, #15
 8029390:	3210      	adds	r2, #16
 8029392:	3301      	adds	r3, #1
 8029394:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8029398:	e708      	b.n	80291ac <__gnu_unwind_execute+0xcc>
 802939a:	ac02      	add	r4, sp, #8
 802939c:	463b      	mov	r3, r7
 802939e:	4639      	mov	r1, r7
 80293a0:	9400      	str	r4, [sp, #0]
 80293a2:	220e      	movs	r2, #14
 80293a4:	4630      	mov	r0, r6
 80293a6:	f7ff fb03 	bl	80289b0 <_Unwind_VRS_Get>
 80293aa:	220f      	movs	r2, #15
 80293ac:	9400      	str	r4, [sp, #0]
 80293ae:	463b      	mov	r3, r7
 80293b0:	4639      	mov	r1, r7
 80293b2:	4630      	mov	r0, r6
 80293b4:	f7ff fb24 	bl	8028a00 <_Unwind_VRS_Set>
 80293b8:	e7c1      	b.n	802933e <__gnu_unwind_execute+0x25e>
 80293ba:	f000 03fc 	and.w	r3, r0, #252	@ 0xfc
 80293be:	2bb4      	cmp	r3, #180	@ 0xb4
 80293c0:	f43f aed2 	beq.w	8029168 <__gnu_unwind_execute+0x88>
 80293c4:	f000 0207 	and.w	r2, r0, #7
 80293c8:	3201      	adds	r2, #1
 80293ca:	2301      	movs	r3, #1
 80293cc:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
 80293d0:	4619      	mov	r1, r3
 80293d2:	4630      	mov	r0, r6
 80293d4:	f7ff fce2 	bl	8028d9c <_Unwind_VRS_Pop>
 80293d8:	2800      	cmp	r0, #0
 80293da:	f43f ae87 	beq.w	80290ec <__gnu_unwind_execute+0xc>
 80293de:	e6c3      	b.n	8029168 <__gnu_unwind_execute+0x88>

080293e0 <__gnu_unwind_frame>:
 80293e0:	b510      	push	{r4, lr}
 80293e2:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
 80293e4:	6853      	ldr	r3, [r2, #4]
 80293e6:	b084      	sub	sp, #16
 80293e8:	f04f 0c03 	mov.w	ip, #3
 80293ec:	3208      	adds	r2, #8
 80293ee:	021c      	lsls	r4, r3, #8
 80293f0:	4608      	mov	r0, r1
 80293f2:	0e1b      	lsrs	r3, r3, #24
 80293f4:	a901      	add	r1, sp, #4
 80293f6:	9401      	str	r4, [sp, #4]
 80293f8:	9202      	str	r2, [sp, #8]
 80293fa:	f88d c00c 	strb.w	ip, [sp, #12]
 80293fe:	f88d 300d 	strb.w	r3, [sp, #13]
 8029402:	f7ff fe6d 	bl	80290e0 <__gnu_unwind_execute>
 8029406:	b004      	add	sp, #16
 8029408:	bd10      	pop	{r4, pc}
 802940a:	bf00      	nop

0802940c <_Unwind_GetRegionStart>:
 802940c:	b508      	push	{r3, lr}
 802940e:	f7ff fe65 	bl	80290dc <unwind_UCB_from_context>
 8029412:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8029414:	bd08      	pop	{r3, pc}
 8029416:	bf00      	nop

08029418 <_Unwind_GetLanguageSpecificData>:
 8029418:	b508      	push	{r3, lr}
 802941a:	f7ff fe5f 	bl	80290dc <unwind_UCB_from_context>
 802941e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8029420:	79c3      	ldrb	r3, [r0, #7]
 8029422:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8029426:	3008      	adds	r0, #8
 8029428:	bd08      	pop	{r3, pc}
 802942a:	bf00      	nop

0802942c <_Unwind_GetDataRelBase>:
 802942c:	b508      	push	{r3, lr}
 802942e:	f7f9 fe79 	bl	8023124 <abort>

08029432 <_Unwind_GetTextRelBase>:
 8029432:	b508      	push	{r3, lr}
 8029434:	f7ff fffa 	bl	802942c <_Unwind_GetDataRelBase>

08029438 <_close>:
 8029438:	4b02      	ldr	r3, [pc, #8]	@ (8029444 <_close+0xc>)
 802943a:	2258      	movs	r2, #88	@ 0x58
 802943c:	601a      	str	r2, [r3, #0]
 802943e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8029442:	4770      	bx	lr
 8029444:	2000d6c0 	.word	0x2000d6c0

08029448 <_fstat>:
 8029448:	4b02      	ldr	r3, [pc, #8]	@ (8029454 <_fstat+0xc>)
 802944a:	2258      	movs	r2, #88	@ 0x58
 802944c:	601a      	str	r2, [r3, #0]
 802944e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8029452:	4770      	bx	lr
 8029454:	2000d6c0 	.word	0x2000d6c0

08029458 <_getpid>:
 8029458:	4b02      	ldr	r3, [pc, #8]	@ (8029464 <_getpid+0xc>)
 802945a:	2258      	movs	r2, #88	@ 0x58
 802945c:	601a      	str	r2, [r3, #0]
 802945e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8029462:	4770      	bx	lr
 8029464:	2000d6c0 	.word	0x2000d6c0

08029468 <_isatty>:
 8029468:	4b02      	ldr	r3, [pc, #8]	@ (8029474 <_isatty+0xc>)
 802946a:	2258      	movs	r2, #88	@ 0x58
 802946c:	601a      	str	r2, [r3, #0]
 802946e:	2000      	movs	r0, #0
 8029470:	4770      	bx	lr
 8029472:	bf00      	nop
 8029474:	2000d6c0 	.word	0x2000d6c0

08029478 <_kill>:
 8029478:	4b02      	ldr	r3, [pc, #8]	@ (8029484 <_kill+0xc>)
 802947a:	2258      	movs	r2, #88	@ 0x58
 802947c:	601a      	str	r2, [r3, #0]
 802947e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8029482:	4770      	bx	lr
 8029484:	2000d6c0 	.word	0x2000d6c0

08029488 <_lseek>:
 8029488:	4b02      	ldr	r3, [pc, #8]	@ (8029494 <_lseek+0xc>)
 802948a:	2258      	movs	r2, #88	@ 0x58
 802948c:	601a      	str	r2, [r3, #0]
 802948e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8029492:	4770      	bx	lr
 8029494:	2000d6c0 	.word	0x2000d6c0

08029498 <_read>:
 8029498:	4b02      	ldr	r3, [pc, #8]	@ (80294a4 <_read+0xc>)
 802949a:	2258      	movs	r2, #88	@ 0x58
 802949c:	601a      	str	r2, [r3, #0]
 802949e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80294a2:	4770      	bx	lr
 80294a4:	2000d6c0 	.word	0x2000d6c0

080294a8 <_exit>:
 80294a8:	e7fe      	b.n	80294a8 <_exit>
 80294aa:	bf00      	nop

080294ac <_init>:
 80294ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80294ae:	bf00      	nop
 80294b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80294b2:	bc08      	pop	{r3}
 80294b4:	469e      	mov	lr, r3
 80294b6:	4770      	bx	lr

080294b8 <_fini>:
 80294b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80294ba:	bf00      	nop
 80294bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80294be:	bc08      	pop	{r3}
 80294c0:	469e      	mov	lr, r3
 80294c2:	4770      	bx	lr
